# id;timestamp;commentText;codeText;commentWords;codeWords
JCacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1401714051;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
JCacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1405696904;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@code ThrowableWrapper}: the exception can be handled or modified but it_<em>must</em> be wrapped in a {@code ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,code,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,code,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
JCacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1406128099;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@code ThrowableWrapper}: the exception can be handled or modified but it_<em>must</em> be wrapped in a {@code ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,code,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,code,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
JCacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1414826808;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@code ThrowableWrapper}: the exception can be handled or modified but it_<em>must</em> be wrapped in a {@code ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,code,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,code,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
JCacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1467730834;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@code ThrowableWrapper}: the exception can be handled or modified but it_<em>must</em> be wrapped in a {@code ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,code,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,code,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
JCacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1485810955;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@code ThrowableWrapper}: the exception can be handled or modified but it_<em>must</em> be wrapped in a {@code ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,code,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,code,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
JCacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1496837955;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@code ThrowableWrapper}: the exception can be handled or modified but it_<em>must</em> be wrapped in a {@code ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,code,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,code,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
JCacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1531589372;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@code ThrowableWrapper}: the exception can be handled or modified but it_<em>must</em> be wrapped in a {@code ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,code,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,code,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
JCacheAspectSupport -> public JCacheOperationSource getCacheOperationSource();1396865240;Return the CacheOperationSource for this cache aspect.;public JCacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,jcache,operation,source,get,cache,operation,source,return,this,cache,operation,source
JCacheAspectSupport -> public JCacheOperationSource getCacheOperationSource();1400596774;Return the CacheOperationSource for this cache aspect.;public JCacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,jcache,operation,source,get,cache,operation,source,return,this,cache,operation,source
JCacheAspectSupport -> public JCacheOperationSource getCacheOperationSource();1401714051;Return the CacheOperationSource for this cache aspect.;public JCacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,jcache,operation,source,get,cache,operation,source,return,this,cache,operation,source
JCacheAspectSupport -> public JCacheOperationSource getCacheOperationSource();1405696904;Return the CacheOperationSource for this cache aspect.;public JCacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,jcache,operation,source,get,cache,operation,source,return,this,cache,operation,source
JCacheAspectSupport -> public JCacheOperationSource getCacheOperationSource();1406128099;Return the CacheOperationSource for this cache aspect.;public JCacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,jcache,operation,source,get,cache,operation,source,return,this,cache,operation,source
JCacheAspectSupport -> public JCacheOperationSource getCacheOperationSource();1414826808;Return the CacheOperationSource for this cache aspect.;public JCacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,jcache,operation,source,get,cache,operation,source,return,this,cache,operation,source
JCacheAspectSupport -> public JCacheOperationSource getCacheOperationSource();1467730834;Return the CacheOperationSource for this cache aspect.;public JCacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,jcache,operation,source,get,cache,operation,source,return,this,cache,operation,source
JCacheAspectSupport -> public JCacheOperationSource getCacheOperationSource();1485810955;Return the CacheOperationSource for this cache aspect.;public JCacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,jcache,operation,source,get,cache,operation,source,return,this,cache,operation,source
JCacheAspectSupport -> public JCacheOperationSource getCacheOperationSource();1496837955;Return the CacheOperationSource for this cache aspect.;public JCacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,jcache,operation,source,get,cache,operation,source,return,this,cache,operation,source
JCacheAspectSupport -> public JCacheOperationSource getCacheOperationSource();1531589372;Return the CacheOperationSource for this cache aspect.;public JCacheOperationSource getCacheOperationSource() {_		Assert.state(this.cacheOperationSource != null, "The 'cacheOperationSource' property is required: " +_				"If there are no cacheable methods, then don't use a cache aspect.")__		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,jcache,operation,source,get,cache,operation,source,assert,state,this,cache,operation,source,null,the,cache,operation,source,property,is,required,if,there,are,no,cacheable,methods,then,don,t,use,a,cache,aspect,return,this,cache,operation,source
