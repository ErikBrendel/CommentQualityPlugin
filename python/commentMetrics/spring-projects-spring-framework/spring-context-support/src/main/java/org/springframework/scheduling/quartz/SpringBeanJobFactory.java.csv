# id;timestamp;commentText;codeText;commentWords;codeWords
SpringBeanJobFactory -> public void setIgnoredUnknownProperties(String... ignoredUnknownProperties);1388939442;Specify the unknown properties (not found in the bean) that should be ignored._<p>Default is {@code null}, indicating that all unknown properties_should be ignored. Specify an empty array to throw an exception in case_of any unknown properties, or a list of property names that should be_ignored if there is no corresponding property found on the particular_job class (all other unknown properties will still trigger an exception).;public void setIgnoredUnknownProperties(String... ignoredUnknownProperties) {_		this.ignoredUnknownProperties = ignoredUnknownProperties__	};specify,the,unknown,properties,not,found,in,the,bean,that,should,be,ignored,p,default,is,code,null,indicating,that,all,unknown,properties,should,be,ignored,specify,an,empty,array,to,throw,an,exception,in,case,of,any,unknown,properties,or,a,list,of,property,names,that,should,be,ignored,if,there,is,no,corresponding,property,found,on,the,particular,job,class,all,other,unknown,properties,will,still,trigger,an,exception;public,void,set,ignored,unknown,properties,string,ignored,unknown,properties,this,ignored,unknown,properties,ignored,unknown,properties
SpringBeanJobFactory -> public void setIgnoredUnknownProperties(String... ignoredUnknownProperties);1388954345;Specify the unknown properties (not found in the bean) that should be ignored._<p>Default is {@code null}, indicating that all unknown properties_should be ignored. Specify an empty array to throw an exception in case_of any unknown properties, or a list of property names that should be_ignored if there is no corresponding property found on the particular_job class (all other unknown properties will still trigger an exception).;public void setIgnoredUnknownProperties(String... ignoredUnknownProperties) {_		this.ignoredUnknownProperties = ignoredUnknownProperties__	};specify,the,unknown,properties,not,found,in,the,bean,that,should,be,ignored,p,default,is,code,null,indicating,that,all,unknown,properties,should,be,ignored,specify,an,empty,array,to,throw,an,exception,in,case,of,any,unknown,properties,or,a,list,of,property,names,that,should,be,ignored,if,there,is,no,corresponding,property,found,on,the,particular,job,class,all,other,unknown,properties,will,still,trigger,an,exception;public,void,set,ignored,unknown,properties,string,ignored,unknown,properties,this,ignored,unknown,properties,ignored,unknown,properties
SpringBeanJobFactory -> public void setIgnoredUnknownProperties(String... ignoredUnknownProperties);1395953963;Specify the unknown properties (not found in the bean) that should be ignored._<p>Default is {@code null}, indicating that all unknown properties_should be ignored. Specify an empty array to throw an exception in case_of any unknown properties, or a list of property names that should be_ignored if there is no corresponding property found on the particular_job class (all other unknown properties will still trigger an exception).;public void setIgnoredUnknownProperties(String... ignoredUnknownProperties) {_		this.ignoredUnknownProperties = ignoredUnknownProperties__	};specify,the,unknown,properties,not,found,in,the,bean,that,should,be,ignored,p,default,is,code,null,indicating,that,all,unknown,properties,should,be,ignored,specify,an,empty,array,to,throw,an,exception,in,case,of,any,unknown,properties,or,a,list,of,property,names,that,should,be,ignored,if,there,is,no,corresponding,property,found,on,the,particular,job,class,all,other,unknown,properties,will,still,trigger,an,exception;public,void,set,ignored,unknown,properties,string,ignored,unknown,properties,this,ignored,unknown,properties,ignored,unknown,properties
SpringBeanJobFactory -> public void setIgnoredUnknownProperties(String... ignoredUnknownProperties);1460032042;Specify the unknown properties (not found in the bean) that should be ignored._<p>Default is {@code null}, indicating that all unknown properties_should be ignored. Specify an empty array to throw an exception in case_of any unknown properties, or a list of property names that should be_ignored if there is no corresponding property found on the particular_job class (all other unknown properties will still trigger an exception).;public void setIgnoredUnknownProperties(String... ignoredUnknownProperties) {_		this.ignoredUnknownProperties = ignoredUnknownProperties__	};specify,the,unknown,properties,not,found,in,the,bean,that,should,be,ignored,p,default,is,code,null,indicating,that,all,unknown,properties,should,be,ignored,specify,an,empty,array,to,throw,an,exception,in,case,of,any,unknown,properties,or,a,list,of,property,names,that,should,be,ignored,if,there,is,no,corresponding,property,found,on,the,particular,job,class,all,other,unknown,properties,will,still,trigger,an,exception;public,void,set,ignored,unknown,properties,string,ignored,unknown,properties,this,ignored,unknown,properties,ignored,unknown,properties
SpringBeanJobFactory -> public void setIgnoredUnknownProperties(String... ignoredUnknownProperties);1498780456;Specify the unknown properties (not found in the bean) that should be ignored._<p>Default is {@code null}, indicating that all unknown properties_should be ignored. Specify an empty array to throw an exception in case_of any unknown properties, or a list of property names that should be_ignored if there is no corresponding property found on the particular_job class (all other unknown properties will still trigger an exception).;public void setIgnoredUnknownProperties(String... ignoredUnknownProperties) {_		this.ignoredUnknownProperties = ignoredUnknownProperties__	};specify,the,unknown,properties,not,found,in,the,bean,that,should,be,ignored,p,default,is,code,null,indicating,that,all,unknown,properties,should,be,ignored,specify,an,empty,array,to,throw,an,exception,in,case,of,any,unknown,properties,or,a,list,of,property,names,that,should,be,ignored,if,there,is,no,corresponding,property,found,on,the,particular,job,class,all,other,unknown,properties,will,still,trigger,an,exception;public,void,set,ignored,unknown,properties,string,ignored,unknown,properties,this,ignored,unknown,properties,ignored,unknown,properties
SpringBeanJobFactory -> public void setIgnoredUnknownProperties(String... ignoredUnknownProperties);1539119605;Specify the unknown properties (not found in the bean) that should be ignored._<p>Default is {@code null}, indicating that all unknown properties_should be ignored. Specify an empty array to throw an exception in case_of any unknown properties, or a list of property names that should be_ignored if there is no corresponding property found on the particular_job class (all other unknown properties will still trigger an exception).;public void setIgnoredUnknownProperties(String... ignoredUnknownProperties) {_		this.ignoredUnknownProperties = ignoredUnknownProperties__	};specify,the,unknown,properties,not,found,in,the,bean,that,should,be,ignored,p,default,is,code,null,indicating,that,all,unknown,properties,should,be,ignored,specify,an,empty,array,to,throw,an,exception,in,case,of,any,unknown,properties,or,a,list,of,property,names,that,should,be,ignored,if,there,is,no,corresponding,property,found,on,the,particular,job,class,all,other,unknown,properties,will,still,trigger,an,exception;public,void,set,ignored,unknown,properties,string,ignored,unknown,properties,this,ignored,unknown,properties,ignored,unknown,properties
SpringBeanJobFactory -> @Override 	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception;1328020251;Create the job instance, populating it with property values taken_from the scheduler context, job data map and trigger data map.;@Override_	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception {_		Object job = super.createJobInstance(bundle)__		BeanWrapper bw = PropertyAccessorFactory.forBeanPropertyAccess(job)__		if (isEligibleForPropertyPopulation(bw.getWrappedInstance())) {_			MutablePropertyValues pvs = new MutablePropertyValues()__			if (this.schedulerContext != null) {_				pvs.addPropertyValues(this.schedulerContext)__			}_			pvs.addPropertyValues(getJobDetailDataMap(bundle))__			pvs.addPropertyValues(getTriggerDataMap(bundle))__			if (this.ignoredUnknownProperties != null) {_				for (String propName : this.ignoredUnknownProperties) {_					if (pvs.contains(propName) && !bw.isWritableProperty(propName)) {_						pvs.removePropertyValue(propName)__					}_				}_				bw.setPropertyValues(pvs)__			}_			else {_				bw.setPropertyValues(pvs, true)__			}_		}_		return job__	};create,the,job,instance,populating,it,with,property,values,taken,from,the,scheduler,context,job,data,map,and,trigger,data,map;override,protected,object,create,job,instance,trigger,fired,bundle,bundle,throws,exception,object,job,super,create,job,instance,bundle,bean,wrapper,bw,property,accessor,factory,for,bean,property,access,job,if,is,eligible,for,property,population,bw,get,wrapped,instance,mutable,property,values,pvs,new,mutable,property,values,if,this,scheduler,context,null,pvs,add,property,values,this,scheduler,context,pvs,add,property,values,get,job,detail,data,map,bundle,pvs,add,property,values,get,trigger,data,map,bundle,if,this,ignored,unknown,properties,null,for,string,prop,name,this,ignored,unknown,properties,if,pvs,contains,prop,name,bw,is,writable,property,prop,name,pvs,remove,property,value,prop,name,bw,set,property,values,pvs,else,bw,set,property,values,pvs,true,return,job
SpringBeanJobFactory -> @Override 	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception;1356735495;Create the job instance, populating it with property values taken_from the scheduler context, job data map and trigger data map.;@Override_	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception {_		Object job = super.createJobInstance(bundle)__		BeanWrapper bw = PropertyAccessorFactory.forBeanPropertyAccess(job)__		if (isEligibleForPropertyPopulation(bw.getWrappedInstance())) {_			MutablePropertyValues pvs = new MutablePropertyValues()__			if (this.schedulerContext != null) {_				pvs.addPropertyValues(this.schedulerContext)__			}_			pvs.addPropertyValues(getJobDetailDataMap(bundle))__			pvs.addPropertyValues(getTriggerDataMap(bundle))__			if (this.ignoredUnknownProperties != null) {_				for (String propName : this.ignoredUnknownProperties) {_					if (pvs.contains(propName) && !bw.isWritableProperty(propName)) {_						pvs.removePropertyValue(propName)__					}_				}_				bw.setPropertyValues(pvs)__			}_			else {_				bw.setPropertyValues(pvs, true)__			}_		}_		return job__	};create,the,job,instance,populating,it,with,property,values,taken,from,the,scheduler,context,job,data,map,and,trigger,data,map;override,protected,object,create,job,instance,trigger,fired,bundle,bundle,throws,exception,object,job,super,create,job,instance,bundle,bean,wrapper,bw,property,accessor,factory,for,bean,property,access,job,if,is,eligible,for,property,population,bw,get,wrapped,instance,mutable,property,values,pvs,new,mutable,property,values,if,this,scheduler,context,null,pvs,add,property,values,this,scheduler,context,pvs,add,property,values,get,job,detail,data,map,bundle,pvs,add,property,values,get,trigger,data,map,bundle,if,this,ignored,unknown,properties,null,for,string,prop,name,this,ignored,unknown,properties,if,pvs,contains,prop,name,bw,is,writable,property,prop,name,pvs,remove,property,value,prop,name,bw,set,property,values,pvs,else,bw,set,property,values,pvs,true,return,job
SpringBeanJobFactory -> @Override 	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception;1357119239;Create the job instance, populating it with property values taken_from the scheduler context, job data map and trigger data map.;@Override_	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception {_		Object job = super.createJobInstance(bundle)__		BeanWrapper bw = PropertyAccessorFactory.forBeanPropertyAccess(job)__		if (isEligibleForPropertyPopulation(bw.getWrappedInstance())) {_			MutablePropertyValues pvs = new MutablePropertyValues()__			if (this.schedulerContext != null) {_				pvs.addPropertyValues(this.schedulerContext)__			}_			pvs.addPropertyValues(getJobDetailDataMap(bundle))__			pvs.addPropertyValues(getTriggerDataMap(bundle))__			if (this.ignoredUnknownProperties != null) {_				for (String propName : this.ignoredUnknownProperties) {_					if (pvs.contains(propName) && !bw.isWritableProperty(propName)) {_						pvs.removePropertyValue(propName)__					}_				}_				bw.setPropertyValues(pvs)__			}_			else {_				bw.setPropertyValues(pvs, true)__			}_		}_		return job__	};create,the,job,instance,populating,it,with,property,values,taken,from,the,scheduler,context,job,data,map,and,trigger,data,map;override,protected,object,create,job,instance,trigger,fired,bundle,bundle,throws,exception,object,job,super,create,job,instance,bundle,bean,wrapper,bw,property,accessor,factory,for,bean,property,access,job,if,is,eligible,for,property,population,bw,get,wrapped,instance,mutable,property,values,pvs,new,mutable,property,values,if,this,scheduler,context,null,pvs,add,property,values,this,scheduler,context,pvs,add,property,values,get,job,detail,data,map,bundle,pvs,add,property,values,get,trigger,data,map,bundle,if,this,ignored,unknown,properties,null,for,string,prop,name,this,ignored,unknown,properties,if,pvs,contains,prop,name,bw,is,writable,property,prop,name,pvs,remove,property,value,prop,name,bw,set,property,values,pvs,else,bw,set,property,values,pvs,true,return,job
SpringBeanJobFactory -> @Override 	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception;1363730577;Create the job instance, populating it with property values taken_from the scheduler context, job data map and trigger data map.;@Override_	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception {_		Object job = super.createJobInstance(bundle)__		BeanWrapper bw = PropertyAccessorFactory.forBeanPropertyAccess(job)__		if (isEligibleForPropertyPopulation(bw.getWrappedInstance())) {_			MutablePropertyValues pvs = new MutablePropertyValues()__			if (this.schedulerContext != null) {_				pvs.addPropertyValues(this.schedulerContext)__			}_			pvs.addPropertyValues(getJobDetailDataMap(bundle))__			pvs.addPropertyValues(getTriggerDataMap(bundle))__			if (this.ignoredUnknownProperties != null) {_				for (String propName : this.ignoredUnknownProperties) {_					if (pvs.contains(propName) && !bw.isWritableProperty(propName)) {_						pvs.removePropertyValue(propName)__					}_				}_				bw.setPropertyValues(pvs)__			}_			else {_				bw.setPropertyValues(pvs, true)__			}_		}_		return job__	};create,the,job,instance,populating,it,with,property,values,taken,from,the,scheduler,context,job,data,map,and,trigger,data,map;override,protected,object,create,job,instance,trigger,fired,bundle,bundle,throws,exception,object,job,super,create,job,instance,bundle,bean,wrapper,bw,property,accessor,factory,for,bean,property,access,job,if,is,eligible,for,property,population,bw,get,wrapped,instance,mutable,property,values,pvs,new,mutable,property,values,if,this,scheduler,context,null,pvs,add,property,values,this,scheduler,context,pvs,add,property,values,get,job,detail,data,map,bundle,pvs,add,property,values,get,trigger,data,map,bundle,if,this,ignored,unknown,properties,null,for,string,prop,name,this,ignored,unknown,properties,if,pvs,contains,prop,name,bw,is,writable,property,prop,name,pvs,remove,property,value,prop,name,bw,set,property,values,pvs,else,bw,set,property,values,pvs,true,return,job
SpringBeanJobFactory -> @Override 	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception;1368482696;Create the job instance, populating it with property values taken_from the scheduler context, job data map and trigger data map.;@Override_	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception {_		Object job = super.createJobInstance(bundle)__		BeanWrapper bw = PropertyAccessorFactory.forBeanPropertyAccess(job)__		if (isEligibleForPropertyPopulation(bw.getWrappedInstance())) {_			MutablePropertyValues pvs = new MutablePropertyValues()__			if (this.schedulerContext != null) {_				pvs.addPropertyValues(this.schedulerContext)__			}_			pvs.addPropertyValues(getJobDetailDataMap(bundle))__			pvs.addPropertyValues(getTriggerDataMap(bundle))__			if (this.ignoredUnknownProperties != null) {_				for (String propName : this.ignoredUnknownProperties) {_					if (pvs.contains(propName) && !bw.isWritableProperty(propName)) {_						pvs.removePropertyValue(propName)__					}_				}_				bw.setPropertyValues(pvs)__			}_			else {_				bw.setPropertyValues(pvs, true)__			}_		}_		return job__	};create,the,job,instance,populating,it,with,property,values,taken,from,the,scheduler,context,job,data,map,and,trigger,data,map;override,protected,object,create,job,instance,trigger,fired,bundle,bundle,throws,exception,object,job,super,create,job,instance,bundle,bean,wrapper,bw,property,accessor,factory,for,bean,property,access,job,if,is,eligible,for,property,population,bw,get,wrapped,instance,mutable,property,values,pvs,new,mutable,property,values,if,this,scheduler,context,null,pvs,add,property,values,this,scheduler,context,pvs,add,property,values,get,job,detail,data,map,bundle,pvs,add,property,values,get,trigger,data,map,bundle,if,this,ignored,unknown,properties,null,for,string,prop,name,this,ignored,unknown,properties,if,pvs,contains,prop,name,bw,is,writable,property,prop,name,pvs,remove,property,value,prop,name,bw,set,property,values,pvs,else,bw,set,property,values,pvs,true,return,job
SpringBeanJobFactory -> @Override 	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception;1375198429;Create the job instance, populating it with property values taken_from the scheduler context, job data map and trigger data map.;@Override_	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception {_		Object job = super.createJobInstance(bundle)__		BeanWrapper bw = PropertyAccessorFactory.forBeanPropertyAccess(job)__		if (isEligibleForPropertyPopulation(bw.getWrappedInstance())) {_			MutablePropertyValues pvs = new MutablePropertyValues()__			if (this.schedulerContext != null) {_				pvs.addPropertyValues(this.schedulerContext)__			}_			pvs.addPropertyValues(getJobDetailDataMap(bundle))__			pvs.addPropertyValues(getTriggerDataMap(bundle))__			if (this.ignoredUnknownProperties != null) {_				for (String propName : this.ignoredUnknownProperties) {_					if (pvs.contains(propName) && !bw.isWritableProperty(propName)) {_						pvs.removePropertyValue(propName)__					}_				}_				bw.setPropertyValues(pvs)__			}_			else {_				bw.setPropertyValues(pvs, true)__			}_		}_		return job__	};create,the,job,instance,populating,it,with,property,values,taken,from,the,scheduler,context,job,data,map,and,trigger,data,map;override,protected,object,create,job,instance,trigger,fired,bundle,bundle,throws,exception,object,job,super,create,job,instance,bundle,bean,wrapper,bw,property,accessor,factory,for,bean,property,access,job,if,is,eligible,for,property,population,bw,get,wrapped,instance,mutable,property,values,pvs,new,mutable,property,values,if,this,scheduler,context,null,pvs,add,property,values,this,scheduler,context,pvs,add,property,values,get,job,detail,data,map,bundle,pvs,add,property,values,get,trigger,data,map,bundle,if,this,ignored,unknown,properties,null,for,string,prop,name,this,ignored,unknown,properties,if,pvs,contains,prop,name,bw,is,writable,property,prop,name,pvs,remove,property,value,prop,name,bw,set,property,values,pvs,else,bw,set,property,values,pvs,true,return,job
SpringBeanJobFactory -> @Override 	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception;1388939442;Create the job instance, populating it with property values taken_from the scheduler context, job data map and trigger data map.;@Override_	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception {_		Object job = super.createJobInstance(bundle)__		BeanWrapper bw = PropertyAccessorFactory.forBeanPropertyAccess(job)__		if (isEligibleForPropertyPopulation(bw.getWrappedInstance())) {_			MutablePropertyValues pvs = new MutablePropertyValues()__			if (this.schedulerContext != null) {_				pvs.addPropertyValues(this.schedulerContext)__			}_			pvs.addPropertyValues(getJobDetailDataMap(bundle))__			pvs.addPropertyValues(getTriggerDataMap(bundle))__			if (this.ignoredUnknownProperties != null) {_				for (String propName : this.ignoredUnknownProperties) {_					if (pvs.contains(propName) && !bw.isWritableProperty(propName)) {_						pvs.removePropertyValue(propName)__					}_				}_				bw.setPropertyValues(pvs)__			}_			else {_				bw.setPropertyValues(pvs, true)__			}_		}_		return job__	};create,the,job,instance,populating,it,with,property,values,taken,from,the,scheduler,context,job,data,map,and,trigger,data,map;override,protected,object,create,job,instance,trigger,fired,bundle,bundle,throws,exception,object,job,super,create,job,instance,bundle,bean,wrapper,bw,property,accessor,factory,for,bean,property,access,job,if,is,eligible,for,property,population,bw,get,wrapped,instance,mutable,property,values,pvs,new,mutable,property,values,if,this,scheduler,context,null,pvs,add,property,values,this,scheduler,context,pvs,add,property,values,get,job,detail,data,map,bundle,pvs,add,property,values,get,trigger,data,map,bundle,if,this,ignored,unknown,properties,null,for,string,prop,name,this,ignored,unknown,properties,if,pvs,contains,prop,name,bw,is,writable,property,prop,name,pvs,remove,property,value,prop,name,bw,set,property,values,pvs,else,bw,set,property,values,pvs,true,return,job
SpringBeanJobFactory -> @Override 	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception;1388954345;Create the job instance, populating it with property values taken_from the scheduler context, job data map and trigger data map.;@Override_	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception {_		Object job = super.createJobInstance(bundle)__		BeanWrapper bw = PropertyAccessorFactory.forBeanPropertyAccess(job)__		if (isEligibleForPropertyPopulation(bw.getWrappedInstance())) {_			MutablePropertyValues pvs = new MutablePropertyValues()__			if (this.schedulerContext != null) {_				pvs.addPropertyValues(this.schedulerContext)__			}_			pvs.addPropertyValues(getJobDetailDataMap(bundle))__			pvs.addPropertyValues(getTriggerDataMap(bundle))__			if (this.ignoredUnknownProperties != null) {_				for (String propName : this.ignoredUnknownProperties) {_					if (pvs.contains(propName) && !bw.isWritableProperty(propName)) {_						pvs.removePropertyValue(propName)__					}_				}_				bw.setPropertyValues(pvs)__			}_			else {_				bw.setPropertyValues(pvs, true)__			}_		}_		return job__	};create,the,job,instance,populating,it,with,property,values,taken,from,the,scheduler,context,job,data,map,and,trigger,data,map;override,protected,object,create,job,instance,trigger,fired,bundle,bundle,throws,exception,object,job,super,create,job,instance,bundle,bean,wrapper,bw,property,accessor,factory,for,bean,property,access,job,if,is,eligible,for,property,population,bw,get,wrapped,instance,mutable,property,values,pvs,new,mutable,property,values,if,this,scheduler,context,null,pvs,add,property,values,this,scheduler,context,pvs,add,property,values,get,job,detail,data,map,bundle,pvs,add,property,values,get,trigger,data,map,bundle,if,this,ignored,unknown,properties,null,for,string,prop,name,this,ignored,unknown,properties,if,pvs,contains,prop,name,bw,is,writable,property,prop,name,pvs,remove,property,value,prop,name,bw,set,property,values,pvs,else,bw,set,property,values,pvs,true,return,job
SpringBeanJobFactory -> @Override 	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception;1395953963;Create the job instance, populating it with property values taken_from the scheduler context, job data map and trigger data map.;@Override_	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception {_		Object job = super.createJobInstance(bundle)__		BeanWrapper bw = PropertyAccessorFactory.forBeanPropertyAccess(job)__		if (isEligibleForPropertyPopulation(bw.getWrappedInstance())) {_			MutablePropertyValues pvs = new MutablePropertyValues()__			if (this.schedulerContext != null) {_				pvs.addPropertyValues(this.schedulerContext)__			}_			pvs.addPropertyValues(bundle.getJobDetail().getJobDataMap())__			pvs.addPropertyValues(bundle.getTrigger().getJobDataMap())__			if (this.ignoredUnknownProperties != null) {_				for (String propName : this.ignoredUnknownProperties) {_					if (pvs.contains(propName) && !bw.isWritableProperty(propName)) {_						pvs.removePropertyValue(propName)__					}_				}_				bw.setPropertyValues(pvs)__			}_			else {_				bw.setPropertyValues(pvs, true)__			}_		}_		return job__	};create,the,job,instance,populating,it,with,property,values,taken,from,the,scheduler,context,job,data,map,and,trigger,data,map;override,protected,object,create,job,instance,trigger,fired,bundle,bundle,throws,exception,object,job,super,create,job,instance,bundle,bean,wrapper,bw,property,accessor,factory,for,bean,property,access,job,if,is,eligible,for,property,population,bw,get,wrapped,instance,mutable,property,values,pvs,new,mutable,property,values,if,this,scheduler,context,null,pvs,add,property,values,this,scheduler,context,pvs,add,property,values,bundle,get,job,detail,get,job,data,map,pvs,add,property,values,bundle,get,trigger,get,job,data,map,if,this,ignored,unknown,properties,null,for,string,prop,name,this,ignored,unknown,properties,if,pvs,contains,prop,name,bw,is,writable,property,prop,name,pvs,remove,property,value,prop,name,bw,set,property,values,pvs,else,bw,set,property,values,pvs,true,return,job
SpringBeanJobFactory -> @Override 	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception;1460032042;Create the job instance, populating it with property values taken_from the scheduler context, job data map and trigger data map.;@Override_	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception {_		Object job = super.createJobInstance(bundle)__		if (isEligibleForPropertyPopulation(job)) {_			BeanWrapper bw = PropertyAccessorFactory.forBeanPropertyAccess(job)__			MutablePropertyValues pvs = new MutablePropertyValues()__			if (this.schedulerContext != null) {_				pvs.addPropertyValues(this.schedulerContext)__			}_			pvs.addPropertyValues(bundle.getJobDetail().getJobDataMap())__			pvs.addPropertyValues(bundle.getTrigger().getJobDataMap())__			if (this.ignoredUnknownProperties != null) {_				for (String propName : this.ignoredUnknownProperties) {_					if (pvs.contains(propName) && !bw.isWritableProperty(propName)) {_						pvs.removePropertyValue(propName)__					}_				}_				bw.setPropertyValues(pvs)__			}_			else {_				bw.setPropertyValues(pvs, true)__			}_		}_		return job__	};create,the,job,instance,populating,it,with,property,values,taken,from,the,scheduler,context,job,data,map,and,trigger,data,map;override,protected,object,create,job,instance,trigger,fired,bundle,bundle,throws,exception,object,job,super,create,job,instance,bundle,if,is,eligible,for,property,population,job,bean,wrapper,bw,property,accessor,factory,for,bean,property,access,job,mutable,property,values,pvs,new,mutable,property,values,if,this,scheduler,context,null,pvs,add,property,values,this,scheduler,context,pvs,add,property,values,bundle,get,job,detail,get,job,data,map,pvs,add,property,values,bundle,get,trigger,get,job,data,map,if,this,ignored,unknown,properties,null,for,string,prop,name,this,ignored,unknown,properties,if,pvs,contains,prop,name,bw,is,writable,property,prop,name,pvs,remove,property,value,prop,name,bw,set,property,values,pvs,else,bw,set,property,values,pvs,true,return,job
SpringBeanJobFactory -> @Override 	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception;1495868221;Create the job instance, populating it with property values taken_from the scheduler context, job data map and trigger data map.;@Override_	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception {_		Object job = super.createJobInstance(bundle)__		if (isEligibleForPropertyPopulation(job)) {_			BeanWrapper bw = PropertyAccessorFactory.forBeanPropertyAccess(job)__			MutablePropertyValues pvs = new MutablePropertyValues()__			if (this.schedulerContext != null) {_				pvs.addPropertyValues(this.schedulerContext)__			}_			pvs.addPropertyValues(bundle.getJobDetail().getJobDataMap())__			pvs.addPropertyValues(bundle.getTrigger().getJobDataMap())__			if (this.ignoredUnknownProperties != null) {_				for (String propName : this.ignoredUnknownProperties) {_					if (pvs.contains(propName) && !bw.isWritableProperty(propName)) {_						pvs.removePropertyValue(propName)__					}_				}_				bw.setPropertyValues(pvs)__			}_			else {_				bw.setPropertyValues(pvs, true)__			}_		}_		return job__	};create,the,job,instance,populating,it,with,property,values,taken,from,the,scheduler,context,job,data,map,and,trigger,data,map;override,protected,object,create,job,instance,trigger,fired,bundle,bundle,throws,exception,object,job,super,create,job,instance,bundle,if,is,eligible,for,property,population,job,bean,wrapper,bw,property,accessor,factory,for,bean,property,access,job,mutable,property,values,pvs,new,mutable,property,values,if,this,scheduler,context,null,pvs,add,property,values,this,scheduler,context,pvs,add,property,values,bundle,get,job,detail,get,job,data,map,pvs,add,property,values,bundle,get,trigger,get,job,data,map,if,this,ignored,unknown,properties,null,for,string,prop,name,this,ignored,unknown,properties,if,pvs,contains,prop,name,bw,is,writable,property,prop,name,pvs,remove,property,value,prop,name,bw,set,property,values,pvs,else,bw,set,property,values,pvs,true,return,job
SpringBeanJobFactory -> @Override 	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception;1498780456;Create the job instance, populating it with property values taken_from the scheduler context, job data map and trigger data map.;@Override_	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception {_		Object job = super.createJobInstance(bundle)__		if (isEligibleForPropertyPopulation(job)) {_			BeanWrapper bw = PropertyAccessorFactory.forBeanPropertyAccess(job)__			MutablePropertyValues pvs = new MutablePropertyValues()__			if (this.schedulerContext != null) {_				pvs.addPropertyValues(this.schedulerContext)__			}_			pvs.addPropertyValues(bundle.getJobDetail().getJobDataMap())__			pvs.addPropertyValues(bundle.getTrigger().getJobDataMap())__			if (this.ignoredUnknownProperties != null) {_				for (String propName : this.ignoredUnknownProperties) {_					if (pvs.contains(propName) && !bw.isWritableProperty(propName)) {_						pvs.removePropertyValue(propName)__					}_				}_				bw.setPropertyValues(pvs)__			}_			else {_				bw.setPropertyValues(pvs, true)__			}_		}_		return job__	};create,the,job,instance,populating,it,with,property,values,taken,from,the,scheduler,context,job,data,map,and,trigger,data,map;override,protected,object,create,job,instance,trigger,fired,bundle,bundle,throws,exception,object,job,super,create,job,instance,bundle,if,is,eligible,for,property,population,job,bean,wrapper,bw,property,accessor,factory,for,bean,property,access,job,mutable,property,values,pvs,new,mutable,property,values,if,this,scheduler,context,null,pvs,add,property,values,this,scheduler,context,pvs,add,property,values,bundle,get,job,detail,get,job,data,map,pvs,add,property,values,bundle,get,trigger,get,job,data,map,if,this,ignored,unknown,properties,null,for,string,prop,name,this,ignored,unknown,properties,if,pvs,contains,prop,name,bw,is,writable,property,prop,name,pvs,remove,property,value,prop,name,bw,set,property,values,pvs,else,bw,set,property,values,pvs,true,return,job
SpringBeanJobFactory -> @Override 	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception;1539119605;Create the job instance, populating it with property values taken_from the scheduler context, job data map and trigger data map.;@Override_	protected Object createJobInstance(TriggerFiredBundle bundle) throws Exception {_		Object job = (this.applicationContext != null ?_				this.applicationContext.getAutowireCapableBeanFactory().createBean(_						bundle.getJobDetail().getJobClass(), AutowireCapableBeanFactory.AUTOWIRE_CONSTRUCTOR, false) :_				super.createJobInstance(bundle))___		if (isEligibleForPropertyPopulation(job)) {_			BeanWrapper bw = PropertyAccessorFactory.forBeanPropertyAccess(job)__			MutablePropertyValues pvs = new MutablePropertyValues()__			if (this.schedulerContext != null) {_				pvs.addPropertyValues(this.schedulerContext)__			}_			pvs.addPropertyValues(bundle.getJobDetail().getJobDataMap())__			pvs.addPropertyValues(bundle.getTrigger().getJobDataMap())__			if (this.ignoredUnknownProperties != null) {_				for (String propName : this.ignoredUnknownProperties) {_					if (pvs.contains(propName) && !bw.isWritableProperty(propName)) {_						pvs.removePropertyValue(propName)__					}_				}_				bw.setPropertyValues(pvs)__			}_			else {_				bw.setPropertyValues(pvs, true)__			}_		}__		return job__	};create,the,job,instance,populating,it,with,property,values,taken,from,the,scheduler,context,job,data,map,and,trigger,data,map;override,protected,object,create,job,instance,trigger,fired,bundle,bundle,throws,exception,object,job,this,application,context,null,this,application,context,get,autowire,capable,bean,factory,create,bean,bundle,get,job,detail,get,job,class,autowire,capable,bean,factory,false,super,create,job,instance,bundle,if,is,eligible,for,property,population,job,bean,wrapper,bw,property,accessor,factory,for,bean,property,access,job,mutable,property,values,pvs,new,mutable,property,values,if,this,scheduler,context,null,pvs,add,property,values,this,scheduler,context,pvs,add,property,values,bundle,get,job,detail,get,job,data,map,pvs,add,property,values,bundle,get,trigger,get,job,data,map,if,this,ignored,unknown,properties,null,for,string,prop,name,this,ignored,unknown,properties,if,pvs,contains,prop,name,bw,is,writable,property,prop,name,pvs,remove,property,value,prop,name,bw,set,property,values,pvs,else,bw,set,property,values,pvs,true,return,job
SpringBeanJobFactory -> public void setIgnoredUnknownProperties(String[] ignoredUnknownProperties);1328020251;Specify the unknown properties (not found in the bean) that should be ignored._<p>Default is <code>null</code>, indicating that all unknown properties_should be ignored. Specify an empty array to throw an exception in case_of any unknown properties, or a list of property names that should be_ignored if there is no corresponding property found on the particular_job class (all other unknown properties will still trigger an exception).;public void setIgnoredUnknownProperties(String[] ignoredUnknownProperties) {_		this.ignoredUnknownProperties = ignoredUnknownProperties__	};specify,the,unknown,properties,not,found,in,the,bean,that,should,be,ignored,p,default,is,code,null,code,indicating,that,all,unknown,properties,should,be,ignored,specify,an,empty,array,to,throw,an,exception,in,case,of,any,unknown,properties,or,a,list,of,property,names,that,should,be,ignored,if,there,is,no,corresponding,property,found,on,the,particular,job,class,all,other,unknown,properties,will,still,trigger,an,exception;public,void,set,ignored,unknown,properties,string,ignored,unknown,properties,this,ignored,unknown,properties,ignored,unknown,properties
SpringBeanJobFactory -> public void setIgnoredUnknownProperties(String[] ignoredUnknownProperties);1356735495;Specify the unknown properties (not found in the bean) that should be ignored._<p>Default is {@code null}, indicating that all unknown properties_should be ignored. Specify an empty array to throw an exception in case_of any unknown properties, or a list of property names that should be_ignored if there is no corresponding property found on the particular_job class (all other unknown properties will still trigger an exception).;public void setIgnoredUnknownProperties(String[] ignoredUnknownProperties) {_		this.ignoredUnknownProperties = ignoredUnknownProperties__	};specify,the,unknown,properties,not,found,in,the,bean,that,should,be,ignored,p,default,is,code,null,indicating,that,all,unknown,properties,should,be,ignored,specify,an,empty,array,to,throw,an,exception,in,case,of,any,unknown,properties,or,a,list,of,property,names,that,should,be,ignored,if,there,is,no,corresponding,property,found,on,the,particular,job,class,all,other,unknown,properties,will,still,trigger,an,exception;public,void,set,ignored,unknown,properties,string,ignored,unknown,properties,this,ignored,unknown,properties,ignored,unknown,properties
SpringBeanJobFactory -> public void setIgnoredUnknownProperties(String[] ignoredUnknownProperties);1357119239;Specify the unknown properties (not found in the bean) that should be ignored._<p>Default is {@code null}, indicating that all unknown properties_should be ignored. Specify an empty array to throw an exception in case_of any unknown properties, or a list of property names that should be_ignored if there is no corresponding property found on the particular_job class (all other unknown properties will still trigger an exception).;public void setIgnoredUnknownProperties(String[] ignoredUnknownProperties) {_		this.ignoredUnknownProperties = ignoredUnknownProperties__	};specify,the,unknown,properties,not,found,in,the,bean,that,should,be,ignored,p,default,is,code,null,indicating,that,all,unknown,properties,should,be,ignored,specify,an,empty,array,to,throw,an,exception,in,case,of,any,unknown,properties,or,a,list,of,property,names,that,should,be,ignored,if,there,is,no,corresponding,property,found,on,the,particular,job,class,all,other,unknown,properties,will,still,trigger,an,exception;public,void,set,ignored,unknown,properties,string,ignored,unknown,properties,this,ignored,unknown,properties,ignored,unknown,properties
SpringBeanJobFactory -> public void setIgnoredUnknownProperties(String[] ignoredUnknownProperties);1363730577;Specify the unknown properties (not found in the bean) that should be ignored._<p>Default is {@code null}, indicating that all unknown properties_should be ignored. Specify an empty array to throw an exception in case_of any unknown properties, or a list of property names that should be_ignored if there is no corresponding property found on the particular_job class (all other unknown properties will still trigger an exception).;public void setIgnoredUnknownProperties(String[] ignoredUnknownProperties) {_		this.ignoredUnknownProperties = ignoredUnknownProperties__	};specify,the,unknown,properties,not,found,in,the,bean,that,should,be,ignored,p,default,is,code,null,indicating,that,all,unknown,properties,should,be,ignored,specify,an,empty,array,to,throw,an,exception,in,case,of,any,unknown,properties,or,a,list,of,property,names,that,should,be,ignored,if,there,is,no,corresponding,property,found,on,the,particular,job,class,all,other,unknown,properties,will,still,trigger,an,exception;public,void,set,ignored,unknown,properties,string,ignored,unknown,properties,this,ignored,unknown,properties,ignored,unknown,properties
SpringBeanJobFactory -> public void setIgnoredUnknownProperties(String[] ignoredUnknownProperties);1368482696;Specify the unknown properties (not found in the bean) that should be ignored._<p>Default is {@code null}, indicating that all unknown properties_should be ignored. Specify an empty array to throw an exception in case_of any unknown properties, or a list of property names that should be_ignored if there is no corresponding property found on the particular_job class (all other unknown properties will still trigger an exception).;public void setIgnoredUnknownProperties(String[] ignoredUnknownProperties) {_		this.ignoredUnknownProperties = ignoredUnknownProperties__	};specify,the,unknown,properties,not,found,in,the,bean,that,should,be,ignored,p,default,is,code,null,indicating,that,all,unknown,properties,should,be,ignored,specify,an,empty,array,to,throw,an,exception,in,case,of,any,unknown,properties,or,a,list,of,property,names,that,should,be,ignored,if,there,is,no,corresponding,property,found,on,the,particular,job,class,all,other,unknown,properties,will,still,trigger,an,exception;public,void,set,ignored,unknown,properties,string,ignored,unknown,properties,this,ignored,unknown,properties,ignored,unknown,properties
SpringBeanJobFactory -> public void setIgnoredUnknownProperties(String[] ignoredUnknownProperties);1375198429;Specify the unknown properties (not found in the bean) that should be ignored._<p>Default is {@code null}, indicating that all unknown properties_should be ignored. Specify an empty array to throw an exception in case_of any unknown properties, or a list of property names that should be_ignored if there is no corresponding property found on the particular_job class (all other unknown properties will still trigger an exception).;public void setIgnoredUnknownProperties(String[] ignoredUnknownProperties) {_		this.ignoredUnknownProperties = ignoredUnknownProperties__	};specify,the,unknown,properties,not,found,in,the,bean,that,should,be,ignored,p,default,is,code,null,indicating,that,all,unknown,properties,should,be,ignored,specify,an,empty,array,to,throw,an,exception,in,case,of,any,unknown,properties,or,a,list,of,property,names,that,should,be,ignored,if,there,is,no,corresponding,property,found,on,the,particular,job,class,all,other,unknown,properties,will,still,trigger,an,exception;public,void,set,ignored,unknown,properties,string,ignored,unknown,properties,this,ignored,unknown,properties,ignored,unknown,properties
SpringBeanJobFactory -> protected boolean isEligibleForPropertyPopulation(Object jobObject);1328020251;Return whether the given job object is eligible for having_its bean properties populated._<p>The default implementation ignores {@link QuartzJobBean} instances,_which will inject bean properties themselves._@param jobObject the job object to introspect_@see QuartzJobBean;protected boolean isEligibleForPropertyPopulation(Object jobObject) {_		return (!(jobObject instanceof QuartzJobBean))__	};return,whether,the,given,job,object,is,eligible,for,having,its,bean,properties,populated,p,the,default,implementation,ignores,link,quartz,job,bean,instances,which,will,inject,bean,properties,themselves,param,job,object,the,job,object,to,introspect,see,quartz,job,bean;protected,boolean,is,eligible,for,property,population,object,job,object,return,job,object,instanceof,quartz,job,bean
SpringBeanJobFactory -> protected boolean isEligibleForPropertyPopulation(Object jobObject);1356735495;Return whether the given job object is eligible for having_its bean properties populated._<p>The default implementation ignores {@link QuartzJobBean} instances,_which will inject bean properties themselves._@param jobObject the job object to introspect_@see QuartzJobBean;protected boolean isEligibleForPropertyPopulation(Object jobObject) {_		return (!(jobObject instanceof QuartzJobBean))__	};return,whether,the,given,job,object,is,eligible,for,having,its,bean,properties,populated,p,the,default,implementation,ignores,link,quartz,job,bean,instances,which,will,inject,bean,properties,themselves,param,job,object,the,job,object,to,introspect,see,quartz,job,bean;protected,boolean,is,eligible,for,property,population,object,job,object,return,job,object,instanceof,quartz,job,bean
SpringBeanJobFactory -> protected boolean isEligibleForPropertyPopulation(Object jobObject);1357119239;Return whether the given job object is eligible for having_its bean properties populated._<p>The default implementation ignores {@link QuartzJobBean} instances,_which will inject bean properties themselves._@param jobObject the job object to introspect_@see QuartzJobBean;protected boolean isEligibleForPropertyPopulation(Object jobObject) {_		return (!(jobObject instanceof QuartzJobBean))__	};return,whether,the,given,job,object,is,eligible,for,having,its,bean,properties,populated,p,the,default,implementation,ignores,link,quartz,job,bean,instances,which,will,inject,bean,properties,themselves,param,job,object,the,job,object,to,introspect,see,quartz,job,bean;protected,boolean,is,eligible,for,property,population,object,job,object,return,job,object,instanceof,quartz,job,bean
SpringBeanJobFactory -> protected boolean isEligibleForPropertyPopulation(Object jobObject);1363730577;Return whether the given job object is eligible for having_its bean properties populated._<p>The default implementation ignores {@link QuartzJobBean} instances,_which will inject bean properties themselves._@param jobObject the job object to introspect_@see QuartzJobBean;protected boolean isEligibleForPropertyPopulation(Object jobObject) {_		return (!(jobObject instanceof QuartzJobBean))__	};return,whether,the,given,job,object,is,eligible,for,having,its,bean,properties,populated,p,the,default,implementation,ignores,link,quartz,job,bean,instances,which,will,inject,bean,properties,themselves,param,job,object,the,job,object,to,introspect,see,quartz,job,bean;protected,boolean,is,eligible,for,property,population,object,job,object,return,job,object,instanceof,quartz,job,bean
SpringBeanJobFactory -> protected boolean isEligibleForPropertyPopulation(Object jobObject);1368482696;Return whether the given job object is eligible for having_its bean properties populated._<p>The default implementation ignores {@link QuartzJobBean} instances,_which will inject bean properties themselves._@param jobObject the job object to introspect_@see QuartzJobBean;protected boolean isEligibleForPropertyPopulation(Object jobObject) {_		return (!(jobObject instanceof QuartzJobBean))__	};return,whether,the,given,job,object,is,eligible,for,having,its,bean,properties,populated,p,the,default,implementation,ignores,link,quartz,job,bean,instances,which,will,inject,bean,properties,themselves,param,job,object,the,job,object,to,introspect,see,quartz,job,bean;protected,boolean,is,eligible,for,property,population,object,job,object,return,job,object,instanceof,quartz,job,bean
SpringBeanJobFactory -> protected boolean isEligibleForPropertyPopulation(Object jobObject);1375198429;Return whether the given job object is eligible for having_its bean properties populated._<p>The default implementation ignores {@link QuartzJobBean} instances,_which will inject bean properties themselves._@param jobObject the job object to introspect_@see QuartzJobBean;protected boolean isEligibleForPropertyPopulation(Object jobObject) {_		return (!(jobObject instanceof QuartzJobBean))__	};return,whether,the,given,job,object,is,eligible,for,having,its,bean,properties,populated,p,the,default,implementation,ignores,link,quartz,job,bean,instances,which,will,inject,bean,properties,themselves,param,job,object,the,job,object,to,introspect,see,quartz,job,bean;protected,boolean,is,eligible,for,property,population,object,job,object,return,job,object,instanceof,quartz,job,bean
SpringBeanJobFactory -> protected boolean isEligibleForPropertyPopulation(Object jobObject);1388939442;Return whether the given job object is eligible for having_its bean properties populated._<p>The default implementation ignores {@link QuartzJobBean} instances,_which will inject bean properties themselves._@param jobObject the job object to introspect_@see QuartzJobBean;protected boolean isEligibleForPropertyPopulation(Object jobObject) {_		return (!(jobObject instanceof QuartzJobBean))__	};return,whether,the,given,job,object,is,eligible,for,having,its,bean,properties,populated,p,the,default,implementation,ignores,link,quartz,job,bean,instances,which,will,inject,bean,properties,themselves,param,job,object,the,job,object,to,introspect,see,quartz,job,bean;protected,boolean,is,eligible,for,property,population,object,job,object,return,job,object,instanceof,quartz,job,bean
SpringBeanJobFactory -> protected boolean isEligibleForPropertyPopulation(Object jobObject);1388954345;Return whether the given job object is eligible for having_its bean properties populated._<p>The default implementation ignores {@link QuartzJobBean} instances,_which will inject bean properties themselves._@param jobObject the job object to introspect_@see QuartzJobBean;protected boolean isEligibleForPropertyPopulation(Object jobObject) {_		return (!(jobObject instanceof QuartzJobBean))__	};return,whether,the,given,job,object,is,eligible,for,having,its,bean,properties,populated,p,the,default,implementation,ignores,link,quartz,job,bean,instances,which,will,inject,bean,properties,themselves,param,job,object,the,job,object,to,introspect,see,quartz,job,bean;protected,boolean,is,eligible,for,property,population,object,job,object,return,job,object,instanceof,quartz,job,bean
SpringBeanJobFactory -> protected boolean isEligibleForPropertyPopulation(Object jobObject);1395953963;Return whether the given job object is eligible for having_its bean properties populated._<p>The default implementation ignores {@link QuartzJobBean} instances,_which will inject bean properties themselves._@param jobObject the job object to introspect_@see QuartzJobBean;protected boolean isEligibleForPropertyPopulation(Object jobObject) {_		return (!(jobObject instanceof QuartzJobBean))__	};return,whether,the,given,job,object,is,eligible,for,having,its,bean,properties,populated,p,the,default,implementation,ignores,link,quartz,job,bean,instances,which,will,inject,bean,properties,themselves,param,job,object,the,job,object,to,introspect,see,quartz,job,bean;protected,boolean,is,eligible,for,property,population,object,job,object,return,job,object,instanceof,quartz,job,bean
SpringBeanJobFactory -> protected boolean isEligibleForPropertyPopulation(Object jobObject);1460032042;Return whether the given job object is eligible for having_its bean properties populated._<p>The default implementation ignores {@link QuartzJobBean} instances,_which will inject bean properties themselves._@param jobObject the job object to introspect_@see QuartzJobBean;protected boolean isEligibleForPropertyPopulation(Object jobObject) {_		return (!(jobObject instanceof QuartzJobBean))__	};return,whether,the,given,job,object,is,eligible,for,having,its,bean,properties,populated,p,the,default,implementation,ignores,link,quartz,job,bean,instances,which,will,inject,bean,properties,themselves,param,job,object,the,job,object,to,introspect,see,quartz,job,bean;protected,boolean,is,eligible,for,property,population,object,job,object,return,job,object,instanceof,quartz,job,bean
SpringBeanJobFactory -> protected boolean isEligibleForPropertyPopulation(Object jobObject);1495868221;Return whether the given job object is eligible for having_its bean properties populated._<p>The default implementation ignores {@link QuartzJobBean} instances,_which will inject bean properties themselves._@param jobObject the job object to introspect_@see QuartzJobBean;protected boolean isEligibleForPropertyPopulation(Object jobObject) {_		return (!(jobObject instanceof QuartzJobBean))__	};return,whether,the,given,job,object,is,eligible,for,having,its,bean,properties,populated,p,the,default,implementation,ignores,link,quartz,job,bean,instances,which,will,inject,bean,properties,themselves,param,job,object,the,job,object,to,introspect,see,quartz,job,bean;protected,boolean,is,eligible,for,property,population,object,job,object,return,job,object,instanceof,quartz,job,bean
SpringBeanJobFactory -> protected boolean isEligibleForPropertyPopulation(Object jobObject);1498780456;Return whether the given job object is eligible for having_its bean properties populated._<p>The default implementation ignores {@link QuartzJobBean} instances,_which will inject bean properties themselves._@param jobObject the job object to introspect_@see QuartzJobBean;protected boolean isEligibleForPropertyPopulation(Object jobObject) {_		return (!(jobObject instanceof QuartzJobBean))__	};return,whether,the,given,job,object,is,eligible,for,having,its,bean,properties,populated,p,the,default,implementation,ignores,link,quartz,job,bean,instances,which,will,inject,bean,properties,themselves,param,job,object,the,job,object,to,introspect,see,quartz,job,bean;protected,boolean,is,eligible,for,property,population,object,job,object,return,job,object,instanceof,quartz,job,bean
SpringBeanJobFactory -> protected boolean isEligibleForPropertyPopulation(Object jobObject);1539119605;Return whether the given job object is eligible for having_its bean properties populated._<p>The default implementation ignores {@link QuartzJobBean} instances,_which will inject bean properties themselves._@param jobObject the job object to introspect_@see QuartzJobBean;protected boolean isEligibleForPropertyPopulation(Object jobObject) {_		return (!(jobObject instanceof QuartzJobBean))__	};return,whether,the,given,job,object,is,eligible,for,having,its,bean,properties,populated,p,the,default,implementation,ignores,link,quartz,job,bean,instances,which,will,inject,bean,properties,themselves,param,job,object,the,job,object,to,introspect,see,quartz,job,bean;protected,boolean,is,eligible,for,property,population,object,job,object,return,job,object,instanceof,quartz,job,bean
