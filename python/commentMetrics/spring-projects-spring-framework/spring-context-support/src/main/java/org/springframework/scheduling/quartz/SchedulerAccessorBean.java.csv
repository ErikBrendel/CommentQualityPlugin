# id;timestamp;commentText;codeText;commentWords;codeWords
SchedulerAccessorBean -> public void setScheduler(Scheduler scheduler);1328020251;Specify the Quartz Scheduler instance to operate on.;public void setScheduler(Scheduler scheduler) {_		this.scheduler = scheduler__	};specify,the,quartz,scheduler,instance,to,operate,on;public,void,set,scheduler,scheduler,scheduler,this,scheduler,scheduler
SchedulerAccessorBean -> public void setScheduler(Scheduler scheduler);1353874548;Specify the Quartz Scheduler instance to operate on.;public void setScheduler(Scheduler scheduler) {_		this.scheduler = scheduler__	};specify,the,quartz,scheduler,instance,to,operate,on;public,void,set,scheduler,scheduler,scheduler,this,scheduler,scheduler
SchedulerAccessorBean -> public void setScheduler(Scheduler scheduler);1356735495;Specify the Quartz Scheduler instance to operate on.;public void setScheduler(Scheduler scheduler) {_		this.scheduler = scheduler__	};specify,the,quartz,scheduler,instance,to,operate,on;public,void,set,scheduler,scheduler,scheduler,this,scheduler,scheduler
SchedulerAccessorBean -> public void setScheduler(Scheduler scheduler);1357119239;Specify the Quartz Scheduler instance to operate on.;public void setScheduler(Scheduler scheduler) {_		this.scheduler = scheduler__	};specify,the,quartz,scheduler,instance,to,operate,on;public,void,set,scheduler,scheduler,scheduler,this,scheduler,scheduler
SchedulerAccessorBean -> public void setScheduler(Scheduler scheduler);1363730577;Specify the Quartz Scheduler instance to operate on.;public void setScheduler(Scheduler scheduler) {_		this.scheduler = scheduler__	};specify,the,quartz,scheduler,instance,to,operate,on;public,void,set,scheduler,scheduler,scheduler,this,scheduler,scheduler
SchedulerAccessorBean -> public void setScheduler(Scheduler scheduler);1368482696;Specify the Quartz Scheduler instance to operate on.;public void setScheduler(Scheduler scheduler) {_		this.scheduler = scheduler__	};specify,the,quartz,scheduler,instance,to,operate,on;public,void,set,scheduler,scheduler,scheduler,this,scheduler,scheduler
SchedulerAccessorBean -> public void setScheduler(Scheduler scheduler);1375198429;Specify the Quartz Scheduler instance to operate on.;public void setScheduler(Scheduler scheduler) {_		this.scheduler = scheduler__	};specify,the,quartz,scheduler,instance,to,operate,on;public,void,set,scheduler,scheduler,scheduler,this,scheduler,scheduler
SchedulerAccessorBean -> public void setScheduler(Scheduler scheduler);1388954345;Specify the Quartz Scheduler instance to operate on.;public void setScheduler(Scheduler scheduler) {_		this.scheduler = scheduler__	};specify,the,quartz,scheduler,instance,to,operate,on;public,void,set,scheduler,scheduler,scheduler,this,scheduler,scheduler
SchedulerAccessorBean -> public void setScheduler(Scheduler scheduler);1395953963;Specify the Quartz Scheduler instance to operate on.;public void setScheduler(Scheduler scheduler) {_		this.scheduler = scheduler__	};specify,the,quartz,scheduler,instance,to,operate,on;public,void,set,scheduler,scheduler,scheduler,this,scheduler,scheduler
SchedulerAccessorBean -> public void setScheduler(Scheduler scheduler);1408389809;Specify the Quartz {@link Scheduler} instance to operate on._<p>If not specified, this accessor will try to retrieve a default {@link Scheduler}_bean from the containing application context.;public void setScheduler(Scheduler scheduler) {_		this.scheduler = scheduler__	};specify,the,quartz,link,scheduler,instance,to,operate,on,p,if,not,specified,this,accessor,will,try,to,retrieve,a,default,link,scheduler,bean,from,the,containing,application,context;public,void,set,scheduler,scheduler,scheduler,this,scheduler,scheduler
SchedulerAccessorBean -> public void setScheduler(Scheduler scheduler);1498780456;Specify the Quartz {@link Scheduler} instance to operate on._<p>If not specified, this accessor will try to retrieve a default {@link Scheduler}_bean from the containing application context.;public void setScheduler(Scheduler scheduler) {_		this.scheduler = scheduler__	};specify,the,quartz,link,scheduler,instance,to,operate,on,p,if,not,specified,this,accessor,will,try,to,retrieve,a,default,link,scheduler,bean,from,the,containing,application,context;public,void,set,scheduler,scheduler,scheduler,this,scheduler,scheduler
SchedulerAccessorBean -> public void setSchedulerName(String schedulerName);1328020251;Specify the Quartz Scheduler to operate on via its scheduler name in the Spring_application context or also in the Quartz {@link org.quartz.impl.SchedulerRepository}._<p>Schedulers can be registered in the repository through custom bootstrapping,_e.g. via the {@link org.quartz.impl.StdSchedulerFactory} or_{@link org.quartz.impl.DirectSchedulerFactory} factory classes._However, in general, it's preferable to use Spring's {@link SchedulerFactoryBean}_which includes the job/trigger/listener capabilities of this accessor as well.;public void setSchedulerName(String schedulerName) {_		this.schedulerName = schedulerName__	};specify,the,quartz,scheduler,to,operate,on,via,its,scheduler,name,in,the,spring,application,context,or,also,in,the,quartz,link,org,quartz,impl,scheduler,repository,p,schedulers,can,be,registered,in,the,repository,through,custom,bootstrapping,e,g,via,the,link,org,quartz,impl,std,scheduler,factory,or,link,org,quartz,impl,direct,scheduler,factory,factory,classes,however,in,general,it,s,preferable,to,use,spring,s,link,scheduler,factory,bean,which,includes,the,job,trigger,listener,capabilities,of,this,accessor,as,well;public,void,set,scheduler,name,string,scheduler,name,this,scheduler,name,scheduler,name
SchedulerAccessorBean -> public void setSchedulerName(String schedulerName);1353874548;Specify the Quartz Scheduler to operate on via its scheduler name in the Spring_application context or also in the Quartz {@link org.quartz.impl.SchedulerRepository}._<p>Schedulers can be registered in the repository through custom bootstrapping,_e.g. via the {@link org.quartz.impl.StdSchedulerFactory} or_{@link org.quartz.impl.DirectSchedulerFactory} factory classes._However, in general, it's preferable to use Spring's {@link SchedulerFactoryBean}_which includes the job/trigger/listener capabilities of this accessor as well.;public void setSchedulerName(String schedulerName) {_		this.schedulerName = schedulerName__	};specify,the,quartz,scheduler,to,operate,on,via,its,scheduler,name,in,the,spring,application,context,or,also,in,the,quartz,link,org,quartz,impl,scheduler,repository,p,schedulers,can,be,registered,in,the,repository,through,custom,bootstrapping,e,g,via,the,link,org,quartz,impl,std,scheduler,factory,or,link,org,quartz,impl,direct,scheduler,factory,factory,classes,however,in,general,it,s,preferable,to,use,spring,s,link,scheduler,factory,bean,which,includes,the,job,trigger,listener,capabilities,of,this,accessor,as,well;public,void,set,scheduler,name,string,scheduler,name,this,scheduler,name,scheduler,name
SchedulerAccessorBean -> public void setSchedulerName(String schedulerName);1356735495;Specify the Quartz Scheduler to operate on via its scheduler name in the Spring_application context or also in the Quartz {@link org.quartz.impl.SchedulerRepository}._<p>Schedulers can be registered in the repository through custom bootstrapping,_e.g. via the {@link org.quartz.impl.StdSchedulerFactory} or_{@link org.quartz.impl.DirectSchedulerFactory} factory classes._However, in general, it's preferable to use Spring's {@link SchedulerFactoryBean}_which includes the job/trigger/listener capabilities of this accessor as well.;public void setSchedulerName(String schedulerName) {_		this.schedulerName = schedulerName__	};specify,the,quartz,scheduler,to,operate,on,via,its,scheduler,name,in,the,spring,application,context,or,also,in,the,quartz,link,org,quartz,impl,scheduler,repository,p,schedulers,can,be,registered,in,the,repository,through,custom,bootstrapping,e,g,via,the,link,org,quartz,impl,std,scheduler,factory,or,link,org,quartz,impl,direct,scheduler,factory,factory,classes,however,in,general,it,s,preferable,to,use,spring,s,link,scheduler,factory,bean,which,includes,the,job,trigger,listener,capabilities,of,this,accessor,as,well;public,void,set,scheduler,name,string,scheduler,name,this,scheduler,name,scheduler,name
SchedulerAccessorBean -> public void setSchedulerName(String schedulerName);1357119239;Specify the Quartz Scheduler to operate on via its scheduler name in the Spring_application context or also in the Quartz {@link org.quartz.impl.SchedulerRepository}._<p>Schedulers can be registered in the repository through custom bootstrapping,_e.g. via the {@link org.quartz.impl.StdSchedulerFactory} or_{@link org.quartz.impl.DirectSchedulerFactory} factory classes._However, in general, it's preferable to use Spring's {@link SchedulerFactoryBean}_which includes the job/trigger/listener capabilities of this accessor as well.;public void setSchedulerName(String schedulerName) {_		this.schedulerName = schedulerName__	};specify,the,quartz,scheduler,to,operate,on,via,its,scheduler,name,in,the,spring,application,context,or,also,in,the,quartz,link,org,quartz,impl,scheduler,repository,p,schedulers,can,be,registered,in,the,repository,through,custom,bootstrapping,e,g,via,the,link,org,quartz,impl,std,scheduler,factory,or,link,org,quartz,impl,direct,scheduler,factory,factory,classes,however,in,general,it,s,preferable,to,use,spring,s,link,scheduler,factory,bean,which,includes,the,job,trigger,listener,capabilities,of,this,accessor,as,well;public,void,set,scheduler,name,string,scheduler,name,this,scheduler,name,scheduler,name
SchedulerAccessorBean -> public void setSchedulerName(String schedulerName);1363730577;Specify the Quartz Scheduler to operate on via its scheduler name in the Spring_application context or also in the Quartz {@link org.quartz.impl.SchedulerRepository}._<p>Schedulers can be registered in the repository through custom bootstrapping,_e.g. via the {@link org.quartz.impl.StdSchedulerFactory} or_{@link org.quartz.impl.DirectSchedulerFactory} factory classes._However, in general, it's preferable to use Spring's {@link SchedulerFactoryBean}_which includes the job/trigger/listener capabilities of this accessor as well.;public void setSchedulerName(String schedulerName) {_		this.schedulerName = schedulerName__	};specify,the,quartz,scheduler,to,operate,on,via,its,scheduler,name,in,the,spring,application,context,or,also,in,the,quartz,link,org,quartz,impl,scheduler,repository,p,schedulers,can,be,registered,in,the,repository,through,custom,bootstrapping,e,g,via,the,link,org,quartz,impl,std,scheduler,factory,or,link,org,quartz,impl,direct,scheduler,factory,factory,classes,however,in,general,it,s,preferable,to,use,spring,s,link,scheduler,factory,bean,which,includes,the,job,trigger,listener,capabilities,of,this,accessor,as,well;public,void,set,scheduler,name,string,scheduler,name,this,scheduler,name,scheduler,name
SchedulerAccessorBean -> public void setSchedulerName(String schedulerName);1368482696;Specify the Quartz Scheduler to operate on via its scheduler name in the Spring_application context or also in the Quartz {@link org.quartz.impl.SchedulerRepository}._<p>Schedulers can be registered in the repository through custom bootstrapping,_e.g. via the {@link org.quartz.impl.StdSchedulerFactory} or_{@link org.quartz.impl.DirectSchedulerFactory} factory classes._However, in general, it's preferable to use Spring's {@link SchedulerFactoryBean}_which includes the job/trigger/listener capabilities of this accessor as well.;public void setSchedulerName(String schedulerName) {_		this.schedulerName = schedulerName__	};specify,the,quartz,scheduler,to,operate,on,via,its,scheduler,name,in,the,spring,application,context,or,also,in,the,quartz,link,org,quartz,impl,scheduler,repository,p,schedulers,can,be,registered,in,the,repository,through,custom,bootstrapping,e,g,via,the,link,org,quartz,impl,std,scheduler,factory,or,link,org,quartz,impl,direct,scheduler,factory,factory,classes,however,in,general,it,s,preferable,to,use,spring,s,link,scheduler,factory,bean,which,includes,the,job,trigger,listener,capabilities,of,this,accessor,as,well;public,void,set,scheduler,name,string,scheduler,name,this,scheduler,name,scheduler,name
SchedulerAccessorBean -> public void setSchedulerName(String schedulerName);1375198429;Specify the Quartz Scheduler to operate on via its scheduler name in the Spring_application context or also in the Quartz {@link org.quartz.impl.SchedulerRepository}._<p>Schedulers can be registered in the repository through custom bootstrapping,_e.g. via the {@link org.quartz.impl.StdSchedulerFactory} or_{@link org.quartz.impl.DirectSchedulerFactory} factory classes._However, in general, it's preferable to use Spring's {@link SchedulerFactoryBean}_which includes the job/trigger/listener capabilities of this accessor as well.;public void setSchedulerName(String schedulerName) {_		this.schedulerName = schedulerName__	};specify,the,quartz,scheduler,to,operate,on,via,its,scheduler,name,in,the,spring,application,context,or,also,in,the,quartz,link,org,quartz,impl,scheduler,repository,p,schedulers,can,be,registered,in,the,repository,through,custom,bootstrapping,e,g,via,the,link,org,quartz,impl,std,scheduler,factory,or,link,org,quartz,impl,direct,scheduler,factory,factory,classes,however,in,general,it,s,preferable,to,use,spring,s,link,scheduler,factory,bean,which,includes,the,job,trigger,listener,capabilities,of,this,accessor,as,well;public,void,set,scheduler,name,string,scheduler,name,this,scheduler,name,scheduler,name
SchedulerAccessorBean -> public void setSchedulerName(String schedulerName);1388954345;Specify the Quartz Scheduler to operate on via its scheduler name in the Spring_application context or also in the Quartz {@link org.quartz.impl.SchedulerRepository}._<p>Schedulers can be registered in the repository through custom bootstrapping,_e.g. via the {@link org.quartz.impl.StdSchedulerFactory} or_{@link org.quartz.impl.DirectSchedulerFactory} factory classes._However, in general, it's preferable to use Spring's {@link SchedulerFactoryBean}_which includes the job/trigger/listener capabilities of this accessor as well.;public void setSchedulerName(String schedulerName) {_		this.schedulerName = schedulerName__	};specify,the,quartz,scheduler,to,operate,on,via,its,scheduler,name,in,the,spring,application,context,or,also,in,the,quartz,link,org,quartz,impl,scheduler,repository,p,schedulers,can,be,registered,in,the,repository,through,custom,bootstrapping,e,g,via,the,link,org,quartz,impl,std,scheduler,factory,or,link,org,quartz,impl,direct,scheduler,factory,factory,classes,however,in,general,it,s,preferable,to,use,spring,s,link,scheduler,factory,bean,which,includes,the,job,trigger,listener,capabilities,of,this,accessor,as,well;public,void,set,scheduler,name,string,scheduler,name,this,scheduler,name,scheduler,name
SchedulerAccessorBean -> public void setSchedulerName(String schedulerName);1395953963;Specify the Quartz Scheduler to operate on via its scheduler name in the Spring_application context or also in the Quartz {@link org.quartz.impl.SchedulerRepository}._<p>Schedulers can be registered in the repository through custom bootstrapping,_e.g. via the {@link org.quartz.impl.StdSchedulerFactory} or_{@link org.quartz.impl.DirectSchedulerFactory} factory classes._However, in general, it's preferable to use Spring's {@link SchedulerFactoryBean}_which includes the job/trigger/listener capabilities of this accessor as well.;public void setSchedulerName(String schedulerName) {_		this.schedulerName = schedulerName__	};specify,the,quartz,scheduler,to,operate,on,via,its,scheduler,name,in,the,spring,application,context,or,also,in,the,quartz,link,org,quartz,impl,scheduler,repository,p,schedulers,can,be,registered,in,the,repository,through,custom,bootstrapping,e,g,via,the,link,org,quartz,impl,std,scheduler,factory,or,link,org,quartz,impl,direct,scheduler,factory,factory,classes,however,in,general,it,s,preferable,to,use,spring,s,link,scheduler,factory,bean,which,includes,the,job,trigger,listener,capabilities,of,this,accessor,as,well;public,void,set,scheduler,name,string,scheduler,name,this,scheduler,name,scheduler,name
SchedulerAccessorBean -> public void setSchedulerName(String schedulerName);1408389809;Specify the Quartz {@link Scheduler} to operate on via its scheduler name in the Spring_application context or also in the Quartz {@link org.quartz.impl.SchedulerRepository}._<p>Schedulers can be registered in the repository through custom bootstrapping,_e.g. via the {@link org.quartz.impl.StdSchedulerFactory} or_{@link org.quartz.impl.DirectSchedulerFactory} factory classes._However, in general, it's preferable to use Spring's {@link SchedulerFactoryBean}_which includes the job/trigger/listener capabilities of this accessor as well._<p>If not specified, this accessor will try to retrieve a default {@link Scheduler}_bean from the containing application context.;public void setSchedulerName(String schedulerName) {_		this.schedulerName = schedulerName__	};specify,the,quartz,link,scheduler,to,operate,on,via,its,scheduler,name,in,the,spring,application,context,or,also,in,the,quartz,link,org,quartz,impl,scheduler,repository,p,schedulers,can,be,registered,in,the,repository,through,custom,bootstrapping,e,g,via,the,link,org,quartz,impl,std,scheduler,factory,or,link,org,quartz,impl,direct,scheduler,factory,factory,classes,however,in,general,it,s,preferable,to,use,spring,s,link,scheduler,factory,bean,which,includes,the,job,trigger,listener,capabilities,of,this,accessor,as,well,p,if,not,specified,this,accessor,will,try,to,retrieve,a,default,link,scheduler,bean,from,the,containing,application,context;public,void,set,scheduler,name,string,scheduler,name,this,scheduler,name,scheduler,name
SchedulerAccessorBean -> public void setSchedulerName(String schedulerName);1498780456;Specify the Quartz {@link Scheduler} to operate on via its scheduler name in the Spring_application context or also in the Quartz {@link org.quartz.impl.SchedulerRepository}._<p>Schedulers can be registered in the repository through custom bootstrapping,_e.g. via the {@link org.quartz.impl.StdSchedulerFactory} or_{@link org.quartz.impl.DirectSchedulerFactory} factory classes._However, in general, it's preferable to use Spring's {@link SchedulerFactoryBean}_which includes the job/trigger/listener capabilities of this accessor as well._<p>If not specified, this accessor will try to retrieve a default {@link Scheduler}_bean from the containing application context.;public void setSchedulerName(String schedulerName) {_		this.schedulerName = schedulerName__	};specify,the,quartz,link,scheduler,to,operate,on,via,its,scheduler,name,in,the,spring,application,context,or,also,in,the,quartz,link,org,quartz,impl,scheduler,repository,p,schedulers,can,be,registered,in,the,repository,through,custom,bootstrapping,e,g,via,the,link,org,quartz,impl,std,scheduler,factory,or,link,org,quartz,impl,direct,scheduler,factory,factory,classes,however,in,general,it,s,preferable,to,use,spring,s,link,scheduler,factory,bean,which,includes,the,job,trigger,listener,capabilities,of,this,accessor,as,well,p,if,not,specified,this,accessor,will,try,to,retrieve,a,default,link,scheduler,bean,from,the,containing,application,context;public,void,set,scheduler,name,string,scheduler,name,this,scheduler,name,scheduler,name
SchedulerAccessorBean -> @Override 	public Scheduler getScheduler();1328020251;Return the Quartz Scheduler instance that this accessor operates on.;@Override_	public Scheduler getScheduler() {_		return this.scheduler__	};return,the,quartz,scheduler,instance,that,this,accessor,operates,on;override,public,scheduler,get,scheduler,return,this,scheduler
SchedulerAccessorBean -> @Override 	public Scheduler getScheduler();1353874548;Return the Quartz Scheduler instance that this accessor operates on.;@Override_	public Scheduler getScheduler() {_		return this.scheduler__	};return,the,quartz,scheduler,instance,that,this,accessor,operates,on;override,public,scheduler,get,scheduler,return,this,scheduler
SchedulerAccessorBean -> @Override 	public Scheduler getScheduler();1356735495;Return the Quartz Scheduler instance that this accessor operates on.;@Override_	public Scheduler getScheduler() {_		return this.scheduler__	};return,the,quartz,scheduler,instance,that,this,accessor,operates,on;override,public,scheduler,get,scheduler,return,this,scheduler
SchedulerAccessorBean -> @Override 	public Scheduler getScheduler();1357119239;Return the Quartz Scheduler instance that this accessor operates on.;@Override_	public Scheduler getScheduler() {_		return this.scheduler__	};return,the,quartz,scheduler,instance,that,this,accessor,operates,on;override,public,scheduler,get,scheduler,return,this,scheduler
SchedulerAccessorBean -> @Override 	public Scheduler getScheduler();1363730577;Return the Quartz Scheduler instance that this accessor operates on.;@Override_	public Scheduler getScheduler() {_		return this.scheduler__	};return,the,quartz,scheduler,instance,that,this,accessor,operates,on;override,public,scheduler,get,scheduler,return,this,scheduler
SchedulerAccessorBean -> @Override 	public Scheduler getScheduler();1368482696;Return the Quartz Scheduler instance that this accessor operates on.;@Override_	public Scheduler getScheduler() {_		return this.scheduler__	};return,the,quartz,scheduler,instance,that,this,accessor,operates,on;override,public,scheduler,get,scheduler,return,this,scheduler
SchedulerAccessorBean -> @Override 	public Scheduler getScheduler();1375198429;Return the Quartz Scheduler instance that this accessor operates on.;@Override_	public Scheduler getScheduler() {_		return this.scheduler__	};return,the,quartz,scheduler,instance,that,this,accessor,operates,on;override,public,scheduler,get,scheduler,return,this,scheduler
SchedulerAccessorBean -> @Override 	public Scheduler getScheduler();1388954345;Return the Quartz Scheduler instance that this accessor operates on.;@Override_	public Scheduler getScheduler() {_		return this.scheduler__	};return,the,quartz,scheduler,instance,that,this,accessor,operates,on;override,public,scheduler,get,scheduler,return,this,scheduler
SchedulerAccessorBean -> @Override 	public Scheduler getScheduler();1395953963;Return the Quartz Scheduler instance that this accessor operates on.;@Override_	public Scheduler getScheduler() {_		return this.scheduler__	};return,the,quartz,scheduler,instance,that,this,accessor,operates,on;override,public,scheduler,get,scheduler,return,this,scheduler
SchedulerAccessorBean -> @Override 	public Scheduler getScheduler();1408389809;Return the Quartz Scheduler instance that this accessor operates on.;@Override_	public Scheduler getScheduler() {_		return this.scheduler__	};return,the,quartz,scheduler,instance,that,this,accessor,operates,on;override,public,scheduler,get,scheduler,return,this,scheduler
SchedulerAccessorBean -> @Override 	public Scheduler getScheduler();1498780456;Return the Quartz Scheduler instance that this accessor operates on.;@Override_	public Scheduler getScheduler() {_		Assert.state(this.scheduler != null, "No Scheduler set")__		return this.scheduler__	};return,the,quartz,scheduler,instance,that,this,accessor,operates,on;override,public,scheduler,get,scheduler,assert,state,this,scheduler,null,no,scheduler,set,return,this,scheduler
