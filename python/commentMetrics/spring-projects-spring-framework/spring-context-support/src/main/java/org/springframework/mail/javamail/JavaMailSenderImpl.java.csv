# id;timestamp;commentText;codeText;commentWords;codeWords
JavaMailSenderImpl -> @Nullable 	public String getHost();1496837955;Return the mail server host.;@Nullable_	public String getHost() {_		return this.host__	};return,the,mail,server,host;nullable,public,string,get,host,return,this,host
JavaMailSenderImpl -> @Nullable 	public String getHost();1498780456;Return the mail server host.;@Nullable_	public String getHost() {_		return this.host__	};return,the,mail,server,host;nullable,public,string,get,host,return,this,host
JavaMailSenderImpl -> @Nullable 	public String getHost();1500448076;Return the mail server host.;@Nullable_	public String getHost() {_		return this.host__	};return,the,mail,server,host;nullable,public,string,get,host,return,this,host
JavaMailSenderImpl -> @Nullable 	public String getHost();1519295386;Return the mail server host.;@Nullable_	public String getHost() {_		return this.host__	};return,the,mail,server,host;nullable,public,string,get,host,return,this,host
JavaMailSenderImpl -> @Nullable 	public String getHost();1530174524;Return the mail server host.;@Nullable_	public String getHost() {_		return this.host__	};return,the,mail,server,host;nullable,public,string,get,host,return,this,host
JavaMailSenderImpl -> @Nullable 	public String getHost();1543862961;Return the mail server host.;@Nullable_	public String getHost() {_		return this.host__	};return,the,mail,server,host;nullable,public,string,get,host,return,this,host
JavaMailSenderImpl -> @Nullable 	public String getProtocol();1496837955;Return the mail protocol.;@Nullable_	public String getProtocol() {_		return this.protocol__	};return,the,mail,protocol;nullable,public,string,get,protocol,return,this,protocol
JavaMailSenderImpl -> @Nullable 	public String getProtocol();1498780456;Return the mail protocol.;@Nullable_	public String getProtocol() {_		return this.protocol__	};return,the,mail,protocol;nullable,public,string,get,protocol,return,this,protocol
JavaMailSenderImpl -> @Nullable 	public String getProtocol();1500448076;Return the mail protocol.;@Nullable_	public String getProtocol() {_		return this.protocol__	};return,the,mail,protocol;nullable,public,string,get,protocol,return,this,protocol
JavaMailSenderImpl -> @Nullable 	public String getProtocol();1519295386;Return the mail protocol.;@Nullable_	public String getProtocol() {_		return this.protocol__	};return,the,mail,protocol;nullable,public,string,get,protocol,return,this,protocol
JavaMailSenderImpl -> @Nullable 	public String getProtocol();1530174524;Return the mail protocol.;@Nullable_	public String getProtocol() {_		return this.protocol__	};return,the,mail,protocol;nullable,public,string,get,protocol,return,this,protocol
JavaMailSenderImpl -> @Nullable 	public String getProtocol();1543862961;Return the mail protocol.;@Nullable_	public String getProtocol() {_		return this.protocol__	};return,the,mail,protocol;nullable,public,string,get,protocol,return,this,protocol
JavaMailSenderImpl -> protected void doSend(MimeMessage[] mimeMessages, Object[] originalMessages) throws MailException;1328020251;Actually send the given array of MimeMessages via JavaMail._@param mimeMessages MimeMessage objects to send_@param originalMessages corresponding original message objects_that the MimeMessages have been created from (with same array_length and indices as the "mimeMessages" array), if any_@throws org.springframework.mail.MailAuthenticationException_in case of authentication failure_@throws org.springframework.mail.MailSendException_in case of failure when sending a message;protected void doSend(MimeMessage[] mimeMessages, Object[] originalMessages) throws MailException {_		Map<Object, Exception> failedMessages = new LinkedHashMap<Object, Exception>()___		Transport transport__		try {_			transport = getTransport(getSession())__			transport.connect(getHost(), getPort(), getUsername(), getPassword())__		}_		catch (AuthenticationFailedException ex) {_			throw new MailAuthenticationException(ex)__		}_		catch (MessagingException ex) {_			_			for (int i = 0_ i < mimeMessages.length_ i++) {_				Object original = (originalMessages != null ? originalMessages[i] : mimeMessages[i])__				failedMessages.put(original, ex)__			}_			throw new MailSendException("Mail server connection failed", ex, failedMessages)__		}__		try {_			for (int i = 0_ i < mimeMessages.length_ i++) {_				MimeMessage mimeMessage = mimeMessages[i]__				try {_					if (mimeMessage.getSentDate() == null) {_						mimeMessage.setSentDate(new Date())__					}_					String messageId = mimeMessage.getMessageID()__					mimeMessage.saveChanges()__					if (messageId != null) {_						_						mimeMessage.setHeader(HEADER_MESSAGE_ID, messageId)__					}_					transport.sendMessage(mimeMessage, mimeMessage.getAllRecipients())__				}_				catch (MessagingException ex) {_					Object original = (originalMessages != null ? originalMessages[i] : mimeMessage)__					failedMessages.put(original, ex)__				}_			}_		}_		finally {_			try {_				transport.close()__			}_			catch (MessagingException ex) {_				if (!failedMessages.isEmpty()) {_					throw new MailSendException("Failed to close server connection after message failures", ex,_							failedMessages)__				}_				else {_					throw new MailSendException("Failed to close server connection after message sending", ex)__				}_			}_		}__		if (!failedMessages.isEmpty()) {_			throw new MailSendException(failedMessages)__		}_	};actually,send,the,given,array,of,mime,messages,via,java,mail,param,mime,messages,mime,message,objects,to,send,param,original,messages,corresponding,original,message,objects,that,the,mime,messages,have,been,created,from,with,same,array,length,and,indices,as,the,mime,messages,array,if,any,throws,org,springframework,mail,mail,authentication,exception,in,case,of,authentication,failure,throws,org,springframework,mail,mail,send,exception,in,case,of,failure,when,sending,a,message;protected,void,do,send,mime,message,mime,messages,object,original,messages,throws,mail,exception,map,object,exception,failed,messages,new,linked,hash,map,object,exception,transport,transport,try,transport,get,transport,get,session,transport,connect,get,host,get,port,get,username,get,password,catch,authentication,failed,exception,ex,throw,new,mail,authentication,exception,ex,catch,messaging,exception,ex,for,int,i,0,i,mime,messages,length,i,object,original,original,messages,null,original,messages,i,mime,messages,i,failed,messages,put,original,ex,throw,new,mail,send,exception,mail,server,connection,failed,ex,failed,messages,try,for,int,i,0,i,mime,messages,length,i,mime,message,mime,message,mime,messages,i,try,if,mime,message,get,sent,date,null,mime,message,set,sent,date,new,date,string,message,id,mime,message,get,message,id,mime,message,save,changes,if,message,id,null,mime,message,set,header,message,id,transport,send,message,mime,message,mime,message,get,all,recipients,catch,messaging,exception,ex,object,original,original,messages,null,original,messages,i,mime,message,failed,messages,put,original,ex,finally,try,transport,close,catch,messaging,exception,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,failures,ex,failed,messages,else,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,sending,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,messages
JavaMailSenderImpl -> protected void doSend(MimeMessage[] mimeMessages, Object[] originalMessages) throws MailException;1356735495;Actually send the given array of MimeMessages via JavaMail._@param mimeMessages MimeMessage objects to send_@param originalMessages corresponding original message objects_that the MimeMessages have been created from (with same array_length and indices as the "mimeMessages" array), if any_@throws org.springframework.mail.MailAuthenticationException_in case of authentication failure_@throws org.springframework.mail.MailSendException_in case of failure when sending a message;protected void doSend(MimeMessage[] mimeMessages, Object[] originalMessages) throws MailException {_		Map<Object, Exception> failedMessages = new LinkedHashMap<Object, Exception>()___		Transport transport__		try {_			transport = getTransport(getSession())__			transport.connect(getHost(), getPort(), getUsername(), getPassword())__		}_		catch (AuthenticationFailedException ex) {_			throw new MailAuthenticationException(ex)__		}_		catch (MessagingException ex) {_			_			for (int i = 0_ i < mimeMessages.length_ i++) {_				Object original = (originalMessages != null ? originalMessages[i] : mimeMessages[i])__				failedMessages.put(original, ex)__			}_			throw new MailSendException("Mail server connection failed", ex, failedMessages)__		}__		try {_			for (int i = 0_ i < mimeMessages.length_ i++) {_				MimeMessage mimeMessage = mimeMessages[i]__				try {_					if (mimeMessage.getSentDate() == null) {_						mimeMessage.setSentDate(new Date())__					}_					String messageId = mimeMessage.getMessageID()__					mimeMessage.saveChanges()__					if (messageId != null) {_						_						mimeMessage.setHeader(HEADER_MESSAGE_ID, messageId)__					}_					transport.sendMessage(mimeMessage, mimeMessage.getAllRecipients())__				}_				catch (MessagingException ex) {_					Object original = (originalMessages != null ? originalMessages[i] : mimeMessage)__					failedMessages.put(original, ex)__				}_			}_		}_		finally {_			try {_				transport.close()__			}_			catch (MessagingException ex) {_				if (!failedMessages.isEmpty()) {_					throw new MailSendException("Failed to close server connection after message failures", ex,_							failedMessages)__				}_				else {_					throw new MailSendException("Failed to close server connection after message sending", ex)__				}_			}_		}__		if (!failedMessages.isEmpty()) {_			throw new MailSendException(failedMessages)__		}_	};actually,send,the,given,array,of,mime,messages,via,java,mail,param,mime,messages,mime,message,objects,to,send,param,original,messages,corresponding,original,message,objects,that,the,mime,messages,have,been,created,from,with,same,array,length,and,indices,as,the,mime,messages,array,if,any,throws,org,springframework,mail,mail,authentication,exception,in,case,of,authentication,failure,throws,org,springframework,mail,mail,send,exception,in,case,of,failure,when,sending,a,message;protected,void,do,send,mime,message,mime,messages,object,original,messages,throws,mail,exception,map,object,exception,failed,messages,new,linked,hash,map,object,exception,transport,transport,try,transport,get,transport,get,session,transport,connect,get,host,get,port,get,username,get,password,catch,authentication,failed,exception,ex,throw,new,mail,authentication,exception,ex,catch,messaging,exception,ex,for,int,i,0,i,mime,messages,length,i,object,original,original,messages,null,original,messages,i,mime,messages,i,failed,messages,put,original,ex,throw,new,mail,send,exception,mail,server,connection,failed,ex,failed,messages,try,for,int,i,0,i,mime,messages,length,i,mime,message,mime,message,mime,messages,i,try,if,mime,message,get,sent,date,null,mime,message,set,sent,date,new,date,string,message,id,mime,message,get,message,id,mime,message,save,changes,if,message,id,null,mime,message,set,header,message,id,transport,send,message,mime,message,mime,message,get,all,recipients,catch,messaging,exception,ex,object,original,original,messages,null,original,messages,i,mime,message,failed,messages,put,original,ex,finally,try,transport,close,catch,messaging,exception,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,failures,ex,failed,messages,else,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,sending,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,messages
JavaMailSenderImpl -> protected void doSend(MimeMessage[] mimeMessages, Object[] originalMessages) throws MailException;1357119239;Actually send the given array of MimeMessages via JavaMail._@param mimeMessages MimeMessage objects to send_@param originalMessages corresponding original message objects_that the MimeMessages have been created from (with same array_length and indices as the "mimeMessages" array), if any_@throws org.springframework.mail.MailAuthenticationException_in case of authentication failure_@throws org.springframework.mail.MailSendException_in case of failure when sending a message;protected void doSend(MimeMessage[] mimeMessages, Object[] originalMessages) throws MailException {_		Map<Object, Exception> failedMessages = new LinkedHashMap<Object, Exception>()___		Transport transport__		try {_			transport = getTransport(getSession())__			transport.connect(getHost(), getPort(), getUsername(), getPassword())__		}_		catch (AuthenticationFailedException ex) {_			throw new MailAuthenticationException(ex)__		}_		catch (MessagingException ex) {_			_			for (int i = 0_ i < mimeMessages.length_ i++) {_				Object original = (originalMessages != null ? originalMessages[i] : mimeMessages[i])__				failedMessages.put(original, ex)__			}_			throw new MailSendException("Mail server connection failed", ex, failedMessages)__		}__		try {_			for (int i = 0_ i < mimeMessages.length_ i++) {_				MimeMessage mimeMessage = mimeMessages[i]__				try {_					if (mimeMessage.getSentDate() == null) {_						mimeMessage.setSentDate(new Date())__					}_					String messageId = mimeMessage.getMessageID()__					mimeMessage.saveChanges()__					if (messageId != null) {_						_						mimeMessage.setHeader(HEADER_MESSAGE_ID, messageId)__					}_					transport.sendMessage(mimeMessage, mimeMessage.getAllRecipients())__				}_				catch (MessagingException ex) {_					Object original = (originalMessages != null ? originalMessages[i] : mimeMessage)__					failedMessages.put(original, ex)__				}_			}_		}_		finally {_			try {_				transport.close()__			}_			catch (MessagingException ex) {_				if (!failedMessages.isEmpty()) {_					throw new MailSendException("Failed to close server connection after message failures", ex,_							failedMessages)__				}_				else {_					throw new MailSendException("Failed to close server connection after message sending", ex)__				}_			}_		}__		if (!failedMessages.isEmpty()) {_			throw new MailSendException(failedMessages)__		}_	};actually,send,the,given,array,of,mime,messages,via,java,mail,param,mime,messages,mime,message,objects,to,send,param,original,messages,corresponding,original,message,objects,that,the,mime,messages,have,been,created,from,with,same,array,length,and,indices,as,the,mime,messages,array,if,any,throws,org,springframework,mail,mail,authentication,exception,in,case,of,authentication,failure,throws,org,springframework,mail,mail,send,exception,in,case,of,failure,when,sending,a,message;protected,void,do,send,mime,message,mime,messages,object,original,messages,throws,mail,exception,map,object,exception,failed,messages,new,linked,hash,map,object,exception,transport,transport,try,transport,get,transport,get,session,transport,connect,get,host,get,port,get,username,get,password,catch,authentication,failed,exception,ex,throw,new,mail,authentication,exception,ex,catch,messaging,exception,ex,for,int,i,0,i,mime,messages,length,i,object,original,original,messages,null,original,messages,i,mime,messages,i,failed,messages,put,original,ex,throw,new,mail,send,exception,mail,server,connection,failed,ex,failed,messages,try,for,int,i,0,i,mime,messages,length,i,mime,message,mime,message,mime,messages,i,try,if,mime,message,get,sent,date,null,mime,message,set,sent,date,new,date,string,message,id,mime,message,get,message,id,mime,message,save,changes,if,message,id,null,mime,message,set,header,message,id,transport,send,message,mime,message,mime,message,get,all,recipients,catch,messaging,exception,ex,object,original,original,messages,null,original,messages,i,mime,message,failed,messages,put,original,ex,finally,try,transport,close,catch,messaging,exception,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,failures,ex,failed,messages,else,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,sending,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,messages
JavaMailSenderImpl -> protected void doSend(MimeMessage[] mimeMessages, Object[] originalMessages) throws MailException;1368482696;Actually send the given array of MimeMessages via JavaMail._@param mimeMessages MimeMessage objects to send_@param originalMessages corresponding original message objects_that the MimeMessages have been created from (with same array_length and indices as the "mimeMessages" array), if any_@throws org.springframework.mail.MailAuthenticationException_in case of authentication failure_@throws org.springframework.mail.MailSendException_in case of failure when sending a message;protected void doSend(MimeMessage[] mimeMessages, Object[] originalMessages) throws MailException {_		Map<Object, Exception> failedMessages = new LinkedHashMap<Object, Exception>()___		Transport transport__		try {_			transport = getTransport(getSession())__			transport.connect(getHost(), getPort(), getUsername(), getPassword())__		}_		catch (AuthenticationFailedException ex) {_			throw new MailAuthenticationException(ex)__		}_		catch (MessagingException ex) {_			_			for (int i = 0_ i < mimeMessages.length_ i++) {_				Object original = (originalMessages != null ? originalMessages[i] : mimeMessages[i])__				failedMessages.put(original, ex)__			}_			throw new MailSendException("Mail server connection failed", ex, failedMessages)__		}__		try {_			for (int i = 0_ i < mimeMessages.length_ i++) {_				MimeMessage mimeMessage = mimeMessages[i]__				try {_					if (mimeMessage.getSentDate() == null) {_						mimeMessage.setSentDate(new Date())__					}_					String messageId = mimeMessage.getMessageID()__					mimeMessage.saveChanges()__					if (messageId != null) {_						_						mimeMessage.setHeader(HEADER_MESSAGE_ID, messageId)__					}_					transport.sendMessage(mimeMessage, mimeMessage.getAllRecipients())__				}_				catch (MessagingException ex) {_					Object original = (originalMessages != null ? originalMessages[i] : mimeMessage)__					failedMessages.put(original, ex)__				}_			}_		}_		finally {_			try {_				transport.close()__			}_			catch (MessagingException ex) {_				if (!failedMessages.isEmpty()) {_					throw new MailSendException("Failed to close server connection after message failures", ex,_							failedMessages)__				}_				else {_					throw new MailSendException("Failed to close server connection after message sending", ex)__				}_			}_		}__		if (!failedMessages.isEmpty()) {_			throw new MailSendException(failedMessages)__		}_	};actually,send,the,given,array,of,mime,messages,via,java,mail,param,mime,messages,mime,message,objects,to,send,param,original,messages,corresponding,original,message,objects,that,the,mime,messages,have,been,created,from,with,same,array,length,and,indices,as,the,mime,messages,array,if,any,throws,org,springframework,mail,mail,authentication,exception,in,case,of,authentication,failure,throws,org,springframework,mail,mail,send,exception,in,case,of,failure,when,sending,a,message;protected,void,do,send,mime,message,mime,messages,object,original,messages,throws,mail,exception,map,object,exception,failed,messages,new,linked,hash,map,object,exception,transport,transport,try,transport,get,transport,get,session,transport,connect,get,host,get,port,get,username,get,password,catch,authentication,failed,exception,ex,throw,new,mail,authentication,exception,ex,catch,messaging,exception,ex,for,int,i,0,i,mime,messages,length,i,object,original,original,messages,null,original,messages,i,mime,messages,i,failed,messages,put,original,ex,throw,new,mail,send,exception,mail,server,connection,failed,ex,failed,messages,try,for,int,i,0,i,mime,messages,length,i,mime,message,mime,message,mime,messages,i,try,if,mime,message,get,sent,date,null,mime,message,set,sent,date,new,date,string,message,id,mime,message,get,message,id,mime,message,save,changes,if,message,id,null,mime,message,set,header,message,id,transport,send,message,mime,message,mime,message,get,all,recipients,catch,messaging,exception,ex,object,original,original,messages,null,original,messages,i,mime,message,failed,messages,put,original,ex,finally,try,transport,close,catch,messaging,exception,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,failures,ex,failed,messages,else,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,sending,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,messages
JavaMailSenderImpl -> protected void doSend(MimeMessage[] mimeMessages, Object[] originalMessages) throws MailException;1412377300;Actually send the given array of MimeMessages via JavaMail._@param mimeMessages MimeMessage objects to send_@param originalMessages corresponding original message objects_that the MimeMessages have been created from (with same array_length and indices as the "mimeMessages" array), if any_@throws org.springframework.mail.MailAuthenticationException_in case of authentication failure_@throws org.springframework.mail.MailSendException_in case of failure when sending a message;protected void doSend(MimeMessage[] mimeMessages, Object[] originalMessages) throws MailException {_		String username = getUsername()__		String password = getPassword()__		if ("".equals(username)) {  _			username = null__			if ("".equals(password)) {  _				password = null__			}_		}__		Map<Object, Exception> failedMessages = new LinkedHashMap<Object, Exception>()__		Transport transport__		try {_			transport = getTransport(getSession())__			transport.connect(getHost(), getPort(), username, password)__		}_		catch (AuthenticationFailedException ex) {_			throw new MailAuthenticationException(ex)__		}_		catch (MessagingException ex) {_			_			for (int i = 0_ i < mimeMessages.length_ i++) {_				Object original = (originalMessages != null ? originalMessages[i] : mimeMessages[i])__				failedMessages.put(original, ex)__			}_			throw new MailSendException("Mail server connection failed", ex, failedMessages)__		}__		try {_			for (int i = 0_ i < mimeMessages.length_ i++) {_				MimeMessage mimeMessage = mimeMessages[i]__				try {_					if (mimeMessage.getSentDate() == null) {_						mimeMessage.setSentDate(new Date())__					}_					String messageId = mimeMessage.getMessageID()__					mimeMessage.saveChanges()__					if (messageId != null) {_						_						mimeMessage.setHeader(HEADER_MESSAGE_ID, messageId)__					}_					transport.sendMessage(mimeMessage, mimeMessage.getAllRecipients())__				}_				catch (MessagingException ex) {_					Object original = (originalMessages != null ? originalMessages[i] : mimeMessage)__					failedMessages.put(original, ex)__				}_			}_		}_		finally {_			try {_				transport.close()__			}_			catch (MessagingException ex) {_				if (!failedMessages.isEmpty()) {_					throw new MailSendException("Failed to close server connection after message failures", ex,_							failedMessages)__				}_				else {_					throw new MailSendException("Failed to close server connection after message sending", ex)__				}_			}_		}__		if (!failedMessages.isEmpty()) {_			throw new MailSendException(failedMessages)__		}_	};actually,send,the,given,array,of,mime,messages,via,java,mail,param,mime,messages,mime,message,objects,to,send,param,original,messages,corresponding,original,message,objects,that,the,mime,messages,have,been,created,from,with,same,array,length,and,indices,as,the,mime,messages,array,if,any,throws,org,springframework,mail,mail,authentication,exception,in,case,of,authentication,failure,throws,org,springframework,mail,mail,send,exception,in,case,of,failure,when,sending,a,message;protected,void,do,send,mime,message,mime,messages,object,original,messages,throws,mail,exception,string,username,get,username,string,password,get,password,if,equals,username,username,null,if,equals,password,password,null,map,object,exception,failed,messages,new,linked,hash,map,object,exception,transport,transport,try,transport,get,transport,get,session,transport,connect,get,host,get,port,username,password,catch,authentication,failed,exception,ex,throw,new,mail,authentication,exception,ex,catch,messaging,exception,ex,for,int,i,0,i,mime,messages,length,i,object,original,original,messages,null,original,messages,i,mime,messages,i,failed,messages,put,original,ex,throw,new,mail,send,exception,mail,server,connection,failed,ex,failed,messages,try,for,int,i,0,i,mime,messages,length,i,mime,message,mime,message,mime,messages,i,try,if,mime,message,get,sent,date,null,mime,message,set,sent,date,new,date,string,message,id,mime,message,get,message,id,mime,message,save,changes,if,message,id,null,mime,message,set,header,message,id,transport,send,message,mime,message,mime,message,get,all,recipients,catch,messaging,exception,ex,object,original,original,messages,null,original,messages,i,mime,message,failed,messages,put,original,ex,finally,try,transport,close,catch,messaging,exception,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,failures,ex,failed,messages,else,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,sending,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,messages
JavaMailSenderImpl -> protected void doSend(MimeMessage[] mimeMessages, Object[] originalMessages) throws MailException;1412602628;Actually send the given array of MimeMessages via JavaMail._@param mimeMessages MimeMessage objects to send_@param originalMessages corresponding original message objects_that the MimeMessages have been created from (with same array_length and indices as the "mimeMessages" array), if any_@throws org.springframework.mail.MailAuthenticationException_in case of authentication failure_@throws org.springframework.mail.MailSendException_in case of failure when sending a message;protected void doSend(MimeMessage[] mimeMessages, Object[] originalMessages) throws MailException {_		Map<Object, Exception> failedMessages = new LinkedHashMap<Object, Exception>()__		Transport transport = null___		try {_			for (int i = 0_ i < mimeMessages.length_ i++) {__				_				if (transport == null || !transport.isConnected()) {_					if (transport != null) {_						try {_							transport.close()__						}_						catch (Exception ex) {_							_						}_						transport = null__					}_					try {_						transport = connectTransport()__					}_					catch (AuthenticationFailedException ex) {_						throw new MailAuthenticationException(ex)__					}_					catch (Exception ex) {_						_						for (int j = i_ j < mimeMessages.length_ j++) {_							Object original = (originalMessages != null ? originalMessages[j] : mimeMessages[j])__							failedMessages.put(original, ex)__						}_						throw new MailSendException("Mail server connection failed", ex, failedMessages)__					}_				}__				_				MimeMessage mimeMessage = mimeMessages[i]__				try {_					if (mimeMessage.getSentDate() == null) {_						mimeMessage.setSentDate(new Date())__					}_					String messageId = mimeMessage.getMessageID()__					mimeMessage.saveChanges()__					if (messageId != null) {_						_						mimeMessage.setHeader(HEADER_MESSAGE_ID, messageId)__					}_					transport.sendMessage(mimeMessage, mimeMessage.getAllRecipients())__				}_				catch (Exception ex) {_					Object original = (originalMessages != null ? originalMessages[i] : mimeMessage)__					failedMessages.put(original, ex)__				}_			}_		}_		finally {_			try {_				if (transport != null) {_					transport.close()__				}_			}_			catch (Exception ex) {_				if (!failedMessages.isEmpty()) {_					throw new MailSendException("Failed to close server connection after message failures", ex,_							failedMessages)__				}_				else {_					throw new MailSendException("Failed to close server connection after message sending", ex)__				}_			}_		}__		if (!failedMessages.isEmpty()) {_			throw new MailSendException(failedMessages)__		}_	};actually,send,the,given,array,of,mime,messages,via,java,mail,param,mime,messages,mime,message,objects,to,send,param,original,messages,corresponding,original,message,objects,that,the,mime,messages,have,been,created,from,with,same,array,length,and,indices,as,the,mime,messages,array,if,any,throws,org,springframework,mail,mail,authentication,exception,in,case,of,authentication,failure,throws,org,springframework,mail,mail,send,exception,in,case,of,failure,when,sending,a,message;protected,void,do,send,mime,message,mime,messages,object,original,messages,throws,mail,exception,map,object,exception,failed,messages,new,linked,hash,map,object,exception,transport,transport,null,try,for,int,i,0,i,mime,messages,length,i,if,transport,null,transport,is,connected,if,transport,null,try,transport,close,catch,exception,ex,transport,null,try,transport,connect,transport,catch,authentication,failed,exception,ex,throw,new,mail,authentication,exception,ex,catch,exception,ex,for,int,j,i,j,mime,messages,length,j,object,original,original,messages,null,original,messages,j,mime,messages,j,failed,messages,put,original,ex,throw,new,mail,send,exception,mail,server,connection,failed,ex,failed,messages,mime,message,mime,message,mime,messages,i,try,if,mime,message,get,sent,date,null,mime,message,set,sent,date,new,date,string,message,id,mime,message,get,message,id,mime,message,save,changes,if,message,id,null,mime,message,set,header,message,id,transport,send,message,mime,message,mime,message,get,all,recipients,catch,exception,ex,object,original,original,messages,null,original,messages,i,mime,message,failed,messages,put,original,ex,finally,try,if,transport,null,transport,close,catch,exception,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,failures,ex,failed,messages,else,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,sending,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,messages
JavaMailSenderImpl -> protected void doSend(MimeMessage[] mimeMessages, Object[] originalMessages) throws MailException;1426003109;Actually send the given array of MimeMessages via JavaMail._@param mimeMessages MimeMessage objects to send_@param originalMessages corresponding original message objects_that the MimeMessages have been created from (with same array_length and indices as the "mimeMessages" array), if any_@throws org.springframework.mail.MailAuthenticationException_in case of authentication failure_@throws org.springframework.mail.MailSendException_in case of failure when sending a message;protected void doSend(MimeMessage[] mimeMessages, Object[] originalMessages) throws MailException {_		Map<Object, Exception> failedMessages = new LinkedHashMap<Object, Exception>()__		Transport transport = null___		try {_			for (int i = 0_ i < mimeMessages.length_ i++) {__				_				if (transport == null || !transport.isConnected()) {_					if (transport != null) {_						try {_							transport.close()__						}_						catch (Exception ex) {_							_						}_						transport = null__					}_					try {_						transport = connectTransport()__					}_					catch (AuthenticationFailedException ex) {_						throw new MailAuthenticationException(ex)__					}_					catch (Exception ex) {_						_						for (int j = i_ j < mimeMessages.length_ j++) {_							Object original = (originalMessages != null ? originalMessages[j] : mimeMessages[j])__							failedMessages.put(original, ex)__						}_						throw new MailSendException("Mail server connection failed", ex, failedMessages)__					}_				}__				_				MimeMessage mimeMessage = mimeMessages[i]__				try {_					if (mimeMessage.getSentDate() == null) {_						mimeMessage.setSentDate(new Date())__					}_					String messageId = mimeMessage.getMessageID()__					mimeMessage.saveChanges()__					if (messageId != null) {_						_						mimeMessage.setHeader(HEADER_MESSAGE_ID, messageId)__					}_					transport.sendMessage(mimeMessage, mimeMessage.getAllRecipients())__				}_				catch (Exception ex) {_					Object original = (originalMessages != null ? originalMessages[i] : mimeMessage)__					failedMessages.put(original, ex)__				}_			}_		}_		finally {_			try {_				if (transport != null) {_					transport.close()__				}_			}_			catch (Exception ex) {_				if (!failedMessages.isEmpty()) {_					throw new MailSendException("Failed to close server connection after message failures", ex,_							failedMessages)__				}_				else {_					throw new MailSendException("Failed to close server connection after message sending", ex)__				}_			}_		}__		if (!failedMessages.isEmpty()) {_			throw new MailSendException(failedMessages)__		}_	};actually,send,the,given,array,of,mime,messages,via,java,mail,param,mime,messages,mime,message,objects,to,send,param,original,messages,corresponding,original,message,objects,that,the,mime,messages,have,been,created,from,with,same,array,length,and,indices,as,the,mime,messages,array,if,any,throws,org,springframework,mail,mail,authentication,exception,in,case,of,authentication,failure,throws,org,springframework,mail,mail,send,exception,in,case,of,failure,when,sending,a,message;protected,void,do,send,mime,message,mime,messages,object,original,messages,throws,mail,exception,map,object,exception,failed,messages,new,linked,hash,map,object,exception,transport,transport,null,try,for,int,i,0,i,mime,messages,length,i,if,transport,null,transport,is,connected,if,transport,null,try,transport,close,catch,exception,ex,transport,null,try,transport,connect,transport,catch,authentication,failed,exception,ex,throw,new,mail,authentication,exception,ex,catch,exception,ex,for,int,j,i,j,mime,messages,length,j,object,original,original,messages,null,original,messages,j,mime,messages,j,failed,messages,put,original,ex,throw,new,mail,send,exception,mail,server,connection,failed,ex,failed,messages,mime,message,mime,message,mime,messages,i,try,if,mime,message,get,sent,date,null,mime,message,set,sent,date,new,date,string,message,id,mime,message,get,message,id,mime,message,save,changes,if,message,id,null,mime,message,set,header,message,id,transport,send,message,mime,message,mime,message,get,all,recipients,catch,exception,ex,object,original,original,messages,null,original,messages,i,mime,message,failed,messages,put,original,ex,finally,try,if,transport,null,transport,close,catch,exception,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,failures,ex,failed,messages,else,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,sending,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,messages
JavaMailSenderImpl -> protected void doSend(MimeMessage[] mimeMessages, Object[] originalMessages) throws MailException;1467730834;Actually send the given array of MimeMessages via JavaMail._@param mimeMessages MimeMessage objects to send_@param originalMessages corresponding original message objects_that the MimeMessages have been created from (with same array_length and indices as the "mimeMessages" array), if any_@throws org.springframework.mail.MailAuthenticationException_in case of authentication failure_@throws org.springframework.mail.MailSendException_in case of failure when sending a message;protected void doSend(MimeMessage[] mimeMessages, Object[] originalMessages) throws MailException {_		Map<Object, Exception> failedMessages = new LinkedHashMap<>()__		Transport transport = null___		try {_			for (int i = 0_ i < mimeMessages.length_ i++) {__				_				if (transport == null || !transport.isConnected()) {_					if (transport != null) {_						try {_							transport.close()__						}_						catch (Exception ex) {_							_						}_						transport = null__					}_					try {_						transport = connectTransport()__					}_					catch (AuthenticationFailedException ex) {_						throw new MailAuthenticationException(ex)__					}_					catch (Exception ex) {_						_						for (int j = i_ j < mimeMessages.length_ j++) {_							Object original = (originalMessages != null ? originalMessages[j] : mimeMessages[j])__							failedMessages.put(original, ex)__						}_						throw new MailSendException("Mail server connection failed", ex, failedMessages)__					}_				}__				_				MimeMessage mimeMessage = mimeMessages[i]__				try {_					if (mimeMessage.getSentDate() == null) {_						mimeMessage.setSentDate(new Date())__					}_					String messageId = mimeMessage.getMessageID()__					mimeMessage.saveChanges()__					if (messageId != null) {_						_						mimeMessage.setHeader(HEADER_MESSAGE_ID, messageId)__					}_					transport.sendMessage(mimeMessage, mimeMessage.getAllRecipients())__				}_				catch (Exception ex) {_					Object original = (originalMessages != null ? originalMessages[i] : mimeMessage)__					failedMessages.put(original, ex)__				}_			}_		}_		finally {_			try {_				if (transport != null) {_					transport.close()__				}_			}_			catch (Exception ex) {_				if (!failedMessages.isEmpty()) {_					throw new MailSendException("Failed to close server connection after message failures", ex,_							failedMessages)__				}_				else {_					throw new MailSendException("Failed to close server connection after message sending", ex)__				}_			}_		}__		if (!failedMessages.isEmpty()) {_			throw new MailSendException(failedMessages)__		}_	};actually,send,the,given,array,of,mime,messages,via,java,mail,param,mime,messages,mime,message,objects,to,send,param,original,messages,corresponding,original,message,objects,that,the,mime,messages,have,been,created,from,with,same,array,length,and,indices,as,the,mime,messages,array,if,any,throws,org,springframework,mail,mail,authentication,exception,in,case,of,authentication,failure,throws,org,springframework,mail,mail,send,exception,in,case,of,failure,when,sending,a,message;protected,void,do,send,mime,message,mime,messages,object,original,messages,throws,mail,exception,map,object,exception,failed,messages,new,linked,hash,map,transport,transport,null,try,for,int,i,0,i,mime,messages,length,i,if,transport,null,transport,is,connected,if,transport,null,try,transport,close,catch,exception,ex,transport,null,try,transport,connect,transport,catch,authentication,failed,exception,ex,throw,new,mail,authentication,exception,ex,catch,exception,ex,for,int,j,i,j,mime,messages,length,j,object,original,original,messages,null,original,messages,j,mime,messages,j,failed,messages,put,original,ex,throw,new,mail,send,exception,mail,server,connection,failed,ex,failed,messages,mime,message,mime,message,mime,messages,i,try,if,mime,message,get,sent,date,null,mime,message,set,sent,date,new,date,string,message,id,mime,message,get,message,id,mime,message,save,changes,if,message,id,null,mime,message,set,header,message,id,transport,send,message,mime,message,mime,message,get,all,recipients,catch,exception,ex,object,original,original,messages,null,original,messages,i,mime,message,failed,messages,put,original,ex,finally,try,if,transport,null,transport,close,catch,exception,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,failures,ex,failed,messages,else,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,sending,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,messages
JavaMailSenderImpl -> protected void doSend(MimeMessage[] mimeMessages, Object[] originalMessages) throws MailException;1495868221;Actually send the given array of MimeMessages via JavaMail._@param mimeMessages MimeMessage objects to send_@param originalMessages corresponding original message objects_that the MimeMessages have been created from (with same array_length and indices as the "mimeMessages" array), if any_@throws org.springframework.mail.MailAuthenticationException_in case of authentication failure_@throws org.springframework.mail.MailSendException_in case of failure when sending a message;protected void doSend(MimeMessage[] mimeMessages, Object[] originalMessages) throws MailException {_		Map<Object, Exception> failedMessages = new LinkedHashMap<>()__		Transport transport = null___		try {_			for (int i = 0_ i < mimeMessages.length_ i++) {__				_				if (transport == null || !transport.isConnected()) {_					if (transport != null) {_						try {_							transport.close()__						}_						catch (Exception ex) {_							_						}_						transport = null__					}_					try {_						transport = connectTransport()__					}_					catch (AuthenticationFailedException ex) {_						throw new MailAuthenticationException(ex)__					}_					catch (Exception ex) {_						_						for (int j = i_ j < mimeMessages.length_ j++) {_							Object original = (originalMessages != null ? originalMessages[j] : mimeMessages[j])__							failedMessages.put(original, ex)__						}_						throw new MailSendException("Mail server connection failed", ex, failedMessages)__					}_				}__				_				MimeMessage mimeMessage = mimeMessages[i]__				try {_					if (mimeMessage.getSentDate() == null) {_						mimeMessage.setSentDate(new Date())__					}_					String messageId = mimeMessage.getMessageID()__					mimeMessage.saveChanges()__					if (messageId != null) {_						_						mimeMessage.setHeader(HEADER_MESSAGE_ID, messageId)__					}_					transport.sendMessage(mimeMessage, mimeMessage.getAllRecipients())__				}_				catch (Exception ex) {_					Object original = (originalMessages != null ? originalMessages[i] : mimeMessage)__					failedMessages.put(original, ex)__				}_			}_		}_		finally {_			try {_				if (transport != null) {_					transport.close()__				}_			}_			catch (Exception ex) {_				if (!failedMessages.isEmpty()) {_					throw new MailSendException("Failed to close server connection after message failures", ex,_							failedMessages)__				}_				else {_					throw new MailSendException("Failed to close server connection after message sending", ex)__				}_			}_		}__		if (!failedMessages.isEmpty()) {_			throw new MailSendException(failedMessages)__		}_	};actually,send,the,given,array,of,mime,messages,via,java,mail,param,mime,messages,mime,message,objects,to,send,param,original,messages,corresponding,original,message,objects,that,the,mime,messages,have,been,created,from,with,same,array,length,and,indices,as,the,mime,messages,array,if,any,throws,org,springframework,mail,mail,authentication,exception,in,case,of,authentication,failure,throws,org,springframework,mail,mail,send,exception,in,case,of,failure,when,sending,a,message;protected,void,do,send,mime,message,mime,messages,object,original,messages,throws,mail,exception,map,object,exception,failed,messages,new,linked,hash,map,transport,transport,null,try,for,int,i,0,i,mime,messages,length,i,if,transport,null,transport,is,connected,if,transport,null,try,transport,close,catch,exception,ex,transport,null,try,transport,connect,transport,catch,authentication,failed,exception,ex,throw,new,mail,authentication,exception,ex,catch,exception,ex,for,int,j,i,j,mime,messages,length,j,object,original,original,messages,null,original,messages,j,mime,messages,j,failed,messages,put,original,ex,throw,new,mail,send,exception,mail,server,connection,failed,ex,failed,messages,mime,message,mime,message,mime,messages,i,try,if,mime,message,get,sent,date,null,mime,message,set,sent,date,new,date,string,message,id,mime,message,get,message,id,mime,message,save,changes,if,message,id,null,mime,message,set,header,message,id,transport,send,message,mime,message,mime,message,get,all,recipients,catch,exception,ex,object,original,original,messages,null,original,messages,i,mime,message,failed,messages,put,original,ex,finally,try,if,transport,null,transport,close,catch,exception,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,failures,ex,failed,messages,else,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,sending,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,messages
JavaMailSenderImpl -> protected Transport getTransport(Session session) throws NoSuchProviderException;1328020251;Obtain a Transport object from the given JavaMail Session,_using the configured protocol._<p>Can be overridden in subclasses, e.g. to return a mock Transport object._@see javax.mail.Session#getTransport(String)_@see #getProtocol();protected Transport getTransport(Session session) throws NoSuchProviderException {_		String protocol	= getProtocol()__		if (protocol == null) {_			protocol = session.getProperty("mail.transport.protocol")__			if (protocol == null) {_				protocol = DEFAULT_PROTOCOL__			}_		}_		return session.getTransport(protocol)__	};obtain,a,transport,object,from,the,given,java,mail,session,using,the,configured,protocol,p,can,be,overridden,in,subclasses,e,g,to,return,a,mock,transport,object,see,javax,mail,session,get,transport,string,see,get,protocol;protected,transport,get,transport,session,session,throws,no,such,provider,exception,string,protocol,get,protocol,if,protocol,null,protocol,session,get,property,mail,transport,protocol,if,protocol,null,protocol,return,session,get,transport,protocol
JavaMailSenderImpl -> protected Transport getTransport(Session session) throws NoSuchProviderException;1356735495;Obtain a Transport object from the given JavaMail Session,_using the configured protocol._<p>Can be overridden in subclasses, e.g. to return a mock Transport object._@see javax.mail.Session#getTransport(String)_@see #getProtocol();protected Transport getTransport(Session session) throws NoSuchProviderException {_		String protocol	= getProtocol()__		if (protocol == null) {_			protocol = session.getProperty("mail.transport.protocol")__			if (protocol == null) {_				protocol = DEFAULT_PROTOCOL__			}_		}_		return session.getTransport(protocol)__	};obtain,a,transport,object,from,the,given,java,mail,session,using,the,configured,protocol,p,can,be,overridden,in,subclasses,e,g,to,return,a,mock,transport,object,see,javax,mail,session,get,transport,string,see,get,protocol;protected,transport,get,transport,session,session,throws,no,such,provider,exception,string,protocol,get,protocol,if,protocol,null,protocol,session,get,property,mail,transport,protocol,if,protocol,null,protocol,return,session,get,transport,protocol
JavaMailSenderImpl -> protected Transport getTransport(Session session) throws NoSuchProviderException;1357119239;Obtain a Transport object from the given JavaMail Session,_using the configured protocol._<p>Can be overridden in subclasses, e.g. to return a mock Transport object._@see javax.mail.Session#getTransport(String)_@see #getProtocol();protected Transport getTransport(Session session) throws NoSuchProviderException {_		String protocol	= getProtocol()__		if (protocol == null) {_			protocol = session.getProperty("mail.transport.protocol")__			if (protocol == null) {_				protocol = DEFAULT_PROTOCOL__			}_		}_		return session.getTransport(protocol)__	};obtain,a,transport,object,from,the,given,java,mail,session,using,the,configured,protocol,p,can,be,overridden,in,subclasses,e,g,to,return,a,mock,transport,object,see,javax,mail,session,get,transport,string,see,get,protocol;protected,transport,get,transport,session,session,throws,no,such,provider,exception,string,protocol,get,protocol,if,protocol,null,protocol,session,get,property,mail,transport,protocol,if,protocol,null,protocol,return,session,get,transport,protocol
JavaMailSenderImpl -> protected Transport getTransport(Session session) throws NoSuchProviderException;1368482696;Obtain a Transport object from the given JavaMail Session,_using the configured protocol._<p>Can be overridden in subclasses, e.g. to return a mock Transport object._@see javax.mail.Session#getTransport(String)_@see #getProtocol();protected Transport getTransport(Session session) throws NoSuchProviderException {_		String protocol	= getProtocol()__		if (protocol == null) {_			protocol = session.getProperty("mail.transport.protocol")__			if (protocol == null) {_				protocol = DEFAULT_PROTOCOL__			}_		}_		return session.getTransport(protocol)__	};obtain,a,transport,object,from,the,given,java,mail,session,using,the,configured,protocol,p,can,be,overridden,in,subclasses,e,g,to,return,a,mock,transport,object,see,javax,mail,session,get,transport,string,see,get,protocol;protected,transport,get,transport,session,session,throws,no,such,provider,exception,string,protocol,get,protocol,if,protocol,null,protocol,session,get,property,mail,transport,protocol,if,protocol,null,protocol,return,session,get,transport,protocol
JavaMailSenderImpl -> protected Transport getTransport(Session session) throws NoSuchProviderException;1412377300;Obtain a Transport object from the given JavaMail Session,_using the configured protocol._<p>Can be overridden in subclasses, e.g. to return a mock Transport object._@see javax.mail.Session#getTransport(String)_@see #getProtocol();protected Transport getTransport(Session session) throws NoSuchProviderException {_		String protocol	= getProtocol()__		if (protocol == null) {_			protocol = session.getProperty("mail.transport.protocol")__			if (protocol == null) {_				protocol = DEFAULT_PROTOCOL__			}_		}_		return session.getTransport(protocol)__	};obtain,a,transport,object,from,the,given,java,mail,session,using,the,configured,protocol,p,can,be,overridden,in,subclasses,e,g,to,return,a,mock,transport,object,see,javax,mail,session,get,transport,string,see,get,protocol;protected,transport,get,transport,session,session,throws,no,such,provider,exception,string,protocol,get,protocol,if,protocol,null,protocol,session,get,property,mail,transport,protocol,if,protocol,null,protocol,return,session,get,transport,protocol
JavaMailSenderImpl -> protected Transport getTransport(Session session) throws NoSuchProviderException;1412602628;Obtain a Transport object from the given JavaMail Session,_using the configured protocol._<p>Can be overridden in subclasses, e.g. to return a mock Transport object._@see javax.mail.Session#getTransport(String)_@see #getSession()_@see #getProtocol();protected Transport getTransport(Session session) throws NoSuchProviderException {_		String protocol	= getProtocol()__		if (protocol == null) {_			protocol = session.getProperty("mail.transport.protocol")__			if (protocol == null) {_				protocol = DEFAULT_PROTOCOL__			}_		}_		return session.getTransport(protocol)__	};obtain,a,transport,object,from,the,given,java,mail,session,using,the,configured,protocol,p,can,be,overridden,in,subclasses,e,g,to,return,a,mock,transport,object,see,javax,mail,session,get,transport,string,see,get,session,see,get,protocol;protected,transport,get,transport,session,session,throws,no,such,provider,exception,string,protocol,get,protocol,if,protocol,null,protocol,session,get,property,mail,transport,protocol,if,protocol,null,protocol,return,session,get,transport,protocol
JavaMailSenderImpl -> protected Transport getTransport(Session session) throws NoSuchProviderException;1426003109;Obtain a Transport object from the given JavaMail Session,_using the configured protocol._<p>Can be overridden in subclasses, e.g. to return a mock Transport object._@see javax.mail.Session#getTransport(String)_@see #getSession()_@see #getProtocol();protected Transport getTransport(Session session) throws NoSuchProviderException {_		String protocol	= getProtocol()__		if (protocol == null) {_			protocol = session.getProperty("mail.transport.protocol")__			if (protocol == null) {_				protocol = DEFAULT_PROTOCOL__			}_		}_		return session.getTransport(protocol)__	};obtain,a,transport,object,from,the,given,java,mail,session,using,the,configured,protocol,p,can,be,overridden,in,subclasses,e,g,to,return,a,mock,transport,object,see,javax,mail,session,get,transport,string,see,get,session,see,get,protocol;protected,transport,get,transport,session,session,throws,no,such,provider,exception,string,protocol,get,protocol,if,protocol,null,protocol,session,get,property,mail,transport,protocol,if,protocol,null,protocol,return,session,get,transport,protocol
JavaMailSenderImpl -> protected Transport getTransport(Session session) throws NoSuchProviderException;1467730834;Obtain a Transport object from the given JavaMail Session,_using the configured protocol._<p>Can be overridden in subclasses, e.g. to return a mock Transport object._@see javax.mail.Session#getTransport(String)_@see #getSession()_@see #getProtocol();protected Transport getTransport(Session session) throws NoSuchProviderException {_		String protocol	= getProtocol()__		if (protocol == null) {_			protocol = session.getProperty("mail.transport.protocol")__			if (protocol == null) {_				protocol = DEFAULT_PROTOCOL__			}_		}_		return session.getTransport(protocol)__	};obtain,a,transport,object,from,the,given,java,mail,session,using,the,configured,protocol,p,can,be,overridden,in,subclasses,e,g,to,return,a,mock,transport,object,see,javax,mail,session,get,transport,string,see,get,session,see,get,protocol;protected,transport,get,transport,session,session,throws,no,such,provider,exception,string,protocol,get,protocol,if,protocol,null,protocol,session,get,property,mail,transport,protocol,if,protocol,null,protocol,return,session,get,transport,protocol
JavaMailSenderImpl -> protected Transport getTransport(Session session) throws NoSuchProviderException;1495868221;Obtain a Transport object from the given JavaMail Session,_using the configured protocol._<p>Can be overridden in subclasses, e.g. to return a mock Transport object._@see javax.mail.Session#getTransport(String)_@see #getSession()_@see #getProtocol();protected Transport getTransport(Session session) throws NoSuchProviderException {_		String protocol	= getProtocol()__		if (protocol == null) {_			protocol = session.getProperty("mail.transport.protocol")__			if (protocol == null) {_				protocol = DEFAULT_PROTOCOL__			}_		}_		return session.getTransport(protocol)__	};obtain,a,transport,object,from,the,given,java,mail,session,using,the,configured,protocol,p,can,be,overridden,in,subclasses,e,g,to,return,a,mock,transport,object,see,javax,mail,session,get,transport,string,see,get,session,see,get,protocol;protected,transport,get,transport,session,session,throws,no,such,provider,exception,string,protocol,get,protocol,if,protocol,null,protocol,session,get,property,mail,transport,protocol,if,protocol,null,protocol,return,session,get,transport,protocol
JavaMailSenderImpl -> protected Transport getTransport(Session session) throws NoSuchProviderException;1496259743;Obtain a Transport object from the given JavaMail Session,_using the configured protocol._<p>Can be overridden in subclasses, e.g. to return a mock Transport object._@see javax.mail.Session#getTransport(String)_@see #getSession()_@see #getProtocol();protected Transport getTransport(Session session) throws NoSuchProviderException {_		String protocol	= getProtocol()__		if (protocol == null) {_			protocol = session.getProperty("mail.transport.protocol")__			if (protocol == null) {_				protocol = DEFAULT_PROTOCOL__			}_		}_		return session.getTransport(protocol)__	};obtain,a,transport,object,from,the,given,java,mail,session,using,the,configured,protocol,p,can,be,overridden,in,subclasses,e,g,to,return,a,mock,transport,object,see,javax,mail,session,get,transport,string,see,get,session,see,get,protocol;protected,transport,get,transport,session,session,throws,no,such,provider,exception,string,protocol,get,protocol,if,protocol,null,protocol,session,get,property,mail,transport,protocol,if,protocol,null,protocol,return,session,get,transport,protocol
JavaMailSenderImpl -> protected Transport getTransport(Session session) throws NoSuchProviderException;1496837955;Obtain a Transport object from the given JavaMail Session,_using the configured protocol._<p>Can be overridden in subclasses, e.g. to return a mock Transport object._@see javax.mail.Session#getTransport(String)_@see #getSession()_@see #getProtocol();protected Transport getTransport(Session session) throws NoSuchProviderException {_		String protocol	= getProtocol()__		if (protocol == null) {_			protocol = session.getProperty("mail.transport.protocol")__			if (protocol == null) {_				protocol = DEFAULT_PROTOCOL__			}_		}_		return session.getTransport(protocol)__	};obtain,a,transport,object,from,the,given,java,mail,session,using,the,configured,protocol,p,can,be,overridden,in,subclasses,e,g,to,return,a,mock,transport,object,see,javax,mail,session,get,transport,string,see,get,session,see,get,protocol;protected,transport,get,transport,session,session,throws,no,such,provider,exception,string,protocol,get,protocol,if,protocol,null,protocol,session,get,property,mail,transport,protocol,if,protocol,null,protocol,return,session,get,transport,protocol
JavaMailSenderImpl -> protected Transport getTransport(Session session) throws NoSuchProviderException;1498780456;Obtain a Transport object from the given JavaMail Session,_using the configured protocol._<p>Can be overridden in subclasses, e.g. to return a mock Transport object._@see javax.mail.Session#getTransport(String)_@see #getSession()_@see #getProtocol();protected Transport getTransport(Session session) throws NoSuchProviderException {_		String protocol	= getProtocol()__		if (protocol == null) {_			protocol = session.getProperty("mail.transport.protocol")__			if (protocol == null) {_				protocol = DEFAULT_PROTOCOL__			}_		}_		return session.getTransport(protocol)__	};obtain,a,transport,object,from,the,given,java,mail,session,using,the,configured,protocol,p,can,be,overridden,in,subclasses,e,g,to,return,a,mock,transport,object,see,javax,mail,session,get,transport,string,see,get,session,see,get,protocol;protected,transport,get,transport,session,session,throws,no,such,provider,exception,string,protocol,get,protocol,if,protocol,null,protocol,session,get,property,mail,transport,protocol,if,protocol,null,protocol,return,session,get,transport,protocol
JavaMailSenderImpl -> protected Transport getTransport(Session session) throws NoSuchProviderException;1500448076;Obtain a Transport object from the given JavaMail Session,_using the configured protocol._<p>Can be overridden in subclasses, e.g. to return a mock Transport object._@see javax.mail.Session#getTransport(String)_@see #getSession()_@see #getProtocol();protected Transport getTransport(Session session) throws NoSuchProviderException {_		String protocol	= getProtocol()__		if (protocol == null) {_			protocol = session.getProperty("mail.transport.protocol")__			if (protocol == null) {_				protocol = DEFAULT_PROTOCOL__			}_		}_		return session.getTransport(protocol)__	};obtain,a,transport,object,from,the,given,java,mail,session,using,the,configured,protocol,p,can,be,overridden,in,subclasses,e,g,to,return,a,mock,transport,object,see,javax,mail,session,get,transport,string,see,get,session,see,get,protocol;protected,transport,get,transport,session,session,throws,no,such,provider,exception,string,protocol,get,protocol,if,protocol,null,protocol,session,get,property,mail,transport,protocol,if,protocol,null,protocol,return,session,get,transport,protocol
JavaMailSenderImpl -> protected Transport getTransport(Session session) throws NoSuchProviderException;1519295386;Obtain a Transport object from the given JavaMail Session,_using the configured protocol._<p>Can be overridden in subclasses, e.g. to return a mock Transport object._@see javax.mail.Session#getTransport(String)_@see #getSession()_@see #getProtocol();protected Transport getTransport(Session session) throws NoSuchProviderException {_		String protocol	= getProtocol()__		if (protocol == null) {_			protocol = session.getProperty("mail.transport.protocol")__			if (protocol == null) {_				protocol = DEFAULT_PROTOCOL__			}_		}_		return session.getTransport(protocol)__	};obtain,a,transport,object,from,the,given,java,mail,session,using,the,configured,protocol,p,can,be,overridden,in,subclasses,e,g,to,return,a,mock,transport,object,see,javax,mail,session,get,transport,string,see,get,session,see,get,protocol;protected,transport,get,transport,session,session,throws,no,such,provider,exception,string,protocol,get,protocol,if,protocol,null,protocol,session,get,property,mail,transport,protocol,if,protocol,null,protocol,return,session,get,transport,protocol
JavaMailSenderImpl -> protected Transport getTransport(Session session) throws NoSuchProviderException;1530174524;Obtain a Transport object from the given JavaMail Session,_using the configured protocol._<p>Can be overridden in subclasses, e.g. to return a mock Transport object._@see javax.mail.Session#getTransport(String)_@see #getSession()_@see #getProtocol();protected Transport getTransport(Session session) throws NoSuchProviderException {_		String protocol	= getProtocol()__		if (protocol == null) {_			protocol = session.getProperty("mail.transport.protocol")__			if (protocol == null) {_				protocol = DEFAULT_PROTOCOL__			}_		}_		return session.getTransport(protocol)__	};obtain,a,transport,object,from,the,given,java,mail,session,using,the,configured,protocol,p,can,be,overridden,in,subclasses,e,g,to,return,a,mock,transport,object,see,javax,mail,session,get,transport,string,see,get,session,see,get,protocol;protected,transport,get,transport,session,session,throws,no,such,provider,exception,string,protocol,get,protocol,if,protocol,null,protocol,session,get,property,mail,transport,protocol,if,protocol,null,protocol,return,session,get,transport,protocol
JavaMailSenderImpl -> protected Transport getTransport(Session session) throws NoSuchProviderException;1543862961;Obtain a Transport object from the given JavaMail Session,_using the configured protocol._<p>Can be overridden in subclasses, e.g. to return a mock Transport object._@see javax.mail.Session#getTransport(String)_@see #getSession()_@see #getProtocol();protected Transport getTransport(Session session) throws NoSuchProviderException {_		String protocol	= getProtocol()__		if (protocol == null) {_			protocol = session.getProperty("mail.transport.protocol")__			if (protocol == null) {_				protocol = DEFAULT_PROTOCOL__			}_		}_		return session.getTransport(protocol)__	};obtain,a,transport,object,from,the,given,java,mail,session,using,the,configured,protocol,p,can,be,overridden,in,subclasses,e,g,to,return,a,mock,transport,object,see,javax,mail,session,get,transport,string,see,get,session,see,get,protocol;protected,transport,get,transport,session,session,throws,no,such,provider,exception,string,protocol,get,protocol,if,protocol,null,protocol,session,get,property,mail,transport,protocol,if,protocol,null,protocol,return,session,get,transport,protocol
JavaMailSenderImpl -> public void setUsername(@Nullable String username);1500448076;Set the username for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified username will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setPassword;public void setUsername(@Nullable String username) {_		this.username = username__	};set,the,username,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,username,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,password;public,void,set,username,nullable,string,username,this,username,username
JavaMailSenderImpl -> public void setUsername(@Nullable String username);1519295386;Set the username for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified username will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setPassword;public void setUsername(@Nullable String username) {_		this.username = username__	};set,the,username,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,username,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,password;public,void,set,username,nullable,string,username,this,username,username
JavaMailSenderImpl -> public void setUsername(@Nullable String username);1530174524;Set the username for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified username will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setPassword;public void setUsername(@Nullable String username) {_		this.username = username__	};set,the,username,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,username,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,password;public,void,set,username,nullable,string,username,this,username,username
JavaMailSenderImpl -> public void setUsername(@Nullable String username);1543862961;Set the username for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified username will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setPassword;public void setUsername(@Nullable String username) {_		this.username = username__	};set,the,username,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,username,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,password;public,void,set,username,nullable,string,username,this,username,username
JavaMailSenderImpl -> public synchronized void setSession(Session session);1328020251;Set the JavaMail <code>Session</code>, possibly pulled from JNDI._<p>Default is a new <code>Session</code> without defaults, that is_completely configured via this instance's properties._<p>If using a pre-configured <code>Session</code>, non-default properties_in this instance will override the settings in the <code>Session</code>._@see #setJavaMailProperties;public synchronized void setSession(Session session) {_		Assert.notNull(session, "Session must not be null")__		this.session = session__	};set,the,java,mail,code,session,code,possibly,pulled,from,jndi,p,default,is,a,new,code,session,code,without,defaults,that,is,completely,configured,via,this,instance,s,properties,p,if,using,a,pre,configured,code,session,code,non,default,properties,in,this,instance,will,override,the,settings,in,the,code,session,code,see,set,java,mail,properties;public,synchronized,void,set,session,session,session,assert,not,null,session,session,must,not,be,null,this,session,session
JavaMailSenderImpl -> public synchronized void setSession(Session session);1356735495;Set the JavaMail {@code Session}, possibly pulled from JNDI._<p>Default is a new {@code Session} without defaults, that is_completely configured via this instance's properties._<p>If using a pre-configured {@code Session}, non-default properties_in this instance will override the settings in the {@code Session}._@see #setJavaMailProperties;public synchronized void setSession(Session session) {_		Assert.notNull(session, "Session must not be null")__		this.session = session__	};set,the,java,mail,code,session,possibly,pulled,from,jndi,p,default,is,a,new,code,session,without,defaults,that,is,completely,configured,via,this,instance,s,properties,p,if,using,a,pre,configured,code,session,non,default,properties,in,this,instance,will,override,the,settings,in,the,code,session,see,set,java,mail,properties;public,synchronized,void,set,session,session,session,assert,not,null,session,session,must,not,be,null,this,session,session
JavaMailSenderImpl -> public synchronized void setSession(Session session);1357119239;Set the JavaMail {@code Session}, possibly pulled from JNDI._<p>Default is a new {@code Session} without defaults, that is_completely configured via this instance's properties._<p>If using a pre-configured {@code Session}, non-default properties_in this instance will override the settings in the {@code Session}._@see #setJavaMailProperties;public synchronized void setSession(Session session) {_		Assert.notNull(session, "Session must not be null")__		this.session = session__	};set,the,java,mail,code,session,possibly,pulled,from,jndi,p,default,is,a,new,code,session,without,defaults,that,is,completely,configured,via,this,instance,s,properties,p,if,using,a,pre,configured,code,session,non,default,properties,in,this,instance,will,override,the,settings,in,the,code,session,see,set,java,mail,properties;public,synchronized,void,set,session,session,session,assert,not,null,session,session,must,not,be,null,this,session,session
JavaMailSenderImpl -> public synchronized void setSession(Session session);1368482696;Set the JavaMail {@code Session}, possibly pulled from JNDI._<p>Default is a new {@code Session} without defaults, that is_completely configured via this instance's properties._<p>If using a pre-configured {@code Session}, non-default properties_in this instance will override the settings in the {@code Session}._@see #setJavaMailProperties;public synchronized void setSession(Session session) {_		Assert.notNull(session, "Session must not be null")__		this.session = session__	};set,the,java,mail,code,session,possibly,pulled,from,jndi,p,default,is,a,new,code,session,without,defaults,that,is,completely,configured,via,this,instance,s,properties,p,if,using,a,pre,configured,code,session,non,default,properties,in,this,instance,will,override,the,settings,in,the,code,session,see,set,java,mail,properties;public,synchronized,void,set,session,session,session,assert,not,null,session,session,must,not,be,null,this,session,session
JavaMailSenderImpl -> public synchronized void setSession(Session session);1412377300;Set the JavaMail {@code Session}, possibly pulled from JNDI._<p>Default is a new {@code Session} without defaults, that is_completely configured via this instance's properties._<p>If using a pre-configured {@code Session}, non-default properties_in this instance will override the settings in the {@code Session}._@see #setJavaMailProperties;public synchronized void setSession(Session session) {_		Assert.notNull(session, "Session must not be null")__		this.session = session__	};set,the,java,mail,code,session,possibly,pulled,from,jndi,p,default,is,a,new,code,session,without,defaults,that,is,completely,configured,via,this,instance,s,properties,p,if,using,a,pre,configured,code,session,non,default,properties,in,this,instance,will,override,the,settings,in,the,code,session,see,set,java,mail,properties;public,synchronized,void,set,session,session,session,assert,not,null,session,session,must,not,be,null,this,session,session
JavaMailSenderImpl -> public synchronized void setSession(Session session);1412602628;Set the JavaMail {@code Session}, possibly pulled from JNDI._<p>Default is a new {@code Session} without defaults, that is_completely configured via this instance's properties._<p>If using a pre-configured {@code Session}, non-default properties_in this instance will override the settings in the {@code Session}._@see #setJavaMailProperties;public synchronized void setSession(Session session) {_		Assert.notNull(session, "Session must not be null")__		this.session = session__	};set,the,java,mail,code,session,possibly,pulled,from,jndi,p,default,is,a,new,code,session,without,defaults,that,is,completely,configured,via,this,instance,s,properties,p,if,using,a,pre,configured,code,session,non,default,properties,in,this,instance,will,override,the,settings,in,the,code,session,see,set,java,mail,properties;public,synchronized,void,set,session,session,session,assert,not,null,session,session,must,not,be,null,this,session,session
JavaMailSenderImpl -> public synchronized void setSession(Session session);1426003109;Set the JavaMail {@code Session}, possibly pulled from JNDI._<p>Default is a new {@code Session} without defaults, that is_completely configured via this instance's properties._<p>If using a pre-configured {@code Session}, non-default properties_in this instance will override the settings in the {@code Session}._@see #setJavaMailProperties;public synchronized void setSession(Session session) {_		Assert.notNull(session, "Session must not be null")__		this.session = session__	};set,the,java,mail,code,session,possibly,pulled,from,jndi,p,default,is,a,new,code,session,without,defaults,that,is,completely,configured,via,this,instance,s,properties,p,if,using,a,pre,configured,code,session,non,default,properties,in,this,instance,will,override,the,settings,in,the,code,session,see,set,java,mail,properties;public,synchronized,void,set,session,session,session,assert,not,null,session,session,must,not,be,null,this,session,session
JavaMailSenderImpl -> public synchronized void setSession(Session session);1467730834;Set the JavaMail {@code Session}, possibly pulled from JNDI._<p>Default is a new {@code Session} without defaults, that is_completely configured via this instance's properties._<p>If using a pre-configured {@code Session}, non-default properties_in this instance will override the settings in the {@code Session}._@see #setJavaMailProperties;public synchronized void setSession(Session session) {_		Assert.notNull(session, "Session must not be null")__		this.session = session__	};set,the,java,mail,code,session,possibly,pulled,from,jndi,p,default,is,a,new,code,session,without,defaults,that,is,completely,configured,via,this,instance,s,properties,p,if,using,a,pre,configured,code,session,non,default,properties,in,this,instance,will,override,the,settings,in,the,code,session,see,set,java,mail,properties;public,synchronized,void,set,session,session,session,assert,not,null,session,session,must,not,be,null,this,session,session
JavaMailSenderImpl -> public synchronized void setSession(Session session);1495868221;Set the JavaMail {@code Session}, possibly pulled from JNDI._<p>Default is a new {@code Session} without defaults, that is_completely configured via this instance's properties._<p>If using a pre-configured {@code Session}, non-default properties_in this instance will override the settings in the {@code Session}._@see #setJavaMailProperties;public synchronized void setSession(Session session) {_		Assert.notNull(session, "Session must not be null")__		this.session = session__	};set,the,java,mail,code,session,possibly,pulled,from,jndi,p,default,is,a,new,code,session,without,defaults,that,is,completely,configured,via,this,instance,s,properties,p,if,using,a,pre,configured,code,session,non,default,properties,in,this,instance,will,override,the,settings,in,the,code,session,see,set,java,mail,properties;public,synchronized,void,set,session,session,session,assert,not,null,session,session,must,not,be,null,this,session,session
JavaMailSenderImpl -> public synchronized void setSession(Session session);1496259743;Set the JavaMail {@code Session}, possibly pulled from JNDI._<p>Default is a new {@code Session} without defaults, that is_completely configured via this instance's properties._<p>If using a pre-configured {@code Session}, non-default properties_in this instance will override the settings in the {@code Session}._@see #setJavaMailProperties;public synchronized void setSession(Session session) {_		Assert.notNull(session, "Session must not be null")__		this.session = session__	};set,the,java,mail,code,session,possibly,pulled,from,jndi,p,default,is,a,new,code,session,without,defaults,that,is,completely,configured,via,this,instance,s,properties,p,if,using,a,pre,configured,code,session,non,default,properties,in,this,instance,will,override,the,settings,in,the,code,session,see,set,java,mail,properties;public,synchronized,void,set,session,session,session,assert,not,null,session,session,must,not,be,null,this,session,session
JavaMailSenderImpl -> public synchronized void setSession(Session session);1496837955;Set the JavaMail {@code Session}, possibly pulled from JNDI._<p>Default is a new {@code Session} without defaults, that is_completely configured via this instance's properties._<p>If using a pre-configured {@code Session}, non-default properties_in this instance will override the settings in the {@code Session}._@see #setJavaMailProperties;public synchronized void setSession(Session session) {_		Assert.notNull(session, "Session must not be null")__		this.session = session__	};set,the,java,mail,code,session,possibly,pulled,from,jndi,p,default,is,a,new,code,session,without,defaults,that,is,completely,configured,via,this,instance,s,properties,p,if,using,a,pre,configured,code,session,non,default,properties,in,this,instance,will,override,the,settings,in,the,code,session,see,set,java,mail,properties;public,synchronized,void,set,session,session,session,assert,not,null,session,session,must,not,be,null,this,session,session
JavaMailSenderImpl -> public synchronized void setSession(Session session);1498780456;Set the JavaMail {@code Session}, possibly pulled from JNDI._<p>Default is a new {@code Session} without defaults, that is_completely configured via this instance's properties._<p>If using a pre-configured {@code Session}, non-default properties_in this instance will override the settings in the {@code Session}._@see #setJavaMailProperties;public synchronized void setSession(Session session) {_		Assert.notNull(session, "Session must not be null")__		this.session = session__	};set,the,java,mail,code,session,possibly,pulled,from,jndi,p,default,is,a,new,code,session,without,defaults,that,is,completely,configured,via,this,instance,s,properties,p,if,using,a,pre,configured,code,session,non,default,properties,in,this,instance,will,override,the,settings,in,the,code,session,see,set,java,mail,properties;public,synchronized,void,set,session,session,session,assert,not,null,session,session,must,not,be,null,this,session,session
JavaMailSenderImpl -> public synchronized void setSession(Session session);1500448076;Set the JavaMail {@code Session}, possibly pulled from JNDI._<p>Default is a new {@code Session} without defaults, that is_completely configured via this instance's properties._<p>If using a pre-configured {@code Session}, non-default properties_in this instance will override the settings in the {@code Session}._@see #setJavaMailProperties;public synchronized void setSession(Session session) {_		Assert.notNull(session, "Session must not be null")__		this.session = session__	};set,the,java,mail,code,session,possibly,pulled,from,jndi,p,default,is,a,new,code,session,without,defaults,that,is,completely,configured,via,this,instance,s,properties,p,if,using,a,pre,configured,code,session,non,default,properties,in,this,instance,will,override,the,settings,in,the,code,session,see,set,java,mail,properties;public,synchronized,void,set,session,session,session,assert,not,null,session,session,must,not,be,null,this,session,session
JavaMailSenderImpl -> public synchronized void setSession(Session session);1519295386;Set the JavaMail {@code Session}, possibly pulled from JNDI._<p>Default is a new {@code Session} without defaults, that is_completely configured via this instance's properties._<p>If using a pre-configured {@code Session}, non-default properties_in this instance will override the settings in the {@code Session}._@see #setJavaMailProperties;public synchronized void setSession(Session session) {_		Assert.notNull(session, "Session must not be null")__		this.session = session__	};set,the,java,mail,code,session,possibly,pulled,from,jndi,p,default,is,a,new,code,session,without,defaults,that,is,completely,configured,via,this,instance,s,properties,p,if,using,a,pre,configured,code,session,non,default,properties,in,this,instance,will,override,the,settings,in,the,code,session,see,set,java,mail,properties;public,synchronized,void,set,session,session,session,assert,not,null,session,session,must,not,be,null,this,session,session
JavaMailSenderImpl -> public synchronized void setSession(Session session);1530174524;Set the JavaMail {@code Session}, possibly pulled from JNDI._<p>Default is a new {@code Session} without defaults, that is_completely configured via this instance's properties._<p>If using a pre-configured {@code Session}, non-default properties_in this instance will override the settings in the {@code Session}._@see #setJavaMailProperties;public synchronized void setSession(Session session) {_		Assert.notNull(session, "Session must not be null")__		this.session = session__	};set,the,java,mail,code,session,possibly,pulled,from,jndi,p,default,is,a,new,code,session,without,defaults,that,is,completely,configured,via,this,instance,s,properties,p,if,using,a,pre,configured,code,session,non,default,properties,in,this,instance,will,override,the,settings,in,the,code,session,see,set,java,mail,properties;public,synchronized,void,set,session,session,session,assert,not,null,session,session,must,not,be,null,this,session,session
JavaMailSenderImpl -> public synchronized void setSession(Session session);1543862961;Set the JavaMail {@code Session}, possibly pulled from JNDI._<p>Default is a new {@code Session} without defaults, that is_completely configured via this instance's properties._<p>If using a pre-configured {@code Session}, non-default properties_in this instance will override the settings in the {@code Session}._@see #setJavaMailProperties;public synchronized void setSession(Session session) {_		Assert.notNull(session, "Session must not be null")__		this.session = session__	};set,the,java,mail,code,session,possibly,pulled,from,jndi,p,default,is,a,new,code,session,without,defaults,that,is,completely,configured,via,this,instance,s,properties,p,if,using,a,pre,configured,code,session,non,default,properties,in,this,instance,will,override,the,settings,in,the,code,session,see,set,java,mail,properties;public,synchronized,void,set,session,session,session,assert,not,null,session,session,must,not,be,null,this,session,session
JavaMailSenderImpl -> public String getUsername();1328020251;Return the username for the account at the mail host.;public String getUsername() {_		return this.username__	};return,the,username,for,the,account,at,the,mail,host;public,string,get,username,return,this,username
JavaMailSenderImpl -> public String getUsername();1356735495;Return the username for the account at the mail host.;public String getUsername() {_		return this.username__	};return,the,username,for,the,account,at,the,mail,host;public,string,get,username,return,this,username
JavaMailSenderImpl -> public String getUsername();1357119239;Return the username for the account at the mail host.;public String getUsername() {_		return this.username__	};return,the,username,for,the,account,at,the,mail,host;public,string,get,username,return,this,username
JavaMailSenderImpl -> public String getUsername();1368482696;Return the username for the account at the mail host.;public String getUsername() {_		return this.username__	};return,the,username,for,the,account,at,the,mail,host;public,string,get,username,return,this,username
JavaMailSenderImpl -> public String getUsername();1412377300;Return the username for the account at the mail host.;public String getUsername() {_		return this.username__	};return,the,username,for,the,account,at,the,mail,host;public,string,get,username,return,this,username
JavaMailSenderImpl -> public String getUsername();1412602628;Return the username for the account at the mail host.;public String getUsername() {_		return this.username__	};return,the,username,for,the,account,at,the,mail,host;public,string,get,username,return,this,username
JavaMailSenderImpl -> public String getUsername();1426003109;Return the username for the account at the mail host.;public String getUsername() {_		return this.username__	};return,the,username,for,the,account,at,the,mail,host;public,string,get,username,return,this,username
JavaMailSenderImpl -> public String getUsername();1467730834;Return the username for the account at the mail host.;public String getUsername() {_		return this.username__	};return,the,username,for,the,account,at,the,mail,host;public,string,get,username,return,this,username
JavaMailSenderImpl -> public String getDefaultEncoding();1328020251;Return the default encoding for {@link MimeMessage MimeMessages},_or <code>null</code> if none.;public String getDefaultEncoding() {_		return this.defaultEncoding__	};return,the,default,encoding,for,link,mime,message,mime,messages,or,code,null,code,if,none;public,string,get,default,encoding,return,this,default,encoding
JavaMailSenderImpl -> public String getDefaultEncoding();1356735495;Return the default encoding for {@link MimeMessage MimeMessages},_or {@code null} if none.;public String getDefaultEncoding() {_		return this.defaultEncoding__	};return,the,default,encoding,for,link,mime,message,mime,messages,or,code,null,if,none;public,string,get,default,encoding,return,this,default,encoding
JavaMailSenderImpl -> public String getDefaultEncoding();1357119239;Return the default encoding for {@link MimeMessage MimeMessages},_or {@code null} if none.;public String getDefaultEncoding() {_		return this.defaultEncoding__	};return,the,default,encoding,for,link,mime,message,mime,messages,or,code,null,if,none;public,string,get,default,encoding,return,this,default,encoding
JavaMailSenderImpl -> public String getDefaultEncoding();1368482696;Return the default encoding for {@link MimeMessage MimeMessages},_or {@code null} if none.;public String getDefaultEncoding() {_		return this.defaultEncoding__	};return,the,default,encoding,for,link,mime,message,mime,messages,or,code,null,if,none;public,string,get,default,encoding,return,this,default,encoding
JavaMailSenderImpl -> public String getDefaultEncoding();1412377300;Return the default encoding for {@link MimeMessage MimeMessages},_or {@code null} if none.;public String getDefaultEncoding() {_		return this.defaultEncoding__	};return,the,default,encoding,for,link,mime,message,mime,messages,or,code,null,if,none;public,string,get,default,encoding,return,this,default,encoding
JavaMailSenderImpl -> public String getDefaultEncoding();1412602628;Return the default encoding for {@link MimeMessage MimeMessages},_or {@code null} if none.;public String getDefaultEncoding() {_		return this.defaultEncoding__	};return,the,default,encoding,for,link,mime,message,mime,messages,or,code,null,if,none;public,string,get,default,encoding,return,this,default,encoding
JavaMailSenderImpl -> public String getDefaultEncoding();1426003109;Return the default encoding for {@link MimeMessage MimeMessages},_or {@code null} if none.;public String getDefaultEncoding() {_		return this.defaultEncoding__	};return,the,default,encoding,for,link,mime,message,mime,messages,or,code,null,if,none;public,string,get,default,encoding,return,this,default,encoding
JavaMailSenderImpl -> public String getDefaultEncoding();1467730834;Return the default encoding for {@link MimeMessage MimeMessages},_or {@code null} if none.;public String getDefaultEncoding() {_		return this.defaultEncoding__	};return,the,default,encoding,for,link,mime,message,mime,messages,or,code,null,if,none;public,string,get,default,encoding,return,this,default,encoding
JavaMailSenderImpl -> @Nullable 	public String getDefaultEncoding();1495868221;Return the default encoding for {@link MimeMessage MimeMessages},_or {@code null} if none.;@Nullable_	public String getDefaultEncoding() {_		return this.defaultEncoding__	};return,the,default,encoding,for,link,mime,message,mime,messages,or,code,null,if,none;nullable,public,string,get,default,encoding,return,this,default,encoding
JavaMailSenderImpl -> @Nullable 	public String getDefaultEncoding();1496259743;Return the default encoding for {@link MimeMessage MimeMessages},_or {@code null} if none.;@Nullable_	public String getDefaultEncoding() {_		return this.defaultEncoding__	};return,the,default,encoding,for,link,mime,message,mime,messages,or,code,null,if,none;nullable,public,string,get,default,encoding,return,this,default,encoding
JavaMailSenderImpl -> @Nullable 	public String getDefaultEncoding();1496837955;Return the default encoding for {@link MimeMessage MimeMessages},_or {@code null} if none.;@Nullable_	public String getDefaultEncoding() {_		return this.defaultEncoding__	};return,the,default,encoding,for,link,mime,message,mime,messages,or,code,null,if,none;nullable,public,string,get,default,encoding,return,this,default,encoding
JavaMailSenderImpl -> @Nullable 	public String getDefaultEncoding();1498780456;Return the default encoding for {@link MimeMessage MimeMessages},_or {@code null} if none.;@Nullable_	public String getDefaultEncoding() {_		return this.defaultEncoding__	};return,the,default,encoding,for,link,mime,message,mime,messages,or,code,null,if,none;nullable,public,string,get,default,encoding,return,this,default,encoding
JavaMailSenderImpl -> @Nullable 	public String getDefaultEncoding();1500448076;Return the default encoding for {@link MimeMessage MimeMessages},_or {@code null} if none.;@Nullable_	public String getDefaultEncoding() {_		return this.defaultEncoding__	};return,the,default,encoding,for,link,mime,message,mime,messages,or,code,null,if,none;nullable,public,string,get,default,encoding,return,this,default,encoding
JavaMailSenderImpl -> @Nullable 	public String getDefaultEncoding();1519295386;Return the default encoding for {@link MimeMessage MimeMessages},_or {@code null} if none.;@Nullable_	public String getDefaultEncoding() {_		return this.defaultEncoding__	};return,the,default,encoding,for,link,mime,message,mime,messages,or,code,null,if,none;nullable,public,string,get,default,encoding,return,this,default,encoding
JavaMailSenderImpl -> @Nullable 	public String getDefaultEncoding();1530174524;Return the default encoding for {@link MimeMessage MimeMessages},_or {@code null} if none.;@Nullable_	public String getDefaultEncoding() {_		return this.defaultEncoding__	};return,the,default,encoding,for,link,mime,message,mime,messages,or,code,null,if,none;nullable,public,string,get,default,encoding,return,this,default,encoding
JavaMailSenderImpl -> @Nullable 	public String getDefaultEncoding();1543862961;Return the default encoding for {@link MimeMessage MimeMessages},_or {@code null} if none.;@Nullable_	public String getDefaultEncoding() {_		return this.defaultEncoding__	};return,the,default,encoding,for,link,mime,message,mime,messages,or,code,null,if,none;nullable,public,string,get,default,encoding,return,this,default,encoding
JavaMailSenderImpl -> public FileTypeMap getDefaultFileTypeMap();1328020251;Return the default Java Activation {@link FileTypeMap} for_{@link MimeMessage MimeMessages}, or <code>null</code> if none.;public FileTypeMap getDefaultFileTypeMap() {_		return this.defaultFileTypeMap__	};return,the,default,java,activation,link,file,type,map,for,link,mime,message,mime,messages,or,code,null,code,if,none;public,file,type,map,get,default,file,type,map,return,this,default,file,type,map
JavaMailSenderImpl -> public FileTypeMap getDefaultFileTypeMap();1356735495;Return the default Java Activation {@link FileTypeMap} for_{@link MimeMessage MimeMessages}, or {@code null} if none.;public FileTypeMap getDefaultFileTypeMap() {_		return this.defaultFileTypeMap__	};return,the,default,java,activation,link,file,type,map,for,link,mime,message,mime,messages,or,code,null,if,none;public,file,type,map,get,default,file,type,map,return,this,default,file,type,map
JavaMailSenderImpl -> public FileTypeMap getDefaultFileTypeMap();1357119239;Return the default Java Activation {@link FileTypeMap} for_{@link MimeMessage MimeMessages}, or {@code null} if none.;public FileTypeMap getDefaultFileTypeMap() {_		return this.defaultFileTypeMap__	};return,the,default,java,activation,link,file,type,map,for,link,mime,message,mime,messages,or,code,null,if,none;public,file,type,map,get,default,file,type,map,return,this,default,file,type,map
JavaMailSenderImpl -> public FileTypeMap getDefaultFileTypeMap();1368482696;Return the default Java Activation {@link FileTypeMap} for_{@link MimeMessage MimeMessages}, or {@code null} if none.;public FileTypeMap getDefaultFileTypeMap() {_		return this.defaultFileTypeMap__	};return,the,default,java,activation,link,file,type,map,for,link,mime,message,mime,messages,or,code,null,if,none;public,file,type,map,get,default,file,type,map,return,this,default,file,type,map
JavaMailSenderImpl -> public FileTypeMap getDefaultFileTypeMap();1412377300;Return the default Java Activation {@link FileTypeMap} for_{@link MimeMessage MimeMessages}, or {@code null} if none.;public FileTypeMap getDefaultFileTypeMap() {_		return this.defaultFileTypeMap__	};return,the,default,java,activation,link,file,type,map,for,link,mime,message,mime,messages,or,code,null,if,none;public,file,type,map,get,default,file,type,map,return,this,default,file,type,map
JavaMailSenderImpl -> public FileTypeMap getDefaultFileTypeMap();1412602628;Return the default Java Activation {@link FileTypeMap} for_{@link MimeMessage MimeMessages}, or {@code null} if none.;public FileTypeMap getDefaultFileTypeMap() {_		return this.defaultFileTypeMap__	};return,the,default,java,activation,link,file,type,map,for,link,mime,message,mime,messages,or,code,null,if,none;public,file,type,map,get,default,file,type,map,return,this,default,file,type,map
JavaMailSenderImpl -> public FileTypeMap getDefaultFileTypeMap();1426003109;Return the default Java Activation {@link FileTypeMap} for_{@link MimeMessage MimeMessages}, or {@code null} if none.;public FileTypeMap getDefaultFileTypeMap() {_		return this.defaultFileTypeMap__	};return,the,default,java,activation,link,file,type,map,for,link,mime,message,mime,messages,or,code,null,if,none;public,file,type,map,get,default,file,type,map,return,this,default,file,type,map
JavaMailSenderImpl -> public FileTypeMap getDefaultFileTypeMap();1467730834;Return the default Java Activation {@link FileTypeMap} for_{@link MimeMessage MimeMessages}, or {@code null} if none.;public FileTypeMap getDefaultFileTypeMap() {_		return this.defaultFileTypeMap__	};return,the,default,java,activation,link,file,type,map,for,link,mime,message,mime,messages,or,code,null,if,none;public,file,type,map,get,default,file,type,map,return,this,default,file,type,map
JavaMailSenderImpl -> @Override 	public MimeMessage createMimeMessage();1356735495;This implementation creates a SmartMimeMessage, holding the specified_default encoding and default FileTypeMap. This special defaults-carrying_message will be autodetected by {@link MimeMessageHelper}, which will use_the carried encoding and FileTypeMap unless explicitly overridden._@see #setDefaultEncoding_@see #setDefaultFileTypeMap;@Override_	public MimeMessage createMimeMessage() {_		return new SmartMimeMessage(getSession(), getDefaultEncoding(), getDefaultFileTypeMap())__	};this,implementation,creates,a,smart,mime,message,holding,the,specified,default,encoding,and,default,file,type,map,this,special,defaults,carrying,message,will,be,autodetected,by,link,mime,message,helper,which,will,use,the,carried,encoding,and,file,type,map,unless,explicitly,overridden,see,set,default,encoding,see,set,default,file,type,map;override,public,mime,message,create,mime,message,return,new,smart,mime,message,get,session,get,default,encoding,get,default,file,type,map
JavaMailSenderImpl -> @Override 	public MimeMessage createMimeMessage();1368482696;This implementation creates a SmartMimeMessage, holding the specified_default encoding and default FileTypeMap. This special defaults-carrying_message will be autodetected by {@link MimeMessageHelper}, which will use_the carried encoding and FileTypeMap unless explicitly overridden._@see #setDefaultEncoding_@see #setDefaultFileTypeMap;@Override_	public MimeMessage createMimeMessage() {_		return new SmartMimeMessage(getSession(), getDefaultEncoding(), getDefaultFileTypeMap())__	};this,implementation,creates,a,smart,mime,message,holding,the,specified,default,encoding,and,default,file,type,map,this,special,defaults,carrying,message,will,be,autodetected,by,link,mime,message,helper,which,will,use,the,carried,encoding,and,file,type,map,unless,explicitly,overridden,see,set,default,encoding,see,set,default,file,type,map;override,public,mime,message,create,mime,message,return,new,smart,mime,message,get,session,get,default,encoding,get,default,file,type,map
JavaMailSenderImpl -> @Override 	public MimeMessage createMimeMessage();1412377300;This implementation creates a SmartMimeMessage, holding the specified_default encoding and default FileTypeMap. This special defaults-carrying_message will be autodetected by {@link MimeMessageHelper}, which will use_the carried encoding and FileTypeMap unless explicitly overridden._@see #setDefaultEncoding_@see #setDefaultFileTypeMap;@Override_	public MimeMessage createMimeMessage() {_		return new SmartMimeMessage(getSession(), getDefaultEncoding(), getDefaultFileTypeMap())__	};this,implementation,creates,a,smart,mime,message,holding,the,specified,default,encoding,and,default,file,type,map,this,special,defaults,carrying,message,will,be,autodetected,by,link,mime,message,helper,which,will,use,the,carried,encoding,and,file,type,map,unless,explicitly,overridden,see,set,default,encoding,see,set,default,file,type,map;override,public,mime,message,create,mime,message,return,new,smart,mime,message,get,session,get,default,encoding,get,default,file,type,map
JavaMailSenderImpl -> @Override 	public MimeMessage createMimeMessage();1412602628;This implementation creates a SmartMimeMessage, holding the specified_default encoding and default FileTypeMap. This special defaults-carrying_message will be autodetected by {@link MimeMessageHelper}, which will use_the carried encoding and FileTypeMap unless explicitly overridden._@see #setDefaultEncoding_@see #setDefaultFileTypeMap;@Override_	public MimeMessage createMimeMessage() {_		return new SmartMimeMessage(getSession(), getDefaultEncoding(), getDefaultFileTypeMap())__	};this,implementation,creates,a,smart,mime,message,holding,the,specified,default,encoding,and,default,file,type,map,this,special,defaults,carrying,message,will,be,autodetected,by,link,mime,message,helper,which,will,use,the,carried,encoding,and,file,type,map,unless,explicitly,overridden,see,set,default,encoding,see,set,default,file,type,map;override,public,mime,message,create,mime,message,return,new,smart,mime,message,get,session,get,default,encoding,get,default,file,type,map
JavaMailSenderImpl -> @Override 	public MimeMessage createMimeMessage();1426003109;This implementation creates a SmartMimeMessage, holding the specified_default encoding and default FileTypeMap. This special defaults-carrying_message will be autodetected by {@link MimeMessageHelper}, which will use_the carried encoding and FileTypeMap unless explicitly overridden._@see #setDefaultEncoding_@see #setDefaultFileTypeMap;@Override_	public MimeMessage createMimeMessage() {_		return new SmartMimeMessage(getSession(), getDefaultEncoding(), getDefaultFileTypeMap())__	};this,implementation,creates,a,smart,mime,message,holding,the,specified,default,encoding,and,default,file,type,map,this,special,defaults,carrying,message,will,be,autodetected,by,link,mime,message,helper,which,will,use,the,carried,encoding,and,file,type,map,unless,explicitly,overridden,see,set,default,encoding,see,set,default,file,type,map;override,public,mime,message,create,mime,message,return,new,smart,mime,message,get,session,get,default,encoding,get,default,file,type,map
JavaMailSenderImpl -> @Override 	public MimeMessage createMimeMessage();1467730834;This implementation creates a SmartMimeMessage, holding the specified_default encoding and default FileTypeMap. This special defaults-carrying_message will be autodetected by {@link MimeMessageHelper}, which will use_the carried encoding and FileTypeMap unless explicitly overridden._@see #setDefaultEncoding_@see #setDefaultFileTypeMap;@Override_	public MimeMessage createMimeMessage() {_		return new SmartMimeMessage(getSession(), getDefaultEncoding(), getDefaultFileTypeMap())__	};this,implementation,creates,a,smart,mime,message,holding,the,specified,default,encoding,and,default,file,type,map,this,special,defaults,carrying,message,will,be,autodetected,by,link,mime,message,helper,which,will,use,the,carried,encoding,and,file,type,map,unless,explicitly,overridden,see,set,default,encoding,see,set,default,file,type,map;override,public,mime,message,create,mime,message,return,new,smart,mime,message,get,session,get,default,encoding,get,default,file,type,map
JavaMailSenderImpl -> @Override 	public MimeMessage createMimeMessage();1495868221;This implementation creates a SmartMimeMessage, holding the specified_default encoding and default FileTypeMap. This special defaults-carrying_message will be autodetected by {@link MimeMessageHelper}, which will use_the carried encoding and FileTypeMap unless explicitly overridden._@see #setDefaultEncoding_@see #setDefaultFileTypeMap;@Override_	public MimeMessage createMimeMessage() {_		return new SmartMimeMessage(getSession(), getDefaultEncoding(), getDefaultFileTypeMap())__	};this,implementation,creates,a,smart,mime,message,holding,the,specified,default,encoding,and,default,file,type,map,this,special,defaults,carrying,message,will,be,autodetected,by,link,mime,message,helper,which,will,use,the,carried,encoding,and,file,type,map,unless,explicitly,overridden,see,set,default,encoding,see,set,default,file,type,map;override,public,mime,message,create,mime,message,return,new,smart,mime,message,get,session,get,default,encoding,get,default,file,type,map
JavaMailSenderImpl -> @Override 	public MimeMessage createMimeMessage();1496259743;This implementation creates a SmartMimeMessage, holding the specified_default encoding and default FileTypeMap. This special defaults-carrying_message will be autodetected by {@link MimeMessageHelper}, which will use_the carried encoding and FileTypeMap unless explicitly overridden._@see #setDefaultEncoding_@see #setDefaultFileTypeMap;@Override_	public MimeMessage createMimeMessage() {_		return new SmartMimeMessage(getSession(), getDefaultEncoding(), getDefaultFileTypeMap())__	};this,implementation,creates,a,smart,mime,message,holding,the,specified,default,encoding,and,default,file,type,map,this,special,defaults,carrying,message,will,be,autodetected,by,link,mime,message,helper,which,will,use,the,carried,encoding,and,file,type,map,unless,explicitly,overridden,see,set,default,encoding,see,set,default,file,type,map;override,public,mime,message,create,mime,message,return,new,smart,mime,message,get,session,get,default,encoding,get,default,file,type,map
JavaMailSenderImpl -> @Override 	public MimeMessage createMimeMessage();1496837955;This implementation creates a SmartMimeMessage, holding the specified_default encoding and default FileTypeMap. This special defaults-carrying_message will be autodetected by {@link MimeMessageHelper}, which will use_the carried encoding and FileTypeMap unless explicitly overridden._@see #setDefaultEncoding_@see #setDefaultFileTypeMap;@Override_	public MimeMessage createMimeMessage() {_		return new SmartMimeMessage(getSession(), getDefaultEncoding(), getDefaultFileTypeMap())__	};this,implementation,creates,a,smart,mime,message,holding,the,specified,default,encoding,and,default,file,type,map,this,special,defaults,carrying,message,will,be,autodetected,by,link,mime,message,helper,which,will,use,the,carried,encoding,and,file,type,map,unless,explicitly,overridden,see,set,default,encoding,see,set,default,file,type,map;override,public,mime,message,create,mime,message,return,new,smart,mime,message,get,session,get,default,encoding,get,default,file,type,map
JavaMailSenderImpl -> @Override 	public MimeMessage createMimeMessage();1498780456;This implementation creates a SmartMimeMessage, holding the specified_default encoding and default FileTypeMap. This special defaults-carrying_message will be autodetected by {@link MimeMessageHelper}, which will use_the carried encoding and FileTypeMap unless explicitly overridden._@see #setDefaultEncoding_@see #setDefaultFileTypeMap;@Override_	public MimeMessage createMimeMessage() {_		return new SmartMimeMessage(getSession(), getDefaultEncoding(), getDefaultFileTypeMap())__	};this,implementation,creates,a,smart,mime,message,holding,the,specified,default,encoding,and,default,file,type,map,this,special,defaults,carrying,message,will,be,autodetected,by,link,mime,message,helper,which,will,use,the,carried,encoding,and,file,type,map,unless,explicitly,overridden,see,set,default,encoding,see,set,default,file,type,map;override,public,mime,message,create,mime,message,return,new,smart,mime,message,get,session,get,default,encoding,get,default,file,type,map
JavaMailSenderImpl -> @Override 	public MimeMessage createMimeMessage();1500448076;This implementation creates a SmartMimeMessage, holding the specified_default encoding and default FileTypeMap. This special defaults-carrying_message will be autodetected by {@link MimeMessageHelper}, which will use_the carried encoding and FileTypeMap unless explicitly overridden._@see #setDefaultEncoding_@see #setDefaultFileTypeMap;@Override_	public MimeMessage createMimeMessage() {_		return new SmartMimeMessage(getSession(), getDefaultEncoding(), getDefaultFileTypeMap())__	};this,implementation,creates,a,smart,mime,message,holding,the,specified,default,encoding,and,default,file,type,map,this,special,defaults,carrying,message,will,be,autodetected,by,link,mime,message,helper,which,will,use,the,carried,encoding,and,file,type,map,unless,explicitly,overridden,see,set,default,encoding,see,set,default,file,type,map;override,public,mime,message,create,mime,message,return,new,smart,mime,message,get,session,get,default,encoding,get,default,file,type,map
JavaMailSenderImpl -> @Override 	public MimeMessage createMimeMessage();1519295386;This implementation creates a SmartMimeMessage, holding the specified_default encoding and default FileTypeMap. This special defaults-carrying_message will be autodetected by {@link MimeMessageHelper}, which will use_the carried encoding and FileTypeMap unless explicitly overridden._@see #setDefaultEncoding_@see #setDefaultFileTypeMap;@Override_	public MimeMessage createMimeMessage() {_		return new SmartMimeMessage(getSession(), getDefaultEncoding(), getDefaultFileTypeMap())__	};this,implementation,creates,a,smart,mime,message,holding,the,specified,default,encoding,and,default,file,type,map,this,special,defaults,carrying,message,will,be,autodetected,by,link,mime,message,helper,which,will,use,the,carried,encoding,and,file,type,map,unless,explicitly,overridden,see,set,default,encoding,see,set,default,file,type,map;override,public,mime,message,create,mime,message,return,new,smart,mime,message,get,session,get,default,encoding,get,default,file,type,map
JavaMailSenderImpl -> @Override 	public MimeMessage createMimeMessage();1530174524;This implementation creates a SmartMimeMessage, holding the specified_default encoding and default FileTypeMap. This special defaults-carrying_message will be autodetected by {@link MimeMessageHelper}, which will use_the carried encoding and FileTypeMap unless explicitly overridden._@see #setDefaultEncoding_@see #setDefaultFileTypeMap;@Override_	public MimeMessage createMimeMessage() {_		return new SmartMimeMessage(getSession(), getDefaultEncoding(), getDefaultFileTypeMap())__	};this,implementation,creates,a,smart,mime,message,holding,the,specified,default,encoding,and,default,file,type,map,this,special,defaults,carrying,message,will,be,autodetected,by,link,mime,message,helper,which,will,use,the,carried,encoding,and,file,type,map,unless,explicitly,overridden,see,set,default,encoding,see,set,default,file,type,map;override,public,mime,message,create,mime,message,return,new,smart,mime,message,get,session,get,default,encoding,get,default,file,type,map
JavaMailSenderImpl -> @Override 	public MimeMessage createMimeMessage();1543862961;This implementation creates a SmartMimeMessage, holding the specified_default encoding and default FileTypeMap. This special defaults-carrying_message will be autodetected by {@link MimeMessageHelper}, which will use_the carried encoding and FileTypeMap unless explicitly overridden._@see #setDefaultEncoding_@see #setDefaultFileTypeMap;@Override_	public MimeMessage createMimeMessage() {_		return new SmartMimeMessage(getSession(), getDefaultEncoding(), getDefaultFileTypeMap())__	};this,implementation,creates,a,smart,mime,message,holding,the,specified,default,encoding,and,default,file,type,map,this,special,defaults,carrying,message,will,be,autodetected,by,link,mime,message,helper,which,will,use,the,carried,encoding,and,file,type,map,unless,explicitly,overridden,see,set,default,encoding,see,set,default,file,type,map;override,public,mime,message,create,mime,message,return,new,smart,mime,message,get,session,get,default,encoding,get,default,file,type,map
JavaMailSenderImpl -> public Properties getJavaMailProperties();1328020251;Allow Map access to the JavaMail properties of this sender,_with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via_"javaMailProperties[mail.smtp.auth]".;public Properties getJavaMailProperties() {_		return this.javaMailProperties__	};allow,map,access,to,the,java,mail,properties,of,this,sender,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,java,mail,properties,mail,smtp,auth;public,properties,get,java,mail,properties,return,this,java,mail,properties
JavaMailSenderImpl -> public Properties getJavaMailProperties();1356735495;Allow Map access to the JavaMail properties of this sender,_with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via_"javaMailProperties[mail.smtp.auth]".;public Properties getJavaMailProperties() {_		return this.javaMailProperties__	};allow,map,access,to,the,java,mail,properties,of,this,sender,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,java,mail,properties,mail,smtp,auth;public,properties,get,java,mail,properties,return,this,java,mail,properties
JavaMailSenderImpl -> public Properties getJavaMailProperties();1357119239;Allow Map access to the JavaMail properties of this sender,_with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via_"javaMailProperties[mail.smtp.auth]".;public Properties getJavaMailProperties() {_		return this.javaMailProperties__	};allow,map,access,to,the,java,mail,properties,of,this,sender,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,java,mail,properties,mail,smtp,auth;public,properties,get,java,mail,properties,return,this,java,mail,properties
JavaMailSenderImpl -> public Properties getJavaMailProperties();1368482696;Allow Map access to the JavaMail properties of this sender,_with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via_"javaMailProperties[mail.smtp.auth]".;public Properties getJavaMailProperties() {_		return this.javaMailProperties__	};allow,map,access,to,the,java,mail,properties,of,this,sender,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,java,mail,properties,mail,smtp,auth;public,properties,get,java,mail,properties,return,this,java,mail,properties
JavaMailSenderImpl -> public Properties getJavaMailProperties();1412377300;Allow Map access to the JavaMail properties of this sender,_with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via_"javaMailProperties[mail.smtp.auth]".;public Properties getJavaMailProperties() {_		return this.javaMailProperties__	};allow,map,access,to,the,java,mail,properties,of,this,sender,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,java,mail,properties,mail,smtp,auth;public,properties,get,java,mail,properties,return,this,java,mail,properties
JavaMailSenderImpl -> public Properties getJavaMailProperties();1412602628;Allow Map access to the JavaMail properties of this sender,_with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via_"javaMailProperties[mail.smtp.auth]".;public Properties getJavaMailProperties() {_		return this.javaMailProperties__	};allow,map,access,to,the,java,mail,properties,of,this,sender,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,java,mail,properties,mail,smtp,auth;public,properties,get,java,mail,properties,return,this,java,mail,properties
JavaMailSenderImpl -> public Properties getJavaMailProperties();1426003109;Allow Map access to the JavaMail properties of this sender,_with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via_"javaMailProperties[mail.smtp.auth]".;public Properties getJavaMailProperties() {_		return this.javaMailProperties__	};allow,map,access,to,the,java,mail,properties,of,this,sender,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,java,mail,properties,mail,smtp,auth;public,properties,get,java,mail,properties,return,this,java,mail,properties
JavaMailSenderImpl -> public Properties getJavaMailProperties();1467730834;Allow Map access to the JavaMail properties of this sender,_with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via_"javaMailProperties[mail.smtp.auth]".;public Properties getJavaMailProperties() {_		return this.javaMailProperties__	};allow,map,access,to,the,java,mail,properties,of,this,sender,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,java,mail,properties,mail,smtp,auth;public,properties,get,java,mail,properties,return,this,java,mail,properties
JavaMailSenderImpl -> public Properties getJavaMailProperties();1495868221;Allow Map access to the JavaMail properties of this sender,_with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via_"javaMailProperties[mail.smtp.auth]".;public Properties getJavaMailProperties() {_		return this.javaMailProperties__	};allow,map,access,to,the,java,mail,properties,of,this,sender,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,java,mail,properties,mail,smtp,auth;public,properties,get,java,mail,properties,return,this,java,mail,properties
JavaMailSenderImpl -> public Properties getJavaMailProperties();1496259743;Allow Map access to the JavaMail properties of this sender,_with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via_"javaMailProperties[mail.smtp.auth]".;public Properties getJavaMailProperties() {_		return this.javaMailProperties__	};allow,map,access,to,the,java,mail,properties,of,this,sender,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,java,mail,properties,mail,smtp,auth;public,properties,get,java,mail,properties,return,this,java,mail,properties
JavaMailSenderImpl -> public Properties getJavaMailProperties();1496837955;Allow Map access to the JavaMail properties of this sender,_with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via_"javaMailProperties[mail.smtp.auth]".;public Properties getJavaMailProperties() {_		return this.javaMailProperties__	};allow,map,access,to,the,java,mail,properties,of,this,sender,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,java,mail,properties,mail,smtp,auth;public,properties,get,java,mail,properties,return,this,java,mail,properties
JavaMailSenderImpl -> public Properties getJavaMailProperties();1498780456;Allow Map access to the JavaMail properties of this sender,_with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via_"javaMailProperties[mail.smtp.auth]".;public Properties getJavaMailProperties() {_		return this.javaMailProperties__	};allow,map,access,to,the,java,mail,properties,of,this,sender,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,java,mail,properties,mail,smtp,auth;public,properties,get,java,mail,properties,return,this,java,mail,properties
JavaMailSenderImpl -> public Properties getJavaMailProperties();1500448076;Allow Map access to the JavaMail properties of this sender,_with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via_"javaMailProperties[mail.smtp.auth]".;public Properties getJavaMailProperties() {_		return this.javaMailProperties__	};allow,map,access,to,the,java,mail,properties,of,this,sender,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,java,mail,properties,mail,smtp,auth;public,properties,get,java,mail,properties,return,this,java,mail,properties
JavaMailSenderImpl -> public Properties getJavaMailProperties();1519295386;Allow Map access to the JavaMail properties of this sender,_with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via_"javaMailProperties[mail.smtp.auth]".;public Properties getJavaMailProperties() {_		return this.javaMailProperties__	};allow,map,access,to,the,java,mail,properties,of,this,sender,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,java,mail,properties,mail,smtp,auth;public,properties,get,java,mail,properties,return,this,java,mail,properties
JavaMailSenderImpl -> public Properties getJavaMailProperties();1530174524;Allow Map access to the JavaMail properties of this sender,_with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via_"javaMailProperties[mail.smtp.auth]".;public Properties getJavaMailProperties() {_		return this.javaMailProperties__	};allow,map,access,to,the,java,mail,properties,of,this,sender,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,java,mail,properties,mail,smtp,auth;public,properties,get,java,mail,properties,return,this,java,mail,properties
JavaMailSenderImpl -> public Properties getJavaMailProperties();1543862961;Allow Map access to the JavaMail properties of this sender,_with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via_"javaMailProperties[mail.smtp.auth]".;public Properties getJavaMailProperties() {_		return this.javaMailProperties__	};allow,map,access,to,the,java,mail,properties,of,this,sender,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,java,mail,properties,mail,smtp,auth;public,properties,get,java,mail,properties,return,this,java,mail,properties
JavaMailSenderImpl -> public void setPort(int port);1328020251;Set the mail server port._<p>Default is {@link #DEFAULT_PORT}, letting JavaMail use the default_SMTP port (25).;public void setPort(int port) {_		this.port = port__	};set,the,mail,server,port,p,default,is,link,letting,java,mail,use,the,default,smtp,port,25;public,void,set,port,int,port,this,port,port
JavaMailSenderImpl -> public void setPort(int port);1356735495;Set the mail server port._<p>Default is {@link #DEFAULT_PORT}, letting JavaMail use the default_SMTP port (25).;public void setPort(int port) {_		this.port = port__	};set,the,mail,server,port,p,default,is,link,letting,java,mail,use,the,default,smtp,port,25;public,void,set,port,int,port,this,port,port
JavaMailSenderImpl -> public void setPort(int port);1357119239;Set the mail server port._<p>Default is {@link #DEFAULT_PORT}, letting JavaMail use the default_SMTP port (25).;public void setPort(int port) {_		this.port = port__	};set,the,mail,server,port,p,default,is,link,letting,java,mail,use,the,default,smtp,port,25;public,void,set,port,int,port,this,port,port
JavaMailSenderImpl -> public void setPort(int port);1368482696;Set the mail server port._<p>Default is {@link #DEFAULT_PORT}, letting JavaMail use the default_SMTP port (25).;public void setPort(int port) {_		this.port = port__	};set,the,mail,server,port,p,default,is,link,letting,java,mail,use,the,default,smtp,port,25;public,void,set,port,int,port,this,port,port
JavaMailSenderImpl -> public void setPort(int port);1412377300;Set the mail server port._<p>Default is {@link #DEFAULT_PORT}, letting JavaMail use the default_SMTP port (25).;public void setPort(int port) {_		this.port = port__	};set,the,mail,server,port,p,default,is,link,letting,java,mail,use,the,default,smtp,port,25;public,void,set,port,int,port,this,port,port
JavaMailSenderImpl -> public void setPort(int port);1412602628;Set the mail server port._<p>Default is {@link #DEFAULT_PORT}, letting JavaMail use the default_SMTP port (25).;public void setPort(int port) {_		this.port = port__	};set,the,mail,server,port,p,default,is,link,letting,java,mail,use,the,default,smtp,port,25;public,void,set,port,int,port,this,port,port
JavaMailSenderImpl -> public void setPort(int port);1426003109;Set the mail server port._<p>Default is {@link #DEFAULT_PORT}, letting JavaMail use the default_SMTP port (25).;public void setPort(int port) {_		this.port = port__	};set,the,mail,server,port,p,default,is,link,letting,java,mail,use,the,default,smtp,port,25;public,void,set,port,int,port,this,port,port
JavaMailSenderImpl -> public void setPort(int port);1467730834;Set the mail server port._<p>Default is {@link #DEFAULT_PORT}, letting JavaMail use the default_SMTP port (25).;public void setPort(int port) {_		this.port = port__	};set,the,mail,server,port,p,default,is,link,letting,java,mail,use,the,default,smtp,port,25;public,void,set,port,int,port,this,port,port
JavaMailSenderImpl -> public void setPort(int port);1495868221;Set the mail server port._<p>Default is {@link #DEFAULT_PORT}, letting JavaMail use the default_SMTP port (25).;public void setPort(int port) {_		this.port = port__	};set,the,mail,server,port,p,default,is,link,letting,java,mail,use,the,default,smtp,port,25;public,void,set,port,int,port,this,port,port
JavaMailSenderImpl -> public void setPort(int port);1496259743;Set the mail server port._<p>Default is {@link #DEFAULT_PORT}, letting JavaMail use the default_SMTP port (25).;public void setPort(int port) {_		this.port = port__	};set,the,mail,server,port,p,default,is,link,letting,java,mail,use,the,default,smtp,port,25;public,void,set,port,int,port,this,port,port
JavaMailSenderImpl -> public void setPort(int port);1496837955;Set the mail server port._<p>Default is {@link #DEFAULT_PORT}, letting JavaMail use the default_SMTP port (25).;public void setPort(int port) {_		this.port = port__	};set,the,mail,server,port,p,default,is,link,letting,java,mail,use,the,default,smtp,port,25;public,void,set,port,int,port,this,port,port
JavaMailSenderImpl -> public void setPort(int port);1498780456;Set the mail server port._<p>Default is {@link #DEFAULT_PORT}, letting JavaMail use the default_SMTP port (25).;public void setPort(int port) {_		this.port = port__	};set,the,mail,server,port,p,default,is,link,letting,java,mail,use,the,default,smtp,port,25;public,void,set,port,int,port,this,port,port
JavaMailSenderImpl -> public void setPort(int port);1500448076;Set the mail server port._<p>Default is {@link #DEFAULT_PORT}, letting JavaMail use the default_SMTP port (25).;public void setPort(int port) {_		this.port = port__	};set,the,mail,server,port,p,default,is,link,letting,java,mail,use,the,default,smtp,port,25;public,void,set,port,int,port,this,port,port
JavaMailSenderImpl -> public void setPort(int port);1519295386;Set the mail server port._<p>Default is {@link #DEFAULT_PORT}, letting JavaMail use the default_SMTP port (25).;public void setPort(int port) {_		this.port = port__	};set,the,mail,server,port,p,default,is,link,letting,java,mail,use,the,default,smtp,port,25;public,void,set,port,int,port,this,port,port
JavaMailSenderImpl -> public void setPort(int port);1530174524;Set the mail server port._<p>Default is {@link #DEFAULT_PORT}, letting JavaMail use the default_SMTP port (25).;public void setPort(int port) {_		this.port = port__	};set,the,mail,server,port,p,default,is,link,letting,java,mail,use,the,default,smtp,port,25;public,void,set,port,int,port,this,port,port
JavaMailSenderImpl -> public void setPort(int port);1543862961;Set the mail server port._<p>Default is {@link #DEFAULT_PORT}, letting JavaMail use the default_SMTP port (25).;public void setPort(int port) {_		this.port = port__	};set,the,mail,server,port,p,default,is,link,letting,java,mail,use,the,default,smtp,port,25;public,void,set,port,int,port,this,port,port
JavaMailSenderImpl -> public void setDefaultFileTypeMap(FileTypeMap defaultFileTypeMap);1328020251;Set the default Java Activation {@link FileTypeMap} to use for_{@link MimeMessage MimeMessages} created by this instance._<p>A <code>FileTypeMap</code> specified here will be autodetected by_{@link MimeMessageHelper}, avoiding the need to specify the_<code>FileTypeMap</code> for each <code>MimeMessageHelper</code> instance._<p>For example, you can specify a custom instance of Spring's_{@link ConfigurableMimeFileTypeMap} here. If not explicitly specified,_a default <code>ConfigurableMimeFileTypeMap</code> will be used, containing_an extended set of MIME type mappings (as defined by the_<code>mime.types</code> file contained in the Spring jar)._@see MimeMessageHelper#setFileTypeMap;public void setDefaultFileTypeMap(FileTypeMap defaultFileTypeMap) {_		this.defaultFileTypeMap = defaultFileTypeMap__	};set,the,default,java,activation,link,file,type,map,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,a,code,file,type,map,code,specified,here,will,be,autodetected,by,link,mime,message,helper,avoiding,the,need,to,specify,the,code,file,type,map,code,for,each,code,mime,message,helper,code,instance,p,for,example,you,can,specify,a,custom,instance,of,spring,s,link,configurable,mime,file,type,map,here,if,not,explicitly,specified,a,default,code,configurable,mime,file,type,map,code,will,be,used,containing,an,extended,set,of,mime,type,mappings,as,defined,by,the,code,mime,types,code,file,contained,in,the,spring,jar,see,mime,message,helper,set,file,type,map;public,void,set,default,file,type,map,file,type,map,default,file,type,map,this,default,file,type,map,default,file,type,map
JavaMailSenderImpl -> public void setDefaultFileTypeMap(FileTypeMap defaultFileTypeMap);1356735495;Set the default Java Activation {@link FileTypeMap} to use for_{@link MimeMessage MimeMessages} created by this instance._<p>A {@code FileTypeMap} specified here will be autodetected by_{@link MimeMessageHelper}, avoiding the need to specify the_{@code FileTypeMap} for each {@code MimeMessageHelper} instance._<p>For example, you can specify a custom instance of Spring's_{@link ConfigurableMimeFileTypeMap} here. If not explicitly specified,_a default {@code ConfigurableMimeFileTypeMap} will be used, containing_an extended set of MIME type mappings (as defined by the_{@code mime.types} file contained in the Spring jar)._@see MimeMessageHelper#setFileTypeMap;public void setDefaultFileTypeMap(FileTypeMap defaultFileTypeMap) {_		this.defaultFileTypeMap = defaultFileTypeMap__	};set,the,default,java,activation,link,file,type,map,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,a,code,file,type,map,specified,here,will,be,autodetected,by,link,mime,message,helper,avoiding,the,need,to,specify,the,code,file,type,map,for,each,code,mime,message,helper,instance,p,for,example,you,can,specify,a,custom,instance,of,spring,s,link,configurable,mime,file,type,map,here,if,not,explicitly,specified,a,default,code,configurable,mime,file,type,map,will,be,used,containing,an,extended,set,of,mime,type,mappings,as,defined,by,the,code,mime,types,file,contained,in,the,spring,jar,see,mime,message,helper,set,file,type,map;public,void,set,default,file,type,map,file,type,map,default,file,type,map,this,default,file,type,map,default,file,type,map
JavaMailSenderImpl -> public void setDefaultFileTypeMap(FileTypeMap defaultFileTypeMap);1357119239;Set the default Java Activation {@link FileTypeMap} to use for_{@link MimeMessage MimeMessages} created by this instance._<p>A {@code FileTypeMap} specified here will be autodetected by_{@link MimeMessageHelper}, avoiding the need to specify the_{@code FileTypeMap} for each {@code MimeMessageHelper} instance._<p>For example, you can specify a custom instance of Spring's_{@link ConfigurableMimeFileTypeMap} here. If not explicitly specified,_a default {@code ConfigurableMimeFileTypeMap} will be used, containing_an extended set of MIME type mappings (as defined by the_{@code mime.types} file contained in the Spring jar)._@see MimeMessageHelper#setFileTypeMap;public void setDefaultFileTypeMap(FileTypeMap defaultFileTypeMap) {_		this.defaultFileTypeMap = defaultFileTypeMap__	};set,the,default,java,activation,link,file,type,map,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,a,code,file,type,map,specified,here,will,be,autodetected,by,link,mime,message,helper,avoiding,the,need,to,specify,the,code,file,type,map,for,each,code,mime,message,helper,instance,p,for,example,you,can,specify,a,custom,instance,of,spring,s,link,configurable,mime,file,type,map,here,if,not,explicitly,specified,a,default,code,configurable,mime,file,type,map,will,be,used,containing,an,extended,set,of,mime,type,mappings,as,defined,by,the,code,mime,types,file,contained,in,the,spring,jar,see,mime,message,helper,set,file,type,map;public,void,set,default,file,type,map,file,type,map,default,file,type,map,this,default,file,type,map,default,file,type,map
JavaMailSenderImpl -> public void setDefaultFileTypeMap(FileTypeMap defaultFileTypeMap);1368482696;Set the default Java Activation {@link FileTypeMap} to use for_{@link MimeMessage MimeMessages} created by this instance._<p>A {@code FileTypeMap} specified here will be autodetected by_{@link MimeMessageHelper}, avoiding the need to specify the_{@code FileTypeMap} for each {@code MimeMessageHelper} instance._<p>For example, you can specify a custom instance of Spring's_{@link ConfigurableMimeFileTypeMap} here. If not explicitly specified,_a default {@code ConfigurableMimeFileTypeMap} will be used, containing_an extended set of MIME type mappings (as defined by the_{@code mime.types} file contained in the Spring jar)._@see MimeMessageHelper#setFileTypeMap;public void setDefaultFileTypeMap(FileTypeMap defaultFileTypeMap) {_		this.defaultFileTypeMap = defaultFileTypeMap__	};set,the,default,java,activation,link,file,type,map,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,a,code,file,type,map,specified,here,will,be,autodetected,by,link,mime,message,helper,avoiding,the,need,to,specify,the,code,file,type,map,for,each,code,mime,message,helper,instance,p,for,example,you,can,specify,a,custom,instance,of,spring,s,link,configurable,mime,file,type,map,here,if,not,explicitly,specified,a,default,code,configurable,mime,file,type,map,will,be,used,containing,an,extended,set,of,mime,type,mappings,as,defined,by,the,code,mime,types,file,contained,in,the,spring,jar,see,mime,message,helper,set,file,type,map;public,void,set,default,file,type,map,file,type,map,default,file,type,map,this,default,file,type,map,default,file,type,map
JavaMailSenderImpl -> public void setDefaultFileTypeMap(FileTypeMap defaultFileTypeMap);1412377300;Set the default Java Activation {@link FileTypeMap} to use for_{@link MimeMessage MimeMessages} created by this instance._<p>A {@code FileTypeMap} specified here will be autodetected by_{@link MimeMessageHelper}, avoiding the need to specify the_{@code FileTypeMap} for each {@code MimeMessageHelper} instance._<p>For example, you can specify a custom instance of Spring's_{@link ConfigurableMimeFileTypeMap} here. If not explicitly specified,_a default {@code ConfigurableMimeFileTypeMap} will be used, containing_an extended set of MIME type mappings (as defined by the_{@code mime.types} file contained in the Spring jar)._@see MimeMessageHelper#setFileTypeMap;public void setDefaultFileTypeMap(FileTypeMap defaultFileTypeMap) {_		this.defaultFileTypeMap = defaultFileTypeMap__	};set,the,default,java,activation,link,file,type,map,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,a,code,file,type,map,specified,here,will,be,autodetected,by,link,mime,message,helper,avoiding,the,need,to,specify,the,code,file,type,map,for,each,code,mime,message,helper,instance,p,for,example,you,can,specify,a,custom,instance,of,spring,s,link,configurable,mime,file,type,map,here,if,not,explicitly,specified,a,default,code,configurable,mime,file,type,map,will,be,used,containing,an,extended,set,of,mime,type,mappings,as,defined,by,the,code,mime,types,file,contained,in,the,spring,jar,see,mime,message,helper,set,file,type,map;public,void,set,default,file,type,map,file,type,map,default,file,type,map,this,default,file,type,map,default,file,type,map
JavaMailSenderImpl -> public void setDefaultFileTypeMap(FileTypeMap defaultFileTypeMap);1412602628;Set the default Java Activation {@link FileTypeMap} to use for_{@link MimeMessage MimeMessages} created by this instance._<p>A {@code FileTypeMap} specified here will be autodetected by_{@link MimeMessageHelper}, avoiding the need to specify the_{@code FileTypeMap} for each {@code MimeMessageHelper} instance._<p>For example, you can specify a custom instance of Spring's_{@link ConfigurableMimeFileTypeMap} here. If not explicitly specified,_a default {@code ConfigurableMimeFileTypeMap} will be used, containing_an extended set of MIME type mappings (as defined by the_{@code mime.types} file contained in the Spring jar)._@see MimeMessageHelper#setFileTypeMap;public void setDefaultFileTypeMap(FileTypeMap defaultFileTypeMap) {_		this.defaultFileTypeMap = defaultFileTypeMap__	};set,the,default,java,activation,link,file,type,map,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,a,code,file,type,map,specified,here,will,be,autodetected,by,link,mime,message,helper,avoiding,the,need,to,specify,the,code,file,type,map,for,each,code,mime,message,helper,instance,p,for,example,you,can,specify,a,custom,instance,of,spring,s,link,configurable,mime,file,type,map,here,if,not,explicitly,specified,a,default,code,configurable,mime,file,type,map,will,be,used,containing,an,extended,set,of,mime,type,mappings,as,defined,by,the,code,mime,types,file,contained,in,the,spring,jar,see,mime,message,helper,set,file,type,map;public,void,set,default,file,type,map,file,type,map,default,file,type,map,this,default,file,type,map,default,file,type,map
JavaMailSenderImpl -> public void setDefaultFileTypeMap(FileTypeMap defaultFileTypeMap);1426003109;Set the default Java Activation {@link FileTypeMap} to use for_{@link MimeMessage MimeMessages} created by this instance._<p>A {@code FileTypeMap} specified here will be autodetected by_{@link MimeMessageHelper}, avoiding the need to specify the_{@code FileTypeMap} for each {@code MimeMessageHelper} instance._<p>For example, you can specify a custom instance of Spring's_{@link ConfigurableMimeFileTypeMap} here. If not explicitly specified,_a default {@code ConfigurableMimeFileTypeMap} will be used, containing_an extended set of MIME type mappings (as defined by the_{@code mime.types} file contained in the Spring jar)._@see MimeMessageHelper#setFileTypeMap;public void setDefaultFileTypeMap(FileTypeMap defaultFileTypeMap) {_		this.defaultFileTypeMap = defaultFileTypeMap__	};set,the,default,java,activation,link,file,type,map,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,a,code,file,type,map,specified,here,will,be,autodetected,by,link,mime,message,helper,avoiding,the,need,to,specify,the,code,file,type,map,for,each,code,mime,message,helper,instance,p,for,example,you,can,specify,a,custom,instance,of,spring,s,link,configurable,mime,file,type,map,here,if,not,explicitly,specified,a,default,code,configurable,mime,file,type,map,will,be,used,containing,an,extended,set,of,mime,type,mappings,as,defined,by,the,code,mime,types,file,contained,in,the,spring,jar,see,mime,message,helper,set,file,type,map;public,void,set,default,file,type,map,file,type,map,default,file,type,map,this,default,file,type,map,default,file,type,map
JavaMailSenderImpl -> public void setDefaultFileTypeMap(FileTypeMap defaultFileTypeMap);1467730834;Set the default Java Activation {@link FileTypeMap} to use for_{@link MimeMessage MimeMessages} created by this instance._<p>A {@code FileTypeMap} specified here will be autodetected by_{@link MimeMessageHelper}, avoiding the need to specify the_{@code FileTypeMap} for each {@code MimeMessageHelper} instance._<p>For example, you can specify a custom instance of Spring's_{@link ConfigurableMimeFileTypeMap} here. If not explicitly specified,_a default {@code ConfigurableMimeFileTypeMap} will be used, containing_an extended set of MIME type mappings (as defined by the_{@code mime.types} file contained in the Spring jar)._@see MimeMessageHelper#setFileTypeMap;public void setDefaultFileTypeMap(FileTypeMap defaultFileTypeMap) {_		this.defaultFileTypeMap = defaultFileTypeMap__	};set,the,default,java,activation,link,file,type,map,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,a,code,file,type,map,specified,here,will,be,autodetected,by,link,mime,message,helper,avoiding,the,need,to,specify,the,code,file,type,map,for,each,code,mime,message,helper,instance,p,for,example,you,can,specify,a,custom,instance,of,spring,s,link,configurable,mime,file,type,map,here,if,not,explicitly,specified,a,default,code,configurable,mime,file,type,map,will,be,used,containing,an,extended,set,of,mime,type,mappings,as,defined,by,the,code,mime,types,file,contained,in,the,spring,jar,see,mime,message,helper,set,file,type,map;public,void,set,default,file,type,map,file,type,map,default,file,type,map,this,default,file,type,map,default,file,type,map
JavaMailSenderImpl -> public void setDefaultFileTypeMap(FileTypeMap defaultFileTypeMap);1495868221;Set the default Java Activation {@link FileTypeMap} to use for_{@link MimeMessage MimeMessages} created by this instance._<p>A {@code FileTypeMap} specified here will be autodetected by_{@link MimeMessageHelper}, avoiding the need to specify the_{@code FileTypeMap} for each {@code MimeMessageHelper} instance._<p>For example, you can specify a custom instance of Spring's_{@link ConfigurableMimeFileTypeMap} here. If not explicitly specified,_a default {@code ConfigurableMimeFileTypeMap} will be used, containing_an extended set of MIME type mappings (as defined by the_{@code mime.types} file contained in the Spring jar)._@see MimeMessageHelper#setFileTypeMap;public void setDefaultFileTypeMap(FileTypeMap defaultFileTypeMap) {_		this.defaultFileTypeMap = defaultFileTypeMap__	};set,the,default,java,activation,link,file,type,map,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,a,code,file,type,map,specified,here,will,be,autodetected,by,link,mime,message,helper,avoiding,the,need,to,specify,the,code,file,type,map,for,each,code,mime,message,helper,instance,p,for,example,you,can,specify,a,custom,instance,of,spring,s,link,configurable,mime,file,type,map,here,if,not,explicitly,specified,a,default,code,configurable,mime,file,type,map,will,be,used,containing,an,extended,set,of,mime,type,mappings,as,defined,by,the,code,mime,types,file,contained,in,the,spring,jar,see,mime,message,helper,set,file,type,map;public,void,set,default,file,type,map,file,type,map,default,file,type,map,this,default,file,type,map,default,file,type,map
JavaMailSenderImpl -> public void setDefaultFileTypeMap(FileTypeMap defaultFileTypeMap);1496259743;Set the default Java Activation {@link FileTypeMap} to use for_{@link MimeMessage MimeMessages} created by this instance._<p>A {@code FileTypeMap} specified here will be autodetected by_{@link MimeMessageHelper}, avoiding the need to specify the_{@code FileTypeMap} for each {@code MimeMessageHelper} instance._<p>For example, you can specify a custom instance of Spring's_{@link ConfigurableMimeFileTypeMap} here. If not explicitly specified,_a default {@code ConfigurableMimeFileTypeMap} will be used, containing_an extended set of MIME type mappings (as defined by the_{@code mime.types} file contained in the Spring jar)._@see MimeMessageHelper#setFileTypeMap;public void setDefaultFileTypeMap(FileTypeMap defaultFileTypeMap) {_		this.defaultFileTypeMap = defaultFileTypeMap__	};set,the,default,java,activation,link,file,type,map,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,a,code,file,type,map,specified,here,will,be,autodetected,by,link,mime,message,helper,avoiding,the,need,to,specify,the,code,file,type,map,for,each,code,mime,message,helper,instance,p,for,example,you,can,specify,a,custom,instance,of,spring,s,link,configurable,mime,file,type,map,here,if,not,explicitly,specified,a,default,code,configurable,mime,file,type,map,will,be,used,containing,an,extended,set,of,mime,type,mappings,as,defined,by,the,code,mime,types,file,contained,in,the,spring,jar,see,mime,message,helper,set,file,type,map;public,void,set,default,file,type,map,file,type,map,default,file,type,map,this,default,file,type,map,default,file,type,map
JavaMailSenderImpl -> public void setDefaultFileTypeMap(FileTypeMap defaultFileTypeMap);1496837955;Set the default Java Activation {@link FileTypeMap} to use for_{@link MimeMessage MimeMessages} created by this instance._<p>A {@code FileTypeMap} specified here will be autodetected by_{@link MimeMessageHelper}, avoiding the need to specify the_{@code FileTypeMap} for each {@code MimeMessageHelper} instance._<p>For example, you can specify a custom instance of Spring's_{@link ConfigurableMimeFileTypeMap} here. If not explicitly specified,_a default {@code ConfigurableMimeFileTypeMap} will be used, containing_an extended set of MIME type mappings (as defined by the_{@code mime.types} file contained in the Spring jar)._@see MimeMessageHelper#setFileTypeMap;public void setDefaultFileTypeMap(FileTypeMap defaultFileTypeMap) {_		this.defaultFileTypeMap = defaultFileTypeMap__	};set,the,default,java,activation,link,file,type,map,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,a,code,file,type,map,specified,here,will,be,autodetected,by,link,mime,message,helper,avoiding,the,need,to,specify,the,code,file,type,map,for,each,code,mime,message,helper,instance,p,for,example,you,can,specify,a,custom,instance,of,spring,s,link,configurable,mime,file,type,map,here,if,not,explicitly,specified,a,default,code,configurable,mime,file,type,map,will,be,used,containing,an,extended,set,of,mime,type,mappings,as,defined,by,the,code,mime,types,file,contained,in,the,spring,jar,see,mime,message,helper,set,file,type,map;public,void,set,default,file,type,map,file,type,map,default,file,type,map,this,default,file,type,map,default,file,type,map
JavaMailSenderImpl -> public void setDefaultFileTypeMap(FileTypeMap defaultFileTypeMap);1498780456;Set the default Java Activation {@link FileTypeMap} to use for_{@link MimeMessage MimeMessages} created by this instance._<p>A {@code FileTypeMap} specified here will be autodetected by_{@link MimeMessageHelper}, avoiding the need to specify the_{@code FileTypeMap} for each {@code MimeMessageHelper} instance._<p>For example, you can specify a custom instance of Spring's_{@link ConfigurableMimeFileTypeMap} here. If not explicitly specified,_a default {@code ConfigurableMimeFileTypeMap} will be used, containing_an extended set of MIME type mappings (as defined by the_{@code mime.types} file contained in the Spring jar)._@see MimeMessageHelper#setFileTypeMap;public void setDefaultFileTypeMap(FileTypeMap defaultFileTypeMap) {_		this.defaultFileTypeMap = defaultFileTypeMap__	};set,the,default,java,activation,link,file,type,map,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,a,code,file,type,map,specified,here,will,be,autodetected,by,link,mime,message,helper,avoiding,the,need,to,specify,the,code,file,type,map,for,each,code,mime,message,helper,instance,p,for,example,you,can,specify,a,custom,instance,of,spring,s,link,configurable,mime,file,type,map,here,if,not,explicitly,specified,a,default,code,configurable,mime,file,type,map,will,be,used,containing,an,extended,set,of,mime,type,mappings,as,defined,by,the,code,mime,types,file,contained,in,the,spring,jar,see,mime,message,helper,set,file,type,map;public,void,set,default,file,type,map,file,type,map,default,file,type,map,this,default,file,type,map,default,file,type,map
JavaMailSenderImpl -> public void setProtocol(@Nullable String protocol);1500448076;Set the mail protocol. Default is "smtp".;public void setProtocol(@Nullable String protocol) {_		this.protocol = protocol__	};set,the,mail,protocol,default,is,smtp;public,void,set,protocol,nullable,string,protocol,this,protocol,protocol
JavaMailSenderImpl -> public void setProtocol(@Nullable String protocol);1519295386;Set the mail protocol. Default is "smtp".;public void setProtocol(@Nullable String protocol) {_		this.protocol = protocol__	};set,the,mail,protocol,default,is,smtp;public,void,set,protocol,nullable,string,protocol,this,protocol,protocol
JavaMailSenderImpl -> public void setProtocol(@Nullable String protocol);1530174524;Set the mail protocol. Default is "smtp".;public void setProtocol(@Nullable String protocol) {_		this.protocol = protocol__	};set,the,mail,protocol,default,is,smtp;public,void,set,protocol,nullable,string,protocol,this,protocol,protocol
JavaMailSenderImpl -> public void setProtocol(@Nullable String protocol);1543862961;Set the mail protocol. Default is "smtp".;public void setProtocol(@Nullable String protocol) {_		this.protocol = protocol__	};set,the,mail,protocol,default,is,smtp;public,void,set,protocol,nullable,string,protocol,this,protocol,protocol
JavaMailSenderImpl -> protected void doSend(MimeMessage[] mimeMessages, @Nullable Object[] originalMessages) throws MailException;1496259743;Actually send the given array of MimeMessages via JavaMail._@param mimeMessages MimeMessage objects to send_@param originalMessages corresponding original message objects_that the MimeMessages have been created from (with same array_length and indices as the "mimeMessages" array), if any_@throws org.springframework.mail.MailAuthenticationException_in case of authentication failure_@throws org.springframework.mail.MailSendException_in case of failure when sending a message;protected void doSend(MimeMessage[] mimeMessages, @Nullable Object[] originalMessages) throws MailException {_		Map<Object, Exception> failedMessages = new LinkedHashMap<>()__		Transport transport = null___		try {_			for (int i = 0_ i < mimeMessages.length_ i++) {__				_				if (transport == null || !transport.isConnected()) {_					if (transport != null) {_						try {_							transport.close()__						}_						catch (Exception ex) {_							_						}_						transport = null__					}_					try {_						transport = connectTransport()__					}_					catch (AuthenticationFailedException ex) {_						throw new MailAuthenticationException(ex)__					}_					catch (Exception ex) {_						_						for (int j = i_ j < mimeMessages.length_ j++) {_							Object original = (originalMessages != null ? originalMessages[j] : mimeMessages[j])__							failedMessages.put(original, ex)__						}_						throw new MailSendException("Mail server connection failed", ex, failedMessages)__					}_				}__				_				MimeMessage mimeMessage = mimeMessages[i]__				try {_					if (mimeMessage.getSentDate() == null) {_						mimeMessage.setSentDate(new Date())__					}_					String messageId = mimeMessage.getMessageID()__					mimeMessage.saveChanges()__					if (messageId != null) {_						_						mimeMessage.setHeader(HEADER_MESSAGE_ID, messageId)__					}_					transport.sendMessage(mimeMessage, mimeMessage.getAllRecipients())__				}_				catch (Exception ex) {_					Object original = (originalMessages != null ? originalMessages[i] : mimeMessage)__					failedMessages.put(original, ex)__				}_			}_		}_		finally {_			try {_				if (transport != null) {_					transport.close()__				}_			}_			catch (Exception ex) {_				if (!failedMessages.isEmpty()) {_					throw new MailSendException("Failed to close server connection after message failures", ex,_							failedMessages)__				}_				else {_					throw new MailSendException("Failed to close server connection after message sending", ex)__				}_			}_		}__		if (!failedMessages.isEmpty()) {_			throw new MailSendException(failedMessages)__		}_	};actually,send,the,given,array,of,mime,messages,via,java,mail,param,mime,messages,mime,message,objects,to,send,param,original,messages,corresponding,original,message,objects,that,the,mime,messages,have,been,created,from,with,same,array,length,and,indices,as,the,mime,messages,array,if,any,throws,org,springframework,mail,mail,authentication,exception,in,case,of,authentication,failure,throws,org,springframework,mail,mail,send,exception,in,case,of,failure,when,sending,a,message;protected,void,do,send,mime,message,mime,messages,nullable,object,original,messages,throws,mail,exception,map,object,exception,failed,messages,new,linked,hash,map,transport,transport,null,try,for,int,i,0,i,mime,messages,length,i,if,transport,null,transport,is,connected,if,transport,null,try,transport,close,catch,exception,ex,transport,null,try,transport,connect,transport,catch,authentication,failed,exception,ex,throw,new,mail,authentication,exception,ex,catch,exception,ex,for,int,j,i,j,mime,messages,length,j,object,original,original,messages,null,original,messages,j,mime,messages,j,failed,messages,put,original,ex,throw,new,mail,send,exception,mail,server,connection,failed,ex,failed,messages,mime,message,mime,message,mime,messages,i,try,if,mime,message,get,sent,date,null,mime,message,set,sent,date,new,date,string,message,id,mime,message,get,message,id,mime,message,save,changes,if,message,id,null,mime,message,set,header,message,id,transport,send,message,mime,message,mime,message,get,all,recipients,catch,exception,ex,object,original,original,messages,null,original,messages,i,mime,message,failed,messages,put,original,ex,finally,try,if,transport,null,transport,close,catch,exception,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,failures,ex,failed,messages,else,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,sending,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,messages
JavaMailSenderImpl -> protected void doSend(MimeMessage[] mimeMessages, @Nullable Object[] originalMessages) throws MailException;1496837955;Actually send the given array of MimeMessages via JavaMail._@param mimeMessages MimeMessage objects to send_@param originalMessages corresponding original message objects_that the MimeMessages have been created from (with same array_length and indices as the "mimeMessages" array), if any_@throws org.springframework.mail.MailAuthenticationException_in case of authentication failure_@throws org.springframework.mail.MailSendException_in case of failure when sending a message;protected void doSend(MimeMessage[] mimeMessages, @Nullable Object[] originalMessages) throws MailException {_		Map<Object, Exception> failedMessages = new LinkedHashMap<>()__		Transport transport = null___		try {_			for (int i = 0_ i < mimeMessages.length_ i++) {__				_				if (transport == null || !transport.isConnected()) {_					if (transport != null) {_						try {_							transport.close()__						}_						catch (Exception ex) {_							_						}_						transport = null__					}_					try {_						transport = connectTransport()__					}_					catch (AuthenticationFailedException ex) {_						throw new MailAuthenticationException(ex)__					}_					catch (Exception ex) {_						_						for (int j = i_ j < mimeMessages.length_ j++) {_							Object original = (originalMessages != null ? originalMessages[j] : mimeMessages[j])__							failedMessages.put(original, ex)__						}_						throw new MailSendException("Mail server connection failed", ex, failedMessages)__					}_				}__				_				MimeMessage mimeMessage = mimeMessages[i]__				try {_					if (mimeMessage.getSentDate() == null) {_						mimeMessage.setSentDate(new Date())__					}_					String messageId = mimeMessage.getMessageID()__					mimeMessage.saveChanges()__					if (messageId != null) {_						_						mimeMessage.setHeader(HEADER_MESSAGE_ID, messageId)__					}_					transport.sendMessage(mimeMessage, mimeMessage.getAllRecipients())__				}_				catch (Exception ex) {_					Object original = (originalMessages != null ? originalMessages[i] : mimeMessage)__					failedMessages.put(original, ex)__				}_			}_		}_		finally {_			try {_				if (transport != null) {_					transport.close()__				}_			}_			catch (Exception ex) {_				if (!failedMessages.isEmpty()) {_					throw new MailSendException("Failed to close server connection after message failures", ex,_							failedMessages)__				}_				else {_					throw new MailSendException("Failed to close server connection after message sending", ex)__				}_			}_		}__		if (!failedMessages.isEmpty()) {_			throw new MailSendException(failedMessages)__		}_	};actually,send,the,given,array,of,mime,messages,via,java,mail,param,mime,messages,mime,message,objects,to,send,param,original,messages,corresponding,original,message,objects,that,the,mime,messages,have,been,created,from,with,same,array,length,and,indices,as,the,mime,messages,array,if,any,throws,org,springframework,mail,mail,authentication,exception,in,case,of,authentication,failure,throws,org,springframework,mail,mail,send,exception,in,case,of,failure,when,sending,a,message;protected,void,do,send,mime,message,mime,messages,nullable,object,original,messages,throws,mail,exception,map,object,exception,failed,messages,new,linked,hash,map,transport,transport,null,try,for,int,i,0,i,mime,messages,length,i,if,transport,null,transport,is,connected,if,transport,null,try,transport,close,catch,exception,ex,transport,null,try,transport,connect,transport,catch,authentication,failed,exception,ex,throw,new,mail,authentication,exception,ex,catch,exception,ex,for,int,j,i,j,mime,messages,length,j,object,original,original,messages,null,original,messages,j,mime,messages,j,failed,messages,put,original,ex,throw,new,mail,send,exception,mail,server,connection,failed,ex,failed,messages,mime,message,mime,message,mime,messages,i,try,if,mime,message,get,sent,date,null,mime,message,set,sent,date,new,date,string,message,id,mime,message,get,message,id,mime,message,save,changes,if,message,id,null,mime,message,set,header,message,id,transport,send,message,mime,message,mime,message,get,all,recipients,catch,exception,ex,object,original,original,messages,null,original,messages,i,mime,message,failed,messages,put,original,ex,finally,try,if,transport,null,transport,close,catch,exception,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,failures,ex,failed,messages,else,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,sending,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,messages
JavaMailSenderImpl -> protected void doSend(MimeMessage[] mimeMessages, @Nullable Object[] originalMessages) throws MailException;1498780456;Actually send the given array of MimeMessages via JavaMail._@param mimeMessages MimeMessage objects to send_@param originalMessages corresponding original message objects_that the MimeMessages have been created from (with same array_length and indices as the "mimeMessages" array), if any_@throws org.springframework.mail.MailAuthenticationException_in case of authentication failure_@throws org.springframework.mail.MailSendException_in case of failure when sending a message;protected void doSend(MimeMessage[] mimeMessages, @Nullable Object[] originalMessages) throws MailException {_		Map<Object, Exception> failedMessages = new LinkedHashMap<>()__		Transport transport = null___		try {_			for (int i = 0_ i < mimeMessages.length_ i++) {__				_				if (transport == null || !transport.isConnected()) {_					if (transport != null) {_						try {_							transport.close()__						}_						catch (Exception ex) {_							_						}_						transport = null__					}_					try {_						transport = connectTransport()__					}_					catch (AuthenticationFailedException ex) {_						throw new MailAuthenticationException(ex)__					}_					catch (Exception ex) {_						_						for (int j = i_ j < mimeMessages.length_ j++) {_							Object original = (originalMessages != null ? originalMessages[j] : mimeMessages[j])__							failedMessages.put(original, ex)__						}_						throw new MailSendException("Mail server connection failed", ex, failedMessages)__					}_				}__				_				MimeMessage mimeMessage = mimeMessages[i]__				try {_					if (mimeMessage.getSentDate() == null) {_						mimeMessage.setSentDate(new Date())__					}_					String messageId = mimeMessage.getMessageID()__					mimeMessage.saveChanges()__					if (messageId != null) {_						_						mimeMessage.setHeader(HEADER_MESSAGE_ID, messageId)__					}_					transport.sendMessage(mimeMessage, mimeMessage.getAllRecipients())__				}_				catch (Exception ex) {_					Object original = (originalMessages != null ? originalMessages[i] : mimeMessage)__					failedMessages.put(original, ex)__				}_			}_		}_		finally {_			try {_				if (transport != null) {_					transport.close()__				}_			}_			catch (Exception ex) {_				if (!failedMessages.isEmpty()) {_					throw new MailSendException("Failed to close server connection after message failures", ex,_							failedMessages)__				}_				else {_					throw new MailSendException("Failed to close server connection after message sending", ex)__				}_			}_		}__		if (!failedMessages.isEmpty()) {_			throw new MailSendException(failedMessages)__		}_	};actually,send,the,given,array,of,mime,messages,via,java,mail,param,mime,messages,mime,message,objects,to,send,param,original,messages,corresponding,original,message,objects,that,the,mime,messages,have,been,created,from,with,same,array,length,and,indices,as,the,mime,messages,array,if,any,throws,org,springframework,mail,mail,authentication,exception,in,case,of,authentication,failure,throws,org,springframework,mail,mail,send,exception,in,case,of,failure,when,sending,a,message;protected,void,do,send,mime,message,mime,messages,nullable,object,original,messages,throws,mail,exception,map,object,exception,failed,messages,new,linked,hash,map,transport,transport,null,try,for,int,i,0,i,mime,messages,length,i,if,transport,null,transport,is,connected,if,transport,null,try,transport,close,catch,exception,ex,transport,null,try,transport,connect,transport,catch,authentication,failed,exception,ex,throw,new,mail,authentication,exception,ex,catch,exception,ex,for,int,j,i,j,mime,messages,length,j,object,original,original,messages,null,original,messages,j,mime,messages,j,failed,messages,put,original,ex,throw,new,mail,send,exception,mail,server,connection,failed,ex,failed,messages,mime,message,mime,message,mime,messages,i,try,if,mime,message,get,sent,date,null,mime,message,set,sent,date,new,date,string,message,id,mime,message,get,message,id,mime,message,save,changes,if,message,id,null,mime,message,set,header,message,id,transport,send,message,mime,message,mime,message,get,all,recipients,catch,exception,ex,object,original,original,messages,null,original,messages,i,mime,message,failed,messages,put,original,ex,finally,try,if,transport,null,transport,close,catch,exception,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,failures,ex,failed,messages,else,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,sending,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,messages
JavaMailSenderImpl -> protected void doSend(MimeMessage[] mimeMessages, @Nullable Object[] originalMessages) throws MailException;1500448076;Actually send the given array of MimeMessages via JavaMail._@param mimeMessages MimeMessage objects to send_@param originalMessages corresponding original message objects_that the MimeMessages have been created from (with same array_length and indices as the "mimeMessages" array), if any_@throws org.springframework.mail.MailAuthenticationException_in case of authentication failure_@throws org.springframework.mail.MailSendException_in case of failure when sending a message;protected void doSend(MimeMessage[] mimeMessages, @Nullable Object[] originalMessages) throws MailException {_		Map<Object, Exception> failedMessages = new LinkedHashMap<>()__		Transport transport = null___		try {_			for (int i = 0_ i < mimeMessages.length_ i++) {__				_				if (transport == null || !transport.isConnected()) {_					if (transport != null) {_						try {_							transport.close()__						}_						catch (Exception ex) {_							_						}_						transport = null__					}_					try {_						transport = connectTransport()__					}_					catch (AuthenticationFailedException ex) {_						throw new MailAuthenticationException(ex)__					}_					catch (Exception ex) {_						_						for (int j = i_ j < mimeMessages.length_ j++) {_							Object original = (originalMessages != null ? originalMessages[j] : mimeMessages[j])__							failedMessages.put(original, ex)__						}_						throw new MailSendException("Mail server connection failed", ex, failedMessages)__					}_				}__				_				MimeMessage mimeMessage = mimeMessages[i]__				try {_					if (mimeMessage.getSentDate() == null) {_						mimeMessage.setSentDate(new Date())__					}_					String messageId = mimeMessage.getMessageID()__					mimeMessage.saveChanges()__					if (messageId != null) {_						_						mimeMessage.setHeader(HEADER_MESSAGE_ID, messageId)__					}_					transport.sendMessage(mimeMessage, mimeMessage.getAllRecipients())__				}_				catch (Exception ex) {_					Object original = (originalMessages != null ? originalMessages[i] : mimeMessage)__					failedMessages.put(original, ex)__				}_			}_		}_		finally {_			try {_				if (transport != null) {_					transport.close()__				}_			}_			catch (Exception ex) {_				if (!failedMessages.isEmpty()) {_					throw new MailSendException("Failed to close server connection after message failures", ex,_							failedMessages)__				}_				else {_					throw new MailSendException("Failed to close server connection after message sending", ex)__				}_			}_		}__		if (!failedMessages.isEmpty()) {_			throw new MailSendException(failedMessages)__		}_	};actually,send,the,given,array,of,mime,messages,via,java,mail,param,mime,messages,mime,message,objects,to,send,param,original,messages,corresponding,original,message,objects,that,the,mime,messages,have,been,created,from,with,same,array,length,and,indices,as,the,mime,messages,array,if,any,throws,org,springframework,mail,mail,authentication,exception,in,case,of,authentication,failure,throws,org,springframework,mail,mail,send,exception,in,case,of,failure,when,sending,a,message;protected,void,do,send,mime,message,mime,messages,nullable,object,original,messages,throws,mail,exception,map,object,exception,failed,messages,new,linked,hash,map,transport,transport,null,try,for,int,i,0,i,mime,messages,length,i,if,transport,null,transport,is,connected,if,transport,null,try,transport,close,catch,exception,ex,transport,null,try,transport,connect,transport,catch,authentication,failed,exception,ex,throw,new,mail,authentication,exception,ex,catch,exception,ex,for,int,j,i,j,mime,messages,length,j,object,original,original,messages,null,original,messages,j,mime,messages,j,failed,messages,put,original,ex,throw,new,mail,send,exception,mail,server,connection,failed,ex,failed,messages,mime,message,mime,message,mime,messages,i,try,if,mime,message,get,sent,date,null,mime,message,set,sent,date,new,date,string,message,id,mime,message,get,message,id,mime,message,save,changes,if,message,id,null,mime,message,set,header,message,id,transport,send,message,mime,message,mime,message,get,all,recipients,catch,exception,ex,object,original,original,messages,null,original,messages,i,mime,message,failed,messages,put,original,ex,finally,try,if,transport,null,transport,close,catch,exception,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,failures,ex,failed,messages,else,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,sending,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,messages
JavaMailSenderImpl -> protected void doSend(MimeMessage[] mimeMessages, @Nullable Object[] originalMessages) throws MailException;1519295386;Actually send the given array of MimeMessages via JavaMail._@param mimeMessages MimeMessage objects to send_@param originalMessages corresponding original message objects_that the MimeMessages have been created from (with same array_length and indices as the "mimeMessages" array), if any_@throws org.springframework.mail.MailAuthenticationException_in case of authentication failure_@throws org.springframework.mail.MailSendException_in case of failure when sending a message;protected void doSend(MimeMessage[] mimeMessages, @Nullable Object[] originalMessages) throws MailException {_		Map<Object, Exception> failedMessages = new LinkedHashMap<>()__		Transport transport = null___		try {_			for (int i = 0_ i < mimeMessages.length_ i++) {__				_				if (transport == null || !transport.isConnected()) {_					if (transport != null) {_						try {_							transport.close()__						}_						catch (Exception ex) {_							_						}_						transport = null__					}_					try {_						transport = connectTransport()__					}_					catch (AuthenticationFailedException ex) {_						throw new MailAuthenticationException(ex)__					}_					catch (Exception ex) {_						_						for (int j = i_ j < mimeMessages.length_ j++) {_							Object original = (originalMessages != null ? originalMessages[j] : mimeMessages[j])__							failedMessages.put(original, ex)__						}_						throw new MailSendException("Mail server connection failed", ex, failedMessages)__					}_				}__				_				MimeMessage mimeMessage = mimeMessages[i]__				try {_					if (mimeMessage.getSentDate() == null) {_						mimeMessage.setSentDate(new Date())__					}_					String messageId = mimeMessage.getMessageID()__					mimeMessage.saveChanges()__					if (messageId != null) {_						_						mimeMessage.setHeader(HEADER_MESSAGE_ID, messageId)__					}_					transport.sendMessage(mimeMessage, mimeMessage.getAllRecipients())__				}_				catch (Exception ex) {_					Object original = (originalMessages != null ? originalMessages[i] : mimeMessage)__					failedMessages.put(original, ex)__				}_			}_		}_		finally {_			try {_				if (transport != null) {_					transport.close()__				}_			}_			catch (Exception ex) {_				if (!failedMessages.isEmpty()) {_					throw new MailSendException("Failed to close server connection after message failures", ex,_							failedMessages)__				}_				else {_					throw new MailSendException("Failed to close server connection after message sending", ex)__				}_			}_		}__		if (!failedMessages.isEmpty()) {_			throw new MailSendException(failedMessages)__		}_	};actually,send,the,given,array,of,mime,messages,via,java,mail,param,mime,messages,mime,message,objects,to,send,param,original,messages,corresponding,original,message,objects,that,the,mime,messages,have,been,created,from,with,same,array,length,and,indices,as,the,mime,messages,array,if,any,throws,org,springframework,mail,mail,authentication,exception,in,case,of,authentication,failure,throws,org,springframework,mail,mail,send,exception,in,case,of,failure,when,sending,a,message;protected,void,do,send,mime,message,mime,messages,nullable,object,original,messages,throws,mail,exception,map,object,exception,failed,messages,new,linked,hash,map,transport,transport,null,try,for,int,i,0,i,mime,messages,length,i,if,transport,null,transport,is,connected,if,transport,null,try,transport,close,catch,exception,ex,transport,null,try,transport,connect,transport,catch,authentication,failed,exception,ex,throw,new,mail,authentication,exception,ex,catch,exception,ex,for,int,j,i,j,mime,messages,length,j,object,original,original,messages,null,original,messages,j,mime,messages,j,failed,messages,put,original,ex,throw,new,mail,send,exception,mail,server,connection,failed,ex,failed,messages,mime,message,mime,message,mime,messages,i,try,if,mime,message,get,sent,date,null,mime,message,set,sent,date,new,date,string,message,id,mime,message,get,message,id,mime,message,save,changes,if,message,id,null,mime,message,set,header,message,id,transport,send,message,mime,message,mime,message,get,all,recipients,catch,exception,ex,object,original,original,messages,null,original,messages,i,mime,message,failed,messages,put,original,ex,finally,try,if,transport,null,transport,close,catch,exception,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,failures,ex,failed,messages,else,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,sending,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,messages
JavaMailSenderImpl -> protected void doSend(MimeMessage[] mimeMessages, @Nullable Object[] originalMessages) throws MailException;1530174524;Actually send the given array of MimeMessages via JavaMail._@param mimeMessages the MimeMessage objects to send_@param originalMessages corresponding original message objects_that the MimeMessages have been created from (with same array_length and indices as the "mimeMessages" array), if any_@throws org.springframework.mail.MailAuthenticationException_in case of authentication failure_@throws org.springframework.mail.MailSendException_in case of failure when sending a message;protected void doSend(MimeMessage[] mimeMessages, @Nullable Object[] originalMessages) throws MailException {_		Map<Object, Exception> failedMessages = new LinkedHashMap<>()__		Transport transport = null___		try {_			for (int i = 0_ i < mimeMessages.length_ i++) {__				_				if (transport == null || !transport.isConnected()) {_					if (transport != null) {_						try {_							transport.close()__						}_						catch (Exception ex) {_							_						}_						transport = null__					}_					try {_						transport = connectTransport()__					}_					catch (AuthenticationFailedException ex) {_						throw new MailAuthenticationException(ex)__					}_					catch (Exception ex) {_						_						for (int j = i_ j < mimeMessages.length_ j++) {_							Object original = (originalMessages != null ? originalMessages[j] : mimeMessages[j])__							failedMessages.put(original, ex)__						}_						throw new MailSendException("Mail server connection failed", ex, failedMessages)__					}_				}__				_				MimeMessage mimeMessage = mimeMessages[i]__				try {_					if (mimeMessage.getSentDate() == null) {_						mimeMessage.setSentDate(new Date())__					}_					String messageId = mimeMessage.getMessageID()__					mimeMessage.saveChanges()__					if (messageId != null) {_						_						mimeMessage.setHeader(HEADER_MESSAGE_ID, messageId)__					}_					transport.sendMessage(mimeMessage, mimeMessage.getAllRecipients())__				}_				catch (Exception ex) {_					Object original = (originalMessages != null ? originalMessages[i] : mimeMessage)__					failedMessages.put(original, ex)__				}_			}_		}_		finally {_			try {_				if (transport != null) {_					transport.close()__				}_			}_			catch (Exception ex) {_				if (!failedMessages.isEmpty()) {_					throw new MailSendException("Failed to close server connection after message failures", ex,_							failedMessages)__				}_				else {_					throw new MailSendException("Failed to close server connection after message sending", ex)__				}_			}_		}__		if (!failedMessages.isEmpty()) {_			throw new MailSendException(failedMessages)__		}_	};actually,send,the,given,array,of,mime,messages,via,java,mail,param,mime,messages,the,mime,message,objects,to,send,param,original,messages,corresponding,original,message,objects,that,the,mime,messages,have,been,created,from,with,same,array,length,and,indices,as,the,mime,messages,array,if,any,throws,org,springframework,mail,mail,authentication,exception,in,case,of,authentication,failure,throws,org,springframework,mail,mail,send,exception,in,case,of,failure,when,sending,a,message;protected,void,do,send,mime,message,mime,messages,nullable,object,original,messages,throws,mail,exception,map,object,exception,failed,messages,new,linked,hash,map,transport,transport,null,try,for,int,i,0,i,mime,messages,length,i,if,transport,null,transport,is,connected,if,transport,null,try,transport,close,catch,exception,ex,transport,null,try,transport,connect,transport,catch,authentication,failed,exception,ex,throw,new,mail,authentication,exception,ex,catch,exception,ex,for,int,j,i,j,mime,messages,length,j,object,original,original,messages,null,original,messages,j,mime,messages,j,failed,messages,put,original,ex,throw,new,mail,send,exception,mail,server,connection,failed,ex,failed,messages,mime,message,mime,message,mime,messages,i,try,if,mime,message,get,sent,date,null,mime,message,set,sent,date,new,date,string,message,id,mime,message,get,message,id,mime,message,save,changes,if,message,id,null,mime,message,set,header,message,id,transport,send,message,mime,message,mime,message,get,all,recipients,catch,exception,ex,object,original,original,messages,null,original,messages,i,mime,message,failed,messages,put,original,ex,finally,try,if,transport,null,transport,close,catch,exception,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,failures,ex,failed,messages,else,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,sending,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,messages
JavaMailSenderImpl -> protected void doSend(MimeMessage[] mimeMessages, @Nullable Object[] originalMessages) throws MailException;1543862961;Actually send the given array of MimeMessages via JavaMail._@param mimeMessages the MimeMessage objects to send_@param originalMessages corresponding original message objects_that the MimeMessages have been created from (with same array_length and indices as the "mimeMessages" array), if any_@throws org.springframework.mail.MailAuthenticationException_in case of authentication failure_@throws org.springframework.mail.MailSendException_in case of failure when sending a message;protected void doSend(MimeMessage[] mimeMessages, @Nullable Object[] originalMessages) throws MailException {_		Map<Object, Exception> failedMessages = new LinkedHashMap<>()__		Transport transport = null___		try {_			for (int i = 0_ i < mimeMessages.length_ i++) {__				_				if (transport == null || !transport.isConnected()) {_					if (transport != null) {_						try {_							transport.close()__						}_						catch (Exception ex) {_							_						}_						transport = null__					}_					try {_						transport = connectTransport()__					}_					catch (AuthenticationFailedException ex) {_						throw new MailAuthenticationException(ex)__					}_					catch (Exception ex) {_						_						for (int j = i_ j < mimeMessages.length_ j++) {_							Object original = (originalMessages != null ? originalMessages[j] : mimeMessages[j])__							failedMessages.put(original, ex)__						}_						throw new MailSendException("Mail server connection failed", ex, failedMessages)__					}_				}__				_				MimeMessage mimeMessage = mimeMessages[i]__				try {_					if (mimeMessage.getSentDate() == null) {_						mimeMessage.setSentDate(new Date())__					}_					String messageId = mimeMessage.getMessageID()__					mimeMessage.saveChanges()__					if (messageId != null) {_						_						mimeMessage.setHeader(HEADER_MESSAGE_ID, messageId)__					}_					Address[] addresses = mimeMessage.getAllRecipients()__					transport.sendMessage(mimeMessage, (addresses != null ? addresses : new Address[0]))__				}_				catch (Exception ex) {_					Object original = (originalMessages != null ? originalMessages[i] : mimeMessage)__					failedMessages.put(original, ex)__				}_			}_		}_		finally {_			try {_				if (transport != null) {_					transport.close()__				}_			}_			catch (Exception ex) {_				if (!failedMessages.isEmpty()) {_					throw new MailSendException("Failed to close server connection after message failures", ex,_							failedMessages)__				}_				else {_					throw new MailSendException("Failed to close server connection after message sending", ex)__				}_			}_		}__		if (!failedMessages.isEmpty()) {_			throw new MailSendException(failedMessages)__		}_	};actually,send,the,given,array,of,mime,messages,via,java,mail,param,mime,messages,the,mime,message,objects,to,send,param,original,messages,corresponding,original,message,objects,that,the,mime,messages,have,been,created,from,with,same,array,length,and,indices,as,the,mime,messages,array,if,any,throws,org,springframework,mail,mail,authentication,exception,in,case,of,authentication,failure,throws,org,springframework,mail,mail,send,exception,in,case,of,failure,when,sending,a,message;protected,void,do,send,mime,message,mime,messages,nullable,object,original,messages,throws,mail,exception,map,object,exception,failed,messages,new,linked,hash,map,transport,transport,null,try,for,int,i,0,i,mime,messages,length,i,if,transport,null,transport,is,connected,if,transport,null,try,transport,close,catch,exception,ex,transport,null,try,transport,connect,transport,catch,authentication,failed,exception,ex,throw,new,mail,authentication,exception,ex,catch,exception,ex,for,int,j,i,j,mime,messages,length,j,object,original,original,messages,null,original,messages,j,mime,messages,j,failed,messages,put,original,ex,throw,new,mail,send,exception,mail,server,connection,failed,ex,failed,messages,mime,message,mime,message,mime,messages,i,try,if,mime,message,get,sent,date,null,mime,message,set,sent,date,new,date,string,message,id,mime,message,get,message,id,mime,message,save,changes,if,message,id,null,mime,message,set,header,message,id,address,addresses,mime,message,get,all,recipients,transport,send,message,mime,message,addresses,null,addresses,new,address,0,catch,exception,ex,object,original,original,messages,null,original,messages,i,mime,message,failed,messages,put,original,ex,finally,try,if,transport,null,transport,close,catch,exception,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,failures,ex,failed,messages,else,throw,new,mail,send,exception,failed,to,close,server,connection,after,message,sending,ex,if,failed,messages,is,empty,throw,new,mail,send,exception,failed,messages
JavaMailSenderImpl -> public int getPort();1328020251;Return the mail server port.;public int getPort() {_		return this.port__	};return,the,mail,server,port;public,int,get,port,return,this,port
JavaMailSenderImpl -> public int getPort();1356735495;Return the mail server port.;public int getPort() {_		return this.port__	};return,the,mail,server,port;public,int,get,port,return,this,port
JavaMailSenderImpl -> public int getPort();1357119239;Return the mail server port.;public int getPort() {_		return this.port__	};return,the,mail,server,port;public,int,get,port,return,this,port
JavaMailSenderImpl -> public int getPort();1368482696;Return the mail server port.;public int getPort() {_		return this.port__	};return,the,mail,server,port;public,int,get,port,return,this,port
JavaMailSenderImpl -> public int getPort();1412377300;Return the mail server port.;public int getPort() {_		return this.port__	};return,the,mail,server,port;public,int,get,port,return,this,port
JavaMailSenderImpl -> public int getPort();1412602628;Return the mail server port.;public int getPort() {_		return this.port__	};return,the,mail,server,port;public,int,get,port,return,this,port
JavaMailSenderImpl -> public int getPort();1426003109;Return the mail server port.;public int getPort() {_		return this.port__	};return,the,mail,server,port;public,int,get,port,return,this,port
JavaMailSenderImpl -> public int getPort();1467730834;Return the mail server port.;public int getPort() {_		return this.port__	};return,the,mail,server,port;public,int,get,port,return,this,port
JavaMailSenderImpl -> public int getPort();1495868221;Return the mail server port.;public int getPort() {_		return this.port__	};return,the,mail,server,port;public,int,get,port,return,this,port
JavaMailSenderImpl -> public int getPort();1496259743;Return the mail server port.;public int getPort() {_		return this.port__	};return,the,mail,server,port;public,int,get,port,return,this,port
JavaMailSenderImpl -> public int getPort();1496837955;Return the mail server port.;public int getPort() {_		return this.port__	};return,the,mail,server,port;public,int,get,port,return,this,port
JavaMailSenderImpl -> public int getPort();1498780456;Return the mail server port.;public int getPort() {_		return this.port__	};return,the,mail,server,port;public,int,get,port,return,this,port
JavaMailSenderImpl -> public int getPort();1500448076;Return the mail server port.;public int getPort() {_		return this.port__	};return,the,mail,server,port;public,int,get,port,return,this,port
JavaMailSenderImpl -> public int getPort();1519295386;Return the mail server port.;public int getPort() {_		return this.port__	};return,the,mail,server,port;public,int,get,port,return,this,port
JavaMailSenderImpl -> public int getPort();1530174524;Return the mail server port.;public int getPort() {_		return this.port__	};return,the,mail,server,port;public,int,get,port,return,this,port
JavaMailSenderImpl -> public int getPort();1543862961;Return the mail server port.;public int getPort() {_		return this.port__	};return,the,mail,server,port;public,int,get,port,return,this,port
JavaMailSenderImpl -> public void setDefaultEncoding(String defaultEncoding);1328020251;Set the default encoding to use for {@link MimeMessage MimeMessages}_created by this instance._<p>Such an encoding will be auto-detected by {@link MimeMessageHelper}.;public void setDefaultEncoding(String defaultEncoding) {_		this.defaultEncoding = defaultEncoding__	};set,the,default,encoding,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,such,an,encoding,will,be,auto,detected,by,link,mime,message,helper;public,void,set,default,encoding,string,default,encoding,this,default,encoding,default,encoding
JavaMailSenderImpl -> public void setDefaultEncoding(String defaultEncoding);1356735495;Set the default encoding to use for {@link MimeMessage MimeMessages}_created by this instance._<p>Such an encoding will be auto-detected by {@link MimeMessageHelper}.;public void setDefaultEncoding(String defaultEncoding) {_		this.defaultEncoding = defaultEncoding__	};set,the,default,encoding,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,such,an,encoding,will,be,auto,detected,by,link,mime,message,helper;public,void,set,default,encoding,string,default,encoding,this,default,encoding,default,encoding
JavaMailSenderImpl -> public void setDefaultEncoding(String defaultEncoding);1357119239;Set the default encoding to use for {@link MimeMessage MimeMessages}_created by this instance._<p>Such an encoding will be auto-detected by {@link MimeMessageHelper}.;public void setDefaultEncoding(String defaultEncoding) {_		this.defaultEncoding = defaultEncoding__	};set,the,default,encoding,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,such,an,encoding,will,be,auto,detected,by,link,mime,message,helper;public,void,set,default,encoding,string,default,encoding,this,default,encoding,default,encoding
JavaMailSenderImpl -> public void setDefaultEncoding(String defaultEncoding);1368482696;Set the default encoding to use for {@link MimeMessage MimeMessages}_created by this instance._<p>Such an encoding will be auto-detected by {@link MimeMessageHelper}.;public void setDefaultEncoding(String defaultEncoding) {_		this.defaultEncoding = defaultEncoding__	};set,the,default,encoding,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,such,an,encoding,will,be,auto,detected,by,link,mime,message,helper;public,void,set,default,encoding,string,default,encoding,this,default,encoding,default,encoding
JavaMailSenderImpl -> public void setDefaultEncoding(String defaultEncoding);1412377300;Set the default encoding to use for {@link MimeMessage MimeMessages}_created by this instance._<p>Such an encoding will be auto-detected by {@link MimeMessageHelper}.;public void setDefaultEncoding(String defaultEncoding) {_		this.defaultEncoding = defaultEncoding__	};set,the,default,encoding,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,such,an,encoding,will,be,auto,detected,by,link,mime,message,helper;public,void,set,default,encoding,string,default,encoding,this,default,encoding,default,encoding
JavaMailSenderImpl -> public void setDefaultEncoding(String defaultEncoding);1412602628;Set the default encoding to use for {@link MimeMessage MimeMessages}_created by this instance._<p>Such an encoding will be auto-detected by {@link MimeMessageHelper}.;public void setDefaultEncoding(String defaultEncoding) {_		this.defaultEncoding = defaultEncoding__	};set,the,default,encoding,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,such,an,encoding,will,be,auto,detected,by,link,mime,message,helper;public,void,set,default,encoding,string,default,encoding,this,default,encoding,default,encoding
JavaMailSenderImpl -> public void setDefaultEncoding(String defaultEncoding);1426003109;Set the default encoding to use for {@link MimeMessage MimeMessages}_created by this instance._<p>Such an encoding will be auto-detected by {@link MimeMessageHelper}.;public void setDefaultEncoding(String defaultEncoding) {_		this.defaultEncoding = defaultEncoding__	};set,the,default,encoding,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,such,an,encoding,will,be,auto,detected,by,link,mime,message,helper;public,void,set,default,encoding,string,default,encoding,this,default,encoding,default,encoding
JavaMailSenderImpl -> public void setDefaultEncoding(String defaultEncoding);1467730834;Set the default encoding to use for {@link MimeMessage MimeMessages}_created by this instance._<p>Such an encoding will be auto-detected by {@link MimeMessageHelper}.;public void setDefaultEncoding(String defaultEncoding) {_		this.defaultEncoding = defaultEncoding__	};set,the,default,encoding,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,such,an,encoding,will,be,auto,detected,by,link,mime,message,helper;public,void,set,default,encoding,string,default,encoding,this,default,encoding,default,encoding
JavaMailSenderImpl -> public void setDefaultEncoding(String defaultEncoding);1495868221;Set the default encoding to use for {@link MimeMessage MimeMessages}_created by this instance._<p>Such an encoding will be auto-detected by {@link MimeMessageHelper}.;public void setDefaultEncoding(String defaultEncoding) {_		this.defaultEncoding = defaultEncoding__	};set,the,default,encoding,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,such,an,encoding,will,be,auto,detected,by,link,mime,message,helper;public,void,set,default,encoding,string,default,encoding,this,default,encoding,default,encoding
JavaMailSenderImpl -> public void setDefaultEncoding(String defaultEncoding);1496259743;Set the default encoding to use for {@link MimeMessage MimeMessages}_created by this instance._<p>Such an encoding will be auto-detected by {@link MimeMessageHelper}.;public void setDefaultEncoding(String defaultEncoding) {_		this.defaultEncoding = defaultEncoding__	};set,the,default,encoding,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,such,an,encoding,will,be,auto,detected,by,link,mime,message,helper;public,void,set,default,encoding,string,default,encoding,this,default,encoding,default,encoding
JavaMailSenderImpl -> public void setDefaultEncoding(String defaultEncoding);1496837955;Set the default encoding to use for {@link MimeMessage MimeMessages}_created by this instance._<p>Such an encoding will be auto-detected by {@link MimeMessageHelper}.;public void setDefaultEncoding(String defaultEncoding) {_		this.defaultEncoding = defaultEncoding__	};set,the,default,encoding,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,such,an,encoding,will,be,auto,detected,by,link,mime,message,helper;public,void,set,default,encoding,string,default,encoding,this,default,encoding,default,encoding
JavaMailSenderImpl -> public void setDefaultEncoding(String defaultEncoding);1498780456;Set the default encoding to use for {@link MimeMessage MimeMessages}_created by this instance._<p>Such an encoding will be auto-detected by {@link MimeMessageHelper}.;public void setDefaultEncoding(String defaultEncoding) {_		this.defaultEncoding = defaultEncoding__	};set,the,default,encoding,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,such,an,encoding,will,be,auto,detected,by,link,mime,message,helper;public,void,set,default,encoding,string,default,encoding,this,default,encoding,default,encoding
JavaMailSenderImpl -> public String getProtocol();1328020251;Return the mail protocol.;public String getProtocol() {_		return this.protocol__	};return,the,mail,protocol;public,string,get,protocol,return,this,protocol
JavaMailSenderImpl -> public String getProtocol();1356735495;Return the mail protocol.;public String getProtocol() {_		return this.protocol__	};return,the,mail,protocol;public,string,get,protocol,return,this,protocol
JavaMailSenderImpl -> public String getProtocol();1357119239;Return the mail protocol.;public String getProtocol() {_		return this.protocol__	};return,the,mail,protocol;public,string,get,protocol,return,this,protocol
JavaMailSenderImpl -> public String getProtocol();1368482696;Return the mail protocol.;public String getProtocol() {_		return this.protocol__	};return,the,mail,protocol;public,string,get,protocol,return,this,protocol
JavaMailSenderImpl -> public String getProtocol();1412377300;Return the mail protocol.;public String getProtocol() {_		return this.protocol__	};return,the,mail,protocol;public,string,get,protocol,return,this,protocol
JavaMailSenderImpl -> public String getProtocol();1412602628;Return the mail protocol.;public String getProtocol() {_		return this.protocol__	};return,the,mail,protocol;public,string,get,protocol,return,this,protocol
JavaMailSenderImpl -> public String getProtocol();1426003109;Return the mail protocol.;public String getProtocol() {_		return this.protocol__	};return,the,mail,protocol;public,string,get,protocol,return,this,protocol
JavaMailSenderImpl -> public String getProtocol();1467730834;Return the mail protocol.;public String getProtocol() {_		return this.protocol__	};return,the,mail,protocol;public,string,get,protocol,return,this,protocol
JavaMailSenderImpl -> public String getProtocol();1495868221;Return the mail protocol.;public String getProtocol() {_		return this.protocol__	};return,the,mail,protocol;public,string,get,protocol,return,this,protocol
JavaMailSenderImpl -> public String getProtocol();1496259743;Return the mail protocol.;public String getProtocol() {_		return this.protocol__	};return,the,mail,protocol;public,string,get,protocol,return,this,protocol
JavaMailSenderImpl -> public void testConnection() throws MessagingException;1426003109;Validate that this instance can connect to the server that it is configured_for. Throws a {@link MessagingException} if the connection attempt failed.;public void testConnection() throws MessagingException {_		Transport transport = null__		try {_			transport = connectTransport()__		}_		finally {_			if (transport != null) {_				transport.close()__			}_		}_	};validate,that,this,instance,can,connect,to,the,server,that,it,is,configured,for,throws,a,link,messaging,exception,if,the,connection,attempt,failed;public,void,test,connection,throws,messaging,exception,transport,transport,null,try,transport,connect,transport,finally,if,transport,null,transport,close
JavaMailSenderImpl -> public void testConnection() throws MessagingException;1467730834;Validate that this instance can connect to the server that it is configured_for. Throws a {@link MessagingException} if the connection attempt failed.;public void testConnection() throws MessagingException {_		Transport transport = null__		try {_			transport = connectTransport()__		}_		finally {_			if (transport != null) {_				transport.close()__			}_		}_	};validate,that,this,instance,can,connect,to,the,server,that,it,is,configured,for,throws,a,link,messaging,exception,if,the,connection,attempt,failed;public,void,test,connection,throws,messaging,exception,transport,transport,null,try,transport,connect,transport,finally,if,transport,null,transport,close
JavaMailSenderImpl -> public void testConnection() throws MessagingException;1495868221;Validate that this instance can connect to the server that it is configured_for. Throws a {@link MessagingException} if the connection attempt failed.;public void testConnection() throws MessagingException {_		Transport transport = null__		try {_			transport = connectTransport()__		}_		finally {_			if (transport != null) {_				transport.close()__			}_		}_	};validate,that,this,instance,can,connect,to,the,server,that,it,is,configured,for,throws,a,link,messaging,exception,if,the,connection,attempt,failed;public,void,test,connection,throws,messaging,exception,transport,transport,null,try,transport,connect,transport,finally,if,transport,null,transport,close
JavaMailSenderImpl -> public void testConnection() throws MessagingException;1496259743;Validate that this instance can connect to the server that it is configured_for. Throws a {@link MessagingException} if the connection attempt failed.;public void testConnection() throws MessagingException {_		Transport transport = null__		try {_			transport = connectTransport()__		}_		finally {_			if (transport != null) {_				transport.close()__			}_		}_	};validate,that,this,instance,can,connect,to,the,server,that,it,is,configured,for,throws,a,link,messaging,exception,if,the,connection,attempt,failed;public,void,test,connection,throws,messaging,exception,transport,transport,null,try,transport,connect,transport,finally,if,transport,null,transport,close
JavaMailSenderImpl -> public void testConnection() throws MessagingException;1496837955;Validate that this instance can connect to the server that it is configured_for. Throws a {@link MessagingException} if the connection attempt failed.;public void testConnection() throws MessagingException {_		Transport transport = null__		try {_			transport = connectTransport()__		}_		finally {_			if (transport != null) {_				transport.close()__			}_		}_	};validate,that,this,instance,can,connect,to,the,server,that,it,is,configured,for,throws,a,link,messaging,exception,if,the,connection,attempt,failed;public,void,test,connection,throws,messaging,exception,transport,transport,null,try,transport,connect,transport,finally,if,transport,null,transport,close
JavaMailSenderImpl -> public void testConnection() throws MessagingException;1498780456;Validate that this instance can connect to the server that it is configured_for. Throws a {@link MessagingException} if the connection attempt failed.;public void testConnection() throws MessagingException {_		Transport transport = null__		try {_			transport = connectTransport()__		}_		finally {_			if (transport != null) {_				transport.close()__			}_		}_	};validate,that,this,instance,can,connect,to,the,server,that,it,is,configured,for,throws,a,link,messaging,exception,if,the,connection,attempt,failed;public,void,test,connection,throws,messaging,exception,transport,transport,null,try,transport,connect,transport,finally,if,transport,null,transport,close
JavaMailSenderImpl -> public void testConnection() throws MessagingException;1500448076;Validate that this instance can connect to the server that it is configured_for. Throws a {@link MessagingException} if the connection attempt failed.;public void testConnection() throws MessagingException {_		Transport transport = null__		try {_			transport = connectTransport()__		}_		finally {_			if (transport != null) {_				transport.close()__			}_		}_	};validate,that,this,instance,can,connect,to,the,server,that,it,is,configured,for,throws,a,link,messaging,exception,if,the,connection,attempt,failed;public,void,test,connection,throws,messaging,exception,transport,transport,null,try,transport,connect,transport,finally,if,transport,null,transport,close
JavaMailSenderImpl -> public void testConnection() throws MessagingException;1519295386;Validate that this instance can connect to the server that it is configured_for. Throws a {@link MessagingException} if the connection attempt failed.;public void testConnection() throws MessagingException {_		Transport transport = null__		try {_			transport = connectTransport()__		}_		finally {_			if (transport != null) {_				transport.close()__			}_		}_	};validate,that,this,instance,can,connect,to,the,server,that,it,is,configured,for,throws,a,link,messaging,exception,if,the,connection,attempt,failed;public,void,test,connection,throws,messaging,exception,transport,transport,null,try,transport,connect,transport,finally,if,transport,null,transport,close
JavaMailSenderImpl -> public void testConnection() throws MessagingException;1530174524;Validate that this instance can connect to the server that it is configured_for. Throws a {@link MessagingException} if the connection attempt failed.;public void testConnection() throws MessagingException {_		Transport transport = null__		try {_			transport = connectTransport()__		}_		finally {_			if (transport != null) {_				transport.close()__			}_		}_	};validate,that,this,instance,can,connect,to,the,server,that,it,is,configured,for,throws,a,link,messaging,exception,if,the,connection,attempt,failed;public,void,test,connection,throws,messaging,exception,transport,transport,null,try,transport,connect,transport,finally,if,transport,null,transport,close
JavaMailSenderImpl -> public void testConnection() throws MessagingException;1543862961;Validate that this instance can connect to the server that it is configured_for. Throws a {@link MessagingException} if the connection attempt failed.;public void testConnection() throws MessagingException {_		Transport transport = null__		try {_			transport = connectTransport()__		}_		finally {_			if (transport != null) {_				transport.close()__			}_		}_	};validate,that,this,instance,can,connect,to,the,server,that,it,is,configured,for,throws,a,link,messaging,exception,if,the,connection,attempt,failed;public,void,test,connection,throws,messaging,exception,transport,transport,null,try,transport,connect,transport,finally,if,transport,null,transport,close
JavaMailSenderImpl -> @Nullable 	public String getUsername();1495868221;Return the username for the account at the mail host.;@Nullable_	public String getUsername() {_		return this.username__	};return,the,username,for,the,account,at,the,mail,host;nullable,public,string,get,username,return,this,username
JavaMailSenderImpl -> @Nullable 	public String getUsername();1496259743;Return the username for the account at the mail host.;@Nullable_	public String getUsername() {_		return this.username__	};return,the,username,for,the,account,at,the,mail,host;nullable,public,string,get,username,return,this,username
JavaMailSenderImpl -> @Nullable 	public String getUsername();1496837955;Return the username for the account at the mail host.;@Nullable_	public String getUsername() {_		return this.username__	};return,the,username,for,the,account,at,the,mail,host;nullable,public,string,get,username,return,this,username
JavaMailSenderImpl -> @Nullable 	public String getUsername();1498780456;Return the username for the account at the mail host.;@Nullable_	public String getUsername() {_		return this.username__	};return,the,username,for,the,account,at,the,mail,host;nullable,public,string,get,username,return,this,username
JavaMailSenderImpl -> @Nullable 	public String getUsername();1500448076;Return the username for the account at the mail host.;@Nullable_	public String getUsername() {_		return this.username__	};return,the,username,for,the,account,at,the,mail,host;nullable,public,string,get,username,return,this,username
JavaMailSenderImpl -> @Nullable 	public String getUsername();1519295386;Return the username for the account at the mail host.;@Nullable_	public String getUsername() {_		return this.username__	};return,the,username,for,the,account,at,the,mail,host;nullable,public,string,get,username,return,this,username
JavaMailSenderImpl -> @Nullable 	public String getUsername();1530174524;Return the username for the account at the mail host.;@Nullable_	public String getUsername() {_		return this.username__	};return,the,username,for,the,account,at,the,mail,host;nullable,public,string,get,username,return,this,username
JavaMailSenderImpl -> @Nullable 	public String getUsername();1543862961;Return the username for the account at the mail host.;@Nullable_	public String getUsername() {_		return this.username__	};return,the,username,for,the,account,at,the,mail,host;nullable,public,string,get,username,return,this,username
JavaMailSenderImpl -> public void setHost(String host);1328020251;Set the mail server host, typically an SMTP host._<p>Default is the default host of the underlying JavaMail Session.;public void setHost(String host) {_		this.host = host__	};set,the,mail,server,host,typically,an,smtp,host,p,default,is,the,default,host,of,the,underlying,java,mail,session;public,void,set,host,string,host,this,host,host
JavaMailSenderImpl -> public void setHost(String host);1356735495;Set the mail server host, typically an SMTP host._<p>Default is the default host of the underlying JavaMail Session.;public void setHost(String host) {_		this.host = host__	};set,the,mail,server,host,typically,an,smtp,host,p,default,is,the,default,host,of,the,underlying,java,mail,session;public,void,set,host,string,host,this,host,host
JavaMailSenderImpl -> public void setHost(String host);1357119239;Set the mail server host, typically an SMTP host._<p>Default is the default host of the underlying JavaMail Session.;public void setHost(String host) {_		this.host = host__	};set,the,mail,server,host,typically,an,smtp,host,p,default,is,the,default,host,of,the,underlying,java,mail,session;public,void,set,host,string,host,this,host,host
JavaMailSenderImpl -> public void setHost(String host);1368482696;Set the mail server host, typically an SMTP host._<p>Default is the default host of the underlying JavaMail Session.;public void setHost(String host) {_		this.host = host__	};set,the,mail,server,host,typically,an,smtp,host,p,default,is,the,default,host,of,the,underlying,java,mail,session;public,void,set,host,string,host,this,host,host
JavaMailSenderImpl -> public void setHost(String host);1412377300;Set the mail server host, typically an SMTP host._<p>Default is the default host of the underlying JavaMail Session.;public void setHost(String host) {_		this.host = host__	};set,the,mail,server,host,typically,an,smtp,host,p,default,is,the,default,host,of,the,underlying,java,mail,session;public,void,set,host,string,host,this,host,host
JavaMailSenderImpl -> public void setHost(String host);1412602628;Set the mail server host, typically an SMTP host._<p>Default is the default host of the underlying JavaMail Session.;public void setHost(String host) {_		this.host = host__	};set,the,mail,server,host,typically,an,smtp,host,p,default,is,the,default,host,of,the,underlying,java,mail,session;public,void,set,host,string,host,this,host,host
JavaMailSenderImpl -> public void setHost(String host);1426003109;Set the mail server host, typically an SMTP host._<p>Default is the default host of the underlying JavaMail Session.;public void setHost(String host) {_		this.host = host__	};set,the,mail,server,host,typically,an,smtp,host,p,default,is,the,default,host,of,the,underlying,java,mail,session;public,void,set,host,string,host,this,host,host
JavaMailSenderImpl -> public void setHost(String host);1467730834;Set the mail server host, typically an SMTP host._<p>Default is the default host of the underlying JavaMail Session.;public void setHost(String host) {_		this.host = host__	};set,the,mail,server,host,typically,an,smtp,host,p,default,is,the,default,host,of,the,underlying,java,mail,session;public,void,set,host,string,host,this,host,host
JavaMailSenderImpl -> public void setHost(String host);1495868221;Set the mail server host, typically an SMTP host._<p>Default is the default host of the underlying JavaMail Session.;public void setHost(String host) {_		this.host = host__	};set,the,mail,server,host,typically,an,smtp,host,p,default,is,the,default,host,of,the,underlying,java,mail,session;public,void,set,host,string,host,this,host,host
JavaMailSenderImpl -> public void setHost(String host);1496259743;Set the mail server host, typically an SMTP host._<p>Default is the default host of the underlying JavaMail Session.;public void setHost(String host) {_		this.host = host__	};set,the,mail,server,host,typically,an,smtp,host,p,default,is,the,default,host,of,the,underlying,java,mail,session;public,void,set,host,string,host,this,host,host
JavaMailSenderImpl -> public void setHost(String host);1496837955;Set the mail server host, typically an SMTP host._<p>Default is the default host of the underlying JavaMail Session.;public void setHost(String host) {_		this.host = host__	};set,the,mail,server,host,typically,an,smtp,host,p,default,is,the,default,host,of,the,underlying,java,mail,session;public,void,set,host,string,host,this,host,host
JavaMailSenderImpl -> public void setHost(String host);1498780456;Set the mail server host, typically an SMTP host._<p>Default is the default host of the underlying JavaMail Session.;public void setHost(String host) {_		this.host = host__	};set,the,mail,server,host,typically,an,smtp,host,p,default,is,the,default,host,of,the,underlying,java,mail,session;public,void,set,host,string,host,this,host,host
JavaMailSenderImpl -> public MimeMessage createMimeMessage();1328020251;This implementation creates a SmartMimeMessage, holding the specified_default encoding and default FileTypeMap. This special defaults-carrying_message will be autodetected by {@link MimeMessageHelper}, which will use_the carried encoding and FileTypeMap unless explicitly overridden._@see #setDefaultEncoding_@see #setDefaultFileTypeMap;public MimeMessage createMimeMessage() {_		return new SmartMimeMessage(getSession(), getDefaultEncoding(), getDefaultFileTypeMap())__	};this,implementation,creates,a,smart,mime,message,holding,the,specified,default,encoding,and,default,file,type,map,this,special,defaults,carrying,message,will,be,autodetected,by,link,mime,message,helper,which,will,use,the,carried,encoding,and,file,type,map,unless,explicitly,overridden,see,set,default,encoding,see,set,default,file,type,map;public,mime,message,create,mime,message,return,new,smart,mime,message,get,session,get,default,encoding,get,default,file,type,map
JavaMailSenderImpl -> public MimeMessage createMimeMessage();1357119239;This implementation creates a SmartMimeMessage, holding the specified_default encoding and default FileTypeMap. This special defaults-carrying_message will be autodetected by {@link MimeMessageHelper}, which will use_the carried encoding and FileTypeMap unless explicitly overridden._@see #setDefaultEncoding_@see #setDefaultFileTypeMap;public MimeMessage createMimeMessage() {_		return new SmartMimeMessage(getSession(), getDefaultEncoding(), getDefaultFileTypeMap())__	};this,implementation,creates,a,smart,mime,message,holding,the,specified,default,encoding,and,default,file,type,map,this,special,defaults,carrying,message,will,be,autodetected,by,link,mime,message,helper,which,will,use,the,carried,encoding,and,file,type,map,unless,explicitly,overridden,see,set,default,encoding,see,set,default,file,type,map;public,mime,message,create,mime,message,return,new,smart,mime,message,get,session,get,default,encoding,get,default,file,type,map
JavaMailSenderImpl -> @Nullable 	public FileTypeMap getDefaultFileTypeMap();1495868221;Return the default Java Activation {@link FileTypeMap} for_{@link MimeMessage MimeMessages}, or {@code null} if none.;@Nullable_	public FileTypeMap getDefaultFileTypeMap() {_		return this.defaultFileTypeMap__	};return,the,default,java,activation,link,file,type,map,for,link,mime,message,mime,messages,or,code,null,if,none;nullable,public,file,type,map,get,default,file,type,map,return,this,default,file,type,map
JavaMailSenderImpl -> @Nullable 	public FileTypeMap getDefaultFileTypeMap();1496259743;Return the default Java Activation {@link FileTypeMap} for_{@link MimeMessage MimeMessages}, or {@code null} if none.;@Nullable_	public FileTypeMap getDefaultFileTypeMap() {_		return this.defaultFileTypeMap__	};return,the,default,java,activation,link,file,type,map,for,link,mime,message,mime,messages,or,code,null,if,none;nullable,public,file,type,map,get,default,file,type,map,return,this,default,file,type,map
JavaMailSenderImpl -> @Nullable 	public FileTypeMap getDefaultFileTypeMap();1496837955;Return the default Java Activation {@link FileTypeMap} for_{@link MimeMessage MimeMessages}, or {@code null} if none.;@Nullable_	public FileTypeMap getDefaultFileTypeMap() {_		return this.defaultFileTypeMap__	};return,the,default,java,activation,link,file,type,map,for,link,mime,message,mime,messages,or,code,null,if,none;nullable,public,file,type,map,get,default,file,type,map,return,this,default,file,type,map
JavaMailSenderImpl -> @Nullable 	public FileTypeMap getDefaultFileTypeMap();1498780456;Return the default Java Activation {@link FileTypeMap} for_{@link MimeMessage MimeMessages}, or {@code null} if none.;@Nullable_	public FileTypeMap getDefaultFileTypeMap() {_		return this.defaultFileTypeMap__	};return,the,default,java,activation,link,file,type,map,for,link,mime,message,mime,messages,or,code,null,if,none;nullable,public,file,type,map,get,default,file,type,map,return,this,default,file,type,map
JavaMailSenderImpl -> @Nullable 	public FileTypeMap getDefaultFileTypeMap();1500448076;Return the default Java Activation {@link FileTypeMap} for_{@link MimeMessage MimeMessages}, or {@code null} if none.;@Nullable_	public FileTypeMap getDefaultFileTypeMap() {_		return this.defaultFileTypeMap__	};return,the,default,java,activation,link,file,type,map,for,link,mime,message,mime,messages,or,code,null,if,none;nullable,public,file,type,map,get,default,file,type,map,return,this,default,file,type,map
JavaMailSenderImpl -> @Nullable 	public FileTypeMap getDefaultFileTypeMap();1519295386;Return the default Java Activation {@link FileTypeMap} for_{@link MimeMessage MimeMessages}, or {@code null} if none.;@Nullable_	public FileTypeMap getDefaultFileTypeMap() {_		return this.defaultFileTypeMap__	};return,the,default,java,activation,link,file,type,map,for,link,mime,message,mime,messages,or,code,null,if,none;nullable,public,file,type,map,get,default,file,type,map,return,this,default,file,type,map
JavaMailSenderImpl -> @Nullable 	public FileTypeMap getDefaultFileTypeMap();1530174524;Return the default Java Activation {@link FileTypeMap} for_{@link MimeMessage MimeMessages}, or {@code null} if none.;@Nullable_	public FileTypeMap getDefaultFileTypeMap() {_		return this.defaultFileTypeMap__	};return,the,default,java,activation,link,file,type,map,for,link,mime,message,mime,messages,or,code,null,if,none;nullable,public,file,type,map,get,default,file,type,map,return,this,default,file,type,map
JavaMailSenderImpl -> @Nullable 	public FileTypeMap getDefaultFileTypeMap();1543862961;Return the default Java Activation {@link FileTypeMap} for_{@link MimeMessage MimeMessages}, or {@code null} if none.;@Nullable_	public FileTypeMap getDefaultFileTypeMap() {_		return this.defaultFileTypeMap__	};return,the,default,java,activation,link,file,type,map,for,link,mime,message,mime,messages,or,code,null,if,none;nullable,public,file,type,map,get,default,file,type,map,return,this,default,file,type,map
JavaMailSenderImpl -> public void setDefaultEncoding(@Nullable String defaultEncoding);1500448076;Set the default encoding to use for {@link MimeMessage MimeMessages}_created by this instance._<p>Such an encoding will be auto-detected by {@link MimeMessageHelper}.;public void setDefaultEncoding(@Nullable String defaultEncoding) {_		this.defaultEncoding = defaultEncoding__	};set,the,default,encoding,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,such,an,encoding,will,be,auto,detected,by,link,mime,message,helper;public,void,set,default,encoding,nullable,string,default,encoding,this,default,encoding,default,encoding
JavaMailSenderImpl -> public void setDefaultEncoding(@Nullable String defaultEncoding);1519295386;Set the default encoding to use for {@link MimeMessage MimeMessages}_created by this instance._<p>Such an encoding will be auto-detected by {@link MimeMessageHelper}.;public void setDefaultEncoding(@Nullable String defaultEncoding) {_		this.defaultEncoding = defaultEncoding__	};set,the,default,encoding,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,such,an,encoding,will,be,auto,detected,by,link,mime,message,helper;public,void,set,default,encoding,nullable,string,default,encoding,this,default,encoding,default,encoding
JavaMailSenderImpl -> public void setDefaultEncoding(@Nullable String defaultEncoding);1530174524;Set the default encoding to use for {@link MimeMessage MimeMessages}_created by this instance._<p>Such an encoding will be auto-detected by {@link MimeMessageHelper}.;public void setDefaultEncoding(@Nullable String defaultEncoding) {_		this.defaultEncoding = defaultEncoding__	};set,the,default,encoding,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,such,an,encoding,will,be,auto,detected,by,link,mime,message,helper;public,void,set,default,encoding,nullable,string,default,encoding,this,default,encoding,default,encoding
JavaMailSenderImpl -> public void setDefaultEncoding(@Nullable String defaultEncoding);1543862961;Set the default encoding to use for {@link MimeMessage MimeMessages}_created by this instance._<p>Such an encoding will be auto-detected by {@link MimeMessageHelper}.;public void setDefaultEncoding(@Nullable String defaultEncoding) {_		this.defaultEncoding = defaultEncoding__	};set,the,default,encoding,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,such,an,encoding,will,be,auto,detected,by,link,mime,message,helper;public,void,set,default,encoding,nullable,string,default,encoding,this,default,encoding,default,encoding
JavaMailSenderImpl -> public void setPassword(@Nullable String password);1500448076;Set the password for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified password will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setUsername;public void setPassword(@Nullable String password) {_		this.password = password__	};set,the,password,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,password,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,username;public,void,set,password,nullable,string,password,this,password,password
JavaMailSenderImpl -> public void setPassword(@Nullable String password);1519295386;Set the password for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified password will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setUsername;public void setPassword(@Nullable String password) {_		this.password = password__	};set,the,password,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,password,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,username;public,void,set,password,nullable,string,password,this,password,password
JavaMailSenderImpl -> public void setPassword(@Nullable String password);1530174524;Set the password for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified password will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setUsername;public void setPassword(@Nullable String password) {_		this.password = password__	};set,the,password,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,password,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,username;public,void,set,password,nullable,string,password,this,password,password
JavaMailSenderImpl -> public void setPassword(@Nullable String password);1543862961;Set the password for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified password will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setUsername;public void setPassword(@Nullable String password) {_		this.password = password__	};set,the,password,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,password,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,username;public,void,set,password,nullable,string,password,this,password,password
JavaMailSenderImpl -> public String getHost();1328020251;Return the mail server host.;public String getHost() {_		return this.host__	};return,the,mail,server,host;public,string,get,host,return,this,host
JavaMailSenderImpl -> public String getHost();1356735495;Return the mail server host.;public String getHost() {_		return this.host__	};return,the,mail,server,host;public,string,get,host,return,this,host
JavaMailSenderImpl -> public String getHost();1357119239;Return the mail server host.;public String getHost() {_		return this.host__	};return,the,mail,server,host;public,string,get,host,return,this,host
JavaMailSenderImpl -> public String getHost();1368482696;Return the mail server host.;public String getHost() {_		return this.host__	};return,the,mail,server,host;public,string,get,host,return,this,host
JavaMailSenderImpl -> public String getHost();1412377300;Return the mail server host.;public String getHost() {_		return this.host__	};return,the,mail,server,host;public,string,get,host,return,this,host
JavaMailSenderImpl -> public String getHost();1412602628;Return the mail server host.;public String getHost() {_		return this.host__	};return,the,mail,server,host;public,string,get,host,return,this,host
JavaMailSenderImpl -> public String getHost();1426003109;Return the mail server host.;public String getHost() {_		return this.host__	};return,the,mail,server,host;public,string,get,host,return,this,host
JavaMailSenderImpl -> public String getHost();1467730834;Return the mail server host.;public String getHost() {_		return this.host__	};return,the,mail,server,host;public,string,get,host,return,this,host
JavaMailSenderImpl -> public String getHost();1495868221;Return the mail server host.;public String getHost() {_		return this.host__	};return,the,mail,server,host;public,string,get,host,return,this,host
JavaMailSenderImpl -> public String getHost();1496259743;Return the mail server host.;public String getHost() {_		return this.host__	};return,the,mail,server,host;public,string,get,host,return,this,host
JavaMailSenderImpl -> public void setHost(@Nullable String host);1500448076;Set the mail server host, typically an SMTP host._<p>Default is the default host of the underlying JavaMail Session.;public void setHost(@Nullable String host) {_		this.host = host__	};set,the,mail,server,host,typically,an,smtp,host,p,default,is,the,default,host,of,the,underlying,java,mail,session;public,void,set,host,nullable,string,host,this,host,host
JavaMailSenderImpl -> public void setHost(@Nullable String host);1519295386;Set the mail server host, typically an SMTP host._<p>Default is the default host of the underlying JavaMail Session.;public void setHost(@Nullable String host) {_		this.host = host__	};set,the,mail,server,host,typically,an,smtp,host,p,default,is,the,default,host,of,the,underlying,java,mail,session;public,void,set,host,nullable,string,host,this,host,host
JavaMailSenderImpl -> public void setHost(@Nullable String host);1530174524;Set the mail server host, typically an SMTP host._<p>Default is the default host of the underlying JavaMail Session.;public void setHost(@Nullable String host) {_		this.host = host__	};set,the,mail,server,host,typically,an,smtp,host,p,default,is,the,default,host,of,the,underlying,java,mail,session;public,void,set,host,nullable,string,host,this,host,host
JavaMailSenderImpl -> public void setHost(@Nullable String host);1543862961;Set the mail server host, typically an SMTP host._<p>Default is the default host of the underlying JavaMail Session.;public void setHost(@Nullable String host) {_		this.host = host__	};set,the,mail,server,host,typically,an,smtp,host,p,default,is,the,default,host,of,the,underlying,java,mail,session;public,void,set,host,nullable,string,host,this,host,host
JavaMailSenderImpl -> public void setDefaultFileTypeMap(@Nullable FileTypeMap defaultFileTypeMap);1500448076;Set the default Java Activation {@link FileTypeMap} to use for_{@link MimeMessage MimeMessages} created by this instance._<p>A {@code FileTypeMap} specified here will be autodetected by_{@link MimeMessageHelper}, avoiding the need to specify the_{@code FileTypeMap} for each {@code MimeMessageHelper} instance._<p>For example, you can specify a custom instance of Spring's_{@link ConfigurableMimeFileTypeMap} here. If not explicitly specified,_a default {@code ConfigurableMimeFileTypeMap} will be used, containing_an extended set of MIME type mappings (as defined by the_{@code mime.types} file contained in the Spring jar)._@see MimeMessageHelper#setFileTypeMap;public void setDefaultFileTypeMap(@Nullable FileTypeMap defaultFileTypeMap) {_		this.defaultFileTypeMap = defaultFileTypeMap__	};set,the,default,java,activation,link,file,type,map,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,a,code,file,type,map,specified,here,will,be,autodetected,by,link,mime,message,helper,avoiding,the,need,to,specify,the,code,file,type,map,for,each,code,mime,message,helper,instance,p,for,example,you,can,specify,a,custom,instance,of,spring,s,link,configurable,mime,file,type,map,here,if,not,explicitly,specified,a,default,code,configurable,mime,file,type,map,will,be,used,containing,an,extended,set,of,mime,type,mappings,as,defined,by,the,code,mime,types,file,contained,in,the,spring,jar,see,mime,message,helper,set,file,type,map;public,void,set,default,file,type,map,nullable,file,type,map,default,file,type,map,this,default,file,type,map,default,file,type,map
JavaMailSenderImpl -> public void setDefaultFileTypeMap(@Nullable FileTypeMap defaultFileTypeMap);1519295386;Set the default Java Activation {@link FileTypeMap} to use for_{@link MimeMessage MimeMessages} created by this instance._<p>A {@code FileTypeMap} specified here will be autodetected by_{@link MimeMessageHelper}, avoiding the need to specify the_{@code FileTypeMap} for each {@code MimeMessageHelper} instance._<p>For example, you can specify a custom instance of Spring's_{@link ConfigurableMimeFileTypeMap} here. If not explicitly specified,_a default {@code ConfigurableMimeFileTypeMap} will be used, containing_an extended set of MIME type mappings (as defined by the_{@code mime.types} file contained in the Spring jar)._@see MimeMessageHelper#setFileTypeMap;public void setDefaultFileTypeMap(@Nullable FileTypeMap defaultFileTypeMap) {_		this.defaultFileTypeMap = defaultFileTypeMap__	};set,the,default,java,activation,link,file,type,map,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,a,code,file,type,map,specified,here,will,be,autodetected,by,link,mime,message,helper,avoiding,the,need,to,specify,the,code,file,type,map,for,each,code,mime,message,helper,instance,p,for,example,you,can,specify,a,custom,instance,of,spring,s,link,configurable,mime,file,type,map,here,if,not,explicitly,specified,a,default,code,configurable,mime,file,type,map,will,be,used,containing,an,extended,set,of,mime,type,mappings,as,defined,by,the,code,mime,types,file,contained,in,the,spring,jar,see,mime,message,helper,set,file,type,map;public,void,set,default,file,type,map,nullable,file,type,map,default,file,type,map,this,default,file,type,map,default,file,type,map
JavaMailSenderImpl -> public void setDefaultFileTypeMap(@Nullable FileTypeMap defaultFileTypeMap);1530174524;Set the default Java Activation {@link FileTypeMap} to use for_{@link MimeMessage MimeMessages} created by this instance._<p>A {@code FileTypeMap} specified here will be autodetected by_{@link MimeMessageHelper}, avoiding the need to specify the_{@code FileTypeMap} for each {@code MimeMessageHelper} instance._<p>For example, you can specify a custom instance of Spring's_{@link ConfigurableMimeFileTypeMap} here. If not explicitly specified,_a default {@code ConfigurableMimeFileTypeMap} will be used, containing_an extended set of MIME type mappings (as defined by the_{@code mime.types} file contained in the Spring jar)._@see MimeMessageHelper#setFileTypeMap;public void setDefaultFileTypeMap(@Nullable FileTypeMap defaultFileTypeMap) {_		this.defaultFileTypeMap = defaultFileTypeMap__	};set,the,default,java,activation,link,file,type,map,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,a,code,file,type,map,specified,here,will,be,autodetected,by,link,mime,message,helper,avoiding,the,need,to,specify,the,code,file,type,map,for,each,code,mime,message,helper,instance,p,for,example,you,can,specify,a,custom,instance,of,spring,s,link,configurable,mime,file,type,map,here,if,not,explicitly,specified,a,default,code,configurable,mime,file,type,map,will,be,used,containing,an,extended,set,of,mime,type,mappings,as,defined,by,the,code,mime,types,file,contained,in,the,spring,jar,see,mime,message,helper,set,file,type,map;public,void,set,default,file,type,map,nullable,file,type,map,default,file,type,map,this,default,file,type,map,default,file,type,map
JavaMailSenderImpl -> public void setDefaultFileTypeMap(@Nullable FileTypeMap defaultFileTypeMap);1543862961;Set the default Java Activation {@link FileTypeMap} to use for_{@link MimeMessage MimeMessages} created by this instance._<p>A {@code FileTypeMap} specified here will be autodetected by_{@link MimeMessageHelper}, avoiding the need to specify the_{@code FileTypeMap} for each {@code MimeMessageHelper} instance._<p>For example, you can specify a custom instance of Spring's_{@link ConfigurableMimeFileTypeMap} here. If not explicitly specified,_a default {@code ConfigurableMimeFileTypeMap} will be used, containing_an extended set of MIME type mappings (as defined by the_{@code mime.types} file contained in the Spring jar)._@see MimeMessageHelper#setFileTypeMap;public void setDefaultFileTypeMap(@Nullable FileTypeMap defaultFileTypeMap) {_		this.defaultFileTypeMap = defaultFileTypeMap__	};set,the,default,java,activation,link,file,type,map,to,use,for,link,mime,message,mime,messages,created,by,this,instance,p,a,code,file,type,map,specified,here,will,be,autodetected,by,link,mime,message,helper,avoiding,the,need,to,specify,the,code,file,type,map,for,each,code,mime,message,helper,instance,p,for,example,you,can,specify,a,custom,instance,of,spring,s,link,configurable,mime,file,type,map,here,if,not,explicitly,specified,a,default,code,configurable,mime,file,type,map,will,be,used,containing,an,extended,set,of,mime,type,mappings,as,defined,by,the,code,mime,types,file,contained,in,the,spring,jar,see,mime,message,helper,set,file,type,map;public,void,set,default,file,type,map,nullable,file,type,map,default,file,type,map,this,default,file,type,map,default,file,type,map
JavaMailSenderImpl -> public String getPassword();1328020251;Return the password for the account at the mail host.;public String getPassword() {_		return this.password__	};return,the,password,for,the,account,at,the,mail,host;public,string,get,password,return,this,password
JavaMailSenderImpl -> public String getPassword();1356735495;Return the password for the account at the mail host.;public String getPassword() {_		return this.password__	};return,the,password,for,the,account,at,the,mail,host;public,string,get,password,return,this,password
JavaMailSenderImpl -> public String getPassword();1357119239;Return the password for the account at the mail host.;public String getPassword() {_		return this.password__	};return,the,password,for,the,account,at,the,mail,host;public,string,get,password,return,this,password
JavaMailSenderImpl -> public String getPassword();1368482696;Return the password for the account at the mail host.;public String getPassword() {_		return this.password__	};return,the,password,for,the,account,at,the,mail,host;public,string,get,password,return,this,password
JavaMailSenderImpl -> public String getPassword();1412377300;Return the password for the account at the mail host.;public String getPassword() {_		return this.password__	};return,the,password,for,the,account,at,the,mail,host;public,string,get,password,return,this,password
JavaMailSenderImpl -> public String getPassword();1412602628;Return the password for the account at the mail host.;public String getPassword() {_		return this.password__	};return,the,password,for,the,account,at,the,mail,host;public,string,get,password,return,this,password
JavaMailSenderImpl -> public String getPassword();1426003109;Return the password for the account at the mail host.;public String getPassword() {_		return this.password__	};return,the,password,for,the,account,at,the,mail,host;public,string,get,password,return,this,password
JavaMailSenderImpl -> public String getPassword();1467730834;Return the password for the account at the mail host.;public String getPassword() {_		return this.password__	};return,the,password,for,the,account,at,the,mail,host;public,string,get,password,return,this,password
JavaMailSenderImpl -> public void setProtocol(String protocol);1328020251;Set the mail protocol. Default is "smtp".;public void setProtocol(String protocol) {_		this.protocol = protocol__	};set,the,mail,protocol,default,is,smtp;public,void,set,protocol,string,protocol,this,protocol,protocol
JavaMailSenderImpl -> public void setProtocol(String protocol);1356735495;Set the mail protocol. Default is "smtp".;public void setProtocol(String protocol) {_		this.protocol = protocol__	};set,the,mail,protocol,default,is,smtp;public,void,set,protocol,string,protocol,this,protocol,protocol
JavaMailSenderImpl -> public void setProtocol(String protocol);1357119239;Set the mail protocol. Default is "smtp".;public void setProtocol(String protocol) {_		this.protocol = protocol__	};set,the,mail,protocol,default,is,smtp;public,void,set,protocol,string,protocol,this,protocol,protocol
JavaMailSenderImpl -> public void setProtocol(String protocol);1368482696;Set the mail protocol. Default is "smtp".;public void setProtocol(String protocol) {_		this.protocol = protocol__	};set,the,mail,protocol,default,is,smtp;public,void,set,protocol,string,protocol,this,protocol,protocol
JavaMailSenderImpl -> public void setProtocol(String protocol);1412377300;Set the mail protocol. Default is "smtp".;public void setProtocol(String protocol) {_		this.protocol = protocol__	};set,the,mail,protocol,default,is,smtp;public,void,set,protocol,string,protocol,this,protocol,protocol
JavaMailSenderImpl -> public void setProtocol(String protocol);1412602628;Set the mail protocol. Default is "smtp".;public void setProtocol(String protocol) {_		this.protocol = protocol__	};set,the,mail,protocol,default,is,smtp;public,void,set,protocol,string,protocol,this,protocol,protocol
JavaMailSenderImpl -> public void setProtocol(String protocol);1426003109;Set the mail protocol. Default is "smtp".;public void setProtocol(String protocol) {_		this.protocol = protocol__	};set,the,mail,protocol,default,is,smtp;public,void,set,protocol,string,protocol,this,protocol,protocol
JavaMailSenderImpl -> public void setProtocol(String protocol);1467730834;Set the mail protocol. Default is "smtp".;public void setProtocol(String protocol) {_		this.protocol = protocol__	};set,the,mail,protocol,default,is,smtp;public,void,set,protocol,string,protocol,this,protocol,protocol
JavaMailSenderImpl -> public void setProtocol(String protocol);1495868221;Set the mail protocol. Default is "smtp".;public void setProtocol(String protocol) {_		this.protocol = protocol__	};set,the,mail,protocol,default,is,smtp;public,void,set,protocol,string,protocol,this,protocol,protocol
JavaMailSenderImpl -> public void setProtocol(String protocol);1496259743;Set the mail protocol. Default is "smtp".;public void setProtocol(String protocol) {_		this.protocol = protocol__	};set,the,mail,protocol,default,is,smtp;public,void,set,protocol,string,protocol,this,protocol,protocol
JavaMailSenderImpl -> public void setProtocol(String protocol);1496837955;Set the mail protocol. Default is "smtp".;public void setProtocol(String protocol) {_		this.protocol = protocol__	};set,the,mail,protocol,default,is,smtp;public,void,set,protocol,string,protocol,this,protocol,protocol
JavaMailSenderImpl -> public void setProtocol(String protocol);1498780456;Set the mail protocol. Default is "smtp".;public void setProtocol(String protocol) {_		this.protocol = protocol__	};set,the,mail,protocol,default,is,smtp;public,void,set,protocol,string,protocol,this,protocol,protocol
JavaMailSenderImpl -> protected Transport connectTransport() throws MessagingException;1412602628;Obtain and connect a Transport from the underlying JavaMail Session,_passing in the specified host, port, username, and password._@return the connected Transport object_@throws MessagingException if the connect attempt failed_@since 4.1.2_@see #getTransport_@see #getHost()_@see #getPort()_@see #getUsername()_@see #getPassword();protected Transport connectTransport() throws MessagingException {_		String username = getUsername()__		String password = getPassword()__		if ("".equals(username)) {  _			username = null__			if ("".equals(password)) {  _				password = null__			}_		}__		Transport transport = getTransport(getSession())__		transport.connect(getHost(), getPort(), username, password)__		return transport__	};obtain,and,connect,a,transport,from,the,underlying,java,mail,session,passing,in,the,specified,host,port,username,and,password,return,the,connected,transport,object,throws,messaging,exception,if,the,connect,attempt,failed,since,4,1,2,see,get,transport,see,get,host,see,get,port,see,get,username,see,get,password;protected,transport,connect,transport,throws,messaging,exception,string,username,get,username,string,password,get,password,if,equals,username,username,null,if,equals,password,password,null,transport,transport,get,transport,get,session,transport,connect,get,host,get,port,username,password,return,transport
JavaMailSenderImpl -> protected Transport connectTransport() throws MessagingException;1426003109;Obtain and connect a Transport from the underlying JavaMail Session,_passing in the specified host, port, username, and password._@return the connected Transport object_@throws MessagingException if the connect attempt failed_@since 4.1.2_@see #getTransport_@see #getHost()_@see #getPort()_@see #getUsername()_@see #getPassword();protected Transport connectTransport() throws MessagingException {_		String username = getUsername()__		String password = getPassword()__		if ("".equals(username)) {  _			username = null__			if ("".equals(password)) {  _				password = null__			}_		}__		Transport transport = getTransport(getSession())__		transport.connect(getHost(), getPort(), username, password)__		return transport__	};obtain,and,connect,a,transport,from,the,underlying,java,mail,session,passing,in,the,specified,host,port,username,and,password,return,the,connected,transport,object,throws,messaging,exception,if,the,connect,attempt,failed,since,4,1,2,see,get,transport,see,get,host,see,get,port,see,get,username,see,get,password;protected,transport,connect,transport,throws,messaging,exception,string,username,get,username,string,password,get,password,if,equals,username,username,null,if,equals,password,password,null,transport,transport,get,transport,get,session,transport,connect,get,host,get,port,username,password,return,transport
JavaMailSenderImpl -> protected Transport connectTransport() throws MessagingException;1467730834;Obtain and connect a Transport from the underlying JavaMail Session,_passing in the specified host, port, username, and password._@return the connected Transport object_@throws MessagingException if the connect attempt failed_@since 4.1.2_@see #getTransport_@see #getHost()_@see #getPort()_@see #getUsername()_@see #getPassword();protected Transport connectTransport() throws MessagingException {_		String username = getUsername()__		String password = getPassword()__		if ("".equals(username)) {  _			username = null__			if ("".equals(password)) {  _				password = null__			}_		}__		Transport transport = getTransport(getSession())__		transport.connect(getHost(), getPort(), username, password)__		return transport__	};obtain,and,connect,a,transport,from,the,underlying,java,mail,session,passing,in,the,specified,host,port,username,and,password,return,the,connected,transport,object,throws,messaging,exception,if,the,connect,attempt,failed,since,4,1,2,see,get,transport,see,get,host,see,get,port,see,get,username,see,get,password;protected,transport,connect,transport,throws,messaging,exception,string,username,get,username,string,password,get,password,if,equals,username,username,null,if,equals,password,password,null,transport,transport,get,transport,get,session,transport,connect,get,host,get,port,username,password,return,transport
JavaMailSenderImpl -> protected Transport connectTransport() throws MessagingException;1495868221;Obtain and connect a Transport from the underlying JavaMail Session,_passing in the specified host, port, username, and password._@return the connected Transport object_@throws MessagingException if the connect attempt failed_@since 4.1.2_@see #getTransport_@see #getHost()_@see #getPort()_@see #getUsername()_@see #getPassword();protected Transport connectTransport() throws MessagingException {_		String username = getUsername()__		String password = getPassword()__		if ("".equals(username)) {  _			username = null__			if ("".equals(password)) {  _				password = null__			}_		}__		Transport transport = getTransport(getSession())__		transport.connect(getHost(), getPort(), username, password)__		return transport__	};obtain,and,connect,a,transport,from,the,underlying,java,mail,session,passing,in,the,specified,host,port,username,and,password,return,the,connected,transport,object,throws,messaging,exception,if,the,connect,attempt,failed,since,4,1,2,see,get,transport,see,get,host,see,get,port,see,get,username,see,get,password;protected,transport,connect,transport,throws,messaging,exception,string,username,get,username,string,password,get,password,if,equals,username,username,null,if,equals,password,password,null,transport,transport,get,transport,get,session,transport,connect,get,host,get,port,username,password,return,transport
JavaMailSenderImpl -> protected Transport connectTransport() throws MessagingException;1496259743;Obtain and connect a Transport from the underlying JavaMail Session,_passing in the specified host, port, username, and password._@return the connected Transport object_@throws MessagingException if the connect attempt failed_@since 4.1.2_@see #getTransport_@see #getHost()_@see #getPort()_@see #getUsername()_@see #getPassword();protected Transport connectTransport() throws MessagingException {_		String username = getUsername()__		String password = getPassword()__		if ("".equals(username)) {  _			username = null__			if ("".equals(password)) {  _				password = null__			}_		}__		Transport transport = getTransport(getSession())__		transport.connect(getHost(), getPort(), username, password)__		return transport__	};obtain,and,connect,a,transport,from,the,underlying,java,mail,session,passing,in,the,specified,host,port,username,and,password,return,the,connected,transport,object,throws,messaging,exception,if,the,connect,attempt,failed,since,4,1,2,see,get,transport,see,get,host,see,get,port,see,get,username,see,get,password;protected,transport,connect,transport,throws,messaging,exception,string,username,get,username,string,password,get,password,if,equals,username,username,null,if,equals,password,password,null,transport,transport,get,transport,get,session,transport,connect,get,host,get,port,username,password,return,transport
JavaMailSenderImpl -> protected Transport connectTransport() throws MessagingException;1496837955;Obtain and connect a Transport from the underlying JavaMail Session,_passing in the specified host, port, username, and password._@return the connected Transport object_@throws MessagingException if the connect attempt failed_@since 4.1.2_@see #getTransport_@see #getHost()_@see #getPort()_@see #getUsername()_@see #getPassword();protected Transport connectTransport() throws MessagingException {_		String username = getUsername()__		String password = getPassword()__		if ("".equals(username)) {  _			username = null__			if ("".equals(password)) {  _				password = null__			}_		}__		Transport transport = getTransport(getSession())__		transport.connect(getHost(), getPort(), username, password)__		return transport__	};obtain,and,connect,a,transport,from,the,underlying,java,mail,session,passing,in,the,specified,host,port,username,and,password,return,the,connected,transport,object,throws,messaging,exception,if,the,connect,attempt,failed,since,4,1,2,see,get,transport,see,get,host,see,get,port,see,get,username,see,get,password;protected,transport,connect,transport,throws,messaging,exception,string,username,get,username,string,password,get,password,if,equals,username,username,null,if,equals,password,password,null,transport,transport,get,transport,get,session,transport,connect,get,host,get,port,username,password,return,transport
JavaMailSenderImpl -> protected Transport connectTransport() throws MessagingException;1498780456;Obtain and connect a Transport from the underlying JavaMail Session,_passing in the specified host, port, username, and password._@return the connected Transport object_@throws MessagingException if the connect attempt failed_@since 4.1.2_@see #getTransport_@see #getHost()_@see #getPort()_@see #getUsername()_@see #getPassword();protected Transport connectTransport() throws MessagingException {_		String username = getUsername()__		String password = getPassword()__		if ("".equals(username)) {  _			username = null__			if ("".equals(password)) {  _				password = null__			}_		}__		Transport transport = getTransport(getSession())__		transport.connect(getHost(), getPort(), username, password)__		return transport__	};obtain,and,connect,a,transport,from,the,underlying,java,mail,session,passing,in,the,specified,host,port,username,and,password,return,the,connected,transport,object,throws,messaging,exception,if,the,connect,attempt,failed,since,4,1,2,see,get,transport,see,get,host,see,get,port,see,get,username,see,get,password;protected,transport,connect,transport,throws,messaging,exception,string,username,get,username,string,password,get,password,if,equals,username,username,null,if,equals,password,password,null,transport,transport,get,transport,get,session,transport,connect,get,host,get,port,username,password,return,transport
JavaMailSenderImpl -> protected Transport connectTransport() throws MessagingException;1500448076;Obtain and connect a Transport from the underlying JavaMail Session,_passing in the specified host, port, username, and password._@return the connected Transport object_@throws MessagingException if the connect attempt failed_@since 4.1.2_@see #getTransport_@see #getHost()_@see #getPort()_@see #getUsername()_@see #getPassword();protected Transport connectTransport() throws MessagingException {_		String username = getUsername()__		String password = getPassword()__		if ("".equals(username)) {  _			username = null__			if ("".equals(password)) {  _				password = null__			}_		}__		Transport transport = getTransport(getSession())__		transport.connect(getHost(), getPort(), username, password)__		return transport__	};obtain,and,connect,a,transport,from,the,underlying,java,mail,session,passing,in,the,specified,host,port,username,and,password,return,the,connected,transport,object,throws,messaging,exception,if,the,connect,attempt,failed,since,4,1,2,see,get,transport,see,get,host,see,get,port,see,get,username,see,get,password;protected,transport,connect,transport,throws,messaging,exception,string,username,get,username,string,password,get,password,if,equals,username,username,null,if,equals,password,password,null,transport,transport,get,transport,get,session,transport,connect,get,host,get,port,username,password,return,transport
JavaMailSenderImpl -> protected Transport connectTransport() throws MessagingException;1519295386;Obtain and connect a Transport from the underlying JavaMail Session,_passing in the specified host, port, username, and password._@return the connected Transport object_@throws MessagingException if the connect attempt failed_@since 4.1.2_@see #getTransport_@see #getHost()_@see #getPort()_@see #getUsername()_@see #getPassword();protected Transport connectTransport() throws MessagingException {_		String username = getUsername()__		String password = getPassword()__		if ("".equals(username)) {  _			username = null__			if ("".equals(password)) {  _				password = null__			}_		}__		Transport transport = getTransport(getSession())__		transport.connect(getHost(), getPort(), username, password)__		return transport__	};obtain,and,connect,a,transport,from,the,underlying,java,mail,session,passing,in,the,specified,host,port,username,and,password,return,the,connected,transport,object,throws,messaging,exception,if,the,connect,attempt,failed,since,4,1,2,see,get,transport,see,get,host,see,get,port,see,get,username,see,get,password;protected,transport,connect,transport,throws,messaging,exception,string,username,get,username,string,password,get,password,if,equals,username,username,null,if,equals,password,password,null,transport,transport,get,transport,get,session,transport,connect,get,host,get,port,username,password,return,transport
JavaMailSenderImpl -> protected Transport connectTransport() throws MessagingException;1530174524;Obtain and connect a Transport from the underlying JavaMail Session,_passing in the specified host, port, username, and password._@return the connected Transport object_@throws MessagingException if the connect attempt failed_@since 4.1.2_@see #getTransport_@see #getHost()_@see #getPort()_@see #getUsername()_@see #getPassword();protected Transport connectTransport() throws MessagingException {_		String username = getUsername()__		String password = getPassword()__		if ("".equals(username)) {  _			username = null__			if ("".equals(password)) {  _				password = null__			}_		}__		Transport transport = getTransport(getSession())__		transport.connect(getHost(), getPort(), username, password)__		return transport__	};obtain,and,connect,a,transport,from,the,underlying,java,mail,session,passing,in,the,specified,host,port,username,and,password,return,the,connected,transport,object,throws,messaging,exception,if,the,connect,attempt,failed,since,4,1,2,see,get,transport,see,get,host,see,get,port,see,get,username,see,get,password;protected,transport,connect,transport,throws,messaging,exception,string,username,get,username,string,password,get,password,if,equals,username,username,null,if,equals,password,password,null,transport,transport,get,transport,get,session,transport,connect,get,host,get,port,username,password,return,transport
JavaMailSenderImpl -> protected Transport connectTransport() throws MessagingException;1543862961;Obtain and connect a Transport from the underlying JavaMail Session,_passing in the specified host, port, username, and password._@return the connected Transport object_@throws MessagingException if the connect attempt failed_@since 4.1.2_@see #getTransport_@see #getHost()_@see #getPort()_@see #getUsername()_@see #getPassword();protected Transport connectTransport() throws MessagingException {_		String username = getUsername()__		String password = getPassword()__		if ("".equals(username)) {  _			username = null__			if ("".equals(password)) {  _				password = null__			}_		}__		Transport transport = getTransport(getSession())__		transport.connect(getHost(), getPort(), username, password)__		return transport__	};obtain,and,connect,a,transport,from,the,underlying,java,mail,session,passing,in,the,specified,host,port,username,and,password,return,the,connected,transport,object,throws,messaging,exception,if,the,connect,attempt,failed,since,4,1,2,see,get,transport,see,get,host,see,get,port,see,get,username,see,get,password;protected,transport,connect,transport,throws,messaging,exception,string,username,get,username,string,password,get,password,if,equals,username,username,null,if,equals,password,password,null,transport,transport,get,transport,get,session,transport,connect,get,host,get,port,username,password,return,transport
JavaMailSenderImpl -> public JavaMailSenderImpl();1328020251;Create a new instance of the <code>JavaMailSenderImpl</code> class._<p>Initializes the {@link #setDefaultFileTypeMap "defaultFileTypeMap"}_property with a default {@link ConfigurableMimeFileTypeMap}.;public JavaMailSenderImpl() {_		ConfigurableMimeFileTypeMap fileTypeMap = new ConfigurableMimeFileTypeMap()__		fileTypeMap.afterPropertiesSet()__		this.defaultFileTypeMap = fileTypeMap__	};create,a,new,instance,of,the,code,java,mail,sender,impl,code,class,p,initializes,the,link,set,default,file,type,map,default,file,type,map,property,with,a,default,link,configurable,mime,file,type,map;public,java,mail,sender,impl,configurable,mime,file,type,map,file,type,map,new,configurable,mime,file,type,map,file,type,map,after,properties,set,this,default,file,type,map,file,type,map
JavaMailSenderImpl -> public JavaMailSenderImpl();1356735495;Create a new instance of the {@code JavaMailSenderImpl} class._<p>Initializes the {@link #setDefaultFileTypeMap "defaultFileTypeMap"}_property with a default {@link ConfigurableMimeFileTypeMap}.;public JavaMailSenderImpl() {_		ConfigurableMimeFileTypeMap fileTypeMap = new ConfigurableMimeFileTypeMap()__		fileTypeMap.afterPropertiesSet()__		this.defaultFileTypeMap = fileTypeMap__	};create,a,new,instance,of,the,code,java,mail,sender,impl,class,p,initializes,the,link,set,default,file,type,map,default,file,type,map,property,with,a,default,link,configurable,mime,file,type,map;public,java,mail,sender,impl,configurable,mime,file,type,map,file,type,map,new,configurable,mime,file,type,map,file,type,map,after,properties,set,this,default,file,type,map,file,type,map
JavaMailSenderImpl -> public JavaMailSenderImpl();1357119239;Create a new instance of the {@code JavaMailSenderImpl} class._<p>Initializes the {@link #setDefaultFileTypeMap "defaultFileTypeMap"}_property with a default {@link ConfigurableMimeFileTypeMap}.;public JavaMailSenderImpl() {_		ConfigurableMimeFileTypeMap fileTypeMap = new ConfigurableMimeFileTypeMap()__		fileTypeMap.afterPropertiesSet()__		this.defaultFileTypeMap = fileTypeMap__	};create,a,new,instance,of,the,code,java,mail,sender,impl,class,p,initializes,the,link,set,default,file,type,map,default,file,type,map,property,with,a,default,link,configurable,mime,file,type,map;public,java,mail,sender,impl,configurable,mime,file,type,map,file,type,map,new,configurable,mime,file,type,map,file,type,map,after,properties,set,this,default,file,type,map,file,type,map
JavaMailSenderImpl -> public JavaMailSenderImpl();1368482696;Create a new instance of the {@code JavaMailSenderImpl} class._<p>Initializes the {@link #setDefaultFileTypeMap "defaultFileTypeMap"}_property with a default {@link ConfigurableMimeFileTypeMap}.;public JavaMailSenderImpl() {_		ConfigurableMimeFileTypeMap fileTypeMap = new ConfigurableMimeFileTypeMap()__		fileTypeMap.afterPropertiesSet()__		this.defaultFileTypeMap = fileTypeMap__	};create,a,new,instance,of,the,code,java,mail,sender,impl,class,p,initializes,the,link,set,default,file,type,map,default,file,type,map,property,with,a,default,link,configurable,mime,file,type,map;public,java,mail,sender,impl,configurable,mime,file,type,map,file,type,map,new,configurable,mime,file,type,map,file,type,map,after,properties,set,this,default,file,type,map,file,type,map
JavaMailSenderImpl -> public JavaMailSenderImpl();1412377300;Create a new instance of the {@code JavaMailSenderImpl} class._<p>Initializes the {@link #setDefaultFileTypeMap "defaultFileTypeMap"}_property with a default {@link ConfigurableMimeFileTypeMap}.;public JavaMailSenderImpl() {_		ConfigurableMimeFileTypeMap fileTypeMap = new ConfigurableMimeFileTypeMap()__		fileTypeMap.afterPropertiesSet()__		this.defaultFileTypeMap = fileTypeMap__	};create,a,new,instance,of,the,code,java,mail,sender,impl,class,p,initializes,the,link,set,default,file,type,map,default,file,type,map,property,with,a,default,link,configurable,mime,file,type,map;public,java,mail,sender,impl,configurable,mime,file,type,map,file,type,map,new,configurable,mime,file,type,map,file,type,map,after,properties,set,this,default,file,type,map,file,type,map
JavaMailSenderImpl -> public JavaMailSenderImpl();1412602628;Create a new instance of the {@code JavaMailSenderImpl} class._<p>Initializes the {@link #setDefaultFileTypeMap "defaultFileTypeMap"}_property with a default {@link ConfigurableMimeFileTypeMap}.;public JavaMailSenderImpl() {_		ConfigurableMimeFileTypeMap fileTypeMap = new ConfigurableMimeFileTypeMap()__		fileTypeMap.afterPropertiesSet()__		this.defaultFileTypeMap = fileTypeMap__	};create,a,new,instance,of,the,code,java,mail,sender,impl,class,p,initializes,the,link,set,default,file,type,map,default,file,type,map,property,with,a,default,link,configurable,mime,file,type,map;public,java,mail,sender,impl,configurable,mime,file,type,map,file,type,map,new,configurable,mime,file,type,map,file,type,map,after,properties,set,this,default,file,type,map,file,type,map
JavaMailSenderImpl -> public JavaMailSenderImpl();1426003109;Create a new instance of the {@code JavaMailSenderImpl} class._<p>Initializes the {@link #setDefaultFileTypeMap "defaultFileTypeMap"}_property with a default {@link ConfigurableMimeFileTypeMap}.;public JavaMailSenderImpl() {_		ConfigurableMimeFileTypeMap fileTypeMap = new ConfigurableMimeFileTypeMap()__		fileTypeMap.afterPropertiesSet()__		this.defaultFileTypeMap = fileTypeMap__	};create,a,new,instance,of,the,code,java,mail,sender,impl,class,p,initializes,the,link,set,default,file,type,map,default,file,type,map,property,with,a,default,link,configurable,mime,file,type,map;public,java,mail,sender,impl,configurable,mime,file,type,map,file,type,map,new,configurable,mime,file,type,map,file,type,map,after,properties,set,this,default,file,type,map,file,type,map
JavaMailSenderImpl -> public JavaMailSenderImpl();1467730834;Create a new instance of the {@code JavaMailSenderImpl} class._<p>Initializes the {@link #setDefaultFileTypeMap "defaultFileTypeMap"}_property with a default {@link ConfigurableMimeFileTypeMap}.;public JavaMailSenderImpl() {_		ConfigurableMimeFileTypeMap fileTypeMap = new ConfigurableMimeFileTypeMap()__		fileTypeMap.afterPropertiesSet()__		this.defaultFileTypeMap = fileTypeMap__	};create,a,new,instance,of,the,code,java,mail,sender,impl,class,p,initializes,the,link,set,default,file,type,map,default,file,type,map,property,with,a,default,link,configurable,mime,file,type,map;public,java,mail,sender,impl,configurable,mime,file,type,map,file,type,map,new,configurable,mime,file,type,map,file,type,map,after,properties,set,this,default,file,type,map,file,type,map
JavaMailSenderImpl -> public JavaMailSenderImpl();1495868221;Create a new instance of the {@code JavaMailSenderImpl} class._<p>Initializes the {@link #setDefaultFileTypeMap "defaultFileTypeMap"}_property with a default {@link ConfigurableMimeFileTypeMap}.;public JavaMailSenderImpl() {_		ConfigurableMimeFileTypeMap fileTypeMap = new ConfigurableMimeFileTypeMap()__		fileTypeMap.afterPropertiesSet()__		this.defaultFileTypeMap = fileTypeMap__	};create,a,new,instance,of,the,code,java,mail,sender,impl,class,p,initializes,the,link,set,default,file,type,map,default,file,type,map,property,with,a,default,link,configurable,mime,file,type,map;public,java,mail,sender,impl,configurable,mime,file,type,map,file,type,map,new,configurable,mime,file,type,map,file,type,map,after,properties,set,this,default,file,type,map,file,type,map
JavaMailSenderImpl -> public JavaMailSenderImpl();1496259743;Create a new instance of the {@code JavaMailSenderImpl} class._<p>Initializes the {@link #setDefaultFileTypeMap "defaultFileTypeMap"}_property with a default {@link ConfigurableMimeFileTypeMap}.;public JavaMailSenderImpl() {_		ConfigurableMimeFileTypeMap fileTypeMap = new ConfigurableMimeFileTypeMap()__		fileTypeMap.afterPropertiesSet()__		this.defaultFileTypeMap = fileTypeMap__	};create,a,new,instance,of,the,code,java,mail,sender,impl,class,p,initializes,the,link,set,default,file,type,map,default,file,type,map,property,with,a,default,link,configurable,mime,file,type,map;public,java,mail,sender,impl,configurable,mime,file,type,map,file,type,map,new,configurable,mime,file,type,map,file,type,map,after,properties,set,this,default,file,type,map,file,type,map
JavaMailSenderImpl -> public JavaMailSenderImpl();1496837955;Create a new instance of the {@code JavaMailSenderImpl} class._<p>Initializes the {@link #setDefaultFileTypeMap "defaultFileTypeMap"}_property with a default {@link ConfigurableMimeFileTypeMap}.;public JavaMailSenderImpl() {_		ConfigurableMimeFileTypeMap fileTypeMap = new ConfigurableMimeFileTypeMap()__		fileTypeMap.afterPropertiesSet()__		this.defaultFileTypeMap = fileTypeMap__	};create,a,new,instance,of,the,code,java,mail,sender,impl,class,p,initializes,the,link,set,default,file,type,map,default,file,type,map,property,with,a,default,link,configurable,mime,file,type,map;public,java,mail,sender,impl,configurable,mime,file,type,map,file,type,map,new,configurable,mime,file,type,map,file,type,map,after,properties,set,this,default,file,type,map,file,type,map
JavaMailSenderImpl -> public JavaMailSenderImpl();1498780456;Create a new instance of the {@code JavaMailSenderImpl} class._<p>Initializes the {@link #setDefaultFileTypeMap "defaultFileTypeMap"}_property with a default {@link ConfigurableMimeFileTypeMap}.;public JavaMailSenderImpl() {_		ConfigurableMimeFileTypeMap fileTypeMap = new ConfigurableMimeFileTypeMap()__		fileTypeMap.afterPropertiesSet()__		this.defaultFileTypeMap = fileTypeMap__	};create,a,new,instance,of,the,code,java,mail,sender,impl,class,p,initializes,the,link,set,default,file,type,map,default,file,type,map,property,with,a,default,link,configurable,mime,file,type,map;public,java,mail,sender,impl,configurable,mime,file,type,map,file,type,map,new,configurable,mime,file,type,map,file,type,map,after,properties,set,this,default,file,type,map,file,type,map
JavaMailSenderImpl -> public JavaMailSenderImpl();1500448076;Create a new instance of the {@code JavaMailSenderImpl} class._<p>Initializes the {@link #setDefaultFileTypeMap "defaultFileTypeMap"}_property with a default {@link ConfigurableMimeFileTypeMap}.;public JavaMailSenderImpl() {_		ConfigurableMimeFileTypeMap fileTypeMap = new ConfigurableMimeFileTypeMap()__		fileTypeMap.afterPropertiesSet()__		this.defaultFileTypeMap = fileTypeMap__	};create,a,new,instance,of,the,code,java,mail,sender,impl,class,p,initializes,the,link,set,default,file,type,map,default,file,type,map,property,with,a,default,link,configurable,mime,file,type,map;public,java,mail,sender,impl,configurable,mime,file,type,map,file,type,map,new,configurable,mime,file,type,map,file,type,map,after,properties,set,this,default,file,type,map,file,type,map
JavaMailSenderImpl -> public JavaMailSenderImpl();1519295386;Create a new instance of the {@code JavaMailSenderImpl} class._<p>Initializes the {@link #setDefaultFileTypeMap "defaultFileTypeMap"}_property with a default {@link ConfigurableMimeFileTypeMap}.;public JavaMailSenderImpl() {_		ConfigurableMimeFileTypeMap fileTypeMap = new ConfigurableMimeFileTypeMap()__		fileTypeMap.afterPropertiesSet()__		this.defaultFileTypeMap = fileTypeMap__	};create,a,new,instance,of,the,code,java,mail,sender,impl,class,p,initializes,the,link,set,default,file,type,map,default,file,type,map,property,with,a,default,link,configurable,mime,file,type,map;public,java,mail,sender,impl,configurable,mime,file,type,map,file,type,map,new,configurable,mime,file,type,map,file,type,map,after,properties,set,this,default,file,type,map,file,type,map
JavaMailSenderImpl -> public JavaMailSenderImpl();1530174524;Create a new instance of the {@code JavaMailSenderImpl} class._<p>Initializes the {@link #setDefaultFileTypeMap "defaultFileTypeMap"}_property with a default {@link ConfigurableMimeFileTypeMap}.;public JavaMailSenderImpl() {_		ConfigurableMimeFileTypeMap fileTypeMap = new ConfigurableMimeFileTypeMap()__		fileTypeMap.afterPropertiesSet()__		this.defaultFileTypeMap = fileTypeMap__	};create,a,new,instance,of,the,code,java,mail,sender,impl,class,p,initializes,the,link,set,default,file,type,map,default,file,type,map,property,with,a,default,link,configurable,mime,file,type,map;public,java,mail,sender,impl,configurable,mime,file,type,map,file,type,map,new,configurable,mime,file,type,map,file,type,map,after,properties,set,this,default,file,type,map,file,type,map
JavaMailSenderImpl -> public JavaMailSenderImpl();1543862961;Create a new instance of the {@code JavaMailSenderImpl} class._<p>Initializes the {@link #setDefaultFileTypeMap "defaultFileTypeMap"}_property with a default {@link ConfigurableMimeFileTypeMap}.;public JavaMailSenderImpl() {_		ConfigurableMimeFileTypeMap fileTypeMap = new ConfigurableMimeFileTypeMap()__		fileTypeMap.afterPropertiesSet()__		this.defaultFileTypeMap = fileTypeMap__	};create,a,new,instance,of,the,code,java,mail,sender,impl,class,p,initializes,the,link,set,default,file,type,map,default,file,type,map,property,with,a,default,link,configurable,mime,file,type,map;public,java,mail,sender,impl,configurable,mime,file,type,map,file,type,map,new,configurable,mime,file,type,map,file,type,map,after,properties,set,this,default,file,type,map,file,type,map
JavaMailSenderImpl -> public void setJavaMailProperties(Properties javaMailProperties);1328020251;Set JavaMail properties for the <code>Session</code>._<p>A new <code>Session</code> will be created with those properties._Use either this method or {@link #setSession}, but not both._<p>Non-default properties in this instance will override given_JavaMail properties.;public void setJavaMailProperties(Properties javaMailProperties) {_		this.javaMailProperties = javaMailProperties__		synchronized (this) {_			this.session = null__		}_	};set,java,mail,properties,for,the,code,session,code,p,a,new,code,session,code,will,be,created,with,those,properties,use,either,this,method,or,link,set,session,but,not,both,p,non,default,properties,in,this,instance,will,override,given,java,mail,properties;public,void,set,java,mail,properties,properties,java,mail,properties,this,java,mail,properties,java,mail,properties,synchronized,this,this,session,null
JavaMailSenderImpl -> public void setJavaMailProperties(Properties javaMailProperties);1356735495;Set JavaMail properties for the {@code Session}._<p>A new {@code Session} will be created with those properties._Use either this method or {@link #setSession}, but not both._<p>Non-default properties in this instance will override given_JavaMail properties.;public void setJavaMailProperties(Properties javaMailProperties) {_		this.javaMailProperties = javaMailProperties__		synchronized (this) {_			this.session = null__		}_	};set,java,mail,properties,for,the,code,session,p,a,new,code,session,will,be,created,with,those,properties,use,either,this,method,or,link,set,session,but,not,both,p,non,default,properties,in,this,instance,will,override,given,java,mail,properties;public,void,set,java,mail,properties,properties,java,mail,properties,this,java,mail,properties,java,mail,properties,synchronized,this,this,session,null
JavaMailSenderImpl -> public void setJavaMailProperties(Properties javaMailProperties);1357119239;Set JavaMail properties for the {@code Session}._<p>A new {@code Session} will be created with those properties._Use either this method or {@link #setSession}, but not both._<p>Non-default properties in this instance will override given_JavaMail properties.;public void setJavaMailProperties(Properties javaMailProperties) {_		this.javaMailProperties = javaMailProperties__		synchronized (this) {_			this.session = null__		}_	};set,java,mail,properties,for,the,code,session,p,a,new,code,session,will,be,created,with,those,properties,use,either,this,method,or,link,set,session,but,not,both,p,non,default,properties,in,this,instance,will,override,given,java,mail,properties;public,void,set,java,mail,properties,properties,java,mail,properties,this,java,mail,properties,java,mail,properties,synchronized,this,this,session,null
JavaMailSenderImpl -> public void setJavaMailProperties(Properties javaMailProperties);1368482696;Set JavaMail properties for the {@code Session}._<p>A new {@code Session} will be created with those properties._Use either this method or {@link #setSession}, but not both._<p>Non-default properties in this instance will override given_JavaMail properties.;public void setJavaMailProperties(Properties javaMailProperties) {_		this.javaMailProperties = javaMailProperties__		synchronized (this) {_			this.session = null__		}_	};set,java,mail,properties,for,the,code,session,p,a,new,code,session,will,be,created,with,those,properties,use,either,this,method,or,link,set,session,but,not,both,p,non,default,properties,in,this,instance,will,override,given,java,mail,properties;public,void,set,java,mail,properties,properties,java,mail,properties,this,java,mail,properties,java,mail,properties,synchronized,this,this,session,null
JavaMailSenderImpl -> public void setJavaMailProperties(Properties javaMailProperties);1412377300;Set JavaMail properties for the {@code Session}._<p>A new {@code Session} will be created with those properties._Use either this method or {@link #setSession}, but not both._<p>Non-default properties in this instance will override given_JavaMail properties.;public void setJavaMailProperties(Properties javaMailProperties) {_		this.javaMailProperties = javaMailProperties__		synchronized (this) {_			this.session = null__		}_	};set,java,mail,properties,for,the,code,session,p,a,new,code,session,will,be,created,with,those,properties,use,either,this,method,or,link,set,session,but,not,both,p,non,default,properties,in,this,instance,will,override,given,java,mail,properties;public,void,set,java,mail,properties,properties,java,mail,properties,this,java,mail,properties,java,mail,properties,synchronized,this,this,session,null
JavaMailSenderImpl -> public void setJavaMailProperties(Properties javaMailProperties);1412602628;Set JavaMail properties for the {@code Session}._<p>A new {@code Session} will be created with those properties._Use either this method or {@link #setSession}, but not both._<p>Non-default properties in this instance will override given_JavaMail properties.;public void setJavaMailProperties(Properties javaMailProperties) {_		this.javaMailProperties = javaMailProperties__		synchronized (this) {_			this.session = null__		}_	};set,java,mail,properties,for,the,code,session,p,a,new,code,session,will,be,created,with,those,properties,use,either,this,method,or,link,set,session,but,not,both,p,non,default,properties,in,this,instance,will,override,given,java,mail,properties;public,void,set,java,mail,properties,properties,java,mail,properties,this,java,mail,properties,java,mail,properties,synchronized,this,this,session,null
JavaMailSenderImpl -> public void setJavaMailProperties(Properties javaMailProperties);1426003109;Set JavaMail properties for the {@code Session}._<p>A new {@code Session} will be created with those properties._Use either this method or {@link #setSession}, but not both._<p>Non-default properties in this instance will override given_JavaMail properties.;public void setJavaMailProperties(Properties javaMailProperties) {_		this.javaMailProperties = javaMailProperties__		synchronized (this) {_			this.session = null__		}_	};set,java,mail,properties,for,the,code,session,p,a,new,code,session,will,be,created,with,those,properties,use,either,this,method,or,link,set,session,but,not,both,p,non,default,properties,in,this,instance,will,override,given,java,mail,properties;public,void,set,java,mail,properties,properties,java,mail,properties,this,java,mail,properties,java,mail,properties,synchronized,this,this,session,null
JavaMailSenderImpl -> public void setJavaMailProperties(Properties javaMailProperties);1467730834;Set JavaMail properties for the {@code Session}._<p>A new {@code Session} will be created with those properties._Use either this method or {@link #setSession}, but not both._<p>Non-default properties in this instance will override given_JavaMail properties.;public void setJavaMailProperties(Properties javaMailProperties) {_		this.javaMailProperties = javaMailProperties__		synchronized (this) {_			this.session = null__		}_	};set,java,mail,properties,for,the,code,session,p,a,new,code,session,will,be,created,with,those,properties,use,either,this,method,or,link,set,session,but,not,both,p,non,default,properties,in,this,instance,will,override,given,java,mail,properties;public,void,set,java,mail,properties,properties,java,mail,properties,this,java,mail,properties,java,mail,properties,synchronized,this,this,session,null
JavaMailSenderImpl -> public void setJavaMailProperties(Properties javaMailProperties);1495868221;Set JavaMail properties for the {@code Session}._<p>A new {@code Session} will be created with those properties._Use either this method or {@link #setSession}, but not both._<p>Non-default properties in this instance will override given_JavaMail properties.;public void setJavaMailProperties(Properties javaMailProperties) {_		this.javaMailProperties = javaMailProperties__		synchronized (this) {_			this.session = null__		}_	};set,java,mail,properties,for,the,code,session,p,a,new,code,session,will,be,created,with,those,properties,use,either,this,method,or,link,set,session,but,not,both,p,non,default,properties,in,this,instance,will,override,given,java,mail,properties;public,void,set,java,mail,properties,properties,java,mail,properties,this,java,mail,properties,java,mail,properties,synchronized,this,this,session,null
JavaMailSenderImpl -> public void setJavaMailProperties(Properties javaMailProperties);1496259743;Set JavaMail properties for the {@code Session}._<p>A new {@code Session} will be created with those properties._Use either this method or {@link #setSession}, but not both._<p>Non-default properties in this instance will override given_JavaMail properties.;public void setJavaMailProperties(Properties javaMailProperties) {_		this.javaMailProperties = javaMailProperties__		synchronized (this) {_			this.session = null__		}_	};set,java,mail,properties,for,the,code,session,p,a,new,code,session,will,be,created,with,those,properties,use,either,this,method,or,link,set,session,but,not,both,p,non,default,properties,in,this,instance,will,override,given,java,mail,properties;public,void,set,java,mail,properties,properties,java,mail,properties,this,java,mail,properties,java,mail,properties,synchronized,this,this,session,null
JavaMailSenderImpl -> public void setJavaMailProperties(Properties javaMailProperties);1496837955;Set JavaMail properties for the {@code Session}._<p>A new {@code Session} will be created with those properties._Use either this method or {@link #setSession}, but not both._<p>Non-default properties in this instance will override given_JavaMail properties.;public void setJavaMailProperties(Properties javaMailProperties) {_		this.javaMailProperties = javaMailProperties__		synchronized (this) {_			this.session = null__		}_	};set,java,mail,properties,for,the,code,session,p,a,new,code,session,will,be,created,with,those,properties,use,either,this,method,or,link,set,session,but,not,both,p,non,default,properties,in,this,instance,will,override,given,java,mail,properties;public,void,set,java,mail,properties,properties,java,mail,properties,this,java,mail,properties,java,mail,properties,synchronized,this,this,session,null
JavaMailSenderImpl -> public void setJavaMailProperties(Properties javaMailProperties);1498780456;Set JavaMail properties for the {@code Session}._<p>A new {@code Session} will be created with those properties._Use either this method or {@link #setSession}, but not both._<p>Non-default properties in this instance will override given_JavaMail properties.;public void setJavaMailProperties(Properties javaMailProperties) {_		this.javaMailProperties = javaMailProperties__		synchronized (this) {_			this.session = null__		}_	};set,java,mail,properties,for,the,code,session,p,a,new,code,session,will,be,created,with,those,properties,use,either,this,method,or,link,set,session,but,not,both,p,non,default,properties,in,this,instance,will,override,given,java,mail,properties;public,void,set,java,mail,properties,properties,java,mail,properties,this,java,mail,properties,java,mail,properties,synchronized,this,this,session,null
JavaMailSenderImpl -> public void setJavaMailProperties(Properties javaMailProperties);1500448076;Set JavaMail properties for the {@code Session}._<p>A new {@code Session} will be created with those properties._Use either this method or {@link #setSession}, but not both._<p>Non-default properties in this instance will override given_JavaMail properties.;public void setJavaMailProperties(Properties javaMailProperties) {_		this.javaMailProperties = javaMailProperties__		synchronized (this) {_			this.session = null__		}_	};set,java,mail,properties,for,the,code,session,p,a,new,code,session,will,be,created,with,those,properties,use,either,this,method,or,link,set,session,but,not,both,p,non,default,properties,in,this,instance,will,override,given,java,mail,properties;public,void,set,java,mail,properties,properties,java,mail,properties,this,java,mail,properties,java,mail,properties,synchronized,this,this,session,null
JavaMailSenderImpl -> public void setJavaMailProperties(Properties javaMailProperties);1519295386;Set JavaMail properties for the {@code Session}._<p>A new {@code Session} will be created with those properties._Use either this method or {@link #setSession}, but not both._<p>Non-default properties in this instance will override given_JavaMail properties.;public void setJavaMailProperties(Properties javaMailProperties) {_		this.javaMailProperties = javaMailProperties__		synchronized (this) {_			this.session = null__		}_	};set,java,mail,properties,for,the,code,session,p,a,new,code,session,will,be,created,with,those,properties,use,either,this,method,or,link,set,session,but,not,both,p,non,default,properties,in,this,instance,will,override,given,java,mail,properties;public,void,set,java,mail,properties,properties,java,mail,properties,this,java,mail,properties,java,mail,properties,synchronized,this,this,session,null
JavaMailSenderImpl -> public void setJavaMailProperties(Properties javaMailProperties);1530174524;Set JavaMail properties for the {@code Session}._<p>A new {@code Session} will be created with those properties._Use either this method or {@link #setSession}, but not both._<p>Non-default properties in this instance will override given_JavaMail properties.;public void setJavaMailProperties(Properties javaMailProperties) {_		this.javaMailProperties = javaMailProperties__		synchronized (this) {_			this.session = null__		}_	};set,java,mail,properties,for,the,code,session,p,a,new,code,session,will,be,created,with,those,properties,use,either,this,method,or,link,set,session,but,not,both,p,non,default,properties,in,this,instance,will,override,given,java,mail,properties;public,void,set,java,mail,properties,properties,java,mail,properties,this,java,mail,properties,java,mail,properties,synchronized,this,this,session,null
JavaMailSenderImpl -> public void setJavaMailProperties(Properties javaMailProperties);1543862961;Set JavaMail properties for the {@code Session}._<p>A new {@code Session} will be created with those properties._Use either this method or {@link #setSession}, but not both._<p>Non-default properties in this instance will override given_JavaMail properties.;public void setJavaMailProperties(Properties javaMailProperties) {_		this.javaMailProperties = javaMailProperties__		synchronized (this) {_			this.session = null__		}_	};set,java,mail,properties,for,the,code,session,p,a,new,code,session,will,be,created,with,those,properties,use,either,this,method,or,link,set,session,but,not,both,p,non,default,properties,in,this,instance,will,override,given,java,mail,properties;public,void,set,java,mail,properties,properties,java,mail,properties,this,java,mail,properties,java,mail,properties,synchronized,this,this,session,null
JavaMailSenderImpl -> public synchronized Session getSession();1328020251;Return the JavaMail <code>Session</code>,_lazily initializing it if hasn't been specified explicitly.;public synchronized Session getSession() {_		if (this.session == null) {_			this.session = Session.getInstance(this.javaMailProperties)__		}_		return this.session__	};return,the,java,mail,code,session,code,lazily,initializing,it,if,hasn,t,been,specified,explicitly;public,synchronized,session,get,session,if,this,session,null,this,session,session,get,instance,this,java,mail,properties,return,this,session
JavaMailSenderImpl -> public synchronized Session getSession();1356735495;Return the JavaMail {@code Session},_lazily initializing it if hasn't been specified explicitly.;public synchronized Session getSession() {_		if (this.session == null) {_			this.session = Session.getInstance(this.javaMailProperties)__		}_		return this.session__	};return,the,java,mail,code,session,lazily,initializing,it,if,hasn,t,been,specified,explicitly;public,synchronized,session,get,session,if,this,session,null,this,session,session,get,instance,this,java,mail,properties,return,this,session
JavaMailSenderImpl -> public synchronized Session getSession();1357119239;Return the JavaMail {@code Session},_lazily initializing it if hasn't been specified explicitly.;public synchronized Session getSession() {_		if (this.session == null) {_			this.session = Session.getInstance(this.javaMailProperties)__		}_		return this.session__	};return,the,java,mail,code,session,lazily,initializing,it,if,hasn,t,been,specified,explicitly;public,synchronized,session,get,session,if,this,session,null,this,session,session,get,instance,this,java,mail,properties,return,this,session
JavaMailSenderImpl -> public synchronized Session getSession();1368482696;Return the JavaMail {@code Session},_lazily initializing it if hasn't been specified explicitly.;public synchronized Session getSession() {_		if (this.session == null) {_			this.session = Session.getInstance(this.javaMailProperties)__		}_		return this.session__	};return,the,java,mail,code,session,lazily,initializing,it,if,hasn,t,been,specified,explicitly;public,synchronized,session,get,session,if,this,session,null,this,session,session,get,instance,this,java,mail,properties,return,this,session
JavaMailSenderImpl -> public synchronized Session getSession();1412377300;Return the JavaMail {@code Session},_lazily initializing it if hasn't been specified explicitly.;public synchronized Session getSession() {_		if (this.session == null) {_			this.session = Session.getInstance(this.javaMailProperties)__		}_		return this.session__	};return,the,java,mail,code,session,lazily,initializing,it,if,hasn,t,been,specified,explicitly;public,synchronized,session,get,session,if,this,session,null,this,session,session,get,instance,this,java,mail,properties,return,this,session
JavaMailSenderImpl -> public synchronized Session getSession();1412602628;Return the JavaMail {@code Session},_lazily initializing it if hasn't been specified explicitly.;public synchronized Session getSession() {_		if (this.session == null) {_			this.session = Session.getInstance(this.javaMailProperties)__		}_		return this.session__	};return,the,java,mail,code,session,lazily,initializing,it,if,hasn,t,been,specified,explicitly;public,synchronized,session,get,session,if,this,session,null,this,session,session,get,instance,this,java,mail,properties,return,this,session
JavaMailSenderImpl -> public synchronized Session getSession();1426003109;Return the JavaMail {@code Session},_lazily initializing it if hasn't been specified explicitly.;public synchronized Session getSession() {_		if (this.session == null) {_			this.session = Session.getInstance(this.javaMailProperties)__		}_		return this.session__	};return,the,java,mail,code,session,lazily,initializing,it,if,hasn,t,been,specified,explicitly;public,synchronized,session,get,session,if,this,session,null,this,session,session,get,instance,this,java,mail,properties,return,this,session
JavaMailSenderImpl -> public synchronized Session getSession();1467730834;Return the JavaMail {@code Session},_lazily initializing it if hasn't been specified explicitly.;public synchronized Session getSession() {_		if (this.session == null) {_			this.session = Session.getInstance(this.javaMailProperties)__		}_		return this.session__	};return,the,java,mail,code,session,lazily,initializing,it,if,hasn,t,been,specified,explicitly;public,synchronized,session,get,session,if,this,session,null,this,session,session,get,instance,this,java,mail,properties,return,this,session
JavaMailSenderImpl -> public synchronized Session getSession();1495868221;Return the JavaMail {@code Session},_lazily initializing it if hasn't been specified explicitly.;public synchronized Session getSession() {_		if (this.session == null) {_			this.session = Session.getInstance(this.javaMailProperties)__		}_		return this.session__	};return,the,java,mail,code,session,lazily,initializing,it,if,hasn,t,been,specified,explicitly;public,synchronized,session,get,session,if,this,session,null,this,session,session,get,instance,this,java,mail,properties,return,this,session
JavaMailSenderImpl -> public synchronized Session getSession();1496259743;Return the JavaMail {@code Session},_lazily initializing it if hasn't been specified explicitly.;public synchronized Session getSession() {_		if (this.session == null) {_			this.session = Session.getInstance(this.javaMailProperties)__		}_		return this.session__	};return,the,java,mail,code,session,lazily,initializing,it,if,hasn,t,been,specified,explicitly;public,synchronized,session,get,session,if,this,session,null,this,session,session,get,instance,this,java,mail,properties,return,this,session
JavaMailSenderImpl -> public synchronized Session getSession();1496837955;Return the JavaMail {@code Session},_lazily initializing it if hasn't been specified explicitly.;public synchronized Session getSession() {_		if (this.session == null) {_			this.session = Session.getInstance(this.javaMailProperties)__		}_		return this.session__	};return,the,java,mail,code,session,lazily,initializing,it,if,hasn,t,been,specified,explicitly;public,synchronized,session,get,session,if,this,session,null,this,session,session,get,instance,this,java,mail,properties,return,this,session
JavaMailSenderImpl -> public synchronized Session getSession();1498780456;Return the JavaMail {@code Session},_lazily initializing it if hasn't been specified explicitly.;public synchronized Session getSession() {_		if (this.session == null) {_			this.session = Session.getInstance(this.javaMailProperties)__		}_		return this.session__	};return,the,java,mail,code,session,lazily,initializing,it,if,hasn,t,been,specified,explicitly;public,synchronized,session,get,session,if,this,session,null,this,session,session,get,instance,this,java,mail,properties,return,this,session
JavaMailSenderImpl -> public synchronized Session getSession();1500448076;Return the JavaMail {@code Session},_lazily initializing it if hasn't been specified explicitly.;public synchronized Session getSession() {_		if (this.session == null) {_			this.session = Session.getInstance(this.javaMailProperties)__		}_		return this.session__	};return,the,java,mail,code,session,lazily,initializing,it,if,hasn,t,been,specified,explicitly;public,synchronized,session,get,session,if,this,session,null,this,session,session,get,instance,this,java,mail,properties,return,this,session
JavaMailSenderImpl -> public synchronized Session getSession();1519295386;Return the JavaMail {@code Session},_lazily initializing it if hasn't been specified explicitly.;public synchronized Session getSession() {_		if (this.session == null) {_			this.session = Session.getInstance(this.javaMailProperties)__		}_		return this.session__	};return,the,java,mail,code,session,lazily,initializing,it,if,hasn,t,been,specified,explicitly;public,synchronized,session,get,session,if,this,session,null,this,session,session,get,instance,this,java,mail,properties,return,this,session
JavaMailSenderImpl -> public synchronized Session getSession();1530174524;Return the JavaMail {@code Session},_lazily initializing it if hasn't been specified explicitly.;public synchronized Session getSession() {_		if (this.session == null) {_			this.session = Session.getInstance(this.javaMailProperties)__		}_		return this.session__	};return,the,java,mail,code,session,lazily,initializing,it,if,hasn,t,been,specified,explicitly;public,synchronized,session,get,session,if,this,session,null,this,session,session,get,instance,this,java,mail,properties,return,this,session
JavaMailSenderImpl -> public synchronized Session getSession();1543862961;Return the JavaMail {@code Session},_lazily initializing it if hasn't been specified explicitly.;public synchronized Session getSession() {_		if (this.session == null) {_			this.session = Session.getInstance(this.javaMailProperties)__		}_		return this.session__	};return,the,java,mail,code,session,lazily,initializing,it,if,hasn,t,been,specified,explicitly;public,synchronized,session,get,session,if,this,session,null,this,session,session,get,instance,this,java,mail,properties,return,this,session
JavaMailSenderImpl -> public void setPassword(String password);1328020251;Set the password for the account at the mail host, if any._<p>Note that the underlying JavaMail <code>Session</code> has to be_configured with the property <code>"mail.smtp.auth"</code> set to_<code>true</code>, else the specified password will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a <code>Session</code> to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setUsername;public void setPassword(String password) {_		this.password = password__	};set,the,password,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,code,has,to,be,configured,with,the,property,code,mail,smtp,auth,code,set,to,code,true,code,else,the,specified,password,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,code,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,username;public,void,set,password,string,password,this,password,password
JavaMailSenderImpl -> public void setPassword(String password);1356735495;Set the password for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified password will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setUsername;public void setPassword(String password) {_		this.password = password__	};set,the,password,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,password,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,username;public,void,set,password,string,password,this,password,password
JavaMailSenderImpl -> public void setPassword(String password);1357119239;Set the password for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified password will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setUsername;public void setPassword(String password) {_		this.password = password__	};set,the,password,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,password,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,username;public,void,set,password,string,password,this,password,password
JavaMailSenderImpl -> public void setPassword(String password);1368482696;Set the password for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified password will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setUsername;public void setPassword(String password) {_		this.password = password__	};set,the,password,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,password,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,username;public,void,set,password,string,password,this,password,password
JavaMailSenderImpl -> public void setPassword(String password);1412377300;Set the password for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified password will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setUsername;public void setPassword(String password) {_		this.password = password__	};set,the,password,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,password,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,username;public,void,set,password,string,password,this,password,password
JavaMailSenderImpl -> public void setPassword(String password);1412602628;Set the password for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified password will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setUsername;public void setPassword(String password) {_		this.password = password__	};set,the,password,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,password,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,username;public,void,set,password,string,password,this,password,password
JavaMailSenderImpl -> public void setPassword(String password);1426003109;Set the password for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified password will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setUsername;public void setPassword(String password) {_		this.password = password__	};set,the,password,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,password,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,username;public,void,set,password,string,password,this,password,password
JavaMailSenderImpl -> public void setPassword(String password);1467730834;Set the password for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified password will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setUsername;public void setPassword(String password) {_		this.password = password__	};set,the,password,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,password,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,username;public,void,set,password,string,password,this,password,password
JavaMailSenderImpl -> public void setPassword(String password);1495868221;Set the password for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified password will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setUsername;public void setPassword(String password) {_		this.password = password__	};set,the,password,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,password,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,username;public,void,set,password,string,password,this,password,password
JavaMailSenderImpl -> public void setPassword(String password);1496259743;Set the password for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified password will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setUsername;public void setPassword(String password) {_		this.password = password__	};set,the,password,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,password,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,username;public,void,set,password,string,password,this,password,password
JavaMailSenderImpl -> public void setPassword(String password);1496837955;Set the password for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified password will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setUsername;public void setPassword(String password) {_		this.password = password__	};set,the,password,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,password,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,username;public,void,set,password,string,password,this,password,password
JavaMailSenderImpl -> public void setPassword(String password);1498780456;Set the password for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified password will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setUsername;public void setPassword(String password) {_		this.password = password__	};set,the,password,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,password,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,username;public,void,set,password,string,password,this,password,password
JavaMailSenderImpl -> public void setUsername(String username);1328020251;Set the username for the account at the mail host, if any._<p>Note that the underlying JavaMail <code>Session</code> has to be_configured with the property <code>"mail.smtp.auth"</code> set to_<code>true</code>, else the specified username will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a <code>Session</code> to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setPassword;public void setUsername(String username) {_		this.username = username__	};set,the,username,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,code,has,to,be,configured,with,the,property,code,mail,smtp,auth,code,set,to,code,true,code,else,the,specified,username,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,code,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,password;public,void,set,username,string,username,this,username,username
JavaMailSenderImpl -> public void setUsername(String username);1356735495;Set the username for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified username will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setPassword;public void setUsername(String username) {_		this.username = username__	};set,the,username,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,username,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,password;public,void,set,username,string,username,this,username,username
JavaMailSenderImpl -> public void setUsername(String username);1357119239;Set the username for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified username will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setPassword;public void setUsername(String username) {_		this.username = username__	};set,the,username,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,username,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,password;public,void,set,username,string,username,this,username,username
JavaMailSenderImpl -> public void setUsername(String username);1368482696;Set the username for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified username will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setPassword;public void setUsername(String username) {_		this.username = username__	};set,the,username,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,username,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,password;public,void,set,username,string,username,this,username,username
JavaMailSenderImpl -> public void setUsername(String username);1412377300;Set the username for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified username will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setPassword;public void setUsername(String username) {_		this.username = username__	};set,the,username,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,username,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,password;public,void,set,username,string,username,this,username,username
JavaMailSenderImpl -> public void setUsername(String username);1412602628;Set the username for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified username will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setPassword;public void setUsername(String username) {_		this.username = username__	};set,the,username,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,username,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,password;public,void,set,username,string,username,this,username,username
JavaMailSenderImpl -> public void setUsername(String username);1426003109;Set the username for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified username will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setPassword;public void setUsername(String username) {_		this.username = username__	};set,the,username,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,username,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,password;public,void,set,username,string,username,this,username,username
JavaMailSenderImpl -> public void setUsername(String username);1467730834;Set the username for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified username will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setPassword;public void setUsername(String username) {_		this.username = username__	};set,the,username,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,username,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,password;public,void,set,username,string,username,this,username,username
JavaMailSenderImpl -> public void setUsername(String username);1495868221;Set the username for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified username will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setPassword;public void setUsername(String username) {_		this.username = username__	};set,the,username,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,username,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,password;public,void,set,username,string,username,this,username,username
JavaMailSenderImpl -> public void setUsername(String username);1496259743;Set the username for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified username will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setPassword;public void setUsername(String username) {_		this.username = username__	};set,the,username,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,username,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,password;public,void,set,username,string,username,this,username,username
JavaMailSenderImpl -> public void setUsername(String username);1496837955;Set the username for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified username will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setPassword;public void setUsername(String username) {_		this.username = username__	};set,the,username,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,username,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,password;public,void,set,username,string,username,this,username,username
JavaMailSenderImpl -> public void setUsername(String username);1498780456;Set the username for the account at the mail host, if any._<p>Note that the underlying JavaMail {@code Session} has to be_configured with the property {@code "mail.smtp.auth"} set to_{@code true}, else the specified username will not be sent to the_mail server by the JavaMail runtime. If you are not explicitly passing_in a {@code Session} to use, simply specify this setting via_{@link #setJavaMailProperties}._@see #setSession_@see #setPassword;public void setUsername(String username) {_		this.username = username__	};set,the,username,for,the,account,at,the,mail,host,if,any,p,note,that,the,underlying,java,mail,code,session,has,to,be,configured,with,the,property,code,mail,smtp,auth,set,to,code,true,else,the,specified,username,will,not,be,sent,to,the,mail,server,by,the,java,mail,runtime,if,you,are,not,explicitly,passing,in,a,code,session,to,use,simply,specify,this,setting,via,link,set,java,mail,properties,see,set,session,see,set,password;public,void,set,username,string,username,this,username,username
JavaMailSenderImpl -> @Nullable 	public String getPassword();1495868221;Return the password for the account at the mail host.;@Nullable_	public String getPassword() {_		return this.password__	};return,the,password,for,the,account,at,the,mail,host;nullable,public,string,get,password,return,this,password
JavaMailSenderImpl -> @Nullable 	public String getPassword();1496259743;Return the password for the account at the mail host.;@Nullable_	public String getPassword() {_		return this.password__	};return,the,password,for,the,account,at,the,mail,host;nullable,public,string,get,password,return,this,password
JavaMailSenderImpl -> @Nullable 	public String getPassword();1496837955;Return the password for the account at the mail host.;@Nullable_	public String getPassword() {_		return this.password__	};return,the,password,for,the,account,at,the,mail,host;nullable,public,string,get,password,return,this,password
JavaMailSenderImpl -> @Nullable 	public String getPassword();1498780456;Return the password for the account at the mail host.;@Nullable_	public String getPassword() {_		return this.password__	};return,the,password,for,the,account,at,the,mail,host;nullable,public,string,get,password,return,this,password
JavaMailSenderImpl -> @Nullable 	public String getPassword();1500448076;Return the password for the account at the mail host.;@Nullable_	public String getPassword() {_		return this.password__	};return,the,password,for,the,account,at,the,mail,host;nullable,public,string,get,password,return,this,password
JavaMailSenderImpl -> @Nullable 	public String getPassword();1519295386;Return the password for the account at the mail host.;@Nullable_	public String getPassword() {_		return this.password__	};return,the,password,for,the,account,at,the,mail,host;nullable,public,string,get,password,return,this,password
JavaMailSenderImpl -> @Nullable 	public String getPassword();1530174524;Return the password for the account at the mail host.;@Nullable_	public String getPassword() {_		return this.password__	};return,the,password,for,the,account,at,the,mail,host;nullable,public,string,get,password,return,this,password
JavaMailSenderImpl -> @Nullable 	public String getPassword();1543862961;Return the password for the account at the mail host.;@Nullable_	public String getPassword() {_		return this.password__	};return,the,password,for,the,account,at,the,mail,host;nullable,public,string,get,password,return,this,password
