commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected JCacheOperationSource getCacheOperationSource() {     return cacheOperationSource. }
true;public;1;3;/**  * Set the cache operation attribute source which is used to find cache  * attributes. This should usually be identical to the source reference  * set on the cache interceptor itself.  */ ;/**  * Set the cache operation attribute source which is used to find cache  * attributes. This should usually be identical to the source reference  * set on the cache interceptor itself.  */ public void setCacheOperationSource(JCacheOperationSource cacheOperationSource) {     this.cacheOperationSource = cacheOperationSource. }
true;public;1;3;/**  * Set the {@link org.springframework.aop.ClassFilter} to use for this pointcut.  * Default is {@link org.springframework.aop.ClassFilter#TRUE}.  */ ;/**  * Set the {@link org.springframework.aop.ClassFilter} to use for this pointcut.  * Default is {@link org.springframework.aop.ClassFilter#TRUE}.  */ public void setClassFilter(ClassFilter classFilter) {     this.pointcut.setClassFilter(classFilter). }
false;public;0;4;;@Override public Pointcut getPointcut() {     return this.pointcut. }
