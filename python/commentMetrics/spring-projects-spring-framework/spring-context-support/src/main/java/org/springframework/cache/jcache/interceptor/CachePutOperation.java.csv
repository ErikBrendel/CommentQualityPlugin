# id;timestamp;commentText;codeText;commentWords;codeWords
CachePutOperation -> public boolean isEarlyPut();1406128099;Specify if the cache should be updated before invoking the method. By default,_the cache is updated after the method invocation._@see javax.cache.annotation.CachePut#afterInvocation();public boolean isEarlyPut() {_		return !getCacheAnnotation().afterInvocation()__	};specify,if,the,cache,should,be,updated,before,invoking,the,method,by,default,the,cache,is,updated,after,the,method,invocation,see,javax,cache,annotation,cache,put,after,invocation;public,boolean,is,early,put,return,get,cache,annotation,after,invocation
CachePutOperation -> public boolean isEarlyPut();1413848647;Specify if the cache should be updated before invoking the method. By default,_the cache is updated after the method invocation._@see javax.cache.annotation.CachePut#afterInvocation();public boolean isEarlyPut() {_		return !getCacheAnnotation().afterInvocation()__	};specify,if,the,cache,should,be,updated,before,invoking,the,method,by,default,the,cache,is,updated,after,the,method,invocation,see,javax,cache,annotation,cache,put,after,invocation;public,boolean,is,early,put,return,get,cache,annotation,after,invocation
CachePutOperation -> public boolean isEarlyPut();1531589372;Specify if the cache should be updated before invoking the method. By default,_the cache is updated after the method invocation._@see javax.cache.annotation.CachePut#afterInvocation();public boolean isEarlyPut() {_		return !getCacheAnnotation().afterInvocation()__	};specify,if,the,cache,should,be,updated,before,invoking,the,method,by,default,the,cache,is,updated,after,the,method,invocation,see,javax,cache,annotation,cache,put,after,invocation;public,boolean,is,early,put,return,get,cache,annotation,after,invocation
CachePutOperation -> public CacheInvocationParameter getValueParameter(Object... values);1406128099;Return the {@link CacheInvocationParameter} for the parameter holding the value_to cache._<p>The method arguments must match the signature of the related method invocation_@param values the parameters value for a particular invocation_@return the {@link CacheInvocationParameter} instance for the value parameter;public CacheInvocationParameter getValueParameter(Object... values) {_		int parameterPosition = this.valueParameterDetail.getParameterPosition()__		if (parameterPosition >= values.length) {_			throw new IllegalStateException("Values mismatch, value parameter at position " +_					parameterPosition + " cannot be matched against " + values.length + " value(s)")__		}_		return this.valueParameterDetail.toCacheInvocationParameter(values[parameterPosition])__	};return,the,link,cache,invocation,parameter,for,the,parameter,holding,the,value,to,cache,p,the,method,arguments,must,match,the,signature,of,the,related,method,invocation,param,values,the,parameters,value,for,a,particular,invocation,return,the,link,cache,invocation,parameter,instance,for,the,value,parameter;public,cache,invocation,parameter,get,value,parameter,object,values,int,parameter,position,this,value,parameter,detail,get,parameter,position,if,parameter,position,values,length,throw,new,illegal,state,exception,values,mismatch,value,parameter,at,position,parameter,position,cannot,be,matched,against,values,length,value,s,return,this,value,parameter,detail,to,cache,invocation,parameter,values,parameter,position
CachePutOperation -> public CacheInvocationParameter getValueParameter(Object... values);1413848647;Return the {@link CacheInvocationParameter} for the parameter holding the value_to cache._<p>The method arguments must match the signature of the related method invocation_@param values the parameters value for a particular invocation_@return the {@link CacheInvocationParameter} instance for the value parameter;public CacheInvocationParameter getValueParameter(Object... values) {_		int parameterPosition = this.valueParameterDetail.getParameterPosition()__		if (parameterPosition >= values.length) {_			throw new IllegalStateException("Values mismatch, value parameter at position " +_					parameterPosition + " cannot be matched against " + values.length + " value(s)")__		}_		return this.valueParameterDetail.toCacheInvocationParameter(values[parameterPosition])__	};return,the,link,cache,invocation,parameter,for,the,parameter,holding,the,value,to,cache,p,the,method,arguments,must,match,the,signature,of,the,related,method,invocation,param,values,the,parameters,value,for,a,particular,invocation,return,the,link,cache,invocation,parameter,instance,for,the,value,parameter;public,cache,invocation,parameter,get,value,parameter,object,values,int,parameter,position,this,value,parameter,detail,get,parameter,position,if,parameter,position,values,length,throw,new,illegal,state,exception,values,mismatch,value,parameter,at,position,parameter,position,cannot,be,matched,against,values,length,value,s,return,this,value,parameter,detail,to,cache,invocation,parameter,values,parameter,position
CachePutOperation -> public CacheInvocationParameter getValueParameter(Object... values);1531589372;Return the {@link CacheInvocationParameter} for the parameter holding the value_to cache._<p>The method arguments must match the signature of the related method invocation_@param values the parameters value for a particular invocation_@return the {@link CacheInvocationParameter} instance for the value parameter;public CacheInvocationParameter getValueParameter(Object... values) {_		int parameterPosition = this.valueParameterDetail.getParameterPosition()__		if (parameterPosition >= values.length) {_			throw new IllegalStateException("Values mismatch, value parameter at position " +_					parameterPosition + " cannot be matched against " + values.length + " value(s)")__		}_		return this.valueParameterDetail.toCacheInvocationParameter(values[parameterPosition])__	};return,the,link,cache,invocation,parameter,for,the,parameter,holding,the,value,to,cache,p,the,method,arguments,must,match,the,signature,of,the,related,method,invocation,param,values,the,parameters,value,for,a,particular,invocation,return,the,link,cache,invocation,parameter,instance,for,the,value,parameter;public,cache,invocation,parameter,get,value,parameter,object,values,int,parameter,position,this,value,parameter,detail,get,parameter,position,if,parameter,position,values,length,throw,new,illegal,state,exception,values,mismatch,value,parameter,at,position,parameter,position,cannot,be,matched,against,values,length,value,s,return,this,value,parameter,detail,to,cache,invocation,parameter,values,parameter,position
