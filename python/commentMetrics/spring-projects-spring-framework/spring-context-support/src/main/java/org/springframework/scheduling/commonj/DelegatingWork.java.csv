# id;timestamp;commentText;codeText;commentWords;codeWords
DelegatingWork -> public final Runnable getDelegate();1328020251;Return the wrapped Runnable implementation.;public final Runnable getDelegate() {_		return this.delegate__	};return,the,wrapped,runnable,implementation;public,final,runnable,get,delegate,return,this,delegate
DelegatingWork -> public final Runnable getDelegate();1356735495;Return the wrapped Runnable implementation.;public final Runnable getDelegate() {_		return this.delegate__	};return,the,wrapped,runnable,implementation;public,final,runnable,get,delegate,return,this,delegate
DelegatingWork -> public final Runnable getDelegate();1357119239;Return the wrapped Runnable implementation.;public final Runnable getDelegate() {_		return this.delegate__	};return,the,wrapped,runnable,implementation;public,final,runnable,get,delegate,return,this,delegate
DelegatingWork -> public final Runnable getDelegate();1368482696;Return the wrapped Runnable implementation.;public final Runnable getDelegate() {_		return this.delegate__	};return,the,wrapped,runnable,implementation;public,final,runnable,get,delegate,return,this,delegate
DelegatingWork -> public final Runnable getDelegate();1533213510;Return the wrapped Runnable implementation.;public final Runnable getDelegate() {_		return this.delegate__	};return,the,wrapped,runnable,implementation;public,final,runnable,get,delegate,return,this,delegate
DelegatingWork -> @Override 	public boolean isDaemon();1356735495;This implementation delegates to_{@link org.springframework.scheduling.SchedulingAwareRunnable#isLongLived()},_if available.;@Override_	public boolean isDaemon() {_		return (this.delegate instanceof SchedulingAwareRunnable &&_				((SchedulingAwareRunnable) this.delegate).isLongLived())__	};this,implementation,delegates,to,link,org,springframework,scheduling,scheduling,aware,runnable,is,long,lived,if,available;override,public,boolean,is,daemon,return,this,delegate,instanceof,scheduling,aware,runnable,scheduling,aware,runnable,this,delegate,is,long,lived
DelegatingWork -> @Override 	public boolean isDaemon();1368482696;This implementation delegates to_{@link org.springframework.scheduling.SchedulingAwareRunnable#isLongLived()},_if available.;@Override_	public boolean isDaemon() {_		return (this.delegate instanceof SchedulingAwareRunnable &&_				((SchedulingAwareRunnable) this.delegate).isLongLived())__	};this,implementation,delegates,to,link,org,springframework,scheduling,scheduling,aware,runnable,is,long,lived,if,available;override,public,boolean,is,daemon,return,this,delegate,instanceof,scheduling,aware,runnable,scheduling,aware,runnable,this,delegate,is,long,lived
DelegatingWork -> @Override 	public boolean isDaemon();1533213510;This implementation delegates to_{@link org.springframework.scheduling.SchedulingAwareRunnable#isLongLived()},_if available.;@Override_	public boolean isDaemon() {_		return (this.delegate instanceof SchedulingAwareRunnable &&_				((SchedulingAwareRunnable) this.delegate).isLongLived())__	};this,implementation,delegates,to,link,org,springframework,scheduling,scheduling,aware,runnable,is,long,lived,if,available;override,public,boolean,is,daemon,return,this,delegate,instanceof,scheduling,aware,runnable,scheduling,aware,runnable,this,delegate,is,long,lived
DelegatingWork -> @Override 	public void release();1356735495;This implementation is empty, since we expect the Runnable_to terminate based on some specific shutdown signal.;@Override_	public void release() {_	};this,implementation,is,empty,since,we,expect,the,runnable,to,terminate,based,on,some,specific,shutdown,signal;override,public,void,release
DelegatingWork -> @Override 	public void release();1368482696;This implementation is empty, since we expect the Runnable_to terminate based on some specific shutdown signal.;@Override_	public void release() {_	};this,implementation,is,empty,since,we,expect,the,runnable,to,terminate,based,on,some,specific,shutdown,signal;override,public,void,release
DelegatingWork -> @Override 	public void release();1533213510;This implementation is empty, since we expect the Runnable_to terminate based on some specific shutdown signal.;@Override_	public void release() {_	};this,implementation,is,empty,since,we,expect,the,runnable,to,terminate,based,on,some,specific,shutdown,signal;override,public,void,release
DelegatingWork -> public void run();1328020251;Delegates execution to the underlying Runnable.;public void run() {_		this.delegate.run()__	};delegates,execution,to,the,underlying,runnable;public,void,run,this,delegate,run
DelegatingWork -> public void run();1357119239;Delegates execution to the underlying Runnable.;public void run() {_		this.delegate.run()__	};delegates,execution,to,the,underlying,runnable;public,void,run,this,delegate,run
DelegatingWork -> @Override 	public void run();1356735495;Delegates execution to the underlying Runnable.;@Override_	public void run() {_		this.delegate.run()__	};delegates,execution,to,the,underlying,runnable;override,public,void,run,this,delegate,run
DelegatingWork -> @Override 	public void run();1368482696;Delegates execution to the underlying Runnable.;@Override_	public void run() {_		this.delegate.run()__	};delegates,execution,to,the,underlying,runnable;override,public,void,run,this,delegate,run
DelegatingWork -> @Override 	public void run();1533213510;Delegates execution to the underlying Runnable.;@Override_	public void run() {_		this.delegate.run()__	};delegates,execution,to,the,underlying,runnable;override,public,void,run,this,delegate,run
DelegatingWork -> public boolean isDaemon();1328020251;This implementation delegates to_{@link org.springframework.scheduling.SchedulingAwareRunnable#isLongLived()},_if available.;public boolean isDaemon() {_		return (this.delegate instanceof SchedulingAwareRunnable &&_				((SchedulingAwareRunnable) this.delegate).isLongLived())__	};this,implementation,delegates,to,link,org,springframework,scheduling,scheduling,aware,runnable,is,long,lived,if,available;public,boolean,is,daemon,return,this,delegate,instanceof,scheduling,aware,runnable,scheduling,aware,runnable,this,delegate,is,long,lived
DelegatingWork -> public boolean isDaemon();1357119239;This implementation delegates to_{@link org.springframework.scheduling.SchedulingAwareRunnable#isLongLived()},_if available.;public boolean isDaemon() {_		return (this.delegate instanceof SchedulingAwareRunnable &&_				((SchedulingAwareRunnable) this.delegate).isLongLived())__	};this,implementation,delegates,to,link,org,springframework,scheduling,scheduling,aware,runnable,is,long,lived,if,available;public,boolean,is,daemon,return,this,delegate,instanceof,scheduling,aware,runnable,scheduling,aware,runnable,this,delegate,is,long,lived
DelegatingWork -> public DelegatingWork(Runnable delegate);1328020251;Create a new DelegatingWork._@param delegate the Runnable implementation to delegate to_(may be a SchedulingAwareRunnable for extended support)_@see org.springframework.scheduling.SchedulingAwareRunnable_@see #isDaemon();public DelegatingWork(Runnable delegate) {_		Assert.notNull(delegate, "Delegate must not be null")__		this.delegate = delegate__	};create,a,new,delegating,work,param,delegate,the,runnable,implementation,to,delegate,to,may,be,a,scheduling,aware,runnable,for,extended,support,see,org,springframework,scheduling,scheduling,aware,runnable,see,is,daemon;public,delegating,work,runnable,delegate,assert,not,null,delegate,delegate,must,not,be,null,this,delegate,delegate
DelegatingWork -> public DelegatingWork(Runnable delegate);1356735495;Create a new DelegatingWork._@param delegate the Runnable implementation to delegate to_(may be a SchedulingAwareRunnable for extended support)_@see org.springframework.scheduling.SchedulingAwareRunnable_@see #isDaemon();public DelegatingWork(Runnable delegate) {_		Assert.notNull(delegate, "Delegate must not be null")__		this.delegate = delegate__	};create,a,new,delegating,work,param,delegate,the,runnable,implementation,to,delegate,to,may,be,a,scheduling,aware,runnable,for,extended,support,see,org,springframework,scheduling,scheduling,aware,runnable,see,is,daemon;public,delegating,work,runnable,delegate,assert,not,null,delegate,delegate,must,not,be,null,this,delegate,delegate
DelegatingWork -> public DelegatingWork(Runnable delegate);1357119239;Create a new DelegatingWork._@param delegate the Runnable implementation to delegate to_(may be a SchedulingAwareRunnable for extended support)_@see org.springframework.scheduling.SchedulingAwareRunnable_@see #isDaemon();public DelegatingWork(Runnable delegate) {_		Assert.notNull(delegate, "Delegate must not be null")__		this.delegate = delegate__	};create,a,new,delegating,work,param,delegate,the,runnable,implementation,to,delegate,to,may,be,a,scheduling,aware,runnable,for,extended,support,see,org,springframework,scheduling,scheduling,aware,runnable,see,is,daemon;public,delegating,work,runnable,delegate,assert,not,null,delegate,delegate,must,not,be,null,this,delegate,delegate
DelegatingWork -> public DelegatingWork(Runnable delegate);1368482696;Create a new DelegatingWork._@param delegate the Runnable implementation to delegate to_(may be a SchedulingAwareRunnable for extended support)_@see org.springframework.scheduling.SchedulingAwareRunnable_@see #isDaemon();public DelegatingWork(Runnable delegate) {_		Assert.notNull(delegate, "Delegate must not be null")__		this.delegate = delegate__	};create,a,new,delegating,work,param,delegate,the,runnable,implementation,to,delegate,to,may,be,a,scheduling,aware,runnable,for,extended,support,see,org,springframework,scheduling,scheduling,aware,runnable,see,is,daemon;public,delegating,work,runnable,delegate,assert,not,null,delegate,delegate,must,not,be,null,this,delegate,delegate
DelegatingWork -> public DelegatingWork(Runnable delegate);1533213510;Create a new DelegatingWork._@param delegate the Runnable implementation to delegate to_(may be a SchedulingAwareRunnable for extended support)_@see org.springframework.scheduling.SchedulingAwareRunnable_@see #isDaemon();public DelegatingWork(Runnable delegate) {_		Assert.notNull(delegate, "Delegate must not be null")__		this.delegate = delegate__	};create,a,new,delegating,work,param,delegate,the,runnable,implementation,to,delegate,to,may,be,a,scheduling,aware,runnable,for,extended,support,see,org,springframework,scheduling,scheduling,aware,runnable,see,is,daemon;public,delegating,work,runnable,delegate,assert,not,null,delegate,delegate,must,not,be,null,this,delegate,delegate
DelegatingWork -> public void release();1328020251;This implementation is empty, since we expect the Runnable_to terminate based on some specific shutdown signal.;public void release() {_	};this,implementation,is,empty,since,we,expect,the,runnable,to,terminate,based,on,some,specific,shutdown,signal;public,void,release
DelegatingWork -> public void release();1357119239;This implementation is empty, since we expect the Runnable_to terminate based on some specific shutdown signal.;public void release() {_	};this,implementation,is,empty,since,we,expect,the,runnable,to,terminate,based,on,some,specific,shutdown,signal;public,void,release
