# id;timestamp;commentText;codeText;commentWords;codeWords
CaffeineCacheManager -> public CaffeineCacheManager(String... cacheNames);1450450053;Construct a static CaffeineCacheManager,_managing caches for the specified cache names only.;public CaffeineCacheManager(String... cacheNames) {_		setCacheNames(Arrays.asList(cacheNames))__	};construct,a,static,caffeine,cache,manager,managing,caches,for,the,specified,cache,names,only;public,caffeine,cache,manager,string,cache,names,set,cache,names,arrays,as,list,cache,names
CaffeineCacheManager -> public CaffeineCacheManager(String... cacheNames);1453996229;Construct a static CaffeineCacheManager,_managing caches for the specified cache names only.;public CaffeineCacheManager(String... cacheNames) {_		setCacheNames(Arrays.asList(cacheNames))__	};construct,a,static,caffeine,cache,manager,managing,caches,for,the,specified,cache,names,only;public,caffeine,cache,manager,string,cache,names,set,cache,names,arrays,as,list,cache,names
CaffeineCacheManager -> public CaffeineCacheManager(String... cacheNames);1467730834;Construct a static CaffeineCacheManager,_managing caches for the specified cache names only.;public CaffeineCacheManager(String... cacheNames) {_		setCacheNames(Arrays.asList(cacheNames))__	};construct,a,static,caffeine,cache,manager,managing,caches,for,the,specified,cache,names,only;public,caffeine,cache,manager,string,cache,names,set,cache,names,arrays,as,list,cache,names
CaffeineCacheManager -> public CaffeineCacheManager(String... cacheNames);1495868221;Construct a static CaffeineCacheManager,_managing caches for the specified cache names only.;public CaffeineCacheManager(String... cacheNames) {_		setCacheNames(Arrays.asList(cacheNames))__	};construct,a,static,caffeine,cache,manager,managing,caches,for,the,specified,cache,names,only;public,caffeine,cache,manager,string,cache,names,set,cache,names,arrays,as,list,cache,names
CaffeineCacheManager -> public CaffeineCacheManager(String... cacheNames);1497362807;Construct a static CaffeineCacheManager,_managing caches for the specified cache names only.;public CaffeineCacheManager(String... cacheNames) {_		setCacheNames(Arrays.asList(cacheNames))__	};construct,a,static,caffeine,cache,manager,managing,caches,for,the,specified,cache,names,only;public,caffeine,cache,manager,string,cache,names,set,cache,names,arrays,as,list,cache,names
CaffeineCacheManager -> public CaffeineCacheManager(String... cacheNames);1498780456;Construct a static CaffeineCacheManager,_managing caches for the specified cache names only.;public CaffeineCacheManager(String... cacheNames) {_		setCacheNames(Arrays.asList(cacheNames))__	};construct,a,static,caffeine,cache,manager,managing,caches,for,the,specified,cache,names,only;public,caffeine,cache,manager,string,cache,names,set,cache,names,arrays,as,list,cache,names
CaffeineCacheManager -> public CaffeineCacheManager(String... cacheNames);1502974979;Construct a static CaffeineCacheManager,_managing caches for the specified cache names only.;public CaffeineCacheManager(String... cacheNames) {_		setCacheNames(Arrays.asList(cacheNames))__	};construct,a,static,caffeine,cache,manager,managing,caches,for,the,specified,cache,names,only;public,caffeine,cache,manager,string,cache,names,set,cache,names,arrays,as,list,cache,names
CaffeineCacheManager -> public void setCaffeineSpec(CaffeineSpec caffeineSpec);1453996229;Set the {@link CaffeineSpec} to use for building each individual_{@link CaffeineCache} instance._@see #createNativeCaffeineCache_@see com.github.benmanes.caffeine.cache.Caffeine#from(CaffeineSpec);public void setCaffeineSpec(CaffeineSpec caffeineSpec) {_		doSetCaffeine(Caffeine.from(caffeineSpec))__	};set,the,link,caffeine,spec,to,use,for,building,each,individual,link,caffeine,cache,instance,see,create,native,caffeine,cache,see,com,github,benmanes,caffeine,cache,caffeine,from,caffeine,spec;public,void,set,caffeine,spec,caffeine,spec,caffeine,spec,do,set,caffeine,caffeine,from,caffeine,spec
CaffeineCacheManager -> public void setCaffeineSpec(CaffeineSpec caffeineSpec);1467730834;Set the {@link CaffeineSpec} to use for building each individual_{@link CaffeineCache} instance._@see #createNativeCaffeineCache_@see com.github.benmanes.caffeine.cache.Caffeine#from(CaffeineSpec);public void setCaffeineSpec(CaffeineSpec caffeineSpec) {_		doSetCaffeine(Caffeine.from(caffeineSpec))__	};set,the,link,caffeine,spec,to,use,for,building,each,individual,link,caffeine,cache,instance,see,create,native,caffeine,cache,see,com,github,benmanes,caffeine,cache,caffeine,from,caffeine,spec;public,void,set,caffeine,spec,caffeine,spec,caffeine,spec,do,set,caffeine,caffeine,from,caffeine,spec
CaffeineCacheManager -> public void setCaffeineSpec(CaffeineSpec caffeineSpec);1495868221;Set the {@link CaffeineSpec} to use for building each individual_{@link CaffeineCache} instance._@see #createNativeCaffeineCache_@see com.github.benmanes.caffeine.cache.Caffeine#from(CaffeineSpec);public void setCaffeineSpec(CaffeineSpec caffeineSpec) {_		doSetCaffeine(Caffeine.from(caffeineSpec))__	};set,the,link,caffeine,spec,to,use,for,building,each,individual,link,caffeine,cache,instance,see,create,native,caffeine,cache,see,com,github,benmanes,caffeine,cache,caffeine,from,caffeine,spec;public,void,set,caffeine,spec,caffeine,spec,caffeine,spec,do,set,caffeine,caffeine,from,caffeine,spec
CaffeineCacheManager -> public void setCaffeineSpec(CaffeineSpec caffeineSpec);1497362807;Set the {@link CaffeineSpec} to use for building each individual_{@link CaffeineCache} instance._@see #createNativeCaffeineCache_@see com.github.benmanes.caffeine.cache.Caffeine#from(CaffeineSpec);public void setCaffeineSpec(CaffeineSpec caffeineSpec) {_		doSetCaffeine(Caffeine.from(caffeineSpec))__	};set,the,link,caffeine,spec,to,use,for,building,each,individual,link,caffeine,cache,instance,see,create,native,caffeine,cache,see,com,github,benmanes,caffeine,cache,caffeine,from,caffeine,spec;public,void,set,caffeine,spec,caffeine,spec,caffeine,spec,do,set,caffeine,caffeine,from,caffeine,spec
CaffeineCacheManager -> public void setCaffeineSpec(CaffeineSpec caffeineSpec);1498780456;Set the {@link CaffeineSpec} to use for building each individual_{@link CaffeineCache} instance._@see #createNativeCaffeineCache_@see com.github.benmanes.caffeine.cache.Caffeine#from(CaffeineSpec);public void setCaffeineSpec(CaffeineSpec caffeineSpec) {_		doSetCaffeine(Caffeine.from(caffeineSpec))__	};set,the,link,caffeine,spec,to,use,for,building,each,individual,link,caffeine,cache,instance,see,create,native,caffeine,cache,see,com,github,benmanes,caffeine,cache,caffeine,from,caffeine,spec;public,void,set,caffeine,spec,caffeine,spec,caffeine,spec,do,set,caffeine,caffeine,from,caffeine,spec
CaffeineCacheManager -> public void setCaffeineSpec(CaffeineSpec caffeineSpec);1502974979;Set the {@link CaffeineSpec} to use for building each individual_{@link CaffeineCache} instance._@see #createNativeCaffeineCache_@see com.github.benmanes.caffeine.cache.Caffeine#from(CaffeineSpec);public void setCaffeineSpec(CaffeineSpec caffeineSpec) {_		doSetCaffeine(Caffeine.from(caffeineSpec))__	};set,the,link,caffeine,spec,to,use,for,building,each,individual,link,caffeine,cache,instance,see,create,native,caffeine,cache,see,com,github,benmanes,caffeine,cache,caffeine,from,caffeine,spec;public,void,set,caffeine,spec,caffeine,spec,caffeine,spec,do,set,caffeine,caffeine,from,caffeine,spec
CaffeineCacheManager -> protected Cache createCaffeineCache(String name);1450450053;Create a new CaffeineCache instance for the specified cache name._@param name the name of the cache_@return the Spring CaffeineCache adapter (or a decorator thereof);protected Cache createCaffeineCache(String name) {_		return new CaffeineCache(name, createNativeCaffeineCache(name), isAllowNullValues())__	};create,a,new,caffeine,cache,instance,for,the,specified,cache,name,param,name,the,name,of,the,cache,return,the,spring,caffeine,cache,adapter,or,a,decorator,thereof;protected,cache,create,caffeine,cache,string,name,return,new,caffeine,cache,name,create,native,caffeine,cache,name,is,allow,null,values
CaffeineCacheManager -> protected Cache createCaffeineCache(String name);1453996229;Create a new CaffeineCache instance for the specified cache name._@param name the name of the cache_@return the Spring CaffeineCache adapter (or a decorator thereof);protected Cache createCaffeineCache(String name) {_		return new CaffeineCache(name, createNativeCaffeineCache(name), isAllowNullValues())__	};create,a,new,caffeine,cache,instance,for,the,specified,cache,name,param,name,the,name,of,the,cache,return,the,spring,caffeine,cache,adapter,or,a,decorator,thereof;protected,cache,create,caffeine,cache,string,name,return,new,caffeine,cache,name,create,native,caffeine,cache,name,is,allow,null,values
CaffeineCacheManager -> protected Cache createCaffeineCache(String name);1467730834;Create a new CaffeineCache instance for the specified cache name._@param name the name of the cache_@return the Spring CaffeineCache adapter (or a decorator thereof);protected Cache createCaffeineCache(String name) {_		return new CaffeineCache(name, createNativeCaffeineCache(name), isAllowNullValues())__	};create,a,new,caffeine,cache,instance,for,the,specified,cache,name,param,name,the,name,of,the,cache,return,the,spring,caffeine,cache,adapter,or,a,decorator,thereof;protected,cache,create,caffeine,cache,string,name,return,new,caffeine,cache,name,create,native,caffeine,cache,name,is,allow,null,values
CaffeineCacheManager -> protected Cache createCaffeineCache(String name);1495868221;Create a new CaffeineCache instance for the specified cache name._@param name the name of the cache_@return the Spring CaffeineCache adapter (or a decorator thereof);protected Cache createCaffeineCache(String name) {_		return new CaffeineCache(name, createNativeCaffeineCache(name), isAllowNullValues())__	};create,a,new,caffeine,cache,instance,for,the,specified,cache,name,param,name,the,name,of,the,cache,return,the,spring,caffeine,cache,adapter,or,a,decorator,thereof;protected,cache,create,caffeine,cache,string,name,return,new,caffeine,cache,name,create,native,caffeine,cache,name,is,allow,null,values
CaffeineCacheManager -> protected Cache createCaffeineCache(String name);1497362807;Create a new CaffeineCache instance for the specified cache name._@param name the name of the cache_@return the Spring CaffeineCache adapter (or a decorator thereof);protected Cache createCaffeineCache(String name) {_		return new CaffeineCache(name, createNativeCaffeineCache(name), isAllowNullValues())__	};create,a,new,caffeine,cache,instance,for,the,specified,cache,name,param,name,the,name,of,the,cache,return,the,spring,caffeine,cache,adapter,or,a,decorator,thereof;protected,cache,create,caffeine,cache,string,name,return,new,caffeine,cache,name,create,native,caffeine,cache,name,is,allow,null,values
CaffeineCacheManager -> protected Cache createCaffeineCache(String name);1498780456;Create a new CaffeineCache instance for the specified cache name._@param name the name of the cache_@return the Spring CaffeineCache adapter (or a decorator thereof);protected Cache createCaffeineCache(String name) {_		return new CaffeineCache(name, createNativeCaffeineCache(name), isAllowNullValues())__	};create,a,new,caffeine,cache,instance,for,the,specified,cache,name,param,name,the,name,of,the,cache,return,the,spring,caffeine,cache,adapter,or,a,decorator,thereof;protected,cache,create,caffeine,cache,string,name,return,new,caffeine,cache,name,create,native,caffeine,cache,name,is,allow,null,values
CaffeineCacheManager -> protected Cache createCaffeineCache(String name);1502974979;Create a new CaffeineCache instance for the specified cache name._@param name the name of the cache_@return the Spring CaffeineCache adapter (or a decorator thereof);protected Cache createCaffeineCache(String name) {_		return new CaffeineCache(name, createNativeCaffeineCache(name), isAllowNullValues())__	};create,a,new,caffeine,cache,instance,for,the,specified,cache,name,param,name,the,name,of,the,cache,return,the,spring,caffeine,cache,adapter,or,a,decorator,thereof;protected,cache,create,caffeine,cache,string,name,return,new,caffeine,cache,name,create,native,caffeine,cache,name,is,allow,null,values
CaffeineCacheManager -> public void setCaffeine(Caffeine<Object, Object> caffeine);1453996229;Set the Caffeine to use for building each individual_{@link CaffeineCache} instance._@see #createNativeCaffeineCache_@see com.github.benmanes.caffeine.cache.Caffeine#build();public void setCaffeine(Caffeine<Object, Object> caffeine) {_		Assert.notNull(caffeine, "Caffeine must not be null")__		doSetCaffeine(caffeine)__	};set,the,caffeine,to,use,for,building,each,individual,link,caffeine,cache,instance,see,create,native,caffeine,cache,see,com,github,benmanes,caffeine,cache,caffeine,build;public,void,set,caffeine,caffeine,object,object,caffeine,assert,not,null,caffeine,caffeine,must,not,be,null,do,set,caffeine,caffeine
CaffeineCacheManager -> public void setCaffeine(Caffeine<Object, Object> caffeine);1467730834;Set the Caffeine to use for building each individual_{@link CaffeineCache} instance._@see #createNativeCaffeineCache_@see com.github.benmanes.caffeine.cache.Caffeine#build();public void setCaffeine(Caffeine<Object, Object> caffeine) {_		Assert.notNull(caffeine, "Caffeine must not be null")__		doSetCaffeine(caffeine)__	};set,the,caffeine,to,use,for,building,each,individual,link,caffeine,cache,instance,see,create,native,caffeine,cache,see,com,github,benmanes,caffeine,cache,caffeine,build;public,void,set,caffeine,caffeine,object,object,caffeine,assert,not,null,caffeine,caffeine,must,not,be,null,do,set,caffeine,caffeine
CaffeineCacheManager -> public void setCaffeine(Caffeine<Object, Object> caffeine);1495868221;Set the Caffeine to use for building each individual_{@link CaffeineCache} instance._@see #createNativeCaffeineCache_@see com.github.benmanes.caffeine.cache.Caffeine#build();public void setCaffeine(Caffeine<Object, Object> caffeine) {_		Assert.notNull(caffeine, "Caffeine must not be null")__		doSetCaffeine(caffeine)__	};set,the,caffeine,to,use,for,building,each,individual,link,caffeine,cache,instance,see,create,native,caffeine,cache,see,com,github,benmanes,caffeine,cache,caffeine,build;public,void,set,caffeine,caffeine,object,object,caffeine,assert,not,null,caffeine,caffeine,must,not,be,null,do,set,caffeine,caffeine
CaffeineCacheManager -> public void setCaffeine(Caffeine<Object, Object> caffeine);1497362807;Set the Caffeine to use for building each individual_{@link CaffeineCache} instance._@see #createNativeCaffeineCache_@see com.github.benmanes.caffeine.cache.Caffeine#build();public void setCaffeine(Caffeine<Object, Object> caffeine) {_		Assert.notNull(caffeine, "Caffeine must not be null")__		doSetCaffeine(caffeine)__	};set,the,caffeine,to,use,for,building,each,individual,link,caffeine,cache,instance,see,create,native,caffeine,cache,see,com,github,benmanes,caffeine,cache,caffeine,build;public,void,set,caffeine,caffeine,object,object,caffeine,assert,not,null,caffeine,caffeine,must,not,be,null,do,set,caffeine,caffeine
CaffeineCacheManager -> public void setCaffeine(Caffeine<Object, Object> caffeine);1498780456;Set the Caffeine to use for building each individual_{@link CaffeineCache} instance._@see #createNativeCaffeineCache_@see com.github.benmanes.caffeine.cache.Caffeine#build();public void setCaffeine(Caffeine<Object, Object> caffeine) {_		Assert.notNull(caffeine, "Caffeine must not be null")__		doSetCaffeine(caffeine)__	};set,the,caffeine,to,use,for,building,each,individual,link,caffeine,cache,instance,see,create,native,caffeine,cache,see,com,github,benmanes,caffeine,cache,caffeine,build;public,void,set,caffeine,caffeine,object,object,caffeine,assert,not,null,caffeine,caffeine,must,not,be,null,do,set,caffeine,caffeine
CaffeineCacheManager -> public void setCaffeine(Caffeine<Object, Object> caffeine);1502974979;Set the Caffeine to use for building each individual_{@link CaffeineCache} instance._@see #createNativeCaffeineCache_@see com.github.benmanes.caffeine.cache.Caffeine#build();public void setCaffeine(Caffeine<Object, Object> caffeine) {_		Assert.notNull(caffeine, "Caffeine must not be null")__		doSetCaffeine(caffeine)__	};set,the,caffeine,to,use,for,building,each,individual,link,caffeine,cache,instance,see,create,native,caffeine,cache,see,com,github,benmanes,caffeine,cache,caffeine,build;public,void,set,caffeine,caffeine,object,object,caffeine,assert,not,null,caffeine,caffeine,must,not,be,null,do,set,caffeine,caffeine
CaffeineCacheManager -> public void setCacheNames(Collection<String> cacheNames);1450450053;Specify the set of cache names for this CacheManager's 'static' mode._<p>The number of caches and their names will be fixed after a call to this method,_with no creation of further cache regions at runtime._<p>Calling this with a {@code null} collection argument resets the_mode to 'dynamic', allowing for further creation of caches again.;public void setCacheNames(Collection<String> cacheNames) {_		if (cacheNames != null) {_			for (String name : cacheNames) {_				this.cacheMap.put(name, createCaffeineCache(name))__			}_			this.dynamic = false__		}_		else {_			this.dynamic = true__		}_	};specify,the,set,of,cache,names,for,this,cache,manager,s,static,mode,p,the,number,of,caches,and,their,names,will,be,fixed,after,a,call,to,this,method,with,no,creation,of,further,cache,regions,at,runtime,p,calling,this,with,a,code,null,collection,argument,resets,the,mode,to,dynamic,allowing,for,further,creation,of,caches,again;public,void,set,cache,names,collection,string,cache,names,if,cache,names,null,for,string,name,cache,names,this,cache,map,put,name,create,caffeine,cache,name,this,dynamic,false,else,this,dynamic,true
CaffeineCacheManager -> public void setCacheNames(Collection<String> cacheNames);1453996229;Specify the set of cache names for this CacheManager's 'static' mode._<p>The number of caches and their names will be fixed after a call to this method,_with no creation of further cache regions at runtime._<p>Calling this with a {@code null} collection argument resets the_mode to 'dynamic', allowing for further creation of caches again.;public void setCacheNames(Collection<String> cacheNames) {_		if (cacheNames != null) {_			for (String name : cacheNames) {_				this.cacheMap.put(name, createCaffeineCache(name))__			}_			this.dynamic = false__		}_		else {_			this.dynamic = true__		}_	};specify,the,set,of,cache,names,for,this,cache,manager,s,static,mode,p,the,number,of,caches,and,their,names,will,be,fixed,after,a,call,to,this,method,with,no,creation,of,further,cache,regions,at,runtime,p,calling,this,with,a,code,null,collection,argument,resets,the,mode,to,dynamic,allowing,for,further,creation,of,caches,again;public,void,set,cache,names,collection,string,cache,names,if,cache,names,null,for,string,name,cache,names,this,cache,map,put,name,create,caffeine,cache,name,this,dynamic,false,else,this,dynamic,true
CaffeineCacheManager -> public void setCacheNames(Collection<String> cacheNames);1467730834;Specify the set of cache names for this CacheManager's 'static' mode._<p>The number of caches and their names will be fixed after a call to this method,_with no creation of further cache regions at runtime._<p>Calling this with a {@code null} collection argument resets the_mode to 'dynamic', allowing for further creation of caches again.;public void setCacheNames(Collection<String> cacheNames) {_		if (cacheNames != null) {_			for (String name : cacheNames) {_				this.cacheMap.put(name, createCaffeineCache(name))__			}_			this.dynamic = false__		}_		else {_			this.dynamic = true__		}_	};specify,the,set,of,cache,names,for,this,cache,manager,s,static,mode,p,the,number,of,caches,and,their,names,will,be,fixed,after,a,call,to,this,method,with,no,creation,of,further,cache,regions,at,runtime,p,calling,this,with,a,code,null,collection,argument,resets,the,mode,to,dynamic,allowing,for,further,creation,of,caches,again;public,void,set,cache,names,collection,string,cache,names,if,cache,names,null,for,string,name,cache,names,this,cache,map,put,name,create,caffeine,cache,name,this,dynamic,false,else,this,dynamic,true
CaffeineCacheManager -> public void setAllowNullValues(boolean allowNullValues);1450450053;Specify whether to accept and convert {@code null} values for all caches_in this cache manager._<p>Default is "true", despite Caffeine itself not supporting {@code null} values._An internal holder object will be used to store user-level {@code null}s.;public void setAllowNullValues(boolean allowNullValues) {_		if (this.allowNullValues != allowNullValues) {_			this.allowNullValues = allowNullValues__			refreshKnownCaches()__		}_	};specify,whether,to,accept,and,convert,code,null,values,for,all,caches,in,this,cache,manager,p,default,is,true,despite,caffeine,itself,not,supporting,code,null,values,an,internal,holder,object,will,be,used,to,store,user,level,code,null,s;public,void,set,allow,null,values,boolean,allow,null,values,if,this,allow,null,values,allow,null,values,this,allow,null,values,allow,null,values,refresh,known,caches
CaffeineCacheManager -> public void setAllowNullValues(boolean allowNullValues);1453996229;Specify whether to accept and convert {@code null} values for all caches_in this cache manager._<p>Default is "true", despite Caffeine itself not supporting {@code null} values._An internal holder object will be used to store user-level {@code null}s.;public void setAllowNullValues(boolean allowNullValues) {_		if (this.allowNullValues != allowNullValues) {_			this.allowNullValues = allowNullValues__			refreshKnownCaches()__		}_	};specify,whether,to,accept,and,convert,code,null,values,for,all,caches,in,this,cache,manager,p,default,is,true,despite,caffeine,itself,not,supporting,code,null,values,an,internal,holder,object,will,be,used,to,store,user,level,code,null,s;public,void,set,allow,null,values,boolean,allow,null,values,if,this,allow,null,values,allow,null,values,this,allow,null,values,allow,null,values,refresh,known,caches
CaffeineCacheManager -> public void setAllowNullValues(boolean allowNullValues);1467730834;Specify whether to accept and convert {@code null} values for all caches_in this cache manager._<p>Default is "true", despite Caffeine itself not supporting {@code null} values._An internal holder object will be used to store user-level {@code null}s.;public void setAllowNullValues(boolean allowNullValues) {_		if (this.allowNullValues != allowNullValues) {_			this.allowNullValues = allowNullValues__			refreshKnownCaches()__		}_	};specify,whether,to,accept,and,convert,code,null,values,for,all,caches,in,this,cache,manager,p,default,is,true,despite,caffeine,itself,not,supporting,code,null,values,an,internal,holder,object,will,be,used,to,store,user,level,code,null,s;public,void,set,allow,null,values,boolean,allow,null,values,if,this,allow,null,values,allow,null,values,this,allow,null,values,allow,null,values,refresh,known,caches
CaffeineCacheManager -> public void setAllowNullValues(boolean allowNullValues);1495868221;Specify whether to accept and convert {@code null} values for all caches_in this cache manager._<p>Default is "true", despite Caffeine itself not supporting {@code null} values._An internal holder object will be used to store user-level {@code null}s.;public void setAllowNullValues(boolean allowNullValues) {_		if (this.allowNullValues != allowNullValues) {_			this.allowNullValues = allowNullValues__			refreshKnownCaches()__		}_	};specify,whether,to,accept,and,convert,code,null,values,for,all,caches,in,this,cache,manager,p,default,is,true,despite,caffeine,itself,not,supporting,code,null,values,an,internal,holder,object,will,be,used,to,store,user,level,code,null,s;public,void,set,allow,null,values,boolean,allow,null,values,if,this,allow,null,values,allow,null,values,this,allow,null,values,allow,null,values,refresh,known,caches
CaffeineCacheManager -> public void setAllowNullValues(boolean allowNullValues);1497362807;Specify whether to accept and convert {@code null} values for all caches_in this cache manager._<p>Default is "true", despite Caffeine itself not supporting {@code null} values._An internal holder object will be used to store user-level {@code null}s.;public void setAllowNullValues(boolean allowNullValues) {_		if (this.allowNullValues != allowNullValues) {_			this.allowNullValues = allowNullValues__			refreshKnownCaches()__		}_	};specify,whether,to,accept,and,convert,code,null,values,for,all,caches,in,this,cache,manager,p,default,is,true,despite,caffeine,itself,not,supporting,code,null,values,an,internal,holder,object,will,be,used,to,store,user,level,code,null,s;public,void,set,allow,null,values,boolean,allow,null,values,if,this,allow,null,values,allow,null,values,this,allow,null,values,allow,null,values,refresh,known,caches
CaffeineCacheManager -> public void setAllowNullValues(boolean allowNullValues);1498780456;Specify whether to accept and convert {@code null} values for all caches_in this cache manager._<p>Default is "true", despite Caffeine itself not supporting {@code null} values._An internal holder object will be used to store user-level {@code null}s.;public void setAllowNullValues(boolean allowNullValues) {_		if (this.allowNullValues != allowNullValues) {_			this.allowNullValues = allowNullValues__			refreshKnownCaches()__		}_	};specify,whether,to,accept,and,convert,code,null,values,for,all,caches,in,this,cache,manager,p,default,is,true,despite,caffeine,itself,not,supporting,code,null,values,an,internal,holder,object,will,be,used,to,store,user,level,code,null,s;public,void,set,allow,null,values,boolean,allow,null,values,if,this,allow,null,values,allow,null,values,this,allow,null,values,allow,null,values,refresh,known,caches
CaffeineCacheManager -> public void setAllowNullValues(boolean allowNullValues);1502974979;Specify whether to accept and convert {@code null} values for all caches_in this cache manager._<p>Default is "true", despite Caffeine itself not supporting {@code null} values._An internal holder object will be used to store user-level {@code null}s.;public void setAllowNullValues(boolean allowNullValues) {_		if (this.allowNullValues != allowNullValues) {_			this.allowNullValues = allowNullValues__			refreshKnownCaches()__		}_	};specify,whether,to,accept,and,convert,code,null,values,for,all,caches,in,this,cache,manager,p,default,is,true,despite,caffeine,itself,not,supporting,code,null,values,an,internal,holder,object,will,be,used,to,store,user,level,code,null,s;public,void,set,allow,null,values,boolean,allow,null,values,if,this,allow,null,values,allow,null,values,this,allow,null,values,allow,null,values,refresh,known,caches
CaffeineCacheManager -> public void setCacheSpecification(String cacheSpecification);1453996229;Set the Caffeine cache specification String to use for building each_individual {@link CaffeineCache} instance. The given value needs to_comply with Caffeine's {@link CaffeineSpec} (see its javadoc)._@see #createNativeCaffeineCache_@see com.github.benmanes.caffeine.cache.Caffeine#from(String);public void setCacheSpecification(String cacheSpecification) {_		doSetCaffeine(Caffeine.from(cacheSpecification))__	};set,the,caffeine,cache,specification,string,to,use,for,building,each,individual,link,caffeine,cache,instance,the,given,value,needs,to,comply,with,caffeine,s,link,caffeine,spec,see,its,javadoc,see,create,native,caffeine,cache,see,com,github,benmanes,caffeine,cache,caffeine,from,string;public,void,set,cache,specification,string,cache,specification,do,set,caffeine,caffeine,from,cache,specification
CaffeineCacheManager -> public void setCacheSpecification(String cacheSpecification);1467730834;Set the Caffeine cache specification String to use for building each_individual {@link CaffeineCache} instance. The given value needs to_comply with Caffeine's {@link CaffeineSpec} (see its javadoc)._@see #createNativeCaffeineCache_@see com.github.benmanes.caffeine.cache.Caffeine#from(String);public void setCacheSpecification(String cacheSpecification) {_		doSetCaffeine(Caffeine.from(cacheSpecification))__	};set,the,caffeine,cache,specification,string,to,use,for,building,each,individual,link,caffeine,cache,instance,the,given,value,needs,to,comply,with,caffeine,s,link,caffeine,spec,see,its,javadoc,see,create,native,caffeine,cache,see,com,github,benmanes,caffeine,cache,caffeine,from,string;public,void,set,cache,specification,string,cache,specification,do,set,caffeine,caffeine,from,cache,specification
CaffeineCacheManager -> public void setCacheSpecification(String cacheSpecification);1495868221;Set the Caffeine cache specification String to use for building each_individual {@link CaffeineCache} instance. The given value needs to_comply with Caffeine's {@link CaffeineSpec} (see its javadoc)._@see #createNativeCaffeineCache_@see com.github.benmanes.caffeine.cache.Caffeine#from(String);public void setCacheSpecification(String cacheSpecification) {_		doSetCaffeine(Caffeine.from(cacheSpecification))__	};set,the,caffeine,cache,specification,string,to,use,for,building,each,individual,link,caffeine,cache,instance,the,given,value,needs,to,comply,with,caffeine,s,link,caffeine,spec,see,its,javadoc,see,create,native,caffeine,cache,see,com,github,benmanes,caffeine,cache,caffeine,from,string;public,void,set,cache,specification,string,cache,specification,do,set,caffeine,caffeine,from,cache,specification
CaffeineCacheManager -> public void setCacheSpecification(String cacheSpecification);1497362807;Set the Caffeine cache specification String to use for building each_individual {@link CaffeineCache} instance. The given value needs to_comply with Caffeine's {@link CaffeineSpec} (see its javadoc)._@see #createNativeCaffeineCache_@see com.github.benmanes.caffeine.cache.Caffeine#from(String);public void setCacheSpecification(String cacheSpecification) {_		doSetCaffeine(Caffeine.from(cacheSpecification))__	};set,the,caffeine,cache,specification,string,to,use,for,building,each,individual,link,caffeine,cache,instance,the,given,value,needs,to,comply,with,caffeine,s,link,caffeine,spec,see,its,javadoc,see,create,native,caffeine,cache,see,com,github,benmanes,caffeine,cache,caffeine,from,string;public,void,set,cache,specification,string,cache,specification,do,set,caffeine,caffeine,from,cache,specification
CaffeineCacheManager -> public void setCacheSpecification(String cacheSpecification);1498780456;Set the Caffeine cache specification String to use for building each_individual {@link CaffeineCache} instance. The given value needs to_comply with Caffeine's {@link CaffeineSpec} (see its javadoc)._@see #createNativeCaffeineCache_@see com.github.benmanes.caffeine.cache.Caffeine#from(String);public void setCacheSpecification(String cacheSpecification) {_		doSetCaffeine(Caffeine.from(cacheSpecification))__	};set,the,caffeine,cache,specification,string,to,use,for,building,each,individual,link,caffeine,cache,instance,the,given,value,needs,to,comply,with,caffeine,s,link,caffeine,spec,see,its,javadoc,see,create,native,caffeine,cache,see,com,github,benmanes,caffeine,cache,caffeine,from,string;public,void,set,cache,specification,string,cache,specification,do,set,caffeine,caffeine,from,cache,specification
CaffeineCacheManager -> public void setCacheSpecification(String cacheSpecification);1502974979;Set the Caffeine cache specification String to use for building each_individual {@link CaffeineCache} instance. The given value needs to_comply with Caffeine's {@link CaffeineSpec} (see its javadoc)._@see #createNativeCaffeineCache_@see com.github.benmanes.caffeine.cache.Caffeine#from(String);public void setCacheSpecification(String cacheSpecification) {_		doSetCaffeine(Caffeine.from(cacheSpecification))__	};set,the,caffeine,cache,specification,string,to,use,for,building,each,individual,link,caffeine,cache,instance,the,given,value,needs,to,comply,with,caffeine,s,link,caffeine,spec,see,its,javadoc,see,create,native,caffeine,cache,see,com,github,benmanes,caffeine,cache,caffeine,from,string;public,void,set,cache,specification,string,cache,specification,do,set,caffeine,caffeine,from,cache,specification
CaffeineCacheManager -> public boolean isAllowNullValues();1450450053;Return whether this cache manager accepts and converts {@code null} values_for all of its caches.;public boolean isAllowNullValues() {_		return this.allowNullValues__	};return,whether,this,cache,manager,accepts,and,converts,code,null,values,for,all,of,its,caches;public,boolean,is,allow,null,values,return,this,allow,null,values
CaffeineCacheManager -> public boolean isAllowNullValues();1453996229;Return whether this cache manager accepts and converts {@code null} values_for all of its caches.;public boolean isAllowNullValues() {_		return this.allowNullValues__	};return,whether,this,cache,manager,accepts,and,converts,code,null,values,for,all,of,its,caches;public,boolean,is,allow,null,values,return,this,allow,null,values
CaffeineCacheManager -> public boolean isAllowNullValues();1467730834;Return whether this cache manager accepts and converts {@code null} values_for all of its caches.;public boolean isAllowNullValues() {_		return this.allowNullValues__	};return,whether,this,cache,manager,accepts,and,converts,code,null,values,for,all,of,its,caches;public,boolean,is,allow,null,values,return,this,allow,null,values
CaffeineCacheManager -> public boolean isAllowNullValues();1495868221;Return whether this cache manager accepts and converts {@code null} values_for all of its caches.;public boolean isAllowNullValues() {_		return this.allowNullValues__	};return,whether,this,cache,manager,accepts,and,converts,code,null,values,for,all,of,its,caches;public,boolean,is,allow,null,values,return,this,allow,null,values
CaffeineCacheManager -> public boolean isAllowNullValues();1497362807;Return whether this cache manager accepts and converts {@code null} values_for all of its caches.;public boolean isAllowNullValues() {_		return this.allowNullValues__	};return,whether,this,cache,manager,accepts,and,converts,code,null,values,for,all,of,its,caches;public,boolean,is,allow,null,values,return,this,allow,null,values
CaffeineCacheManager -> public boolean isAllowNullValues();1498780456;Return whether this cache manager accepts and converts {@code null} values_for all of its caches.;public boolean isAllowNullValues() {_		return this.allowNullValues__	};return,whether,this,cache,manager,accepts,and,converts,code,null,values,for,all,of,its,caches;public,boolean,is,allow,null,values,return,this,allow,null,values
CaffeineCacheManager -> public boolean isAllowNullValues();1502974979;Return whether this cache manager accepts and converts {@code null} values_for all of its caches.;public boolean isAllowNullValues() {_		return this.allowNullValues__	};return,whether,this,cache,manager,accepts,and,converts,code,null,values,for,all,of,its,caches;public,boolean,is,allow,null,values,return,this,allow,null,values
CaffeineCacheManager -> private void refreshKnownCaches();1450450053;Create the known caches again with the current state of this manager.;private void refreshKnownCaches() {_		for (Map.Entry<String, Cache> entry : this.cacheMap.entrySet()) {_			entry.setValue(createCaffeineCache(entry.getKey()))__		}_	};create,the,known,caches,again,with,the,current,state,of,this,manager;private,void,refresh,known,caches,for,map,entry,string,cache,entry,this,cache,map,entry,set,entry,set,value,create,caffeine,cache,entry,get,key
CaffeineCacheManager -> private void refreshKnownCaches();1453996229;Create the known caches again with the current state of this manager.;private void refreshKnownCaches() {_		for (Map.Entry<String, Cache> entry : this.cacheMap.entrySet()) {_			entry.setValue(createCaffeineCache(entry.getKey()))__		}_	};create,the,known,caches,again,with,the,current,state,of,this,manager;private,void,refresh,known,caches,for,map,entry,string,cache,entry,this,cache,map,entry,set,entry,set,value,create,caffeine,cache,entry,get,key
CaffeineCacheManager -> private void refreshKnownCaches();1467730834;Create the known caches again with the current state of this manager.;private void refreshKnownCaches() {_		for (Map.Entry<String, Cache> entry : this.cacheMap.entrySet()) {_			entry.setValue(createCaffeineCache(entry.getKey()))__		}_	};create,the,known,caches,again,with,the,current,state,of,this,manager;private,void,refresh,known,caches,for,map,entry,string,cache,entry,this,cache,map,entry,set,entry,set,value,create,caffeine,cache,entry,get,key
CaffeineCacheManager -> private void refreshKnownCaches();1495868221;Create the known caches again with the current state of this manager.;private void refreshKnownCaches() {_		for (Map.Entry<String, Cache> entry : this.cacheMap.entrySet()) {_			entry.setValue(createCaffeineCache(entry.getKey()))__		}_	};create,the,known,caches,again,with,the,current,state,of,this,manager;private,void,refresh,known,caches,for,map,entry,string,cache,entry,this,cache,map,entry,set,entry,set,value,create,caffeine,cache,entry,get,key
CaffeineCacheManager -> private void refreshKnownCaches();1497362807;Create the known caches again with the current state of this manager.;private void refreshKnownCaches() {_		for (Map.Entry<String, Cache> entry : this.cacheMap.entrySet()) {_			entry.setValue(createCaffeineCache(entry.getKey()))__		}_	};create,the,known,caches,again,with,the,current,state,of,this,manager;private,void,refresh,known,caches,for,map,entry,string,cache,entry,this,cache,map,entry,set,entry,set,value,create,caffeine,cache,entry,get,key
CaffeineCacheManager -> private void refreshKnownCaches();1498780456;Create the known caches again with the current state of this manager.;private void refreshKnownCaches() {_		for (Map.Entry<String, Cache> entry : this.cacheMap.entrySet()) {_			entry.setValue(createCaffeineCache(entry.getKey()))__		}_	};create,the,known,caches,again,with,the,current,state,of,this,manager;private,void,refresh,known,caches,for,map,entry,string,cache,entry,this,cache,map,entry,set,entry,set,value,create,caffeine,cache,entry,get,key
CaffeineCacheManager -> private void refreshKnownCaches();1502974979;Create the known caches again with the current state of this manager.;private void refreshKnownCaches() {_		for (Map.Entry<String, Cache> entry : this.cacheMap.entrySet()) {_			entry.setValue(createCaffeineCache(entry.getKey()))__		}_	};create,the,known,caches,again,with,the,current,state,of,this,manager;private,void,refresh,known,caches,for,map,entry,string,cache,entry,this,cache,map,entry,set,entry,set,value,create,caffeine,cache,entry,get,key
CaffeineCacheManager -> protected com.github.benmanes.caffeine.cache.Cache<Object, Object> createNativeCaffeineCache(String name);1450450053;Create a native Caffeine Cache instance for the specified cache name._@param name the name of the cache_@return the native Caffeine Cache instance;protected com.github.benmanes.caffeine.cache.Cache<Object, Object> createNativeCaffeineCache(String name) {_		if (this.cacheLoader != null) {_			return this.cacheBuilder.build(this.cacheLoader)__		}_		else {_			return this.cacheBuilder.build()__		}_	};create,a,native,caffeine,cache,instance,for,the,specified,cache,name,param,name,the,name,of,the,cache,return,the,native,caffeine,cache,instance;protected,com,github,benmanes,caffeine,cache,cache,object,object,create,native,caffeine,cache,string,name,if,this,cache,loader,null,return,this,cache,builder,build,this,cache,loader,else,return,this,cache,builder,build
CaffeineCacheManager -> protected com.github.benmanes.caffeine.cache.Cache<Object, Object> createNativeCaffeineCache(String name);1453996229;Create a native Caffeine Cache instance for the specified cache name._@param name the name of the cache_@return the native Caffeine Cache instance;protected com.github.benmanes.caffeine.cache.Cache<Object, Object> createNativeCaffeineCache(String name) {_		if (this.cacheLoader != null) {_			return this.cacheBuilder.build(this.cacheLoader)__		}_		else {_			return this.cacheBuilder.build()__		}_	};create,a,native,caffeine,cache,instance,for,the,specified,cache,name,param,name,the,name,of,the,cache,return,the,native,caffeine,cache,instance;protected,com,github,benmanes,caffeine,cache,cache,object,object,create,native,caffeine,cache,string,name,if,this,cache,loader,null,return,this,cache,builder,build,this,cache,loader,else,return,this,cache,builder,build
CaffeineCacheManager -> protected com.github.benmanes.caffeine.cache.Cache<Object, Object> createNativeCaffeineCache(String name);1467730834;Create a native Caffeine Cache instance for the specified cache name._@param name the name of the cache_@return the native Caffeine Cache instance;protected com.github.benmanes.caffeine.cache.Cache<Object, Object> createNativeCaffeineCache(String name) {_		if (this.cacheLoader != null) {_			return this.cacheBuilder.build(this.cacheLoader)__		}_		else {_			return this.cacheBuilder.build()__		}_	};create,a,native,caffeine,cache,instance,for,the,specified,cache,name,param,name,the,name,of,the,cache,return,the,native,caffeine,cache,instance;protected,com,github,benmanes,caffeine,cache,cache,object,object,create,native,caffeine,cache,string,name,if,this,cache,loader,null,return,this,cache,builder,build,this,cache,loader,else,return,this,cache,builder,build
CaffeineCacheManager -> protected com.github.benmanes.caffeine.cache.Cache<Object, Object> createNativeCaffeineCache(String name);1495868221;Create a native Caffeine Cache instance for the specified cache name._@param name the name of the cache_@return the native Caffeine Cache instance;protected com.github.benmanes.caffeine.cache.Cache<Object, Object> createNativeCaffeineCache(String name) {_		if (this.cacheLoader != null) {_			return this.cacheBuilder.build(this.cacheLoader)__		}_		else {_			return this.cacheBuilder.build()__		}_	};create,a,native,caffeine,cache,instance,for,the,specified,cache,name,param,name,the,name,of,the,cache,return,the,native,caffeine,cache,instance;protected,com,github,benmanes,caffeine,cache,cache,object,object,create,native,caffeine,cache,string,name,if,this,cache,loader,null,return,this,cache,builder,build,this,cache,loader,else,return,this,cache,builder,build
CaffeineCacheManager -> protected com.github.benmanes.caffeine.cache.Cache<Object, Object> createNativeCaffeineCache(String name);1497362807;Create a native Caffeine Cache instance for the specified cache name._@param name the name of the cache_@return the native Caffeine Cache instance;protected com.github.benmanes.caffeine.cache.Cache<Object, Object> createNativeCaffeineCache(String name) {_		if (this.cacheLoader != null) {_			return this.cacheBuilder.build(this.cacheLoader)__		}_		else {_			return this.cacheBuilder.build()__		}_	};create,a,native,caffeine,cache,instance,for,the,specified,cache,name,param,name,the,name,of,the,cache,return,the,native,caffeine,cache,instance;protected,com,github,benmanes,caffeine,cache,cache,object,object,create,native,caffeine,cache,string,name,if,this,cache,loader,null,return,this,cache,builder,build,this,cache,loader,else,return,this,cache,builder,build
CaffeineCacheManager -> protected com.github.benmanes.caffeine.cache.Cache<Object, Object> createNativeCaffeineCache(String name);1498780456;Create a native Caffeine Cache instance for the specified cache name._@param name the name of the cache_@return the native Caffeine Cache instance;protected com.github.benmanes.caffeine.cache.Cache<Object, Object> createNativeCaffeineCache(String name) {_		if (this.cacheLoader != null) {_			return this.cacheBuilder.build(this.cacheLoader)__		}_		else {_			return this.cacheBuilder.build()__		}_	};create,a,native,caffeine,cache,instance,for,the,specified,cache,name,param,name,the,name,of,the,cache,return,the,native,caffeine,cache,instance;protected,com,github,benmanes,caffeine,cache,cache,object,object,create,native,caffeine,cache,string,name,if,this,cache,loader,null,return,this,cache,builder,build,this,cache,loader,else,return,this,cache,builder,build
CaffeineCacheManager -> protected com.github.benmanes.caffeine.cache.Cache<Object, Object> createNativeCaffeineCache(String name);1502974979;Create a native Caffeine Cache instance for the specified cache name._@param name the name of the cache_@return the native Caffeine Cache instance;protected com.github.benmanes.caffeine.cache.Cache<Object, Object> createNativeCaffeineCache(String name) {_		if (this.cacheLoader != null) {_			return this.cacheBuilder.build(this.cacheLoader)__		}_		else {_			return this.cacheBuilder.build()__		}_	};create,a,native,caffeine,cache,instance,for,the,specified,cache,name,param,name,the,name,of,the,cache,return,the,native,caffeine,cache,instance;protected,com,github,benmanes,caffeine,cache,cache,object,object,create,native,caffeine,cache,string,name,if,this,cache,loader,null,return,this,cache,builder,build,this,cache,loader,else,return,this,cache,builder,build
CaffeineCacheManager -> public void setCacheNames(@Nullable Collection<String> cacheNames);1495868221;Specify the set of cache names for this CacheManager's 'static' mode._<p>The number of caches and their names will be fixed after a call to this method,_with no creation of further cache regions at runtime._<p>Calling this with a {@code null} collection argument resets the_mode to 'dynamic', allowing for further creation of caches again.;public void setCacheNames(@Nullable Collection<String> cacheNames) {_		if (cacheNames != null) {_			for (String name : cacheNames) {_				this.cacheMap.put(name, createCaffeineCache(name))__			}_			this.dynamic = false__		}_		else {_			this.dynamic = true__		}_	};specify,the,set,of,cache,names,for,this,cache,manager,s,static,mode,p,the,number,of,caches,and,their,names,will,be,fixed,after,a,call,to,this,method,with,no,creation,of,further,cache,regions,at,runtime,p,calling,this,with,a,code,null,collection,argument,resets,the,mode,to,dynamic,allowing,for,further,creation,of,caches,again;public,void,set,cache,names,nullable,collection,string,cache,names,if,cache,names,null,for,string,name,cache,names,this,cache,map,put,name,create,caffeine,cache,name,this,dynamic,false,else,this,dynamic,true
CaffeineCacheManager -> public void setCacheNames(@Nullable Collection<String> cacheNames);1497362807;Specify the set of cache names for this CacheManager's 'static' mode._<p>The number of caches and their names will be fixed after a call to this method,_with no creation of further cache regions at runtime._<p>Calling this with a {@code null} collection argument resets the_mode to 'dynamic', allowing for further creation of caches again.;public void setCacheNames(@Nullable Collection<String> cacheNames) {_		if (cacheNames != null) {_			for (String name : cacheNames) {_				this.cacheMap.put(name, createCaffeineCache(name))__			}_			this.dynamic = false__		}_		else {_			this.dynamic = true__		}_	};specify,the,set,of,cache,names,for,this,cache,manager,s,static,mode,p,the,number,of,caches,and,their,names,will,be,fixed,after,a,call,to,this,method,with,no,creation,of,further,cache,regions,at,runtime,p,calling,this,with,a,code,null,collection,argument,resets,the,mode,to,dynamic,allowing,for,further,creation,of,caches,again;public,void,set,cache,names,nullable,collection,string,cache,names,if,cache,names,null,for,string,name,cache,names,this,cache,map,put,name,create,caffeine,cache,name,this,dynamic,false,else,this,dynamic,true
CaffeineCacheManager -> public void setCacheNames(@Nullable Collection<String> cacheNames);1498780456;Specify the set of cache names for this CacheManager's 'static' mode._<p>The number of caches and their names will be fixed after a call to this method,_with no creation of further cache regions at runtime._<p>Calling this with a {@code null} collection argument resets the_mode to 'dynamic', allowing for further creation of caches again.;public void setCacheNames(@Nullable Collection<String> cacheNames) {_		if (cacheNames != null) {_			for (String name : cacheNames) {_				this.cacheMap.put(name, createCaffeineCache(name))__			}_			this.dynamic = false__		}_		else {_			this.dynamic = true__		}_	};specify,the,set,of,cache,names,for,this,cache,manager,s,static,mode,p,the,number,of,caches,and,their,names,will,be,fixed,after,a,call,to,this,method,with,no,creation,of,further,cache,regions,at,runtime,p,calling,this,with,a,code,null,collection,argument,resets,the,mode,to,dynamic,allowing,for,further,creation,of,caches,again;public,void,set,cache,names,nullable,collection,string,cache,names,if,cache,names,null,for,string,name,cache,names,this,cache,map,put,name,create,caffeine,cache,name,this,dynamic,false,else,this,dynamic,true
CaffeineCacheManager -> public void setCacheNames(@Nullable Collection<String> cacheNames);1502974979;Specify the set of cache names for this CacheManager's 'static' mode._<p>The number of caches and their names will be fixed after a call to this method,_with no creation of further cache regions at runtime._<p>Calling this with a {@code null} collection argument resets the_mode to 'dynamic', allowing for further creation of caches again.;public void setCacheNames(@Nullable Collection<String> cacheNames) {_		if (cacheNames != null) {_			for (String name : cacheNames) {_				this.cacheMap.put(name, createCaffeineCache(name))__			}_			this.dynamic = false__		}_		else {_			this.dynamic = true__		}_	};specify,the,set,of,cache,names,for,this,cache,manager,s,static,mode,p,the,number,of,caches,and,their,names,will,be,fixed,after,a,call,to,this,method,with,no,creation,of,further,cache,regions,at,runtime,p,calling,this,with,a,code,null,collection,argument,resets,the,mode,to,dynamic,allowing,for,further,creation,of,caches,again;public,void,set,cache,names,nullable,collection,string,cache,names,if,cache,names,null,for,string,name,cache,names,this,cache,map,put,name,create,caffeine,cache,name,this,dynamic,false,else,this,dynamic,true
CaffeineCacheManager -> public CaffeineCacheManager();1450450053;Construct a dynamic CaffeineCacheManager,_lazily creating cache instances as they are being requested.;public CaffeineCacheManager() {_	};construct,a,dynamic,caffeine,cache,manager,lazily,creating,cache,instances,as,they,are,being,requested;public,caffeine,cache,manager
CaffeineCacheManager -> public CaffeineCacheManager();1453996229;Construct a dynamic CaffeineCacheManager,_lazily creating cache instances as they are being requested.;public CaffeineCacheManager() {_	};construct,a,dynamic,caffeine,cache,manager,lazily,creating,cache,instances,as,they,are,being,requested;public,caffeine,cache,manager
CaffeineCacheManager -> public CaffeineCacheManager();1467730834;Construct a dynamic CaffeineCacheManager,_lazily creating cache instances as they are being requested.;public CaffeineCacheManager() {_	};construct,a,dynamic,caffeine,cache,manager,lazily,creating,cache,instances,as,they,are,being,requested;public,caffeine,cache,manager
CaffeineCacheManager -> public CaffeineCacheManager();1495868221;Construct a dynamic CaffeineCacheManager,_lazily creating cache instances as they are being requested.;public CaffeineCacheManager() {_	};construct,a,dynamic,caffeine,cache,manager,lazily,creating,cache,instances,as,they,are,being,requested;public,caffeine,cache,manager
CaffeineCacheManager -> public CaffeineCacheManager();1497362807;Construct a dynamic CaffeineCacheManager,_lazily creating cache instances as they are being requested.;public CaffeineCacheManager() {_	};construct,a,dynamic,caffeine,cache,manager,lazily,creating,cache,instances,as,they,are,being,requested;public,caffeine,cache,manager
CaffeineCacheManager -> public CaffeineCacheManager();1498780456;Construct a dynamic CaffeineCacheManager,_lazily creating cache instances as they are being requested.;public CaffeineCacheManager() {_	};construct,a,dynamic,caffeine,cache,manager,lazily,creating,cache,instances,as,they,are,being,requested;public,caffeine,cache,manager
CaffeineCacheManager -> public CaffeineCacheManager();1502974979;Construct a dynamic CaffeineCacheManager,_lazily creating cache instances as they are being requested.;public CaffeineCacheManager() {_	};construct,a,dynamic,caffeine,cache,manager,lazily,creating,cache,instances,as,they,are,being,requested;public,caffeine,cache,manager
CaffeineCacheManager -> public void setCacheLoader(CacheLoader<Object, Object> cacheLoader);1450450053;Set the Caffeine CacheLoader to use for building each individual_{@link CaffeineCache} instance, turning it into a LoadingCache._@see #createNativeCaffeineCache_@see com.github.benmanes.caffeine.cache.Caffeine#build(CacheLoader)_@see com.github.benmanes.caffeine.cache.LoadingCache;public void setCacheLoader(CacheLoader<Object, Object> cacheLoader) {_		if (!ObjectUtils.nullSafeEquals(this.cacheLoader, cacheLoader)) {_			this.cacheLoader = cacheLoader__			refreshKnownCaches()__		}_	};set,the,caffeine,cache,loader,to,use,for,building,each,individual,link,caffeine,cache,instance,turning,it,into,a,loading,cache,see,create,native,caffeine,cache,see,com,github,benmanes,caffeine,cache,caffeine,build,cache,loader,see,com,github,benmanes,caffeine,cache,loading,cache;public,void,set,cache,loader,cache,loader,object,object,cache,loader,if,object,utils,null,safe,equals,this,cache,loader,cache,loader,this,cache,loader,cache,loader,refresh,known,caches
CaffeineCacheManager -> public void setCacheLoader(CacheLoader<Object, Object> cacheLoader);1453996229;Set the Caffeine CacheLoader to use for building each individual_{@link CaffeineCache} instance, turning it into a LoadingCache._@see #createNativeCaffeineCache_@see com.github.benmanes.caffeine.cache.Caffeine#build(CacheLoader)_@see com.github.benmanes.caffeine.cache.LoadingCache;public void setCacheLoader(CacheLoader<Object, Object> cacheLoader) {_		if (!ObjectUtils.nullSafeEquals(this.cacheLoader, cacheLoader)) {_			this.cacheLoader = cacheLoader__			refreshKnownCaches()__		}_	};set,the,caffeine,cache,loader,to,use,for,building,each,individual,link,caffeine,cache,instance,turning,it,into,a,loading,cache,see,create,native,caffeine,cache,see,com,github,benmanes,caffeine,cache,caffeine,build,cache,loader,see,com,github,benmanes,caffeine,cache,loading,cache;public,void,set,cache,loader,cache,loader,object,object,cache,loader,if,object,utils,null,safe,equals,this,cache,loader,cache,loader,this,cache,loader,cache,loader,refresh,known,caches
CaffeineCacheManager -> public void setCacheLoader(CacheLoader<Object, Object> cacheLoader);1467730834;Set the Caffeine CacheLoader to use for building each individual_{@link CaffeineCache} instance, turning it into a LoadingCache._@see #createNativeCaffeineCache_@see com.github.benmanes.caffeine.cache.Caffeine#build(CacheLoader)_@see com.github.benmanes.caffeine.cache.LoadingCache;public void setCacheLoader(CacheLoader<Object, Object> cacheLoader) {_		if (!ObjectUtils.nullSafeEquals(this.cacheLoader, cacheLoader)) {_			this.cacheLoader = cacheLoader__			refreshKnownCaches()__		}_	};set,the,caffeine,cache,loader,to,use,for,building,each,individual,link,caffeine,cache,instance,turning,it,into,a,loading,cache,see,create,native,caffeine,cache,see,com,github,benmanes,caffeine,cache,caffeine,build,cache,loader,see,com,github,benmanes,caffeine,cache,loading,cache;public,void,set,cache,loader,cache,loader,object,object,cache,loader,if,object,utils,null,safe,equals,this,cache,loader,cache,loader,this,cache,loader,cache,loader,refresh,known,caches
CaffeineCacheManager -> public void setCacheLoader(CacheLoader<Object, Object> cacheLoader);1495868221;Set the Caffeine CacheLoader to use for building each individual_{@link CaffeineCache} instance, turning it into a LoadingCache._@see #createNativeCaffeineCache_@see com.github.benmanes.caffeine.cache.Caffeine#build(CacheLoader)_@see com.github.benmanes.caffeine.cache.LoadingCache;public void setCacheLoader(CacheLoader<Object, Object> cacheLoader) {_		if (!ObjectUtils.nullSafeEquals(this.cacheLoader, cacheLoader)) {_			this.cacheLoader = cacheLoader__			refreshKnownCaches()__		}_	};set,the,caffeine,cache,loader,to,use,for,building,each,individual,link,caffeine,cache,instance,turning,it,into,a,loading,cache,see,create,native,caffeine,cache,see,com,github,benmanes,caffeine,cache,caffeine,build,cache,loader,see,com,github,benmanes,caffeine,cache,loading,cache;public,void,set,cache,loader,cache,loader,object,object,cache,loader,if,object,utils,null,safe,equals,this,cache,loader,cache,loader,this,cache,loader,cache,loader,refresh,known,caches
CaffeineCacheManager -> public void setCacheLoader(CacheLoader<Object, Object> cacheLoader);1497362807;Set the Caffeine CacheLoader to use for building each individual_{@link CaffeineCache} instance, turning it into a LoadingCache._@see #createNativeCaffeineCache_@see com.github.benmanes.caffeine.cache.Caffeine#build(CacheLoader)_@see com.github.benmanes.caffeine.cache.LoadingCache;public void setCacheLoader(CacheLoader<Object, Object> cacheLoader) {_		if (!ObjectUtils.nullSafeEquals(this.cacheLoader, cacheLoader)) {_			this.cacheLoader = cacheLoader__			refreshKnownCaches()__		}_	};set,the,caffeine,cache,loader,to,use,for,building,each,individual,link,caffeine,cache,instance,turning,it,into,a,loading,cache,see,create,native,caffeine,cache,see,com,github,benmanes,caffeine,cache,caffeine,build,cache,loader,see,com,github,benmanes,caffeine,cache,loading,cache;public,void,set,cache,loader,cache,loader,object,object,cache,loader,if,object,utils,null,safe,equals,this,cache,loader,cache,loader,this,cache,loader,cache,loader,refresh,known,caches
CaffeineCacheManager -> public void setCacheLoader(CacheLoader<Object, Object> cacheLoader);1498780456;Set the Caffeine CacheLoader to use for building each individual_{@link CaffeineCache} instance, turning it into a LoadingCache._@see #createNativeCaffeineCache_@see com.github.benmanes.caffeine.cache.Caffeine#build(CacheLoader)_@see com.github.benmanes.caffeine.cache.LoadingCache;public void setCacheLoader(CacheLoader<Object, Object> cacheLoader) {_		if (!ObjectUtils.nullSafeEquals(this.cacheLoader, cacheLoader)) {_			this.cacheLoader = cacheLoader__			refreshKnownCaches()__		}_	};set,the,caffeine,cache,loader,to,use,for,building,each,individual,link,caffeine,cache,instance,turning,it,into,a,loading,cache,see,create,native,caffeine,cache,see,com,github,benmanes,caffeine,cache,caffeine,build,cache,loader,see,com,github,benmanes,caffeine,cache,loading,cache;public,void,set,cache,loader,cache,loader,object,object,cache,loader,if,object,utils,null,safe,equals,this,cache,loader,cache,loader,this,cache,loader,cache,loader,refresh,known,caches
CaffeineCacheManager -> public void setCacheLoader(CacheLoader<Object, Object> cacheLoader);1502974979;Set the Caffeine CacheLoader to use for building each individual_{@link CaffeineCache} instance, turning it into a LoadingCache._@see #createNativeCaffeineCache_@see com.github.benmanes.caffeine.cache.Caffeine#build(CacheLoader)_@see com.github.benmanes.caffeine.cache.LoadingCache;public void setCacheLoader(CacheLoader<Object, Object> cacheLoader) {_		if (!ObjectUtils.nullSafeEquals(this.cacheLoader, cacheLoader)) {_			this.cacheLoader = cacheLoader__			refreshKnownCaches()__		}_	};set,the,caffeine,cache,loader,to,use,for,building,each,individual,link,caffeine,cache,instance,turning,it,into,a,loading,cache,see,create,native,caffeine,cache,see,com,github,benmanes,caffeine,cache,caffeine,build,cache,loader,see,com,github,benmanes,caffeine,cache,loading,cache;public,void,set,cache,loader,cache,loader,object,object,cache,loader,if,object,utils,null,safe,equals,this,cache,loader,cache,loader,this,cache,loader,cache,loader,refresh,known,caches
