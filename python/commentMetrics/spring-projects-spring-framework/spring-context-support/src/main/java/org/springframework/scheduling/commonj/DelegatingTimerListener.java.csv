# id;timestamp;commentText;codeText;commentWords;codeWords
DelegatingTimerListener -> public DelegatingTimerListener(Runnable runnable);1328020251;Create a new DelegatingTimerListener._@param runnable the Runnable implementation to delegate to;public DelegatingTimerListener(Runnable runnable) {_		Assert.notNull(runnable, "Runnable is required")__		this.runnable = runnable__	};create,a,new,delegating,timer,listener,param,runnable,the,runnable,implementation,to,delegate,to;public,delegating,timer,listener,runnable,runnable,assert,not,null,runnable,runnable,is,required,this,runnable,runnable
DelegatingTimerListener -> public DelegatingTimerListener(Runnable runnable);1356735495;Create a new DelegatingTimerListener._@param runnable the Runnable implementation to delegate to;public DelegatingTimerListener(Runnable runnable) {_		Assert.notNull(runnable, "Runnable is required")__		this.runnable = runnable__	};create,a,new,delegating,timer,listener,param,runnable,the,runnable,implementation,to,delegate,to;public,delegating,timer,listener,runnable,runnable,assert,not,null,runnable,runnable,is,required,this,runnable,runnable
DelegatingTimerListener -> public DelegatingTimerListener(Runnable runnable);1357119239;Create a new DelegatingTimerListener._@param runnable the Runnable implementation to delegate to;public DelegatingTimerListener(Runnable runnable) {_		Assert.notNull(runnable, "Runnable is required")__		this.runnable = runnable__	};create,a,new,delegating,timer,listener,param,runnable,the,runnable,implementation,to,delegate,to;public,delegating,timer,listener,runnable,runnable,assert,not,null,runnable,runnable,is,required,this,runnable,runnable
DelegatingTimerListener -> public DelegatingTimerListener(Runnable runnable);1368482696;Create a new DelegatingTimerListener._@param runnable the Runnable implementation to delegate to;public DelegatingTimerListener(Runnable runnable) {_		Assert.notNull(runnable, "Runnable is required")__		this.runnable = runnable__	};create,a,new,delegating,timer,listener,param,runnable,the,runnable,implementation,to,delegate,to;public,delegating,timer,listener,runnable,runnable,assert,not,null,runnable,runnable,is,required,this,runnable,runnable
DelegatingTimerListener -> public DelegatingTimerListener(Runnable runnable);1533213510;Create a new DelegatingTimerListener._@param runnable the Runnable implementation to delegate to;public DelegatingTimerListener(Runnable runnable) {_		Assert.notNull(runnable, "Runnable is required")__		this.runnable = runnable__	};create,a,new,delegating,timer,listener,param,runnable,the,runnable,implementation,to,delegate,to;public,delegating,timer,listener,runnable,runnable,assert,not,null,runnable,runnable,is,required,this,runnable,runnable
DelegatingTimerListener -> public void timerExpired(Timer timer);1328020251;Delegates execution to the underlying Runnable.;public void timerExpired(Timer timer) {_		this.runnable.run()__	};delegates,execution,to,the,underlying,runnable;public,void,timer,expired,timer,timer,this,runnable,run
DelegatingTimerListener -> public void timerExpired(Timer timer);1357119239;Delegates execution to the underlying Runnable.;public void timerExpired(Timer timer) {_		this.runnable.run()__	};delegates,execution,to,the,underlying,runnable;public,void,timer,expired,timer,timer,this,runnable,run
DelegatingTimerListener -> @Override 	public void timerExpired(Timer timer);1356735495;Delegates execution to the underlying Runnable.;@Override_	public void timerExpired(Timer timer) {_		this.runnable.run()__	};delegates,execution,to,the,underlying,runnable;override,public,void,timer,expired,timer,timer,this,runnable,run
DelegatingTimerListener -> @Override 	public void timerExpired(Timer timer);1368482696;Delegates execution to the underlying Runnable.;@Override_	public void timerExpired(Timer timer) {_		this.runnable.run()__	};delegates,execution,to,the,underlying,runnable;override,public,void,timer,expired,timer,timer,this,runnable,run
DelegatingTimerListener -> @Override 	public void timerExpired(Timer timer);1533213510;Delegates execution to the underlying Runnable.;@Override_	public void timerExpired(Timer timer) {_		this.runnable.run()__	};delegates,execution,to,the,underlying,runnable;override,public,void,timer,expired,timer,timer,this,runnable,run
