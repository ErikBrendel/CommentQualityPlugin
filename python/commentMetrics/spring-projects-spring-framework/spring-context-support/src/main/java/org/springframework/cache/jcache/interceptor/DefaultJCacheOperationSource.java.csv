# id;timestamp;commentText;codeText;commentWords;codeWords
DefaultJCacheOperationSource -> public void setExceptionCacheResolver(CacheResolver exceptionCacheResolver);1396865240;Set the {@link CacheResolver} to resolve exception caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setExceptionCacheResolver(CacheResolver exceptionCacheResolver) {_		this.exceptionCacheResolver = exceptionCacheResolver__	};set,the,link,cache,resolver,to,resolve,exception,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,exception,cache,resolver,cache,resolver,exception,cache,resolver,this,exception,cache,resolver,exception,cache,resolver
DefaultJCacheOperationSource -> public void setExceptionCacheResolver(CacheResolver exceptionCacheResolver);1406128099;Set the {@link CacheResolver} to resolve exception caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setExceptionCacheResolver(CacheResolver exceptionCacheResolver) {_		this.exceptionCacheResolver = exceptionCacheResolver__	};set,the,link,cache,resolver,to,resolve,exception,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,exception,cache,resolver,cache,resolver,exception,cache,resolver,this,exception,cache,resolver,exception,cache,resolver
DefaultJCacheOperationSource -> public void setExceptionCacheResolver(CacheResolver exceptionCacheResolver);1414762650;Set the {@link CacheResolver} to resolve exception caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setExceptionCacheResolver(CacheResolver exceptionCacheResolver) {_		this.exceptionCacheResolver = exceptionCacheResolver__	};set,the,link,cache,resolver,to,resolve,exception,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,exception,cache,resolver,cache,resolver,exception,cache,resolver,this,exception,cache,resolver,exception,cache,resolver
DefaultJCacheOperationSource -> public void setExceptionCacheResolver(CacheResolver exceptionCacheResolver);1414826808;Set the {@link CacheResolver} to resolve exception caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setExceptionCacheResolver(CacheResolver exceptionCacheResolver) {_		this.exceptionCacheResolver = exceptionCacheResolver__	};set,the,link,cache,resolver,to,resolve,exception,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,exception,cache,resolver,cache,resolver,exception,cache,resolver,this,exception,cache,resolver,exception,cache,resolver
DefaultJCacheOperationSource -> public void setExceptionCacheResolver(CacheResolver exceptionCacheResolver);1414829215;Set the {@link CacheResolver} to resolve exception caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setExceptionCacheResolver(CacheResolver exceptionCacheResolver) {_		this.exceptionCacheResolver = exceptionCacheResolver__	};set,the,link,cache,resolver,to,resolve,exception,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,exception,cache,resolver,cache,resolver,exception,cache,resolver,this,exception,cache,resolver,exception,cache,resolver
DefaultJCacheOperationSource -> public void setExceptionCacheResolver(CacheResolver exceptionCacheResolver);1415018114;Set the {@link CacheResolver} to resolve exception caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setExceptionCacheResolver(CacheResolver exceptionCacheResolver) {_		this.exceptionCacheResolver = exceptionCacheResolver__	};set,the,link,cache,resolver,to,resolve,exception,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,exception,cache,resolver,cache,resolver,exception,cache,resolver,this,exception,cache,resolver,exception,cache,resolver
DefaultJCacheOperationSource -> public void setExceptionCacheResolver(CacheResolver exceptionCacheResolver);1427292728;Set the {@link CacheResolver} to resolve exception caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setExceptionCacheResolver(CacheResolver exceptionCacheResolver) {_		this.exceptionCacheResolver = exceptionCacheResolver__	};set,the,link,cache,resolver,to,resolve,exception,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,exception,cache,resolver,cache,resolver,exception,cache,resolver,this,exception,cache,resolver,exception,cache,resolver
DefaultJCacheOperationSource -> public void setExceptionCacheResolver(CacheResolver exceptionCacheResolver);1427445726;Set the {@link CacheResolver} to resolve exception caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setExceptionCacheResolver(CacheResolver exceptionCacheResolver) {_		this.exceptionCacheResolver = exceptionCacheResolver__	};set,the,link,cache,resolver,to,resolve,exception,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,exception,cache,resolver,cache,resolver,exception,cache,resolver,this,exception,cache,resolver,exception,cache,resolver
DefaultJCacheOperationSource -> public void setExceptionCacheResolver(CacheResolver exceptionCacheResolver);1440579854;Set the {@link CacheResolver} to resolve exception caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setExceptionCacheResolver(CacheResolver exceptionCacheResolver) {_		this.exceptionCacheResolver = exceptionCacheResolver__	};set,the,link,cache,resolver,to,resolve,exception,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,exception,cache,resolver,cache,resolver,exception,cache,resolver,this,exception,cache,resolver,exception,cache,resolver
DefaultJCacheOperationSource -> public void setExceptionCacheResolver(CacheResolver exceptionCacheResolver);1495868221;Set the {@link CacheResolver} to resolve exception caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setExceptionCacheResolver(CacheResolver exceptionCacheResolver) {_		this.exceptionCacheResolver = exceptionCacheResolver__	};set,the,link,cache,resolver,to,resolve,exception,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,exception,cache,resolver,cache,resolver,exception,cache,resolver,this,exception,cache,resolver,exception,cache,resolver
DefaultJCacheOperationSource -> @Nullable 	public CacheResolver getExceptionCacheResolver();1495868221;Return the specified exception cache resolver to use, if any.;@Nullable_	public CacheResolver getExceptionCacheResolver() {_		return this.exceptionCacheResolver__	};return,the,specified,exception,cache,resolver,to,use,if,any;nullable,public,cache,resolver,get,exception,cache,resolver,return,this,exception,cache,resolver
DefaultJCacheOperationSource -> @Nullable 	public CacheResolver getExceptionCacheResolver();1500448076;Return the specified exception cache resolver to use, if any.;@Nullable_	public CacheResolver getExceptionCacheResolver() {_		return this.exceptionCacheResolver__	};return,the,specified,exception,cache,resolver,to,use,if,any;nullable,public,cache,resolver,get,exception,cache,resolver,return,this,exception,cache,resolver
DefaultJCacheOperationSource -> @Nullable 	public CacheResolver getExceptionCacheResolver();1531589372;Return the specified exception cache resolver to use, if any.;@Nullable_	public CacheResolver getExceptionCacheResolver() {_		return SupplierUtils.resolve(this.exceptionCacheResolver)__	};return,the,specified,exception,cache,resolver,to,use,if,any;nullable,public,cache,resolver,get,exception,cache,resolver,return,supplier,utils,resolve,this,exception,cache,resolver
DefaultJCacheOperationSource -> @Nullable 	public CacheResolver getExceptionCacheResolver();1533034998;Return the specified exception cache resolver to use, if any.;@Nullable_	public CacheResolver getExceptionCacheResolver() {_		return SupplierUtils.resolve(this.exceptionCacheResolver)__	};return,the,specified,exception,cache,resolver,to,use,if,any;nullable,public,cache,resolver,get,exception,cache,resolver,return,supplier,utils,resolve,this,exception,cache,resolver
DefaultJCacheOperationSource -> public CacheResolver getExceptionCacheResolver();1414829215;Return the specified exception cache resolver to use, if any.;public CacheResolver getExceptionCacheResolver() {_		return this.exceptionCacheResolver__	};return,the,specified,exception,cache,resolver,to,use,if,any;public,cache,resolver,get,exception,cache,resolver,return,this,exception,cache,resolver
DefaultJCacheOperationSource -> public CacheResolver getExceptionCacheResolver();1415018114;Return the specified exception cache resolver to use, if any.;public CacheResolver getExceptionCacheResolver() {_		return this.exceptionCacheResolver__	};return,the,specified,exception,cache,resolver,to,use,if,any;public,cache,resolver,get,exception,cache,resolver,return,this,exception,cache,resolver
DefaultJCacheOperationSource -> public CacheResolver getExceptionCacheResolver();1427292728;Return the specified exception cache resolver to use, if any.;public CacheResolver getExceptionCacheResolver() {_		return this.exceptionCacheResolver__	};return,the,specified,exception,cache,resolver,to,use,if,any;public,cache,resolver,get,exception,cache,resolver,return,this,exception,cache,resolver
DefaultJCacheOperationSource -> public CacheResolver getExceptionCacheResolver();1427445726;Return the specified exception cache resolver to use, if any.;public CacheResolver getExceptionCacheResolver() {_		return this.exceptionCacheResolver__	};return,the,specified,exception,cache,resolver,to,use,if,any;public,cache,resolver,get,exception,cache,resolver,return,this,exception,cache,resolver
DefaultJCacheOperationSource -> public CacheResolver getExceptionCacheResolver();1440579854;Return the specified exception cache resolver to use, if any.;public CacheResolver getExceptionCacheResolver() {_		return this.exceptionCacheResolver__	};return,the,specified,exception,cache,resolver,to,use,if,any;public,cache,resolver,get,exception,cache,resolver,return,this,exception,cache,resolver
DefaultJCacheOperationSource -> @Nullable 	public CacheManager getCacheManager();1495868221;Return the specified cache manager to use, if any.;@Nullable_	public CacheManager getCacheManager() {_		return this.cacheManager__	};return,the,specified,cache,manager,to,use,if,any;nullable,public,cache,manager,get,cache,manager,return,this,cache,manager
DefaultJCacheOperationSource -> @Nullable 	public CacheManager getCacheManager();1500448076;Return the specified cache manager to use, if any.;@Nullable_	public CacheManager getCacheManager() {_		return this.cacheManager__	};return,the,specified,cache,manager,to,use,if,any;nullable,public,cache,manager,get,cache,manager,return,this,cache,manager
DefaultJCacheOperationSource -> @Nullable 	public CacheManager getCacheManager();1531589372;Return the specified cache manager to use, if any.;@Nullable_	public CacheManager getCacheManager() {_		return SupplierUtils.resolve(this.cacheManager)__	};return,the,specified,cache,manager,to,use,if,any;nullable,public,cache,manager,get,cache,manager,return,supplier,utils,resolve,this,cache,manager
DefaultJCacheOperationSource -> @Nullable 	public CacheManager getCacheManager();1533034998;Return the specified cache manager to use, if any.;@Nullable_	public CacheManager getCacheManager() {_		return SupplierUtils.resolve(this.cacheManager)__	};return,the,specified,cache,manager,to,use,if,any;nullable,public,cache,manager,get,cache,manager,return,supplier,utils,resolve,this,cache,manager
DefaultJCacheOperationSource -> public void setExceptionCacheResolver(@Nullable CacheResolver exceptionCacheResolver);1500448076;Set the {@link CacheResolver} to resolve exception caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setExceptionCacheResolver(@Nullable CacheResolver exceptionCacheResolver) {_		this.exceptionCacheResolver = exceptionCacheResolver__	};set,the,link,cache,resolver,to,resolve,exception,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,exception,cache,resolver,nullable,cache,resolver,exception,cache,resolver,this,exception,cache,resolver,exception,cache,resolver
DefaultJCacheOperationSource -> public void setExceptionCacheResolver(@Nullable CacheResolver exceptionCacheResolver);1531589372;Set the {@link CacheResolver} to resolve exception caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setExceptionCacheResolver(@Nullable CacheResolver exceptionCacheResolver) {_		this.exceptionCacheResolver = SingletonSupplier.ofNullable(exceptionCacheResolver)__	};set,the,link,cache,resolver,to,resolve,exception,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,exception,cache,resolver,nullable,cache,resolver,exception,cache,resolver,this,exception,cache,resolver,singleton,supplier,of,nullable,exception,cache,resolver
DefaultJCacheOperationSource -> public void setExceptionCacheResolver(@Nullable CacheResolver exceptionCacheResolver);1533034998;Set the {@link CacheResolver} to resolve exception caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setExceptionCacheResolver(@Nullable CacheResolver exceptionCacheResolver) {_		this.exceptionCacheResolver = SingletonSupplier.ofNullable(exceptionCacheResolver)__	};set,the,link,cache,resolver,to,resolve,exception,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,exception,cache,resolver,nullable,cache,resolver,exception,cache,resolver,this,exception,cache,resolver,singleton,supplier,of,nullable,exception,cache,resolver
DefaultJCacheOperationSource -> public void setCacheResolver(CacheResolver cacheResolver);1396865240;Set the {@link CacheResolver} to resolve regular caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setCacheResolver(CacheResolver cacheResolver) {_		this.cacheResolver = cacheResolver__	};set,the,link,cache,resolver,to,resolve,regular,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,cache,resolver,cache,resolver,cache,resolver,this,cache,resolver,cache,resolver
DefaultJCacheOperationSource -> public void setCacheResolver(CacheResolver cacheResolver);1406128099;Set the {@link CacheResolver} to resolve regular caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setCacheResolver(CacheResolver cacheResolver) {_		this.cacheResolver = cacheResolver__	};set,the,link,cache,resolver,to,resolve,regular,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,cache,resolver,cache,resolver,cache,resolver,this,cache,resolver,cache,resolver
DefaultJCacheOperationSource -> public void setCacheResolver(CacheResolver cacheResolver);1414762650;Set the {@link CacheResolver} to resolve regular caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setCacheResolver(CacheResolver cacheResolver) {_		this.cacheResolver = cacheResolver__	};set,the,link,cache,resolver,to,resolve,regular,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,cache,resolver,cache,resolver,cache,resolver,this,cache,resolver,cache,resolver
DefaultJCacheOperationSource -> public void setCacheResolver(CacheResolver cacheResolver);1414826808;Set the {@link CacheResolver} to resolve regular caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setCacheResolver(CacheResolver cacheResolver) {_		this.cacheResolver = cacheResolver__	};set,the,link,cache,resolver,to,resolve,regular,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,cache,resolver,cache,resolver,cache,resolver,this,cache,resolver,cache,resolver
DefaultJCacheOperationSource -> public void setCacheResolver(CacheResolver cacheResolver);1414829215;Set the {@link CacheResolver} to resolve regular caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setCacheResolver(CacheResolver cacheResolver) {_		this.cacheResolver = cacheResolver__	};set,the,link,cache,resolver,to,resolve,regular,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,cache,resolver,cache,resolver,cache,resolver,this,cache,resolver,cache,resolver
DefaultJCacheOperationSource -> public void setCacheResolver(CacheResolver cacheResolver);1415018114;Set the {@link CacheResolver} to resolve regular caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setCacheResolver(CacheResolver cacheResolver) {_		this.cacheResolver = cacheResolver__	};set,the,link,cache,resolver,to,resolve,regular,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,cache,resolver,cache,resolver,cache,resolver,this,cache,resolver,cache,resolver
DefaultJCacheOperationSource -> public void setCacheResolver(CacheResolver cacheResolver);1427292728;Set the {@link CacheResolver} to resolve regular caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setCacheResolver(CacheResolver cacheResolver) {_		this.cacheResolver = cacheResolver__	};set,the,link,cache,resolver,to,resolve,regular,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,cache,resolver,cache,resolver,cache,resolver,this,cache,resolver,cache,resolver
DefaultJCacheOperationSource -> public void setCacheResolver(CacheResolver cacheResolver);1427445726;Set the {@link CacheResolver} to resolve regular caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setCacheResolver(CacheResolver cacheResolver) {_		this.cacheResolver = cacheResolver__	};set,the,link,cache,resolver,to,resolve,regular,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,cache,resolver,cache,resolver,cache,resolver,this,cache,resolver,cache,resolver
DefaultJCacheOperationSource -> public void setCacheResolver(CacheResolver cacheResolver);1440579854;Set the {@link CacheResolver} to resolve regular caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setCacheResolver(CacheResolver cacheResolver) {_		this.cacheResolver = cacheResolver__	};set,the,link,cache,resolver,to,resolve,regular,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,cache,resolver,cache,resolver,cache,resolver,this,cache,resolver,cache,resolver
DefaultJCacheOperationSource -> public void setCacheResolver(CacheResolver cacheResolver);1495868221;Set the {@link CacheResolver} to resolve regular caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setCacheResolver(CacheResolver cacheResolver) {_		this.cacheResolver = cacheResolver__	};set,the,link,cache,resolver,to,resolve,regular,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,cache,resolver,cache,resolver,cache,resolver,this,cache,resolver,cache,resolver
DefaultJCacheOperationSource -> @Nullable 	public KeyGenerator getKeyGenerator();1495868221;Return the specified key generator to use, if any.;@Nullable_	public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,specified,key,generator,to,use,if,any;nullable,public,key,generator,get,key,generator,return,this,key,generator
DefaultJCacheOperationSource -> @Nullable 	public KeyGenerator getKeyGenerator();1500448076;Return the specified key generator to use, if any.;@Nullable_	public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,specified,key,generator,to,use,if,any;nullable,public,key,generator,get,key,generator,return,this,key,generator
DefaultJCacheOperationSource -> public void setKeyGenerator(KeyGenerator keyGenerator);1396865240;Set the default {@link KeyGenerator}. If none is set, a default JSR-107 compliant_key generator is used.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,if,none,is,set,a,default,jsr,107,compliant,key,generator,is,used;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
DefaultJCacheOperationSource -> public void setKeyGenerator(KeyGenerator keyGenerator);1406128099;Set the default {@link KeyGenerator}. If none is set, a {@link SimpleKeyGenerator}_honoringKe the JSR-107 {@link javax.cache.annotation.CacheKey} and_{@link javax.cache.annotation.CacheValue} will be used.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,if,none,is,set,a,link,simple,key,generator,honoring,ke,the,jsr,107,link,javax,cache,annotation,cache,key,and,link,javax,cache,annotation,cache,value,will,be,used;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
DefaultJCacheOperationSource -> public void setKeyGenerator(KeyGenerator keyGenerator);1414762650;Set the default {@link KeyGenerator}. If none is set, a {@link SimpleKeyGenerator}_honoringKe the JSR-107 {@link javax.cache.annotation.CacheKey} and_{@link javax.cache.annotation.CacheValue} will be used.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,if,none,is,set,a,link,simple,key,generator,honoring,ke,the,jsr,107,link,javax,cache,annotation,cache,key,and,link,javax,cache,annotation,cache,value,will,be,used;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
DefaultJCacheOperationSource -> public void setKeyGenerator(KeyGenerator keyGenerator);1414826808;Set the default {@link KeyGenerator}. If none is set, a {@link SimpleKeyGenerator}_honoringKe the JSR-107 {@link javax.cache.annotation.CacheKey} and_{@link javax.cache.annotation.CacheValue} will be used.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,if,none,is,set,a,link,simple,key,generator,honoring,ke,the,jsr,107,link,javax,cache,annotation,cache,key,and,link,javax,cache,annotation,cache,value,will,be,used;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
DefaultJCacheOperationSource -> public void setKeyGenerator(KeyGenerator keyGenerator);1414829215;Set the default {@link KeyGenerator}. If none is set, a {@link SimpleKeyGenerator}_honoringKe the JSR-107 {@link javax.cache.annotation.CacheKey} and_{@link javax.cache.annotation.CacheValue} will be used.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,if,none,is,set,a,link,simple,key,generator,honoring,ke,the,jsr,107,link,javax,cache,annotation,cache,key,and,link,javax,cache,annotation,cache,value,will,be,used;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
DefaultJCacheOperationSource -> public void setKeyGenerator(KeyGenerator keyGenerator);1415018114;Set the default {@link KeyGenerator}. If none is set, a {@link SimpleKeyGenerator}_honoring the JSR-107 {@link javax.cache.annotation.CacheKey} and_{@link javax.cache.annotation.CacheValue} will be used.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,if,none,is,set,a,link,simple,key,generator,honoring,the,jsr,107,link,javax,cache,annotation,cache,key,and,link,javax,cache,annotation,cache,value,will,be,used;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
DefaultJCacheOperationSource -> public void setKeyGenerator(KeyGenerator keyGenerator);1427292728;Set the default {@link KeyGenerator}. If none is set, a {@link SimpleKeyGenerator}_honoring the JSR-107 {@link javax.cache.annotation.CacheKey} and_{@link javax.cache.annotation.CacheValue} will be used.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,if,none,is,set,a,link,simple,key,generator,honoring,the,jsr,107,link,javax,cache,annotation,cache,key,and,link,javax,cache,annotation,cache,value,will,be,used;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
DefaultJCacheOperationSource -> public void setKeyGenerator(KeyGenerator keyGenerator);1427445726;Set the default {@link KeyGenerator}. If none is set, a {@link SimpleKeyGenerator}_honoring the JSR-107 {@link javax.cache.annotation.CacheKey} and_{@link javax.cache.annotation.CacheValue} will be used.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,if,none,is,set,a,link,simple,key,generator,honoring,the,jsr,107,link,javax,cache,annotation,cache,key,and,link,javax,cache,annotation,cache,value,will,be,used;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
DefaultJCacheOperationSource -> public void setKeyGenerator(KeyGenerator keyGenerator);1440579854;Set the default {@link KeyGenerator}. If none is set, a {@link SimpleKeyGenerator}_honoring the JSR-107 {@link javax.cache.annotation.CacheKey} and_{@link javax.cache.annotation.CacheValue} will be used.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,if,none,is,set,a,link,simple,key,generator,honoring,the,jsr,107,link,javax,cache,annotation,cache,key,and,link,javax,cache,annotation,cache,value,will,be,used;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
DefaultJCacheOperationSource -> public void setKeyGenerator(KeyGenerator keyGenerator);1495868221;Set the default {@link KeyGenerator}. If none is set, a {@link SimpleKeyGenerator}_honoring the JSR-107 {@link javax.cache.annotation.CacheKey} and_{@link javax.cache.annotation.CacheValue} will be used.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,if,none,is,set,a,link,simple,key,generator,honoring,the,jsr,107,link,javax,cache,annotation,cache,key,and,link,javax,cache,annotation,cache,value,will,be,used;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
DefaultJCacheOperationSource -> public void setKeyGenerator(KeyGenerator keyGenerator);1531589372;Set the default {@link KeyGenerator}. If none is set, a {@link SimpleKeyGenerator}_honoring the JSR-107 {@link javax.cache.annotation.CacheKey} and_{@link javax.cache.annotation.CacheValue} will be used.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = SingletonSupplier.of(keyGenerator)__	};set,the,default,link,key,generator,if,none,is,set,a,link,simple,key,generator,honoring,the,jsr,107,link,javax,cache,annotation,cache,key,and,link,javax,cache,annotation,cache,value,will,be,used;public,void,set,key,generator,key,generator,key,generator,this,key,generator,singleton,supplier,of,key,generator
DefaultJCacheOperationSource -> public void setKeyGenerator(KeyGenerator keyGenerator);1533034998;Set the default {@link KeyGenerator}. If none is set, a {@link SimpleKeyGenerator}_honoring the JSR-107 {@link javax.cache.annotation.CacheKey} and_{@link javax.cache.annotation.CacheValue} will be used.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = SingletonSupplier.of(keyGenerator)__	};set,the,default,link,key,generator,if,none,is,set,a,link,simple,key,generator,honoring,the,jsr,107,link,javax,cache,annotation,cache,key,and,link,javax,cache,annotation,cache,value,will,be,used;public,void,set,key,generator,key,generator,key,generator,this,key,generator,singleton,supplier,of,key,generator
DefaultJCacheOperationSource -> public DefaultJCacheOperationSource( 			@Nullable Supplier<CacheManager> cacheManager, @Nullable Supplier<CacheResolver> cacheResolver, 			@Nullable Supplier<CacheResolver> exceptionCacheResolver, @Nullable Supplier<KeyGenerator> keyGenerator);1531589372;Construct a new {@code DefaultJCacheOperationSource} with the given cache manager,_cache resolver and key generator suppliers, applying the corresponding default_if a supplier is not resolvable._@since 5.1;public DefaultJCacheOperationSource(_			@Nullable Supplier<CacheManager> cacheManager, @Nullable Supplier<CacheResolver> cacheResolver,_			@Nullable Supplier<CacheResolver> exceptionCacheResolver, @Nullable Supplier<KeyGenerator> keyGenerator) {__		this.cacheManager = SingletonSupplier.ofNullable(cacheManager)__		this.cacheResolver = SingletonSupplier.ofNullable(cacheResolver)__		this.exceptionCacheResolver = SingletonSupplier.ofNullable(exceptionCacheResolver)__		this.keyGenerator = new SingletonSupplier<>(keyGenerator, SimpleKeyGenerator::new)__	};construct,a,new,code,default,jcache,operation,source,with,the,given,cache,manager,cache,resolver,and,key,generator,suppliers,applying,the,corresponding,default,if,a,supplier,is,not,resolvable,since,5,1;public,default,jcache,operation,source,nullable,supplier,cache,manager,cache,manager,nullable,supplier,cache,resolver,cache,resolver,nullable,supplier,cache,resolver,exception,cache,resolver,nullable,supplier,key,generator,key,generator,this,cache,manager,singleton,supplier,of,nullable,cache,manager,this,cache,resolver,singleton,supplier,of,nullable,cache,resolver,this,exception,cache,resolver,singleton,supplier,of,nullable,exception,cache,resolver,this,key,generator,new,singleton,supplier,key,generator,simple,key,generator,new
DefaultJCacheOperationSource -> public DefaultJCacheOperationSource( 			@Nullable Supplier<CacheManager> cacheManager, @Nullable Supplier<CacheResolver> cacheResolver, 			@Nullable Supplier<CacheResolver> exceptionCacheResolver, @Nullable Supplier<KeyGenerator> keyGenerator);1533034998;Construct a new {@code DefaultJCacheOperationSource} with the given cache manager,_cache resolver and key generator suppliers, applying the corresponding default_if a supplier is not resolvable._@since 5.1;public DefaultJCacheOperationSource(_			@Nullable Supplier<CacheManager> cacheManager, @Nullable Supplier<CacheResolver> cacheResolver,_			@Nullable Supplier<CacheResolver> exceptionCacheResolver, @Nullable Supplier<KeyGenerator> keyGenerator) {__		this.cacheManager = SingletonSupplier.ofNullable(cacheManager)__		this.cacheResolver = SingletonSupplier.ofNullable(cacheResolver)__		this.exceptionCacheResolver = SingletonSupplier.ofNullable(exceptionCacheResolver)__		this.keyGenerator = new SingletonSupplier<>(keyGenerator, SimpleKeyGenerator::new)__	};construct,a,new,code,default,jcache,operation,source,with,the,given,cache,manager,cache,resolver,and,key,generator,suppliers,applying,the,corresponding,default,if,a,supplier,is,not,resolvable,since,5,1;public,default,jcache,operation,source,nullable,supplier,cache,manager,cache,manager,nullable,supplier,cache,resolver,cache,resolver,nullable,supplier,cache,resolver,exception,cache,resolver,nullable,supplier,key,generator,key,generator,this,cache,manager,singleton,supplier,of,nullable,cache,manager,this,cache,resolver,singleton,supplier,of,nullable,cache,resolver,this,exception,cache,resolver,singleton,supplier,of,nullable,exception,cache,resolver,this,key,generator,new,singleton,supplier,key,generator,simple,key,generator,new
DefaultJCacheOperationSource -> public CacheResolver getCacheResolver();1414829215;Return the specified cache resolver to use, if any.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,specified,cache,resolver,to,use,if,any;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
DefaultJCacheOperationSource -> public CacheResolver getCacheResolver();1415018114;Return the specified cache resolver to use, if any.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,specified,cache,resolver,to,use,if,any;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
DefaultJCacheOperationSource -> public CacheResolver getCacheResolver();1427292728;Return the specified cache resolver to use, if any.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,specified,cache,resolver,to,use,if,any;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
DefaultJCacheOperationSource -> public CacheResolver getCacheResolver();1427445726;Return the specified cache resolver to use, if any.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,specified,cache,resolver,to,use,if,any;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
DefaultJCacheOperationSource -> public CacheResolver getCacheResolver();1440579854;Return the specified cache resolver to use, if any.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,specified,cache,resolver,to,use,if,any;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
DefaultJCacheOperationSource -> public void setCacheManager(@Nullable CacheManager cacheManager);1500448076;Set the default {@link CacheManager} to use to lookup cache by name. Only mandatory_if the {@linkplain CacheResolver cache resolvers} have not been set.;public void setCacheManager(@Nullable CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,default,link,cache,manager,to,use,to,lookup,cache,by,name,only,mandatory,if,the,linkplain,cache,resolver,cache,resolvers,have,not,been,set;public,void,set,cache,manager,nullable,cache,manager,cache,manager,this,cache,manager,cache,manager
DefaultJCacheOperationSource -> public void setCacheManager(@Nullable CacheManager cacheManager);1531589372;Set the default {@link CacheManager} to use to lookup cache by name._Only mandatory if the {@linkplain CacheResolver cache resolver} has not been set.;public void setCacheManager(@Nullable CacheManager cacheManager) {_		this.cacheManager = SingletonSupplier.ofNullable(cacheManager)__	};set,the,default,link,cache,manager,to,use,to,lookup,cache,by,name,only,mandatory,if,the,linkplain,cache,resolver,cache,resolver,has,not,been,set;public,void,set,cache,manager,nullable,cache,manager,cache,manager,this,cache,manager,singleton,supplier,of,nullable,cache,manager
DefaultJCacheOperationSource -> public void setCacheManager(@Nullable CacheManager cacheManager);1533034998;Set the default {@link CacheManager} to use to lookup cache by name._Only mandatory if the {@linkplain CacheResolver cache resolver} has not been set.;public void setCacheManager(@Nullable CacheManager cacheManager) {_		this.cacheManager = SingletonSupplier.ofNullable(cacheManager)__	};set,the,default,link,cache,manager,to,use,to,lookup,cache,by,name,only,mandatory,if,the,linkplain,cache,resolver,cache,resolver,has,not,been,set;public,void,set,cache,manager,nullable,cache,manager,cache,manager,this,cache,manager,singleton,supplier,of,nullable,cache,manager
DefaultJCacheOperationSource -> public void setCacheResolver(@Nullable CacheResolver cacheResolver);1500448076;Set the {@link CacheResolver} to resolve regular caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setCacheResolver(@Nullable CacheResolver cacheResolver) {_		this.cacheResolver = cacheResolver__	};set,the,link,cache,resolver,to,resolve,regular,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,cache,resolver,nullable,cache,resolver,cache,resolver,this,cache,resolver,cache,resolver
DefaultJCacheOperationSource -> public void setCacheResolver(@Nullable CacheResolver cacheResolver);1531589372;Set the {@link CacheResolver} to resolve regular caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setCacheResolver(@Nullable CacheResolver cacheResolver) {_		this.cacheResolver = SingletonSupplier.ofNullable(cacheResolver)__	};set,the,link,cache,resolver,to,resolve,regular,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,cache,resolver,nullable,cache,resolver,cache,resolver,this,cache,resolver,singleton,supplier,of,nullable,cache,resolver
DefaultJCacheOperationSource -> public void setCacheResolver(@Nullable CacheResolver cacheResolver);1533034998;Set the {@link CacheResolver} to resolve regular caches. If none is set, a default_implementation using the specified cache manager will be used.;public void setCacheResolver(@Nullable CacheResolver cacheResolver) {_		this.cacheResolver = SingletonSupplier.ofNullable(cacheResolver)__	};set,the,link,cache,resolver,to,resolve,regular,caches,if,none,is,set,a,default,implementation,using,the,specified,cache,manager,will,be,used;public,void,set,cache,resolver,nullable,cache,resolver,cache,resolver,this,cache,resolver,singleton,supplier,of,nullable,cache,resolver
DefaultJCacheOperationSource -> public void setCacheManager(CacheManager cacheManager);1396865240;Set the default {@link CacheManager} to use to lookup cache by name. Only mandatory_if the {@linkplain CacheResolver cache resolvers} have not been set.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,default,link,cache,manager,to,use,to,lookup,cache,by,name,only,mandatory,if,the,linkplain,cache,resolver,cache,resolvers,have,not,been,set;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
DefaultJCacheOperationSource -> public void setCacheManager(CacheManager cacheManager);1406128099;Set the default {@link CacheManager} to use to lookup cache by name. Only mandatory_if the {@linkplain CacheResolver cache resolvers} have not been set.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,default,link,cache,manager,to,use,to,lookup,cache,by,name,only,mandatory,if,the,linkplain,cache,resolver,cache,resolvers,have,not,been,set;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
DefaultJCacheOperationSource -> public void setCacheManager(CacheManager cacheManager);1414762650;Set the default {@link CacheManager} to use to lookup cache by name. Only mandatory_if the {@linkplain CacheResolver cache resolvers} have not been set.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,default,link,cache,manager,to,use,to,lookup,cache,by,name,only,mandatory,if,the,linkplain,cache,resolver,cache,resolvers,have,not,been,set;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
DefaultJCacheOperationSource -> public void setCacheManager(CacheManager cacheManager);1414826808;Set the default {@link CacheManager} to use to lookup cache by name. Only mandatory_if the {@linkplain CacheResolver cache resolvers} have not been set.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,default,link,cache,manager,to,use,to,lookup,cache,by,name,only,mandatory,if,the,linkplain,cache,resolver,cache,resolvers,have,not,been,set;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
DefaultJCacheOperationSource -> public void setCacheManager(CacheManager cacheManager);1414829215;Set the default {@link CacheManager} to use to lookup cache by name. Only mandatory_if the {@linkplain CacheResolver cache resolvers} have not been set.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,default,link,cache,manager,to,use,to,lookup,cache,by,name,only,mandatory,if,the,linkplain,cache,resolver,cache,resolvers,have,not,been,set;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
DefaultJCacheOperationSource -> public void setCacheManager(CacheManager cacheManager);1415018114;Set the default {@link CacheManager} to use to lookup cache by name. Only mandatory_if the {@linkplain CacheResolver cache resolvers} have not been set.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,default,link,cache,manager,to,use,to,lookup,cache,by,name,only,mandatory,if,the,linkplain,cache,resolver,cache,resolvers,have,not,been,set;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
DefaultJCacheOperationSource -> public void setCacheManager(CacheManager cacheManager);1427292728;Set the default {@link CacheManager} to use to lookup cache by name. Only mandatory_if the {@linkplain CacheResolver cache resolvers} have not been set.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,default,link,cache,manager,to,use,to,lookup,cache,by,name,only,mandatory,if,the,linkplain,cache,resolver,cache,resolvers,have,not,been,set;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
DefaultJCacheOperationSource -> public void setCacheManager(CacheManager cacheManager);1427445726;Set the default {@link CacheManager} to use to lookup cache by name. Only mandatory_if the {@linkplain CacheResolver cache resolvers} have not been set.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,default,link,cache,manager,to,use,to,lookup,cache,by,name,only,mandatory,if,the,linkplain,cache,resolver,cache,resolvers,have,not,been,set;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
DefaultJCacheOperationSource -> public void setCacheManager(CacheManager cacheManager);1440579854;Set the default {@link CacheManager} to use to lookup cache by name. Only mandatory_if the {@linkplain CacheResolver cache resolvers} have not been set.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,default,link,cache,manager,to,use,to,lookup,cache,by,name,only,mandatory,if,the,linkplain,cache,resolver,cache,resolvers,have,not,been,set;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
DefaultJCacheOperationSource -> public void setCacheManager(CacheManager cacheManager);1495868221;Set the default {@link CacheManager} to use to lookup cache by name. Only mandatory_if the {@linkplain CacheResolver cache resolvers} have not been set.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,default,link,cache,manager,to,use,to,lookup,cache,by,name,only,mandatory,if,the,linkplain,cache,resolver,cache,resolvers,have,not,been,set;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
DefaultJCacheOperationSource -> public KeyGenerator getKeyGenerator();1414829215;Return the specified key generator to use, if any.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,specified,key,generator,to,use,if,any;public,key,generator,get,key,generator,return,this,key,generator
DefaultJCacheOperationSource -> public KeyGenerator getKeyGenerator();1415018114;Return the specified key generator to use, if any.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,specified,key,generator,to,use,if,any;public,key,generator,get,key,generator,return,this,key,generator
DefaultJCacheOperationSource -> public KeyGenerator getKeyGenerator();1427292728;Return the specified key generator to use, if any.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,specified,key,generator,to,use,if,any;public,key,generator,get,key,generator,return,this,key,generator
DefaultJCacheOperationSource -> public KeyGenerator getKeyGenerator();1427445726;Return the specified key generator to use, if any.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,specified,key,generator,to,use,if,any;public,key,generator,get,key,generator,return,this,key,generator
DefaultJCacheOperationSource -> public KeyGenerator getKeyGenerator();1440579854;Return the specified key generator to use, if any.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,specified,key,generator,to,use,if,any;public,key,generator,get,key,generator,return,this,key,generator
DefaultJCacheOperationSource -> public KeyGenerator getKeyGenerator();1531589372;Return the specified key generator to use.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator.obtain()__	};return,the,specified,key,generator,to,use;public,key,generator,get,key,generator,return,this,key,generator,obtain
DefaultJCacheOperationSource -> public KeyGenerator getKeyGenerator();1533034998;Return the specified key generator to use.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator.obtain()__	};return,the,specified,key,generator,to,use;public,key,generator,get,key,generator,return,this,key,generator,obtain
DefaultJCacheOperationSource -> @Nullable 	public CacheResolver getCacheResolver();1495868221;Return the specified cache resolver to use, if any.;@Nullable_	public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,specified,cache,resolver,to,use,if,any;nullable,public,cache,resolver,get,cache,resolver,return,this,cache,resolver
DefaultJCacheOperationSource -> @Nullable 	public CacheResolver getCacheResolver();1500448076;Return the specified cache resolver to use, if any.;@Nullable_	public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,specified,cache,resolver,to,use,if,any;nullable,public,cache,resolver,get,cache,resolver,return,this,cache,resolver
DefaultJCacheOperationSource -> @Nullable 	public CacheResolver getCacheResolver();1531589372;Return the specified cache resolver to use, if any.;@Nullable_	public CacheResolver getCacheResolver() {_		return SupplierUtils.resolve(this.cacheResolver)__	};return,the,specified,cache,resolver,to,use,if,any;nullable,public,cache,resolver,get,cache,resolver,return,supplier,utils,resolve,this,cache,resolver
DefaultJCacheOperationSource -> @Nullable 	public CacheResolver getCacheResolver();1533034998;Return the specified cache resolver to use, if any.;@Nullable_	public CacheResolver getCacheResolver() {_		return SupplierUtils.resolve(this.cacheResolver)__	};return,the,specified,cache,resolver,to,use,if,any;nullable,public,cache,resolver,get,cache,resolver,return,supplier,utils,resolve,this,cache,resolver
DefaultJCacheOperationSource -> public CacheManager getCacheManager();1414829215;Return the specified cache manager to use, if any.;public CacheManager getCacheManager() {_		return this.cacheManager__	};return,the,specified,cache,manager,to,use,if,any;public,cache,manager,get,cache,manager,return,this,cache,manager
DefaultJCacheOperationSource -> public CacheManager getCacheManager();1415018114;Return the specified cache manager to use, if any.;public CacheManager getCacheManager() {_		return this.cacheManager__	};return,the,specified,cache,manager,to,use,if,any;public,cache,manager,get,cache,manager,return,this,cache,manager
DefaultJCacheOperationSource -> public CacheManager getCacheManager();1427292728;Return the specified cache manager to use, if any.;public CacheManager getCacheManager() {_		return this.cacheManager__	};return,the,specified,cache,manager,to,use,if,any;public,cache,manager,get,cache,manager,return,this,cache,manager
DefaultJCacheOperationSource -> public CacheManager getCacheManager();1427445726;Return the specified cache manager to use, if any.;public CacheManager getCacheManager() {_		return this.cacheManager__	};return,the,specified,cache,manager,to,use,if,any;public,cache,manager,get,cache,manager,return,this,cache,manager
DefaultJCacheOperationSource -> public CacheManager getCacheManager();1440579854;Return the specified cache manager to use, if any.;public CacheManager getCacheManager() {_		return this.cacheManager__	};return,the,specified,cache,manager,to,use,if,any;public,cache,manager,get,cache,manager,return,this,cache,manager
DefaultJCacheOperationSource -> public DefaultJCacheOperationSource();1531589372;Construct a new {@code DefaultJCacheOperationSource} with the default key generator._@see SimpleKeyGenerator;public DefaultJCacheOperationSource() {_		this.keyGenerator = SingletonSupplier.of(SimpleKeyGenerator::new)__	};construct,a,new,code,default,jcache,operation,source,with,the,default,key,generator,see,simple,key,generator;public,default,jcache,operation,source,this,key,generator,singleton,supplier,of,simple,key,generator,new
DefaultJCacheOperationSource -> public DefaultJCacheOperationSource();1533034998;Construct a new {@code DefaultJCacheOperationSource} with the default key generator._@see SimpleKeyGenerator;public DefaultJCacheOperationSource() {_		this.keyGenerator = SingletonSupplier.of(SimpleKeyGenerator::new)__	};construct,a,new,code,default,jcache,operation,source,with,the,default,key,generator,see,simple,key,generator;public,default,jcache,operation,source,this,key,generator,singleton,supplier,of,simple,key,generator,new
