# id;timestamp;commentText;codeText;commentWords;codeWords
SimpleMailMessage -> public SimpleMailMessage();1328020251;Create a new <code>SimpleMailMessage</code>.;public SimpleMailMessage() {_	};create,a,new,code,simple,mail,message,code;public,simple,mail,message
SimpleMailMessage -> public SimpleMailMessage();1356735495;Create a new {@code SimpleMailMessage}.;public SimpleMailMessage() {_	};create,a,new,code,simple,mail,message;public,simple,mail,message
SimpleMailMessage -> public SimpleMailMessage();1357119239;Create a new {@code SimpleMailMessage}.;public SimpleMailMessage() {_	};create,a,new,code,simple,mail,message;public,simple,mail,message
SimpleMailMessage -> public SimpleMailMessage();1368482696;Create a new {@code SimpleMailMessage}.;public SimpleMailMessage() {_	};create,a,new,code,simple,mail,message;public,simple,mail,message
SimpleMailMessage -> public SimpleMailMessage();1413848647;Create a new {@code SimpleMailMessage}.;public SimpleMailMessage() {_	};create,a,new,code,simple,mail,message;public,simple,mail,message
SimpleMailMessage -> public SimpleMailMessage();1496837955;Create a new {@code SimpleMailMessage}.;public SimpleMailMessage() {_	};create,a,new,code,simple,mail,message;public,simple,mail,message
SimpleMailMessage -> public SimpleMailMessage();1498780456;Create a new {@code SimpleMailMessage}.;public SimpleMailMessage() {_	};create,a,new,code,simple,mail,message;public,simple,mail,message
SimpleMailMessage -> public SimpleMailMessage();1500448076;Create a new {@code SimpleMailMessage}.;public SimpleMailMessage() {_	};create,a,new,code,simple,mail,message;public,simple,mail,message
SimpleMailMessage -> public SimpleMailMessage();1508620734;Create a new {@code SimpleMailMessage}.;public SimpleMailMessage() {_	};create,a,new,code,simple,mail,message;public,simple,mail,message
SimpleMailMessage -> public SimpleMailMessage();1522359844;Create a new {@code SimpleMailMessage}.;public SimpleMailMessage() {_	};create,a,new,code,simple,mail,message;public,simple,mail,message
SimpleMailMessage -> public SimpleMailMessage(SimpleMailMessage original);1328020251;Copy constructor for creating a new <code>SimpleMailMessage</code> from the state_of an existing <code>SimpleMailMessage</code> instance._@throws IllegalArgumentException if the supplied message is <code>null</code>;public SimpleMailMessage(SimpleMailMessage original) {_		Assert.notNull(original, "The 'original' message argument cannot be null")__		this.from = original.getFrom()__		this.replyTo = original.getReplyTo()__		if (original.getTo() != null) {_			this.to = copy(original.getTo())__		}_		if (original.getCc() != null) {_			this.cc = copy(original.getCc())__		}_		if (original.getBcc() != null) {_			this.bcc = copy(original.getBcc())__		}_		this.sentDate = original.getSentDate()__		this.subject = original.getSubject()__		this.text = original.getText()__	};copy,constructor,for,creating,a,new,code,simple,mail,message,code,from,the,state,of,an,existing,code,simple,mail,message,code,instance,throws,illegal,argument,exception,if,the,supplied,message,is,code,null,code;public,simple,mail,message,simple,mail,message,original,assert,not,null,original,the,original,message,argument,cannot,be,null,this,from,original,get,from,this,reply,to,original,get,reply,to,if,original,get,to,null,this,to,copy,original,get,to,if,original,get,cc,null,this,cc,copy,original,get,cc,if,original,get,bcc,null,this,bcc,copy,original,get,bcc,this,sent,date,original,get,sent,date,this,subject,original,get,subject,this,text,original,get,text
SimpleMailMessage -> public SimpleMailMessage(SimpleMailMessage original);1356735495;Copy constructor for creating a new {@code SimpleMailMessage} from the state_of an existing {@code SimpleMailMessage} instance._@throws IllegalArgumentException if the supplied message is {@code null};public SimpleMailMessage(SimpleMailMessage original) {_		Assert.notNull(original, "The 'original' message argument cannot be null")__		this.from = original.getFrom()__		this.replyTo = original.getReplyTo()__		if (original.getTo() != null) {_			this.to = copy(original.getTo())__		}_		if (original.getCc() != null) {_			this.cc = copy(original.getCc())__		}_		if (original.getBcc() != null) {_			this.bcc = copy(original.getBcc())__		}_		this.sentDate = original.getSentDate()__		this.subject = original.getSubject()__		this.text = original.getText()__	};copy,constructor,for,creating,a,new,code,simple,mail,message,from,the,state,of,an,existing,code,simple,mail,message,instance,throws,illegal,argument,exception,if,the,supplied,message,is,code,null;public,simple,mail,message,simple,mail,message,original,assert,not,null,original,the,original,message,argument,cannot,be,null,this,from,original,get,from,this,reply,to,original,get,reply,to,if,original,get,to,null,this,to,copy,original,get,to,if,original,get,cc,null,this,cc,copy,original,get,cc,if,original,get,bcc,null,this,bcc,copy,original,get,bcc,this,sent,date,original,get,sent,date,this,subject,original,get,subject,this,text,original,get,text
SimpleMailMessage -> public SimpleMailMessage(SimpleMailMessage original);1357119239;Copy constructor for creating a new {@code SimpleMailMessage} from the state_of an existing {@code SimpleMailMessage} instance._@throws IllegalArgumentException if the supplied message is {@code null};public SimpleMailMessage(SimpleMailMessage original) {_		Assert.notNull(original, "The 'original' message argument cannot be null")__		this.from = original.getFrom()__		this.replyTo = original.getReplyTo()__		if (original.getTo() != null) {_			this.to = copy(original.getTo())__		}_		if (original.getCc() != null) {_			this.cc = copy(original.getCc())__		}_		if (original.getBcc() != null) {_			this.bcc = copy(original.getBcc())__		}_		this.sentDate = original.getSentDate()__		this.subject = original.getSubject()__		this.text = original.getText()__	};copy,constructor,for,creating,a,new,code,simple,mail,message,from,the,state,of,an,existing,code,simple,mail,message,instance,throws,illegal,argument,exception,if,the,supplied,message,is,code,null;public,simple,mail,message,simple,mail,message,original,assert,not,null,original,the,original,message,argument,cannot,be,null,this,from,original,get,from,this,reply,to,original,get,reply,to,if,original,get,to,null,this,to,copy,original,get,to,if,original,get,cc,null,this,cc,copy,original,get,cc,if,original,get,bcc,null,this,bcc,copy,original,get,bcc,this,sent,date,original,get,sent,date,this,subject,original,get,subject,this,text,original,get,text
SimpleMailMessage -> public SimpleMailMessage(SimpleMailMessage original);1368482696;Copy constructor for creating a new {@code SimpleMailMessage} from the state_of an existing {@code SimpleMailMessage} instance._@throws IllegalArgumentException if the supplied message is {@code null};public SimpleMailMessage(SimpleMailMessage original) {_		Assert.notNull(original, "The 'original' message argument cannot be null")__		this.from = original.getFrom()__		this.replyTo = original.getReplyTo()__		if (original.getTo() != null) {_			this.to = copy(original.getTo())__		}_		if (original.getCc() != null) {_			this.cc = copy(original.getCc())__		}_		if (original.getBcc() != null) {_			this.bcc = copy(original.getBcc())__		}_		this.sentDate = original.getSentDate()__		this.subject = original.getSubject()__		this.text = original.getText()__	};copy,constructor,for,creating,a,new,code,simple,mail,message,from,the,state,of,an,existing,code,simple,mail,message,instance,throws,illegal,argument,exception,if,the,supplied,message,is,code,null;public,simple,mail,message,simple,mail,message,original,assert,not,null,original,the,original,message,argument,cannot,be,null,this,from,original,get,from,this,reply,to,original,get,reply,to,if,original,get,to,null,this,to,copy,original,get,to,if,original,get,cc,null,this,cc,copy,original,get,cc,if,original,get,bcc,null,this,bcc,copy,original,get,bcc,this,sent,date,original,get,sent,date,this,subject,original,get,subject,this,text,original,get,text
SimpleMailMessage -> public SimpleMailMessage(SimpleMailMessage original);1413848647;Copy constructor for creating a new {@code SimpleMailMessage} from the state_of an existing {@code SimpleMailMessage} instance._@throws IllegalArgumentException if the supplied message is {@code null};public SimpleMailMessage(SimpleMailMessage original) {_		Assert.notNull(original, "The 'original' message argument cannot be null")__		this.from = original.getFrom()__		this.replyTo = original.getReplyTo()__		if (original.getTo() != null) {_			this.to = copy(original.getTo())__		}_		if (original.getCc() != null) {_			this.cc = copy(original.getCc())__		}_		if (original.getBcc() != null) {_			this.bcc = copy(original.getBcc())__		}_		this.sentDate = original.getSentDate()__		this.subject = original.getSubject()__		this.text = original.getText()__	};copy,constructor,for,creating,a,new,code,simple,mail,message,from,the,state,of,an,existing,code,simple,mail,message,instance,throws,illegal,argument,exception,if,the,supplied,message,is,code,null;public,simple,mail,message,simple,mail,message,original,assert,not,null,original,the,original,message,argument,cannot,be,null,this,from,original,get,from,this,reply,to,original,get,reply,to,if,original,get,to,null,this,to,copy,original,get,to,if,original,get,cc,null,this,cc,copy,original,get,cc,if,original,get,bcc,null,this,bcc,copy,original,get,bcc,this,sent,date,original,get,sent,date,this,subject,original,get,subject,this,text,original,get,text
SimpleMailMessage -> public SimpleMailMessage(SimpleMailMessage original);1496837955;Copy constructor for creating a new {@code SimpleMailMessage} from the state_of an existing {@code SimpleMailMessage} instance.;public SimpleMailMessage(SimpleMailMessage original) {_		Assert.notNull(original, "'original' message argument must not be null")__		this.from = original.getFrom()__		this.replyTo = original.getReplyTo()__		if (original.getTo() != null) {_			this.to = copy(original.getTo())__		}_		if (original.getCc() != null) {_			this.cc = copy(original.getCc())__		}_		if (original.getBcc() != null) {_			this.bcc = copy(original.getBcc())__		}_		this.sentDate = original.getSentDate()__		this.subject = original.getSubject()__		this.text = original.getText()__	};copy,constructor,for,creating,a,new,code,simple,mail,message,from,the,state,of,an,existing,code,simple,mail,message,instance;public,simple,mail,message,simple,mail,message,original,assert,not,null,original,original,message,argument,must,not,be,null,this,from,original,get,from,this,reply,to,original,get,reply,to,if,original,get,to,null,this,to,copy,original,get,to,if,original,get,cc,null,this,cc,copy,original,get,cc,if,original,get,bcc,null,this,bcc,copy,original,get,bcc,this,sent,date,original,get,sent,date,this,subject,original,get,subject,this,text,original,get,text
SimpleMailMessage -> public SimpleMailMessage(SimpleMailMessage original);1498780456;Copy constructor for creating a new {@code SimpleMailMessage} from the state_of an existing {@code SimpleMailMessage} instance.;public SimpleMailMessage(SimpleMailMessage original) {_		Assert.notNull(original, "'original' message argument must not be null")__		this.from = original.getFrom()__		this.replyTo = original.getReplyTo()__		if (original.getTo() != null) {_			this.to = copy(original.getTo())__		}_		if (original.getCc() != null) {_			this.cc = copy(original.getCc())__		}_		if (original.getBcc() != null) {_			this.bcc = copy(original.getBcc())__		}_		this.sentDate = original.getSentDate()__		this.subject = original.getSubject()__		this.text = original.getText()__	};copy,constructor,for,creating,a,new,code,simple,mail,message,from,the,state,of,an,existing,code,simple,mail,message,instance;public,simple,mail,message,simple,mail,message,original,assert,not,null,original,original,message,argument,must,not,be,null,this,from,original,get,from,this,reply,to,original,get,reply,to,if,original,get,to,null,this,to,copy,original,get,to,if,original,get,cc,null,this,cc,copy,original,get,cc,if,original,get,bcc,null,this,bcc,copy,original,get,bcc,this,sent,date,original,get,sent,date,this,subject,original,get,subject,this,text,original,get,text
SimpleMailMessage -> public SimpleMailMessage(SimpleMailMessage original);1500448076;Copy constructor for creating a new {@code SimpleMailMessage} from the state_of an existing {@code SimpleMailMessage} instance.;public SimpleMailMessage(SimpleMailMessage original) {_		Assert.notNull(original, "'original' message argument must not be null")__		this.from = original.getFrom()__		this.replyTo = original.getReplyTo()__		if (original.getTo() != null) {_			this.to = copy(original.getTo())__		}_		if (original.getCc() != null) {_			this.cc = copy(original.getCc())__		}_		if (original.getBcc() != null) {_			this.bcc = copy(original.getBcc())__		}_		this.sentDate = original.getSentDate()__		this.subject = original.getSubject()__		this.text = original.getText()__	};copy,constructor,for,creating,a,new,code,simple,mail,message,from,the,state,of,an,existing,code,simple,mail,message,instance;public,simple,mail,message,simple,mail,message,original,assert,not,null,original,original,message,argument,must,not,be,null,this,from,original,get,from,this,reply,to,original,get,reply,to,if,original,get,to,null,this,to,copy,original,get,to,if,original,get,cc,null,this,cc,copy,original,get,cc,if,original,get,bcc,null,this,bcc,copy,original,get,bcc,this,sent,date,original,get,sent,date,this,subject,original,get,subject,this,text,original,get,text
SimpleMailMessage -> public SimpleMailMessage(SimpleMailMessage original);1508620734;Copy constructor for creating a new {@code SimpleMailMessage} from the state_of an existing {@code SimpleMailMessage} instance.;public SimpleMailMessage(SimpleMailMessage original) {_		Assert.notNull(original, "'original' message argument must not be null")__		this.from = original.getFrom()__		this.replyTo = original.getReplyTo()__		if (original.getTo() != null) {_			this.to = copy(original.getTo())__		}_		if (original.getCc() != null) {_			this.cc = copy(original.getCc())__		}_		if (original.getBcc() != null) {_			this.bcc = copy(original.getBcc())__		}_		this.sentDate = original.getSentDate()__		this.subject = original.getSubject()__		this.text = original.getText()__	};copy,constructor,for,creating,a,new,code,simple,mail,message,from,the,state,of,an,existing,code,simple,mail,message,instance;public,simple,mail,message,simple,mail,message,original,assert,not,null,original,original,message,argument,must,not,be,null,this,from,original,get,from,this,reply,to,original,get,reply,to,if,original,get,to,null,this,to,copy,original,get,to,if,original,get,cc,null,this,cc,copy,original,get,cc,if,original,get,bcc,null,this,bcc,copy,original,get,bcc,this,sent,date,original,get,sent,date,this,subject,original,get,subject,this,text,original,get,text
SimpleMailMessage -> public SimpleMailMessage(SimpleMailMessage original);1522359844;Copy constructor for creating a new {@code SimpleMailMessage} from the state_of an existing {@code SimpleMailMessage} instance.;public SimpleMailMessage(SimpleMailMessage original) {_		Assert.notNull(original, "'original' message argument must not be null")__		this.from = original.getFrom()__		this.replyTo = original.getReplyTo()__		this.to = copyOrNull(original.getTo())__		this.cc = copyOrNull(original.getCc())__		this.bcc = copyOrNull(original.getBcc())__		this.sentDate = original.getSentDate()__		this.subject = original.getSubject()__		this.text = original.getText()__	};copy,constructor,for,creating,a,new,code,simple,mail,message,from,the,state,of,an,existing,code,simple,mail,message,instance;public,simple,mail,message,simple,mail,message,original,assert,not,null,original,original,message,argument,must,not,be,null,this,from,original,get,from,this,reply,to,original,get,reply,to,this,to,copy,or,null,original,get,to,this,cc,copy,or,null,original,get,cc,this,bcc,copy,or,null,original,get,bcc,this,sent,date,original,get,sent,date,this,subject,original,get,subject,this,text,original,get,text
SimpleMailMessage -> public void copyTo(MailMessage target);1328020251;Copy the contents of this message to the given target message._@param target the <code>MailMessage</code> to copy to_@throws IllegalArgumentException if the supplied <code>target</code> is <code>null</code>;public void copyTo(MailMessage target) {_		Assert.notNull(target, "The 'target' message argument cannot be null")__		if (getFrom() != null) {_			target.setFrom(getFrom())__		}_		if (getReplyTo() != null) {_			target.setReplyTo(getReplyTo())__		}_		if (getTo() != null) {_			target.setTo(getTo())__		}_		if (getCc() != null) {_			target.setCc(getCc())__		}_		if (getBcc() != null) {_			target.setBcc(getBcc())__		}_		if (getSentDate() != null) {_			target.setSentDate(getSentDate())__		}_		if (getSubject() != null) {_			target.setSubject(getSubject())__		}_		if (getText() != null) {_			target.setText(getText())__		}_	};copy,the,contents,of,this,message,to,the,given,target,message,param,target,the,code,mail,message,code,to,copy,to,throws,illegal,argument,exception,if,the,supplied,code,target,code,is,code,null,code;public,void,copy,to,mail,message,target,assert,not,null,target,the,target,message,argument,cannot,be,null,if,get,from,null,target,set,from,get,from,if,get,reply,to,null,target,set,reply,to,get,reply,to,if,get,to,null,target,set,to,get,to,if,get,cc,null,target,set,cc,get,cc,if,get,bcc,null,target,set,bcc,get,bcc,if,get,sent,date,null,target,set,sent,date,get,sent,date,if,get,subject,null,target,set,subject,get,subject,if,get,text,null,target,set,text,get,text
SimpleMailMessage -> public void copyTo(MailMessage target);1356735495;Copy the contents of this message to the given target message._@param target the {@code MailMessage} to copy to_@throws IllegalArgumentException if the supplied {@code target} is {@code null};public void copyTo(MailMessage target) {_		Assert.notNull(target, "The 'target' message argument cannot be null")__		if (getFrom() != null) {_			target.setFrom(getFrom())__		}_		if (getReplyTo() != null) {_			target.setReplyTo(getReplyTo())__		}_		if (getTo() != null) {_			target.setTo(getTo())__		}_		if (getCc() != null) {_			target.setCc(getCc())__		}_		if (getBcc() != null) {_			target.setBcc(getBcc())__		}_		if (getSentDate() != null) {_			target.setSentDate(getSentDate())__		}_		if (getSubject() != null) {_			target.setSubject(getSubject())__		}_		if (getText() != null) {_			target.setText(getText())__		}_	};copy,the,contents,of,this,message,to,the,given,target,message,param,target,the,code,mail,message,to,copy,to,throws,illegal,argument,exception,if,the,supplied,code,target,is,code,null;public,void,copy,to,mail,message,target,assert,not,null,target,the,target,message,argument,cannot,be,null,if,get,from,null,target,set,from,get,from,if,get,reply,to,null,target,set,reply,to,get,reply,to,if,get,to,null,target,set,to,get,to,if,get,cc,null,target,set,cc,get,cc,if,get,bcc,null,target,set,bcc,get,bcc,if,get,sent,date,null,target,set,sent,date,get,sent,date,if,get,subject,null,target,set,subject,get,subject,if,get,text,null,target,set,text,get,text
SimpleMailMessage -> public void copyTo(MailMessage target);1357119239;Copy the contents of this message to the given target message._@param target the {@code MailMessage} to copy to_@throws IllegalArgumentException if the supplied {@code target} is {@code null};public void copyTo(MailMessage target) {_		Assert.notNull(target, "The 'target' message argument cannot be null")__		if (getFrom() != null) {_			target.setFrom(getFrom())__		}_		if (getReplyTo() != null) {_			target.setReplyTo(getReplyTo())__		}_		if (getTo() != null) {_			target.setTo(getTo())__		}_		if (getCc() != null) {_			target.setCc(getCc())__		}_		if (getBcc() != null) {_			target.setBcc(getBcc())__		}_		if (getSentDate() != null) {_			target.setSentDate(getSentDate())__		}_		if (getSubject() != null) {_			target.setSubject(getSubject())__		}_		if (getText() != null) {_			target.setText(getText())__		}_	};copy,the,contents,of,this,message,to,the,given,target,message,param,target,the,code,mail,message,to,copy,to,throws,illegal,argument,exception,if,the,supplied,code,target,is,code,null;public,void,copy,to,mail,message,target,assert,not,null,target,the,target,message,argument,cannot,be,null,if,get,from,null,target,set,from,get,from,if,get,reply,to,null,target,set,reply,to,get,reply,to,if,get,to,null,target,set,to,get,to,if,get,cc,null,target,set,cc,get,cc,if,get,bcc,null,target,set,bcc,get,bcc,if,get,sent,date,null,target,set,sent,date,get,sent,date,if,get,subject,null,target,set,subject,get,subject,if,get,text,null,target,set,text,get,text
SimpleMailMessage -> public void copyTo(MailMessage target);1368482696;Copy the contents of this message to the given target message._@param target the {@code MailMessage} to copy to_@throws IllegalArgumentException if the supplied {@code target} is {@code null};public void copyTo(MailMessage target) {_		Assert.notNull(target, "The 'target' message argument cannot be null")__		if (getFrom() != null) {_			target.setFrom(getFrom())__		}_		if (getReplyTo() != null) {_			target.setReplyTo(getReplyTo())__		}_		if (getTo() != null) {_			target.setTo(getTo())__		}_		if (getCc() != null) {_			target.setCc(getCc())__		}_		if (getBcc() != null) {_			target.setBcc(getBcc())__		}_		if (getSentDate() != null) {_			target.setSentDate(getSentDate())__		}_		if (getSubject() != null) {_			target.setSubject(getSubject())__		}_		if (getText() != null) {_			target.setText(getText())__		}_	};copy,the,contents,of,this,message,to,the,given,target,message,param,target,the,code,mail,message,to,copy,to,throws,illegal,argument,exception,if,the,supplied,code,target,is,code,null;public,void,copy,to,mail,message,target,assert,not,null,target,the,target,message,argument,cannot,be,null,if,get,from,null,target,set,from,get,from,if,get,reply,to,null,target,set,reply,to,get,reply,to,if,get,to,null,target,set,to,get,to,if,get,cc,null,target,set,cc,get,cc,if,get,bcc,null,target,set,bcc,get,bcc,if,get,sent,date,null,target,set,sent,date,get,sent,date,if,get,subject,null,target,set,subject,get,subject,if,get,text,null,target,set,text,get,text
SimpleMailMessage -> public void copyTo(MailMessage target);1413848647;Copy the contents of this message to the given target message._@param target the {@code MailMessage} to copy to_@throws IllegalArgumentException if the supplied {@code target} is {@code null};public void copyTo(MailMessage target) {_		Assert.notNull(target, "The 'target' message argument cannot be null")__		if (getFrom() != null) {_			target.setFrom(getFrom())__		}_		if (getReplyTo() != null) {_			target.setReplyTo(getReplyTo())__		}_		if (getTo() != null) {_			target.setTo(getTo())__		}_		if (getCc() != null) {_			target.setCc(getCc())__		}_		if (getBcc() != null) {_			target.setBcc(getBcc())__		}_		if (getSentDate() != null) {_			target.setSentDate(getSentDate())__		}_		if (getSubject() != null) {_			target.setSubject(getSubject())__		}_		if (getText() != null) {_			target.setText(getText())__		}_	};copy,the,contents,of,this,message,to,the,given,target,message,param,target,the,code,mail,message,to,copy,to,throws,illegal,argument,exception,if,the,supplied,code,target,is,code,null;public,void,copy,to,mail,message,target,assert,not,null,target,the,target,message,argument,cannot,be,null,if,get,from,null,target,set,from,get,from,if,get,reply,to,null,target,set,reply,to,get,reply,to,if,get,to,null,target,set,to,get,to,if,get,cc,null,target,set,cc,get,cc,if,get,bcc,null,target,set,bcc,get,bcc,if,get,sent,date,null,target,set,sent,date,get,sent,date,if,get,subject,null,target,set,subject,get,subject,if,get,text,null,target,set,text,get,text
SimpleMailMessage -> public void copyTo(MailMessage target);1496837955;Copy the contents of this message to the given target message._@param target the {@code MailMessage} to copy to_@throws IllegalArgumentException if the supplied {@code target} is {@code null};public void copyTo(MailMessage target) {_		Assert.notNull(target, "The 'target' message argument cannot be null")__		if (getFrom() != null) {_			target.setFrom(getFrom())__		}_		if (getReplyTo() != null) {_			target.setReplyTo(getReplyTo())__		}_		if (getTo() != null) {_			target.setTo(getTo())__		}_		if (getCc() != null) {_			target.setCc(getCc())__		}_		if (getBcc() != null) {_			target.setBcc(getBcc())__		}_		if (getSentDate() != null) {_			target.setSentDate(getSentDate())__		}_		if (getSubject() != null) {_			target.setSubject(getSubject())__		}_		if (getText() != null) {_			target.setText(getText())__		}_	};copy,the,contents,of,this,message,to,the,given,target,message,param,target,the,code,mail,message,to,copy,to,throws,illegal,argument,exception,if,the,supplied,code,target,is,code,null;public,void,copy,to,mail,message,target,assert,not,null,target,the,target,message,argument,cannot,be,null,if,get,from,null,target,set,from,get,from,if,get,reply,to,null,target,set,reply,to,get,reply,to,if,get,to,null,target,set,to,get,to,if,get,cc,null,target,set,cc,get,cc,if,get,bcc,null,target,set,bcc,get,bcc,if,get,sent,date,null,target,set,sent,date,get,sent,date,if,get,subject,null,target,set,subject,get,subject,if,get,text,null,target,set,text,get,text
SimpleMailMessage -> public void copyTo(MailMessage target);1498780456;Copy the contents of this message to the given target message._@param target the {@code MailMessage} to copy to_@throws IllegalArgumentException if the supplied {@code target} is {@code null};public void copyTo(MailMessage target) {_		Assert.notNull(target, "The 'target' message argument cannot be null")__		if (getFrom() != null) {_			target.setFrom(getFrom())__		}_		if (getReplyTo() != null) {_			target.setReplyTo(getReplyTo())__		}_		if (getTo() != null) {_			target.setTo(getTo())__		}_		if (getCc() != null) {_			target.setCc(getCc())__		}_		if (getBcc() != null) {_			target.setBcc(getBcc())__		}_		if (getSentDate() != null) {_			target.setSentDate(getSentDate())__		}_		if (getSubject() != null) {_			target.setSubject(getSubject())__		}_		if (getText() != null) {_			target.setText(getText())__		}_	};copy,the,contents,of,this,message,to,the,given,target,message,param,target,the,code,mail,message,to,copy,to,throws,illegal,argument,exception,if,the,supplied,code,target,is,code,null;public,void,copy,to,mail,message,target,assert,not,null,target,the,target,message,argument,cannot,be,null,if,get,from,null,target,set,from,get,from,if,get,reply,to,null,target,set,reply,to,get,reply,to,if,get,to,null,target,set,to,get,to,if,get,cc,null,target,set,cc,get,cc,if,get,bcc,null,target,set,bcc,get,bcc,if,get,sent,date,null,target,set,sent,date,get,sent,date,if,get,subject,null,target,set,subject,get,subject,if,get,text,null,target,set,text,get,text
SimpleMailMessage -> public void copyTo(MailMessage target);1500448076;Copy the contents of this message to the given target message._@param target the {@code MailMessage} to copy to_@throws IllegalArgumentException if the supplied {@code target} is {@code null};public void copyTo(MailMessage target) {_		Assert.notNull(target, "The 'target' message argument cannot be null")__		if (getFrom() != null) {_			target.setFrom(getFrom())__		}_		if (getReplyTo() != null) {_			target.setReplyTo(getReplyTo())__		}_		if (getTo() != null) {_			target.setTo(getTo())__		}_		if (getCc() != null) {_			target.setCc(getCc())__		}_		if (getBcc() != null) {_			target.setBcc(getBcc())__		}_		if (getSentDate() != null) {_			target.setSentDate(getSentDate())__		}_		if (getSubject() != null) {_			target.setSubject(getSubject())__		}_		if (getText() != null) {_			target.setText(getText())__		}_	};copy,the,contents,of,this,message,to,the,given,target,message,param,target,the,code,mail,message,to,copy,to,throws,illegal,argument,exception,if,the,supplied,code,target,is,code,null;public,void,copy,to,mail,message,target,assert,not,null,target,the,target,message,argument,cannot,be,null,if,get,from,null,target,set,from,get,from,if,get,reply,to,null,target,set,reply,to,get,reply,to,if,get,to,null,target,set,to,get,to,if,get,cc,null,target,set,cc,get,cc,if,get,bcc,null,target,set,bcc,get,bcc,if,get,sent,date,null,target,set,sent,date,get,sent,date,if,get,subject,null,target,set,subject,get,subject,if,get,text,null,target,set,text,get,text
SimpleMailMessage -> public void copyTo(MailMessage target);1508620734;Copy the contents of this message to the given target message._@param target the {@code MailMessage} to copy to;public void copyTo(MailMessage target) {_		Assert.notNull(target, "'target' message argument must not be null")__		if (getFrom() != null) {_			target.setFrom(getFrom())__		}_		if (getReplyTo() != null) {_			target.setReplyTo(getReplyTo())__		}_		if (getTo() != null) {_			target.setTo(getTo())__		}_		if (getCc() != null) {_			target.setCc(getCc())__		}_		if (getBcc() != null) {_			target.setBcc(getBcc())__		}_		if (getSentDate() != null) {_			target.setSentDate(getSentDate())__		}_		if (getSubject() != null) {_			target.setSubject(getSubject())__		}_		if (getText() != null) {_			target.setText(getText())__		}_	};copy,the,contents,of,this,message,to,the,given,target,message,param,target,the,code,mail,message,to,copy,to;public,void,copy,to,mail,message,target,assert,not,null,target,target,message,argument,must,not,be,null,if,get,from,null,target,set,from,get,from,if,get,reply,to,null,target,set,reply,to,get,reply,to,if,get,to,null,target,set,to,get,to,if,get,cc,null,target,set,cc,get,cc,if,get,bcc,null,target,set,bcc,get,bcc,if,get,sent,date,null,target,set,sent,date,get,sent,date,if,get,subject,null,target,set,subject,get,subject,if,get,text,null,target,set,text,get,text
SimpleMailMessage -> public void copyTo(MailMessage target);1522359844;Copy the contents of this message to the given target message._@param target the {@code MailMessage} to copy to;public void copyTo(MailMessage target) {_		Assert.notNull(target, "'target' MailMessage must not be null")__		if (getFrom() != null) {_			target.setFrom(getFrom())__		}_		if (getReplyTo() != null) {_			target.setReplyTo(getReplyTo())__		}_		if (getTo() != null) {_			target.setTo(copy(getTo()))__		}_		if (getCc() != null) {_			target.setCc(copy(getCc()))__		}_		if (getBcc() != null) {_			target.setBcc(copy(getBcc()))__		}_		if (getSentDate() != null) {_			target.setSentDate(getSentDate())__		}_		if (getSubject() != null) {_			target.setSubject(getSubject())__		}_		if (getText() != null) {_			target.setText(getText())__		}_	};copy,the,contents,of,this,message,to,the,given,target,message,param,target,the,code,mail,message,to,copy,to;public,void,copy,to,mail,message,target,assert,not,null,target,target,mail,message,must,not,be,null,if,get,from,null,target,set,from,get,from,if,get,reply,to,null,target,set,reply,to,get,reply,to,if,get,to,null,target,set,to,copy,get,to,if,get,cc,null,target,set,cc,copy,get,cc,if,get,bcc,null,target,set,bcc,copy,get,bcc,if,get,sent,date,null,target,set,sent,date,get,sent,date,if,get,subject,null,target,set,subject,get,subject,if,get,text,null,target,set,text,get,text
