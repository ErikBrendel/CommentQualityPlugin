commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void setFrom(String from) {     this.from = from. }
false;public;0;4;;@Nullable public String getFrom() {     return this.from. }
false;public;1;4;;@Override public void setReplyTo(String replyTo) {     this.replyTo = replyTo. }
false;public;0;4;;@Nullable public String getReplyTo() {     return this.replyTo. }
false;public;1;4;;@Override public void setTo(String to) {     this.to = new String[] { to }. }
false;public;1;4;;@Override public void setTo(String... to) {     this.to = to. }
false;public;0;4;;@Nullable public String[] getTo() {     return this.to. }
false;public;1;4;;@Override public void setCc(String cc) {     this.cc = new String[] { cc }. }
false;public;1;4;;@Override public void setCc(String... cc) {     this.cc = cc. }
false;public;0;4;;@Nullable public String[] getCc() {     return this.cc. }
false;public;1;4;;@Override public void setBcc(String bcc) {     this.bcc = new String[] { bcc }. }
false;public;1;4;;@Override public void setBcc(String... bcc) {     this.bcc = bcc. }
false;public;0;4;;@Nullable public String[] getBcc() {     return this.bcc. }
false;public;1;4;;@Override public void setSentDate(Date sentDate) {     this.sentDate = sentDate. }
false;public;0;4;;@Nullable public Date getSentDate() {     return this.sentDate. }
false;public;1;4;;@Override public void setSubject(String subject) {     this.subject = subject. }
false;public;0;4;;@Nullable public String getSubject() {     return this.subject. }
false;public;1;4;;@Override public void setText(String text) {     this.text = text. }
false;public;0;4;;@Nullable public String getText() {     return this.text. }
true;public;1;27;/**  * Copy the contents of this message to the given target message.  * @param target the {@code MailMessage} to copy to  */ ;/**  * Copy the contents of this message to the given target message.  * @param target the {@code MailMessage} to copy to  */ public void copyTo(MailMessage target) {     Assert.notNull(target, "'target' MailMessage must not be null").     if (getFrom() != null) {         target.setFrom(getFrom()).     }     if (getReplyTo() != null) {         target.setReplyTo(getReplyTo()).     }     if (getTo() != null) {         target.setTo(copy(getTo())).     }     if (getCc() != null) {         target.setCc(copy(getCc())).     }     if (getBcc() != null) {         target.setBcc(copy(getBcc())).     }     if (getSentDate() != null) {         target.setSentDate(getSentDate()).     }     if (getSubject() != null) {         target.setSubject(getSubject()).     }     if (getText() != null) {         target.setText(getText()).     } }
false;public;1;18;;@Override public boolean equals(Object other) {     if (this == other) {         return true.     }     if (!(other instanceof SimpleMailMessage)) {         return false.     }     SimpleMailMessage otherMessage = (SimpleMailMessage) other.     return (ObjectUtils.nullSafeEquals(this.from, otherMessage.from) && ObjectUtils.nullSafeEquals(this.replyTo, otherMessage.replyTo) && ObjectUtils.nullSafeEquals(this.to, otherMessage.to) && ObjectUtils.nullSafeEquals(this.cc, otherMessage.cc) && ObjectUtils.nullSafeEquals(this.bcc, otherMessage.bcc) && ObjectUtils.nullSafeEquals(this.sentDate, otherMessage.sentDate) && ObjectUtils.nullSafeEquals(this.subject, otherMessage.subject) && ObjectUtils.nullSafeEquals(this.text, otherMessage.text)). }
false;public;0;11;;@Override public int hashCode() {     int hashCode = ObjectUtils.nullSafeHashCode(this.from).     hashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(this.replyTo).     hashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(this.to).     hashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(this.cc).     hashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(this.bcc).     hashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(this.sentDate).     hashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(this.subject).     return hashCode. }
false;public;0;13;;@Override public String toString() {     StringBuilder sb = new StringBuilder("SimpleMailMessage: ").     sb.append("from=").append(this.from).append(". ").     sb.append("replyTo=").append(this.replyTo).append(". ").     sb.append("to=").append(StringUtils.arrayToCommaDelimitedString(this.to)).append(". ").     sb.append("cc=").append(StringUtils.arrayToCommaDelimitedString(this.cc)).append(". ").     sb.append("bcc=").append(StringUtils.arrayToCommaDelimitedString(this.bcc)).append(". ").     sb.append("sentDate=").append(this.sentDate).append(". ").     sb.append("subject=").append(this.subject).append(". ").     sb.append("text=").append(this.text).     return sb.toString(). }
false;private,static;1;7;;@Nullable private static String[] copyOrNull(@Nullable String[] state) {     if (state == null) {         return null.     }     return copy(state). }
false;private,static;1;5;;private static String[] copy(String[] state) {     String[] copy = new String[state.length].     System.arraycopy(state, 0, copy, 0, state.length).     return copy. }
