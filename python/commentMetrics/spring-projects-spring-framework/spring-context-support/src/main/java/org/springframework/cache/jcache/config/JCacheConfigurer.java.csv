commented;modifiers;parameterAmount;loc;comment;code
true;;0;2;/**  * Return the {@link CacheResolver} bean to use to resolve exception caches for  * annotation-driven cache management. Implementations must explicitly declare  * {@link org.springframework.context.annotation.Bean @Bean}, e.g.  * <pre class="code">  * &#064.Configuration  * &#064.EnableCaching  * public class AppConfig extends JCacheConfigurerSupport {  *     &#064.Bean // important!  *     &#064.Override  *     public CacheResolver exceptionCacheResolver() {  *         // configure and return CacheResolver instance  *     }  *     // ...  * }  * </pre>  * See {@link org.springframework.cache.annotation.EnableCaching} for more complete examples.  */ ;/**  * Return the {@link CacheResolver} bean to use to resolve exception caches for  * annotation-driven cache management. Implementations must explicitly declare  * {@link org.springframework.context.annotation.Bean @Bean}, e.g.  * <pre class="code">  * &#064.Configuration  * &#064.EnableCaching  * public class AppConfig extends JCacheConfigurerSupport {  *     &#064.Bean // important!  *     &#064.Override  *     public CacheResolver exceptionCacheResolver() {  *         // configure and return CacheResolver instance  *     }  *     // ...  * }  * </pre>  * See {@link org.springframework.cache.annotation.EnableCaching} for more complete examples.  */ @Nullable CacheResolver exceptionCacheResolver().
