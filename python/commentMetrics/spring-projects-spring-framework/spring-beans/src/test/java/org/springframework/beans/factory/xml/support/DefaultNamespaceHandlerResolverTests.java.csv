commented;modifiers;parameterAmount;loc;comment;code
false;public;0;7;;@Test public void testResolvedMappedHandler() {     DefaultNamespaceHandlerResolver resolver = new DefaultNamespaceHandlerResolver(getClass().getClassLoader()).     NamespaceHandler handler = resolver.resolve("http://www.springframework.org/schema/util").     assertNotNull("Handler should not be null.", handler).     assertEquals("Incorrect handler loaded", UtilNamespaceHandler.class, handler.getClass()). }
false;public;0;7;;@Test public void testResolvedMappedHandlerWithNoArgCtor() {     DefaultNamespaceHandlerResolver resolver = new DefaultNamespaceHandlerResolver().     NamespaceHandler handler = resolver.resolve("http://www.springframework.org/schema/util").     assertNotNull("Handler should not be null.", handler).     assertEquals("Incorrect handler loaded", UtilNamespaceHandler.class, handler.getClass()). }
false;public;0;11;;@Test public void testNonExistentHandlerClass() throws Exception {     String mappingPath = "org/springframework/beans/factory/xml/support/nonExistent.properties".     try {         new DefaultNamespaceHandlerResolver(getClass().getClassLoader(), mappingPath).     // pass     } catch (Throwable ex) {         fail("Non-existent handler classes must be ignored: " + ex).     } }
false;public;0;10;;@Test public void testResolveInvalidHandler() throws Exception {     String mappingPath = "org/springframework/beans/factory/xml/support/invalid.properties".     try {         new DefaultNamespaceHandlerResolver(getClass().getClassLoader(), mappingPath).         fail("Should not be able to map a class that doesn't implement NamespaceHandler").     } catch (Throwable expected) {     } }
false;public;0;5;;@Test public void testCtorWithNullClassLoaderArgument() throws Exception {     // simply must not bail...     new DefaultNamespaceHandlerResolver(null). }
false;public;0;4;;@Test(expected = IllegalArgumentException.class) public void testCtorWithNullClassLoaderArgumentAndNullMappingLocationArgument() throws Exception {     new DefaultNamespaceHandlerResolver(null, null). }
false;public;0;5;;@Test public void testCtorWithNonExistentMappingLocationArgument() throws Exception {     // simply must not bail. we don't want non-existent resources to result in an Exception     new DefaultNamespaceHandlerResolver(null, "738trbc bobabloobop871"). }
