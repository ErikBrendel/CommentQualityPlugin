commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void byTypeAutowireWithAutoSelfExclusion() throws Exception {     CountingFactory.reset().     DefaultListableBeanFactory beanFactory = getBeanFactory("autowire-with-exclusion.xml").     beanFactory.preInstantiateSingletons().     TestBean rob = (TestBean) beanFactory.getBean("rob").     TestBean sally = (TestBean) beanFactory.getBean("sally").     assertEquals(sally, rob.getSpouse()).     assertEquals(1, CountingFactory.getFactoryBeanInstanceCount()). }
false;public;0;9;;@Test public void byTypeAutowireWithExclusion() throws Exception {     CountingFactory.reset().     DefaultListableBeanFactory beanFactory = getBeanFactory("autowire-with-exclusion.xml").     beanFactory.preInstantiateSingletons().     TestBean rob = (TestBean) beanFactory.getBean("rob").     assertEquals("props1", rob.getSomeProperties().getProperty("name")).     assertEquals(1, CountingFactory.getFactoryBeanInstanceCount()). }
false;public;0;14;;@Test public void byTypeAutowireWithExclusionInParentFactory() throws Exception {     CountingFactory.reset().     DefaultListableBeanFactory parent = getBeanFactory("autowire-with-exclusion.xml").     parent.preInstantiateSingletons().     DefaultListableBeanFactory child = new DefaultListableBeanFactory(parent).     RootBeanDefinition robDef = new RootBeanDefinition(TestBean.class).     robDef.setAutowireMode(RootBeanDefinition.AUTOWIRE_BY_TYPE).     robDef.getPropertyValues().add("spouse", new RuntimeBeanReference("sally")).     child.registerBeanDefinition("rob2", robDef).     TestBean rob = (TestBean) child.getBean("rob2").     assertEquals("props1", rob.getSomeProperties().getProperty("name")).     assertEquals(1, CountingFactory.getFactoryBeanInstanceCount()). }
false;public;0;18;;@Test public void byTypeAutowireWithPrimaryInParentFactory() throws Exception {     CountingFactory.reset().     DefaultListableBeanFactory parent = getBeanFactory("autowire-with-exclusion.xml").     parent.getBeanDefinition("props1").setPrimary(true).     parent.preInstantiateSingletons().     DefaultListableBeanFactory child = new DefaultListableBeanFactory(parent).     RootBeanDefinition robDef = new RootBeanDefinition(TestBean.class).     robDef.setAutowireMode(RootBeanDefinition.AUTOWIRE_BY_TYPE).     robDef.getPropertyValues().add("spouse", new RuntimeBeanReference("sally")).     child.registerBeanDefinition("rob2", robDef).     RootBeanDefinition propsDef = new RootBeanDefinition(PropertiesFactoryBean.class).     propsDef.getPropertyValues().add("properties", "name=props3").     child.registerBeanDefinition("props3", propsDef).     TestBean rob = (TestBean) child.getBean("rob2").     assertEquals("props1", rob.getSomeProperties().getProperty("name")).     assertEquals(1, CountingFactory.getFactoryBeanInstanceCount()). }
false;public;0;18;;@Test public void byTypeAutowireWithPrimaryOverridingParentFactory() throws Exception {     CountingFactory.reset().     DefaultListableBeanFactory parent = getBeanFactory("autowire-with-exclusion.xml").     parent.preInstantiateSingletons().     DefaultListableBeanFactory child = new DefaultListableBeanFactory(parent).     RootBeanDefinition robDef = new RootBeanDefinition(TestBean.class).     robDef.setAutowireMode(RootBeanDefinition.AUTOWIRE_BY_TYPE).     robDef.getPropertyValues().add("spouse", new RuntimeBeanReference("sally")).     child.registerBeanDefinition("rob2", robDef).     RootBeanDefinition propsDef = new RootBeanDefinition(PropertiesFactoryBean.class).     propsDef.getPropertyValues().add("properties", "name=props3").     propsDef.setPrimary(true).     child.registerBeanDefinition("props3", propsDef).     TestBean rob = (TestBean) child.getBean("rob2").     assertEquals("props3", rob.getSomeProperties().getProperty("name")).     assertEquals(1, CountingFactory.getFactoryBeanInstanceCount()). }
false;public;0;19;;@Test public void byTypeAutowireWithPrimaryInParentAndChild() throws Exception {     CountingFactory.reset().     DefaultListableBeanFactory parent = getBeanFactory("autowire-with-exclusion.xml").     parent.getBeanDefinition("props1").setPrimary(true).     parent.preInstantiateSingletons().     DefaultListableBeanFactory child = new DefaultListableBeanFactory(parent).     RootBeanDefinition robDef = new RootBeanDefinition(TestBean.class).     robDef.setAutowireMode(RootBeanDefinition.AUTOWIRE_BY_TYPE).     robDef.getPropertyValues().add("spouse", new RuntimeBeanReference("sally")).     child.registerBeanDefinition("rob2", robDef).     RootBeanDefinition propsDef = new RootBeanDefinition(PropertiesFactoryBean.class).     propsDef.getPropertyValues().add("properties", "name=props3").     propsDef.setPrimary(true).     child.registerBeanDefinition("props3", propsDef).     TestBean rob = (TestBean) child.getBean("rob2").     assertEquals("props3", rob.getSomeProperties().getProperty("name")).     assertEquals(1, CountingFactory.getFactoryBeanInstanceCount()). }
false;public;0;9;;@Test public void byTypeAutowireWithInclusion() throws Exception {     CountingFactory.reset().     DefaultListableBeanFactory beanFactory = getBeanFactory("autowire-with-inclusion.xml").     beanFactory.preInstantiateSingletons().     TestBean rob = (TestBean) beanFactory.getBean("rob").     assertEquals("props1", rob.getSomeProperties().getProperty("name")).     assertEquals(1, CountingFactory.getFactoryBeanInstanceCount()). }
false;public;0;9;;@Test public void byTypeAutowireWithSelectiveInclusion() throws Exception {     CountingFactory.reset().     DefaultListableBeanFactory beanFactory = getBeanFactory("autowire-with-selective-inclusion.xml").     beanFactory.preInstantiateSingletons().     TestBean rob = (TestBean) beanFactory.getBean("rob").     assertEquals("props1", rob.getSomeProperties().getProperty("name")).     assertEquals(1, CountingFactory.getFactoryBeanInstanceCount()). }
false;public;0;12;;@Test public void constructorAutowireWithAutoSelfExclusion() throws Exception {     DefaultListableBeanFactory beanFactory = getBeanFactory("autowire-constructor-with-exclusion.xml").     TestBean rob = (TestBean) beanFactory.getBean("rob").     TestBean sally = (TestBean) beanFactory.getBean("sally").     assertEquals(sally, rob.getSpouse()).     TestBean rob2 = (TestBean) beanFactory.getBean("rob").     assertEquals(rob, rob2).     assertNotSame(rob, rob2).     assertEquals(rob.getSpouse(), rob2.getSpouse()).     assertNotSame(rob.getSpouse(), rob2.getSpouse()). }
false;public;0;6;;@Test public void constructorAutowireWithExclusion() throws Exception {     DefaultListableBeanFactory beanFactory = getBeanFactory("autowire-constructor-with-exclusion.xml").     TestBean rob = (TestBean) beanFactory.getBean("rob").     assertEquals("props1", rob.getSomeProperties().getProperty("name")). }
false;private;1;6;;private DefaultListableBeanFactory getBeanFactory(String configPath) {     DefaultListableBeanFactory bf = new DefaultListableBeanFactory().     new XmlBeanDefinitionReader(bf).loadBeanDefinitions(new ClassPathResource(configPath, getClass())).     return bf. }
