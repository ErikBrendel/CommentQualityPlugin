commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void testResolveWiringInfo() throws Exception {     try {         new AnnotationBeanWiringInfoResolver().resolveWiringInfo(null).         fail("Must have thrown an IllegalArgumentException by this point (null argument)").     } catch (IllegalArgumentException expected) {     } }
false;public;0;6;;@Test public void testResolveWiringInfoWithAnInstanceOfANonAnnotatedClass() {     AnnotationBeanWiringInfoResolver resolver = new AnnotationBeanWiringInfoResolver().     BeanWiringInfo info = resolver.resolveWiringInfo("java.lang.String is not @Configurable").     assertNull("Must be returning null for a non-@Configurable class instance", info). }
false;public;0;6;;@Test public void testResolveWiringInfoWithAnInstanceOfAnAnnotatedClass() {     AnnotationBeanWiringInfoResolver resolver = new AnnotationBeanWiringInfoResolver().     BeanWiringInfo info = resolver.resolveWiringInfo(new Soap()).     assertNotNull("Must *not* be returning null for a non-@Configurable class instance", info). }
false;public;0;8;;@Test public void testResolveWiringInfoWithAnInstanceOfAnAnnotatedClassWithAutowiringTurnedOffExplicitly() {     AnnotationBeanWiringInfoResolver resolver = new AnnotationBeanWiringInfoResolver().     BeanWiringInfo info = resolver.resolveWiringInfo(new WirelessSoap()).     assertNotNull("Must *not* be returning null for an @Configurable class instance even when autowiring is NO", info).     assertFalse(info.indicatesAutowiring()).     assertEquals(WirelessSoap.class.getName(), info.getBeanName()). }
false;public;0;8;;@Test public void testResolveWiringInfoWithAnInstanceOfAnAnnotatedClassWithAutowiringTurnedOffExplicitlyAndCustomBeanName() {     AnnotationBeanWiringInfoResolver resolver = new AnnotationBeanWiringInfoResolver().     BeanWiringInfo info = resolver.resolveWiringInfo(new NamedWirelessSoap()).     assertNotNull("Must *not* be returning null for an @Configurable class instance even when autowiring is NO", info).     assertFalse(info.indicatesAutowiring()).     assertEquals("DerBigStick", info.getBeanName()). }
