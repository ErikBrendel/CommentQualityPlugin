# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractPropertyAccessorTests -> @Test 	public void isReadablePropertyNoSuchProperty();1432283608;Shouldn't throw an exception: should just return false;@Test_	public void isReadablePropertyNoSuchProperty() {_		AbstractPropertyAccessor accessor = createAccessor(new NoRead())___		assertFalse(accessor.isReadableProperty("xxxxx"))__	};shouldn,t,throw,an,exception,should,just,return,false;test,public,void,is,readable,property,no,such,property,abstract,property,accessor,accessor,create,accessor,new,no,read,assert,false,accessor,is,readable,property,xxxxx
AbstractPropertyAccessorTests -> @Test 	public void isReadablePropertyNoSuchProperty();1440753462;Shouldn't throw an exception: should just return false;@Test_	public void isReadablePropertyNoSuchProperty() {_		AbstractPropertyAccessor accessor = createAccessor(new NoRead())___		assertFalse(accessor.isReadableProperty("xxxxx"))__	};shouldn,t,throw,an,exception,should,just,return,false;test,public,void,is,readable,property,no,such,property,abstract,property,accessor,accessor,create,accessor,new,no,read,assert,false,accessor,is,readable,property,xxxxx
AbstractPropertyAccessorTests -> @Test 	public void isReadablePropertyNoSuchProperty();1453210852;Shouldn't throw an exception: should just return false;@Test_	public void isReadablePropertyNoSuchProperty() {_		AbstractPropertyAccessor accessor = createAccessor(new NoRead())___		assertFalse(accessor.isReadableProperty("xxxxx"))__	};shouldn,t,throw,an,exception,should,just,return,false;test,public,void,is,readable,property,no,such,property,abstract,property,accessor,accessor,create,accessor,new,no,read,assert,false,accessor,is,readable,property,xxxxx
AbstractPropertyAccessorTests -> @Test 	public void isReadablePropertyNoSuchProperty();1453212718;Shouldn't throw an exception: should just return false;@Test_	public void isReadablePropertyNoSuchProperty() {_		AbstractPropertyAccessor accessor = createAccessor(new NoRead())___		assertFalse(accessor.isReadableProperty("xxxxx"))__	};shouldn,t,throw,an,exception,should,just,return,false;test,public,void,is,readable,property,no,such,property,abstract,property,accessor,accessor,create,accessor,new,no,read,assert,false,accessor,is,readable,property,xxxxx
AbstractPropertyAccessorTests -> @Test 	public void isReadablePropertyNoSuchProperty();1467730834;Shouldn't throw an exception: should just return false;@Test_	public void isReadablePropertyNoSuchProperty() {_		AbstractPropertyAccessor accessor = createAccessor(new NoRead())___		assertFalse(accessor.isReadableProperty("xxxxx"))__	};shouldn,t,throw,an,exception,should,just,return,false;test,public,void,is,readable,property,no,such,property,abstract,property,accessor,accessor,create,accessor,new,no,read,assert,false,accessor,is,readable,property,xxxxx
AbstractPropertyAccessorTests -> @Test 	public void isReadablePropertyNoSuchProperty();1496242568;Shouldn't throw an exception: should just return false;@Test_	public void isReadablePropertyNoSuchProperty() {_		AbstractPropertyAccessor accessor = createAccessor(new NoRead())___		assertFalse(accessor.isReadableProperty("xxxxx"))__	};shouldn,t,throw,an,exception,should,just,return,false;test,public,void,is,readable,property,no,such,property,abstract,property,accessor,accessor,create,accessor,new,no,read,assert,false,accessor,is,readable,property,xxxxx
