commented;modifiers;parameterAmount;loc;comment;code
false;public;0;13;;@Test public void testPropertyComparator() {     Dog dog = new Dog().     dog.setNickName("mace").     Dog dog2 = new Dog().     dog2.setNickName("biscy").     PropertyComparator<Dog> c = new PropertyComparator<>("nickName", false, true).     assertTrue(c.compare(dog, dog2) > 0).     assertTrue(c.compare(dog, dog) == 0).     assertTrue(c.compare(dog2, dog) < 0). }
false;public;0;7;;@Test public void testPropertyComparatorNulls() {     Dog dog = new Dog().     Dog dog2 = new Dog().     PropertyComparator<Dog> c = new PropertyComparator<>("nickName", false, true).     assertTrue(c.compare(dog, dog2) == 0). }
false;public;0;20;;@Test public void testChainedComparators() {     Comparator<Dog> c = new PropertyComparator<>("lastName", false, true).     Dog dog1 = new Dog().     dog1.setFirstName("macy").     dog1.setLastName("grayspots").     Dog dog2 = new Dog().     dog2.setFirstName("biscuit").     dog2.setLastName("grayspots").     assertTrue(c.compare(dog1, dog2) == 0).     c = c.thenComparing(new PropertyComparator<>("firstName", false, true)).     assertTrue(c.compare(dog1, dog2) > 0).     dog2.setLastName("konikk dog").     assertTrue(c.compare(dog2, dog1) > 0). }
false;public;0;17;;@Test public void testChainedComparatorsReversed() {     Comparator<Dog> c = (new PropertyComparator<Dog>("lastName", false, true)).thenComparing(new PropertyComparator<>("firstName", false, true)).     Dog dog1 = new Dog().     dog1.setFirstName("macy").     dog1.setLastName("grayspots").     Dog dog2 = new Dog().     dog2.setFirstName("biscuit").     dog2.setLastName("grayspots").     assertTrue(c.compare(dog1, dog2) > 0).     c = c.reversed().     assertTrue(c.compare(dog1, dog2) < 0). }
false;public;0;3;;public String getNickName() {     return nickName. }
false;public;1;3;;public void setNickName(String nickName) {     this.nickName = nickName. }
false;public;0;3;;public String getFirstName() {     return firstName. }
false;public;1;3;;public void setFirstName(String firstName) {     this.firstName = firstName. }
false;public;0;3;;public String getLastName() {     return lastName. }
false;public;1;3;;public void setLastName(String lastName) {     this.lastName = lastName. }
false;public;1;4;;@Override public int compareTo(Object o) {     return this.nickName.compareTo(((Dog) o).nickName). }
