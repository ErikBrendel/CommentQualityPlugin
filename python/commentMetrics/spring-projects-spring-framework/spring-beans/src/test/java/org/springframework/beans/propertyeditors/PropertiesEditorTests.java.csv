# id;timestamp;commentText;codeText;commentWords;codeWords
PropertiesEditorTests -> public void testIgnoresLeadingSpacesAndTabs();1328020251;We'll typically align by indenting with tabs or spaces._These should be ignored if at the beginning of a line._We must ensure that comment lines beginning with whitespace are_still ignored: The standard syntax doesn't allow this on JDK 1.3.;public void testIgnoresLeadingSpacesAndTabs() {_		String s = "    #Ignore this comment\n" +_			"\t\tfoo=bar\n" +_			"\t#Another comment more junk \n" +_			" me=mi\n" +_			"x=x\n" +_			"\n"__		PropertiesEditor pe= new PropertiesEditor()__		pe.setAsText(s)__		Properties p = (Properties) pe.getValue()__		assertTrue("contains 3 entries, not " + p.size(), p.size() == 3)__		assertTrue("foo is bar", p.get("foo").equals("bar"))__		assertTrue("me=mi", p.get("me").equals("mi"))__	};we,ll,typically,align,by,indenting,with,tabs,or,spaces,these,should,be,ignored,if,at,the,beginning,of,a,line,we,must,ensure,that,comment,lines,beginning,with,whitespace,are,still,ignored,the,standard,syntax,doesn,t,allow,this,on,jdk,1,3;public,void,test,ignores,leading,spaces,and,tabs,string,s,ignore,this,comment,n,t,tfoo,bar,n,t,another,comment,more,junk,n,me,mi,n,x,x,n,n,properties,editor,pe,new,properties,editor,pe,set,as,text,s,properties,p,properties,pe,get,value,assert,true,contains,3,entries,not,p,size,p,size,3,assert,true,foo,is,bar,p,get,foo,equals,bar,assert,true,me,mi,p,get,me,equals,mi
PropertiesEditorTests -> public void testIgnoresLeadingSpacesAndTabs();1356735495;We'll typically align by indenting with tabs or spaces._These should be ignored if at the beginning of a line._We must ensure that comment lines beginning with whitespace are_still ignored: The standard syntax doesn't allow this on JDK 1.3.;public void testIgnoresLeadingSpacesAndTabs() {_		String s = "    #Ignore this comment\n" +_			"\t\tfoo=bar\n" +_			"\t#Another comment more junk \n" +_			" me=mi\n" +_			"x=x\n" +_			"\n"__		PropertiesEditor pe= new PropertiesEditor()__		pe.setAsText(s)__		Properties p = (Properties) pe.getValue()__		assertTrue("contains 3 entries, not " + p.size(), p.size() == 3)__		assertTrue("foo is bar", p.get("foo").equals("bar"))__		assertTrue("me=mi", p.get("me").equals("mi"))__	};we,ll,typically,align,by,indenting,with,tabs,or,spaces,these,should,be,ignored,if,at,the,beginning,of,a,line,we,must,ensure,that,comment,lines,beginning,with,whitespace,are,still,ignored,the,standard,syntax,doesn,t,allow,this,on,jdk,1,3;public,void,test,ignores,leading,spaces,and,tabs,string,s,ignore,this,comment,n,t,tfoo,bar,n,t,another,comment,more,junk,n,me,mi,n,x,x,n,n,properties,editor,pe,new,properties,editor,pe,set,as,text,s,properties,p,properties,pe,get,value,assert,true,contains,3,entries,not,p,size,p,size,3,assert,true,foo,is,bar,p,get,foo,equals,bar,assert,true,me,mi,p,get,me,equals,mi
PropertiesEditorTests -> public void testIgnoresCommentLinesAndEmptyLines();1328020251;Comments begin with #;public void testIgnoresCommentLinesAndEmptyLines() {_		String s = "#Ignore this comment\n" +_			"foo=bar\n" +_			"#Another=comment more junk /\n" +_			"me=mi\n" +_			"x=x\n" +_			"\n"__		PropertiesEditor pe= new PropertiesEditor()__		pe.setAsText(s)__		Properties p = (Properties) pe.getValue()__		assertTrue("contains three entries", p.entrySet().size() == 3)__		assertTrue("foo is bar", p.get("foo").equals("bar"))__		assertTrue("me=mi", p.get("me").equals("mi"))__	};comments,begin,with;public,void,test,ignores,comment,lines,and,empty,lines,string,s,ignore,this,comment,n,foo,bar,n,another,comment,more,junk,n,me,mi,n,x,x,n,n,properties,editor,pe,new,properties,editor,pe,set,as,text,s,properties,p,properties,pe,get,value,assert,true,contains,three,entries,p,entry,set,size,3,assert,true,foo,is,bar,p,get,foo,equals,bar,assert,true,me,mi,p,get,me,equals,mi
PropertiesEditorTests -> public void testIgnoresCommentLinesAndEmptyLines();1356735495;Comments begin with #;public void testIgnoresCommentLinesAndEmptyLines() {_		String s = "#Ignore this comment\n" +_			"foo=bar\n" +_			"#Another=comment more junk /\n" +_			"me=mi\n" +_			"x=x\n" +_			"\n"__		PropertiesEditor pe= new PropertiesEditor()__		pe.setAsText(s)__		Properties p = (Properties) pe.getValue()__		assertTrue("contains three entries", p.entrySet().size() == 3)__		assertTrue("foo is bar", p.get("foo").equals("bar"))__		assertTrue("me=mi", p.get("me").equals("mi"))__	};comments,begin,with;public,void,test,ignores,comment,lines,and,empty,lines,string,s,ignore,this,comment,n,foo,bar,n,another,comment,more,junk,n,me,mi,n,x,x,n,n,properties,editor,pe,new,properties,editor,pe,set,as,text,s,properties,p,properties,pe,get,value,assert,true,contains,three,entries,p,entry,set,size,3,assert,true,foo,is,bar,p,get,foo,equals,bar,assert,true,me,mi,p,get,me,equals,mi
