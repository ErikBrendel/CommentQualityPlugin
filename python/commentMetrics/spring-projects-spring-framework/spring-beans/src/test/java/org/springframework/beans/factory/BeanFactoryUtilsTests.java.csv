# id;timestamp;commentText;codeText;commentWords;codeWords
BeanFactoryUtilsTests -> @Test 	public void testHierarchicalCountBeansWithOverride() throws Exception;1328020251;Check that override doesn't count as two separate beans.;@Test_	public void testHierarchicalCountBeansWithOverride() throws Exception {_		_		assertTrue(this.listableBeanFactory.getBeanDefinitionCount() == 1)__		_		assertTrue("Should count 7 beans, not "_				+ BeanFactoryUtils.countBeansIncludingAncestors(this.listableBeanFactory),_			BeanFactoryUtils.countBeansIncludingAncestors(this.listableBeanFactory) == 7)__	};check,that,override,doesn,t,count,as,two,separate,beans;test,public,void,test,hierarchical,count,beans,with,override,throws,exception,assert,true,this,listable,bean,factory,get,bean,definition,count,1,assert,true,should,count,7,beans,not,bean,factory,utils,count,beans,including,ancestors,this,listable,bean,factory,bean,factory,utils,count,beans,including,ancestors,this,listable,bean,factory,7
BeanFactoryUtilsTests -> @Test 	public void testHierarchicalCountBeansWithOverride() throws Exception;1344552803;Check that override doesn't count as two separate beans.;@Test_	public void testHierarchicalCountBeansWithOverride() throws Exception {_		_		assertTrue(this.listableBeanFactory.getBeanDefinitionCount() == 1)__		_		assertTrue("Should count 7 beans, not "_				+ BeanFactoryUtils.countBeansIncludingAncestors(this.listableBeanFactory),_			BeanFactoryUtils.countBeansIncludingAncestors(this.listableBeanFactory) == 7)__	};check,that,override,doesn,t,count,as,two,separate,beans;test,public,void,test,hierarchical,count,beans,with,override,throws,exception,assert,true,this,listable,bean,factory,get,bean,definition,count,1,assert,true,should,count,7,beans,not,bean,factory,utils,count,beans,including,ancestors,this,listable,bean,factory,bean,factory,utils,count,beans,including,ancestors,this,listable,bean,factory,7
BeanFactoryUtilsTests -> @Test 	public void testHierarchicalCountBeansWithOverride() throws Exception;1356735495;Check that override doesn't count as two separate beans.;@Test_	public void testHierarchicalCountBeansWithOverride() throws Exception {_		_		assertTrue(this.listableBeanFactory.getBeanDefinitionCount() == 1)__		_		assertTrue("Should count 7 beans, not "_				+ BeanFactoryUtils.countBeansIncludingAncestors(this.listableBeanFactory),_			BeanFactoryUtils.countBeansIncludingAncestors(this.listableBeanFactory) == 7)__	};check,that,override,doesn,t,count,as,two,separate,beans;test,public,void,test,hierarchical,count,beans,with,override,throws,exception,assert,true,this,listable,bean,factory,get,bean,definition,count,1,assert,true,should,count,7,beans,not,bean,factory,utils,count,beans,including,ancestors,this,listable,bean,factory,bean,factory,utils,count,beans,including,ancestors,this,listable,bean,factory,7
BeanFactoryUtilsTests -> @Test 	public void testHierarchicalCountBeansWithOverride() throws Exception;1357119417;Check that override doesn't count as two separate beans.;@Test_	public void testHierarchicalCountBeansWithOverride() throws Exception {_		_		assertTrue(this.listableBeanFactory.getBeanDefinitionCount() == 1)__		_		assertTrue("Should count 7 beans, not "_				+ BeanFactoryUtils.countBeansIncludingAncestors(this.listableBeanFactory),_			BeanFactoryUtils.countBeansIncludingAncestors(this.listableBeanFactory) == 7)__	};check,that,override,doesn,t,count,as,two,separate,beans;test,public,void,test,hierarchical,count,beans,with,override,throws,exception,assert,true,this,listable,bean,factory,get,bean,definition,count,1,assert,true,should,count,7,beans,not,bean,factory,utils,count,beans,including,ancestors,this,listable,bean,factory,bean,factory,utils,count,beans,including,ancestors,this,listable,bean,factory,7
BeanFactoryUtilsTests -> @Test 	public void testHierarchicalCountBeansWithOverride() throws Exception;1362408075;Check that override doesn't count as two separate beans.;@Test_	public void testHierarchicalCountBeansWithOverride() throws Exception {_		_		assertTrue(this.listableBeanFactory.getBeanDefinitionCount() == 1)__		_		assertTrue("Should count 7 beans, not "_				+ BeanFactoryUtils.countBeansIncludingAncestors(this.listableBeanFactory),_			BeanFactoryUtils.countBeansIncludingAncestors(this.listableBeanFactory) == 7)__	};check,that,override,doesn,t,count,as,two,separate,beans;test,public,void,test,hierarchical,count,beans,with,override,throws,exception,assert,true,this,listable,bean,factory,get,bean,definition,count,1,assert,true,should,count,7,beans,not,bean,factory,utils,count,beans,including,ancestors,this,listable,bean,factory,bean,factory,utils,count,beans,including,ancestors,this,listable,bean,factory,7
BeanFactoryUtilsTests -> @Test 	public void testHierarchicalCountBeansWithOverride() throws Exception;1385507683;Check that override doesn't count as two separate beans.;@Test_	public void testHierarchicalCountBeansWithOverride() throws Exception {_		_		assertTrue(this.listableBeanFactory.getBeanDefinitionCount() == 1)__		_		assertTrue("Should count 7 beans, not "_				+ BeanFactoryUtils.countBeansIncludingAncestors(this.listableBeanFactory),_			BeanFactoryUtils.countBeansIncludingAncestors(this.listableBeanFactory) == 7)__	};check,that,override,doesn,t,count,as,two,separate,beans;test,public,void,test,hierarchical,count,beans,with,override,throws,exception,assert,true,this,listable,bean,factory,get,bean,definition,count,1,assert,true,should,count,7,beans,not,bean,factory,utils,count,beans,including,ancestors,this,listable,bean,factory,bean,factory,utils,count,beans,including,ancestors,this,listable,bean,factory,7
BeanFactoryUtilsTests -> @Test 	public void testHierarchicalCountBeansWithOverride() throws Exception;1413848647;Check that override doesn't count as two separate beans.;@Test_	public void testHierarchicalCountBeansWithOverride() throws Exception {_		_		assertTrue(this.listableBeanFactory.getBeanDefinitionCount() == 1)__		_		assertTrue("Should count 7 beans, not "_				+ BeanFactoryUtils.countBeansIncludingAncestors(this.listableBeanFactory),_			BeanFactoryUtils.countBeansIncludingAncestors(this.listableBeanFactory) == 7)__	};check,that,override,doesn,t,count,as,two,separate,beans;test,public,void,test,hierarchical,count,beans,with,override,throws,exception,assert,true,this,listable,bean,factory,get,bean,definition,count,1,assert,true,should,count,7,beans,not,bean,factory,utils,count,beans,including,ancestors,this,listable,bean,factory,bean,factory,utils,count,beans,including,ancestors,this,listable,bean,factory,7
BeanFactoryUtilsTests -> @Test 	public void testHierarchicalCountBeansWithOverride() throws Exception;1426716313;Check that override doesn't count as two separate beans.;@Test_	public void testHierarchicalCountBeansWithOverride() throws Exception {_		_		assertTrue(this.listableBeanFactory.getBeanDefinitionCount() == 1)__		_		assertTrue("Should count 7 beans, not " + BeanFactoryUtils.countBeansIncludingAncestors(this.listableBeanFactory),_				BeanFactoryUtils.countBeansIncludingAncestors(this.listableBeanFactory) == 7)__	};check,that,override,doesn,t,count,as,two,separate,beans;test,public,void,test,hierarchical,count,beans,with,override,throws,exception,assert,true,this,listable,bean,factory,get,bean,definition,count,1,assert,true,should,count,7,beans,not,bean,factory,utils,count,beans,including,ancestors,this,listable,bean,factory,bean,factory,utils,count,beans,including,ancestors,this,listable,bean,factory,7
BeanFactoryUtilsTests -> @Test 	public void testHierarchicalCountBeansWithOverride() throws Exception;1426897141;Check that override doesn't count as two separate beans.;@Test_	public void testHierarchicalCountBeansWithOverride() throws Exception {_		_		assertTrue(this.listableBeanFactory.getBeanDefinitionCount() == 1)__		_		assertTrue("Should count 7 beans, not " + BeanFactoryUtils.countBeansIncludingAncestors(this.listableBeanFactory),_				BeanFactoryUtils.countBeansIncludingAncestors(this.listableBeanFactory) == 7)__	};check,that,override,doesn,t,count,as,two,separate,beans;test,public,void,test,hierarchical,count,beans,with,override,throws,exception,assert,true,this,listable,bean,factory,get,bean,definition,count,1,assert,true,should,count,7,beans,not,bean,factory,utils,count,beans,including,ancestors,this,listable,bean,factory,bean,factory,utils,count,beans,including,ancestors,this,listable,bean,factory,7
BeanFactoryUtilsTests -> @Test 	public void testHierarchicalCountBeansWithOverride() throws Exception;1469546119;Check that override doesn't count as two separate beans.;@Test_	public void testHierarchicalCountBeansWithOverride() throws Exception {_		_		assertTrue(this.listableBeanFactory.getBeanDefinitionCount() == 1)__		_		assertTrue("Should count 7 beans, not " + BeanFactoryUtils.countBeansIncludingAncestors(this.listableBeanFactory),_				BeanFactoryUtils.countBeansIncludingAncestors(this.listableBeanFactory) == 7)__	};check,that,override,doesn,t,count,as,two,separate,beans;test,public,void,test,hierarchical,count,beans,with,override,throws,exception,assert,true,this,listable,bean,factory,get,bean,definition,count,1,assert,true,should,count,7,beans,not,bean,factory,utils,count,beans,including,ancestors,this,listable,bean,factory,bean,factory,utils,count,beans,including,ancestors,this,listable,bean,factory,7
BeanFactoryUtilsTests -> @Test 	public void testHierarchicalCountBeansWithOverride() throws Exception;1504419574;Check that override doesn't count as two separate beans.;@Test_	public void testHierarchicalCountBeansWithOverride() throws Exception {_		_		assertTrue(this.listableBeanFactory.getBeanDefinitionCount() == 1)__		_		assertTrue("Should count 8 beans, not " + BeanFactoryUtils.countBeansIncludingAncestors(this.listableBeanFactory),_				BeanFactoryUtils.countBeansIncludingAncestors(this.listableBeanFactory) == 8)__	};check,that,override,doesn,t,count,as,two,separate,beans;test,public,void,test,hierarchical,count,beans,with,override,throws,exception,assert,true,this,listable,bean,factory,get,bean,definition,count,1,assert,true,should,count,8,beans,not,bean,factory,utils,count,beans,including,ancestors,this,listable,bean,factory,bean,factory,utils,count,beans,including,ancestors,this,listable,bean,factory,8
