commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public Set<Integer> getIntegerSet() {     return integerSet. }
false;public;1;3;;public void setIntegerSet(Set<Integer> integerSet) {     this.integerSet = integerSet. }
false;public;0;3;;public Set<? extends Number> getNumberSet() {     return numberSet. }
false;public;1;3;;public void setNumberSet(Set<? extends Number> numberSet) {     this.numberSet = numberSet. }
false;public;0;3;;public Set<ITestBean> getTestBeanSet() {     return testBeanSet. }
false;public;1;3;;public void setTestBeanSet(Set<ITestBean> testBeanSet) {     this.testBeanSet = testBeanSet. }
false;public;0;3;;public List<Resource> getResourceList() {     return resourceList. }
false;public;1;3;;public void setResourceList(List<Resource> resourceList) {     this.resourceList = resourceList. }
false;public;0;3;;public List<TestBean> getTestBeanList() {     return testBeanList. }
false;public;1;3;;public void setTestBeanList(List<TestBean> testBeanList) {     this.testBeanList = testBeanList. }
false;public;0;3;;public List<List<Integer>> getListOfLists() {     return listOfLists. }
false;public;0;3;;public ArrayList<String[]> getListOfArrays() {     return listOfArrays. }
false;public;1;3;;public void setListOfArrays(ArrayList<String[]> listOfArrays) {     this.listOfArrays = listOfArrays. }
false;public;1;3;;public void setListOfLists(List<List<Integer>> listOfLists) {     this.listOfLists = listOfLists. }
false;public;0;3;;public List<Map<Integer, Long>> getListOfMaps() {     return listOfMaps. }
false;public;1;3;;public void setListOfMaps(List<Map<Integer, Long>> listOfMaps) {     this.listOfMaps = listOfMaps. }
false;public;0;3;;public Map getPlainMap() {     return plainMap. }
false;public;0;3;;public Map<Short, Integer> getShortMap() {     return shortMap. }
false;public;1;3;;public void setShortMap(Map<Short, Integer> shortMap) {     this.shortMap = shortMap. }
false;public;0;3;;public HashMap<Long, ?> getLongMap() {     return longMap. }
false;public;1;3;;public void setLongMap(HashMap<Long, ?> longMap) {     this.longMap = longMap. }
false;public;0;3;;public Map<Number, Collection<? extends Object>> getCollectionMap() {     return collectionMap. }
false;public;1;3;;public void setCollectionMap(Map<Number, Collection<? extends Object>> collectionMap) {     this.collectionMap = collectionMap. }
false;public;0;3;;public Map<String, Map<Integer, Long>> getMapOfMaps() {     return mapOfMaps. }
false;public;1;3;;public void setMapOfMaps(Map<String, Map<Integer, Long>> mapOfMaps) {     this.mapOfMaps = mapOfMaps. }
false;public;0;3;;public Map<Integer, List<Integer>> getMapOfLists() {     return mapOfLists. }
false;public;1;3;;public void setMapOfLists(Map<Integer, List<Integer>> mapOfLists) {     this.mapOfLists = mapOfLists. }
false;public;0;3;;public T getGenericProperty() {     return genericProperty. }
false;public;1;3;;public void setGenericProperty(T genericProperty) {     this.genericProperty = genericProperty. }
false;public;0;3;;public List<T> getGenericListProperty() {     return genericListProperty. }
false;public;1;3;;public void setGenericListProperty(List<T> genericListProperty) {     this.genericListProperty = genericListProperty. }
false;public;0;3;;public CustomEnum getCustomEnum() {     return customEnum. }
false;public;1;3;;public void setCustomEnum(CustomEnum customEnum) {     this.customEnum = customEnum. }
false;public;0;3;;public CustomEnum[] getCustomEnumArray() {     return customEnumArray. }
false;public;1;3;;public void setCustomEnumArray(CustomEnum[] customEnum) {     this.customEnumArray = customEnum. }
false;public;0;3;;public Set<CustomEnum> getCustomEnumSet() {     return customEnumSet. }
false;public;1;3;;public void setCustomEnumSet(Set<CustomEnum> customEnumSet) {     this.customEnumSet = customEnumSet. }
false;public;0;3;;public Set<CustomEnum> getCustomEnumSetMismatch() {     return customEnumSet. }
false;public;1;6;;public void setCustomEnumSetMismatch(Set<String> customEnumSet) {     this.customEnumSet = new HashSet<>(customEnumSet.size()).     for (Iterator<String> iterator = customEnumSet.iterator(). iterator.hasNext(). ) {         this.customEnumSet.add(CustomEnum.valueOf(iterator.next())).     } }
false;public;0;3;;public EnumSet<CustomEnum> getStandardEnumSet() {     return standardEnumSet. }
false;public;1;3;;public void setStandardEnumSet(EnumSet<CustomEnum> standardEnumSet) {     this.standardEnumSet = standardEnumSet. }
false;public;0;3;;public EnumMap<CustomEnum, Integer> getStandardEnumMap() {     return standardEnumMap. }
false;public;1;3;;public void setStandardEnumMap(EnumMap<CustomEnum, Integer> standardEnumMap) {     this.standardEnumMap = standardEnumMap. }
false;public,static;1;3;;public static GenericBean createInstance(Set<Integer> integerSet) {     return new GenericBean(integerSet). }
false;public,static;2;3;;public static GenericBean createInstance(Set<Integer> integerSet, List<Resource> resourceList) {     return new GenericBean(integerSet, resourceList). }
false;public,static;2;3;;public static GenericBean createInstance(HashSet<Integer> integerSet, Map<Short, Integer> shortMap) {     return new GenericBean(integerSet, shortMap). }
false;public,static;2;3;;public static GenericBean createInstance(Map<Short, Integer> shortMap, Resource resource) {     return new GenericBean(shortMap, resource). }
false;public,static;2;3;;public static GenericBean createInstance(Map map, Map<Short, Integer> shortMap) {     return new GenericBean(map, shortMap). }
false;public,static;1;3;;public static GenericBean createInstance(HashMap<Long, ?> longMap) {     return new GenericBean(longMap). }
false;public,static;2;3;;public static GenericBean createInstance(boolean someFlag, Map<Number, Collection<? extends Object>> collectionMap) {     return new GenericBean(someFlag, collectionMap). }
