commented;modifiers;parameterAmount;loc;comment;code
false;public;0;9;;@Test public void noArgFactoryMethodInvokedWithOneArg() {     assertExceptionMessageForMisconfiguredFactoryMethod(rootBeanDefinition(Foo.class).setFactoryMethod("noArgFactory").addConstructorArgValue("bogusArg").getBeanDefinition(), "Error creating bean with name 'foo': No matching factory method found: factory method 'noArgFactory(String)'. " + "Check that a method with the specified name and arguments exists and that it is static."). }
false;public;0;10;;@Test public void noArgFactoryMethodInvokedWithTwoArgs() {     assertExceptionMessageForMisconfiguredFactoryMethod(rootBeanDefinition(Foo.class).setFactoryMethod("noArgFactory").addConstructorArgValue("bogusArg1").addConstructorArgValue("bogusArg2".getBytes()).getBeanDefinition(), "Error creating bean with name 'foo': No matching factory method found: factory method 'noArgFactory(String,byte[])'. " + "Check that a method with the specified name and arguments exists and that it is static."). }
false;public;0;13;;@Test public void noArgFactoryMethodInvokedWithTwoArgsAndTypesSpecified() {     RootBeanDefinition def = new RootBeanDefinition(Foo.class).     def.setFactoryMethodName("noArgFactory").     ConstructorArgumentValues cav = new ConstructorArgumentValues().     cav.addIndexedArgumentValue(0, "bogusArg1", CharSequence.class.getName()).     cav.addIndexedArgumentValue(1, "bogusArg2".getBytes()).     def.setConstructorArgumentValues(cav).     assertExceptionMessageForMisconfiguredFactoryMethod(def, "Error creating bean with name 'foo': No matching factory method found: factory method 'noArgFactory(CharSequence,byte[])'. " + "Check that a method with the specified name and arguments exists and that it is static."). }
false;private;2;12;;private void assertExceptionMessageForMisconfiguredFactoryMethod(BeanDefinition bd, String expectedMessage) {     DefaultListableBeanFactory factory = new DefaultListableBeanFactory().     factory.registerBeanDefinition("foo", bd).     try {         factory.preInstantiateSingletons().         fail("should have failed with BeanCreationException due to incorrectly invoked factory method").     } catch (BeanCreationException ex) {         assertThat(ex.getMessage(), equalTo(expectedMessage)).     } }
false;public;0;12;;@Test public void singleArgFactoryMethodInvokedWithNoArgs() {     // calling a factory method that accepts arguments without any arguments emits an exception unlike cases     // where a no-arg factory method is called with arguments. Adding this test just to document the difference     assertExceptionMessageForMisconfiguredFactoryMethod(rootBeanDefinition(Foo.class).setFactoryMethod("singleArgFactory").getBeanDefinition(), "Error creating bean with name 'foo': " + "Unsatisfied dependency expressed through method 'singleArgFactory' parameter 0: " + "Ambiguous argument values for parameter of type [java.lang.String] - " + "did you specify the correct bean references as arguments?"). }
false;static;0;3;;static Foo noArgFactory() {     return new Foo(). }
false;static;1;3;;static Foo singleArgFactory(String arg) {     return new Foo(). }
