commented;modifiers;parameterAmount;loc;comment;code
false;public;0;6;;@Test public void testSingleThread() {     for (int i = 0. i < 100. i++) {         performSet().     } }
false;public;0;25;;@Test public void testConcurrent() {     for (int i = 0. i < 10. i++) {         TestRun run = new TestRun(this).         set.add(run).         Thread t = new Thread(run).         t.setDaemon(true).         t.start().     }     logger.info("Thread creation over, " + set.size() + " still active.").     synchronized (this) {         while (!set.isEmpty() && ex == null) {             try {                 wait().             } catch (InterruptedException e) {                 logger.info(e.toString()).             }             logger.info(set.size() + " threads still active.").         }     }     if (ex != null) {         fail(ex.getMessage()).     } }
false;private,static;0;28;;private static void performSet() {     TestBean bean = new TestBean().     Properties p = (Properties) System.getProperties().clone().     assertTrue("The System properties must not be empty", p.size() != 0).     for (Iterator<?> i = p.entrySet().iterator(). i.hasNext(). ) {         i.next().         if (Math.random() > 0.9) {             i.remove().         }     }     ByteArrayOutputStream buffer = new ByteArrayOutputStream().     try {         p.store(buffer, null).     } catch (IOException e) {     // ByteArrayOutputStream does not throw     // any IOException     }     String value = new String(buffer.toByteArray()).     BeanWrapperImpl wrapper = new BeanWrapperImpl(bean).     wrapper.setPropertyValue("properties", value).     assertEquals(p, bean.getProperties()). }
false;public;0;17;;@Override public void run() {     try {         for (int i = 0. i < 100. i++) {             performSet().         }     } catch (Throwable e) {         test.ex = e.     } finally {         synchronized (test) {             test.set.remove(this).             test.notifyAll().         }     } }
false;public;0;3;;public Properties getProperties() {     return properties. }
false;public;1;3;;public void setProperties(Properties properties) {     this.properties = properties. }
