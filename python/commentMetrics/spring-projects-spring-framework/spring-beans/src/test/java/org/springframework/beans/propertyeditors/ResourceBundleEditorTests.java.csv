commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test public void testSetAsTextWithJustBaseName() throws Exception {     ResourceBundleEditor editor = new ResourceBundleEditor().     editor.setAsText(BASE_NAME).     Object value = editor.getValue().     assertNotNull("Returned ResourceBundle was null (must not be for valid setAsText(..) call).", value).     assertTrue("Returned object was not a ResourceBundle (must be for valid setAsText(..) call).", value instanceof ResourceBundle).     ResourceBundle bundle = (ResourceBundle) value.     String string = bundle.getString(MESSAGE_KEY).     assertEquals(MESSAGE_KEY, string). }
false;public;0;12;;@Test public void testSetAsTextWithBaseNameThatEndsInDefaultSeparator() throws Exception {     ResourceBundleEditor editor = new ResourceBundleEditor().     editor.setAsText(BASE_NAME + "_").     Object value = editor.getValue().     assertNotNull("Returned ResourceBundle was null (must not be for valid setAsText(..) call).", value).     assertTrue("Returned object was not a ResourceBundle (must be for valid setAsText(..) call).", value instanceof ResourceBundle).     ResourceBundle bundle = (ResourceBundle) value.     String string = bundle.getString(MESSAGE_KEY).     assertEquals(MESSAGE_KEY, string). }
false;public;0;12;;@Test public void testSetAsTextWithBaseNameAndLanguageCode() throws Exception {     ResourceBundleEditor editor = new ResourceBundleEditor().     editor.setAsText(BASE_NAME + "Lang" + "_en").     Object value = editor.getValue().     assertNotNull("Returned ResourceBundle was null (must not be for valid setAsText(..) call).", value).     assertTrue("Returned object was not a ResourceBundle (must be for valid setAsText(..) call).", value instanceof ResourceBundle).     ResourceBundle bundle = (ResourceBundle) value.     String string = bundle.getString(MESSAGE_KEY).     assertEquals("yob", string). }
false;public;0;12;;@Test public void testSetAsTextWithBaseNameLanguageAndCountryCode() throws Exception {     ResourceBundleEditor editor = new ResourceBundleEditor().     editor.setAsText(BASE_NAME + "LangCountry" + "_en_GB").     Object value = editor.getValue().     assertNotNull("Returned ResourceBundle was null (must not be for valid setAsText(..) call).", value).     assertTrue("Returned object was not a ResourceBundle (must be for valid setAsText(..) call).", value instanceof ResourceBundle).     ResourceBundle bundle = (ResourceBundle) value.     String string = bundle.getString(MESSAGE_KEY).     assertEquals("chav", string). }
false;public;0;12;;@Test public void testSetAsTextWithTheKitchenSink() throws Exception {     ResourceBundleEditor editor = new ResourceBundleEditor().     editor.setAsText(BASE_NAME + "LangCountryDialect" + "_en_GB_GLASGOW").     Object value = editor.getValue().     assertNotNull("Returned ResourceBundle was null (must not be for valid setAsText(..) call).", value).     assertTrue("Returned object was not a ResourceBundle (must be for valid setAsText(..) call).", value instanceof ResourceBundle).     ResourceBundle bundle = (ResourceBundle) value.     String string = bundle.getString(MESSAGE_KEY).     assertEquals("ned", string). }
false;public;0;5;;@Test(expected = IllegalArgumentException.class) public void testSetAsTextWithNull() throws Exception {     ResourceBundleEditor editor = new ResourceBundleEditor().     editor.setAsText(null). }
false;public;0;5;;@Test(expected = IllegalArgumentException.class) public void testSetAsTextWithEmptyString() throws Exception {     ResourceBundleEditor editor = new ResourceBundleEditor().     editor.setAsText(""). }
false;public;0;5;;@Test(expected = IllegalArgumentException.class) public void testSetAsTextWithWhiteSpaceString() throws Exception {     ResourceBundleEditor editor = new ResourceBundleEditor().     editor.setAsText("   "). }
false;public;0;5;;@Test(expected = IllegalArgumentException.class) public void testSetAsTextWithJustSeparatorString() throws Exception {     ResourceBundleEditor editor = new ResourceBundleEditor().     editor.setAsText("_"). }
