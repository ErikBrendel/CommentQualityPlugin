commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testClasspathPathName() throws Exception {     PropertyEditor pathEditor = new PathEditor().     pathEditor.setAsText("classpath:" + ClassUtils.classPackageAsResourcePath(getClass()) + "/" + ClassUtils.getShortName(getClass()) + ".class").     Object value = pathEditor.getValue().     assertTrue(value instanceof Path).     Path path = (Path) value.     assertTrue(path.toFile().exists()). }
false;public;0;5;;@Test(expected = IllegalArgumentException.class) public void testWithNonExistentResource() throws Exception {     PropertyEditor propertyEditor = new PathEditor().     propertyEditor.setAsText("classpath:/no_way_this_file_is_found.doc"). }
false;public;0;9;;@Test public void testWithNonExistentPath() throws Exception {     PropertyEditor pathEditor = new PathEditor().     pathEditor.setAsText("file:/no_way_this_file_is_found.doc").     Object value = pathEditor.getValue().     assertTrue(value instanceof Path).     Path path = (Path) value.     assertTrue(!path.toFile().exists()). }
false;public;0;9;;@Test public void testAbsolutePath() throws Exception {     PropertyEditor pathEditor = new PathEditor().     pathEditor.setAsText("/no_way_this_file_is_found.doc").     Object value = pathEditor.getValue().     assertTrue(value instanceof Path).     Path path = (Path) value.     assertTrue(!path.toFile().exists()). }
false;public;0;17;;@Test public void testUnqualifiedPathNameFound() throws Exception {     PropertyEditor pathEditor = new PathEditor().     String fileName = ClassUtils.classPackageAsResourcePath(getClass()) + "/" + ClassUtils.getShortName(getClass()) + ".class".     pathEditor.setAsText(fileName).     Object value = pathEditor.getValue().     assertTrue(value instanceof Path).     Path path = (Path) value.     File file = path.toFile().     assertTrue(file.exists()).     String absolutePath = file.getAbsolutePath().     if (File.separatorChar == '\\') {         absolutePath = absolutePath.replace('\\', '/').     }     assertTrue(absolutePath.endsWith(fileName)). }
false;public;0;17;;@Test public void testUnqualifiedPathNameNotFound() throws Exception {     PropertyEditor pathEditor = new PathEditor().     String fileName = ClassUtils.classPackageAsResourcePath(getClass()) + "/" + ClassUtils.getShortName(getClass()) + ".clazz".     pathEditor.setAsText(fileName).     Object value = pathEditor.getValue().     assertTrue(value instanceof Path).     Path path = (Path) value.     File file = path.toFile().     assertFalse(file.exists()).     String absolutePath = file.getAbsolutePath().     if (File.separatorChar == '\\') {         absolutePath = absolutePath.replace('\\', '/').     }     assertTrue(absolutePath.endsWith(fileName)). }
