commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testServiceLoaderFactoryBean() {     assumeTrue(ServiceLoader.load(DocumentBuilderFactory.class).iterator().hasNext()).     DefaultListableBeanFactory bf = new DefaultListableBeanFactory().     RootBeanDefinition bd = new RootBeanDefinition(ServiceLoaderFactoryBean.class).     bd.getPropertyValues().add("serviceType", DocumentBuilderFactory.class.getName()).     bf.registerBeanDefinition("service", bd).     ServiceLoader<?> serviceLoader = (ServiceLoader<?>) bf.getBean("service").     assertTrue(serviceLoader.iterator().next() instanceof DocumentBuilderFactory). }
false;public;0;10;;@Test public void testServiceFactoryBean() {     assumeTrue(ServiceLoader.load(DocumentBuilderFactory.class).iterator().hasNext()).     DefaultListableBeanFactory bf = new DefaultListableBeanFactory().     RootBeanDefinition bd = new RootBeanDefinition(ServiceFactoryBean.class).     bd.getPropertyValues().add("serviceType", DocumentBuilderFactory.class.getName()).     bf.registerBeanDefinition("service", bd).     assertTrue(bf.getBean("service") instanceof DocumentBuilderFactory). }
false;public;0;11;;@Test public void testServiceListFactoryBean() {     assumeTrue(ServiceLoader.load(DocumentBuilderFactory.class).iterator().hasNext()).     DefaultListableBeanFactory bf = new DefaultListableBeanFactory().     RootBeanDefinition bd = new RootBeanDefinition(ServiceListFactoryBean.class).     bd.getPropertyValues().add("serviceType", DocumentBuilderFactory.class.getName()).     bf.registerBeanDefinition("service", bd).     List<?> serviceList = (List<?>) bf.getBean("service").     assertTrue(serviceList.get(0) instanceof DocumentBuilderFactory). }
