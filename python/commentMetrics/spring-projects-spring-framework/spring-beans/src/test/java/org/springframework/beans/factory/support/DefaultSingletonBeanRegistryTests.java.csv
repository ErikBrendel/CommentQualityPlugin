commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public Object getObject() throws BeansException {     return new TestBean(). }
false;public;0;28;;@Test public void testSingletons() {     DefaultSingletonBeanRegistry beanRegistry = new DefaultSingletonBeanRegistry().     TestBean tb = new TestBean().     beanRegistry.registerSingleton("tb", tb).     assertSame(tb, beanRegistry.getSingleton("tb")).     TestBean tb2 = (TestBean) beanRegistry.getSingleton("tb2", new ObjectFactory<Object>() {          @Override         public Object getObject() throws BeansException {             return new TestBean().         }     }).     assertSame(tb2, beanRegistry.getSingleton("tb2")).     assertSame(tb, beanRegistry.getSingleton("tb")).     assertSame(tb2, beanRegistry.getSingleton("tb2")).     assertEquals(2, beanRegistry.getSingletonCount()).     String[] names = beanRegistry.getSingletonNames().     assertEquals(2, names.length).     assertEquals("tb", names[0]).     assertEquals("tb2", names[1]).     beanRegistry.destroySingletons().     assertEquals(0, beanRegistry.getSingletonCount()).     assertEquals(0, beanRegistry.getSingletonNames().length). }
false;public;0;21;;@Test public void testDisposableBean() {     DefaultSingletonBeanRegistry beanRegistry = new DefaultSingletonBeanRegistry().     DerivedTestBean tb = new DerivedTestBean().     beanRegistry.registerSingleton("tb", tb).     beanRegistry.registerDisposableBean("tb", tb).     assertSame(tb, beanRegistry.getSingleton("tb")).     assertSame(tb, beanRegistry.getSingleton("tb")).     assertEquals(1, beanRegistry.getSingletonCount()).     String[] names = beanRegistry.getSingletonNames().     assertEquals(1, names.length).     assertEquals("tb", names[0]).     assertFalse(tb.wasDestroyed()).     beanRegistry.destroySingletons().     assertEquals(0, beanRegistry.getSingletonCount()).     assertEquals(0, beanRegistry.getSingletonNames().length).     assertTrue(tb.wasDestroyed()). }
false;public;0;17;;@Test public void testDependentRegistration() {     DefaultSingletonBeanRegistry beanRegistry = new DefaultSingletonBeanRegistry().     beanRegistry.registerDependentBean("a", "b").     beanRegistry.registerDependentBean("b", "c").     beanRegistry.registerDependentBean("c", "b").     assertTrue(beanRegistry.isDependent("a", "b")).     assertTrue(beanRegistry.isDependent("b", "c")).     assertTrue(beanRegistry.isDependent("c", "b")).     assertTrue(beanRegistry.isDependent("a", "c")).     assertFalse(beanRegistry.isDependent("c", "a")).     assertFalse(beanRegistry.isDependent("b", "a")).     assertFalse(beanRegistry.isDependent("a", "a")).     assertTrue(beanRegistry.isDependent("b", "b")).     assertTrue(beanRegistry.isDependent("c", "c")). }
