commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Test(expected = IllegalArgumentException.class) public void testCtorWithNullResourceEditor() throws Exception {     new URLEditor(null). }
false;public;0;9;;@Test public void testStandardURI() throws Exception {     PropertyEditor urlEditor = new URLEditor().     urlEditor.setAsText("mailto:juergen.hoeller@interface21.com").     Object value = urlEditor.getValue().     assertTrue(value instanceof URL).     URL url = (URL) value.     assertEquals(url.toExternalForm(), urlEditor.getAsText()). }
false;public;0;9;;@Test public void testStandardURL() throws Exception {     PropertyEditor urlEditor = new URLEditor().     urlEditor.setAsText("http://www.springframework.org").     Object value = urlEditor.getValue().     assertTrue(value instanceof URL).     URL url = (URL) value.     assertEquals(url.toExternalForm(), urlEditor.getAsText()). }
false;public;0;11;;@Test public void testClasspathURL() throws Exception {     PropertyEditor urlEditor = new URLEditor().     urlEditor.setAsText("classpath:" + ClassUtils.classPackageAsResourcePath(getClass()) + "/" + ClassUtils.getShortName(getClass()) + ".class").     Object value = urlEditor.getValue().     assertTrue(value instanceof URL).     URL url = (URL) value.     assertEquals(url.toExternalForm(), urlEditor.getAsText()).     assertTrue(!url.getProtocol().startsWith("classpath")). }
false;public;0;5;;@Test(expected = IllegalArgumentException.class) public void testWithNonExistentResource() throws Exception {     PropertyEditor urlEditor = new URLEditor().     urlEditor.setAsText("gonna:/freak/in/the/morning/freak/in/the.evening"). }
false;public;0;7;;@Test public void testSetAsTextWithNull() throws Exception {     PropertyEditor urlEditor = new URLEditor().     urlEditor.setAsText(null).     assertNull(urlEditor.getValue()).     assertEquals("", urlEditor.getAsText()). }
false;public;0;5;;@Test public void testGetAsTextReturnsEmptyStringIfValueNotSet() throws Exception {     PropertyEditor urlEditor = new URLEditor().     assertEquals("", urlEditor.getAsText()). }
