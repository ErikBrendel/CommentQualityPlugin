commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Test(expected = IllegalArgumentException.class) public void supplyIncompatibleBeanFactoryImplementation() throws Exception {     new StubBeanConfigurerSupport().setBeanFactory(mock(BeanFactory.class)). }
false;public;0;13;;@Test public void configureBeanDoesNothingIfBeanWiringInfoResolverResolvesToNull() throws Exception {     TestBean beanInstance = new TestBean().     BeanWiringInfoResolver resolver = mock(BeanWiringInfoResolver.class).     BeanConfigurerSupport configurer = new StubBeanConfigurerSupport().     configurer.setBeanWiringInfoResolver(resolver).     configurer.setBeanFactory(new DefaultListableBeanFactory()).     configurer.configureBean(beanInstance).     verify(resolver).resolveWiringInfo(beanInstance).     assertNull(beanInstance.getName()). }
false;public;0;7;;@Test public void configureBeanDoesNothingIfNoBeanFactoryHasBeenSet() throws Exception {     TestBean beanInstance = new TestBean().     BeanConfigurerSupport configurer = new StubBeanConfigurerSupport().     configurer.configureBean(beanInstance).     assertNull(beanInstance.getName()). }
false;public;0;15;;@Test public void configureBeanReallyDoesDefaultToUsingTheFullyQualifiedClassNameOfTheSuppliedBeanInstance() throws Exception {     TestBean beanInstance = new TestBean().     BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(TestBean.class).     builder.addPropertyValue("name", "Harriet Wheeler").     DefaultListableBeanFactory factory = new DefaultListableBeanFactory().     factory.registerBeanDefinition(beanInstance.getClass().getName(), builder.getBeanDefinition()).     BeanConfigurerSupport configurer = new StubBeanConfigurerSupport().     configurer.setBeanFactory(factory).     configurer.afterPropertiesSet().     configurer.configureBean(beanInstance).     assertEquals("Bean is evidently not being configured (for some reason)", "Harriet Wheeler", beanInstance.getName()). }
false;public;0;19;;@Test public void configureBeanPerformsAutowiringByNameIfAppropriateBeanWiringInfoResolverIsPluggedIn() throws Exception {     TestBean beanInstance = new TestBean().     // spouse for autowiring by name...     BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(TestBean.class).     builder.addConstructorArgValue("David Gavurin").     DefaultListableBeanFactory factory = new DefaultListableBeanFactory().     factory.registerBeanDefinition("spouse", builder.getBeanDefinition()).     BeanWiringInfoResolver resolver = mock(BeanWiringInfoResolver.class).     given(resolver.resolveWiringInfo(beanInstance)).willReturn(new BeanWiringInfo(BeanWiringInfo.AUTOWIRE_BY_NAME, false)).     BeanConfigurerSupport configurer = new StubBeanConfigurerSupport().     configurer.setBeanFactory(factory).     configurer.setBeanWiringInfoResolver(resolver).     configurer.configureBean(beanInstance).     assertEquals("Bean is evidently not being configured (for some reason)", "David Gavurin", beanInstance.getSpouse().getName()). }
false;public;0;19;;@Test public void configureBeanPerformsAutowiringByTypeIfAppropriateBeanWiringInfoResolverIsPluggedIn() throws Exception {     TestBean beanInstance = new TestBean().     // spouse for autowiring by type...     BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(TestBean.class).     builder.addConstructorArgValue("David Gavurin").     DefaultListableBeanFactory factory = new DefaultListableBeanFactory().     factory.registerBeanDefinition("Mmm, I fancy a salad!", builder.getBeanDefinition()).     BeanWiringInfoResolver resolver = mock(BeanWiringInfoResolver.class).     given(resolver.resolveWiringInfo(beanInstance)).willReturn(new BeanWiringInfo(BeanWiringInfo.AUTOWIRE_BY_TYPE, false)).     BeanConfigurerSupport configurer = new StubBeanConfigurerSupport().     configurer.setBeanFactory(factory).     configurer.setBeanWiringInfoResolver(resolver).     configurer.configureBean(beanInstance).     assertEquals("Bean is evidently not being configured (for some reason)", "David Gavurin", beanInstance.getSpouse().getName()). }
