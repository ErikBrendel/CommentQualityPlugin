# id;timestamp;commentText;codeText;commentWords;codeWords
AutowireUtilsTests -> MyTypeWithMethods -> public static <T> T extractValueFrom(MyInterfaceType<T> myInterfaceType);1381787404;Extract some value of the type supported by the interface (i.e., by a concrete,_non-generic implementation of the interface).;public static <T> T extractValueFrom(MyInterfaceType<T> myInterfaceType) {_			return null__		};extract,some,value,of,the,type,supported,by,the,interface,i,e,by,a,concrete,non,generic,implementation,of,the,interface;public,static,t,t,extract,value,from,my,interface,type,t,my,interface,type,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <T> T extractValueFrom(MyInterfaceType<T> myInterfaceType);1382826936;Extract some value of the type supported by the interface (i.e., by a concrete,_non-generic implementation of the interface).;public static <T> T extractValueFrom(MyInterfaceType<T> myInterfaceType) {_			return null__		};extract,some,value,of,the,type,supported,by,the,interface,i,e,by,a,concrete,non,generic,implementation,of,the,interface;public,static,t,t,extract,value,from,my,interface,type,t,my,interface,type,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <T> T extractValueFrom(MyInterfaceType<T> myInterfaceType);1467730834;Extract some value of the type supported by the interface (i.e., by a concrete,_non-generic implementation of the interface).;public static <T> T extractValueFrom(MyInterfaceType<T> myInterfaceType) {_			return null__		};extract,some,value,of,the,type,supported,by,the,interface,i,e,by,a,concrete,non,generic,implementation,of,the,interface;public,static,t,t,extract,value,from,my,interface,type,t,my,interface,type,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <T> T extractValueFrom(MyInterfaceType<T> myInterfaceType);1518615840;Extract some value of the type supported by the interface (i.e., by a concrete,_non-generic implementation of the interface).;public static <T> T extractValueFrom(MyInterfaceType<T> myInterfaceType) {_			return null__		};extract,some,value,of,the,type,supported,by,the,interface,i,e,by,a,concrete,non,generic,implementation,of,the,interface;public,static,t,t,extract,value,from,my,interface,type,t,my,interface,type,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <T> T extractValueFrom(MyInterfaceType<T> myInterfaceType);1551276945;Extract some value of the type supported by the interface (i.e., by a concrete,_non-generic implementation of the interface).;public static <T> T extractValueFrom(MyInterfaceType<T> myInterfaceType) {_			return null__		};extract,some,value,of,the,type,supported,by,the,interface,i,e,by,a,concrete,non,generic,implementation,of,the,interface;public,static,t,t,extract,value,from,my,interface,type,t,my,interface,type,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <T> T extractValueFrom(MyInterfaceType<T> myInterfaceType);1551281134;Extract some value of the type supported by the interface (i.e., by a concrete,_non-generic implementation of the interface).;public static <T> T extractValueFrom(MyInterfaceType<T> myInterfaceType) {_			return null__		};extract,some,value,of,the,type,supported,by,the,interface,i,e,by,a,concrete,non,generic,implementation,of,the,interface;public,static,t,t,extract,value,from,my,interface,type,t,my,interface,type,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <T> T createNamedProxy(String name, T object);1381787404;Similar to {@link #createProxy(Object)} but adds an additional argument before_the argument of type {@code T}. Note that they may potentially be of the same_time when invoked!;public static <T> T createNamedProxy(String name, T object) {_			return null__		};similar,to,link,create,proxy,object,but,adds,an,additional,argument,before,the,argument,of,type,code,t,note,that,they,may,potentially,be,of,the,same,time,when,invoked;public,static,t,t,create,named,proxy,string,name,t,object,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <T> T createNamedProxy(String name, T object);1382826936;Similar to {@link #createProxy(Object)} but adds an additional argument before_the argument of type {@code T}. Note that they may potentially be of the same_time when invoked!;public static <T> T createNamedProxy(String name, T object) {_			return null__		};similar,to,link,create,proxy,object,but,adds,an,additional,argument,before,the,argument,of,type,code,t,note,that,they,may,potentially,be,of,the,same,time,when,invoked;public,static,t,t,create,named,proxy,string,name,t,object,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <T> T createNamedProxy(String name, T object);1467730834;Similar to {@link #createProxy(Object)} but adds an additional argument before_the argument of type {@code T}. Note that they may potentially be of the same_time when invoked!;public static <T> T createNamedProxy(String name, T object) {_			return null__		};similar,to,link,create,proxy,object,but,adds,an,additional,argument,before,the,argument,of,type,code,t,note,that,they,may,potentially,be,of,the,same,time,when,invoked;public,static,t,t,create,named,proxy,string,name,t,object,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <T> T createNamedProxy(String name, T object);1518615840;Similar to {@link #createProxy(Object)} but adds an additional argument before_the argument of type {@code T}. Note that they may potentially be of the same_time when invoked!;public static <T> T createNamedProxy(String name, T object) {_			return null__		};similar,to,link,create,proxy,object,but,adds,an,additional,argument,before,the,argument,of,type,code,t,note,that,they,may,potentially,be,of,the,same,time,when,invoked;public,static,t,t,create,named,proxy,string,name,t,object,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <T> T createNamedProxy(String name, T object);1551276945;Similar to {@link #createProxy(Object)} but adds an additional argument before_the argument of type {@code T}. Note that they may potentially be of the same_time when invoked!;public static <T> T createNamedProxy(String name, T object) {_			return null__		};similar,to,link,create,proxy,object,but,adds,an,additional,argument,before,the,argument,of,type,code,t,note,that,they,may,potentially,be,of,the,same,time,when,invoked;public,static,t,t,create,named,proxy,string,name,t,object,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <T> T createNamedProxy(String name, T object);1551281134;Similar to {@link #createProxy(Object)} but adds an additional argument before_the argument of type {@code T}. Note that they may potentially be of the same_time when invoked!;public static <T> T createNamedProxy(String name, T object) {_			return null__		};similar,to,link,create,proxy,object,but,adds,an,additional,argument,before,the,argument,of,type,code,t,note,that,they,may,potentially,be,of,the,same,time,when,invoked;public,static,t,t,create,named,proxy,string,name,t,object,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <T> T createProxy(T object);1381787404;Simulates a factory method that wraps the supplied object in a proxy of the_same type.;public static <T> T createProxy(T object) {_			return null__		};simulates,a,factory,method,that,wraps,the,supplied,object,in,a,proxy,of,the,same,type;public,static,t,t,create,proxy,t,object,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <T> T createProxy(T object);1382826936;Simulates a factory method that wraps the supplied object in a proxy of the_same type.;public static <T> T createProxy(T object) {_			return null__		};simulates,a,factory,method,that,wraps,the,supplied,object,in,a,proxy,of,the,same,type;public,static,t,t,create,proxy,t,object,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <T> T createProxy(T object);1467730834;Simulates a factory method that wraps the supplied object in a proxy of the_same type.;public static <T> T createProxy(T object) {_			return null__		};simulates,a,factory,method,that,wraps,the,supplied,object,in,a,proxy,of,the,same,type;public,static,t,t,create,proxy,t,object,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <T> T createProxy(T object);1518615840;Simulates a factory method that wraps the supplied object in a proxy of the_same type.;public static <T> T createProxy(T object) {_			return null__		};simulates,a,factory,method,that,wraps,the,supplied,object,in,a,proxy,of,the,same,type;public,static,t,t,create,proxy,t,object,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <T> T createProxy(T object);1551276945;Simulates a factory method that wraps the supplied object in a proxy of the_same type.;public static <T> T createProxy(T object) {_			return null__		};simulates,a,factory,method,that,wraps,the,supplied,object,in,a,proxy,of,the,same,type;public,static,t,t,create,proxy,t,object,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <T> T createProxy(T object);1551281134;Simulates a factory method that wraps the supplied object in a proxy of the_same type.;public static <T> T createProxy(T object) {_			return null__		};simulates,a,factory,method,that,wraps,the,supplied,object,in,a,proxy,of,the,same,type;public,static,t,t,create,proxy,t,object,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <MOCK> MOCK createMock(Class<MOCK> toMock);1381787404;Simulates factory methods found in libraries such as Mockito and EasyMock.;public static <MOCK> MOCK createMock(Class<MOCK> toMock) {_			return null__		};simulates,factory,methods,found,in,libraries,such,as,mockito,and,easy,mock;public,static,mock,mock,create,mock,class,mock,to,mock,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <MOCK> MOCK createMock(Class<MOCK> toMock);1382826936;Simulates factory methods found in libraries such as Mockito and EasyMock.;public static <MOCK> MOCK createMock(Class<MOCK> toMock) {_			return null__		};simulates,factory,methods,found,in,libraries,such,as,mockito,and,easy,mock;public,static,mock,mock,create,mock,class,mock,to,mock,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <MOCK> MOCK createMock(Class<MOCK> toMock);1467730834;Simulates factory methods found in libraries such as Mockito and EasyMock.;public static <MOCK> MOCK createMock(Class<MOCK> toMock) {_			return null__		};simulates,factory,methods,found,in,libraries,such,as,mockito,and,easy,mock;public,static,mock,mock,create,mock,class,mock,to,mock,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <MOCK> MOCK createMock(Class<MOCK> toMock);1518615840;Simulates factory methods found in libraries such as Mockito and EasyMock.;public static <MOCK> MOCK createMock(Class<MOCK> toMock) {_			return null__		};simulates,factory,methods,found,in,libraries,such,as,mockito,and,easy,mock;public,static,mock,mock,create,mock,class,mock,to,mock,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <MOCK> MOCK createMock(Class<MOCK> toMock);1551276945;Simulates factory methods found in libraries such as Mockito and EasyMock.;public static <MOCK> MOCK createMock(Class<MOCK> toMock) {_			return null__		};simulates,factory,methods,found,in,libraries,such,as,mockito,and,easy,mock;public,static,mock,mock,create,mock,class,mock,to,mock,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <MOCK> MOCK createMock(Class<MOCK> toMock);1551281134;Simulates factory methods found in libraries such as Mockito and EasyMock.;public static <MOCK> MOCK createMock(Class<MOCK> toMock) {_			return null__		};simulates,factory,methods,found,in,libraries,such,as,mockito,and,easy,mock;public,static,mock,mock,create,mock,class,mock,to,mock,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <T> T createNamedMock(String name, Class<T> toMock);1381787404;Similar to {@link #createMock(Class)} but adds an additional method argument_before the parameterized argument.;public static <T> T createNamedMock(String name, Class<T> toMock) {_			return null__		};similar,to,link,create,mock,class,but,adds,an,additional,method,argument,before,the,parameterized,argument;public,static,t,t,create,named,mock,string,name,class,t,to,mock,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <T> T createNamedMock(String name, Class<T> toMock);1382826936;Similar to {@link #createMock(Class)} but adds an additional method argument_before the parameterized argument.;public static <T> T createNamedMock(String name, Class<T> toMock) {_			return null__		};similar,to,link,create,mock,class,but,adds,an,additional,method,argument,before,the,parameterized,argument;public,static,t,t,create,named,mock,string,name,class,t,to,mock,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <T> T createNamedMock(String name, Class<T> toMock);1467730834;Similar to {@link #createMock(Class)} but adds an additional method argument_before the parameterized argument.;public static <T> T createNamedMock(String name, Class<T> toMock) {_			return null__		};similar,to,link,create,mock,class,but,adds,an,additional,method,argument,before,the,parameterized,argument;public,static,t,t,create,named,mock,string,name,class,t,to,mock,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <T> T createNamedMock(String name, Class<T> toMock);1518615840;Similar to {@link #createMock(Class)} but adds an additional method argument_before the parameterized argument.;public static <T> T createNamedMock(String name, Class<T> toMock) {_			return null__		};similar,to,link,create,mock,class,but,adds,an,additional,method,argument,before,the,parameterized,argument;public,static,t,t,create,named,mock,string,name,class,t,to,mock,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <T> T createNamedMock(String name, Class<T> toMock);1551276945;Similar to {@link #createMock(Class)} but adds an additional method argument_before the parameterized argument.;public static <T> T createNamedMock(String name, Class<T> toMock) {_			return null__		};similar,to,link,create,mock,class,but,adds,an,additional,method,argument,before,the,parameterized,argument;public,static,t,t,create,named,mock,string,name,class,t,to,mock,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <T> T createNamedMock(String name, Class<T> toMock);1551281134;Similar to {@link #createMock(Class)} but adds an additional method argument_before the parameterized argument.;public static <T> T createNamedMock(String name, Class<T> toMock) {_			return null__		};similar,to,link,create,mock,class,but,adds,an,additional,method,argument,before,the,parameterized,argument;public,static,t,t,create,named,mock,string,name,class,t,to,mock,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <K, V> V extractMagicValue(Map<K, V> map);1381787404;Extract some magic value from the supplied map.;public static <K, V> V extractMagicValue(Map<K, V> map) {_			return null__		};extract,some,magic,value,from,the,supplied,map;public,static,k,v,v,extract,magic,value,map,k,v,map,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <K, V> V extractMagicValue(Map<K, V> map);1382826936;Extract some magic value from the supplied map.;public static <K, V> V extractMagicValue(Map<K, V> map) {_			return null__		};extract,some,magic,value,from,the,supplied,map;public,static,k,v,v,extract,magic,value,map,k,v,map,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <K, V> V extractMagicValue(Map<K, V> map);1467730834;Extract some magic value from the supplied map.;public static <K, V> V extractMagicValue(Map<K, V> map) {_			return null__		};extract,some,magic,value,from,the,supplied,map;public,static,k,v,v,extract,magic,value,map,k,v,map,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <K, V> V extractMagicValue(Map<K, V> map);1518615840;Extract some magic value from the supplied map.;public static <K, V> V extractMagicValue(Map<K, V> map) {_			return null__		};extract,some,magic,value,from,the,supplied,map;public,static,k,v,v,extract,magic,value,map,k,v,map,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <K, V> V extractMagicValue(Map<K, V> map);1551276945;Extract some magic value from the supplied map.;public static <K, V> V extractMagicValue(Map<K, V> map) {_			return null__		};extract,some,magic,value,from,the,supplied,map;public,static,k,v,v,extract,magic,value,map,k,v,map,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <K, V> V extractMagicValue(Map<K, V> map);1551281134;Extract some magic value from the supplied map.;public static <K, V> V extractMagicValue(Map<K, V> map) {_			return null__		};extract,some,magic,value,from,the,supplied,map;public,static,k,v,v,extract,magic,value,map,k,v,map,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <V extends Object, T> T createVMock(V name, Class<T> toMock);1381787404;Similar to {@link #createNamedMock(String, Class)} but adds an additional_parameterized type.;public static <V extends Object, T> T createVMock(V name, Class<T> toMock) {_			return null__		};similar,to,link,create,named,mock,string,class,but,adds,an,additional,parameterized,type;public,static,v,extends,object,t,t,create,vmock,v,name,class,t,to,mock,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <V extends Object, T> T createVMock(V name, Class<T> toMock);1382826936;Similar to {@link #createNamedMock(String, Class)} but adds an additional_parameterized type.;public static <V extends Object, T> T createVMock(V name, Class<T> toMock) {_			return null__		};similar,to,link,create,named,mock,string,class,but,adds,an,additional,parameterized,type;public,static,v,extends,object,t,t,create,vmock,v,name,class,t,to,mock,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <V extends Object, T> T createVMock(V name, Class<T> toMock);1467730834;Similar to {@link #createNamedMock(String, Class)} but adds an additional_parameterized type.;public static <V extends Object, T> T createVMock(V name, Class<T> toMock) {_			return null__		};similar,to,link,create,named,mock,string,class,but,adds,an,additional,parameterized,type;public,static,v,extends,object,t,t,create,vmock,v,name,class,t,to,mock,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <V extends Object, T> T createVMock(V name, Class<T> toMock);1518615840;Similar to {@link #createNamedMock(String, Class)} but adds an additional_parameterized type.;public static <V extends Object, T> T createVMock(V name, Class<T> toMock) {_			return null__		};similar,to,link,create,named,mock,string,class,but,adds,an,additional,parameterized,type;public,static,v,extends,object,t,t,create,vmock,v,name,class,t,to,mock,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <V extends Object, T> T createVMock(V name, Class<T> toMock);1551276945;Similar to {@link #createNamedMock(String, Class)} but adds an additional_parameterized type.;public static <V extends Object, T> T createVMock(V name, Class<T> toMock) {_			return null__		};similar,to,link,create,named,mock,string,class,but,adds,an,additional,parameterized,type;public,static,v,extends,object,t,t,create,vmock,v,name,class,t,to,mock,return,null
AutowireUtilsTests -> MyTypeWithMethods -> public static <V extends Object, T> T createVMock(V name, Class<T> toMock);1551281134;Similar to {@link #createNamedMock(String, Class)} but adds an additional_parameterized type.;public static <V extends Object, T> T createVMock(V name, Class<T> toMock) {_			return null__		};similar,to,link,create,named,mock,string,class,but,adds,an,additional,parameterized,type;public,static,v,extends,object,t,t,create,vmock,v,name,class,t,to,mock,return,null
