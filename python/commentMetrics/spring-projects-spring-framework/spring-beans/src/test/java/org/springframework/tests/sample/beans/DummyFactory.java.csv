# id;timestamp;commentText;codeText;commentWords;codeWords
DummyFactory -> public static void reset();1362408075;Clear static state.;public static void reset() {_		prototypeCreated = false__	};clear,static,state;public,static,void,reset,prototype,created,false
DummyFactory -> public static void reset();1385507683;Clear static state.;public static void reset() {_		prototypeCreated = false__	};clear,static,state;public,static,void,reset,prototype,created,false
DummyFactory -> public static void reset();1413848647;Clear static state.;public static void reset() {_		prototypeCreated = false__	};clear,static,state;public,static,void,reset,prototype,created,false
DummyFactory -> public static void reset();1530174524;Clear static state.;public static void reset() {_		prototypeCreated = false__	};clear,static,state;public,static,void,reset,prototype,created,false
DummyFactory -> @Override 	public Object getObject() throws BeansException;1362408075;Return the managed object, supporting both singleton_and prototype mode._@see FactoryBean#getObject();@Override_	public Object getObject() throws BeansException {_		if (isSingleton()) {_			return this.testBean__		}_		else {_			TestBean prototype = new TestBean("prototype created at " + System.currentTimeMillis(), 11)__			if (this.beanFactory != null) {_				this.beanFactory.applyBeanPostProcessorsBeforeInitialization(prototype, this.beanName)__			}_			prototypeCreated = true__			return prototype__		}_	};return,the,managed,object,supporting,both,singleton,and,prototype,mode,see,factory,bean,get,object;override,public,object,get,object,throws,beans,exception,if,is,singleton,return,this,test,bean,else,test,bean,prototype,new,test,bean,prototype,created,at,system,current,time,millis,11,if,this,bean,factory,null,this,bean,factory,apply,bean,post,processors,before,initialization,prototype,this,bean,name,prototype,created,true,return,prototype
DummyFactory -> @Override 	public Object getObject() throws BeansException;1385507683;Return the managed object, supporting both singleton_and prototype mode._@see FactoryBean#getObject();@Override_	public Object getObject() throws BeansException {_		if (isSingleton()) {_			return this.testBean__		}_		else {_			TestBean prototype = new TestBean("prototype created at " + System.currentTimeMillis(), 11)__			if (this.beanFactory != null) {_				this.beanFactory.applyBeanPostProcessorsBeforeInitialization(prototype, this.beanName)__			}_			prototypeCreated = true__			return prototype__		}_	};return,the,managed,object,supporting,both,singleton,and,prototype,mode,see,factory,bean,get,object;override,public,object,get,object,throws,beans,exception,if,is,singleton,return,this,test,bean,else,test,bean,prototype,new,test,bean,prototype,created,at,system,current,time,millis,11,if,this,bean,factory,null,this,bean,factory,apply,bean,post,processors,before,initialization,prototype,this,bean,name,prototype,created,true,return,prototype
DummyFactory -> @Override 	public Object getObject() throws BeansException;1413848647;Return the managed object, supporting both singleton_and prototype mode._@see FactoryBean#getObject();@Override_	public Object getObject() throws BeansException {_		if (isSingleton()) {_			return this.testBean__		}_		else {_			TestBean prototype = new TestBean("prototype created at " + System.currentTimeMillis(), 11)__			if (this.beanFactory != null) {_				this.beanFactory.applyBeanPostProcessorsBeforeInitialization(prototype, this.beanName)__			}_			prototypeCreated = true__			return prototype__		}_	};return,the,managed,object,supporting,both,singleton,and,prototype,mode,see,factory,bean,get,object;override,public,object,get,object,throws,beans,exception,if,is,singleton,return,this,test,bean,else,test,bean,prototype,new,test,bean,prototype,created,at,system,current,time,millis,11,if,this,bean,factory,null,this,bean,factory,apply,bean,post,processors,before,initialization,prototype,this,bean,name,prototype,created,true,return,prototype
DummyFactory -> @Override 	public Object getObject() throws BeansException;1530174524;Return the managed object, supporting both singleton_and prototype mode._@see FactoryBean#getObject();@Override_	public Object getObject() throws BeansException {_		if (isSingleton()) {_			return this.testBean__		}_		else {_			TestBean prototype = new TestBean("prototype created at " + System.currentTimeMillis(), 11)__			if (this.beanFactory != null) {_				this.beanFactory.applyBeanPostProcessorsBeforeInitialization(prototype, this.beanName)__			}_			prototypeCreated = true__			return prototype__		}_	};return,the,managed,object,supporting,both,singleton,and,prototype,mode,see,factory,bean,get,object;override,public,object,get,object,throws,beans,exception,if,is,singleton,return,this,test,bean,else,test,bean,prototype,new,test,bean,prototype,created,at,system,current,time,millis,11,if,this,bean,factory,null,this,bean,factory,apply,bean,post,processors,before,initialization,prototype,this,bean,name,prototype,created,true,return,prototype
DummyFactory -> public boolean wasInitialized();1362408075;Was this initialized by invocation of the_afterPropertiesSet() method from the InitializingBean interface?;public boolean wasInitialized() {_		return initialized__	};was,this,initialized,by,invocation,of,the,after,properties,set,method,from,the,initializing,bean,interface;public,boolean,was,initialized,return,initialized
DummyFactory -> public boolean wasInitialized();1385507683;Was this initialized by invocation of the_afterPropertiesSet() method from the InitializingBean interface?;public boolean wasInitialized() {_		return initialized__	};was,this,initialized,by,invocation,of,the,after,properties,set,method,from,the,initializing,bean,interface;public,boolean,was,initialized,return,initialized
DummyFactory -> public boolean wasInitialized();1413848647;Was this initialized by invocation of the_afterPropertiesSet() method from the InitializingBean interface?;public boolean wasInitialized() {_		return initialized__	};was,this,initialized,by,invocation,of,the,after,properties,set,method,from,the,initializing,bean,interface;public,boolean,was,initialized,return,initialized
DummyFactory -> public boolean wasInitialized();1530174524;Was this initialized by invocation of the_afterPropertiesSet() method from the InitializingBean interface?;public boolean wasInitialized() {_		return initialized__	};was,this,initialized,by,invocation,of,the,after,properties,set,method,from,the,initializing,bean,interface;public,boolean,was,initialized,return,initialized
DummyFactory -> public void setSingleton(boolean singleton);1362408075;Set if the bean managed by this factory is a singleton.;public void setSingleton(boolean singleton) {_		this.singleton = singleton__	};set,if,the,bean,managed,by,this,factory,is,a,singleton;public,void,set,singleton,boolean,singleton,this,singleton,singleton
DummyFactory -> public void setSingleton(boolean singleton);1385507683;Set if the bean managed by this factory is a singleton.;public void setSingleton(boolean singleton) {_		this.singleton = singleton__	};set,if,the,bean,managed,by,this,factory,is,a,singleton;public,void,set,singleton,boolean,singleton,this,singleton,singleton
DummyFactory -> public void setSingleton(boolean singleton);1413848647;Set if the bean managed by this factory is a singleton.;public void setSingleton(boolean singleton) {_		this.singleton = singleton__	};set,if,the,bean,managed,by,this,factory,is,a,singleton;public,void,set,singleton,boolean,singleton,this,singleton,singleton
DummyFactory -> public void setSingleton(boolean singleton);1530174524;Set if the bean managed by this factory is a singleton.;public void setSingleton(boolean singleton) {_		this.singleton = singleton__	};set,if,the,bean,managed,by,this,factory,is,a,singleton;public,void,set,singleton,boolean,singleton,this,singleton,singleton
DummyFactory -> @Override 	public boolean isSingleton();1362408075;Return if the bean managed by this factory is a singleton._@see FactoryBean#isSingleton();@Override_	public boolean isSingleton() {_		return this.singleton__	};return,if,the,bean,managed,by,this,factory,is,a,singleton,see,factory,bean,is,singleton;override,public,boolean,is,singleton,return,this,singleton
DummyFactory -> @Override 	public boolean isSingleton();1385507683;Return if the bean managed by this factory is a singleton._@see FactoryBean#isSingleton();@Override_	public boolean isSingleton() {_		return this.singleton__	};return,if,the,bean,managed,by,this,factory,is,a,singleton,see,factory,bean,is,singleton;override,public,boolean,is,singleton,return,this,singleton
DummyFactory -> @Override 	public boolean isSingleton();1413848647;Return if the bean managed by this factory is a singleton._@see FactoryBean#isSingleton();@Override_	public boolean isSingleton() {_		return this.singleton__	};return,if,the,bean,managed,by,this,factory,is,a,singleton,see,factory,bean,is,singleton;override,public,boolean,is,singleton,return,this,singleton
DummyFactory -> @Override 	public boolean isSingleton();1530174524;Return if the bean managed by this factory is a singleton._@see FactoryBean#isSingleton();@Override_	public boolean isSingleton() {_		return this.singleton__	};return,if,the,bean,managed,by,this,factory,is,a,singleton,see,factory,bean,is,singleton;override,public,boolean,is,singleton,return,this,singleton
