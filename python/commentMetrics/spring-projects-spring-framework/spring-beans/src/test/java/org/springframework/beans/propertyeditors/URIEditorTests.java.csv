commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Test public void standardURI() throws Exception {     doTestURI("mailto:juergen.hoeller@interface21.com"). }
false;public;0;4;;@Test public void withNonExistentResource() throws Exception {     doTestURI("gonna:/freak/in/the/morning/freak/in/the.evening"). }
false;public;0;4;;@Test public void standardURL() throws Exception {     doTestURI("http://www.springframework.org"). }
false;public;0;4;;@Test public void standardURLWithFragment() throws Exception {     doTestURI("http://www.springframework.org#1"). }
false;public;0;9;;@Test public void standardURLWithWhitespace() throws Exception {     PropertyEditor uriEditor = new URIEditor().     uriEditor.setAsText("  http://www.springframework.org  ").     Object value = uriEditor.getValue().     assertTrue(value instanceof URI).     URI uri = (URI) value.     assertEquals("http://www.springframework.org", uri.toString()). }
false;public;0;11;;@Test public void classpathURL() throws Exception {     PropertyEditor uriEditor = new URIEditor(getClass().getClassLoader()).     uriEditor.setAsText("classpath:" + ClassUtils.classPackageAsResourcePath(getClass()) + "/" + ClassUtils.getShortName(getClass()) + ".class").     Object value = uriEditor.getValue().     assertTrue(value instanceof URI).     URI uri = (URI) value.     assertEquals(uri.toString(), uriEditor.getAsText()).     assertTrue(!uri.getScheme().startsWith("classpath")). }
false;public;0;11;;@Test public void classpathURLWithWhitespace() throws Exception {     PropertyEditor uriEditor = new URIEditor(getClass().getClassLoader()).     uriEditor.setAsText("  classpath:" + ClassUtils.classPackageAsResourcePath(getClass()) + "/" + ClassUtils.getShortName(getClass()) + ".class  ").     Object value = uriEditor.getValue().     assertTrue(value instanceof URI).     URI uri = (URI) value.     assertEquals(uri.toString(), uriEditor.getAsText()).     assertTrue(!uri.getScheme().startsWith("classpath")). }
false;public;0;10;;@Test public void classpathURLAsIs() throws Exception {     PropertyEditor uriEditor = new URIEditor().     uriEditor.setAsText("classpath:test.txt").     Object value = uriEditor.getValue().     assertTrue(value instanceof URI).     URI uri = (URI) value.     assertEquals(uri.toString(), uriEditor.getAsText()).     assertTrue(uri.getScheme().startsWith("classpath")). }
false;public;0;7;;@Test public void setAsTextWithNull() throws Exception {     PropertyEditor uriEditor = new URIEditor().     uriEditor.setAsText(null).     assertNull(uriEditor.getValue()).     assertEquals("", uriEditor.getAsText()). }
false;public;0;5;;@Test public void getAsTextReturnsEmptyStringIfValueNotSet() throws Exception {     PropertyEditor uriEditor = new URIEditor().     assertEquals("", uriEditor.getAsText()). }
false;public;0;10;;@Test public void encodeURI() throws Exception {     PropertyEditor uriEditor = new URIEditor().     uriEditor.setAsText("http://example.com/spaces and \u20AC").     Object value = uriEditor.getValue().     assertTrue(value instanceof URI).     URI uri = (URI) value.     assertEquals(uri.toString(), uriEditor.getAsText()).     assertEquals("http://example.com/spaces%20and%20%E2%82%AC", uri.toASCIIString()). }
false;public;0;10;;@Test public void encodeAlreadyEncodedURI() throws Exception {     PropertyEditor uriEditor = new URIEditor(false).     uriEditor.setAsText("http://example.com/spaces%20and%20%E2%82%AC").     Object value = uriEditor.getValue().     assertTrue(value instanceof URI).     URI uri = (URI) value.     assertEquals(uri.toString(), uriEditor.getAsText()).     assertEquals("http://example.com/spaces%20and%20%E2%82%AC", uri.toASCIIString()). }
false;private;1;8;;private void doTestURI(String uriSpec) {     PropertyEditor uriEditor = new URIEditor().     uriEditor.setAsText(uriSpec).     Object value = uriEditor.getValue().     assertTrue(value instanceof URI).     URI uri = (URI) value.     assertEquals(uriSpec, uri.toString()). }
