commented;modifiers;parameterAmount;loc;comment;code
true;public;0;4;/**  * Return the description of the resource that the bean  * definition came from, if any.  */ ;/**  * Return the description of the resource that the bean  * definition came from, if any.  */ @Nullable public String getResourceDescription() {     return this.resourceDescription. }
true;public;0;4;/**  * Return the name of the bean requested, if any.  */ ;/**  * Return the name of the bean requested, if any.  */ @Nullable public String getBeanName() {     return this.beanName. }
true;public;1;6;/**  * Add a related cause to this bean creation exception,  * not being a direct cause of the failure but having occurred  * earlier in the creation of the same bean instance.  * @param ex the related cause to add  */ ;/**  * Add a related cause to this bean creation exception,  * not being a direct cause of the failure but having occurred  * earlier in the creation of the same bean instance.  * @param ex the related cause to add  */ public void addRelatedCause(Throwable ex) {     if (this.relatedCauses == null) {         this.relatedCauses = new ArrayList<>().     }     this.relatedCauses.add(ex). }
true;public;0;7;/**  * Return the related causes, if any.  * @return the array of related causes, or {@code null} if none  */ ;/**  * Return the related causes, if any.  * @return the array of related causes, or {@code null} if none  */ @Nullable public Throwable[] getRelatedCauses() {     if (this.relatedCauses == null) {         return null.     }     return this.relatedCauses.toArray(new Throwable[0]). }
false;public;0;11;;@Override public String toString() {     StringBuilder sb = new StringBuilder(super.toString()).     if (this.relatedCauses != null) {         for (Throwable relatedCause : this.relatedCauses) {             sb.append("\nRelated cause: ").             sb.append(relatedCause).         }     }     return sb.toString(). }
false;public;1;12;;@Override public void printStackTrace(PrintStream ps) {     synchronized (ps) {         super.printStackTrace(ps).         if (this.relatedCauses != null) {             for (Throwable relatedCause : this.relatedCauses) {                 ps.println("Related cause:").                 relatedCause.printStackTrace(ps).             }         }     } }
false;public;1;12;;@Override public void printStackTrace(PrintWriter pw) {     synchronized (pw) {         super.printStackTrace(pw).         if (this.relatedCauses != null) {             for (Throwable relatedCause : this.relatedCauses) {                 pw.println("Related cause:").                 relatedCause.printStackTrace(pw).             }         }     } }
false;public;1;15;;@Override public boolean contains(@Nullable Class<?> exClass) {     if (super.contains(exClass)) {         return true.     }     if (this.relatedCauses != null) {         for (Throwable relatedCause : this.relatedCauses) {             if (relatedCause instanceof NestedRuntimeException && ((NestedRuntimeException) relatedCause).contains(exClass)) {                 return true.             }         }     }     return false. }
