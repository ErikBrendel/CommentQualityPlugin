# id;timestamp;commentText;codeText;commentWords;codeWords
ObjectFactoryCreatingFactoryBean -> public void setTargetBeanName(String targetBeanName);1328020251;Set the name of the target bean._<p>The target does not <i>have</> to be a non-singleton bean, but realisticially_always will be (because if the target bean were a singleton, then said singleton_bean could simply be injected straight into the dependent object, thus obviating_the need for the extra level of indirection afforded by this factory approach).;public void setTargetBeanName(String targetBeanName) {_		this.targetBeanName = targetBeanName__	};set,the,name,of,the,target,bean,p,the,target,does,not,i,have,to,be,a,non,singleton,bean,but,realisticially,always,will,be,because,if,the,target,bean,were,a,singleton,then,said,singleton,bean,could,simply,be,injected,straight,into,the,dependent,object,thus,obviating,the,need,for,the,extra,level,of,indirection,afforded,by,this,factory,approach;public,void,set,target,bean,name,string,target,bean,name,this,target,bean,name,target,bean,name
ObjectFactoryCreatingFactoryBean -> public void setTargetBeanName(String targetBeanName);1354227055;Set the name of the target bean._<p>The target does not <i>have</i> to be a non-singleton bean, but realistically_always will be (because if the target bean were a singleton, then said singleton_bean could simply be injected straight into the dependent object, thus obviating_the need for the extra level of indirection afforded by this factory approach).;public void setTargetBeanName(String targetBeanName) {_		this.targetBeanName = targetBeanName__	};set,the,name,of,the,target,bean,p,the,target,does,not,i,have,i,to,be,a,non,singleton,bean,but,realistically,always,will,be,because,if,the,target,bean,were,a,singleton,then,said,singleton,bean,could,simply,be,injected,straight,into,the,dependent,object,thus,obviating,the,need,for,the,extra,level,of,indirection,afforded,by,this,factory,approach;public,void,set,target,bean,name,string,target,bean,name,this,target,bean,name,target,bean,name
ObjectFactoryCreatingFactoryBean -> public void setTargetBeanName(String targetBeanName);1356735495;Set the name of the target bean._<p>The target does not <i>have</i> to be a non-singleton bean, but realistically_always will be (because if the target bean were a singleton, then said singleton_bean could simply be injected straight into the dependent object, thus obviating_the need for the extra level of indirection afforded by this factory approach).;public void setTargetBeanName(String targetBeanName) {_		this.targetBeanName = targetBeanName__	};set,the,name,of,the,target,bean,p,the,target,does,not,i,have,i,to,be,a,non,singleton,bean,but,realistically,always,will,be,because,if,the,target,bean,were,a,singleton,then,said,singleton,bean,could,simply,be,injected,straight,into,the,dependent,object,thus,obviating,the,need,for,the,extra,level,of,indirection,afforded,by,this,factory,approach;public,void,set,target,bean,name,string,target,bean,name,this,target,bean,name,target,bean,name
ObjectFactoryCreatingFactoryBean -> public void setTargetBeanName(String targetBeanName);1357119239;Set the name of the target bean._<p>The target does not <i>have</i> to be a non-singleton bean, but realistically_always will be (because if the target bean were a singleton, then said singleton_bean could simply be injected straight into the dependent object, thus obviating_the need for the extra level of indirection afforded by this factory approach).;public void setTargetBeanName(String targetBeanName) {_		this.targetBeanName = targetBeanName__	};set,the,name,of,the,target,bean,p,the,target,does,not,i,have,i,to,be,a,non,singleton,bean,but,realistically,always,will,be,because,if,the,target,bean,were,a,singleton,then,said,singleton,bean,could,simply,be,injected,straight,into,the,dependent,object,thus,obviating,the,need,for,the,extra,level,of,indirection,afforded,by,this,factory,approach;public,void,set,target,bean,name,string,target,bean,name,this,target,bean,name,target,bean,name
ObjectFactoryCreatingFactoryBean -> public void setTargetBeanName(String targetBeanName);1368482696;Set the name of the target bean._<p>The target does not <i>have</i> to be a non-singleton bean, but realistically_always will be (because if the target bean were a singleton, then said singleton_bean could simply be injected straight into the dependent object, thus obviating_the need for the extra level of indirection afforded by this factory approach).;public void setTargetBeanName(String targetBeanName) {_		this.targetBeanName = targetBeanName__	};set,the,name,of,the,target,bean,p,the,target,does,not,i,have,i,to,be,a,non,singleton,bean,but,realistically,always,will,be,because,if,the,target,bean,were,a,singleton,then,said,singleton,bean,could,simply,be,injected,straight,into,the,dependent,object,thus,obviating,the,need,for,the,extra,level,of,indirection,afforded,by,this,factory,approach;public,void,set,target,bean,name,string,target,bean,name,this,target,bean,name,target,bean,name
ObjectFactoryCreatingFactoryBean -> public void setTargetBeanName(String targetBeanName);1385412762;Set the name of the target bean._<p>The target does not <i>have</i> to be a non-singleton bean, but realistically_always will be (because if the target bean were a singleton, then said singleton_bean could simply be injected straight into the dependent object, thus obviating_the need for the extra level of indirection afforded by this factory approach).;public void setTargetBeanName(String targetBeanName) {_		this.targetBeanName = targetBeanName__	};set,the,name,of,the,target,bean,p,the,target,does,not,i,have,i,to,be,a,non,singleton,bean,but,realistically,always,will,be,because,if,the,target,bean,were,a,singleton,then,said,singleton,bean,could,simply,be,injected,straight,into,the,dependent,object,thus,obviating,the,need,for,the,extra,level,of,indirection,afforded,by,this,factory,approach;public,void,set,target,bean,name,string,target,bean,name,this,target,bean,name,target,bean,name
ObjectFactoryCreatingFactoryBean -> public void setTargetBeanName(String targetBeanName);1498780456;Set the name of the target bean._<p>The target does not <i>have</i> to be a non-singleton bean, but realistically_always will be (because if the target bean were a singleton, then said singleton_bean could simply be injected straight into the dependent object, thus obviating_the need for the extra level of indirection afforded by this factory approach).;public void setTargetBeanName(String targetBeanName) {_		this.targetBeanName = targetBeanName__	};set,the,name,of,the,target,bean,p,the,target,does,not,i,have,i,to,be,a,non,singleton,bean,but,realistically,always,will,be,because,if,the,target,bean,were,a,singleton,then,said,singleton,bean,could,simply,be,injected,straight,into,the,dependent,object,thus,obviating,the,need,for,the,extra,level,of,indirection,afforded,by,this,factory,approach;public,void,set,target,bean,name,string,target,bean,name,this,target,bean,name,target,bean,name
