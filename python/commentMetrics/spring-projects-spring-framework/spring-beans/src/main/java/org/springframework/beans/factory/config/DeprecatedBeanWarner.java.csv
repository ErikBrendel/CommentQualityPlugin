# id;timestamp;commentText;codeText;commentWords;codeWords
DeprecatedBeanWarner -> protected boolean isLogEnabled();1328020251;Determine whether the {@link #logger} field is enabled._<p>Default is {@code true} when the "warn" level is enabled. Subclasses can override this to change the level_under which logging occurs.;protected boolean isLogEnabled() {_		return logger.isWarnEnabled()__	};determine,whether,the,link,logger,field,is,enabled,p,default,is,code,true,when,the,warn,level,is,enabled,subclasses,can,override,this,to,change,the,level,under,which,logging,occurs;protected,boolean,is,log,enabled,return,logger,is,warn,enabled
DeprecatedBeanWarner -> protected boolean isLogEnabled();1355279386;Determine whether the {@link #logger} field is enabled._<p>Default is {@code true} when the "warn" level is enabled._Subclasses can override this to change the level under which logging occurs.;protected boolean isLogEnabled() {_		return logger.isWarnEnabled()__	};determine,whether,the,link,logger,field,is,enabled,p,default,is,code,true,when,the,warn,level,is,enabled,subclasses,can,override,this,to,change,the,level,under,which,logging,occurs;protected,boolean,is,log,enabled,return,logger,is,warn,enabled
DeprecatedBeanWarner -> protected boolean isLogEnabled();1356735495;Determine whether the {@link #logger} field is enabled._<p>Default is {@code true} when the "warn" level is enabled._Subclasses can override this to change the level under which logging occurs.;protected boolean isLogEnabled() {_		return logger.isWarnEnabled()__	};determine,whether,the,link,logger,field,is,enabled,p,default,is,code,true,when,the,warn,level,is,enabled,subclasses,can,override,this,to,change,the,level,under,which,logging,occurs;protected,boolean,is,log,enabled,return,logger,is,warn,enabled
DeprecatedBeanWarner -> protected boolean isLogEnabled();1357119239;Determine whether the {@link #logger} field is enabled._<p>Default is {@code true} when the "warn" level is enabled._Subclasses can override this to change the level under which logging occurs.;protected boolean isLogEnabled() {_		return logger.isWarnEnabled()__	};determine,whether,the,link,logger,field,is,enabled,p,default,is,code,true,when,the,warn,level,is,enabled,subclasses,can,override,this,to,change,the,level,under,which,logging,occurs;protected,boolean,is,log,enabled,return,logger,is,warn,enabled
DeprecatedBeanWarner -> protected boolean isLogEnabled();1368482696;Determine whether the {@link #logger} field is enabled._<p>Default is {@code true} when the "warn" level is enabled._Subclasses can override this to change the level under which logging occurs.;protected boolean isLogEnabled() {_		return logger.isWarnEnabled()__	};determine,whether,the,link,logger,field,is,enabled,p,default,is,code,true,when,the,warn,level,is,enabled,subclasses,can,override,this,to,change,the,level,under,which,logging,occurs;protected,boolean,is,log,enabled,return,logger,is,warn,enabled
DeprecatedBeanWarner -> protected boolean isLogEnabled();1496837955;Determine whether the {@link #logger} field is enabled._<p>Default is {@code true} when the "warn" level is enabled._Subclasses can override this to change the level under which logging occurs.;protected boolean isLogEnabled() {_		return logger.isWarnEnabled()__	};determine,whether,the,link,logger,field,is,enabled,p,default,is,code,true,when,the,warn,level,is,enabled,subclasses,can,override,this,to,change,the,level,under,which,logging,occurs;protected,boolean,is,log,enabled,return,logger,is,warn,enabled
DeprecatedBeanWarner -> protected void logDeprecatedBean(String beanName, Class<?> beanType, BeanDefinition beanDefinition);1355279386;Logs a warning for a bean annotated with {@link Deprecated @Deprecated}._@param beanName the name of the deprecated bean_@param beanType the user-specified type of the deprecated bean_@param beanDefinition the definition of the deprecated bean;protected void logDeprecatedBean(String beanName, Class<?> beanType, BeanDefinition beanDefinition) {_		StringBuilder builder = new StringBuilder()__		builder.append(beanType)__		builder.append(" ['")__		builder.append(beanName)__		builder.append('\'')__		String resourceDescription = beanDefinition.getResourceDescription()__		if (StringUtils.hasLength(resourceDescription)) {_			builder.append(" in ")__			builder.append(resourceDescription)__		}_		builder.append("] has been deprecated")__		writeToLog(builder.toString())__	};logs,a,warning,for,a,bean,annotated,with,link,deprecated,deprecated,param,bean,name,the,name,of,the,deprecated,bean,param,bean,type,the,user,specified,type,of,the,deprecated,bean,param,bean,definition,the,definition,of,the,deprecated,bean;protected,void,log,deprecated,bean,string,bean,name,class,bean,type,bean,definition,bean,definition,string,builder,builder,new,string,builder,builder,append,bean,type,builder,append,builder,append,bean,name,builder,append,string,resource,description,bean,definition,get,resource,description,if,string,utils,has,length,resource,description,builder,append,in,builder,append,resource,description,builder,append,has,been,deprecated,write,to,log,builder,to,string
DeprecatedBeanWarner -> protected void logDeprecatedBean(String beanName, Class<?> beanType, BeanDefinition beanDefinition);1356735495;Logs a warning for a bean annotated with {@link Deprecated @Deprecated}._@param beanName the name of the deprecated bean_@param beanType the user-specified type of the deprecated bean_@param beanDefinition the definition of the deprecated bean;protected void logDeprecatedBean(String beanName, Class<?> beanType, BeanDefinition beanDefinition) {_		StringBuilder builder = new StringBuilder()__		builder.append(beanType)__		builder.append(" ['")__		builder.append(beanName)__		builder.append('\'')__		String resourceDescription = beanDefinition.getResourceDescription()__		if (StringUtils.hasLength(resourceDescription)) {_			builder.append(" in ")__			builder.append(resourceDescription)__		}_		builder.append("] has been deprecated")__		writeToLog(builder.toString())__	};logs,a,warning,for,a,bean,annotated,with,link,deprecated,deprecated,param,bean,name,the,name,of,the,deprecated,bean,param,bean,type,the,user,specified,type,of,the,deprecated,bean,param,bean,definition,the,definition,of,the,deprecated,bean;protected,void,log,deprecated,bean,string,bean,name,class,bean,type,bean,definition,bean,definition,string,builder,builder,new,string,builder,builder,append,bean,type,builder,append,builder,append,bean,name,builder,append,string,resource,description,bean,definition,get,resource,description,if,string,utils,has,length,resource,description,builder,append,in,builder,append,resource,description,builder,append,has,been,deprecated,write,to,log,builder,to,string
DeprecatedBeanWarner -> protected void logDeprecatedBean(String beanName, Class<?> beanType, BeanDefinition beanDefinition);1357119239;Logs a warning for a bean annotated with {@link Deprecated @Deprecated}._@param beanName the name of the deprecated bean_@param beanType the user-specified type of the deprecated bean_@param beanDefinition the definition of the deprecated bean;protected void logDeprecatedBean(String beanName, Class<?> beanType, BeanDefinition beanDefinition) {_		StringBuilder builder = new StringBuilder()__		builder.append(beanType)__		builder.append(" ['")__		builder.append(beanName)__		builder.append('\'')__		String resourceDescription = beanDefinition.getResourceDescription()__		if (StringUtils.hasLength(resourceDescription)) {_			builder.append(" in ")__			builder.append(resourceDescription)__		}_		builder.append("] has been deprecated")__		writeToLog(builder.toString())__	};logs,a,warning,for,a,bean,annotated,with,link,deprecated,deprecated,param,bean,name,the,name,of,the,deprecated,bean,param,bean,type,the,user,specified,type,of,the,deprecated,bean,param,bean,definition,the,definition,of,the,deprecated,bean;protected,void,log,deprecated,bean,string,bean,name,class,bean,type,bean,definition,bean,definition,string,builder,builder,new,string,builder,builder,append,bean,type,builder,append,builder,append,bean,name,builder,append,string,resource,description,bean,definition,get,resource,description,if,string,utils,has,length,resource,description,builder,append,in,builder,append,resource,description,builder,append,has,been,deprecated,write,to,log,builder,to,string
DeprecatedBeanWarner -> protected void logDeprecatedBean(String beanName, Class<?> beanType, BeanDefinition beanDefinition);1368482696;Logs a warning for a bean annotated with {@link Deprecated @Deprecated}._@param beanName the name of the deprecated bean_@param beanType the user-specified type of the deprecated bean_@param beanDefinition the definition of the deprecated bean;protected void logDeprecatedBean(String beanName, Class<?> beanType, BeanDefinition beanDefinition) {_		StringBuilder builder = new StringBuilder()__		builder.append(beanType)__		builder.append(" ['")__		builder.append(beanName)__		builder.append('\'')__		String resourceDescription = beanDefinition.getResourceDescription()__		if (StringUtils.hasLength(resourceDescription)) {_			builder.append(" in ")__			builder.append(resourceDescription)__		}_		builder.append("] has been deprecated")__		writeToLog(builder.toString())__	};logs,a,warning,for,a,bean,annotated,with,link,deprecated,deprecated,param,bean,name,the,name,of,the,deprecated,bean,param,bean,type,the,user,specified,type,of,the,deprecated,bean,param,bean,definition,the,definition,of,the,deprecated,bean;protected,void,log,deprecated,bean,string,bean,name,class,bean,type,bean,definition,bean,definition,string,builder,builder,new,string,builder,builder,append,bean,type,builder,append,builder,append,bean,name,builder,append,string,resource,description,bean,definition,get,resource,description,if,string,utils,has,length,resource,description,builder,append,in,builder,append,resource,description,builder,append,has,been,deprecated,write,to,log,builder,to,string
DeprecatedBeanWarner -> protected void logDeprecatedBean(String beanName, Class<?> beanType, BeanDefinition beanDefinition);1496837955;Logs a warning for a bean annotated with {@link Deprecated @Deprecated}._@param beanName the name of the deprecated bean_@param beanType the user-specified type of the deprecated bean_@param beanDefinition the definition of the deprecated bean;protected void logDeprecatedBean(String beanName, Class<?> beanType, BeanDefinition beanDefinition) {_		StringBuilder builder = new StringBuilder()__		builder.append(beanType)__		builder.append(" ['")__		builder.append(beanName)__		builder.append('\'')__		String resourceDescription = beanDefinition.getResourceDescription()__		if (StringUtils.hasLength(resourceDescription)) {_			builder.append(" in ")__			builder.append(resourceDescription)__		}_		builder.append("] has been deprecated")__		writeToLog(builder.toString())__	};logs,a,warning,for,a,bean,annotated,with,link,deprecated,deprecated,param,bean,name,the,name,of,the,deprecated,bean,param,bean,type,the,user,specified,type,of,the,deprecated,bean,param,bean,definition,the,definition,of,the,deprecated,bean;protected,void,log,deprecated,bean,string,bean,name,class,bean,type,bean,definition,bean,definition,string,builder,builder,new,string,builder,builder,append,bean,type,builder,append,builder,append,bean,name,builder,append,string,resource,description,bean,definition,get,resource,description,if,string,utils,has,length,resource,description,builder,append,in,builder,append,resource,description,builder,append,has,been,deprecated,write,to,log,builder,to,string
DeprecatedBeanWarner -> public void setLoggerName(String loggerName);1328020251;Set the name of the logger to use. The name will be passed to the underlying logger implementation through_Commons Logging, getting interpreted as log category according to the logger's configuration._<p>This can be specified to not log into the category of this warner class but rather into a specific named category._@see org.apache.commons.logging.LogFactory#getLog(String)_@see org.apache.log4j.Logger#getLogger(String)_@see java.util.logging.Logger#getLogger(String);public void setLoggerName(String loggerName) {_		this.logger = LogFactory.getLog(loggerName)__	};set,the,name,of,the,logger,to,use,the,name,will,be,passed,to,the,underlying,logger,implementation,through,commons,logging,getting,interpreted,as,log,category,according,to,the,logger,s,configuration,p,this,can,be,specified,to,not,log,into,the,category,of,this,warner,class,but,rather,into,a,specific,named,category,see,org,apache,commons,logging,log,factory,get,log,string,see,org,apache,log4j,logger,get,logger,string,see,java,util,logging,logger,get,logger,string;public,void,set,logger,name,string,logger,name,this,logger,log,factory,get,log,logger,name
DeprecatedBeanWarner -> public void setLoggerName(String loggerName);1355279386;Set the name of the logger to use._The name will be passed to the underlying logger implementation through Commons Logging,_getting interpreted as log category according to the logger's configuration._<p>This can be specified to not log into the category of this warner class but rather_into a specific named category._@see org.apache.commons.logging.LogFactory#getLog(String)_@see org.apache.log4j.Logger#getLogger(String)_@see java.util.logging.Logger#getLogger(String);public void setLoggerName(String loggerName) {_		this.logger = LogFactory.getLog(loggerName)__	};set,the,name,of,the,logger,to,use,the,name,will,be,passed,to,the,underlying,logger,implementation,through,commons,logging,getting,interpreted,as,log,category,according,to,the,logger,s,configuration,p,this,can,be,specified,to,not,log,into,the,category,of,this,warner,class,but,rather,into,a,specific,named,category,see,org,apache,commons,logging,log,factory,get,log,string,see,org,apache,log4j,logger,get,logger,string,see,java,util,logging,logger,get,logger,string;public,void,set,logger,name,string,logger,name,this,logger,log,factory,get,log,logger,name
DeprecatedBeanWarner -> public void setLoggerName(String loggerName);1356735495;Set the name of the logger to use._The name will be passed to the underlying logger implementation through Commons Logging,_getting interpreted as log category according to the logger's configuration._<p>This can be specified to not log into the category of this warner class but rather_into a specific named category._@see org.apache.commons.logging.LogFactory#getLog(String)_@see org.apache.log4j.Logger#getLogger(String)_@see java.util.logging.Logger#getLogger(String);public void setLoggerName(String loggerName) {_		this.logger = LogFactory.getLog(loggerName)__	};set,the,name,of,the,logger,to,use,the,name,will,be,passed,to,the,underlying,logger,implementation,through,commons,logging,getting,interpreted,as,log,category,according,to,the,logger,s,configuration,p,this,can,be,specified,to,not,log,into,the,category,of,this,warner,class,but,rather,into,a,specific,named,category,see,org,apache,commons,logging,log,factory,get,log,string,see,org,apache,log4j,logger,get,logger,string,see,java,util,logging,logger,get,logger,string;public,void,set,logger,name,string,logger,name,this,logger,log,factory,get,log,logger,name
DeprecatedBeanWarner -> public void setLoggerName(String loggerName);1357119239;Set the name of the logger to use._The name will be passed to the underlying logger implementation through Commons Logging,_getting interpreted as log category according to the logger's configuration._<p>This can be specified to not log into the category of this warner class but rather_into a specific named category._@see org.apache.commons.logging.LogFactory#getLog(String)_@see org.apache.log4j.Logger#getLogger(String)_@see java.util.logging.Logger#getLogger(String);public void setLoggerName(String loggerName) {_		this.logger = LogFactory.getLog(loggerName)__	};set,the,name,of,the,logger,to,use,the,name,will,be,passed,to,the,underlying,logger,implementation,through,commons,logging,getting,interpreted,as,log,category,according,to,the,logger,s,configuration,p,this,can,be,specified,to,not,log,into,the,category,of,this,warner,class,but,rather,into,a,specific,named,category,see,org,apache,commons,logging,log,factory,get,log,string,see,org,apache,log4j,logger,get,logger,string,see,java,util,logging,logger,get,logger,string;public,void,set,logger,name,string,logger,name,this,logger,log,factory,get,log,logger,name
DeprecatedBeanWarner -> public void setLoggerName(String loggerName);1368482696;Set the name of the logger to use._The name will be passed to the underlying logger implementation through Commons Logging,_getting interpreted as log category according to the logger's configuration._<p>This can be specified to not log into the category of this warner class but rather_into a specific named category._@see org.apache.commons.logging.LogFactory#getLog(String)_@see org.apache.log4j.Logger#getLogger(String)_@see java.util.logging.Logger#getLogger(String);public void setLoggerName(String loggerName) {_		this.logger = LogFactory.getLog(loggerName)__	};set,the,name,of,the,logger,to,use,the,name,will,be,passed,to,the,underlying,logger,implementation,through,commons,logging,getting,interpreted,as,log,category,according,to,the,logger,s,configuration,p,this,can,be,specified,to,not,log,into,the,category,of,this,warner,class,but,rather,into,a,specific,named,category,see,org,apache,commons,logging,log,factory,get,log,string,see,org,apache,log4j,logger,get,logger,string,see,java,util,logging,logger,get,logger,string;public,void,set,logger,name,string,logger,name,this,logger,log,factory,get,log,logger,name
DeprecatedBeanWarner -> public void setLoggerName(String loggerName);1496837955;Set the name of the logger to use._The name will be passed to the underlying logger implementation through Commons Logging,_getting interpreted as log category according to the logger's configuration._<p>This can be specified to not log into the category of this warner class but rather_into a specific named category._@see org.apache.commons.logging.LogFactory#getLog(String)_@see java.util.logging.Logger#getLogger(String);public void setLoggerName(String loggerName) {_		this.logger = LogFactory.getLog(loggerName)__	};set,the,name,of,the,logger,to,use,the,name,will,be,passed,to,the,underlying,logger,implementation,through,commons,logging,getting,interpreted,as,log,category,according,to,the,logger,s,configuration,p,this,can,be,specified,to,not,log,into,the,category,of,this,warner,class,but,rather,into,a,specific,named,category,see,org,apache,commons,logging,log,factory,get,log,string,see,java,util,logging,logger,get,logger,string;public,void,set,logger,name,string,logger,name,this,logger,log,factory,get,log,logger,name
DeprecatedBeanWarner -> protected void writeToLog(String message);1355279386;Actually write to the underlying log._<p>The default implementations logs the message at "warn" level._@param message the message to write;protected void writeToLog(String message) {_		logger.warn(message)__	};actually,write,to,the,underlying,log,p,the,default,implementations,logs,the,message,at,warn,level,param,message,the,message,to,write;protected,void,write,to,log,string,message,logger,warn,message
DeprecatedBeanWarner -> protected void writeToLog(String message);1356735495;Actually write to the underlying log._<p>The default implementations logs the message at "warn" level._@param message the message to write;protected void writeToLog(String message) {_		logger.warn(message)__	};actually,write,to,the,underlying,log,p,the,default,implementations,logs,the,message,at,warn,level,param,message,the,message,to,write;protected,void,write,to,log,string,message,logger,warn,message
DeprecatedBeanWarner -> protected void writeToLog(String message);1357119239;Actually write to the underlying log._<p>The default implementations logs the message at "warn" level._@param message the message to write;protected void writeToLog(String message) {_		logger.warn(message)__	};actually,write,to,the,underlying,log,p,the,default,implementations,logs,the,message,at,warn,level,param,message,the,message,to,write;protected,void,write,to,log,string,message,logger,warn,message
DeprecatedBeanWarner -> protected void writeToLog(String message);1368482696;Actually write to the underlying log._<p>The default implementations logs the message at "warn" level._@param message the message to write;protected void writeToLog(String message) {_		logger.warn(message)__	};actually,write,to,the,underlying,log,p,the,default,implementations,logs,the,message,at,warn,level,param,message,the,message,to,write;protected,void,write,to,log,string,message,logger,warn,message
DeprecatedBeanWarner -> protected void writeToLog(String message);1496837955;Actually write to the underlying log._<p>The default implementations logs the message at "warn" level._@param message the message to write;protected void writeToLog(String message) {_		logger.warn(message)__	};actually,write,to,the,underlying,log,p,the,default,implementations,logs,the,message,at,warn,level,param,message,the,message,to,write;protected,void,write,to,log,string,message,logger,warn,message
