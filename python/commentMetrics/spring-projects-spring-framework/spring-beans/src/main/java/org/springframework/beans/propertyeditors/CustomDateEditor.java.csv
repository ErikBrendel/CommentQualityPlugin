# id;timestamp;commentText;codeText;commentWords;codeWords
CustomDateEditor -> @Override 	public void setAsText(String text) throws IllegalArgumentException;1328020251;Parse the Date from the given text, using the specified DateFormat.;@Override_	public void setAsText(String text) throws IllegalArgumentException {_		if (this.allowEmpty && !StringUtils.hasText(text)) {_			_			setValue(null)__		}_		else if (text != null && this.exactDateLength >= 0 && text.length() != this.exactDateLength) {_			throw new IllegalArgumentException(_					"Could not parse date: it is not exactly" + this.exactDateLength + "characters long")__		}_		else {_			try {_				setValue(this.dateFormat.parse(text))__			}_			catch (ParseException ex) {_				throw new IllegalArgumentException("Could not parse date: " + ex.getMessage(), ex)__			}_		}_	};parse,the,date,from,the,given,text,using,the,specified,date,format;override,public,void,set,as,text,string,text,throws,illegal,argument,exception,if,this,allow,empty,string,utils,has,text,text,set,value,null,else,if,text,null,this,exact,date,length,0,text,length,this,exact,date,length,throw,new,illegal,argument,exception,could,not,parse,date,it,is,not,exactly,this,exact,date,length,characters,long,else,try,set,value,this,date,format,parse,text,catch,parse,exception,ex,throw,new,illegal,argument,exception,could,not,parse,date,ex,get,message,ex
CustomDateEditor -> @Override 	public void setAsText(String text) throws IllegalArgumentException;1356735495;Parse the Date from the given text, using the specified DateFormat.;@Override_	public void setAsText(String text) throws IllegalArgumentException {_		if (this.allowEmpty && !StringUtils.hasText(text)) {_			_			setValue(null)__		}_		else if (text != null && this.exactDateLength >= 0 && text.length() != this.exactDateLength) {_			throw new IllegalArgumentException(_					"Could not parse date: it is not exactly" + this.exactDateLength + "characters long")__		}_		else {_			try {_				setValue(this.dateFormat.parse(text))__			}_			catch (ParseException ex) {_				throw new IllegalArgumentException("Could not parse date: " + ex.getMessage(), ex)__			}_		}_	};parse,the,date,from,the,given,text,using,the,specified,date,format;override,public,void,set,as,text,string,text,throws,illegal,argument,exception,if,this,allow,empty,string,utils,has,text,text,set,value,null,else,if,text,null,this,exact,date,length,0,text,length,this,exact,date,length,throw,new,illegal,argument,exception,could,not,parse,date,it,is,not,exactly,this,exact,date,length,characters,long,else,try,set,value,this,date,format,parse,text,catch,parse,exception,ex,throw,new,illegal,argument,exception,could,not,parse,date,ex,get,message,ex
CustomDateEditor -> @Override 	public void setAsText(String text) throws IllegalArgumentException;1385501137;Parse the Date from the given text, using the specified DateFormat.;@Override_	public void setAsText(String text) throws IllegalArgumentException {_		if (this.allowEmpty && !StringUtils.hasText(text)) {_			_			setValue(null)__		}_		else if (text != null && this.exactDateLength >= 0 && text.length() != this.exactDateLength) {_			throw new IllegalArgumentException(_					"Could not parse date: it is not exactly" + this.exactDateLength + "characters long")__		}_		else {_			try {_				setValue(this.dateFormat.parse(text))__			}_			catch (ParseException ex) {_				throw new IllegalArgumentException("Could not parse date: " + ex.getMessage(), ex)__			}_		}_	};parse,the,date,from,the,given,text,using,the,specified,date,format;override,public,void,set,as,text,string,text,throws,illegal,argument,exception,if,this,allow,empty,string,utils,has,text,text,set,value,null,else,if,text,null,this,exact,date,length,0,text,length,this,exact,date,length,throw,new,illegal,argument,exception,could,not,parse,date,it,is,not,exactly,this,exact,date,length,characters,long,else,try,set,value,this,date,format,parse,text,catch,parse,exception,ex,throw,new,illegal,argument,exception,could,not,parse,date,ex,get,message,ex
CustomDateEditor -> @Override 	public String getAsText();1328020251;Format the Date as String, using the specified DateFormat.;@Override_	public String getAsText() {_		Date value = (Date) getValue()__		return (value != null ? this.dateFormat.format(value) : "")__	};format,the,date,as,string,using,the,specified,date,format;override,public,string,get,as,text,date,value,date,get,value,return,value,null,this,date,format,format,value
CustomDateEditor -> @Override 	public String getAsText();1356735495;Format the Date as String, using the specified DateFormat.;@Override_	public String getAsText() {_		Date value = (Date) getValue()__		return (value != null ? this.dateFormat.format(value) : "")__	};format,the,date,as,string,using,the,specified,date,format;override,public,string,get,as,text,date,value,date,get,value,return,value,null,this,date,format,format,value
CustomDateEditor -> @Override 	public String getAsText();1385501137;Format the Date as String, using the specified DateFormat.;@Override_	public String getAsText() {_		Date value = (Date) getValue()__		return (value != null ? this.dateFormat.format(value) : "")__	};format,the,date,as,string,using,the,specified,date,format;override,public,string,get,as,text,date,value,date,get,value,return,value,null,this,date,format,format,value
CustomDateEditor -> @Override 	public String getAsText();1496837955;Format the Date as String, using the specified DateFormat.;@Override_	public String getAsText() {_		Date value = (Date) getValue()__		return (value != null ? this.dateFormat.format(value) : "")__	};format,the,date,as,string,using,the,specified,date,format;override,public,string,get,as,text,date,value,date,get,value,return,value,null,this,date,format,format,value
CustomDateEditor -> @Override 	public String getAsText();1530174524;Format the Date as String, using the specified DateFormat.;@Override_	public String getAsText() {_		Date value = (Date) getValue()__		return (value != null ? this.dateFormat.format(value) : "")__	};format,the,date,as,string,using,the,specified,date,format;override,public,string,get,as,text,date,value,date,get,value,return,value,null,this,date,format,format,value
CustomDateEditor -> public CustomDateEditor(DateFormat dateFormat, boolean allowEmpty);1328020251;Create a new CustomDateEditor instance, using the given DateFormat_for parsing and rendering._<p>The "allowEmpty" parameter states if an empty String should_be allowed for parsing, i.e. get interpreted as null value._Otherwise, an IllegalArgumentException gets thrown in that case._@param dateFormat DateFormat to use for parsing and rendering_@param allowEmpty if empty strings should be allowed;public CustomDateEditor(DateFormat dateFormat, boolean allowEmpty) {_		this.dateFormat = dateFormat__		this.allowEmpty = allowEmpty__		this.exactDateLength = -1__	};create,a,new,custom,date,editor,instance,using,the,given,date,format,for,parsing,and,rendering,p,the,allow,empty,parameter,states,if,an,empty,string,should,be,allowed,for,parsing,i,e,get,interpreted,as,null,value,otherwise,an,illegal,argument,exception,gets,thrown,in,that,case,param,date,format,date,format,to,use,for,parsing,and,rendering,param,allow,empty,if,empty,strings,should,be,allowed;public,custom,date,editor,date,format,date,format,boolean,allow,empty,this,date,format,date,format,this,allow,empty,allow,empty,this,exact,date,length,1
CustomDateEditor -> public CustomDateEditor(DateFormat dateFormat, boolean allowEmpty);1356735495;Create a new CustomDateEditor instance, using the given DateFormat_for parsing and rendering._<p>The "allowEmpty" parameter states if an empty String should_be allowed for parsing, i.e. get interpreted as null value._Otherwise, an IllegalArgumentException gets thrown in that case._@param dateFormat DateFormat to use for parsing and rendering_@param allowEmpty if empty strings should be allowed;public CustomDateEditor(DateFormat dateFormat, boolean allowEmpty) {_		this.dateFormat = dateFormat__		this.allowEmpty = allowEmpty__		this.exactDateLength = -1__	};create,a,new,custom,date,editor,instance,using,the,given,date,format,for,parsing,and,rendering,p,the,allow,empty,parameter,states,if,an,empty,string,should,be,allowed,for,parsing,i,e,get,interpreted,as,null,value,otherwise,an,illegal,argument,exception,gets,thrown,in,that,case,param,date,format,date,format,to,use,for,parsing,and,rendering,param,allow,empty,if,empty,strings,should,be,allowed;public,custom,date,editor,date,format,date,format,boolean,allow,empty,this,date,format,date,format,this,allow,empty,allow,empty,this,exact,date,length,1
CustomDateEditor -> public CustomDateEditor(DateFormat dateFormat, boolean allowEmpty);1385501137;Create a new CustomDateEditor instance, using the given DateFormat_for parsing and rendering._<p>The "allowEmpty" parameter states if an empty String should_be allowed for parsing, i.e. get interpreted as null value._Otherwise, an IllegalArgumentException gets thrown in that case._@param dateFormat DateFormat to use for parsing and rendering_@param allowEmpty if empty strings should be allowed;public CustomDateEditor(DateFormat dateFormat, boolean allowEmpty) {_		this.dateFormat = dateFormat__		this.allowEmpty = allowEmpty__		this.exactDateLength = -1__	};create,a,new,custom,date,editor,instance,using,the,given,date,format,for,parsing,and,rendering,p,the,allow,empty,parameter,states,if,an,empty,string,should,be,allowed,for,parsing,i,e,get,interpreted,as,null,value,otherwise,an,illegal,argument,exception,gets,thrown,in,that,case,param,date,format,date,format,to,use,for,parsing,and,rendering,param,allow,empty,if,empty,strings,should,be,allowed;public,custom,date,editor,date,format,date,format,boolean,allow,empty,this,date,format,date,format,this,allow,empty,allow,empty,this,exact,date,length,1
CustomDateEditor -> public CustomDateEditor(DateFormat dateFormat, boolean allowEmpty);1496837955;Create a new CustomDateEditor instance, using the given DateFormat_for parsing and rendering._<p>The "allowEmpty" parameter states if an empty String should_be allowed for parsing, i.e. get interpreted as null value._Otherwise, an IllegalArgumentException gets thrown in that case._@param dateFormat DateFormat to use for parsing and rendering_@param allowEmpty if empty strings should be allowed;public CustomDateEditor(DateFormat dateFormat, boolean allowEmpty) {_		this.dateFormat = dateFormat__		this.allowEmpty = allowEmpty__		this.exactDateLength = -1__	};create,a,new,custom,date,editor,instance,using,the,given,date,format,for,parsing,and,rendering,p,the,allow,empty,parameter,states,if,an,empty,string,should,be,allowed,for,parsing,i,e,get,interpreted,as,null,value,otherwise,an,illegal,argument,exception,gets,thrown,in,that,case,param,date,format,date,format,to,use,for,parsing,and,rendering,param,allow,empty,if,empty,strings,should,be,allowed;public,custom,date,editor,date,format,date,format,boolean,allow,empty,this,date,format,date,format,this,allow,empty,allow,empty,this,exact,date,length,1
CustomDateEditor -> public CustomDateEditor(DateFormat dateFormat, boolean allowEmpty);1530174524;Create a new CustomDateEditor instance, using the given DateFormat_for parsing and rendering._<p>The "allowEmpty" parameter states if an empty String should_be allowed for parsing, i.e. get interpreted as null value._Otherwise, an IllegalArgumentException gets thrown in that case._@param dateFormat the DateFormat to use for parsing and rendering_@param allowEmpty if empty strings should be allowed;public CustomDateEditor(DateFormat dateFormat, boolean allowEmpty) {_		this.dateFormat = dateFormat__		this.allowEmpty = allowEmpty__		this.exactDateLength = -1__	};create,a,new,custom,date,editor,instance,using,the,given,date,format,for,parsing,and,rendering,p,the,allow,empty,parameter,states,if,an,empty,string,should,be,allowed,for,parsing,i,e,get,interpreted,as,null,value,otherwise,an,illegal,argument,exception,gets,thrown,in,that,case,param,date,format,the,date,format,to,use,for,parsing,and,rendering,param,allow,empty,if,empty,strings,should,be,allowed;public,custom,date,editor,date,format,date,format,boolean,allow,empty,this,date,format,date,format,this,allow,empty,allow,empty,this,exact,date,length,1
CustomDateEditor -> public CustomDateEditor(DateFormat dateFormat, boolean allowEmpty, int exactDateLength);1328020251;Create a new CustomDateEditor instance, using the given DateFormat_for parsing and rendering._<p>The "allowEmpty" parameter states if an empty String should_be allowed for parsing, i.e. get interpreted as null value._Otherwise, an IllegalArgumentException gets thrown in that case._<p>The "exactDateLength" parameter states that IllegalArgumentException gets_thrown if the String does not exactly match the length specified. This is useful_because SimpleDateFormat does not enforce strict parsing of the year part,_not even with <code>setLenient(false)</code>. Without an "exactDateLength"_specified, the "01/01/05" would get parsed to "01/01/0005". However, even_with an "exactDateLength" specified, prepended zeros in the day or month_part may still allow for a shorter year part, so consider this as just_one more assertion that gets you closer to the intended date format._@param dateFormat DateFormat to use for parsing and rendering_@param allowEmpty if empty strings should be allowed_@param exactDateLength the exact expected length of the date String;public CustomDateEditor(DateFormat dateFormat, boolean allowEmpty, int exactDateLength) {_		this.dateFormat = dateFormat__		this.allowEmpty = allowEmpty__		this.exactDateLength = exactDateLength__	};create,a,new,custom,date,editor,instance,using,the,given,date,format,for,parsing,and,rendering,p,the,allow,empty,parameter,states,if,an,empty,string,should,be,allowed,for,parsing,i,e,get,interpreted,as,null,value,otherwise,an,illegal,argument,exception,gets,thrown,in,that,case,p,the,exact,date,length,parameter,states,that,illegal,argument,exception,gets,thrown,if,the,string,does,not,exactly,match,the,length,specified,this,is,useful,because,simple,date,format,does,not,enforce,strict,parsing,of,the,year,part,not,even,with,code,set,lenient,false,code,without,an,exact,date,length,specified,the,01,01,05,would,get,parsed,to,01,01,0005,however,even,with,an,exact,date,length,specified,prepended,zeros,in,the,day,or,month,part,may,still,allow,for,a,shorter,year,part,so,consider,this,as,just,one,more,assertion,that,gets,you,closer,to,the,intended,date,format,param,date,format,date,format,to,use,for,parsing,and,rendering,param,allow,empty,if,empty,strings,should,be,allowed,param,exact,date,length,the,exact,expected,length,of,the,date,string;public,custom,date,editor,date,format,date,format,boolean,allow,empty,int,exact,date,length,this,date,format,date,format,this,allow,empty,allow,empty,this,exact,date,length,exact,date,length
CustomDateEditor -> public CustomDateEditor(DateFormat dateFormat, boolean allowEmpty, int exactDateLength);1356735495;Create a new CustomDateEditor instance, using the given DateFormat_for parsing and rendering._<p>The "allowEmpty" parameter states if an empty String should_be allowed for parsing, i.e. get interpreted as null value._Otherwise, an IllegalArgumentException gets thrown in that case._<p>The "exactDateLength" parameter states that IllegalArgumentException gets_thrown if the String does not exactly match the length specified. This is useful_because SimpleDateFormat does not enforce strict parsing of the year part,_not even with {@code setLenient(false)}. Without an "exactDateLength"_specified, the "01/01/05" would get parsed to "01/01/0005". However, even_with an "exactDateLength" specified, prepended zeros in the day or month_part may still allow for a shorter year part, so consider this as just_one more assertion that gets you closer to the intended date format._@param dateFormat DateFormat to use for parsing and rendering_@param allowEmpty if empty strings should be allowed_@param exactDateLength the exact expected length of the date String;public CustomDateEditor(DateFormat dateFormat, boolean allowEmpty, int exactDateLength) {_		this.dateFormat = dateFormat__		this.allowEmpty = allowEmpty__		this.exactDateLength = exactDateLength__	};create,a,new,custom,date,editor,instance,using,the,given,date,format,for,parsing,and,rendering,p,the,allow,empty,parameter,states,if,an,empty,string,should,be,allowed,for,parsing,i,e,get,interpreted,as,null,value,otherwise,an,illegal,argument,exception,gets,thrown,in,that,case,p,the,exact,date,length,parameter,states,that,illegal,argument,exception,gets,thrown,if,the,string,does,not,exactly,match,the,length,specified,this,is,useful,because,simple,date,format,does,not,enforce,strict,parsing,of,the,year,part,not,even,with,code,set,lenient,false,without,an,exact,date,length,specified,the,01,01,05,would,get,parsed,to,01,01,0005,however,even,with,an,exact,date,length,specified,prepended,zeros,in,the,day,or,month,part,may,still,allow,for,a,shorter,year,part,so,consider,this,as,just,one,more,assertion,that,gets,you,closer,to,the,intended,date,format,param,date,format,date,format,to,use,for,parsing,and,rendering,param,allow,empty,if,empty,strings,should,be,allowed,param,exact,date,length,the,exact,expected,length,of,the,date,string;public,custom,date,editor,date,format,date,format,boolean,allow,empty,int,exact,date,length,this,date,format,date,format,this,allow,empty,allow,empty,this,exact,date,length,exact,date,length
CustomDateEditor -> public CustomDateEditor(DateFormat dateFormat, boolean allowEmpty, int exactDateLength);1385501137;Create a new CustomDateEditor instance, using the given DateFormat_for parsing and rendering._<p>The "allowEmpty" parameter states if an empty String should_be allowed for parsing, i.e. get interpreted as null value._Otherwise, an IllegalArgumentException gets thrown in that case._<p>The "exactDateLength" parameter states that IllegalArgumentException gets_thrown if the String does not exactly match the length specified. This is useful_because SimpleDateFormat does not enforce strict parsing of the year part,_not even with {@code setLenient(false)}. Without an "exactDateLength"_specified, the "01/01/05" would get parsed to "01/01/0005". However, even_with an "exactDateLength" specified, prepended zeros in the day or month_part may still allow for a shorter year part, so consider this as just_one more assertion that gets you closer to the intended date format._@param dateFormat DateFormat to use for parsing and rendering_@param allowEmpty if empty strings should be allowed_@param exactDateLength the exact expected length of the date String;public CustomDateEditor(DateFormat dateFormat, boolean allowEmpty, int exactDateLength) {_		this.dateFormat = dateFormat__		this.allowEmpty = allowEmpty__		this.exactDateLength = exactDateLength__	};create,a,new,custom,date,editor,instance,using,the,given,date,format,for,parsing,and,rendering,p,the,allow,empty,parameter,states,if,an,empty,string,should,be,allowed,for,parsing,i,e,get,interpreted,as,null,value,otherwise,an,illegal,argument,exception,gets,thrown,in,that,case,p,the,exact,date,length,parameter,states,that,illegal,argument,exception,gets,thrown,if,the,string,does,not,exactly,match,the,length,specified,this,is,useful,because,simple,date,format,does,not,enforce,strict,parsing,of,the,year,part,not,even,with,code,set,lenient,false,without,an,exact,date,length,specified,the,01,01,05,would,get,parsed,to,01,01,0005,however,even,with,an,exact,date,length,specified,prepended,zeros,in,the,day,or,month,part,may,still,allow,for,a,shorter,year,part,so,consider,this,as,just,one,more,assertion,that,gets,you,closer,to,the,intended,date,format,param,date,format,date,format,to,use,for,parsing,and,rendering,param,allow,empty,if,empty,strings,should,be,allowed,param,exact,date,length,the,exact,expected,length,of,the,date,string;public,custom,date,editor,date,format,date,format,boolean,allow,empty,int,exact,date,length,this,date,format,date,format,this,allow,empty,allow,empty,this,exact,date,length,exact,date,length
CustomDateEditor -> public CustomDateEditor(DateFormat dateFormat, boolean allowEmpty, int exactDateLength);1496837955;Create a new CustomDateEditor instance, using the given DateFormat_for parsing and rendering._<p>The "allowEmpty" parameter states if an empty String should_be allowed for parsing, i.e. get interpreted as null value._Otherwise, an IllegalArgumentException gets thrown in that case._<p>The "exactDateLength" parameter states that IllegalArgumentException gets_thrown if the String does not exactly match the length specified. This is useful_because SimpleDateFormat does not enforce strict parsing of the year part,_not even with {@code setLenient(false)}. Without an "exactDateLength"_specified, the "01/01/05" would get parsed to "01/01/0005". However, even_with an "exactDateLength" specified, prepended zeros in the day or month_part may still allow for a shorter year part, so consider this as just_one more assertion that gets you closer to the intended date format._@param dateFormat DateFormat to use for parsing and rendering_@param allowEmpty if empty strings should be allowed_@param exactDateLength the exact expected length of the date String;public CustomDateEditor(DateFormat dateFormat, boolean allowEmpty, int exactDateLength) {_		this.dateFormat = dateFormat__		this.allowEmpty = allowEmpty__		this.exactDateLength = exactDateLength__	};create,a,new,custom,date,editor,instance,using,the,given,date,format,for,parsing,and,rendering,p,the,allow,empty,parameter,states,if,an,empty,string,should,be,allowed,for,parsing,i,e,get,interpreted,as,null,value,otherwise,an,illegal,argument,exception,gets,thrown,in,that,case,p,the,exact,date,length,parameter,states,that,illegal,argument,exception,gets,thrown,if,the,string,does,not,exactly,match,the,length,specified,this,is,useful,because,simple,date,format,does,not,enforce,strict,parsing,of,the,year,part,not,even,with,code,set,lenient,false,without,an,exact,date,length,specified,the,01,01,05,would,get,parsed,to,01,01,0005,however,even,with,an,exact,date,length,specified,prepended,zeros,in,the,day,or,month,part,may,still,allow,for,a,shorter,year,part,so,consider,this,as,just,one,more,assertion,that,gets,you,closer,to,the,intended,date,format,param,date,format,date,format,to,use,for,parsing,and,rendering,param,allow,empty,if,empty,strings,should,be,allowed,param,exact,date,length,the,exact,expected,length,of,the,date,string;public,custom,date,editor,date,format,date,format,boolean,allow,empty,int,exact,date,length,this,date,format,date,format,this,allow,empty,allow,empty,this,exact,date,length,exact,date,length
CustomDateEditor -> public CustomDateEditor(DateFormat dateFormat, boolean allowEmpty, int exactDateLength);1530174524;Create a new CustomDateEditor instance, using the given DateFormat_for parsing and rendering._<p>The "allowEmpty" parameter states if an empty String should_be allowed for parsing, i.e. get interpreted as null value._Otherwise, an IllegalArgumentException gets thrown in that case._<p>The "exactDateLength" parameter states that IllegalArgumentException gets_thrown if the String does not exactly match the length specified. This is useful_because SimpleDateFormat does not enforce strict parsing of the year part,_not even with {@code setLenient(false)}. Without an "exactDateLength"_specified, the "01/01/05" would get parsed to "01/01/0005". However, even_with an "exactDateLength" specified, prepended zeros in the day or month_part may still allow for a shorter year part, so consider this as just_one more assertion that gets you closer to the intended date format._@param dateFormat the DateFormat to use for parsing and rendering_@param allowEmpty if empty strings should be allowed_@param exactDateLength the exact expected length of the date String;public CustomDateEditor(DateFormat dateFormat, boolean allowEmpty, int exactDateLength) {_		this.dateFormat = dateFormat__		this.allowEmpty = allowEmpty__		this.exactDateLength = exactDateLength__	};create,a,new,custom,date,editor,instance,using,the,given,date,format,for,parsing,and,rendering,p,the,allow,empty,parameter,states,if,an,empty,string,should,be,allowed,for,parsing,i,e,get,interpreted,as,null,value,otherwise,an,illegal,argument,exception,gets,thrown,in,that,case,p,the,exact,date,length,parameter,states,that,illegal,argument,exception,gets,thrown,if,the,string,does,not,exactly,match,the,length,specified,this,is,useful,because,simple,date,format,does,not,enforce,strict,parsing,of,the,year,part,not,even,with,code,set,lenient,false,without,an,exact,date,length,specified,the,01,01,05,would,get,parsed,to,01,01,0005,however,even,with,an,exact,date,length,specified,prepended,zeros,in,the,day,or,month,part,may,still,allow,for,a,shorter,year,part,so,consider,this,as,just,one,more,assertion,that,gets,you,closer,to,the,intended,date,format,param,date,format,the,date,format,to,use,for,parsing,and,rendering,param,allow,empty,if,empty,strings,should,be,allowed,param,exact,date,length,the,exact,expected,length,of,the,date,string;public,custom,date,editor,date,format,date,format,boolean,allow,empty,int,exact,date,length,this,date,format,date,format,this,allow,empty,allow,empty,this,exact,date,length,exact,date,length
CustomDateEditor -> @Override 	public void setAsText(@Nullable String text) throws IllegalArgumentException;1496837955;Parse the Date from the given text, using the specified DateFormat.;@Override_	public void setAsText(@Nullable String text) throws IllegalArgumentException {_		if (this.allowEmpty && !StringUtils.hasText(text)) {_			_			setValue(null)__		}_		else if (text != null && this.exactDateLength >= 0 && text.length() != this.exactDateLength) {_			throw new IllegalArgumentException(_					"Could not parse date: it is not exactly" + this.exactDateLength + "characters long")__		}_		else {_			try {_				setValue(this.dateFormat.parse(text))__			}_			catch (ParseException ex) {_				throw new IllegalArgumentException("Could not parse date: " + ex.getMessage(), ex)__			}_		}_	};parse,the,date,from,the,given,text,using,the,specified,date,format;override,public,void,set,as,text,nullable,string,text,throws,illegal,argument,exception,if,this,allow,empty,string,utils,has,text,text,set,value,null,else,if,text,null,this,exact,date,length,0,text,length,this,exact,date,length,throw,new,illegal,argument,exception,could,not,parse,date,it,is,not,exactly,this,exact,date,length,characters,long,else,try,set,value,this,date,format,parse,text,catch,parse,exception,ex,throw,new,illegal,argument,exception,could,not,parse,date,ex,get,message,ex
CustomDateEditor -> @Override 	public void setAsText(@Nullable String text) throws IllegalArgumentException;1530174524;Parse the Date from the given text, using the specified DateFormat.;@Override_	public void setAsText(@Nullable String text) throws IllegalArgumentException {_		if (this.allowEmpty && !StringUtils.hasText(text)) {_			_			setValue(null)__		}_		else if (text != null && this.exactDateLength >= 0 && text.length() != this.exactDateLength) {_			throw new IllegalArgumentException(_					"Could not parse date: it is not exactly" + this.exactDateLength + "characters long")__		}_		else {_			try {_				setValue(this.dateFormat.parse(text))__			}_			catch (ParseException ex) {_				throw new IllegalArgumentException("Could not parse date: " + ex.getMessage(), ex)__			}_		}_	};parse,the,date,from,the,given,text,using,the,specified,date,format;override,public,void,set,as,text,nullable,string,text,throws,illegal,argument,exception,if,this,allow,empty,string,utils,has,text,text,set,value,null,else,if,text,null,this,exact,date,length,0,text,length,this,exact,date,length,throw,new,illegal,argument,exception,could,not,parse,date,it,is,not,exactly,this,exact,date,length,characters,long,else,try,set,value,this,date,format,parse,text,catch,parse,exception,ex,throw,new,illegal,argument,exception,could,not,parse,date,ex,get,message,ex
