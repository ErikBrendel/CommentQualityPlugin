# id;timestamp;commentText;codeText;commentWords;codeWords
DirectFieldAccessor -> public final Class<?> getRootClass();1403803322;Return the class of the root object at the top of the path of this instance.;public final Class<?> getRootClass() {_		return (this.rootObject != null ? this.rootObject.getClass() : null)__	};return,the,class,of,the,root,object,at,the,top,of,the,path,of,this,instance;public,final,class,get,root,class,return,this,root,object,null,this,root,object,get,class,null
DirectFieldAccessor -> public final Class<?> getRootClass();1405696918;Return the class of the root object at the top of the path of this instance.;public final Class<?> getRootClass() {_		return (this.rootObject != null ? this.rootObject.getClass() : null)__	};return,the,class,of,the,root,object,at,the,top,of,the,path,of,this,instance;public,final,class,get,root,class,return,this,root,object,null,this,root,object,get,class,null
DirectFieldAccessor -> public final Object getRootInstance();1403803322;Return the root object at the top of the path of this instance.;public final Object getRootInstance() {_		return this.rootObject__	};return,the,root,object,at,the,top,of,the,path,of,this,instance;public,final,object,get,root,instance,return,this,root,object
DirectFieldAccessor -> public final Object getRootInstance();1405696918;Return the root object at the top of the path of this instance.;public final Object getRootInstance() {_		return this.rootObject__	};return,the,root,object,at,the,top,of,the,path,of,this,instance;public,final,object,get,root,instance,return,this,root,object
DirectFieldAccessor -> private FieldAccessor root(String canonicalName, String actualName, Field field);1403803322;Create a root {@link FieldAccessor}.__@param canonicalName the full expression for the field to access_@param actualName the name of the local (root) property_@param field the field accessing the property;private FieldAccessor root(String canonicalName, String actualName, Field field) {_		return new FieldAccessor(null, canonicalName, actualName, field)__	};create,a,root,link,field,accessor,param,canonical,name,the,full,expression,for,the,field,to,access,param,actual,name,the,name,of,the,local,root,property,param,field,the,field,accessing,the,property;private,field,accessor,root,string,canonical,name,string,actual,name,field,field,return,new,field,accessor,null,canonical,name,actual,name,field
DirectFieldAccessor -> private FieldAccessor root(String canonicalName, String actualName, Field field);1405696918;Create a root {@link FieldAccessor}._@param canonicalName the full expression for the field to access_@param actualName the name of the local (root) property_@param field the field accessing the property;private FieldAccessor root(String canonicalName, String actualName, Field field) {_		return new FieldAccessor(null, canonicalName, actualName, field)__	};create,a,root,link,field,accessor,param,canonical,name,the,full,expression,for,the,field,to,access,param,actual,name,the,name,of,the,local,root,property,param,field,the,field,accessing,the,property;private,field,accessor,root,string,canonical,name,string,actual,name,field,field,return,new,field,accessor,null,canonical,name,actual,name,field
DirectFieldAccessor -> public DirectFieldAccessor(final Object target);1328020251;Create a new DirectFieldAccessor for the given target object._@param target the target object to access;public DirectFieldAccessor(final Object target) {_		Assert.notNull(target, "Target object must not be null")__		this.target = target__		ReflectionUtils.doWithFields(this.target.getClass(), new ReflectionUtils.FieldCallback() {_			public void doWith(Field field) {_				if (fieldMap.containsKey(field.getName())) {_					_				} else {_					fieldMap.put(field.getName(), field)__				}_			}_		})__		this.typeConverterDelegate = new TypeConverterDelegate(this, target)__		registerDefaultEditors()__		setExtractOldValueForEditor(true)__	};create,a,new,direct,field,accessor,for,the,given,target,object,param,target,the,target,object,to,access;public,direct,field,accessor,final,object,target,assert,not,null,target,target,object,must,not,be,null,this,target,target,reflection,utils,do,with,fields,this,target,get,class,new,reflection,utils,field,callback,public,void,do,with,field,field,if,field,map,contains,key,field,get,name,else,field,map,put,field,get,name,field,this,type,converter,delegate,new,type,converter,delegate,this,target,register,default,editors,set,extract,old,value,for,editor,true
DirectFieldAccessor -> public DirectFieldAccessor(final Object target);1346790972;Create a new DirectFieldAccessor for the given target object._@param target the target object to access;public DirectFieldAccessor(final Object target) {_		Assert.notNull(target, "Target object must not be null")__		this.target = target__		ReflectionUtils.doWithFields(this.target.getClass(), new ReflectionUtils.FieldCallback() {_			public void doWith(Field field) {_				if (fieldMap.containsKey(field.getName())) {_					_				}_                else {_					fieldMap.put(field.getName(), field)__				}_			}_		})__		this.typeConverterDelegate = new TypeConverterDelegate(this, target)__		registerDefaultEditors()__		setExtractOldValueForEditor(true)__	};create,a,new,direct,field,accessor,for,the,given,target,object,param,target,the,target,object,to,access;public,direct,field,accessor,final,object,target,assert,not,null,target,target,object,must,not,be,null,this,target,target,reflection,utils,do,with,fields,this,target,get,class,new,reflection,utils,field,callback,public,void,do,with,field,field,if,field,map,contains,key,field,get,name,else,field,map,put,field,get,name,field,this,type,converter,delegate,new,type,converter,delegate,this,target,register,default,editors,set,extract,old,value,for,editor,true
DirectFieldAccessor -> public DirectFieldAccessor(final Object target);1356735495;Create a new DirectFieldAccessor for the given target object._@param target the target object to access;public DirectFieldAccessor(final Object target) {_		Assert.notNull(target, "Target object must not be null")__		this.target = target__		ReflectionUtils.doWithFields(this.target.getClass(), new ReflectionUtils.FieldCallback() {_			@Override_			public void doWith(Field field) {_				if (fieldMap.containsKey(field.getName())) {_					_				}_				else {_					fieldMap.put(field.getName(), field)__				}_			}_		})__		this.typeConverterDelegate = new TypeConverterDelegate(this, target)__		registerDefaultEditors()__		setExtractOldValueForEditor(true)__	};create,a,new,direct,field,accessor,for,the,given,target,object,param,target,the,target,object,to,access;public,direct,field,accessor,final,object,target,assert,not,null,target,target,object,must,not,be,null,this,target,target,reflection,utils,do,with,fields,this,target,get,class,new,reflection,utils,field,callback,override,public,void,do,with,field,field,if,field,map,contains,key,field,get,name,else,field,map,put,field,get,name,field,this,type,converter,delegate,new,type,converter,delegate,this,target,register,default,editors,set,extract,old,value,for,editor,true
DirectFieldAccessor -> public DirectFieldAccessor(final Object target);1357119239;Create a new DirectFieldAccessor for the given target object._@param target the target object to access;public DirectFieldAccessor(final Object target) {_		Assert.notNull(target, "Target object must not be null")__		this.target = target__		ReflectionUtils.doWithFields(this.target.getClass(), new ReflectionUtils.FieldCallback() {_			public void doWith(Field field) {_				if (fieldMap.containsKey(field.getName())) {_					_				}_				else {_					fieldMap.put(field.getName(), field)__				}_			}_		})__		this.typeConverterDelegate = new TypeConverterDelegate(this, target)__		registerDefaultEditors()__		setExtractOldValueForEditor(true)__	};create,a,new,direct,field,accessor,for,the,given,target,object,param,target,the,target,object,to,access;public,direct,field,accessor,final,object,target,assert,not,null,target,target,object,must,not,be,null,this,target,target,reflection,utils,do,with,fields,this,target,get,class,new,reflection,utils,field,callback,public,void,do,with,field,field,if,field,map,contains,key,field,get,name,else,field,map,put,field,get,name,field,this,type,converter,delegate,new,type,converter,delegate,this,target,register,default,editors,set,extract,old,value,for,editor,true
DirectFieldAccessor -> public DirectFieldAccessor(final Object target);1368482696;Create a new DirectFieldAccessor for the given target object._@param target the target object to access;public DirectFieldAccessor(final Object target) {_		Assert.notNull(target, "Target object must not be null")__		this.target = target__		ReflectionUtils.doWithFields(this.target.getClass(), new ReflectionUtils.FieldCallback() {_			@Override_			public void doWith(Field field) {_				if (fieldMap.containsKey(field.getName())) {_					_				}_				else {_					fieldMap.put(field.getName(), field)__				}_			}_		})__		this.typeConverterDelegate = new TypeConverterDelegate(this, target)__		registerDefaultEditors()__		setExtractOldValueForEditor(true)__	};create,a,new,direct,field,accessor,for,the,given,target,object,param,target,the,target,object,to,access;public,direct,field,accessor,final,object,target,assert,not,null,target,target,object,must,not,be,null,this,target,target,reflection,utils,do,with,fields,this,target,get,class,new,reflection,utils,field,callback,override,public,void,do,with,field,field,if,field,map,contains,key,field,get,name,else,field,map,put,field,get,name,field,this,type,converter,delegate,new,type,converter,delegate,this,target,register,default,editors,set,extract,old,value,for,editor,true
DirectFieldAccessor -> FieldAccessor -> public FieldAccessor child(String actualName, Field field);1403803322;Create a child instance.__@param actualName the name of the child property_@param field the field accessing the child property;public FieldAccessor child(String actualName, Field field) {_			return new FieldAccessor(this, this.canonicalName, this.actualName + "." + actualName, field)__		};create,a,child,instance,param,actual,name,the,name,of,the,child,property,param,field,the,field,accessing,the,child,property;public,field,accessor,child,string,actual,name,field,field,return,new,field,accessor,this,this,canonical,name,this,actual,name,actual,name,field
DirectFieldAccessor -> FieldAccessor -> public FieldAccessor child(String actualName, Field field);1405696918;Create a child instance._@param actualName the name of the child property_@param field the field accessing the child property;public FieldAccessor child(String actualName, Field field) {_			return new FieldAccessor(this, this.canonicalName, this.actualName + "." + actualName, field)__		};create,a,child,instance,param,actual,name,the,name,of,the,child,property,param,field,the,field,accessing,the,child,property;public,field,accessor,child,string,actual,name,field,field,return,new,field,accessor,this,this,canonical,name,this,actual,name,actual,name,field
DirectFieldAccessor -> public DirectFieldAccessor(final Object rootObject);1403803322;Create a new DirectFieldAccessor for the given root object._@param rootObject the root object to access;public DirectFieldAccessor(final Object rootObject) {_		Assert.notNull(rootObject, "Root object must not be null")__		this.rootObject = rootObject__		this.typeConverterDelegate = new TypeConverterDelegate(this, rootObject)__		registerDefaultEditors()__		setExtractOldValueForEditor(true)__	};create,a,new,direct,field,accessor,for,the,given,root,object,param,root,object,the,root,object,to,access;public,direct,field,accessor,final,object,root,object,assert,not,null,root,object,root,object,must,not,be,null,this,root,object,root,object,this,type,converter,delegate,new,type,converter,delegate,this,root,object,register,default,editors,set,extract,old,value,for,editor,true
DirectFieldAccessor -> public DirectFieldAccessor(final Object rootObject);1405696918;Create a new DirectFieldAccessor for the given root object._@param rootObject the root object to access;public DirectFieldAccessor(final Object rootObject) {_		Assert.notNull(rootObject, "Root object must not be null")__		this.rootObject = rootObject__		this.typeConverterDelegate = new TypeConverterDelegate(this, rootObject)__		registerDefaultEditors()__		setExtractOldValueForEditor(true)__	};create,a,new,direct,field,accessor,for,the,given,root,object,param,root,object,the,root,object,to,access;public,direct,field,accessor,final,object,root,object,assert,not,null,root,object,root,object,must,not,be,null,this,root,object,root,object,this,type,converter,delegate,new,type,converter,delegate,this,root,object,register,default,editors,set,extract,old,value,for,editor,true
DirectFieldAccessor -> protected DirectFieldAccessor(Object object, String nestedPath, DirectFieldAccessor parent);1440753462;Create a new DirectFieldAccessor for the given object,_registering a nested path that the object is in._@param object object wrapped by this DirectFieldAccessor_@param nestedPath the nested path of the object_@param parent the containing DirectFieldAccessor (must not be {@code null});protected DirectFieldAccessor(Object object, String nestedPath, DirectFieldAccessor parent) {_		super(object, nestedPath, parent)__	};create,a,new,direct,field,accessor,for,the,given,object,registering,a,nested,path,that,the,object,is,in,param,object,object,wrapped,by,this,direct,field,accessor,param,nested,path,the,nested,path,of,the,object,param,parent,the,containing,direct,field,accessor,must,not,be,code,null;protected,direct,field,accessor,object,object,string,nested,path,direct,field,accessor,parent,super,object,nested,path,parent
DirectFieldAccessor -> protected DirectFieldAccessor(Object object, String nestedPath, DirectFieldAccessor parent);1467730834;Create a new DirectFieldAccessor for the given object,_registering a nested path that the object is in._@param object object wrapped by this DirectFieldAccessor_@param nestedPath the nested path of the object_@param parent the containing DirectFieldAccessor (must not be {@code null});protected DirectFieldAccessor(Object object, String nestedPath, DirectFieldAccessor parent) {_		super(object, nestedPath, parent)__	};create,a,new,direct,field,accessor,for,the,given,object,registering,a,nested,path,that,the,object,is,in,param,object,object,wrapped,by,this,direct,field,accessor,param,nested,path,the,nested,path,of,the,object,param,parent,the,containing,direct,field,accessor,must,not,be,code,null;protected,direct,field,accessor,object,object,string,nested,path,direct,field,accessor,parent,super,object,nested,path,parent
DirectFieldAccessor -> protected DirectFieldAccessor(Object object, String nestedPath, DirectFieldAccessor parent);1496837955;Create a new DirectFieldAccessor for the given object,_registering a nested path that the object is in._@param object object wrapped by this DirectFieldAccessor_@param nestedPath the nested path of the object_@param parent the containing DirectFieldAccessor (must not be {@code null});protected DirectFieldAccessor(Object object, String nestedPath, DirectFieldAccessor parent) {_		super(object, nestedPath, parent)__	};create,a,new,direct,field,accessor,for,the,given,object,registering,a,nested,path,that,the,object,is,in,param,object,object,wrapped,by,this,direct,field,accessor,param,nested,path,the,nested,path,of,the,object,param,parent,the,containing,direct,field,accessor,must,not,be,code,null;protected,direct,field,accessor,object,object,string,nested,path,direct,field,accessor,parent,super,object,nested,path,parent
DirectFieldAccessor -> protected DirectFieldAccessor(Object object, String nestedPath, DirectFieldAccessor parent);1500495740;Create a new DirectFieldAccessor for the given object,_registering a nested path that the object is in._@param object object wrapped by this DirectFieldAccessor_@param nestedPath the nested path of the object_@param parent the containing DirectFieldAccessor (must not be {@code null});protected DirectFieldAccessor(Object object, String nestedPath, DirectFieldAccessor parent) {_		super(object, nestedPath, parent)__	};create,a,new,direct,field,accessor,for,the,given,object,registering,a,nested,path,that,the,object,is,in,param,object,object,wrapped,by,this,direct,field,accessor,param,nested,path,the,nested,path,of,the,object,param,parent,the,containing,direct,field,accessor,must,not,be,code,null;protected,direct,field,accessor,object,object,string,nested,path,direct,field,accessor,parent,super,object,nested,path,parent
DirectFieldAccessor -> protected DirectFieldAccessor(Object object, String nestedPath, DirectFieldAccessor parent);1502974979;Create a new DirectFieldAccessor for the given object,_registering a nested path that the object is in._@param object object wrapped by this DirectFieldAccessor_@param nestedPath the nested path of the object_@param parent the containing DirectFieldAccessor (must not be {@code null});protected DirectFieldAccessor(Object object, String nestedPath, DirectFieldAccessor parent) {_		super(object, nestedPath, parent)__	};create,a,new,direct,field,accessor,for,the,given,object,registering,a,nested,path,that,the,object,is,in,param,object,object,wrapped,by,this,direct,field,accessor,param,nested,path,the,nested,path,of,the,object,param,parent,the,containing,direct,field,accessor,must,not,be,code,null;protected,direct,field,accessor,object,object,string,nested,path,direct,field,accessor,parent,super,object,nested,path,parent
DirectFieldAccessor -> protected DirectFieldAccessor(Object object, String nestedPath, DirectFieldAccessor parent);1519772955;Create a new DirectFieldAccessor for the given object,_registering a nested path that the object is in._@param object object wrapped by this DirectFieldAccessor_@param nestedPath the nested path of the object_@param parent the containing DirectFieldAccessor (must not be {@code null});protected DirectFieldAccessor(Object object, String nestedPath, DirectFieldAccessor parent) {_		super(object, nestedPath, parent)__	};create,a,new,direct,field,accessor,for,the,given,object,registering,a,nested,path,that,the,object,is,in,param,object,object,wrapped,by,this,direct,field,accessor,param,nested,path,the,nested,path,of,the,object,param,parent,the,containing,direct,field,accessor,must,not,be,code,null;protected,direct,field,accessor,object,object,string,nested,path,direct,field,accessor,parent,super,object,nested,path,parent
DirectFieldAccessor -> public DirectFieldAccessor(Object object);1440753462;Create a new DirectFieldAccessor for the given object._@param object object wrapped by this DirectFieldAccessor;public DirectFieldAccessor(Object object) {_		super(object)__	};create,a,new,direct,field,accessor,for,the,given,object,param,object,object,wrapped,by,this,direct,field,accessor;public,direct,field,accessor,object,object,super,object
DirectFieldAccessor -> public DirectFieldAccessor(Object object);1467730834;Create a new DirectFieldAccessor for the given object._@param object object wrapped by this DirectFieldAccessor;public DirectFieldAccessor(Object object) {_		super(object)__	};create,a,new,direct,field,accessor,for,the,given,object,param,object,object,wrapped,by,this,direct,field,accessor;public,direct,field,accessor,object,object,super,object
DirectFieldAccessor -> public DirectFieldAccessor(Object object);1496837955;Create a new DirectFieldAccessor for the given object._@param object object wrapped by this DirectFieldAccessor;public DirectFieldAccessor(Object object) {_		super(object)__	};create,a,new,direct,field,accessor,for,the,given,object,param,object,object,wrapped,by,this,direct,field,accessor;public,direct,field,accessor,object,object,super,object
DirectFieldAccessor -> public DirectFieldAccessor(Object object);1500495740;Create a new DirectFieldAccessor for the given object._@param object object wrapped by this DirectFieldAccessor;public DirectFieldAccessor(Object object) {_		super(object)__	};create,a,new,direct,field,accessor,for,the,given,object,param,object,object,wrapped,by,this,direct,field,accessor;public,direct,field,accessor,object,object,super,object
DirectFieldAccessor -> public DirectFieldAccessor(Object object);1502974979;Create a new DirectFieldAccessor for the given object._@param object object wrapped by this DirectFieldAccessor;public DirectFieldAccessor(Object object) {_		super(object)__	};create,a,new,direct,field,accessor,for,the,given,object,param,object,object,wrapped,by,this,direct,field,accessor;public,direct,field,accessor,object,object,super,object
DirectFieldAccessor -> public DirectFieldAccessor(Object object);1519772955;Create a new DirectFieldAccessor for the given object._@param object object wrapped by this DirectFieldAccessor;public DirectFieldAccessor(Object object) {_		super(object)__	};create,a,new,direct,field,accessor,for,the,given,object,param,object,object,wrapped,by,this,direct,field,accessor;public,direct,field,accessor,object,object,super,object
