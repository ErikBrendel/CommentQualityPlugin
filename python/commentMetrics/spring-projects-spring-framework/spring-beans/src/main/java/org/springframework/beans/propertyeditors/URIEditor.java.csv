commented;modifiers;parameterAmount;loc;comment;code
false;public;1;27;;@Override public void setAsText(String text) throws IllegalArgumentException {     if (StringUtils.hasText(text)) {         String uri = text.trim().         if (this.classLoader != null && uri.startsWith(ResourceUtils.CLASSPATH_URL_PREFIX)) {             ClassPathResource resource = new ClassPathResource(uri.substring(ResourceUtils.CLASSPATH_URL_PREFIX.length()), this.classLoader).             try {                 setValue(resource.getURI()).             } catch (IOException ex) {                 throw new IllegalArgumentException("Could not retrieve URI for " + resource + ": " + ex.getMessage()).             }         } else {             try {                 setValue(createURI(uri)).             } catch (URISyntaxException ex) {                 throw new IllegalArgumentException("Invalid URI syntax: " + ex).             }         }     } else {         setValue(null).     } }
true;protected;1;14;/**  * Create a URI instance for the given user-specified String value.  * <p>The default implementation encodes the value into a RFC-2396 compliant URI.  * @param value the value to convert into a URI instance  * @return the URI instance  * @throws java.net.URISyntaxException if URI conversion failed  */ ;/**  * Create a URI instance for the given user-specified String value.  * <p>The default implementation encodes the value into a RFC-2396 compliant URI.  * @param value the value to convert into a URI instance  * @return the URI instance  * @throws java.net.URISyntaxException if URI conversion failed  */ protected URI createURI(String value) throws URISyntaxException {     int colonIndex = value.indexOf(':').     if (this.encode && colonIndex != -1) {         int fragmentIndex = value.indexOf('#', colonIndex + 1).         String scheme = value.substring(0, colonIndex).         String ssp = value.substring(colonIndex + 1, (fragmentIndex > 0 ? fragmentIndex : value.length())).         String fragment = (fragmentIndex > 0 ? value.substring(fragmentIndex + 1) : null).         return new URI(scheme, ssp, fragment).     } else {         // not encoding or the value contains no scheme - fallback to default         return new URI(value).     } }
false;public;0;5;;@Override public String getAsText() {     URI value = (URI) getValue().     return (value != null ? value.toString() : ""). }
