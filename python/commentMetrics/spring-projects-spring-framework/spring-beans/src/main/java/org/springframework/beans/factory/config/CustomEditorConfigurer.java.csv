# id;timestamp;commentText;codeText;commentWords;codeWords
CustomEditorConfigurer -> public void setCustomEditors(Map<Class<?>, Class<? extends PropertyEditor>> customEditors);1367574593;Specify the custom editors to register via a {@link Map}, using the_class name of the required type as the key and the class name of the_associated {@link PropertyEditor} as value._@see ConfigurableListableBeanFactory#registerCustomEditor;public void setCustomEditors(Map<Class<?>, Class<? extends PropertyEditor>> customEditors) {_		this.customEditors = customEditors__	};specify,the,custom,editors,to,register,via,a,link,map,using,the,class,name,of,the,required,type,as,the,key,and,the,class,name,of,the,associated,link,property,editor,as,value,see,configurable,listable,bean,factory,register,custom,editor;public,void,set,custom,editors,map,class,class,extends,property,editor,custom,editors,this,custom,editors,custom,editors
CustomEditorConfigurer -> public void setCustomEditors(Map<Class<?>, Class<? extends PropertyEditor>> customEditors);1368482696;Specify the custom editors to register via a {@link Map}, using the_class name of the required type as the key and the class name of the_associated {@link PropertyEditor} as value._@see ConfigurableListableBeanFactory#registerCustomEditor;public void setCustomEditors(Map<Class<?>, Class<? extends PropertyEditor>> customEditors) {_		this.customEditors = customEditors__	};specify,the,custom,editors,to,register,via,a,link,map,using,the,class,name,of,the,required,type,as,the,key,and,the,class,name,of,the,associated,link,property,editor,as,value,see,configurable,listable,bean,factory,register,custom,editor;public,void,set,custom,editors,map,class,class,extends,property,editor,custom,editors,this,custom,editors,custom,editors
CustomEditorConfigurer -> public void setCustomEditors(Map<Class<?>, Class<? extends PropertyEditor>> customEditors);1385412762;Specify the custom editors to register via a {@link Map}, using the_class name of the required type as the key and the class name of the_associated {@link PropertyEditor} as value._@see ConfigurableListableBeanFactory#registerCustomEditor;public void setCustomEditors(Map<Class<?>, Class<? extends PropertyEditor>> customEditors) {_		this.customEditors = customEditors__	};specify,the,custom,editors,to,register,via,a,link,map,using,the,class,name,of,the,required,type,as,the,key,and,the,class,name,of,the,associated,link,property,editor,as,value,see,configurable,listable,bean,factory,register,custom,editor;public,void,set,custom,editors,map,class,class,extends,property,editor,custom,editors,this,custom,editors,custom,editors
CustomEditorConfigurer -> public void setCustomEditors(Map<Class<?>, Class<? extends PropertyEditor>> customEditors);1385501137;Specify the custom editors to register via a {@link Map}, using the_class name of the required type as the key and the class name of the_associated {@link PropertyEditor} as value._@see ConfigurableListableBeanFactory#registerCustomEditor;public void setCustomEditors(Map<Class<?>, Class<? extends PropertyEditor>> customEditors) {_		this.customEditors = customEditors__	};specify,the,custom,editors,to,register,via,a,link,map,using,the,class,name,of,the,required,type,as,the,key,and,the,class,name,of,the,associated,link,property,editor,as,value,see,configurable,listable,bean,factory,register,custom,editor;public,void,set,custom,editors,map,class,class,extends,property,editor,custom,editors,this,custom,editors,custom,editors
CustomEditorConfigurer -> public void setCustomEditors(Map<Class<?>, Class<? extends PropertyEditor>> customEditors);1497250713;Specify the custom editors to register via a {@link Map}, using the_class name of the required type as the key and the class name of the_associated {@link PropertyEditor} as value._@see ConfigurableListableBeanFactory#registerCustomEditor;public void setCustomEditors(Map<Class<?>, Class<? extends PropertyEditor>> customEditors) {_		this.customEditors = customEditors__	};specify,the,custom,editors,to,register,via,a,link,map,using,the,class,name,of,the,required,type,as,the,key,and,the,class,name,of,the,associated,link,property,editor,as,value,see,configurable,listable,bean,factory,register,custom,editor;public,void,set,custom,editors,map,class,class,extends,property,editor,custom,editors,this,custom,editors,custom,editors
CustomEditorConfigurer -> public void setCustomEditors(Map<Class<?>, Class<? extends PropertyEditor>> customEditors);1498780456;Specify the custom editors to register via a {@link Map}, using the_class name of the required type as the key and the class name of the_associated {@link PropertyEditor} as value._@see ConfigurableListableBeanFactory#registerCustomEditor;public void setCustomEditors(Map<Class<?>, Class<? extends PropertyEditor>> customEditors) {_		this.customEditors = customEditors__	};specify,the,custom,editors,to,register,via,a,link,map,using,the,class,name,of,the,required,type,as,the,key,and,the,class,name,of,the,associated,link,property,editor,as,value,see,configurable,listable,bean,factory,register,custom,editor;public,void,set,custom,editors,map,class,class,extends,property,editor,custom,editors,this,custom,editors,custom,editors
CustomEditorConfigurer -> public void setCustomEditors(Map<Class<?>, Class<? extends PropertyEditor>> customEditors);1530174524;Specify the custom editors to register via a {@link Map}, using the_class name of the required type as the key and the class name of the_associated {@link PropertyEditor} as value._@see ConfigurableListableBeanFactory#registerCustomEditor;public void setCustomEditors(Map<Class<?>, Class<? extends PropertyEditor>> customEditors) {_		this.customEditors = customEditors__	};specify,the,custom,editors,to,register,via,a,link,map,using,the,class,name,of,the,required,type,as,the,key,and,the,class,name,of,the,associated,link,property,editor,as,value,see,configurable,listable,bean,factory,register,custom,editor;public,void,set,custom,editors,map,class,class,extends,property,editor,custom,editors,this,custom,editors,custom,editors
CustomEditorConfigurer -> public void setCustomEditors(Map<String, ?> customEditors);1328020251;Specify the custom editors to register via a {@link Map}, using the_class name of the required type as the key and the class name of the_associated {@link PropertyEditor} as value._<p>Also supports {@link PropertyEditor} instances as values_ however,_this is deprecated since Spring 2.0.7!_@see ConfigurableListableBeanFactory#registerCustomEditor;public void setCustomEditors(Map<String, ?> customEditors) {_		this.customEditors = customEditors__	};specify,the,custom,editors,to,register,via,a,link,map,using,the,class,name,of,the,required,type,as,the,key,and,the,class,name,of,the,associated,link,property,editor,as,value,p,also,supports,link,property,editor,instances,as,values,however,this,is,deprecated,since,spring,2,0,7,see,configurable,listable,bean,factory,register,custom,editor;public,void,set,custom,editors,map,string,custom,editors,this,custom,editors,custom,editors
CustomEditorConfigurer -> public void setCustomEditors(Map<String, ?> customEditors);1356735495;Specify the custom editors to register via a {@link Map}, using the_class name of the required type as the key and the class name of the_associated {@link PropertyEditor} as value._<p>Also supports {@link PropertyEditor} instances as values_ however,_this is deprecated since Spring 2.0.7!_@see ConfigurableListableBeanFactory#registerCustomEditor;public void setCustomEditors(Map<String, ?> customEditors) {_		this.customEditors = customEditors__	};specify,the,custom,editors,to,register,via,a,link,map,using,the,class,name,of,the,required,type,as,the,key,and,the,class,name,of,the,associated,link,property,editor,as,value,p,also,supports,link,property,editor,instances,as,values,however,this,is,deprecated,since,spring,2,0,7,see,configurable,listable,bean,factory,register,custom,editor;public,void,set,custom,editors,map,string,custom,editors,this,custom,editors,custom,editors
CustomEditorConfigurer -> public void setCustomEditors(Map<String, ?> customEditors);1357119239;Specify the custom editors to register via a {@link Map}, using the_class name of the required type as the key and the class name of the_associated {@link PropertyEditor} as value._<p>Also supports {@link PropertyEditor} instances as values_ however,_this is deprecated since Spring 2.0.7!_@see ConfigurableListableBeanFactory#registerCustomEditor;public void setCustomEditors(Map<String, ?> customEditors) {_		this.customEditors = customEditors__	};specify,the,custom,editors,to,register,via,a,link,map,using,the,class,name,of,the,required,type,as,the,key,and,the,class,name,of,the,associated,link,property,editor,as,value,p,also,supports,link,property,editor,instances,as,values,however,this,is,deprecated,since,spring,2,0,7,see,configurable,listable,bean,factory,register,custom,editor;public,void,set,custom,editors,map,string,custom,editors,this,custom,editors,custom,editors
CustomEditorConfigurer -> public void setCustomEditors(Map<String, ?> customEditors);1357119417;Specify the custom editors to register via a {@link Map}, using the_class name of the required type as the key and the class name of the_associated {@link PropertyEditor} as value._<p>Also supports {@link PropertyEditor} instances as values_ however,_this is deprecated since Spring 2.0.7!_@see ConfigurableListableBeanFactory#registerCustomEditor;public void setCustomEditors(Map<String, ?> customEditors) {_		this.customEditors = customEditors__	};specify,the,custom,editors,to,register,via,a,link,map,using,the,class,name,of,the,required,type,as,the,key,and,the,class,name,of,the,associated,link,property,editor,as,value,p,also,supports,link,property,editor,instances,as,values,however,this,is,deprecated,since,spring,2,0,7,see,configurable,listable,bean,factory,register,custom,editor;public,void,set,custom,editors,map,string,custom,editors,this,custom,editors,custom,editors
CustomEditorConfigurer -> public void setCustomEditors(Map<String, ?> customEditors);1362408075;Specify the custom editors to register via a {@link Map}, using the_class name of the required type as the key and the class name of the_associated {@link PropertyEditor} as value._<p>Also supports {@link PropertyEditor} instances as values_ however,_this is deprecated since Spring 2.0.7!_@see ConfigurableListableBeanFactory#registerCustomEditor;public void setCustomEditors(Map<String, ?> customEditors) {_		this.customEditors = customEditors__	};specify,the,custom,editors,to,register,via,a,link,map,using,the,class,name,of,the,required,type,as,the,key,and,the,class,name,of,the,associated,link,property,editor,as,value,p,also,supports,link,property,editor,instances,as,values,however,this,is,deprecated,since,spring,2,0,7,see,configurable,listable,bean,factory,register,custom,editor;public,void,set,custom,editors,map,string,custom,editors,this,custom,editors,custom,editors
CustomEditorConfigurer -> public void setIgnoreUnresolvableEditors(boolean ignoreUnresolvableEditors);1328020251;Set whether unresolvable editors should simply be skipped._Default is to raise an exception in such a case._<p>This typically applies to either the editor class or the required type_class not being found in the classpath. If you expect this to happen in_some deployments and prefer to simply ignore the affected editors,_then switch this flag to "true".;public void setIgnoreUnresolvableEditors(boolean ignoreUnresolvableEditors) {_		this.ignoreUnresolvableEditors = ignoreUnresolvableEditors__	};set,whether,unresolvable,editors,should,simply,be,skipped,default,is,to,raise,an,exception,in,such,a,case,p,this,typically,applies,to,either,the,editor,class,or,the,required,type,class,not,being,found,in,the,classpath,if,you,expect,this,to,happen,in,some,deployments,and,prefer,to,simply,ignore,the,affected,editors,then,switch,this,flag,to,true;public,void,set,ignore,unresolvable,editors,boolean,ignore,unresolvable,editors,this,ignore,unresolvable,editors,ignore,unresolvable,editors
CustomEditorConfigurer -> public void setIgnoreUnresolvableEditors(boolean ignoreUnresolvableEditors);1356735495;Set whether unresolvable editors should simply be skipped._Default is to raise an exception in such a case._<p>This typically applies to either the editor class or the required type_class not being found in the classpath. If you expect this to happen in_some deployments and prefer to simply ignore the affected editors,_then switch this flag to "true".;public void setIgnoreUnresolvableEditors(boolean ignoreUnresolvableEditors) {_		this.ignoreUnresolvableEditors = ignoreUnresolvableEditors__	};set,whether,unresolvable,editors,should,simply,be,skipped,default,is,to,raise,an,exception,in,such,a,case,p,this,typically,applies,to,either,the,editor,class,or,the,required,type,class,not,being,found,in,the,classpath,if,you,expect,this,to,happen,in,some,deployments,and,prefer,to,simply,ignore,the,affected,editors,then,switch,this,flag,to,true;public,void,set,ignore,unresolvable,editors,boolean,ignore,unresolvable,editors,this,ignore,unresolvable,editors,ignore,unresolvable,editors
CustomEditorConfigurer -> public void setIgnoreUnresolvableEditors(boolean ignoreUnresolvableEditors);1357119239;Set whether unresolvable editors should simply be skipped._Default is to raise an exception in such a case._<p>This typically applies to either the editor class or the required type_class not being found in the classpath. If you expect this to happen in_some deployments and prefer to simply ignore the affected editors,_then switch this flag to "true".;public void setIgnoreUnresolvableEditors(boolean ignoreUnresolvableEditors) {_		this.ignoreUnresolvableEditors = ignoreUnresolvableEditors__	};set,whether,unresolvable,editors,should,simply,be,skipped,default,is,to,raise,an,exception,in,such,a,case,p,this,typically,applies,to,either,the,editor,class,or,the,required,type,class,not,being,found,in,the,classpath,if,you,expect,this,to,happen,in,some,deployments,and,prefer,to,simply,ignore,the,affected,editors,then,switch,this,flag,to,true;public,void,set,ignore,unresolvable,editors,boolean,ignore,unresolvable,editors,this,ignore,unresolvable,editors,ignore,unresolvable,editors
CustomEditorConfigurer -> public void setIgnoreUnresolvableEditors(boolean ignoreUnresolvableEditors);1357119417;Set whether unresolvable editors should simply be skipped._Default is to raise an exception in such a case._<p>This typically applies to either the editor class or the required type_class not being found in the classpath. If you expect this to happen in_some deployments and prefer to simply ignore the affected editors,_then switch this flag to "true".;public void setIgnoreUnresolvableEditors(boolean ignoreUnresolvableEditors) {_		this.ignoreUnresolvableEditors = ignoreUnresolvableEditors__	};set,whether,unresolvable,editors,should,simply,be,skipped,default,is,to,raise,an,exception,in,such,a,case,p,this,typically,applies,to,either,the,editor,class,or,the,required,type,class,not,being,found,in,the,classpath,if,you,expect,this,to,happen,in,some,deployments,and,prefer,to,simply,ignore,the,affected,editors,then,switch,this,flag,to,true;public,void,set,ignore,unresolvable,editors,boolean,ignore,unresolvable,editors,this,ignore,unresolvable,editors,ignore,unresolvable,editors
CustomEditorConfigurer -> public void setIgnoreUnresolvableEditors(boolean ignoreUnresolvableEditors);1362408075;Set whether unresolvable editors should simply be skipped._Default is to raise an exception in such a case._<p>This typically applies to either the editor class or the required type_class not being found in the classpath. If you expect this to happen in_some deployments and prefer to simply ignore the affected editors,_then switch this flag to "true".;public void setIgnoreUnresolvableEditors(boolean ignoreUnresolvableEditors) {_		this.ignoreUnresolvableEditors = ignoreUnresolvableEditors__	};set,whether,unresolvable,editors,should,simply,be,skipped,default,is,to,raise,an,exception,in,such,a,case,p,this,typically,applies,to,either,the,editor,class,or,the,required,type,class,not,being,found,in,the,classpath,if,you,expect,this,to,happen,in,some,deployments,and,prefer,to,simply,ignore,the,affected,editors,then,switch,this,flag,to,true;public,void,set,ignore,unresolvable,editors,boolean,ignore,unresolvable,editors,this,ignore,unresolvable,editors,ignore,unresolvable,editors
CustomEditorConfigurer -> public void setPropertyEditorRegistrars(PropertyEditorRegistrar[] propertyEditorRegistrars);1328020251;Specify the {@link PropertyEditorRegistrar PropertyEditorRegistrars}_to apply to beans defined within the current application context._<p>This allows for sharing <code>PropertyEditorRegistrars</code> with_{@link org.springframework.validation.DataBinder DataBinders}, etc._Furthermore, it avoids the need for synchronization on custom editors:_A <code>PropertyEditorRegistrar</code> will always create fresh editor_instances for each bean creation attempt._@see ConfigurableListableBeanFactory#addPropertyEditorRegistrar;public void setPropertyEditorRegistrars(PropertyEditorRegistrar[] propertyEditorRegistrars) {_		this.propertyEditorRegistrars = propertyEditorRegistrars__	};specify,the,link,property,editor,registrar,property,editor,registrars,to,apply,to,beans,defined,within,the,current,application,context,p,this,allows,for,sharing,code,property,editor,registrars,code,with,link,org,springframework,validation,data,binder,data,binders,etc,furthermore,it,avoids,the,need,for,synchronization,on,custom,editors,a,code,property,editor,registrar,code,will,always,create,fresh,editor,instances,for,each,bean,creation,attempt,see,configurable,listable,bean,factory,add,property,editor,registrar;public,void,set,property,editor,registrars,property,editor,registrar,property,editor,registrars,this,property,editor,registrars,property,editor,registrars
CustomEditorConfigurer -> public void setPropertyEditorRegistrars(PropertyEditorRegistrar[] propertyEditorRegistrars);1356735495;Specify the {@link PropertyEditorRegistrar PropertyEditorRegistrars}_to apply to beans defined within the current application context._<p>This allows for sharing {@code PropertyEditorRegistrars} with_{@link org.springframework.validation.DataBinder DataBinders}, etc._Furthermore, it avoids the need for synchronization on custom editors:_A {@code PropertyEditorRegistrar} will always create fresh editor_instances for each bean creation attempt._@see ConfigurableListableBeanFactory#addPropertyEditorRegistrar;public void setPropertyEditorRegistrars(PropertyEditorRegistrar[] propertyEditorRegistrars) {_		this.propertyEditorRegistrars = propertyEditorRegistrars__	};specify,the,link,property,editor,registrar,property,editor,registrars,to,apply,to,beans,defined,within,the,current,application,context,p,this,allows,for,sharing,code,property,editor,registrars,with,link,org,springframework,validation,data,binder,data,binders,etc,furthermore,it,avoids,the,need,for,synchronization,on,custom,editors,a,code,property,editor,registrar,will,always,create,fresh,editor,instances,for,each,bean,creation,attempt,see,configurable,listable,bean,factory,add,property,editor,registrar;public,void,set,property,editor,registrars,property,editor,registrar,property,editor,registrars,this,property,editor,registrars,property,editor,registrars
CustomEditorConfigurer -> public void setPropertyEditorRegistrars(PropertyEditorRegistrar[] propertyEditorRegistrars);1357119239;Specify the {@link PropertyEditorRegistrar PropertyEditorRegistrars}_to apply to beans defined within the current application context._<p>This allows for sharing {@code PropertyEditorRegistrars} with_{@link org.springframework.validation.DataBinder DataBinders}, etc._Furthermore, it avoids the need for synchronization on custom editors:_A {@code PropertyEditorRegistrar} will always create fresh editor_instances for each bean creation attempt._@see ConfigurableListableBeanFactory#addPropertyEditorRegistrar;public void setPropertyEditorRegistrars(PropertyEditorRegistrar[] propertyEditorRegistrars) {_		this.propertyEditorRegistrars = propertyEditorRegistrars__	};specify,the,link,property,editor,registrar,property,editor,registrars,to,apply,to,beans,defined,within,the,current,application,context,p,this,allows,for,sharing,code,property,editor,registrars,with,link,org,springframework,validation,data,binder,data,binders,etc,furthermore,it,avoids,the,need,for,synchronization,on,custom,editors,a,code,property,editor,registrar,will,always,create,fresh,editor,instances,for,each,bean,creation,attempt,see,configurable,listable,bean,factory,add,property,editor,registrar;public,void,set,property,editor,registrars,property,editor,registrar,property,editor,registrars,this,property,editor,registrars,property,editor,registrars
CustomEditorConfigurer -> public void setPropertyEditorRegistrars(PropertyEditorRegistrar[] propertyEditorRegistrars);1357119417;Specify the {@link PropertyEditorRegistrar PropertyEditorRegistrars}_to apply to beans defined within the current application context._<p>This allows for sharing {@code PropertyEditorRegistrars} with_{@link org.springframework.validation.DataBinder DataBinders}, etc._Furthermore, it avoids the need for synchronization on custom editors:_A {@code PropertyEditorRegistrar} will always create fresh editor_instances for each bean creation attempt._@see ConfigurableListableBeanFactory#addPropertyEditorRegistrar;public void setPropertyEditorRegistrars(PropertyEditorRegistrar[] propertyEditorRegistrars) {_		this.propertyEditorRegistrars = propertyEditorRegistrars__	};specify,the,link,property,editor,registrar,property,editor,registrars,to,apply,to,beans,defined,within,the,current,application,context,p,this,allows,for,sharing,code,property,editor,registrars,with,link,org,springframework,validation,data,binder,data,binders,etc,furthermore,it,avoids,the,need,for,synchronization,on,custom,editors,a,code,property,editor,registrar,will,always,create,fresh,editor,instances,for,each,bean,creation,attempt,see,configurable,listable,bean,factory,add,property,editor,registrar;public,void,set,property,editor,registrars,property,editor,registrar,property,editor,registrars,this,property,editor,registrars,property,editor,registrars
CustomEditorConfigurer -> public void setPropertyEditorRegistrars(PropertyEditorRegistrar[] propertyEditorRegistrars);1362408075;Specify the {@link PropertyEditorRegistrar PropertyEditorRegistrars}_to apply to beans defined within the current application context._<p>This allows for sharing {@code PropertyEditorRegistrars} with_{@link org.springframework.validation.DataBinder DataBinders}, etc._Furthermore, it avoids the need for synchronization on custom editors:_A {@code PropertyEditorRegistrar} will always create fresh editor_instances for each bean creation attempt._@see ConfigurableListableBeanFactory#addPropertyEditorRegistrar;public void setPropertyEditorRegistrars(PropertyEditorRegistrar[] propertyEditorRegistrars) {_		this.propertyEditorRegistrars = propertyEditorRegistrars__	};specify,the,link,property,editor,registrar,property,editor,registrars,to,apply,to,beans,defined,within,the,current,application,context,p,this,allows,for,sharing,code,property,editor,registrars,with,link,org,springframework,validation,data,binder,data,binders,etc,furthermore,it,avoids,the,need,for,synchronization,on,custom,editors,a,code,property,editor,registrar,will,always,create,fresh,editor,instances,for,each,bean,creation,attempt,see,configurable,listable,bean,factory,add,property,editor,registrar;public,void,set,property,editor,registrars,property,editor,registrar,property,editor,registrars,this,property,editor,registrars,property,editor,registrars
CustomEditorConfigurer -> public void setPropertyEditorRegistrars(PropertyEditorRegistrar[] propertyEditorRegistrars);1367574593;Specify the {@link PropertyEditorRegistrar PropertyEditorRegistrars}_to apply to beans defined within the current application context._<p>This allows for sharing {@code PropertyEditorRegistrars} with_{@link org.springframework.validation.DataBinder DataBinders}, etc._Furthermore, it avoids the need for synchronization on custom editors:_A {@code PropertyEditorRegistrar} will always create fresh editor_instances for each bean creation attempt._@see ConfigurableListableBeanFactory#addPropertyEditorRegistrar;public void setPropertyEditorRegistrars(PropertyEditorRegistrar[] propertyEditorRegistrars) {_		this.propertyEditorRegistrars = propertyEditorRegistrars__	};specify,the,link,property,editor,registrar,property,editor,registrars,to,apply,to,beans,defined,within,the,current,application,context,p,this,allows,for,sharing,code,property,editor,registrars,with,link,org,springframework,validation,data,binder,data,binders,etc,furthermore,it,avoids,the,need,for,synchronization,on,custom,editors,a,code,property,editor,registrar,will,always,create,fresh,editor,instances,for,each,bean,creation,attempt,see,configurable,listable,bean,factory,add,property,editor,registrar;public,void,set,property,editor,registrars,property,editor,registrar,property,editor,registrars,this,property,editor,registrars,property,editor,registrars
CustomEditorConfigurer -> public void setPropertyEditorRegistrars(PropertyEditorRegistrar[] propertyEditorRegistrars);1368482696;Specify the {@link PropertyEditorRegistrar PropertyEditorRegistrars}_to apply to beans defined within the current application context._<p>This allows for sharing {@code PropertyEditorRegistrars} with_{@link org.springframework.validation.DataBinder DataBinders}, etc._Furthermore, it avoids the need for synchronization on custom editors:_A {@code PropertyEditorRegistrar} will always create fresh editor_instances for each bean creation attempt._@see ConfigurableListableBeanFactory#addPropertyEditorRegistrar;public void setPropertyEditorRegistrars(PropertyEditorRegistrar[] propertyEditorRegistrars) {_		this.propertyEditorRegistrars = propertyEditorRegistrars__	};specify,the,link,property,editor,registrar,property,editor,registrars,to,apply,to,beans,defined,within,the,current,application,context,p,this,allows,for,sharing,code,property,editor,registrars,with,link,org,springframework,validation,data,binder,data,binders,etc,furthermore,it,avoids,the,need,for,synchronization,on,custom,editors,a,code,property,editor,registrar,will,always,create,fresh,editor,instances,for,each,bean,creation,attempt,see,configurable,listable,bean,factory,add,property,editor,registrar;public,void,set,property,editor,registrars,property,editor,registrar,property,editor,registrars,this,property,editor,registrars,property,editor,registrars
CustomEditorConfigurer -> public void setPropertyEditorRegistrars(PropertyEditorRegistrar[] propertyEditorRegistrars);1385412762;Specify the {@link PropertyEditorRegistrar PropertyEditorRegistrars}_to apply to beans defined within the current application context._<p>This allows for sharing {@code PropertyEditorRegistrars} with_{@link org.springframework.validation.DataBinder DataBinders}, etc._Furthermore, it avoids the need for synchronization on custom editors:_A {@code PropertyEditorRegistrar} will always create fresh editor_instances for each bean creation attempt._@see ConfigurableListableBeanFactory#addPropertyEditorRegistrar;public void setPropertyEditorRegistrars(PropertyEditorRegistrar[] propertyEditorRegistrars) {_		this.propertyEditorRegistrars = propertyEditorRegistrars__	};specify,the,link,property,editor,registrar,property,editor,registrars,to,apply,to,beans,defined,within,the,current,application,context,p,this,allows,for,sharing,code,property,editor,registrars,with,link,org,springframework,validation,data,binder,data,binders,etc,furthermore,it,avoids,the,need,for,synchronization,on,custom,editors,a,code,property,editor,registrar,will,always,create,fresh,editor,instances,for,each,bean,creation,attempt,see,configurable,listable,bean,factory,add,property,editor,registrar;public,void,set,property,editor,registrars,property,editor,registrar,property,editor,registrars,this,property,editor,registrars,property,editor,registrars
CustomEditorConfigurer -> public void setPropertyEditorRegistrars(PropertyEditorRegistrar[] propertyEditorRegistrars);1385501137;Specify the {@link PropertyEditorRegistrar PropertyEditorRegistrars}_to apply to beans defined within the current application context._<p>This allows for sharing {@code PropertyEditorRegistrars} with_{@link org.springframework.validation.DataBinder DataBinders}, etc._Furthermore, it avoids the need for synchronization on custom editors:_A {@code PropertyEditorRegistrar} will always create fresh editor_instances for each bean creation attempt._@see ConfigurableListableBeanFactory#addPropertyEditorRegistrar;public void setPropertyEditorRegistrars(PropertyEditorRegistrar[] propertyEditorRegistrars) {_		this.propertyEditorRegistrars = propertyEditorRegistrars__	};specify,the,link,property,editor,registrar,property,editor,registrars,to,apply,to,beans,defined,within,the,current,application,context,p,this,allows,for,sharing,code,property,editor,registrars,with,link,org,springframework,validation,data,binder,data,binders,etc,furthermore,it,avoids,the,need,for,synchronization,on,custom,editors,a,code,property,editor,registrar,will,always,create,fresh,editor,instances,for,each,bean,creation,attempt,see,configurable,listable,bean,factory,add,property,editor,registrar;public,void,set,property,editor,registrars,property,editor,registrar,property,editor,registrars,this,property,editor,registrars,property,editor,registrars
CustomEditorConfigurer -> public void setPropertyEditorRegistrars(PropertyEditorRegistrar[] propertyEditorRegistrars);1497250713;Specify the {@link PropertyEditorRegistrar PropertyEditorRegistrars}_to apply to beans defined within the current application context._<p>This allows for sharing {@code PropertyEditorRegistrars} with_{@link org.springframework.validation.DataBinder DataBinders}, etc._Furthermore, it avoids the need for synchronization on custom editors:_A {@code PropertyEditorRegistrar} will always create fresh editor_instances for each bean creation attempt._@see ConfigurableListableBeanFactory#addPropertyEditorRegistrar;public void setPropertyEditorRegistrars(PropertyEditorRegistrar[] propertyEditorRegistrars) {_		this.propertyEditorRegistrars = propertyEditorRegistrars__	};specify,the,link,property,editor,registrar,property,editor,registrars,to,apply,to,beans,defined,within,the,current,application,context,p,this,allows,for,sharing,code,property,editor,registrars,with,link,org,springframework,validation,data,binder,data,binders,etc,furthermore,it,avoids,the,need,for,synchronization,on,custom,editors,a,code,property,editor,registrar,will,always,create,fresh,editor,instances,for,each,bean,creation,attempt,see,configurable,listable,bean,factory,add,property,editor,registrar;public,void,set,property,editor,registrars,property,editor,registrar,property,editor,registrars,this,property,editor,registrars,property,editor,registrars
CustomEditorConfigurer -> public void setPropertyEditorRegistrars(PropertyEditorRegistrar[] propertyEditorRegistrars);1498780456;Specify the {@link PropertyEditorRegistrar PropertyEditorRegistrars}_to apply to beans defined within the current application context._<p>This allows for sharing {@code PropertyEditorRegistrars} with_{@link org.springframework.validation.DataBinder DataBinders}, etc._Furthermore, it avoids the need for synchronization on custom editors:_A {@code PropertyEditorRegistrar} will always create fresh editor_instances for each bean creation attempt._@see ConfigurableListableBeanFactory#addPropertyEditorRegistrar;public void setPropertyEditorRegistrars(PropertyEditorRegistrar[] propertyEditorRegistrars) {_		this.propertyEditorRegistrars = propertyEditorRegistrars__	};specify,the,link,property,editor,registrar,property,editor,registrars,to,apply,to,beans,defined,within,the,current,application,context,p,this,allows,for,sharing,code,property,editor,registrars,with,link,org,springframework,validation,data,binder,data,binders,etc,furthermore,it,avoids,the,need,for,synchronization,on,custom,editors,a,code,property,editor,registrar,will,always,create,fresh,editor,instances,for,each,bean,creation,attempt,see,configurable,listable,bean,factory,add,property,editor,registrar;public,void,set,property,editor,registrars,property,editor,registrar,property,editor,registrars,this,property,editor,registrars,property,editor,registrars
CustomEditorConfigurer -> public void setPropertyEditorRegistrars(PropertyEditorRegistrar[] propertyEditorRegistrars);1530174524;Specify the {@link PropertyEditorRegistrar PropertyEditorRegistrars}_to apply to beans defined within the current application context._<p>This allows for sharing {@code PropertyEditorRegistrars} with_{@link org.springframework.validation.DataBinder DataBinders}, etc._Furthermore, it avoids the need for synchronization on custom editors:_A {@code PropertyEditorRegistrar} will always create fresh editor_instances for each bean creation attempt._@see ConfigurableListableBeanFactory#addPropertyEditorRegistrar;public void setPropertyEditorRegistrars(PropertyEditorRegistrar[] propertyEditorRegistrars) {_		this.propertyEditorRegistrars = propertyEditorRegistrars__	};specify,the,link,property,editor,registrar,property,editor,registrars,to,apply,to,beans,defined,within,the,current,application,context,p,this,allows,for,sharing,code,property,editor,registrars,with,link,org,springframework,validation,data,binder,data,binders,etc,furthermore,it,avoids,the,need,for,synchronization,on,custom,editors,a,code,property,editor,registrar,will,always,create,fresh,editor,instances,for,each,bean,creation,attempt,see,configurable,listable,bean,factory,add,property,editor,registrar;public,void,set,property,editor,registrars,property,editor,registrar,property,editor,registrars,this,property,editor,registrars,property,editor,registrars
