commented;modifiers;parameterAmount;loc;comment;code
true;public;1;16;/**  * Convert {@link String} into {@link Properties}, considering it as  * properties content.  * @param text the text to be so converted  */ ;/**  * Convert {@link String} into {@link Properties}, considering it as  * properties content.  * @param text the text to be so converted  */ @Override public void setAsText(@Nullable String text) throws IllegalArgumentException {     Properties props = new Properties().     if (text != null) {         try {             // Must use the ISO-8859-1 encoding because Properties.load(stream) expects it.             props.load(new ByteArrayInputStream(text.getBytes(StandardCharsets.ISO_8859_1))).         } catch (IOException ex) {             // Should never happen.             throw new IllegalArgumentException("Failed to parse [" + text + "] into Properties", ex).         }     }     setValue(props). }
true;public;1;11;/**  * Take {@link Properties} as-is. convert {@link Map} into {@code Properties}.  */ ;/**  * Take {@link Properties} as-is. convert {@link Map} into {@code Properties}.  */ @Override public void setValue(Object value) {     if (!(value instanceof Properties) && value instanceof Map) {         Properties props = new Properties().         props.putAll((Map<?, ?>) value).         super.setValue(props).     } else {         super.setValue(value).     } }
