# id;timestamp;commentText;codeText;commentWords;codeWords
AnnotationBeanUtils -> public static void copyPropertiesToBean(Annotation ann, Object bean, StringValueResolver valueResolver, String... excludedProperties);1351648401;Copy the properties of the supplied {@link Annotation} to the supplied target bean._Any properties defined in <code>excludedProperties</code> will not be copied._<p>A specified value resolver may resolve placeholders in property values, for example._@param ann the annotation to copy from_@param bean the bean instance to copy to_@param valueResolver a resolve to post-process String property values (may be <code>null</code>)_@param excludedProperties the names of excluded properties, if any_@see org.springframework.beans.BeanWrapper;public static void copyPropertiesToBean(Annotation ann, Object bean, StringValueResolver valueResolver, String... excludedProperties) {_		Set<String> excluded =  new HashSet<String>(Arrays.asList(excludedProperties))__		Method[] annotationProperties = ann.annotationType().getDeclaredMethods()__		BeanWrapper bw = PropertyAccessorFactory.forBeanPropertyAccess(bean)__		for (Method annotationProperty : annotationProperties) {_			String propertyName = annotationProperty.getName()__			if ((!excluded.contains(propertyName)) && bw.isWritableProperty(propertyName)) {_				Object value = ReflectionUtils.invokeMethod(annotationProperty, ann)__				if (valueResolver != null && value instanceof String) {_					value = valueResolver.resolveStringValue((String) value)__				}_				bw.setPropertyValue(propertyName, value)__			}_		}_	};copy,the,properties,of,the,supplied,link,annotation,to,the,supplied,target,bean,any,properties,defined,in,code,excluded,properties,code,will,not,be,copied,p,a,specified,value,resolver,may,resolve,placeholders,in,property,values,for,example,param,ann,the,annotation,to,copy,from,param,bean,the,bean,instance,to,copy,to,param,value,resolver,a,resolve,to,post,process,string,property,values,may,be,code,null,code,param,excluded,properties,the,names,of,excluded,properties,if,any,see,org,springframework,beans,bean,wrapper;public,static,void,copy,properties,to,bean,annotation,ann,object,bean,string,value,resolver,value,resolver,string,excluded,properties,set,string,excluded,new,hash,set,string,arrays,as,list,excluded,properties,method,annotation,properties,ann,annotation,type,get,declared,methods,bean,wrapper,bw,property,accessor,factory,for,bean,property,access,bean,for,method,annotation,property,annotation,properties,string,property,name,annotation,property,get,name,if,excluded,contains,property,name,bw,is,writable,property,property,name,object,value,reflection,utils,invoke,method,annotation,property,ann,if,value,resolver,null,value,instanceof,string,value,value,resolver,resolve,string,value,string,value,bw,set,property,value,property,name,value
AnnotationBeanUtils -> public static void copyPropertiesToBean(Annotation ann, Object bean, StringValueResolver valueResolver, String... excludedProperties);1356735495;Copy the properties of the supplied {@link Annotation} to the supplied target bean._Any properties defined in {@code excludedProperties} will not be copied._<p>A specified value resolver may resolve placeholders in property values, for example._@param ann the annotation to copy from_@param bean the bean instance to copy to_@param valueResolver a resolve to post-process String property values (may be {@code null})_@param excludedProperties the names of excluded properties, if any_@see org.springframework.beans.BeanWrapper;public static void copyPropertiesToBean(Annotation ann, Object bean, StringValueResolver valueResolver, String... excludedProperties) {_		Set<String> excluded =  new HashSet<String>(Arrays.asList(excludedProperties))__		Method[] annotationProperties = ann.annotationType().getDeclaredMethods()__		BeanWrapper bw = PropertyAccessorFactory.forBeanPropertyAccess(bean)__		for (Method annotationProperty : annotationProperties) {_			String propertyName = annotationProperty.getName()__			if ((!excluded.contains(propertyName)) && bw.isWritableProperty(propertyName)) {_				Object value = ReflectionUtils.invokeMethod(annotationProperty, ann)__				if (valueResolver != null && value instanceof String) {_					value = valueResolver.resolveStringValue((String) value)__				}_				bw.setPropertyValue(propertyName, value)__			}_		}_	};copy,the,properties,of,the,supplied,link,annotation,to,the,supplied,target,bean,any,properties,defined,in,code,excluded,properties,will,not,be,copied,p,a,specified,value,resolver,may,resolve,placeholders,in,property,values,for,example,param,ann,the,annotation,to,copy,from,param,bean,the,bean,instance,to,copy,to,param,value,resolver,a,resolve,to,post,process,string,property,values,may,be,code,null,param,excluded,properties,the,names,of,excluded,properties,if,any,see,org,springframework,beans,bean,wrapper;public,static,void,copy,properties,to,bean,annotation,ann,object,bean,string,value,resolver,value,resolver,string,excluded,properties,set,string,excluded,new,hash,set,string,arrays,as,list,excluded,properties,method,annotation,properties,ann,annotation,type,get,declared,methods,bean,wrapper,bw,property,accessor,factory,for,bean,property,access,bean,for,method,annotation,property,annotation,properties,string,property,name,annotation,property,get,name,if,excluded,contains,property,name,bw,is,writable,property,property,name,object,value,reflection,utils,invoke,method,annotation,property,ann,if,value,resolver,null,value,instanceof,string,value,value,resolver,resolve,string,value,string,value,bw,set,property,value,property,name,value
AnnotationBeanUtils -> public static void copyPropertiesToBean(Annotation ann, Object bean, StringValueResolver valueResolver, String... excludedProperties);1446723029;Copy the properties of the supplied {@link Annotation} to the supplied target bean._Any properties defined in {@code excludedProperties} will not be copied._<p>A specified value resolver may resolve placeholders in property values, for example._@param ann the annotation to copy from_@param bean the bean instance to copy to_@param valueResolver a resolve to post-process String property values (may be {@code null})_@param excludedProperties the names of excluded properties, if any_@see org.springframework.beans.BeanWrapper;public static void copyPropertiesToBean(Annotation ann, Object bean, StringValueResolver valueResolver, String... excludedProperties) {_		Set<String> excluded = new HashSet<String>(Arrays.asList(excludedProperties))__		Method[] annotationProperties = ann.annotationType().getDeclaredMethods()__		BeanWrapper bw = PropertyAccessorFactory.forBeanPropertyAccess(bean)__		for (Method annotationProperty : annotationProperties) {_			String propertyName = annotationProperty.getName()__			if (!excluded.contains(propertyName) && bw.isWritableProperty(propertyName)) {_				Object value = ReflectionUtils.invokeMethod(annotationProperty, ann)__				if (valueResolver != null && value instanceof String) {_					value = valueResolver.resolveStringValue((String) value)__				}_				bw.setPropertyValue(propertyName, value)__			}_		}_	};copy,the,properties,of,the,supplied,link,annotation,to,the,supplied,target,bean,any,properties,defined,in,code,excluded,properties,will,not,be,copied,p,a,specified,value,resolver,may,resolve,placeholders,in,property,values,for,example,param,ann,the,annotation,to,copy,from,param,bean,the,bean,instance,to,copy,to,param,value,resolver,a,resolve,to,post,process,string,property,values,may,be,code,null,param,excluded,properties,the,names,of,excluded,properties,if,any,see,org,springframework,beans,bean,wrapper;public,static,void,copy,properties,to,bean,annotation,ann,object,bean,string,value,resolver,value,resolver,string,excluded,properties,set,string,excluded,new,hash,set,string,arrays,as,list,excluded,properties,method,annotation,properties,ann,annotation,type,get,declared,methods,bean,wrapper,bw,property,accessor,factory,for,bean,property,access,bean,for,method,annotation,property,annotation,properties,string,property,name,annotation,property,get,name,if,excluded,contains,property,name,bw,is,writable,property,property,name,object,value,reflection,utils,invoke,method,annotation,property,ann,if,value,resolver,null,value,instanceof,string,value,value,resolver,resolve,string,value,string,value,bw,set,property,value,property,name,value
AnnotationBeanUtils -> public static void copyPropertiesToBean(Annotation ann, Object bean, StringValueResolver valueResolver, String... excludedProperties);1467730834;Copy the properties of the supplied {@link Annotation} to the supplied target bean._Any properties defined in {@code excludedProperties} will not be copied._<p>A specified value resolver may resolve placeholders in property values, for example._@param ann the annotation to copy from_@param bean the bean instance to copy to_@param valueResolver a resolve to post-process String property values (may be {@code null})_@param excludedProperties the names of excluded properties, if any_@see org.springframework.beans.BeanWrapper;public static void copyPropertiesToBean(Annotation ann, Object bean, StringValueResolver valueResolver, String... excludedProperties) {_		Set<String> excluded = new HashSet<>(Arrays.asList(excludedProperties))__		Method[] annotationProperties = ann.annotationType().getDeclaredMethods()__		BeanWrapper bw = PropertyAccessorFactory.forBeanPropertyAccess(bean)__		for (Method annotationProperty : annotationProperties) {_			String propertyName = annotationProperty.getName()__			if (!excluded.contains(propertyName) && bw.isWritableProperty(propertyName)) {_				Object value = ReflectionUtils.invokeMethod(annotationProperty, ann)__				if (valueResolver != null && value instanceof String) {_					value = valueResolver.resolveStringValue((String) value)__				}_				bw.setPropertyValue(propertyName, value)__			}_		}_	};copy,the,properties,of,the,supplied,link,annotation,to,the,supplied,target,bean,any,properties,defined,in,code,excluded,properties,will,not,be,copied,p,a,specified,value,resolver,may,resolve,placeholders,in,property,values,for,example,param,ann,the,annotation,to,copy,from,param,bean,the,bean,instance,to,copy,to,param,value,resolver,a,resolve,to,post,process,string,property,values,may,be,code,null,param,excluded,properties,the,names,of,excluded,properties,if,any,see,org,springframework,beans,bean,wrapper;public,static,void,copy,properties,to,bean,annotation,ann,object,bean,string,value,resolver,value,resolver,string,excluded,properties,set,string,excluded,new,hash,set,arrays,as,list,excluded,properties,method,annotation,properties,ann,annotation,type,get,declared,methods,bean,wrapper,bw,property,accessor,factory,for,bean,property,access,bean,for,method,annotation,property,annotation,properties,string,property,name,annotation,property,get,name,if,excluded,contains,property,name,bw,is,writable,property,property,name,object,value,reflection,utils,invoke,method,annotation,property,ann,if,value,resolver,null,value,instanceof,string,value,value,resolver,resolve,string,value,string,value,bw,set,property,value,property,name,value
AnnotationBeanUtils -> public static void copyPropertiesToBean(Annotation ann, Object bean, String... excludedProperties);1328020251;Copy the properties of the supplied {@link Annotation} to the supplied target bean._Any properties defined in <code>excludedProperties</code> will not be copied._@see org.springframework.beans.BeanWrapper;public static void copyPropertiesToBean(Annotation ann, Object bean, String... excludedProperties) {_		Set<String> excluded =  new HashSet<String>(Arrays.asList(excludedProperties))__		Method[] annotationProperties = ann.annotationType().getDeclaredMethods()__		BeanWrapper bw = PropertyAccessorFactory.forBeanPropertyAccess(bean)__		for (Method annotationProperty : annotationProperties) {_			String propertyName = annotationProperty.getName()__			if ((!excluded.contains(propertyName)) && bw.isWritableProperty(propertyName)) {_				Object value = ReflectionUtils.invokeMethod(annotationProperty, ann)__				bw.setPropertyValue(propertyName, value)__			}_		}_	};copy,the,properties,of,the,supplied,link,annotation,to,the,supplied,target,bean,any,properties,defined,in,code,excluded,properties,code,will,not,be,copied,see,org,springframework,beans,bean,wrapper;public,static,void,copy,properties,to,bean,annotation,ann,object,bean,string,excluded,properties,set,string,excluded,new,hash,set,string,arrays,as,list,excluded,properties,method,annotation,properties,ann,annotation,type,get,declared,methods,bean,wrapper,bw,property,accessor,factory,for,bean,property,access,bean,for,method,annotation,property,annotation,properties,string,property,name,annotation,property,get,name,if,excluded,contains,property,name,bw,is,writable,property,property,name,object,value,reflection,utils,invoke,method,annotation,property,ann,bw,set,property,value,property,name,value
AnnotationBeanUtils -> public static void copyPropertiesToBean(Annotation ann, Object bean, String... excludedProperties);1351648401;Copy the properties of the supplied {@link Annotation} to the supplied target bean._Any properties defined in <code>excludedProperties</code> will not be copied._@param ann the annotation to copy from_@param bean the bean instance to copy to_@param excludedProperties the names of excluded properties, if any_@see org.springframework.beans.BeanWrapper;public static void copyPropertiesToBean(Annotation ann, Object bean, String... excludedProperties) {_		copyPropertiesToBean(ann, bean, null, excludedProperties)__	};copy,the,properties,of,the,supplied,link,annotation,to,the,supplied,target,bean,any,properties,defined,in,code,excluded,properties,code,will,not,be,copied,param,ann,the,annotation,to,copy,from,param,bean,the,bean,instance,to,copy,to,param,excluded,properties,the,names,of,excluded,properties,if,any,see,org,springframework,beans,bean,wrapper;public,static,void,copy,properties,to,bean,annotation,ann,object,bean,string,excluded,properties,copy,properties,to,bean,ann,bean,null,excluded,properties
AnnotationBeanUtils -> public static void copyPropertiesToBean(Annotation ann, Object bean, String... excludedProperties);1356735495;Copy the properties of the supplied {@link Annotation} to the supplied target bean._Any properties defined in {@code excludedProperties} will not be copied._@param ann the annotation to copy from_@param bean the bean instance to copy to_@param excludedProperties the names of excluded properties, if any_@see org.springframework.beans.BeanWrapper;public static void copyPropertiesToBean(Annotation ann, Object bean, String... excludedProperties) {_		copyPropertiesToBean(ann, bean, null, excludedProperties)__	};copy,the,properties,of,the,supplied,link,annotation,to,the,supplied,target,bean,any,properties,defined,in,code,excluded,properties,will,not,be,copied,param,ann,the,annotation,to,copy,from,param,bean,the,bean,instance,to,copy,to,param,excluded,properties,the,names,of,excluded,properties,if,any,see,org,springframework,beans,bean,wrapper;public,static,void,copy,properties,to,bean,annotation,ann,object,bean,string,excluded,properties,copy,properties,to,bean,ann,bean,null,excluded,properties
AnnotationBeanUtils -> public static void copyPropertiesToBean(Annotation ann, Object bean, String... excludedProperties);1446723029;Copy the properties of the supplied {@link Annotation} to the supplied target bean._Any properties defined in {@code excludedProperties} will not be copied._@param ann the annotation to copy from_@param bean the bean instance to copy to_@param excludedProperties the names of excluded properties, if any_@see org.springframework.beans.BeanWrapper;public static void copyPropertiesToBean(Annotation ann, Object bean, String... excludedProperties) {_		copyPropertiesToBean(ann, bean, null, excludedProperties)__	};copy,the,properties,of,the,supplied,link,annotation,to,the,supplied,target,bean,any,properties,defined,in,code,excluded,properties,will,not,be,copied,param,ann,the,annotation,to,copy,from,param,bean,the,bean,instance,to,copy,to,param,excluded,properties,the,names,of,excluded,properties,if,any,see,org,springframework,beans,bean,wrapper;public,static,void,copy,properties,to,bean,annotation,ann,object,bean,string,excluded,properties,copy,properties,to,bean,ann,bean,null,excluded,properties
AnnotationBeanUtils -> public static void copyPropertiesToBean(Annotation ann, Object bean, String... excludedProperties);1467730834;Copy the properties of the supplied {@link Annotation} to the supplied target bean._Any properties defined in {@code excludedProperties} will not be copied._@param ann the annotation to copy from_@param bean the bean instance to copy to_@param excludedProperties the names of excluded properties, if any_@see org.springframework.beans.BeanWrapper;public static void copyPropertiesToBean(Annotation ann, Object bean, String... excludedProperties) {_		copyPropertiesToBean(ann, bean, null, excludedProperties)__	};copy,the,properties,of,the,supplied,link,annotation,to,the,supplied,target,bean,any,properties,defined,in,code,excluded,properties,will,not,be,copied,param,ann,the,annotation,to,copy,from,param,bean,the,bean,instance,to,copy,to,param,excluded,properties,the,names,of,excluded,properties,if,any,see,org,springframework,beans,bean,wrapper;public,static,void,copy,properties,to,bean,annotation,ann,object,bean,string,excluded,properties,copy,properties,to,bean,ann,bean,null,excluded,properties
AnnotationBeanUtils -> public static void copyPropertiesToBean(Annotation ann, Object bean, String... excludedProperties);1496837955;Copy the properties of the supplied {@link Annotation} to the supplied target bean._Any properties defined in {@code excludedProperties} will not be copied._@param ann the annotation to copy from_@param bean the bean instance to copy to_@param excludedProperties the names of excluded properties, if any_@see org.springframework.beans.BeanWrapper;public static void copyPropertiesToBean(Annotation ann, Object bean, String... excludedProperties) {_		copyPropertiesToBean(ann, bean, null, excludedProperties)__	};copy,the,properties,of,the,supplied,link,annotation,to,the,supplied,target,bean,any,properties,defined,in,code,excluded,properties,will,not,be,copied,param,ann,the,annotation,to,copy,from,param,bean,the,bean,instance,to,copy,to,param,excluded,properties,the,names,of,excluded,properties,if,any,see,org,springframework,beans,bean,wrapper;public,static,void,copy,properties,to,bean,annotation,ann,object,bean,string,excluded,properties,copy,properties,to,bean,ann,bean,null,excluded,properties
