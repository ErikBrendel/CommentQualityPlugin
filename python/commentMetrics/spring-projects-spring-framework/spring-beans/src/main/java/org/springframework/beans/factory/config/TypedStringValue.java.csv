# id;timestamp;commentText;codeText;commentWords;codeWords
TypedStringValue -> public Class<?> resolveTargetType(ClassLoader classLoader) throws ClassNotFoundException;1382905576;Determine the type to convert to, resolving it from a specified class name_if necessary. Will also reload a specified Class from its name when called_with the target type already resolved._@param classLoader the ClassLoader to use for resolving a (potential) class name_@return the resolved type to convert to_@throws ClassNotFoundException if the type cannot be resolved;public Class<?> resolveTargetType(ClassLoader classLoader) throws ClassNotFoundException {_		if (this.targetType == null) {_			return null__		}_		Class<?> resolvedClass = ClassUtils.forName(getTargetTypeName(), classLoader)__		this.targetType = resolvedClass__		return resolvedClass__	};determine,the,type,to,convert,to,resolving,it,from,a,specified,class,name,if,necessary,will,also,reload,a,specified,class,from,its,name,when,called,with,the,target,type,already,resolved,param,class,loader,the,class,loader,to,use,for,resolving,a,potential,class,name,return,the,resolved,type,to,convert,to,throws,class,not,found,exception,if,the,type,cannot,be,resolved;public,class,resolve,target,type,class,loader,class,loader,throws,class,not,found,exception,if,this,target,type,null,return,null,class,resolved,class,class,utils,for,name,get,target,type,name,class,loader,this,target,type,resolved,class,return,resolved,class
TypedStringValue -> public Class<?> resolveTargetType(ClassLoader classLoader) throws ClassNotFoundException;1382912267;Determine the type to convert to, resolving it from a specified class name_if necessary. Will also reload a specified Class from its name when called_with the target type already resolved._@param classLoader the ClassLoader to use for resolving a (potential) class name_@return the resolved type to convert to_@throws ClassNotFoundException if the type cannot be resolved;public Class<?> resolveTargetType(ClassLoader classLoader) throws ClassNotFoundException {_		if (this.targetType == null) {_			return null__		}_		Class<?> resolvedClass = ClassUtils.forName(getTargetTypeName(), classLoader)__		this.targetType = resolvedClass__		return resolvedClass__	};determine,the,type,to,convert,to,resolving,it,from,a,specified,class,name,if,necessary,will,also,reload,a,specified,class,from,its,name,when,called,with,the,target,type,already,resolved,param,class,loader,the,class,loader,to,use,for,resolving,a,potential,class,name,return,the,resolved,type,to,convert,to,throws,class,not,found,exception,if,the,type,cannot,be,resolved;public,class,resolve,target,type,class,loader,class,loader,throws,class,not,found,exception,if,this,target,type,null,return,null,class,resolved,class,class,utils,for,name,get,target,type,name,class,loader,this,target,type,resolved,class,return,resolved,class
TypedStringValue -> public Class<?> resolveTargetType(ClassLoader classLoader) throws ClassNotFoundException;1385412762;Determine the type to convert to, resolving it from a specified class name_if necessary. Will also reload a specified Class from its name when called_with the target type already resolved._@param classLoader the ClassLoader to use for resolving a (potential) class name_@return the resolved type to convert to_@throws ClassNotFoundException if the type cannot be resolved;public Class<?> resolveTargetType(ClassLoader classLoader) throws ClassNotFoundException {_		if (this.targetType == null) {_			return null__		}_		Class<?> resolvedClass = ClassUtils.forName(getTargetTypeName(), classLoader)__		this.targetType = resolvedClass__		return resolvedClass__	};determine,the,type,to,convert,to,resolving,it,from,a,specified,class,name,if,necessary,will,also,reload,a,specified,class,from,its,name,when,called,with,the,target,type,already,resolved,param,class,loader,the,class,loader,to,use,for,resolving,a,potential,class,name,return,the,resolved,type,to,convert,to,throws,class,not,found,exception,if,the,type,cannot,be,resolved;public,class,resolve,target,type,class,loader,class,loader,throws,class,not,found,exception,if,this,target,type,null,return,null,class,resolved,class,class,utils,for,name,get,target,type,name,class,loader,this,target,type,resolved,class,return,resolved,class
TypedStringValue -> public Class resolveTargetType(ClassLoader classLoader) throws ClassNotFoundException;1328020251;Determine the type to convert to, resolving it from a specified class name_if necessary. Will also reload a specified Class from its name when called_with the target type already resolved._@param classLoader the ClassLoader to use for resolving a (potential) class name_@return the resolved type to convert to_@throws ClassNotFoundException if the type cannot be resolved;public Class resolveTargetType(ClassLoader classLoader) throws ClassNotFoundException {_		if (this.targetType == null) {_			return null__		}_		Class resolvedClass = ClassUtils.forName(getTargetTypeName(), classLoader)__		this.targetType = resolvedClass__		return resolvedClass__	};determine,the,type,to,convert,to,resolving,it,from,a,specified,class,name,if,necessary,will,also,reload,a,specified,class,from,its,name,when,called,with,the,target,type,already,resolved,param,class,loader,the,class,loader,to,use,for,resolving,a,potential,class,name,return,the,resolved,type,to,convert,to,throws,class,not,found,exception,if,the,type,cannot,be,resolved;public,class,resolve,target,type,class,loader,class,loader,throws,class,not,found,exception,if,this,target,type,null,return,null,class,resolved,class,class,utils,for,name,get,target,type,name,class,loader,this,target,type,resolved,class,return,resolved,class
TypedStringValue -> public Class resolveTargetType(ClassLoader classLoader) throws ClassNotFoundException;1356735495;Determine the type to convert to, resolving it from a specified class name_if necessary. Will also reload a specified Class from its name when called_with the target type already resolved._@param classLoader the ClassLoader to use for resolving a (potential) class name_@return the resolved type to convert to_@throws ClassNotFoundException if the type cannot be resolved;public Class resolveTargetType(ClassLoader classLoader) throws ClassNotFoundException {_		if (this.targetType == null) {_			return null__		}_		Class resolvedClass = ClassUtils.forName(getTargetTypeName(), classLoader)__		this.targetType = resolvedClass__		return resolvedClass__	};determine,the,type,to,convert,to,resolving,it,from,a,specified,class,name,if,necessary,will,also,reload,a,specified,class,from,its,name,when,called,with,the,target,type,already,resolved,param,class,loader,the,class,loader,to,use,for,resolving,a,potential,class,name,return,the,resolved,type,to,convert,to,throws,class,not,found,exception,if,the,type,cannot,be,resolved;public,class,resolve,target,type,class,loader,class,loader,throws,class,not,found,exception,if,this,target,type,null,return,null,class,resolved,class,class,utils,for,name,get,target,type,name,class,loader,this,target,type,resolved,class,return,resolved,class
TypedStringValue -> public Class resolveTargetType(ClassLoader classLoader) throws ClassNotFoundException;1357119239;Determine the type to convert to, resolving it from a specified class name_if necessary. Will also reload a specified Class from its name when called_with the target type already resolved._@param classLoader the ClassLoader to use for resolving a (potential) class name_@return the resolved type to convert to_@throws ClassNotFoundException if the type cannot be resolved;public Class resolveTargetType(ClassLoader classLoader) throws ClassNotFoundException {_		if (this.targetType == null) {_			return null__		}_		Class resolvedClass = ClassUtils.forName(getTargetTypeName(), classLoader)__		this.targetType = resolvedClass__		return resolvedClass__	};determine,the,type,to,convert,to,resolving,it,from,a,specified,class,name,if,necessary,will,also,reload,a,specified,class,from,its,name,when,called,with,the,target,type,already,resolved,param,class,loader,the,class,loader,to,use,for,resolving,a,potential,class,name,return,the,resolved,type,to,convert,to,throws,class,not,found,exception,if,the,type,cannot,be,resolved;public,class,resolve,target,type,class,loader,class,loader,throws,class,not,found,exception,if,this,target,type,null,return,null,class,resolved,class,class,utils,for,name,get,target,type,name,class,loader,this,target,type,resolved,class,return,resolved,class
TypedStringValue -> public Class resolveTargetType(ClassLoader classLoader) throws ClassNotFoundException;1368482696;Determine the type to convert to, resolving it from a specified class name_if necessary. Will also reload a specified Class from its name when called_with the target type already resolved._@param classLoader the ClassLoader to use for resolving a (potential) class name_@return the resolved type to convert to_@throws ClassNotFoundException if the type cannot be resolved;public Class resolveTargetType(ClassLoader classLoader) throws ClassNotFoundException {_		if (this.targetType == null) {_			return null__		}_		Class resolvedClass = ClassUtils.forName(getTargetTypeName(), classLoader)__		this.targetType = resolvedClass__		return resolvedClass__	};determine,the,type,to,convert,to,resolving,it,from,a,specified,class,name,if,necessary,will,also,reload,a,specified,class,from,its,name,when,called,with,the,target,type,already,resolved,param,class,loader,the,class,loader,to,use,for,resolving,a,potential,class,name,return,the,resolved,type,to,convert,to,throws,class,not,found,exception,if,the,type,cannot,be,resolved;public,class,resolve,target,type,class,loader,class,loader,throws,class,not,found,exception,if,this,target,type,null,return,null,class,resolved,class,class,utils,for,name,get,target,type,name,class,loader,this,target,type,resolved,class,return,resolved,class
TypedStringValue -> public Class getTargetType();1328020251;Return the type to convert to.;public Class getTargetType() {_		Object targetTypeValue = this.targetType__		if (!(targetTypeValue instanceof Class)) {_			throw new IllegalStateException("Typed String value does not carry a resolved target type")__		}_		return (Class) targetTypeValue__	};return,the,type,to,convert,to;public,class,get,target,type,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,throw,new,illegal,state,exception,typed,string,value,does,not,carry,a,resolved,target,type,return,class,target,type,value
TypedStringValue -> public Class getTargetType();1356735495;Return the type to convert to.;public Class getTargetType() {_		Object targetTypeValue = this.targetType__		if (!(targetTypeValue instanceof Class)) {_			throw new IllegalStateException("Typed String value does not carry a resolved target type")__		}_		return (Class) targetTypeValue__	};return,the,type,to,convert,to;public,class,get,target,type,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,throw,new,illegal,state,exception,typed,string,value,does,not,carry,a,resolved,target,type,return,class,target,type,value
TypedStringValue -> public Class getTargetType();1357119239;Return the type to convert to.;public Class getTargetType() {_		Object targetTypeValue = this.targetType__		if (!(targetTypeValue instanceof Class)) {_			throw new IllegalStateException("Typed String value does not carry a resolved target type")__		}_		return (Class) targetTypeValue__	};return,the,type,to,convert,to;public,class,get,target,type,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,throw,new,illegal,state,exception,typed,string,value,does,not,carry,a,resolved,target,type,return,class,target,type,value
TypedStringValue -> public Class getTargetType();1368482696;Return the type to convert to.;public Class getTargetType() {_		Object targetTypeValue = this.targetType__		if (!(targetTypeValue instanceof Class)) {_			throw new IllegalStateException("Typed String value does not carry a resolved target type")__		}_		return (Class) targetTypeValue__	};return,the,type,to,convert,to;public,class,get,target,type,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,throw,new,illegal,state,exception,typed,string,value,does,not,carry,a,resolved,target,type,return,class,target,type,value
TypedStringValue -> public TypedStringValue(@Nullable String value, String targetTypeName);1496259743;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetTypeName the type to convert to;public TypedStringValue(@Nullable String value, String targetTypeName) {_		setValue(value)__		setTargetTypeName(targetTypeName)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,name,the,type,to,convert,to;public,typed,string,value,nullable,string,value,string,target,type,name,set,value,value,set,target,type,name,target,type,name
TypedStringValue -> public TypedStringValue(@Nullable String value, String targetTypeName);1496837955;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetTypeName the type to convert to;public TypedStringValue(@Nullable String value, String targetTypeName) {_		setValue(value)__		setTargetTypeName(targetTypeName)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,name,the,type,to,convert,to;public,typed,string,value,nullable,string,value,string,target,type,name,set,value,value,set,target,type,name,target,type,name
TypedStringValue -> public TypedStringValue(@Nullable String value, String targetTypeName);1498780456;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetTypeName the type to convert to;public TypedStringValue(@Nullable String value, String targetTypeName) {_		setValue(value)__		setTargetTypeName(targetTypeName)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,name,the,type,to,convert,to;public,typed,string,value,nullable,string,value,string,target,type,name,set,value,value,set,target,type,name,target,type,name
TypedStringValue -> public TypedStringValue(@Nullable String value, String targetTypeName);1500448076;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetTypeName the type to convert to;public TypedStringValue(@Nullable String value, String targetTypeName) {_		setValue(value)__		setTargetTypeName(targetTypeName)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,name,the,type,to,convert,to;public,typed,string,value,nullable,string,value,string,target,type,name,set,value,value,set,target,type,name,target,type,name
TypedStringValue -> public TypedStringValue(@Nullable String value, String targetTypeName);1549554785;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetTypeName the type to convert to;public TypedStringValue(@Nullable String value, String targetTypeName) {_		setValue(value)__		setTargetTypeName(targetTypeName)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,name,the,type,to,convert,to;public,typed,string,value,nullable,string,value,string,target,type,name,set,value,value,set,target,type,name,target,type,name
TypedStringValue -> @Nullable 	public Class<?> resolveTargetType(ClassLoader classLoader) throws ClassNotFoundException;1495868221;Determine the type to convert to, resolving it from a specified class name_if necessary. Will also reload a specified Class from its name when called_with the target type already resolved._@param classLoader the ClassLoader to use for resolving a (potential) class name_@return the resolved type to convert to_@throws ClassNotFoundException if the type cannot be resolved;@Nullable_	public Class<?> resolveTargetType(ClassLoader classLoader) throws ClassNotFoundException {_		if (this.targetType == null) {_			return null__		}_		Class<?> resolvedClass = ClassUtils.forName(getTargetTypeName(), classLoader)__		this.targetType = resolvedClass__		return resolvedClass__	};determine,the,type,to,convert,to,resolving,it,from,a,specified,class,name,if,necessary,will,also,reload,a,specified,class,from,its,name,when,called,with,the,target,type,already,resolved,param,class,loader,the,class,loader,to,use,for,resolving,a,potential,class,name,return,the,resolved,type,to,convert,to,throws,class,not,found,exception,if,the,type,cannot,be,resolved;nullable,public,class,resolve,target,type,class,loader,class,loader,throws,class,not,found,exception,if,this,target,type,null,return,null,class,resolved,class,class,utils,for,name,get,target,type,name,class,loader,this,target,type,resolved,class,return,resolved,class
TypedStringValue -> @Nullable 	public Class<?> resolveTargetType(ClassLoader classLoader) throws ClassNotFoundException;1496259743;Determine the type to convert to, resolving it from a specified class name_if necessary. Will also reload a specified Class from its name when called_with the target type already resolved._@param classLoader the ClassLoader to use for resolving a (potential) class name_@return the resolved type to convert to_@throws ClassNotFoundException if the type cannot be resolved;@Nullable_	public Class<?> resolveTargetType(ClassLoader classLoader) throws ClassNotFoundException {_		if (this.targetType == null) {_			return null__		}_		Class<?> resolvedClass = ClassUtils.forName(getTargetTypeName(), classLoader)__		this.targetType = resolvedClass__		return resolvedClass__	};determine,the,type,to,convert,to,resolving,it,from,a,specified,class,name,if,necessary,will,also,reload,a,specified,class,from,its,name,when,called,with,the,target,type,already,resolved,param,class,loader,the,class,loader,to,use,for,resolving,a,potential,class,name,return,the,resolved,type,to,convert,to,throws,class,not,found,exception,if,the,type,cannot,be,resolved;nullable,public,class,resolve,target,type,class,loader,class,loader,throws,class,not,found,exception,if,this,target,type,null,return,null,class,resolved,class,class,utils,for,name,get,target,type,name,class,loader,this,target,type,resolved,class,return,resolved,class
TypedStringValue -> @Nullable 	public Class<?> resolveTargetType(ClassLoader classLoader) throws ClassNotFoundException;1496837955;Determine the type to convert to, resolving it from a specified class name_if necessary. Will also reload a specified Class from its name when called_with the target type already resolved._@param classLoader the ClassLoader to use for resolving a (potential) class name_@return the resolved type to convert to_@throws ClassNotFoundException if the type cannot be resolved;@Nullable_	public Class<?> resolveTargetType(ClassLoader classLoader) throws ClassNotFoundException {_		String typeName = getTargetTypeName()__		if (typeName == null) {_			return null__		}_		Class<?> resolvedClass = ClassUtils.forName(typeName, classLoader)__		this.targetType = resolvedClass__		return resolvedClass__	};determine,the,type,to,convert,to,resolving,it,from,a,specified,class,name,if,necessary,will,also,reload,a,specified,class,from,its,name,when,called,with,the,target,type,already,resolved,param,class,loader,the,class,loader,to,use,for,resolving,a,potential,class,name,return,the,resolved,type,to,convert,to,throws,class,not,found,exception,if,the,type,cannot,be,resolved;nullable,public,class,resolve,target,type,class,loader,class,loader,throws,class,not,found,exception,string,type,name,get,target,type,name,if,type,name,null,return,null,class,resolved,class,class,utils,for,name,type,name,class,loader,this,target,type,resolved,class,return,resolved,class
TypedStringValue -> @Nullable 	public String getValue();1496259743;Return the String value.;@Nullable_	public String getValue() {_		return this.value__	};return,the,string,value;nullable,public,string,get,value,return,this,value
TypedStringValue -> @Nullable 	public String getValue();1496837955;Return the String value.;@Nullable_	public String getValue() {_		return this.value__	};return,the,string,value;nullable,public,string,get,value,return,this,value
TypedStringValue -> @Nullable 	public String getValue();1498780456;Return the String value.;@Nullable_	public String getValue() {_		return this.value__	};return,the,string,value;nullable,public,string,get,value,return,this,value
TypedStringValue -> @Nullable 	public String getValue();1500448076;Return the String value.;@Nullable_	public String getValue() {_		return this.value__	};return,the,string,value;nullable,public,string,get,value,return,this,value
TypedStringValue -> @Nullable 	public String getValue();1549554785;Return the String value.;@Nullable_	public String getValue() {_		return this.value__	};return,the,string,value;nullable,public,string,get,value,return,this,value
TypedStringValue -> public void setTargetTypeName(@Nullable String targetTypeName);1500448076;Specify the type to convert to.;public void setTargetTypeName(@Nullable String targetTypeName) {_		this.targetType = targetTypeName__	};specify,the,type,to,convert,to;public,void,set,target,type,name,nullable,string,target,type,name,this,target,type,target,type,name
TypedStringValue -> public void setTargetTypeName(@Nullable String targetTypeName);1549554785;Specify the type to convert to.;public void setTargetTypeName(@Nullable String targetTypeName) {_		this.targetType = targetTypeName__	};specify,the,type,to,convert,to;public,void,set,target,type,name,nullable,string,target,type,name,this,target,type,target,type,name
TypedStringValue -> public boolean isDynamic();1328020251;Return whether this value has been marked as dynamic.;public boolean isDynamic() {_		return this.dynamic__	};return,whether,this,value,has,been,marked,as,dynamic;public,boolean,is,dynamic,return,this,dynamic
TypedStringValue -> public boolean isDynamic();1356735495;Return whether this value has been marked as dynamic.;public boolean isDynamic() {_		return this.dynamic__	};return,whether,this,value,has,been,marked,as,dynamic;public,boolean,is,dynamic,return,this,dynamic
TypedStringValue -> public boolean isDynamic();1357119239;Return whether this value has been marked as dynamic.;public boolean isDynamic() {_		return this.dynamic__	};return,whether,this,value,has,been,marked,as,dynamic;public,boolean,is,dynamic,return,this,dynamic
TypedStringValue -> public boolean isDynamic();1368482696;Return whether this value has been marked as dynamic.;public boolean isDynamic() {_		return this.dynamic__	};return,whether,this,value,has,been,marked,as,dynamic;public,boolean,is,dynamic,return,this,dynamic
TypedStringValue -> public boolean isDynamic();1382905576;Return whether this value has been marked as dynamic.;public boolean isDynamic() {_		return this.dynamic__	};return,whether,this,value,has,been,marked,as,dynamic;public,boolean,is,dynamic,return,this,dynamic
TypedStringValue -> public boolean isDynamic();1382912267;Return whether this value has been marked as dynamic.;public boolean isDynamic() {_		return this.dynamic__	};return,whether,this,value,has,been,marked,as,dynamic;public,boolean,is,dynamic,return,this,dynamic
TypedStringValue -> public boolean isDynamic();1385412762;Return whether this value has been marked as dynamic.;public boolean isDynamic() {_		return this.dynamic__	};return,whether,this,value,has,been,marked,as,dynamic;public,boolean,is,dynamic,return,this,dynamic
TypedStringValue -> public boolean isDynamic();1495868221;Return whether this value has been marked as dynamic.;public boolean isDynamic() {_		return this.dynamic__	};return,whether,this,value,has,been,marked,as,dynamic;public,boolean,is,dynamic,return,this,dynamic
TypedStringValue -> public boolean isDynamic();1496259743;Return whether this value has been marked as dynamic.;public boolean isDynamic() {_		return this.dynamic__	};return,whether,this,value,has,been,marked,as,dynamic;public,boolean,is,dynamic,return,this,dynamic
TypedStringValue -> public boolean isDynamic();1496837955;Return whether this value has been marked as dynamic.;public boolean isDynamic() {_		return this.dynamic__	};return,whether,this,value,has,been,marked,as,dynamic;public,boolean,is,dynamic,return,this,dynamic
TypedStringValue -> public boolean isDynamic();1498780456;Return whether this value has been marked as dynamic.;public boolean isDynamic() {_		return this.dynamic__	};return,whether,this,value,has,been,marked,as,dynamic;public,boolean,is,dynamic,return,this,dynamic
TypedStringValue -> public boolean isDynamic();1500448076;Return whether this value has been marked as dynamic.;public boolean isDynamic() {_		return this.dynamic__	};return,whether,this,value,has,been,marked,as,dynamic;public,boolean,is,dynamic,return,this,dynamic
TypedStringValue -> public boolean isDynamic();1549554785;Return whether this value has been marked as dynamic.;public boolean isDynamic() {_		return this.dynamic__	};return,whether,this,value,has,been,marked,as,dynamic;public,boolean,is,dynamic,return,this,dynamic
TypedStringValue -> public void setTargetType(Class targetType);1328020251;Set the type to convert to._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors._@see PropertyPlaceholderConfigurer;public void setTargetType(Class targetType) {_		Assert.notNull(targetType, "'targetType' must not be null")__		this.targetType = targetType__	};set,the,type,to,convert,to,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors,see,property,placeholder,configurer;public,void,set,target,type,class,target,type,assert,not,null,target,type,target,type,must,not,be,null,this,target,type,target,type
TypedStringValue -> public void setTargetType(Class targetType);1356735495;Set the type to convert to._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors._@see PropertyPlaceholderConfigurer;public void setTargetType(Class targetType) {_		Assert.notNull(targetType, "'targetType' must not be null")__		this.targetType = targetType__	};set,the,type,to,convert,to,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors,see,property,placeholder,configurer;public,void,set,target,type,class,target,type,assert,not,null,target,type,target,type,must,not,be,null,this,target,type,target,type
TypedStringValue -> public void setTargetType(Class targetType);1357119239;Set the type to convert to._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors._@see PropertyPlaceholderConfigurer;public void setTargetType(Class targetType) {_		Assert.notNull(targetType, "'targetType' must not be null")__		this.targetType = targetType__	};set,the,type,to,convert,to,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors,see,property,placeholder,configurer;public,void,set,target,type,class,target,type,assert,not,null,target,type,target,type,must,not,be,null,this,target,type,target,type
TypedStringValue -> public void setTargetType(Class targetType);1368482696;Set the type to convert to._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors._@see PropertyPlaceholderConfigurer;public void setTargetType(Class targetType) {_		Assert.notNull(targetType, "'targetType' must not be null")__		this.targetType = targetType__	};set,the,type,to,convert,to,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors,see,property,placeholder,configurer;public,void,set,target,type,class,target,type,assert,not,null,target,type,target,type,must,not,be,null,this,target,type,target,type
TypedStringValue -> public void setTargetType(Class targetType);1382905576;Set the type to convert to._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors._@see PropertyPlaceholderConfigurer;public void setTargetType(Class targetType) {_		Assert.notNull(targetType, "'targetType' must not be null")__		this.targetType = targetType__	};set,the,type,to,convert,to,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors,see,property,placeholder,configurer;public,void,set,target,type,class,target,type,assert,not,null,target,type,target,type,must,not,be,null,this,target,type,target,type
TypedStringValue -> public void setSpecifiedTypeName(String specifiedTypeName);1328020251;Set the type name as actually specified for this particular value, if any.;public void setSpecifiedTypeName(String specifiedTypeName) {_		this.specifiedTypeName = specifiedTypeName__	};set,the,type,name,as,actually,specified,for,this,particular,value,if,any;public,void,set,specified,type,name,string,specified,type,name,this,specified,type,name,specified,type,name
TypedStringValue -> public void setSpecifiedTypeName(String specifiedTypeName);1356735495;Set the type name as actually specified for this particular value, if any.;public void setSpecifiedTypeName(String specifiedTypeName) {_		this.specifiedTypeName = specifiedTypeName__	};set,the,type,name,as,actually,specified,for,this,particular,value,if,any;public,void,set,specified,type,name,string,specified,type,name,this,specified,type,name,specified,type,name
TypedStringValue -> public void setSpecifiedTypeName(String specifiedTypeName);1357119239;Set the type name as actually specified for this particular value, if any.;public void setSpecifiedTypeName(String specifiedTypeName) {_		this.specifiedTypeName = specifiedTypeName__	};set,the,type,name,as,actually,specified,for,this,particular,value,if,any;public,void,set,specified,type,name,string,specified,type,name,this,specified,type,name,specified,type,name
TypedStringValue -> public void setSpecifiedTypeName(String specifiedTypeName);1368482696;Set the type name as actually specified for this particular value, if any.;public void setSpecifiedTypeName(String specifiedTypeName) {_		this.specifiedTypeName = specifiedTypeName__	};set,the,type,name,as,actually,specified,for,this,particular,value,if,any;public,void,set,specified,type,name,string,specified,type,name,this,specified,type,name,specified,type,name
TypedStringValue -> public void setSpecifiedTypeName(String specifiedTypeName);1382905576;Set the type name as actually specified for this particular value, if any.;public void setSpecifiedTypeName(String specifiedTypeName) {_		this.specifiedTypeName = specifiedTypeName__	};set,the,type,name,as,actually,specified,for,this,particular,value,if,any;public,void,set,specified,type,name,string,specified,type,name,this,specified,type,name,specified,type,name
TypedStringValue -> public void setSpecifiedTypeName(String specifiedTypeName);1382912267;Set the type name as actually specified for this particular value, if any.;public void setSpecifiedTypeName(String specifiedTypeName) {_		this.specifiedTypeName = specifiedTypeName__	};set,the,type,name,as,actually,specified,for,this,particular,value,if,any;public,void,set,specified,type,name,string,specified,type,name,this,specified,type,name,specified,type,name
TypedStringValue -> public void setSpecifiedTypeName(String specifiedTypeName);1385412762;Set the type name as actually specified for this particular value, if any.;public void setSpecifiedTypeName(String specifiedTypeName) {_		this.specifiedTypeName = specifiedTypeName__	};set,the,type,name,as,actually,specified,for,this,particular,value,if,any;public,void,set,specified,type,name,string,specified,type,name,this,specified,type,name,specified,type,name
TypedStringValue -> public void setDynamic();1328020251;Mark this value as dynamic, i.e. as containing an expression_and hence not being subject to caching.;public void setDynamic() {_		this.dynamic = true__	};mark,this,value,as,dynamic,i,e,as,containing,an,expression,and,hence,not,being,subject,to,caching;public,void,set,dynamic,this,dynamic,true
TypedStringValue -> public void setDynamic();1356735495;Mark this value as dynamic, i.e. as containing an expression_and hence not being subject to caching.;public void setDynamic() {_		this.dynamic = true__	};mark,this,value,as,dynamic,i,e,as,containing,an,expression,and,hence,not,being,subject,to,caching;public,void,set,dynamic,this,dynamic,true
TypedStringValue -> public void setDynamic();1357119239;Mark this value as dynamic, i.e. as containing an expression_and hence not being subject to caching.;public void setDynamic() {_		this.dynamic = true__	};mark,this,value,as,dynamic,i,e,as,containing,an,expression,and,hence,not,being,subject,to,caching;public,void,set,dynamic,this,dynamic,true
TypedStringValue -> public void setDynamic();1368482696;Mark this value as dynamic, i.e. as containing an expression_and hence not being subject to caching.;public void setDynamic() {_		this.dynamic = true__	};mark,this,value,as,dynamic,i,e,as,containing,an,expression,and,hence,not,being,subject,to,caching;public,void,set,dynamic,this,dynamic,true
TypedStringValue -> public void setDynamic();1382905576;Mark this value as dynamic, i.e. as containing an expression_and hence not being subject to caching.;public void setDynamic() {_		this.dynamic = true__	};mark,this,value,as,dynamic,i,e,as,containing,an,expression,and,hence,not,being,subject,to,caching;public,void,set,dynamic,this,dynamic,true
TypedStringValue -> public void setDynamic();1382912267;Mark this value as dynamic, i.e. as containing an expression_and hence not being subject to caching.;public void setDynamic() {_		this.dynamic = true__	};mark,this,value,as,dynamic,i,e,as,containing,an,expression,and,hence,not,being,subject,to,caching;public,void,set,dynamic,this,dynamic,true
TypedStringValue -> public void setDynamic();1385412762;Mark this value as dynamic, i.e. as containing an expression_and hence not being subject to caching.;public void setDynamic() {_		this.dynamic = true__	};mark,this,value,as,dynamic,i,e,as,containing,an,expression,and,hence,not,being,subject,to,caching;public,void,set,dynamic,this,dynamic,true
TypedStringValue -> public void setDynamic();1495868221;Mark this value as dynamic, i.e. as containing an expression_and hence not being subject to caching.;public void setDynamic() {_		this.dynamic = true__	};mark,this,value,as,dynamic,i,e,as,containing,an,expression,and,hence,not,being,subject,to,caching;public,void,set,dynamic,this,dynamic,true
TypedStringValue -> public void setDynamic();1496259743;Mark this value as dynamic, i.e. as containing an expression_and hence not being subject to caching.;public void setDynamic() {_		this.dynamic = true__	};mark,this,value,as,dynamic,i,e,as,containing,an,expression,and,hence,not,being,subject,to,caching;public,void,set,dynamic,this,dynamic,true
TypedStringValue -> public void setDynamic();1496837955;Mark this value as dynamic, i.e. as containing an expression_and hence not being subject to caching.;public void setDynamic() {_		this.dynamic = true__	};mark,this,value,as,dynamic,i,e,as,containing,an,expression,and,hence,not,being,subject,to,caching;public,void,set,dynamic,this,dynamic,true
TypedStringValue -> public void setDynamic();1498780456;Mark this value as dynamic, i.e. as containing an expression_and hence not being subject to caching.;public void setDynamic() {_		this.dynamic = true__	};mark,this,value,as,dynamic,i,e,as,containing,an,expression,and,hence,not,being,subject,to,caching;public,void,set,dynamic,this,dynamic,true
TypedStringValue -> public void setDynamic();1500448076;Mark this value as dynamic, i.e. as containing an expression_and hence not being subject to caching.;public void setDynamic() {_		this.dynamic = true__	};mark,this,value,as,dynamic,i,e,as,containing,an,expression,and,hence,not,being,subject,to,caching;public,void,set,dynamic,this,dynamic,true
TypedStringValue -> public void setDynamic();1549554785;Mark this value as dynamic, i.e. as containing an expression_and hence not being subject to caching.;public void setDynamic() {_		this.dynamic = true__	};mark,this,value,as,dynamic,i,e,as,containing,an,expression,and,hence,not,being,subject,to,caching;public,void,set,dynamic,this,dynamic,true
TypedStringValue -> public void setSpecifiedTypeName(@Nullable String specifiedTypeName);1495868221;Set the type name as actually specified for this particular value, if any.;public void setSpecifiedTypeName(@Nullable String specifiedTypeName) {_		this.specifiedTypeName = specifiedTypeName__	};set,the,type,name,as,actually,specified,for,this,particular,value,if,any;public,void,set,specified,type,name,nullable,string,specified,type,name,this,specified,type,name,specified,type,name
TypedStringValue -> public void setSpecifiedTypeName(@Nullable String specifiedTypeName);1496259743;Set the type name as actually specified for this particular value, if any.;public void setSpecifiedTypeName(@Nullable String specifiedTypeName) {_		this.specifiedTypeName = specifiedTypeName__	};set,the,type,name,as,actually,specified,for,this,particular,value,if,any;public,void,set,specified,type,name,nullable,string,specified,type,name,this,specified,type,name,specified,type,name
TypedStringValue -> public void setSpecifiedTypeName(@Nullable String specifiedTypeName);1496837955;Set the type name as actually specified for this particular value, if any.;public void setSpecifiedTypeName(@Nullable String specifiedTypeName) {_		this.specifiedTypeName = specifiedTypeName__	};set,the,type,name,as,actually,specified,for,this,particular,value,if,any;public,void,set,specified,type,name,nullable,string,specified,type,name,this,specified,type,name,specified,type,name
TypedStringValue -> public void setSpecifiedTypeName(@Nullable String specifiedTypeName);1498780456;Set the type name as actually specified for this particular value, if any.;public void setSpecifiedTypeName(@Nullable String specifiedTypeName) {_		this.specifiedTypeName = specifiedTypeName__	};set,the,type,name,as,actually,specified,for,this,particular,value,if,any;public,void,set,specified,type,name,nullable,string,specified,type,name,this,specified,type,name,specified,type,name
TypedStringValue -> public void setSpecifiedTypeName(@Nullable String specifiedTypeName);1500448076;Set the type name as actually specified for this particular value, if any.;public void setSpecifiedTypeName(@Nullable String specifiedTypeName) {_		this.specifiedTypeName = specifiedTypeName__	};set,the,type,name,as,actually,specified,for,this,particular,value,if,any;public,void,set,specified,type,name,nullable,string,specified,type,name,this,specified,type,name,specified,type,name
TypedStringValue -> public void setSpecifiedTypeName(@Nullable String specifiedTypeName);1549554785;Set the type name as actually specified for this particular value, if any.;public void setSpecifiedTypeName(@Nullable String specifiedTypeName) {_		this.specifiedTypeName = specifiedTypeName__	};set,the,type,name,as,actually,specified,for,this,particular,value,if,any;public,void,set,specified,type,name,nullable,string,specified,type,name,this,specified,type,name,specified,type,name
TypedStringValue -> @Nullable 	public Class<?> resolveTargetType(@Nullable ClassLoader classLoader) throws ClassNotFoundException;1498780456;Determine the type to convert to, resolving it from a specified class name_if necessary. Will also reload a specified Class from its name when called_with the target type already resolved._@param classLoader the ClassLoader to use for resolving a (potential) class name_@return the resolved type to convert to_@throws ClassNotFoundException if the type cannot be resolved;@Nullable_	public Class<?> resolveTargetType(@Nullable ClassLoader classLoader) throws ClassNotFoundException {_		String typeName = getTargetTypeName()__		if (typeName == null) {_			return null__		}_		Class<?> resolvedClass = ClassUtils.forName(typeName, classLoader)__		this.targetType = resolvedClass__		return resolvedClass__	};determine,the,type,to,convert,to,resolving,it,from,a,specified,class,name,if,necessary,will,also,reload,a,specified,class,from,its,name,when,called,with,the,target,type,already,resolved,param,class,loader,the,class,loader,to,use,for,resolving,a,potential,class,name,return,the,resolved,type,to,convert,to,throws,class,not,found,exception,if,the,type,cannot,be,resolved;nullable,public,class,resolve,target,type,nullable,class,loader,class,loader,throws,class,not,found,exception,string,type,name,get,target,type,name,if,type,name,null,return,null,class,resolved,class,class,utils,for,name,type,name,class,loader,this,target,type,resolved,class,return,resolved,class
TypedStringValue -> @Nullable 	public Class<?> resolveTargetType(@Nullable ClassLoader classLoader) throws ClassNotFoundException;1500448076;Determine the type to convert to, resolving it from a specified class name_if necessary. Will also reload a specified Class from its name when called_with the target type already resolved._@param classLoader the ClassLoader to use for resolving a (potential) class name_@return the resolved type to convert to_@throws ClassNotFoundException if the type cannot be resolved;@Nullable_	public Class<?> resolveTargetType(@Nullable ClassLoader classLoader) throws ClassNotFoundException {_		String typeName = getTargetTypeName()__		if (typeName == null) {_			return null__		}_		Class<?> resolvedClass = ClassUtils.forName(typeName, classLoader)__		this.targetType = resolvedClass__		return resolvedClass__	};determine,the,type,to,convert,to,resolving,it,from,a,specified,class,name,if,necessary,will,also,reload,a,specified,class,from,its,name,when,called,with,the,target,type,already,resolved,param,class,loader,the,class,loader,to,use,for,resolving,a,potential,class,name,return,the,resolved,type,to,convert,to,throws,class,not,found,exception,if,the,type,cannot,be,resolved;nullable,public,class,resolve,target,type,nullable,class,loader,class,loader,throws,class,not,found,exception,string,type,name,get,target,type,name,if,type,name,null,return,null,class,resolved,class,class,utils,for,name,type,name,class,loader,this,target,type,resolved,class,return,resolved,class
TypedStringValue -> @Nullable 	public Class<?> resolveTargetType(@Nullable ClassLoader classLoader) throws ClassNotFoundException;1549554785;Determine the type to convert to, resolving it from a specified class name_if necessary. Will also reload a specified Class from its name when called_with the target type already resolved._@param classLoader the ClassLoader to use for resolving a (potential) class name_@return the resolved type to convert to_@throws ClassNotFoundException if the type cannot be resolved;@Nullable_	public Class<?> resolveTargetType(@Nullable ClassLoader classLoader) throws ClassNotFoundException {_		String typeName = getTargetTypeName()__		if (typeName == null) {_			return null__		}_		Class<?> resolvedClass = ClassUtils.forName(typeName, classLoader)__		this.targetType = resolvedClass__		return resolvedClass__	};determine,the,type,to,convert,to,resolving,it,from,a,specified,class,name,if,necessary,will,also,reload,a,specified,class,from,its,name,when,called,with,the,target,type,already,resolved,param,class,loader,the,class,loader,to,use,for,resolving,a,potential,class,name,return,the,resolved,type,to,convert,to,throws,class,not,found,exception,if,the,type,cannot,be,resolved;nullable,public,class,resolve,target,type,nullable,class,loader,class,loader,throws,class,not,found,exception,string,type,name,get,target,type,name,if,type,name,null,return,null,class,resolved,class,class,utils,for,name,type,name,class,loader,this,target,type,resolved,class,return,resolved,class
TypedStringValue -> public void setSource(Object source);1328020251;Set the configuration source <code>Object</code> for this metadata element._<p>The exact type of the object will depend on the configuration mechanism used.;public void setSource(Object source) {_		this.source = source__	};set,the,configuration,source,code,object,code,for,this,metadata,element,p,the,exact,type,of,the,object,will,depend,on,the,configuration,mechanism,used;public,void,set,source,object,source,this,source,source
TypedStringValue -> public void setSource(Object source);1356735495;Set the configuration source {@code Object} for this metadata element._<p>The exact type of the object will depend on the configuration mechanism used.;public void setSource(Object source) {_		this.source = source__	};set,the,configuration,source,code,object,for,this,metadata,element,p,the,exact,type,of,the,object,will,depend,on,the,configuration,mechanism,used;public,void,set,source,object,source,this,source,source
TypedStringValue -> public void setSource(Object source);1357119239;Set the configuration source {@code Object} for this metadata element._<p>The exact type of the object will depend on the configuration mechanism used.;public void setSource(Object source) {_		this.source = source__	};set,the,configuration,source,code,object,for,this,metadata,element,p,the,exact,type,of,the,object,will,depend,on,the,configuration,mechanism,used;public,void,set,source,object,source,this,source,source
TypedStringValue -> public void setSource(Object source);1368482696;Set the configuration source {@code Object} for this metadata element._<p>The exact type of the object will depend on the configuration mechanism used.;public void setSource(Object source) {_		this.source = source__	};set,the,configuration,source,code,object,for,this,metadata,element,p,the,exact,type,of,the,object,will,depend,on,the,configuration,mechanism,used;public,void,set,source,object,source,this,source,source
TypedStringValue -> public void setSource(Object source);1382905576;Set the configuration source {@code Object} for this metadata element._<p>The exact type of the object will depend on the configuration mechanism used.;public void setSource(Object source) {_		this.source = source__	};set,the,configuration,source,code,object,for,this,metadata,element,p,the,exact,type,of,the,object,will,depend,on,the,configuration,mechanism,used;public,void,set,source,object,source,this,source,source
TypedStringValue -> public void setSource(Object source);1382912267;Set the configuration source {@code Object} for this metadata element._<p>The exact type of the object will depend on the configuration mechanism used.;public void setSource(Object source) {_		this.source = source__	};set,the,configuration,source,code,object,for,this,metadata,element,p,the,exact,type,of,the,object,will,depend,on,the,configuration,mechanism,used;public,void,set,source,object,source,this,source,source
TypedStringValue -> public void setSource(Object source);1385412762;Set the configuration source {@code Object} for this metadata element._<p>The exact type of the object will depend on the configuration mechanism used.;public void setSource(Object source) {_		this.source = source__	};set,the,configuration,source,code,object,for,this,metadata,element,p,the,exact,type,of,the,object,will,depend,on,the,configuration,mechanism,used;public,void,set,source,object,source,this,source,source
TypedStringValue -> public void setSource(Object source);1495868221;Set the configuration source {@code Object} for this metadata element._<p>The exact type of the object will depend on the configuration mechanism used.;public void setSource(Object source) {_		this.source = source__	};set,the,configuration,source,code,object,for,this,metadata,element,p,the,exact,type,of,the,object,will,depend,on,the,configuration,mechanism,used;public,void,set,source,object,source,this,source,source
TypedStringValue -> public void setSource(Object source);1496259743;Set the configuration source {@code Object} for this metadata element._<p>The exact type of the object will depend on the configuration mechanism used.;public void setSource(Object source) {_		this.source = source__	};set,the,configuration,source,code,object,for,this,metadata,element,p,the,exact,type,of,the,object,will,depend,on,the,configuration,mechanism,used;public,void,set,source,object,source,this,source,source
TypedStringValue -> public String getTargetTypeName();1328020251;Return the type to convert to.;public String getTargetTypeName() {_		Object targetTypeValue = this.targetType__		if (targetTypeValue instanceof Class) {_			return ((Class) targetTypeValue).getName()__		}_		else {_			return (String) targetTypeValue__		}_	};return,the,type,to,convert,to;public,string,get,target,type,name,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,return,class,target,type,value,get,name,else,return,string,target,type,value
TypedStringValue -> public String getTargetTypeName();1356735495;Return the type to convert to.;public String getTargetTypeName() {_		Object targetTypeValue = this.targetType__		if (targetTypeValue instanceof Class) {_			return ((Class) targetTypeValue).getName()__		}_		else {_			return (String) targetTypeValue__		}_	};return,the,type,to,convert,to;public,string,get,target,type,name,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,return,class,target,type,value,get,name,else,return,string,target,type,value
TypedStringValue -> public String getTargetTypeName();1357119239;Return the type to convert to.;public String getTargetTypeName() {_		Object targetTypeValue = this.targetType__		if (targetTypeValue instanceof Class) {_			return ((Class) targetTypeValue).getName()__		}_		else {_			return (String) targetTypeValue__		}_	};return,the,type,to,convert,to;public,string,get,target,type,name,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,return,class,target,type,value,get,name,else,return,string,target,type,value
TypedStringValue -> public String getTargetTypeName();1368482696;Return the type to convert to.;public String getTargetTypeName() {_		Object targetTypeValue = this.targetType__		if (targetTypeValue instanceof Class) {_			return ((Class) targetTypeValue).getName()__		}_		else {_			return (String) targetTypeValue__		}_	};return,the,type,to,convert,to;public,string,get,target,type,name,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,return,class,target,type,value,get,name,else,return,string,target,type,value
TypedStringValue -> public String getTargetTypeName();1382905576;Return the type to convert to.;public String getTargetTypeName() {_		Object targetTypeValue = this.targetType__		if (targetTypeValue instanceof Class) {_			return ((Class) targetTypeValue).getName()__		}_		else {_			return (String) targetTypeValue__		}_	};return,the,type,to,convert,to;public,string,get,target,type,name,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,return,class,target,type,value,get,name,else,return,string,target,type,value
TypedStringValue -> public String getTargetTypeName();1382912267;Return the type to convert to.;public String getTargetTypeName() {_		Object targetTypeValue = this.targetType__		if (targetTypeValue instanceof Class) {_			return ((Class) targetTypeValue).getName()__		}_		else {_			return (String) targetTypeValue__		}_	};return,the,type,to,convert,to;public,string,get,target,type,name,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,return,class,target,type,value,get,name,else,return,string,target,type,value
TypedStringValue -> public String getTargetTypeName();1385412762;Return the type to convert to.;public String getTargetTypeName() {_		Object targetTypeValue = this.targetType__		if (targetTypeValue instanceof Class) {_			return ((Class<?>) targetTypeValue).getName()__		}_		else {_			return (String) targetTypeValue__		}_	};return,the,type,to,convert,to;public,string,get,target,type,name,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,return,class,target,type,value,get,name,else,return,string,target,type,value
TypedStringValue -> public String getTargetTypeName();1495868221;Return the type to convert to.;public String getTargetTypeName() {_		Object targetTypeValue = this.targetType__		if (targetTypeValue instanceof Class) {_			return ((Class<?>) targetTypeValue).getName()__		}_		else {_			return (String) targetTypeValue__		}_	};return,the,type,to,convert,to;public,string,get,target,type,name,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,return,class,target,type,value,get,name,else,return,string,target,type,value
TypedStringValue -> public String getTargetTypeName();1496259743;Return the type to convert to.;public String getTargetTypeName() {_		Object targetTypeValue = this.targetType__		if (targetTypeValue instanceof Class) {_			return ((Class<?>) targetTypeValue).getName()__		}_		else {_			return (String) targetTypeValue__		}_	};return,the,type,to,convert,to;public,string,get,target,type,name,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,return,class,target,type,value,get,name,else,return,string,target,type,value
TypedStringValue -> public void setTargetTypeName(String targetTypeName);1328020251;Specify the type to convert to.;public void setTargetTypeName(String targetTypeName) {_		Assert.notNull(targetTypeName, "'targetTypeName' must not be null")__		this.targetType = targetTypeName__	};specify,the,type,to,convert,to;public,void,set,target,type,name,string,target,type,name,assert,not,null,target,type,name,target,type,name,must,not,be,null,this,target,type,target,type,name
TypedStringValue -> public void setTargetTypeName(String targetTypeName);1356735495;Specify the type to convert to.;public void setTargetTypeName(String targetTypeName) {_		Assert.notNull(targetTypeName, "'targetTypeName' must not be null")__		this.targetType = targetTypeName__	};specify,the,type,to,convert,to;public,void,set,target,type,name,string,target,type,name,assert,not,null,target,type,name,target,type,name,must,not,be,null,this,target,type,target,type,name
TypedStringValue -> public void setTargetTypeName(String targetTypeName);1357119239;Specify the type to convert to.;public void setTargetTypeName(String targetTypeName) {_		Assert.notNull(targetTypeName, "'targetTypeName' must not be null")__		this.targetType = targetTypeName__	};specify,the,type,to,convert,to;public,void,set,target,type,name,string,target,type,name,assert,not,null,target,type,name,target,type,name,must,not,be,null,this,target,type,target,type,name
TypedStringValue -> public void setTargetTypeName(String targetTypeName);1368482696;Specify the type to convert to.;public void setTargetTypeName(String targetTypeName) {_		Assert.notNull(targetTypeName, "'targetTypeName' must not be null")__		this.targetType = targetTypeName__	};specify,the,type,to,convert,to;public,void,set,target,type,name,string,target,type,name,assert,not,null,target,type,name,target,type,name,must,not,be,null,this,target,type,target,type,name
TypedStringValue -> public void setTargetTypeName(String targetTypeName);1382905576;Specify the type to convert to.;public void setTargetTypeName(String targetTypeName) {_		Assert.notNull(targetTypeName, "'targetTypeName' must not be null")__		this.targetType = targetTypeName__	};specify,the,type,to,convert,to;public,void,set,target,type,name,string,target,type,name,assert,not,null,target,type,name,target,type,name,must,not,be,null,this,target,type,target,type,name
TypedStringValue -> public void setTargetTypeName(String targetTypeName);1382912267;Specify the type to convert to.;public void setTargetTypeName(String targetTypeName) {_		Assert.notNull(targetTypeName, "'targetTypeName' must not be null")__		this.targetType = targetTypeName__	};specify,the,type,to,convert,to;public,void,set,target,type,name,string,target,type,name,assert,not,null,target,type,name,target,type,name,must,not,be,null,this,target,type,target,type,name
TypedStringValue -> public void setTargetTypeName(String targetTypeName);1385412762;Specify the type to convert to.;public void setTargetTypeName(String targetTypeName) {_		Assert.notNull(targetTypeName, "'targetTypeName' must not be null")__		this.targetType = targetTypeName__	};specify,the,type,to,convert,to;public,void,set,target,type,name,string,target,type,name,assert,not,null,target,type,name,target,type,name,must,not,be,null,this,target,type,target,type,name
TypedStringValue -> public void setTargetTypeName(String targetTypeName);1495868221;Specify the type to convert to.;public void setTargetTypeName(String targetTypeName) {_		Assert.notNull(targetTypeName, "'targetTypeName' must not be null")__		this.targetType = targetTypeName__	};specify,the,type,to,convert,to;public,void,set,target,type,name,string,target,type,name,assert,not,null,target,type,name,target,type,name,must,not,be,null,this,target,type,target,type,name
TypedStringValue -> public void setTargetTypeName(String targetTypeName);1496259743;Specify the type to convert to.;public void setTargetTypeName(String targetTypeName) {_		Assert.notNull(targetTypeName, "'targetTypeName' must not be null")__		this.targetType = targetTypeName__	};specify,the,type,to,convert,to;public,void,set,target,type,name,string,target,type,name,assert,not,null,target,type,name,target,type,name,must,not,be,null,this,target,type,target,type,name
TypedStringValue -> public void setTargetTypeName(String targetTypeName);1496837955;Specify the type to convert to.;public void setTargetTypeName(String targetTypeName) {_		Assert.notNull(targetTypeName, "'targetTypeName' must not be null")__		this.targetType = targetTypeName__	};specify,the,type,to,convert,to;public,void,set,target,type,name,string,target,type,name,assert,not,null,target,type,name,target,type,name,must,not,be,null,this,target,type,target,type,name
TypedStringValue -> public void setTargetTypeName(String targetTypeName);1498780456;Specify the type to convert to.;public void setTargetTypeName(String targetTypeName) {_		Assert.notNull(targetTypeName, "'targetTypeName' must not be null")__		this.targetType = targetTypeName__	};specify,the,type,to,convert,to;public,void,set,target,type,name,string,target,type,name,assert,not,null,target,type,name,target,type,name,must,not,be,null,this,target,type,target,type,name
TypedStringValue -> public String getSpecifiedTypeName();1328020251;Return the type name as actually specified for this particular value, if any.;public String getSpecifiedTypeName() {_		return this.specifiedTypeName__	};return,the,type,name,as,actually,specified,for,this,particular,value,if,any;public,string,get,specified,type,name,return,this,specified,type,name
TypedStringValue -> public String getSpecifiedTypeName();1356735495;Return the type name as actually specified for this particular value, if any.;public String getSpecifiedTypeName() {_		return this.specifiedTypeName__	};return,the,type,name,as,actually,specified,for,this,particular,value,if,any;public,string,get,specified,type,name,return,this,specified,type,name
TypedStringValue -> public String getSpecifiedTypeName();1357119239;Return the type name as actually specified for this particular value, if any.;public String getSpecifiedTypeName() {_		return this.specifiedTypeName__	};return,the,type,name,as,actually,specified,for,this,particular,value,if,any;public,string,get,specified,type,name,return,this,specified,type,name
TypedStringValue -> public String getSpecifiedTypeName();1368482696;Return the type name as actually specified for this particular value, if any.;public String getSpecifiedTypeName() {_		return this.specifiedTypeName__	};return,the,type,name,as,actually,specified,for,this,particular,value,if,any;public,string,get,specified,type,name,return,this,specified,type,name
TypedStringValue -> public String getSpecifiedTypeName();1382905576;Return the type name as actually specified for this particular value, if any.;public String getSpecifiedTypeName() {_		return this.specifiedTypeName__	};return,the,type,name,as,actually,specified,for,this,particular,value,if,any;public,string,get,specified,type,name,return,this,specified,type,name
TypedStringValue -> public String getSpecifiedTypeName();1382912267;Return the type name as actually specified for this particular value, if any.;public String getSpecifiedTypeName() {_		return this.specifiedTypeName__	};return,the,type,name,as,actually,specified,for,this,particular,value,if,any;public,string,get,specified,type,name,return,this,specified,type,name
TypedStringValue -> public String getSpecifiedTypeName();1385412762;Return the type name as actually specified for this particular value, if any.;public String getSpecifiedTypeName() {_		return this.specifiedTypeName__	};return,the,type,name,as,actually,specified,for,this,particular,value,if,any;public,string,get,specified,type,name,return,this,specified,type,name
TypedStringValue -> public TypedStringValue(String value);1328020251;Create a new {@link TypedStringValue} for the given String value._@param value the String value;public TypedStringValue(String value) {_		setValue(value)__	};create,a,new,link,typed,string,value,for,the,given,string,value,param,value,the,string,value;public,typed,string,value,string,value,set,value,value
TypedStringValue -> public TypedStringValue(String value);1356735495;Create a new {@link TypedStringValue} for the given String value._@param value the String value;public TypedStringValue(String value) {_		setValue(value)__	};create,a,new,link,typed,string,value,for,the,given,string,value,param,value,the,string,value;public,typed,string,value,string,value,set,value,value
TypedStringValue -> public TypedStringValue(String value);1357119239;Create a new {@link TypedStringValue} for the given String value._@param value the String value;public TypedStringValue(String value) {_		setValue(value)__	};create,a,new,link,typed,string,value,for,the,given,string,value,param,value,the,string,value;public,typed,string,value,string,value,set,value,value
TypedStringValue -> public TypedStringValue(String value);1368482696;Create a new {@link TypedStringValue} for the given String value._@param value the String value;public TypedStringValue(String value) {_		setValue(value)__	};create,a,new,link,typed,string,value,for,the,given,string,value,param,value,the,string,value;public,typed,string,value,string,value,set,value,value
TypedStringValue -> public TypedStringValue(String value);1382905576;Create a new {@link TypedStringValue} for the given String value._@param value the String value;public TypedStringValue(String value) {_		setValue(value)__	};create,a,new,link,typed,string,value,for,the,given,string,value,param,value,the,string,value;public,typed,string,value,string,value,set,value,value
TypedStringValue -> public TypedStringValue(String value);1382912267;Create a new {@link TypedStringValue} for the given String value._@param value the String value;public TypedStringValue(String value) {_		setValue(value)__	};create,a,new,link,typed,string,value,for,the,given,string,value,param,value,the,string,value;public,typed,string,value,string,value,set,value,value
TypedStringValue -> public TypedStringValue(String value);1385412762;Create a new {@link TypedStringValue} for the given String value._@param value the String value;public TypedStringValue(String value) {_		setValue(value)__	};create,a,new,link,typed,string,value,for,the,given,string,value,param,value,the,string,value;public,typed,string,value,string,value,set,value,value
TypedStringValue -> public TypedStringValue(String value);1495868221;Create a new {@link TypedStringValue} for the given String value._@param value the String value;public TypedStringValue(String value) {_		setValue(value)__	};create,a,new,link,typed,string,value,for,the,given,string,value,param,value,the,string,value;public,typed,string,value,string,value,set,value,value
TypedStringValue -> public void setTargetType(Class<?> targetType);1382912267;Set the type to convert to._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors._@see PropertyPlaceholderConfigurer;public void setTargetType(Class<?> targetType) {_		Assert.notNull(targetType, "'targetType' must not be null")__		this.targetType = targetType__	};set,the,type,to,convert,to,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors,see,property,placeholder,configurer;public,void,set,target,type,class,target,type,assert,not,null,target,type,target,type,must,not,be,null,this,target,type,target,type
TypedStringValue -> public void setTargetType(Class<?> targetType);1385412762;Set the type to convert to._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors._@see PropertyPlaceholderConfigurer;public void setTargetType(Class<?> targetType) {_		Assert.notNull(targetType, "'targetType' must not be null")__		this.targetType = targetType__	};set,the,type,to,convert,to,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors,see,property,placeholder,configurer;public,void,set,target,type,class,target,type,assert,not,null,target,type,target,type,must,not,be,null,this,target,type,target,type
TypedStringValue -> public void setTargetType(Class<?> targetType);1495868221;Set the type to convert to._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors._@see PropertyPlaceholderConfigurer;public void setTargetType(Class<?> targetType) {_		Assert.notNull(targetType, "'targetType' must not be null")__		this.targetType = targetType__	};set,the,type,to,convert,to,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors,see,property,placeholder,configurer;public,void,set,target,type,class,target,type,assert,not,null,target,type,target,type,must,not,be,null,this,target,type,target,type
TypedStringValue -> public void setTargetType(Class<?> targetType);1496259743;Set the type to convert to._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors._@see PropertyPlaceholderConfigurer;public void setTargetType(Class<?> targetType) {_		Assert.notNull(targetType, "'targetType' must not be null")__		this.targetType = targetType__	};set,the,type,to,convert,to,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors,see,property,placeholder,configurer;public,void,set,target,type,class,target,type,assert,not,null,target,type,target,type,must,not,be,null,this,target,type,target,type
TypedStringValue -> public void setTargetType(Class<?> targetType);1496837955;Set the type to convert to._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors._@see PropertyPlaceholderConfigurer;public void setTargetType(Class<?> targetType) {_		Assert.notNull(targetType, "'targetType' must not be null")__		this.targetType = targetType__	};set,the,type,to,convert,to,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors,see,property,placeholder,configurer;public,void,set,target,type,class,target,type,assert,not,null,target,type,target,type,must,not,be,null,this,target,type,target,type
TypedStringValue -> public void setTargetType(Class<?> targetType);1498780456;Set the type to convert to._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors._@see PropertyPlaceholderConfigurer;public void setTargetType(Class<?> targetType) {_		Assert.notNull(targetType, "'targetType' must not be null")__		this.targetType = targetType__	};set,the,type,to,convert,to,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors,see,property,placeholder,configurer;public,void,set,target,type,class,target,type,assert,not,null,target,type,target,type,must,not,be,null,this,target,type,target,type
TypedStringValue -> public void setTargetType(Class<?> targetType);1500448076;Set the type to convert to._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors._@see PropertyPlaceholderConfigurer;public void setTargetType(Class<?> targetType) {_		Assert.notNull(targetType, "'targetType' must not be null")__		this.targetType = targetType__	};set,the,type,to,convert,to,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors,see,property,placeholder,configurer;public,void,set,target,type,class,target,type,assert,not,null,target,type,target,type,must,not,be,null,this,target,type,target,type
TypedStringValue -> public void setTargetType(Class<?> targetType);1549554785;Set the type to convert to._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors.;public void setTargetType(Class<?> targetType) {_		Assert.notNull(targetType, "'targetType' must not be null")__		this.targetType = targetType__	};set,the,type,to,convert,to,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors;public,void,set,target,type,class,target,type,assert,not,null,target,type,target,type,must,not,be,null,this,target,type,target,type
TypedStringValue -> @Nullable 	public String getSpecifiedTypeName();1495868221;Return the type name as actually specified for this particular value, if any.;@Nullable_	public String getSpecifiedTypeName() {_		return this.specifiedTypeName__	};return,the,type,name,as,actually,specified,for,this,particular,value,if,any;nullable,public,string,get,specified,type,name,return,this,specified,type,name
TypedStringValue -> @Nullable 	public String getSpecifiedTypeName();1496259743;Return the type name as actually specified for this particular value, if any.;@Nullable_	public String getSpecifiedTypeName() {_		return this.specifiedTypeName__	};return,the,type,name,as,actually,specified,for,this,particular,value,if,any;nullable,public,string,get,specified,type,name,return,this,specified,type,name
TypedStringValue -> @Nullable 	public String getSpecifiedTypeName();1496837955;Return the type name as actually specified for this particular value, if any.;@Nullable_	public String getSpecifiedTypeName() {_		return this.specifiedTypeName__	};return,the,type,name,as,actually,specified,for,this,particular,value,if,any;nullable,public,string,get,specified,type,name,return,this,specified,type,name
TypedStringValue -> @Nullable 	public String getSpecifiedTypeName();1498780456;Return the type name as actually specified for this particular value, if any.;@Nullable_	public String getSpecifiedTypeName() {_		return this.specifiedTypeName__	};return,the,type,name,as,actually,specified,for,this,particular,value,if,any;nullable,public,string,get,specified,type,name,return,this,specified,type,name
TypedStringValue -> @Nullable 	public String getSpecifiedTypeName();1500448076;Return the type name as actually specified for this particular value, if any.;@Nullable_	public String getSpecifiedTypeName() {_		return this.specifiedTypeName__	};return,the,type,name,as,actually,specified,for,this,particular,value,if,any;nullable,public,string,get,specified,type,name,return,this,specified,type,name
TypedStringValue -> @Nullable 	public String getSpecifiedTypeName();1549554785;Return the type name as actually specified for this particular value, if any.;@Nullable_	public String getSpecifiedTypeName() {_		return this.specifiedTypeName__	};return,the,type,name,as,actually,specified,for,this,particular,value,if,any;nullable,public,string,get,specified,type,name,return,this,specified,type,name
TypedStringValue -> public String getValue();1328020251;Return the String value.;public String getValue() {_		return this.value__	};return,the,string,value;public,string,get,value,return,this,value
TypedStringValue -> public String getValue();1356735495;Return the String value.;public String getValue() {_		return this.value__	};return,the,string,value;public,string,get,value,return,this,value
TypedStringValue -> public String getValue();1357119239;Return the String value.;public String getValue() {_		return this.value__	};return,the,string,value;public,string,get,value,return,this,value
TypedStringValue -> public String getValue();1368482696;Return the String value.;public String getValue() {_		return this.value__	};return,the,string,value;public,string,get,value,return,this,value
TypedStringValue -> public String getValue();1382905576;Return the String value.;public String getValue() {_		return this.value__	};return,the,string,value;public,string,get,value,return,this,value
TypedStringValue -> public String getValue();1382912267;Return the String value.;public String getValue() {_		return this.value__	};return,the,string,value;public,string,get,value,return,this,value
TypedStringValue -> public String getValue();1385412762;Return the String value.;public String getValue() {_		return this.value__	};return,the,string,value;public,string,get,value,return,this,value
TypedStringValue -> public String getValue();1495868221;Return the String value.;public String getValue() {_		return this.value__	};return,the,string,value;public,string,get,value,return,this,value
TypedStringValue -> public TypedStringValue(@Nullable String value);1496259743;Create a new {@link TypedStringValue} for the given String value._@param value the String value;public TypedStringValue(@Nullable String value) {_		setValue(value)__	};create,a,new,link,typed,string,value,for,the,given,string,value,param,value,the,string,value;public,typed,string,value,nullable,string,value,set,value,value
TypedStringValue -> public TypedStringValue(@Nullable String value);1496837955;Create a new {@link TypedStringValue} for the given String value._@param value the String value;public TypedStringValue(@Nullable String value) {_		setValue(value)__	};create,a,new,link,typed,string,value,for,the,given,string,value,param,value,the,string,value;public,typed,string,value,nullable,string,value,set,value,value
TypedStringValue -> public TypedStringValue(@Nullable String value);1498780456;Create a new {@link TypedStringValue} for the given String value._@param value the String value;public TypedStringValue(@Nullable String value) {_		setValue(value)__	};create,a,new,link,typed,string,value,for,the,given,string,value,param,value,the,string,value;public,typed,string,value,nullable,string,value,set,value,value
TypedStringValue -> public TypedStringValue(@Nullable String value);1500448076;Create a new {@link TypedStringValue} for the given String value._@param value the String value;public TypedStringValue(@Nullable String value) {_		setValue(value)__	};create,a,new,link,typed,string,value,for,the,given,string,value,param,value,the,string,value;public,typed,string,value,nullable,string,value,set,value,value
TypedStringValue -> public TypedStringValue(@Nullable String value);1549554785;Create a new {@link TypedStringValue} for the given String value._@param value the String value;public TypedStringValue(@Nullable String value) {_		setValue(value)__	};create,a,new,link,typed,string,value,for,the,given,string,value,param,value,the,string,value;public,typed,string,value,nullable,string,value,set,value,value
TypedStringValue -> public TypedStringValue(String value, Class<?> targetType);1382912267;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetType the type to convert to;public TypedStringValue(String value, Class<?> targetType) {_		setValue(value)__		setTargetType(targetType)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,the,type,to,convert,to;public,typed,string,value,string,value,class,target,type,set,value,value,set,target,type,target,type
TypedStringValue -> public TypedStringValue(String value, Class<?> targetType);1385412762;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetType the type to convert to;public TypedStringValue(String value, Class<?> targetType) {_		setValue(value)__		setTargetType(targetType)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,the,type,to,convert,to;public,typed,string,value,string,value,class,target,type,set,value,value,set,target,type,target,type
TypedStringValue -> public TypedStringValue(String value, Class<?> targetType);1495868221;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetType the type to convert to;public TypedStringValue(String value, Class<?> targetType) {_		setValue(value)__		setTargetType(targetType)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,the,type,to,convert,to;public,typed,string,value,string,value,class,target,type,set,value,value,set,target,type,target,type
TypedStringValue -> public void setValue(@Nullable String value);1496259743;Set the String value._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors._@see PropertyPlaceholderConfigurer;public void setValue(@Nullable String value) {_		this.value = value__	};set,the,string,value,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors,see,property,placeholder,configurer;public,void,set,value,nullable,string,value,this,value,value
TypedStringValue -> public void setValue(@Nullable String value);1496837955;Set the String value._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors._@see PropertyPlaceholderConfigurer;public void setValue(@Nullable String value) {_		this.value = value__	};set,the,string,value,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors,see,property,placeholder,configurer;public,void,set,value,nullable,string,value,this,value,value
TypedStringValue -> public void setValue(@Nullable String value);1498780456;Set the String value._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors._@see PropertyPlaceholderConfigurer;public void setValue(@Nullable String value) {_		this.value = value__	};set,the,string,value,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors,see,property,placeholder,configurer;public,void,set,value,nullable,string,value,this,value,value
TypedStringValue -> public void setValue(@Nullable String value);1500448076;Set the String value._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors._@see PropertyPlaceholderConfigurer;public void setValue(@Nullable String value) {_		this.value = value__	};set,the,string,value,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors,see,property,placeholder,configurer;public,void,set,value,nullable,string,value,this,value,value
TypedStringValue -> public void setValue(@Nullable String value);1549554785;Set the String value._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors.;public void setValue(@Nullable String value) {_		this.value = value__	};set,the,string,value,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors;public,void,set,value,nullable,string,value,this,value,value
TypedStringValue -> public TypedStringValue(String value, Class targetType);1328020251;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetType the type to convert to;public TypedStringValue(String value, Class targetType) {_		setValue(value)__		setTargetType(targetType)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,the,type,to,convert,to;public,typed,string,value,string,value,class,target,type,set,value,value,set,target,type,target,type
TypedStringValue -> public TypedStringValue(String value, Class targetType);1356735495;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetType the type to convert to;public TypedStringValue(String value, Class targetType) {_		setValue(value)__		setTargetType(targetType)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,the,type,to,convert,to;public,typed,string,value,string,value,class,target,type,set,value,value,set,target,type,target,type
TypedStringValue -> public TypedStringValue(String value, Class targetType);1357119239;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetType the type to convert to;public TypedStringValue(String value, Class targetType) {_		setValue(value)__		setTargetType(targetType)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,the,type,to,convert,to;public,typed,string,value,string,value,class,target,type,set,value,value,set,target,type,target,type
TypedStringValue -> public TypedStringValue(String value, Class targetType);1368482696;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetType the type to convert to;public TypedStringValue(String value, Class targetType) {_		setValue(value)__		setTargetType(targetType)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,the,type,to,convert,to;public,typed,string,value,string,value,class,target,type,set,value,value,set,target,type,target,type
TypedStringValue -> public TypedStringValue(String value, Class targetType);1382905576;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetType the type to convert to;public TypedStringValue(String value, Class targetType) {_		setValue(value)__		setTargetType(targetType)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,the,type,to,convert,to;public,typed,string,value,string,value,class,target,type,set,value,value,set,target,type,target,type
TypedStringValue -> public Class<?> getTargetType();1382905576;Return the type to convert to.;public Class<?> getTargetType() {_		Object targetTypeValue = this.targetType__		if (!(targetTypeValue instanceof Class)) {_			throw new IllegalStateException("Typed String value does not carry a resolved target type")__		}_		return (Class) targetTypeValue__	};return,the,type,to,convert,to;public,class,get,target,type,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,throw,new,illegal,state,exception,typed,string,value,does,not,carry,a,resolved,target,type,return,class,target,type,value
TypedStringValue -> public Class<?> getTargetType();1382912267;Return the type to convert to.;public Class<?> getTargetType() {_		Object targetTypeValue = this.targetType__		if (!(targetTypeValue instanceof Class)) {_			throw new IllegalStateException("Typed String value does not carry a resolved target type")__		}_		return (Class) targetTypeValue__	};return,the,type,to,convert,to;public,class,get,target,type,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,throw,new,illegal,state,exception,typed,string,value,does,not,carry,a,resolved,target,type,return,class,target,type,value
TypedStringValue -> public Class<?> getTargetType();1385412762;Return the type to convert to.;public Class<?> getTargetType() {_		Object targetTypeValue = this.targetType__		if (!(targetTypeValue instanceof Class)) {_			throw new IllegalStateException("Typed String value does not carry a resolved target type")__		}_		return (Class<?>) targetTypeValue__	};return,the,type,to,convert,to;public,class,get,target,type,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,throw,new,illegal,state,exception,typed,string,value,does,not,carry,a,resolved,target,type,return,class,target,type,value
TypedStringValue -> public Class<?> getTargetType();1495868221;Return the type to convert to.;public Class<?> getTargetType() {_		Object targetTypeValue = this.targetType__		if (!(targetTypeValue instanceof Class)) {_			throw new IllegalStateException("Typed String value does not carry a resolved target type")__		}_		return (Class<?>) targetTypeValue__	};return,the,type,to,convert,to;public,class,get,target,type,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,throw,new,illegal,state,exception,typed,string,value,does,not,carry,a,resolved,target,type,return,class,target,type,value
TypedStringValue -> public Class<?> getTargetType();1496259743;Return the type to convert to.;public Class<?> getTargetType() {_		Object targetTypeValue = this.targetType__		if (!(targetTypeValue instanceof Class)) {_			throw new IllegalStateException("Typed String value does not carry a resolved target type")__		}_		return (Class<?>) targetTypeValue__	};return,the,type,to,convert,to;public,class,get,target,type,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,throw,new,illegal,state,exception,typed,string,value,does,not,carry,a,resolved,target,type,return,class,target,type,value
TypedStringValue -> public Class<?> getTargetType();1496837955;Return the type to convert to.;public Class<?> getTargetType() {_		Object targetTypeValue = this.targetType__		if (!(targetTypeValue instanceof Class)) {_			throw new IllegalStateException("Typed String value does not carry a resolved target type")__		}_		return (Class<?>) targetTypeValue__	};return,the,type,to,convert,to;public,class,get,target,type,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,throw,new,illegal,state,exception,typed,string,value,does,not,carry,a,resolved,target,type,return,class,target,type,value
TypedStringValue -> public Class<?> getTargetType();1498780456;Return the type to convert to.;public Class<?> getTargetType() {_		Object targetTypeValue = this.targetType__		if (!(targetTypeValue instanceof Class)) {_			throw new IllegalStateException("Typed String value does not carry a resolved target type")__		}_		return (Class<?>) targetTypeValue__	};return,the,type,to,convert,to;public,class,get,target,type,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,throw,new,illegal,state,exception,typed,string,value,does,not,carry,a,resolved,target,type,return,class,target,type,value
TypedStringValue -> public Class<?> getTargetType();1500448076;Return the type to convert to.;public Class<?> getTargetType() {_		Object targetTypeValue = this.targetType__		if (!(targetTypeValue instanceof Class)) {_			throw new IllegalStateException("Typed String value does not carry a resolved target type")__		}_		return (Class<?>) targetTypeValue__	};return,the,type,to,convert,to;public,class,get,target,type,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,throw,new,illegal,state,exception,typed,string,value,does,not,carry,a,resolved,target,type,return,class,target,type,value
TypedStringValue -> public Class<?> getTargetType();1549554785;Return the type to convert to.;public Class<?> getTargetType() {_		Object targetTypeValue = this.targetType__		if (!(targetTypeValue instanceof Class)) {_			throw new IllegalStateException("Typed String value does not carry a resolved target type")__		}_		return (Class<?>) targetTypeValue__	};return,the,type,to,convert,to;public,class,get,target,type,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,throw,new,illegal,state,exception,typed,string,value,does,not,carry,a,resolved,target,type,return,class,target,type,value
TypedStringValue -> public void setValue(String value);1328020251;Set the String value._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors._@see PropertyPlaceholderConfigurer;public void setValue(String value) {_		this.value = value__	};set,the,string,value,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors,see,property,placeholder,configurer;public,void,set,value,string,value,this,value,value
TypedStringValue -> public void setValue(String value);1356735495;Set the String value._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors._@see PropertyPlaceholderConfigurer;public void setValue(String value) {_		this.value = value__	};set,the,string,value,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors,see,property,placeholder,configurer;public,void,set,value,string,value,this,value,value
TypedStringValue -> public void setValue(String value);1357119239;Set the String value._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors._@see PropertyPlaceholderConfigurer;public void setValue(String value) {_		this.value = value__	};set,the,string,value,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors,see,property,placeholder,configurer;public,void,set,value,string,value,this,value,value
TypedStringValue -> public void setValue(String value);1368482696;Set the String value._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors._@see PropertyPlaceholderConfigurer;public void setValue(String value) {_		this.value = value__	};set,the,string,value,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors,see,property,placeholder,configurer;public,void,set,value,string,value,this,value,value
TypedStringValue -> public void setValue(String value);1382905576;Set the String value._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors._@see PropertyPlaceholderConfigurer;public void setValue(String value) {_		this.value = value__	};set,the,string,value,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors,see,property,placeholder,configurer;public,void,set,value,string,value,this,value,value
TypedStringValue -> public void setValue(String value);1382912267;Set the String value._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors._@see PropertyPlaceholderConfigurer;public void setValue(String value) {_		this.value = value__	};set,the,string,value,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors,see,property,placeholder,configurer;public,void,set,value,string,value,this,value,value
TypedStringValue -> public void setValue(String value);1385412762;Set the String value._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors._@see PropertyPlaceholderConfigurer;public void setValue(String value) {_		this.value = value__	};set,the,string,value,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors,see,property,placeholder,configurer;public,void,set,value,string,value,this,value,value
TypedStringValue -> public void setValue(String value);1495868221;Set the String value._<p>Only necessary for manipulating a registered value,_for example in BeanFactoryPostProcessors._@see PropertyPlaceholderConfigurer;public void setValue(String value) {_		this.value = value__	};set,the,string,value,p,only,necessary,for,manipulating,a,registered,value,for,example,in,bean,factory,post,processors,see,property,placeholder,configurer;public,void,set,value,string,value,this,value,value
TypedStringValue -> public boolean hasTargetType();1328020251;Return whether this typed String value carries a target type .;public boolean hasTargetType() {_		return (this.targetType instanceof Class)__	};return,whether,this,typed,string,value,carries,a,target,type;public,boolean,has,target,type,return,this,target,type,instanceof,class
TypedStringValue -> public boolean hasTargetType();1356735495;Return whether this typed String value carries a target type .;public boolean hasTargetType() {_		return (this.targetType instanceof Class)__	};return,whether,this,typed,string,value,carries,a,target,type;public,boolean,has,target,type,return,this,target,type,instanceof,class
TypedStringValue -> public boolean hasTargetType();1357119239;Return whether this typed String value carries a target type .;public boolean hasTargetType() {_		return (this.targetType instanceof Class)__	};return,whether,this,typed,string,value,carries,a,target,type;public,boolean,has,target,type,return,this,target,type,instanceof,class
TypedStringValue -> public boolean hasTargetType();1368482696;Return whether this typed String value carries a target type .;public boolean hasTargetType() {_		return (this.targetType instanceof Class)__	};return,whether,this,typed,string,value,carries,a,target,type;public,boolean,has,target,type,return,this,target,type,instanceof,class
TypedStringValue -> public boolean hasTargetType();1382905576;Return whether this typed String value carries a target type .;public boolean hasTargetType() {_		return (this.targetType instanceof Class)__	};return,whether,this,typed,string,value,carries,a,target,type;public,boolean,has,target,type,return,this,target,type,instanceof,class
TypedStringValue -> public boolean hasTargetType();1382912267;Return whether this typed String value carries a target type .;public boolean hasTargetType() {_		return (this.targetType instanceof Class)__	};return,whether,this,typed,string,value,carries,a,target,type;public,boolean,has,target,type,return,this,target,type,instanceof,class
TypedStringValue -> public boolean hasTargetType();1385412762;Return whether this typed String value carries a target type .;public boolean hasTargetType() {_		return (this.targetType instanceof Class)__	};return,whether,this,typed,string,value,carries,a,target,type;public,boolean,has,target,type,return,this,target,type,instanceof,class
TypedStringValue -> public boolean hasTargetType();1495868221;Return whether this typed String value carries a target type .;public boolean hasTargetType() {_		return (this.targetType instanceof Class)__	};return,whether,this,typed,string,value,carries,a,target,type;public,boolean,has,target,type,return,this,target,type,instanceof,class
TypedStringValue -> public boolean hasTargetType();1496259743;Return whether this typed String value carries a target type .;public boolean hasTargetType() {_		return (this.targetType instanceof Class)__	};return,whether,this,typed,string,value,carries,a,target,type;public,boolean,has,target,type,return,this,target,type,instanceof,class
TypedStringValue -> public boolean hasTargetType();1496837955;Return whether this typed String value carries a target type .;public boolean hasTargetType() {_		return (this.targetType instanceof Class)__	};return,whether,this,typed,string,value,carries,a,target,type;public,boolean,has,target,type,return,this,target,type,instanceof,class
TypedStringValue -> public boolean hasTargetType();1498780456;Return whether this typed String value carries a target type .;public boolean hasTargetType() {_		return (this.targetType instanceof Class)__	};return,whether,this,typed,string,value,carries,a,target,type;public,boolean,has,target,type,return,this,target,type,instanceof,class
TypedStringValue -> public boolean hasTargetType();1500448076;Return whether this typed String value carries a target type .;public boolean hasTargetType() {_		return (this.targetType instanceof Class)__	};return,whether,this,typed,string,value,carries,a,target,type;public,boolean,has,target,type,return,this,target,type,instanceof,class
TypedStringValue -> public boolean hasTargetType();1549554785;Return whether this typed String value carries a target type .;public boolean hasTargetType() {_		return (this.targetType instanceof Class)__	};return,whether,this,typed,string,value,carries,a,target,type;public,boolean,has,target,type,return,this,target,type,instanceof,class
TypedStringValue -> public void setSource(@Nullable Object source);1496837955;Set the configuration source {@code Object} for this metadata element._<p>The exact type of the object will depend on the configuration mechanism used.;public void setSource(@Nullable Object source) {_		this.source = source__	};set,the,configuration,source,code,object,for,this,metadata,element,p,the,exact,type,of,the,object,will,depend,on,the,configuration,mechanism,used;public,void,set,source,nullable,object,source,this,source,source
TypedStringValue -> public void setSource(@Nullable Object source);1498780456;Set the configuration source {@code Object} for this metadata element._<p>The exact type of the object will depend on the configuration mechanism used.;public void setSource(@Nullable Object source) {_		this.source = source__	};set,the,configuration,source,code,object,for,this,metadata,element,p,the,exact,type,of,the,object,will,depend,on,the,configuration,mechanism,used;public,void,set,source,nullable,object,source,this,source,source
TypedStringValue -> public void setSource(@Nullable Object source);1500448076;Set the configuration source {@code Object} for this metadata element._<p>The exact type of the object will depend on the configuration mechanism used.;public void setSource(@Nullable Object source) {_		this.source = source__	};set,the,configuration,source,code,object,for,this,metadata,element,p,the,exact,type,of,the,object,will,depend,on,the,configuration,mechanism,used;public,void,set,source,nullable,object,source,this,source,source
TypedStringValue -> public void setSource(@Nullable Object source);1549554785;Set the configuration source {@code Object} for this metadata element._<p>The exact type of the object will depend on the configuration mechanism used.;public void setSource(@Nullable Object source) {_		this.source = source__	};set,the,configuration,source,code,object,for,this,metadata,element,p,the,exact,type,of,the,object,will,depend,on,the,configuration,mechanism,used;public,void,set,source,nullable,object,source,this,source,source
TypedStringValue -> public TypedStringValue(@Nullable String value, Class<?> targetType);1496259743;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetType the type to convert to;public TypedStringValue(@Nullable String value, Class<?> targetType) {_		setValue(value)__		setTargetType(targetType)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,the,type,to,convert,to;public,typed,string,value,nullable,string,value,class,target,type,set,value,value,set,target,type,target,type
TypedStringValue -> public TypedStringValue(@Nullable String value, Class<?> targetType);1496837955;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetType the type to convert to;public TypedStringValue(@Nullable String value, Class<?> targetType) {_		setValue(value)__		setTargetType(targetType)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,the,type,to,convert,to;public,typed,string,value,nullable,string,value,class,target,type,set,value,value,set,target,type,target,type
TypedStringValue -> public TypedStringValue(@Nullable String value, Class<?> targetType);1498780456;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetType the type to convert to;public TypedStringValue(@Nullable String value, Class<?> targetType) {_		setValue(value)__		setTargetType(targetType)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,the,type,to,convert,to;public,typed,string,value,nullable,string,value,class,target,type,set,value,value,set,target,type,target,type
TypedStringValue -> public TypedStringValue(@Nullable String value, Class<?> targetType);1500448076;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetType the type to convert to;public TypedStringValue(@Nullable String value, Class<?> targetType) {_		setValue(value)__		setTargetType(targetType)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,the,type,to,convert,to;public,typed,string,value,nullable,string,value,class,target,type,set,value,value,set,target,type,target,type
TypedStringValue -> public TypedStringValue(@Nullable String value, Class<?> targetType);1549554785;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetType the type to convert to;public TypedStringValue(@Nullable String value, Class<?> targetType) {_		setValue(value)__		setTargetType(targetType)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,the,type,to,convert,to;public,typed,string,value,nullable,string,value,class,target,type,set,value,value,set,target,type,target,type
TypedStringValue -> public TypedStringValue(String value, String targetTypeName);1328020251;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetTypeName the type to convert to;public TypedStringValue(String value, String targetTypeName) {_		setValue(value)__		setTargetTypeName(targetTypeName)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,name,the,type,to,convert,to;public,typed,string,value,string,value,string,target,type,name,set,value,value,set,target,type,name,target,type,name
TypedStringValue -> public TypedStringValue(String value, String targetTypeName);1356735495;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetTypeName the type to convert to;public TypedStringValue(String value, String targetTypeName) {_		setValue(value)__		setTargetTypeName(targetTypeName)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,name,the,type,to,convert,to;public,typed,string,value,string,value,string,target,type,name,set,value,value,set,target,type,name,target,type,name
TypedStringValue -> public TypedStringValue(String value, String targetTypeName);1357119239;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetTypeName the type to convert to;public TypedStringValue(String value, String targetTypeName) {_		setValue(value)__		setTargetTypeName(targetTypeName)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,name,the,type,to,convert,to;public,typed,string,value,string,value,string,target,type,name,set,value,value,set,target,type,name,target,type,name
TypedStringValue -> public TypedStringValue(String value, String targetTypeName);1368482696;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetTypeName the type to convert to;public TypedStringValue(String value, String targetTypeName) {_		setValue(value)__		setTargetTypeName(targetTypeName)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,name,the,type,to,convert,to;public,typed,string,value,string,value,string,target,type,name,set,value,value,set,target,type,name,target,type,name
TypedStringValue -> public TypedStringValue(String value, String targetTypeName);1382905576;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetTypeName the type to convert to;public TypedStringValue(String value, String targetTypeName) {_		setValue(value)__		setTargetTypeName(targetTypeName)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,name,the,type,to,convert,to;public,typed,string,value,string,value,string,target,type,name,set,value,value,set,target,type,name,target,type,name
TypedStringValue -> public TypedStringValue(String value, String targetTypeName);1382912267;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetTypeName the type to convert to;public TypedStringValue(String value, String targetTypeName) {_		setValue(value)__		setTargetTypeName(targetTypeName)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,name,the,type,to,convert,to;public,typed,string,value,string,value,string,target,type,name,set,value,value,set,target,type,name,target,type,name
TypedStringValue -> public TypedStringValue(String value, String targetTypeName);1385412762;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetTypeName the type to convert to;public TypedStringValue(String value, String targetTypeName) {_		setValue(value)__		setTargetTypeName(targetTypeName)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,name,the,type,to,convert,to;public,typed,string,value,string,value,string,target,type,name,set,value,value,set,target,type,name,target,type,name
TypedStringValue -> public TypedStringValue(String value, String targetTypeName);1495868221;Create a new {@link TypedStringValue} for the given String value_and target type._@param value the String value_@param targetTypeName the type to convert to;public TypedStringValue(String value, String targetTypeName) {_		setValue(value)__		setTargetTypeName(targetTypeName)__	};create,a,new,link,typed,string,value,for,the,given,string,value,and,target,type,param,value,the,string,value,param,target,type,name,the,type,to,convert,to;public,typed,string,value,string,value,string,target,type,name,set,value,value,set,target,type,name,target,type,name
TypedStringValue -> @Nullable 	public String getTargetTypeName();1496837955;Return the type to convert to.;@Nullable_	public String getTargetTypeName() {_		Object targetTypeValue = this.targetType__		if (targetTypeValue instanceof Class) {_			return ((Class<?>) targetTypeValue).getName()__		}_		else {_			return (String) targetTypeValue__		}_	};return,the,type,to,convert,to;nullable,public,string,get,target,type,name,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,return,class,target,type,value,get,name,else,return,string,target,type,value
TypedStringValue -> @Nullable 	public String getTargetTypeName();1498780456;Return the type to convert to.;@Nullable_	public String getTargetTypeName() {_		Object targetTypeValue = this.targetType__		if (targetTypeValue instanceof Class) {_			return ((Class<?>) targetTypeValue).getName()__		}_		else {_			return (String) targetTypeValue__		}_	};return,the,type,to,convert,to;nullable,public,string,get,target,type,name,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,return,class,target,type,value,get,name,else,return,string,target,type,value
TypedStringValue -> @Nullable 	public String getTargetTypeName();1500448076;Return the type to convert to.;@Nullable_	public String getTargetTypeName() {_		Object targetTypeValue = this.targetType__		if (targetTypeValue instanceof Class) {_			return ((Class<?>) targetTypeValue).getName()__		}_		else {_			return (String) targetTypeValue__		}_	};return,the,type,to,convert,to;nullable,public,string,get,target,type,name,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,return,class,target,type,value,get,name,else,return,string,target,type,value
TypedStringValue -> @Nullable 	public String getTargetTypeName();1549554785;Return the type to convert to.;@Nullable_	public String getTargetTypeName() {_		Object targetTypeValue = this.targetType__		if (targetTypeValue instanceof Class) {_			return ((Class<?>) targetTypeValue).getName()__		}_		else {_			return (String) targetTypeValue__		}_	};return,the,type,to,convert,to;nullable,public,string,get,target,type,name,object,target,type,value,this,target,type,if,target,type,value,instanceof,class,return,class,target,type,value,get,name,else,return,string,target,type,value
