commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * Specify a Spring 3.0 ConversionService to use for converting  * property values, as an alternative to JavaBeans PropertyEditors.  */ ;/**  * Specify a Spring 3.0 ConversionService to use for converting  * property values, as an alternative to JavaBeans PropertyEditors.  */ void setConversionService(@Nullable ConversionService conversionService).
true;;0;2;/**  * Return the associated ConversionService, if any.  */ ;/**  * Return the associated ConversionService, if any.  */ @Nullable ConversionService getConversionService().
true;;1;1;/**  * Set whether to extract the old property value when applying a  * property editor to a new value for a property.  */ ;/**  * Set whether to extract the old property value when applying a  * property editor to a new value for a property.  */ void setExtractOldValueForEditor(boolean extractOldValueForEditor).
true;;0;1;/**  * Return whether to extract the old property value when applying a  * property editor to a new value for a property.  */ ;/**  * Return whether to extract the old property value when applying a  * property editor to a new value for a property.  */ boolean isExtractOldValueForEditor().
true;;1;1;/**  * Set whether this instance should attempt to "auto-grow" a  * nested path that contains a {@code null} value.  * <p>If {@code true}, a {@code null} path location will be populated  * with a default object value and traversed instead of resulting in a  * {@link NullValueInNestedPathException}.  * <p>Default is {@code false} on a plain PropertyAccessor instance.  */ ;/**  * Set whether this instance should attempt to "auto-grow" a  * nested path that contains a {@code null} value.  * <p>If {@code true}, a {@code null} path location will be populated  * with a default object value and traversed instead of resulting in a  * {@link NullValueInNestedPathException}.  * <p>Default is {@code false} on a plain PropertyAccessor instance.  */ void setAutoGrowNestedPaths(boolean autoGrowNestedPaths).
true;;0;1;/**  * Return whether "auto-growing" of nested paths has been activated.  */ ;/**  * Return whether "auto-growing" of nested paths has been activated.  */ boolean isAutoGrowNestedPaths().
