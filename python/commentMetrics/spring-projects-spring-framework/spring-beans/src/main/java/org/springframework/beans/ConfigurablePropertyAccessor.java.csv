# id;timestamp;commentText;codeText;commentWords;codeWords
ConfigurablePropertyAccessor -> @Nullable 	ConversionService getConversionService()_;1495868221;Return the associated ConversionService, if any.;@Nullable_	ConversionService getConversionService()_;return,the,associated,conversion,service,if,any;nullable,conversion,service,get,conversion,service
ConfigurablePropertyAccessor -> @Nullable 	ConversionService getConversionService()_;1496837955;Return the associated ConversionService, if any.;@Nullable_	ConversionService getConversionService()_;return,the,associated,conversion,service,if,any;nullable,conversion,service,get,conversion,service
ConfigurablePropertyAccessor -> ConversionService getConversionService()_;1328020251;Return the associated ConversionService, if any.;ConversionService getConversionService()_;return,the,associated,conversion,service,if,any;conversion,service,get,conversion,service
ConfigurablePropertyAccessor -> ConversionService getConversionService()_;1403803322;Return the associated ConversionService, if any.;ConversionService getConversionService()_;return,the,associated,conversion,service,if,any;conversion,service,get,conversion,service
ConfigurablePropertyAccessor -> ConversionService getConversionService()_;1417290561;Return the associated ConversionService, if any.;ConversionService getConversionService()_;return,the,associated,conversion,service,if,any;conversion,service,get,conversion,service
ConfigurablePropertyAccessor -> void setExtractOldValueForEditor(boolean extractOldValueForEditor)_;1328020251;Set whether to extract the old property value when applying a_property editor to a new value for a property.;void setExtractOldValueForEditor(boolean extractOldValueForEditor)_;set,whether,to,extract,the,old,property,value,when,applying,a,property,editor,to,a,new,value,for,a,property;void,set,extract,old,value,for,editor,boolean,extract,old,value,for,editor
ConfigurablePropertyAccessor -> void setExtractOldValueForEditor(boolean extractOldValueForEditor)_;1403803322;Set whether to extract the old property value when applying a_property editor to a new value for a property.;void setExtractOldValueForEditor(boolean extractOldValueForEditor)_;set,whether,to,extract,the,old,property,value,when,applying,a,property,editor,to,a,new,value,for,a,property;void,set,extract,old,value,for,editor,boolean,extract,old,value,for,editor
ConfigurablePropertyAccessor -> void setExtractOldValueForEditor(boolean extractOldValueForEditor)_;1417290561;Set whether to extract the old property value when applying a_property editor to a new value for a property.;void setExtractOldValueForEditor(boolean extractOldValueForEditor)_;set,whether,to,extract,the,old,property,value,when,applying,a,property,editor,to,a,new,value,for,a,property;void,set,extract,old,value,for,editor,boolean,extract,old,value,for,editor
ConfigurablePropertyAccessor -> void setExtractOldValueForEditor(boolean extractOldValueForEditor)_;1495868221;Set whether to extract the old property value when applying a_property editor to a new value for a property.;void setExtractOldValueForEditor(boolean extractOldValueForEditor)_;set,whether,to,extract,the,old,property,value,when,applying,a,property,editor,to,a,new,value,for,a,property;void,set,extract,old,value,for,editor,boolean,extract,old,value,for,editor
ConfigurablePropertyAccessor -> void setExtractOldValueForEditor(boolean extractOldValueForEditor)_;1496837955;Set whether to extract the old property value when applying a_property editor to a new value for a property.;void setExtractOldValueForEditor(boolean extractOldValueForEditor)_;set,whether,to,extract,the,old,property,value,when,applying,a,property,editor,to,a,new,value,for,a,property;void,set,extract,old,value,for,editor,boolean,extract,old,value,for,editor
ConfigurablePropertyAccessor -> void setConversionService(ConversionService conversionService)_;1328020251;Specify a Spring 3.0 ConversionService to use for converting_property values, as an alternative to JavaBeans PropertyEditors.;void setConversionService(ConversionService conversionService)_;specify,a,spring,3,0,conversion,service,to,use,for,converting,property,values,as,an,alternative,to,java,beans,property,editors;void,set,conversion,service,conversion,service,conversion,service
ConfigurablePropertyAccessor -> void setConversionService(ConversionService conversionService)_;1403803322;Specify a Spring 3.0 ConversionService to use for converting_property values, as an alternative to JavaBeans PropertyEditors.;void setConversionService(ConversionService conversionService)_;specify,a,spring,3,0,conversion,service,to,use,for,converting,property,values,as,an,alternative,to,java,beans,property,editors;void,set,conversion,service,conversion,service,conversion,service
ConfigurablePropertyAccessor -> void setConversionService(ConversionService conversionService)_;1417290561;Specify a Spring 3.0 ConversionService to use for converting_property values, as an alternative to JavaBeans PropertyEditors.;void setConversionService(ConversionService conversionService)_;specify,a,spring,3,0,conversion,service,to,use,for,converting,property,values,as,an,alternative,to,java,beans,property,editors;void,set,conversion,service,conversion,service,conversion,service
ConfigurablePropertyAccessor -> void setConversionService(ConversionService conversionService)_;1495868221;Specify a Spring 3.0 ConversionService to use for converting_property values, as an alternative to JavaBeans PropertyEditors.;void setConversionService(ConversionService conversionService)_;specify,a,spring,3,0,conversion,service,to,use,for,converting,property,values,as,an,alternative,to,java,beans,property,editors;void,set,conversion,service,conversion,service,conversion,service
ConfigurablePropertyAccessor -> boolean isExtractOldValueForEditor()_;1328020251;Return whether to extract the old property value when applying a_property editor to a new value for a property.;boolean isExtractOldValueForEditor()_;return,whether,to,extract,the,old,property,value,when,applying,a,property,editor,to,a,new,value,for,a,property;boolean,is,extract,old,value,for,editor
ConfigurablePropertyAccessor -> boolean isExtractOldValueForEditor()_;1403803322;Return whether to extract the old property value when applying a_property editor to a new value for a property.;boolean isExtractOldValueForEditor()_;return,whether,to,extract,the,old,property,value,when,applying,a,property,editor,to,a,new,value,for,a,property;boolean,is,extract,old,value,for,editor
ConfigurablePropertyAccessor -> boolean isExtractOldValueForEditor()_;1417290561;Return whether to extract the old property value when applying a_property editor to a new value for a property.;boolean isExtractOldValueForEditor()_;return,whether,to,extract,the,old,property,value,when,applying,a,property,editor,to,a,new,value,for,a,property;boolean,is,extract,old,value,for,editor
ConfigurablePropertyAccessor -> boolean isExtractOldValueForEditor()_;1495868221;Return whether to extract the old property value when applying a_property editor to a new value for a property.;boolean isExtractOldValueForEditor()_;return,whether,to,extract,the,old,property,value,when,applying,a,property,editor,to,a,new,value,for,a,property;boolean,is,extract,old,value,for,editor
ConfigurablePropertyAccessor -> boolean isExtractOldValueForEditor()_;1496837955;Return whether to extract the old property value when applying a_property editor to a new value for a property.;boolean isExtractOldValueForEditor()_;return,whether,to,extract,the,old,property,value,when,applying,a,property,editor,to,a,new,value,for,a,property;boolean,is,extract,old,value,for,editor
ConfigurablePropertyAccessor -> boolean isAutoGrowNestedPaths()_;1403803322;Return whether "auto-growing" of nested paths has been activated.;boolean isAutoGrowNestedPaths()_;return,whether,auto,growing,of,nested,paths,has,been,activated;boolean,is,auto,grow,nested,paths
ConfigurablePropertyAccessor -> boolean isAutoGrowNestedPaths()_;1417290561;Return whether "auto-growing" of nested paths has been activated.;boolean isAutoGrowNestedPaths()_;return,whether,auto,growing,of,nested,paths,has,been,activated;boolean,is,auto,grow,nested,paths
ConfigurablePropertyAccessor -> boolean isAutoGrowNestedPaths()_;1495868221;Return whether "auto-growing" of nested paths has been activated.;boolean isAutoGrowNestedPaths()_;return,whether,auto,growing,of,nested,paths,has,been,activated;boolean,is,auto,grow,nested,paths
ConfigurablePropertyAccessor -> boolean isAutoGrowNestedPaths()_;1496837955;Return whether "auto-growing" of nested paths has been activated.;boolean isAutoGrowNestedPaths()_;return,whether,auto,growing,of,nested,paths,has,been,activated;boolean,is,auto,grow,nested,paths
ConfigurablePropertyAccessor -> void setAutoGrowNestedPaths(boolean autoGrowNestedPaths)_;1403803322;Set whether this instance should attempt to "auto-grow" a_nested path that contains a {@code null} value._<p>If {@code true}, a {@code null} path location will be populated_with a default object value and traversed instead of resulting in a_{@link NullValueInNestedPathException}._<p>Default is {@code false} on a plain instance.;void setAutoGrowNestedPaths(boolean autoGrowNestedPaths)_;set,whether,this,instance,should,attempt,to,auto,grow,a,nested,path,that,contains,a,code,null,value,p,if,code,true,a,code,null,path,location,will,be,populated,with,a,default,object,value,and,traversed,instead,of,resulting,in,a,link,null,value,in,nested,path,exception,p,default,is,code,false,on,a,plain,instance;void,set,auto,grow,nested,paths,boolean,auto,grow,nested,paths
ConfigurablePropertyAccessor -> void setAutoGrowNestedPaths(boolean autoGrowNestedPaths)_;1417290561;Set whether this instance should attempt to "auto-grow" a_nested path that contains a {@code null} value._<p>If {@code true}, a {@code null} path location will be populated_with a default object value and traversed instead of resulting in a_{@link NullValueInNestedPathException}._<p>Default is {@code false} on a plain PropertyAccessor instance.;void setAutoGrowNestedPaths(boolean autoGrowNestedPaths)_;set,whether,this,instance,should,attempt,to,auto,grow,a,nested,path,that,contains,a,code,null,value,p,if,code,true,a,code,null,path,location,will,be,populated,with,a,default,object,value,and,traversed,instead,of,resulting,in,a,link,null,value,in,nested,path,exception,p,default,is,code,false,on,a,plain,property,accessor,instance;void,set,auto,grow,nested,paths,boolean,auto,grow,nested,paths
ConfigurablePropertyAccessor -> void setAutoGrowNestedPaths(boolean autoGrowNestedPaths)_;1495868221;Set whether this instance should attempt to "auto-grow" a_nested path that contains a {@code null} value._<p>If {@code true}, a {@code null} path location will be populated_with a default object value and traversed instead of resulting in a_{@link NullValueInNestedPathException}._<p>Default is {@code false} on a plain PropertyAccessor instance.;void setAutoGrowNestedPaths(boolean autoGrowNestedPaths)_;set,whether,this,instance,should,attempt,to,auto,grow,a,nested,path,that,contains,a,code,null,value,p,if,code,true,a,code,null,path,location,will,be,populated,with,a,default,object,value,and,traversed,instead,of,resulting,in,a,link,null,value,in,nested,path,exception,p,default,is,code,false,on,a,plain,property,accessor,instance;void,set,auto,grow,nested,paths,boolean,auto,grow,nested,paths
ConfigurablePropertyAccessor -> void setAutoGrowNestedPaths(boolean autoGrowNestedPaths)_;1496837955;Set whether this instance should attempt to "auto-grow" a_nested path that contains a {@code null} value._<p>If {@code true}, a {@code null} path location will be populated_with a default object value and traversed instead of resulting in a_{@link NullValueInNestedPathException}._<p>Default is {@code false} on a plain PropertyAccessor instance.;void setAutoGrowNestedPaths(boolean autoGrowNestedPaths)_;set,whether,this,instance,should,attempt,to,auto,grow,a,nested,path,that,contains,a,code,null,value,p,if,code,true,a,code,null,path,location,will,be,populated,with,a,default,object,value,and,traversed,instead,of,resulting,in,a,link,null,value,in,nested,path,exception,p,default,is,code,false,on,a,plain,property,accessor,instance;void,set,auto,grow,nested,paths,boolean,auto,grow,nested,paths
