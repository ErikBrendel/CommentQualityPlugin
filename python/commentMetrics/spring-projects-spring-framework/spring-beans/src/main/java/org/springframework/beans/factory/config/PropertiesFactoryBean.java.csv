# id;timestamp;commentText;codeText;commentWords;codeWords
PropertiesFactoryBean -> protected Properties createProperties() throws IOException;1328020251;Template method that subclasses may override to construct the object_returned by this factory. The default implementation returns the_plain merged Properties instance._<p>Invoked on initialization of this FactoryBean in case of a_shared singleton_ else, on each {@link #getObject()} call._@return the object returned by this factory_@throws IOException if an exception occured during properties loading_@see #mergeProperties();protected Properties createProperties() throws IOException {_		return (Properties) createInstance()__	};template,method,that,subclasses,may,override,to,construct,the,object,returned,by,this,factory,the,default,implementation,returns,the,plain,merged,properties,instance,p,invoked,on,initialization,of,this,factory,bean,in,case,of,a,shared,singleton,else,on,each,link,get,object,call,return,the,object,returned,by,this,factory,throws,ioexception,if,an,exception,occured,during,properties,loading,see,merge,properties;protected,properties,create,properties,throws,ioexception,return,properties,create,instance
PropertiesFactoryBean -> protected Properties createProperties() throws IOException;1356735495;Template method that subclasses may override to construct the object_returned by this factory. The default implementation returns the_plain merged Properties instance._<p>Invoked on initialization of this FactoryBean in case of a_shared singleton_ else, on each {@link #getObject()} call._@return the object returned by this factory_@throws IOException if an exception occured during properties loading_@see #mergeProperties();protected Properties createProperties() throws IOException {_		return (Properties) createInstance()__	};template,method,that,subclasses,may,override,to,construct,the,object,returned,by,this,factory,the,default,implementation,returns,the,plain,merged,properties,instance,p,invoked,on,initialization,of,this,factory,bean,in,case,of,a,shared,singleton,else,on,each,link,get,object,call,return,the,object,returned,by,this,factory,throws,ioexception,if,an,exception,occured,during,properties,loading,see,merge,properties;protected,properties,create,properties,throws,ioexception,return,properties,create,instance
PropertiesFactoryBean -> protected Properties createProperties() throws IOException;1357119239;Template method that subclasses may override to construct the object_returned by this factory. The default implementation returns the_plain merged Properties instance._<p>Invoked on initialization of this FactoryBean in case of a_shared singleton_ else, on each {@link #getObject()} call._@return the object returned by this factory_@throws IOException if an exception occured during properties loading_@see #mergeProperties();protected Properties createProperties() throws IOException {_		return (Properties) createInstance()__	};template,method,that,subclasses,may,override,to,construct,the,object,returned,by,this,factory,the,default,implementation,returns,the,plain,merged,properties,instance,p,invoked,on,initialization,of,this,factory,bean,in,case,of,a,shared,singleton,else,on,each,link,get,object,call,return,the,object,returned,by,this,factory,throws,ioexception,if,an,exception,occured,during,properties,loading,see,merge,properties;protected,properties,create,properties,throws,ioexception,return,properties,create,instance
PropertiesFactoryBean -> protected Properties createProperties() throws IOException;1367508310;Template method that subclasses may override to construct the object_returned by this factory. The default implementation returns the_plain merged Properties instance._<p>Invoked on initialization of this FactoryBean in case of a_shared singleton_ else, on each {@link #getObject()} call._@return the object returned by this factory_@throws IOException if an exception occured during properties loading_@see #mergeProperties();protected Properties createProperties() throws IOException {_		return mergeProperties()__	};template,method,that,subclasses,may,override,to,construct,the,object,returned,by,this,factory,the,default,implementation,returns,the,plain,merged,properties,instance,p,invoked,on,initialization,of,this,factory,bean,in,case,of,a,shared,singleton,else,on,each,link,get,object,call,return,the,object,returned,by,this,factory,throws,ioexception,if,an,exception,occured,during,properties,loading,see,merge,properties;protected,properties,create,properties,throws,ioexception,return,merge,properties
PropertiesFactoryBean -> protected Properties createProperties() throws IOException;1368482696;Template method that subclasses may override to construct the object_returned by this factory. The default implementation returns the_plain merged Properties instance._<p>Invoked on initialization of this FactoryBean in case of a_shared singleton_ else, on each {@link #getObject()} call._@return the object returned by this factory_@throws IOException if an exception occured during properties loading_@see #mergeProperties();protected Properties createProperties() throws IOException {_		return mergeProperties()__	};template,method,that,subclasses,may,override,to,construct,the,object,returned,by,this,factory,the,default,implementation,returns,the,plain,merged,properties,instance,p,invoked,on,initialization,of,this,factory,bean,in,case,of,a,shared,singleton,else,on,each,link,get,object,call,return,the,object,returned,by,this,factory,throws,ioexception,if,an,exception,occured,during,properties,loading,see,merge,properties;protected,properties,create,properties,throws,ioexception,return,merge,properties
PropertiesFactoryBean -> protected Properties createProperties() throws IOException;1467983536;Template method that subclasses may override to construct the object_returned by this factory. The default implementation returns the_plain merged Properties instance._<p>Invoked on initialization of this FactoryBean in case of a_shared singleton_ else, on each {@link #getObject()} call._@return the object returned by this factory_@throws IOException if an exception occurred during properties loading_@see #mergeProperties();protected Properties createProperties() throws IOException {_		return mergeProperties()__	};template,method,that,subclasses,may,override,to,construct,the,object,returned,by,this,factory,the,default,implementation,returns,the,plain,merged,properties,instance,p,invoked,on,initialization,of,this,factory,bean,in,case,of,a,shared,singleton,else,on,each,link,get,object,call,return,the,object,returned,by,this,factory,throws,ioexception,if,an,exception,occurred,during,properties,loading,see,merge,properties;protected,properties,create,properties,throws,ioexception,return,merge,properties
PropertiesFactoryBean -> protected Properties createProperties() throws IOException;1500495740;Template method that subclasses may override to construct the object_returned by this factory. The default implementation returns the_plain merged Properties instance._<p>Invoked on initialization of this FactoryBean in case of a_shared singleton_ else, on each {@link #getObject()} call._@return the object returned by this factory_@throws IOException if an exception occurred during properties loading_@see #mergeProperties();protected Properties createProperties() throws IOException {_		return mergeProperties()__	};template,method,that,subclasses,may,override,to,construct,the,object,returned,by,this,factory,the,default,implementation,returns,the,plain,merged,properties,instance,p,invoked,on,initialization,of,this,factory,bean,in,case,of,a,shared,singleton,else,on,each,link,get,object,call,return,the,object,returned,by,this,factory,throws,ioexception,if,an,exception,occurred,during,properties,loading,see,merge,properties;protected,properties,create,properties,throws,ioexception,return,merge,properties
PropertiesFactoryBean -> protected Properties createProperties() throws IOException;1502974979;Template method that subclasses may override to construct the object_returned by this factory. The default implementation returns the_plain merged Properties instance._<p>Invoked on initialization of this FactoryBean in case of a_shared singleton_ else, on each {@link #getObject()} call._@return the object returned by this factory_@throws IOException if an exception occurred during properties loading_@see #mergeProperties();protected Properties createProperties() throws IOException {_		return mergeProperties()__	};template,method,that,subclasses,may,override,to,construct,the,object,returned,by,this,factory,the,default,implementation,returns,the,plain,merged,properties,instance,p,invoked,on,initialization,of,this,factory,bean,in,case,of,a,shared,singleton,else,on,each,link,get,object,call,return,the,object,returned,by,this,factory,throws,ioexception,if,an,exception,occurred,during,properties,loading,see,merge,properties;protected,properties,create,properties,throws,ioexception,return,merge,properties
PropertiesFactoryBean -> public final void setSingleton(boolean singleton);1328020251;Set whether a shared 'singleton' Properties instance should be_created, or rather a new Properties instance on each request._<p>Default is "true" (a shared singleton).;public final void setSingleton(boolean singleton) {_		this.singleton = singleton__	};set,whether,a,shared,singleton,properties,instance,should,be,created,or,rather,a,new,properties,instance,on,each,request,p,default,is,true,a,shared,singleton;public,final,void,set,singleton,boolean,singleton,this,singleton,singleton
PropertiesFactoryBean -> public final void setSingleton(boolean singleton);1356735495;Set whether a shared 'singleton' Properties instance should be_created, or rather a new Properties instance on each request._<p>Default is "true" (a shared singleton).;public final void setSingleton(boolean singleton) {_		this.singleton = singleton__	};set,whether,a,shared,singleton,properties,instance,should,be,created,or,rather,a,new,properties,instance,on,each,request,p,default,is,true,a,shared,singleton;public,final,void,set,singleton,boolean,singleton,this,singleton,singleton
PropertiesFactoryBean -> public final void setSingleton(boolean singleton);1357119239;Set whether a shared 'singleton' Properties instance should be_created, or rather a new Properties instance on each request._<p>Default is "true" (a shared singleton).;public final void setSingleton(boolean singleton) {_		this.singleton = singleton__	};set,whether,a,shared,singleton,properties,instance,should,be,created,or,rather,a,new,properties,instance,on,each,request,p,default,is,true,a,shared,singleton;public,final,void,set,singleton,boolean,singleton,this,singleton,singleton
PropertiesFactoryBean -> public final void setSingleton(boolean singleton);1367508310;Set whether a shared 'singleton' Properties instance should be_created, or rather a new Properties instance on each request._<p>Default is "true" (a shared singleton).;public final void setSingleton(boolean singleton) {_		this.singleton = singleton__	};set,whether,a,shared,singleton,properties,instance,should,be,created,or,rather,a,new,properties,instance,on,each,request,p,default,is,true,a,shared,singleton;public,final,void,set,singleton,boolean,singleton,this,singleton,singleton
PropertiesFactoryBean -> public final void setSingleton(boolean singleton);1368482696;Set whether a shared 'singleton' Properties instance should be_created, or rather a new Properties instance on each request._<p>Default is "true" (a shared singleton).;public final void setSingleton(boolean singleton) {_		this.singleton = singleton__	};set,whether,a,shared,singleton,properties,instance,should,be,created,or,rather,a,new,properties,instance,on,each,request,p,default,is,true,a,shared,singleton;public,final,void,set,singleton,boolean,singleton,this,singleton,singleton
PropertiesFactoryBean -> public final void setSingleton(boolean singleton);1467983536;Set whether a shared 'singleton' Properties instance should be_created, or rather a new Properties instance on each request._<p>Default is "true" (a shared singleton).;public final void setSingleton(boolean singleton) {_		this.singleton = singleton__	};set,whether,a,shared,singleton,properties,instance,should,be,created,or,rather,a,new,properties,instance,on,each,request,p,default,is,true,a,shared,singleton;public,final,void,set,singleton,boolean,singleton,this,singleton,singleton
PropertiesFactoryBean -> public final void setSingleton(boolean singleton);1500495740;Set whether a shared 'singleton' Properties instance should be_created, or rather a new Properties instance on each request._<p>Default is "true" (a shared singleton).;public final void setSingleton(boolean singleton) {_		this.singleton = singleton__	};set,whether,a,shared,singleton,properties,instance,should,be,created,or,rather,a,new,properties,instance,on,each,request,p,default,is,true,a,shared,singleton;public,final,void,set,singleton,boolean,singleton,this,singleton,singleton
PropertiesFactoryBean -> public final void setSingleton(boolean singleton);1502974979;Set whether a shared 'singleton' Properties instance should be_created, or rather a new Properties instance on each request._<p>Default is "true" (a shared singleton).;public final void setSingleton(boolean singleton) {_		this.singleton = singleton__	};set,whether,a,shared,singleton,properties,instance,should,be,created,or,rather,a,new,properties,instance,on,each,request,p,default,is,true,a,shared,singleton;public,final,void,set,singleton,boolean,singleton,this,singleton,singleton
PropertiesFactoryBean -> @Deprecated 	protected Object createInstance() throws IOException;1328020251;Template method that subclasses may override to construct the object_returned by this factory. The default implementation returns the_plain merged Properties instance._<p>Invoked on initialization of this FactoryBean in case of a_shared singleton_ else, on each {@link #getObject()} call._@return the object returned by this factory_@throws IOException if an exception occured during properties loading_@deprecated as of Spring 3.0, in favor of {@link #createProperties()};@Deprecated_	protected Object createInstance() throws IOException {_		return mergeProperties()__	};template,method,that,subclasses,may,override,to,construct,the,object,returned,by,this,factory,the,default,implementation,returns,the,plain,merged,properties,instance,p,invoked,on,initialization,of,this,factory,bean,in,case,of,a,shared,singleton,else,on,each,link,get,object,call,return,the,object,returned,by,this,factory,throws,ioexception,if,an,exception,occured,during,properties,loading,deprecated,as,of,spring,3,0,in,favor,of,link,create,properties;deprecated,protected,object,create,instance,throws,ioexception,return,merge,properties
PropertiesFactoryBean -> @Deprecated 	protected Object createInstance() throws IOException;1356735495;Template method that subclasses may override to construct the object_returned by this factory. The default implementation returns the_plain merged Properties instance._<p>Invoked on initialization of this FactoryBean in case of a_shared singleton_ else, on each {@link #getObject()} call._@return the object returned by this factory_@throws IOException if an exception occured during properties loading_@deprecated as of Spring 3.0, in favor of {@link #createProperties()};@Deprecated_	protected Object createInstance() throws IOException {_		return mergeProperties()__	};template,method,that,subclasses,may,override,to,construct,the,object,returned,by,this,factory,the,default,implementation,returns,the,plain,merged,properties,instance,p,invoked,on,initialization,of,this,factory,bean,in,case,of,a,shared,singleton,else,on,each,link,get,object,call,return,the,object,returned,by,this,factory,throws,ioexception,if,an,exception,occured,during,properties,loading,deprecated,as,of,spring,3,0,in,favor,of,link,create,properties;deprecated,protected,object,create,instance,throws,ioexception,return,merge,properties
PropertiesFactoryBean -> @Deprecated 	protected Object createInstance() throws IOException;1357119239;Template method that subclasses may override to construct the object_returned by this factory. The default implementation returns the_plain merged Properties instance._<p>Invoked on initialization of this FactoryBean in case of a_shared singleton_ else, on each {@link #getObject()} call._@return the object returned by this factory_@throws IOException if an exception occured during properties loading_@deprecated as of Spring 3.0, in favor of {@link #createProperties()};@Deprecated_	protected Object createInstance() throws IOException {_		return mergeProperties()__	};template,method,that,subclasses,may,override,to,construct,the,object,returned,by,this,factory,the,default,implementation,returns,the,plain,merged,properties,instance,p,invoked,on,initialization,of,this,factory,bean,in,case,of,a,shared,singleton,else,on,each,link,get,object,call,return,the,object,returned,by,this,factory,throws,ioexception,if,an,exception,occured,during,properties,loading,deprecated,as,of,spring,3,0,in,favor,of,link,create,properties;deprecated,protected,object,create,instance,throws,ioexception,return,merge,properties
