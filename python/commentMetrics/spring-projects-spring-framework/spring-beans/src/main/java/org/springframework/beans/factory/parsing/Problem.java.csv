commented;modifiers;parameterAmount;loc;comment;code
true;public;0;3;/**  * Get the message detailing the problem.  */ ;/**  * Get the message detailing the problem.  */ public String getMessage() {     return this.message. }
true;public;0;3;/**  * Get the location within a bean configuration source that triggered the error.  */ ;/**  * Get the location within a bean configuration source that triggered the error.  */ public Location getLocation() {     return this.location. }
true;public;0;3;/**  * Get the description of the bean configuration source that triggered the error,  * as contained within this Problem's Location object.  * @see #getLocation()  */ ;/**  * Get the description of the bean configuration source that triggered the error,  * as contained within this Problem's Location object.  * @see #getLocation()  */ public String getResourceDescription() {     return getLocation().getResource().getDescription(). }
true;public;0;4;/**  * Get the {@link ParseState} at the time of the error (may be {@code null}).  */ ;/**  * Get the {@link ParseState} at the time of the error (may be {@code null}).  */ @Nullable public ParseState getParseState() {     return this.parseState. }
true;public;0;4;/**  * Get the underlying exception that caused the error (may be {@code null}).  */ ;/**  * Get the underlying exception that caused the error (may be {@code null}).  */ @Nullable public Throwable getRootCause() {     return this.rootCause. }
false;public;0;11;;@Override public String toString() {     StringBuilder sb = new StringBuilder().     sb.append("Configuration problem: ").     sb.append(getMessage()).     sb.append("\nOffending resource: ").append(getResourceDescription()).     if (getParseState() != null) {         sb.append('\n').append(getParseState()).     }     return sb.toString(). }
