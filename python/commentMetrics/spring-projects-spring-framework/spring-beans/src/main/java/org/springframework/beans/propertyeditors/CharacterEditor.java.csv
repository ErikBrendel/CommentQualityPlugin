commented;modifiers;parameterAmount;loc;comment;code
false;public;1;20;;@Override public void setAsText(@Nullable String text) throws IllegalArgumentException {     if (this.allowEmpty && !StringUtils.hasLength(text)) {         // Treat empty String as null value.         setValue(null).     } else if (text == null) {         throw new IllegalArgumentException("null String cannot be converted to char type").     } else if (isUnicodeCharacterSequence(text)) {         setAsUnicode(text).     } else if (text.length() == 1) {         setValue(Character.valueOf(text.charAt(0))).     } else {         throw new IllegalArgumentException("String [" + text + "] with length " + text.length() + " cannot be converted to char type: neither Unicode nor single character").     } }
false;public;0;5;;@Override public String getAsText() {     Object value = getValue().     return (value != null ? value.toString() : ""). }
false;private;1;3;;private boolean isUnicodeCharacterSequence(String sequence) {     return (sequence.startsWith(UNICODE_PREFIX) && sequence.length() == UNICODE_LENGTH). }
false;private;1;4;;private void setAsUnicode(String text) {     int code = Integer.parseInt(text.substring(UNICODE_PREFIX.length()), 16).     setValue(Character.valueOf((char) code)). }
