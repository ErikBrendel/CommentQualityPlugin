# id;timestamp;commentText;codeText;commentWords;codeWords
InjectionMetadata -> InjectedElement -> protected void inject(Object target, String requestingBeanName, PropertyValues pvs) throws Throwable;1328020251;Either this or {@link #getResourceToInject} needs to be overridden.;protected void inject(Object target, String requestingBeanName, PropertyValues pvs) throws Throwable {_			if (this.isField) {_				Field field = (Field) this.member__				ReflectionUtils.makeAccessible(field)__				field.set(target, getResourceToInject(target, requestingBeanName))__			}_			else {_				if (checkPropertySkipping(pvs)) {_					return__				}_				try {_					Method method = (Method) this.member__					ReflectionUtils.makeAccessible(method)__					method.invoke(target, getResourceToInject(target, requestingBeanName))__				}_				catch (InvocationTargetException ex) {_					throw ex.getTargetException()__				}_			}_		};either,this,or,link,get,resource,to,inject,needs,to,be,overridden;protected,void,inject,object,target,string,requesting,bean,name,property,values,pvs,throws,throwable,if,this,is,field,field,field,field,this,member,reflection,utils,make,accessible,field,field,set,target,get,resource,to,inject,target,requesting,bean,name,else,if,check,property,skipping,pvs,return,try,method,method,method,this,member,reflection,utils,make,accessible,method,method,invoke,target,get,resource,to,inject,target,requesting,bean,name,catch,invocation,target,exception,ex,throw,ex,get,target,exception
InjectionMetadata -> InjectedElement -> protected void inject(Object target, String requestingBeanName, PropertyValues pvs) throws Throwable;1337162763;Either this or {@link #getResourceToInject} needs to be overridden.;protected void inject(Object target, String requestingBeanName, PropertyValues pvs) throws Throwable {_			if (this.isField) {_				Field field = (Field) this.member__				ReflectionUtils.makeAccessible(field)__				field.set(target, getResourceToInject(target, requestingBeanName))__			}_			else {_				if (checkPropertySkipping(pvs)) {_					return__				}_				try {_					Method method = (Method) this.member__					ReflectionUtils.makeAccessible(method)__					method.invoke(target, getResourceToInject(target, requestingBeanName))__				}_				catch (InvocationTargetException ex) {_					throw ex.getTargetException()__				}_			}_		};either,this,or,link,get,resource,to,inject,needs,to,be,overridden;protected,void,inject,object,target,string,requesting,bean,name,property,values,pvs,throws,throwable,if,this,is,field,field,field,field,this,member,reflection,utils,make,accessible,field,field,set,target,get,resource,to,inject,target,requesting,bean,name,else,if,check,property,skipping,pvs,return,try,method,method,method,this,member,reflection,utils,make,accessible,method,method,invoke,target,get,resource,to,inject,target,requesting,bean,name,catch,invocation,target,exception,ex,throw,ex,get,target,exception
InjectionMetadata -> InjectedElement -> protected void inject(Object target, String requestingBeanName, PropertyValues pvs) throws Throwable;1348570178;Either this or {@link #getResourceToInject} needs to be overridden.;protected void inject(Object target, String requestingBeanName, PropertyValues pvs) throws Throwable {_			if (this.isField) {_				Field field = (Field) this.member__				ReflectionUtils.makeAccessible(field)__				field.set(target, getResourceToInject(target, requestingBeanName))__			}_			else {_				if (checkPropertySkipping(pvs)) {_					return__				}_				try {_					Method method = (Method) this.member__					ReflectionUtils.makeAccessible(method)__					method.invoke(target, getResourceToInject(target, requestingBeanName))__				}_				catch (InvocationTargetException ex) {_					throw ex.getTargetException()__				}_			}_		};either,this,or,link,get,resource,to,inject,needs,to,be,overridden;protected,void,inject,object,target,string,requesting,bean,name,property,values,pvs,throws,throwable,if,this,is,field,field,field,field,this,member,reflection,utils,make,accessible,field,field,set,target,get,resource,to,inject,target,requesting,bean,name,else,if,check,property,skipping,pvs,return,try,method,method,method,this,member,reflection,utils,make,accessible,method,method,invoke,target,get,resource,to,inject,target,requesting,bean,name,catch,invocation,target,exception,ex,throw,ex,get,target,exception
InjectionMetadata -> InjectedElement -> protected void inject(Object target, String requestingBeanName, PropertyValues pvs) throws Throwable;1355352386;Either this or {@link #getResourceToInject} needs to be overridden.;protected void inject(Object target, String requestingBeanName, PropertyValues pvs) throws Throwable {_			if (this.isField) {_				Field field = (Field) this.member__				ReflectionUtils.makeAccessible(field)__				field.set(target, getResourceToInject(target, requestingBeanName))__			}_			else {_				if (checkPropertySkipping(pvs)) {_					return__				}_				try {_					Method method = (Method) this.member__					ReflectionUtils.makeAccessible(method)__					method.invoke(target, getResourceToInject(target, requestingBeanName))__				}_				catch (InvocationTargetException ex) {_					throw ex.getTargetException()__				}_			}_		};either,this,or,link,get,resource,to,inject,needs,to,be,overridden;protected,void,inject,object,target,string,requesting,bean,name,property,values,pvs,throws,throwable,if,this,is,field,field,field,field,this,member,reflection,utils,make,accessible,field,field,set,target,get,resource,to,inject,target,requesting,bean,name,else,if,check,property,skipping,pvs,return,try,method,method,method,this,member,reflection,utils,make,accessible,method,method,invoke,target,get,resource,to,inject,target,requesting,bean,name,catch,invocation,target,exception,ex,throw,ex,get,target,exception
InjectionMetadata -> InjectedElement -> protected void inject(Object target, String requestingBeanName, PropertyValues pvs) throws Throwable;1377641038;Either this or {@link #getResourceToInject} needs to be overridden.;protected void inject(Object target, String requestingBeanName, PropertyValues pvs) throws Throwable {_			if (this.isField) {_				Field field = (Field) this.member__				ReflectionUtils.makeAccessible(field)__				field.set(target, getResourceToInject(target, requestingBeanName))__			}_			else {_				if (checkPropertySkipping(pvs)) {_					return__				}_				try {_					Method method = (Method) this.member__					ReflectionUtils.makeAccessible(method)__					method.invoke(target, getResourceToInject(target, requestingBeanName))__				}_				catch (InvocationTargetException ex) {_					throw ex.getTargetException()__				}_			}_		};either,this,or,link,get,resource,to,inject,needs,to,be,overridden;protected,void,inject,object,target,string,requesting,bean,name,property,values,pvs,throws,throwable,if,this,is,field,field,field,field,this,member,reflection,utils,make,accessible,field,field,set,target,get,resource,to,inject,target,requesting,bean,name,else,if,check,property,skipping,pvs,return,try,method,method,method,this,member,reflection,utils,make,accessible,method,method,invoke,target,get,resource,to,inject,target,requesting,bean,name,catch,invocation,target,exception,ex,throw,ex,get,target,exception
InjectionMetadata -> InjectedElement -> protected void inject(Object target, String requestingBeanName, PropertyValues pvs) throws Throwable;1387493371;Either this or {@link #getResourceToInject} needs to be overridden.;protected void inject(Object target, String requestingBeanName, PropertyValues pvs) throws Throwable {_			if (this.isField) {_				Field field = (Field) this.member__				ReflectionUtils.makeAccessible(field)__				field.set(target, getResourceToInject(target, requestingBeanName))__			}_			else {_				if (checkPropertySkipping(pvs)) {_					return__				}_				try {_					Method method = (Method) this.member__					ReflectionUtils.makeAccessible(method)__					method.invoke(target, getResourceToInject(target, requestingBeanName))__				}_				catch (InvocationTargetException ex) {_					throw ex.getTargetException()__				}_			}_		};either,this,or,link,get,resource,to,inject,needs,to,be,overridden;protected,void,inject,object,target,string,requesting,bean,name,property,values,pvs,throws,throwable,if,this,is,field,field,field,field,this,member,reflection,utils,make,accessible,field,field,set,target,get,resource,to,inject,target,requesting,bean,name,else,if,check,property,skipping,pvs,return,try,method,method,method,this,member,reflection,utils,make,accessible,method,method,invoke,target,get,resource,to,inject,target,requesting,bean,name,catch,invocation,target,exception,ex,throw,ex,get,target,exception
InjectionMetadata -> InjectedElement -> protected void inject(Object target, String requestingBeanName, PropertyValues pvs) throws Throwable;1419339720;Either this or {@link #getResourceToInject} needs to be overridden.;protected void inject(Object target, String requestingBeanName, PropertyValues pvs) throws Throwable {_			if (this.isField) {_				Field field = (Field) this.member__				ReflectionUtils.makeAccessible(field)__				field.set(target, getResourceToInject(target, requestingBeanName))__			}_			else {_				if (checkPropertySkipping(pvs)) {_					return__				}_				try {_					Method method = (Method) this.member__					ReflectionUtils.makeAccessible(method)__					method.invoke(target, getResourceToInject(target, requestingBeanName))__				}_				catch (InvocationTargetException ex) {_					throw ex.getTargetException()__				}_			}_		};either,this,or,link,get,resource,to,inject,needs,to,be,overridden;protected,void,inject,object,target,string,requesting,bean,name,property,values,pvs,throws,throwable,if,this,is,field,field,field,field,this,member,reflection,utils,make,accessible,field,field,set,target,get,resource,to,inject,target,requesting,bean,name,else,if,check,property,skipping,pvs,return,try,method,method,method,this,member,reflection,utils,make,accessible,method,method,invoke,target,get,resource,to,inject,target,requesting,bean,name,catch,invocation,target,exception,ex,throw,ex,get,target,exception
InjectionMetadata -> InjectedElement -> protected void inject(Object target, String requestingBeanName, PropertyValues pvs) throws Throwable;1449660489;Either this or {@link #getResourceToInject} needs to be overridden.;protected void inject(Object target, String requestingBeanName, PropertyValues pvs) throws Throwable {_			if (this.isField) {_				Field field = (Field) this.member__				ReflectionUtils.makeAccessible(field)__				field.set(target, getResourceToInject(target, requestingBeanName))__			}_			else {_				if (checkPropertySkipping(pvs)) {_					return__				}_				try {_					Method method = (Method) this.member__					ReflectionUtils.makeAccessible(method)__					method.invoke(target, getResourceToInject(target, requestingBeanName))__				}_				catch (InvocationTargetException ex) {_					throw ex.getTargetException()__				}_			}_		};either,this,or,link,get,resource,to,inject,needs,to,be,overridden;protected,void,inject,object,target,string,requesting,bean,name,property,values,pvs,throws,throwable,if,this,is,field,field,field,field,this,member,reflection,utils,make,accessible,field,field,set,target,get,resource,to,inject,target,requesting,bean,name,else,if,check,property,skipping,pvs,return,try,method,method,method,this,member,reflection,utils,make,accessible,method,method,invoke,target,get,resource,to,inject,target,requesting,bean,name,catch,invocation,target,exception,ex,throw,ex,get,target,exception
InjectionMetadata -> InjectedElement -> protected void inject(Object target, String requestingBeanName, PropertyValues pvs) throws Throwable;1467730834;Either this or {@link #getResourceToInject} needs to be overridden.;protected void inject(Object target, String requestingBeanName, PropertyValues pvs) throws Throwable {_			if (this.isField) {_				Field field = (Field) this.member__				ReflectionUtils.makeAccessible(field)__				field.set(target, getResourceToInject(target, requestingBeanName))__			}_			else {_				if (checkPropertySkipping(pvs)) {_					return__				}_				try {_					Method method = (Method) this.member__					ReflectionUtils.makeAccessible(method)__					method.invoke(target, getResourceToInject(target, requestingBeanName))__				}_				catch (InvocationTargetException ex) {_					throw ex.getTargetException()__				}_			}_		};either,this,or,link,get,resource,to,inject,needs,to,be,overridden;protected,void,inject,object,target,string,requesting,bean,name,property,values,pvs,throws,throwable,if,this,is,field,field,field,field,this,member,reflection,utils,make,accessible,field,field,set,target,get,resource,to,inject,target,requesting,bean,name,else,if,check,property,skipping,pvs,return,try,method,method,method,this,member,reflection,utils,make,accessible,method,method,invoke,target,get,resource,to,inject,target,requesting,bean,name,catch,invocation,target,exception,ex,throw,ex,get,target,exception
InjectionMetadata -> InjectedElement -> protected void inject(Object target, String requestingBeanName, PropertyValues pvs) throws Throwable;1495868221;Either this or {@link #getResourceToInject} needs to be overridden.;protected void inject(Object target, String requestingBeanName, PropertyValues pvs) throws Throwable {_			if (this.isField) {_				Field field = (Field) this.member__				ReflectionUtils.makeAccessible(field)__				field.set(target, getResourceToInject(target, requestingBeanName))__			}_			else {_				if (checkPropertySkipping(pvs)) {_					return__				}_				try {_					Method method = (Method) this.member__					ReflectionUtils.makeAccessible(method)__					method.invoke(target, getResourceToInject(target, requestingBeanName))__				}_				catch (InvocationTargetException ex) {_					throw ex.getTargetException()__				}_			}_		};either,this,or,link,get,resource,to,inject,needs,to,be,overridden;protected,void,inject,object,target,string,requesting,bean,name,property,values,pvs,throws,throwable,if,this,is,field,field,field,field,this,member,reflection,utils,make,accessible,field,field,set,target,get,resource,to,inject,target,requesting,bean,name,else,if,check,property,skipping,pvs,return,try,method,method,method,this,member,reflection,utils,make,accessible,method,method,invoke,target,get,resource,to,inject,target,requesting,bean,name,catch,invocation,target,exception,ex,throw,ex,get,target,exception
InjectionMetadata -> public void clear(@Nullable PropertyValues pvs);1496837955;@since 3.2.13;public void clear(@Nullable PropertyValues pvs) {_		Collection<InjectedElement> elementsToIterate =_				(this.checkedElements != null ? this.checkedElements : this.injectedElements)__		if (!elementsToIterate.isEmpty()) {_			for (InjectedElement element : elementsToIterate) {_				element.clearPropertySkipping(pvs)__			}_		}_	};since,3,2,13;public,void,clear,nullable,property,values,pvs,collection,injected,element,elements,to,iterate,this,checked,elements,null,this,checked,elements,this,injected,elements,if,elements,to,iterate,is,empty,for,injected,element,element,elements,to,iterate,element,clear,property,skipping,pvs
InjectionMetadata -> public void clear(@Nullable PropertyValues pvs);1498780456;@since 3.2.13;public void clear(@Nullable PropertyValues pvs) {_		Collection<InjectedElement> checkedElements = this.checkedElements__		Collection<InjectedElement> elementsToIterate =_				(checkedElements != null ? checkedElements : this.injectedElements)__		if (!elementsToIterate.isEmpty()) {_			for (InjectedElement element : elementsToIterate) {_				element.clearPropertySkipping(pvs)__			}_		}_	};since,3,2,13;public,void,clear,nullable,property,values,pvs,collection,injected,element,checked,elements,this,checked,elements,collection,injected,element,elements,to,iterate,checked,elements,null,checked,elements,this,injected,elements,if,elements,to,iterate,is,empty,for,injected,element,element,elements,to,iterate,element,clear,property,skipping,pvs
InjectionMetadata -> public void clear(@Nullable PropertyValues pvs);1520528267;@since 3.2.13;public void clear(@Nullable PropertyValues pvs) {_		Collection<InjectedElement> checkedElements = this.checkedElements__		Collection<InjectedElement> elementsToIterate =_				(checkedElements != null ? checkedElements : this.injectedElements)__		if (!elementsToIterate.isEmpty()) {_			for (InjectedElement element : elementsToIterate) {_				element.clearPropertySkipping(pvs)__			}_		}_	};since,3,2,13;public,void,clear,nullable,property,values,pvs,collection,injected,element,checked,elements,this,checked,elements,collection,injected,element,elements,to,iterate,checked,elements,null,checked,elements,this,injected,elements,if,elements,to,iterate,is,empty,for,injected,element,element,elements,to,iterate,element,clear,property,skipping,pvs
InjectionMetadata -> public void clear(@Nullable PropertyValues pvs);1530174524;Clear property skipping for the contained elements._@since 3.2.13;public void clear(@Nullable PropertyValues pvs) {_		Collection<InjectedElement> checkedElements = this.checkedElements__		Collection<InjectedElement> elementsToIterate =_				(checkedElements != null ? checkedElements : this.injectedElements)__		if (!elementsToIterate.isEmpty()) {_			for (InjectedElement element : elementsToIterate) {_				element.clearPropertySkipping(pvs)__			}_		}_	};clear,property,skipping,for,the,contained,elements,since,3,2,13;public,void,clear,nullable,property,values,pvs,collection,injected,element,checked,elements,this,checked,elements,collection,injected,element,elements,to,iterate,checked,elements,null,checked,elements,this,injected,elements,if,elements,to,iterate,is,empty,for,injected,element,element,elements,to,iterate,element,clear,property,skipping,pvs
InjectionMetadata -> public void clear(@Nullable PropertyValues pvs);1533908746;Clear property skipping for the contained elements._@since 3.2.13;public void clear(@Nullable PropertyValues pvs) {_		Collection<InjectedElement> checkedElements = this.checkedElements__		Collection<InjectedElement> elementsToIterate =_				(checkedElements != null ? checkedElements : this.injectedElements)__		if (!elementsToIterate.isEmpty()) {_			for (InjectedElement element : elementsToIterate) {_				element.clearPropertySkipping(pvs)__			}_		}_	};clear,property,skipping,for,the,contained,elements,since,3,2,13;public,void,clear,nullable,property,values,pvs,collection,injected,element,checked,elements,this,checked,elements,collection,injected,element,elements,to,iterate,checked,elements,null,checked,elements,this,injected,elements,if,elements,to,iterate,is,empty,for,injected,element,element,elements,to,iterate,element,clear,property,skipping,pvs
InjectionMetadata -> InjectedElement -> protected boolean checkPropertySkipping(PropertyValues pvs);1328020251;Checks whether this injector's property needs to be skipped due to_an explicit property value having been specified. Also marks the_affected property as processed for other processors to ignore it.;protected boolean checkPropertySkipping(PropertyValues pvs) {_			if (this.skip == null) {_				if (pvs != null) {_					synchronized (pvs) {_						if (this.skip == null) {_							if (this.pd != null) {_								if (pvs.contains(this.pd.getName())) {_									_									this.skip = true__									return true__								}_								else if (pvs instanceof MutablePropertyValues) {_									((MutablePropertyValues) pvs).registerProcessedProperty(this.pd.getName())__								}_							}_						}_					}_				}_				this.skip = false__			}_			return this.skip__		};checks,whether,this,injector,s,property,needs,to,be,skipped,due,to,an,explicit,property,value,having,been,specified,also,marks,the,affected,property,as,processed,for,other,processors,to,ignore,it;protected,boolean,check,property,skipping,property,values,pvs,if,this,skip,null,if,pvs,null,synchronized,pvs,if,this,skip,null,if,this,pd,null,if,pvs,contains,this,pd,get,name,this,skip,true,return,true,else,if,pvs,instanceof,mutable,property,values,mutable,property,values,pvs,register,processed,property,this,pd,get,name,this,skip,false,return,this,skip
InjectionMetadata -> InjectedElement -> protected boolean checkPropertySkipping(PropertyValues pvs);1337162763;Checks whether this injector's property needs to be skipped due to_an explicit property value having been specified. Also marks the_affected property as processed for other processors to ignore it.;protected boolean checkPropertySkipping(PropertyValues pvs) {_			if (this.skip == null) {_				if (pvs != null) {_					synchronized (pvs) {_						if (this.skip == null) {_							if (this.pd != null) {_								if (pvs.contains(this.pd.getName())) {_									_									this.skip = true__									return true__								}_								else if (pvs instanceof MutablePropertyValues) {_									((MutablePropertyValues) pvs).registerProcessedProperty(this.pd.getName())__								}_							}_						}_					}_				}_				this.skip = false__			}_			return this.skip__		};checks,whether,this,injector,s,property,needs,to,be,skipped,due,to,an,explicit,property,value,having,been,specified,also,marks,the,affected,property,as,processed,for,other,processors,to,ignore,it;protected,boolean,check,property,skipping,property,values,pvs,if,this,skip,null,if,pvs,null,synchronized,pvs,if,this,skip,null,if,this,pd,null,if,pvs,contains,this,pd,get,name,this,skip,true,return,true,else,if,pvs,instanceof,mutable,property,values,mutable,property,values,pvs,register,processed,property,this,pd,get,name,this,skip,false,return,this,skip
InjectionMetadata -> InjectedElement -> protected boolean checkPropertySkipping(PropertyValues pvs);1348570178;Checks whether this injector's property needs to be skipped due to_an explicit property value having been specified. Also marks the_affected property as processed for other processors to ignore it.;protected boolean checkPropertySkipping(PropertyValues pvs) {_			if (this.skip != null) {_				return this.skip__			}_			if (pvs == null) {_				this.skip = false__				return false__			}_			synchronized (pvs) {_				if (this.skip != null) {_					return this.skip__				}_				if (this.pd != null) {_					if (pvs.contains(this.pd.getName())) {_						_						this.skip = true__						return true__					}_					else if (pvs instanceof MutablePropertyValues) {_						((MutablePropertyValues) pvs).registerProcessedProperty(this.pd.getName())__					}_				}_				this.skip = false__				return false__			}_		};checks,whether,this,injector,s,property,needs,to,be,skipped,due,to,an,explicit,property,value,having,been,specified,also,marks,the,affected,property,as,processed,for,other,processors,to,ignore,it;protected,boolean,check,property,skipping,property,values,pvs,if,this,skip,null,return,this,skip,if,pvs,null,this,skip,false,return,false,synchronized,pvs,if,this,skip,null,return,this,skip,if,this,pd,null,if,pvs,contains,this,pd,get,name,this,skip,true,return,true,else,if,pvs,instanceof,mutable,property,values,mutable,property,values,pvs,register,processed,property,this,pd,get,name,this,skip,false,return,false
InjectionMetadata -> InjectedElement -> protected boolean checkPropertySkipping(PropertyValues pvs);1355352386;Checks whether this injector's property needs to be skipped due to_an explicit property value having been specified. Also marks the_affected property as processed for other processors to ignore it.;protected boolean checkPropertySkipping(PropertyValues pvs) {_			if (this.skip != null) {_				return this.skip__			}_			if (pvs == null) {_				this.skip = false__				return false__			}_			synchronized (pvs) {_				if (this.skip != null) {_					return this.skip__				}_				if (this.pd != null) {_					if (pvs.contains(this.pd.getName())) {_						_						this.skip = true__						return true__					}_					else if (pvs instanceof MutablePropertyValues) {_						((MutablePropertyValues) pvs).registerProcessedProperty(this.pd.getName())__					}_				}_				this.skip = false__				return false__			}_		};checks,whether,this,injector,s,property,needs,to,be,skipped,due,to,an,explicit,property,value,having,been,specified,also,marks,the,affected,property,as,processed,for,other,processors,to,ignore,it;protected,boolean,check,property,skipping,property,values,pvs,if,this,skip,null,return,this,skip,if,pvs,null,this,skip,false,return,false,synchronized,pvs,if,this,skip,null,return,this,skip,if,this,pd,null,if,pvs,contains,this,pd,get,name,this,skip,true,return,true,else,if,pvs,instanceof,mutable,property,values,mutable,property,values,pvs,register,processed,property,this,pd,get,name,this,skip,false,return,false
InjectionMetadata -> InjectedElement -> protected boolean checkPropertySkipping(PropertyValues pvs);1377641038;Checks whether this injector's property needs to be skipped due to_an explicit property value having been specified. Also marks the_affected property as processed for other processors to ignore it.;protected boolean checkPropertySkipping(PropertyValues pvs) {_			if (this.skip != null) {_				return this.skip__			}_			if (pvs == null) {_				this.skip = false__				return false__			}_			synchronized (pvs) {_				if (this.skip != null) {_					return this.skip__				}_				if (this.pd != null) {_					if (pvs.contains(this.pd.getName())) {_						_						this.skip = true__						return true__					}_					else if (pvs instanceof MutablePropertyValues) {_						((MutablePropertyValues) pvs).registerProcessedProperty(this.pd.getName())__					}_				}_				this.skip = false__				return false__			}_		};checks,whether,this,injector,s,property,needs,to,be,skipped,due,to,an,explicit,property,value,having,been,specified,also,marks,the,affected,property,as,processed,for,other,processors,to,ignore,it;protected,boolean,check,property,skipping,property,values,pvs,if,this,skip,null,return,this,skip,if,pvs,null,this,skip,false,return,false,synchronized,pvs,if,this,skip,null,return,this,skip,if,this,pd,null,if,pvs,contains,this,pd,get,name,this,skip,true,return,true,else,if,pvs,instanceof,mutable,property,values,mutable,property,values,pvs,register,processed,property,this,pd,get,name,this,skip,false,return,false
InjectionMetadata -> InjectedElement -> protected boolean checkPropertySkipping(PropertyValues pvs);1387493371;Checks whether this injector's property needs to be skipped due to_an explicit property value having been specified. Also marks the_affected property as processed for other processors to ignore it.;protected boolean checkPropertySkipping(PropertyValues pvs) {_			if (this.skip != null) {_				return this.skip__			}_			if (pvs == null) {_				this.skip = false__				return false__			}_			synchronized (pvs) {_				if (this.skip != null) {_					return this.skip__				}_				if (this.pd != null) {_					if (pvs.contains(this.pd.getName())) {_						_						this.skip = true__						return true__					}_					else if (pvs instanceof MutablePropertyValues) {_						((MutablePropertyValues) pvs).registerProcessedProperty(this.pd.getName())__					}_				}_				this.skip = false__				return false__			}_		};checks,whether,this,injector,s,property,needs,to,be,skipped,due,to,an,explicit,property,value,having,been,specified,also,marks,the,affected,property,as,processed,for,other,processors,to,ignore,it;protected,boolean,check,property,skipping,property,values,pvs,if,this,skip,null,return,this,skip,if,pvs,null,this,skip,false,return,false,synchronized,pvs,if,this,skip,null,return,this,skip,if,this,pd,null,if,pvs,contains,this,pd,get,name,this,skip,true,return,true,else,if,pvs,instanceof,mutable,property,values,mutable,property,values,pvs,register,processed,property,this,pd,get,name,this,skip,false,return,false
InjectionMetadata -> InjectedElement -> protected boolean checkPropertySkipping(PropertyValues pvs);1419339720;Check whether this injector's property needs to be skipped due to_an explicit property value having been specified. Also marks the_affected property as processed for other processors to ignore it.;protected boolean checkPropertySkipping(PropertyValues pvs) {_			if (this.skip != null) {_				return this.skip__			}_			if (pvs == null) {_				this.skip = false__				return false__			}_			synchronized (pvs) {_				if (this.skip != null) {_					return this.skip__				}_				if (this.pd != null) {_					if (pvs.contains(this.pd.getName())) {_						_						this.skip = true__						return true__					}_					else if (pvs instanceof MutablePropertyValues) {_						((MutablePropertyValues) pvs).registerProcessedProperty(this.pd.getName())__					}_				}_				this.skip = false__				return false__			}_		};check,whether,this,injector,s,property,needs,to,be,skipped,due,to,an,explicit,property,value,having,been,specified,also,marks,the,affected,property,as,processed,for,other,processors,to,ignore,it;protected,boolean,check,property,skipping,property,values,pvs,if,this,skip,null,return,this,skip,if,pvs,null,this,skip,false,return,false,synchronized,pvs,if,this,skip,null,return,this,skip,if,this,pd,null,if,pvs,contains,this,pd,get,name,this,skip,true,return,true,else,if,pvs,instanceof,mutable,property,values,mutable,property,values,pvs,register,processed,property,this,pd,get,name,this,skip,false,return,false
InjectionMetadata -> InjectedElement -> protected boolean checkPropertySkipping(PropertyValues pvs);1449660489;Check whether this injector's property needs to be skipped due to_an explicit property value having been specified. Also marks the_affected property as processed for other processors to ignore it.;protected boolean checkPropertySkipping(PropertyValues pvs) {_			if (this.skip != null) {_				return this.skip__			}_			if (pvs == null) {_				this.skip = false__				return false__			}_			synchronized (pvs) {_				if (this.skip != null) {_					return this.skip__				}_				if (this.pd != null) {_					if (pvs.contains(this.pd.getName())) {_						_						this.skip = true__						return true__					}_					else if (pvs instanceof MutablePropertyValues) {_						((MutablePropertyValues) pvs).registerProcessedProperty(this.pd.getName())__					}_				}_				this.skip = false__				return false__			}_		};check,whether,this,injector,s,property,needs,to,be,skipped,due,to,an,explicit,property,value,having,been,specified,also,marks,the,affected,property,as,processed,for,other,processors,to,ignore,it;protected,boolean,check,property,skipping,property,values,pvs,if,this,skip,null,return,this,skip,if,pvs,null,this,skip,false,return,false,synchronized,pvs,if,this,skip,null,return,this,skip,if,this,pd,null,if,pvs,contains,this,pd,get,name,this,skip,true,return,true,else,if,pvs,instanceof,mutable,property,values,mutable,property,values,pvs,register,processed,property,this,pd,get,name,this,skip,false,return,false
InjectionMetadata -> InjectedElement -> protected boolean checkPropertySkipping(PropertyValues pvs);1467730834;Check whether this injector's property needs to be skipped due to_an explicit property value having been specified. Also marks the_affected property as processed for other processors to ignore it.;protected boolean checkPropertySkipping(PropertyValues pvs) {_			if (this.skip != null) {_				return this.skip__			}_			if (pvs == null) {_				this.skip = false__				return false__			}_			synchronized (pvs) {_				if (this.skip != null) {_					return this.skip__				}_				if (this.pd != null) {_					if (pvs.contains(this.pd.getName())) {_						_						this.skip = true__						return true__					}_					else if (pvs instanceof MutablePropertyValues) {_						((MutablePropertyValues) pvs).registerProcessedProperty(this.pd.getName())__					}_				}_				this.skip = false__				return false__			}_		};check,whether,this,injector,s,property,needs,to,be,skipped,due,to,an,explicit,property,value,having,been,specified,also,marks,the,affected,property,as,processed,for,other,processors,to,ignore,it;protected,boolean,check,property,skipping,property,values,pvs,if,this,skip,null,return,this,skip,if,pvs,null,this,skip,false,return,false,synchronized,pvs,if,this,skip,null,return,this,skip,if,this,pd,null,if,pvs,contains,this,pd,get,name,this,skip,true,return,true,else,if,pvs,instanceof,mutable,property,values,mutable,property,values,pvs,register,processed,property,this,pd,get,name,this,skip,false,return,false
InjectionMetadata -> InjectedElement -> protected boolean checkPropertySkipping(PropertyValues pvs);1495868221;Check whether this injector's property needs to be skipped due to_an explicit property value having been specified. Also marks the_affected property as processed for other processors to ignore it.;protected boolean checkPropertySkipping(PropertyValues pvs) {_			if (this.skip != null) {_				return this.skip__			}_			if (pvs == null) {_				this.skip = false__				return false__			}_			synchronized (pvs) {_				if (this.skip != null) {_					return this.skip__				}_				if (this.pd != null) {_					if (pvs.contains(this.pd.getName())) {_						_						this.skip = true__						return true__					}_					else if (pvs instanceof MutablePropertyValues) {_						((MutablePropertyValues) pvs).registerProcessedProperty(this.pd.getName())__					}_				}_				this.skip = false__				return false__			}_		};check,whether,this,injector,s,property,needs,to,be,skipped,due,to,an,explicit,property,value,having,been,specified,also,marks,the,affected,property,as,processed,for,other,processors,to,ignore,it;protected,boolean,check,property,skipping,property,values,pvs,if,this,skip,null,return,this,skip,if,pvs,null,this,skip,false,return,false,synchronized,pvs,if,this,skip,null,return,this,skip,if,this,pd,null,if,pvs,contains,this,pd,get,name,this,skip,true,return,true,else,if,pvs,instanceof,mutable,property,values,mutable,property,values,pvs,register,processed,property,this,pd,get,name,this,skip,false,return,false
InjectionMetadata -> InjectedElement -> protected Object getResourceToInject(Object target, String requestingBeanName);1328020251;Either this or {@link #inject} needs to be overridden.;protected Object getResourceToInject(Object target, String requestingBeanName) {_			return null__		};either,this,or,link,inject,needs,to,be,overridden;protected,object,get,resource,to,inject,object,target,string,requesting,bean,name,return,null
InjectionMetadata -> InjectedElement -> protected Object getResourceToInject(Object target, String requestingBeanName);1337162763;Either this or {@link #inject} needs to be overridden.;protected Object getResourceToInject(Object target, String requestingBeanName) {_			return null__		};either,this,or,link,inject,needs,to,be,overridden;protected,object,get,resource,to,inject,object,target,string,requesting,bean,name,return,null
InjectionMetadata -> InjectedElement -> protected Object getResourceToInject(Object target, String requestingBeanName);1348570178;Either this or {@link #inject} needs to be overridden.;protected Object getResourceToInject(Object target, String requestingBeanName) {_			return null__		};either,this,or,link,inject,needs,to,be,overridden;protected,object,get,resource,to,inject,object,target,string,requesting,bean,name,return,null
InjectionMetadata -> InjectedElement -> protected Object getResourceToInject(Object target, String requestingBeanName);1355352386;Either this or {@link #inject} needs to be overridden.;protected Object getResourceToInject(Object target, String requestingBeanName) {_			return null__		};either,this,or,link,inject,needs,to,be,overridden;protected,object,get,resource,to,inject,object,target,string,requesting,bean,name,return,null
InjectionMetadata -> InjectedElement -> protected Object getResourceToInject(Object target, String requestingBeanName);1377641038;Either this or {@link #inject} needs to be overridden.;protected Object getResourceToInject(Object target, String requestingBeanName) {_			return null__		};either,this,or,link,inject,needs,to,be,overridden;protected,object,get,resource,to,inject,object,target,string,requesting,bean,name,return,null
InjectionMetadata -> InjectedElement -> protected Object getResourceToInject(Object target, String requestingBeanName);1387493371;Either this or {@link #inject} needs to be overridden.;protected Object getResourceToInject(Object target, String requestingBeanName) {_			return null__		};either,this,or,link,inject,needs,to,be,overridden;protected,object,get,resource,to,inject,object,target,string,requesting,bean,name,return,null
InjectionMetadata -> InjectedElement -> protected Object getResourceToInject(Object target, String requestingBeanName);1419339720;Either this or {@link #inject} needs to be overridden.;protected Object getResourceToInject(Object target, String requestingBeanName) {_			return null__		};either,this,or,link,inject,needs,to,be,overridden;protected,object,get,resource,to,inject,object,target,string,requesting,bean,name,return,null
InjectionMetadata -> InjectedElement -> protected Object getResourceToInject(Object target, String requestingBeanName);1449660489;Either this or {@link #inject} needs to be overridden.;protected Object getResourceToInject(Object target, String requestingBeanName) {_			return null__		};either,this,or,link,inject,needs,to,be,overridden;protected,object,get,resource,to,inject,object,target,string,requesting,bean,name,return,null
InjectionMetadata -> InjectedElement -> protected Object getResourceToInject(Object target, String requestingBeanName);1467730834;Either this or {@link #inject} needs to be overridden.;protected Object getResourceToInject(Object target, String requestingBeanName) {_			return null__		};either,this,or,link,inject,needs,to,be,overridden;protected,object,get,resource,to,inject,object,target,string,requesting,bean,name,return,null
InjectionMetadata -> InjectedElement -> protected void clearPropertySkipping(PropertyValues pvs);1419339720;@since 3.2.13;protected void clearPropertySkipping(PropertyValues pvs) {_			if (pvs == null) {_				return__			}_			synchronized (pvs) {_				if (Boolean.FALSE.equals(this.skip) && this.pd != null && pvs instanceof MutablePropertyValues) {_					((MutablePropertyValues) pvs).clearProcessedProperty(this.pd.getName())__				}_			}_		};since,3,2,13;protected,void,clear,property,skipping,property,values,pvs,if,pvs,null,return,synchronized,pvs,if,boolean,false,equals,this,skip,this,pd,null,pvs,instanceof,mutable,property,values,mutable,property,values,pvs,clear,processed,property,this,pd,get,name
InjectionMetadata -> InjectedElement -> protected void clearPropertySkipping(PropertyValues pvs);1449660489;@since 3.2.13;protected void clearPropertySkipping(PropertyValues pvs) {_			if (pvs == null) {_				return__			}_			synchronized (pvs) {_				if (Boolean.FALSE.equals(this.skip) && this.pd != null && pvs instanceof MutablePropertyValues) {_					((MutablePropertyValues) pvs).clearProcessedProperty(this.pd.getName())__				}_			}_		};since,3,2,13;protected,void,clear,property,skipping,property,values,pvs,if,pvs,null,return,synchronized,pvs,if,boolean,false,equals,this,skip,this,pd,null,pvs,instanceof,mutable,property,values,mutable,property,values,pvs,clear,processed,property,this,pd,get,name
InjectionMetadata -> InjectedElement -> protected void clearPropertySkipping(PropertyValues pvs);1467730834;@since 3.2.13;protected void clearPropertySkipping(PropertyValues pvs) {_			if (pvs == null) {_				return__			}_			synchronized (pvs) {_				if (Boolean.FALSE.equals(this.skip) && this.pd != null && pvs instanceof MutablePropertyValues) {_					((MutablePropertyValues) pvs).clearProcessedProperty(this.pd.getName())__				}_			}_		};since,3,2,13;protected,void,clear,property,skipping,property,values,pvs,if,pvs,null,return,synchronized,pvs,if,boolean,false,equals,this,skip,this,pd,null,pvs,instanceof,mutable,property,values,mutable,property,values,pvs,clear,processed,property,this,pd,get,name
InjectionMetadata -> InjectedElement -> protected void clearPropertySkipping(PropertyValues pvs);1495868221;@since 3.2.13;protected void clearPropertySkipping(PropertyValues pvs) {_			if (pvs == null) {_				return__			}_			synchronized (pvs) {_				if (Boolean.FALSE.equals(this.skip) && this.pd != null && pvs instanceof MutablePropertyValues) {_					((MutablePropertyValues) pvs).clearProcessedProperty(this.pd.getName())__				}_			}_		};since,3,2,13;protected,void,clear,property,skipping,property,values,pvs,if,pvs,null,return,synchronized,pvs,if,boolean,false,equals,this,skip,this,pd,null,pvs,instanceof,mutable,property,values,mutable,property,values,pvs,clear,processed,property,this,pd,get,name
InjectionMetadata -> InjectedElement -> protected void clearPropertySkipping(@Nullable PropertyValues pvs);1496837955;@since 3.2.13;protected void clearPropertySkipping(@Nullable PropertyValues pvs) {_			if (pvs == null) {_				return__			}_			synchronized (pvs) {_				if (Boolean.FALSE.equals(this.skip) && this.pd != null && pvs instanceof MutablePropertyValues) {_					((MutablePropertyValues) pvs).clearProcessedProperty(this.pd.getName())__				}_			}_		};since,3,2,13;protected,void,clear,property,skipping,nullable,property,values,pvs,if,pvs,null,return,synchronized,pvs,if,boolean,false,equals,this,skip,this,pd,null,pvs,instanceof,mutable,property,values,mutable,property,values,pvs,clear,processed,property,this,pd,get,name
InjectionMetadata -> InjectedElement -> protected void clearPropertySkipping(@Nullable PropertyValues pvs);1498780456;@since 3.2.13;protected void clearPropertySkipping(@Nullable PropertyValues pvs) {_			if (pvs == null) {_				return__			}_			synchronized (pvs) {_				if (Boolean.FALSE.equals(this.skip) && this.pd != null && pvs instanceof MutablePropertyValues) {_					((MutablePropertyValues) pvs).clearProcessedProperty(this.pd.getName())__				}_			}_		};since,3,2,13;protected,void,clear,property,skipping,nullable,property,values,pvs,if,pvs,null,return,synchronized,pvs,if,boolean,false,equals,this,skip,this,pd,null,pvs,instanceof,mutable,property,values,mutable,property,values,pvs,clear,processed,property,this,pd,get,name
InjectionMetadata -> InjectedElement -> protected void clearPropertySkipping(@Nullable PropertyValues pvs);1520528267;@since 3.2.13;protected void clearPropertySkipping(@Nullable PropertyValues pvs) {_			if (pvs == null) {_				return__			}_			synchronized (pvs) {_				if (Boolean.FALSE.equals(this.skip) && this.pd != null && pvs instanceof MutablePropertyValues) {_					((MutablePropertyValues) pvs).clearProcessedProperty(this.pd.getName())__				}_			}_		};since,3,2,13;protected,void,clear,property,skipping,nullable,property,values,pvs,if,pvs,null,return,synchronized,pvs,if,boolean,false,equals,this,skip,this,pd,null,pvs,instanceof,mutable,property,values,mutable,property,values,pvs,clear,processed,property,this,pd,get,name
InjectionMetadata -> InjectedElement -> protected void clearPropertySkipping(@Nullable PropertyValues pvs);1530174524;Clear property skipping for this element._@since 3.2.13;protected void clearPropertySkipping(@Nullable PropertyValues pvs) {_			if (pvs == null) {_				return__			}_			synchronized (pvs) {_				if (Boolean.FALSE.equals(this.skip) && this.pd != null && pvs instanceof MutablePropertyValues) {_					((MutablePropertyValues) pvs).clearProcessedProperty(this.pd.getName())__				}_			}_		};clear,property,skipping,for,this,element,since,3,2,13;protected,void,clear,property,skipping,nullable,property,values,pvs,if,pvs,null,return,synchronized,pvs,if,boolean,false,equals,this,skip,this,pd,null,pvs,instanceof,mutable,property,values,mutable,property,values,pvs,clear,processed,property,this,pd,get,name
InjectionMetadata -> InjectedElement -> protected void clearPropertySkipping(@Nullable PropertyValues pvs);1533908746;Clear property skipping for this element._@since 3.2.13;protected void clearPropertySkipping(@Nullable PropertyValues pvs) {_			if (pvs == null) {_				return__			}_			synchronized (pvs) {_				if (Boolean.FALSE.equals(this.skip) && this.pd != null && pvs instanceof MutablePropertyValues) {_					((MutablePropertyValues) pvs).clearProcessedProperty(this.pd.getName())__				}_			}_		};clear,property,skipping,for,this,element,since,3,2,13;protected,void,clear,property,skipping,nullable,property,values,pvs,if,pvs,null,return,synchronized,pvs,if,boolean,false,equals,this,skip,this,pd,null,pvs,instanceof,mutable,property,values,mutable,property,values,pvs,clear,processed,property,this,pd,get,name
InjectionMetadata -> InjectedElement -> protected boolean checkPropertySkipping(@Nullable PropertyValues pvs);1496837955;Check whether this injector's property needs to be skipped due to_an explicit property value having been specified. Also marks the_affected property as processed for other processors to ignore it.;protected boolean checkPropertySkipping(@Nullable PropertyValues pvs) {_			if (this.skip != null) {_				return this.skip__			}_			if (pvs == null) {_				this.skip = false__				return false__			}_			synchronized (pvs) {_				if (this.skip != null) {_					return this.skip__				}_				if (this.pd != null) {_					if (pvs.contains(this.pd.getName())) {_						_						this.skip = true__						return true__					}_					else if (pvs instanceof MutablePropertyValues) {_						((MutablePropertyValues) pvs).registerProcessedProperty(this.pd.getName())__					}_				}_				this.skip = false__				return false__			}_		};check,whether,this,injector,s,property,needs,to,be,skipped,due,to,an,explicit,property,value,having,been,specified,also,marks,the,affected,property,as,processed,for,other,processors,to,ignore,it;protected,boolean,check,property,skipping,nullable,property,values,pvs,if,this,skip,null,return,this,skip,if,pvs,null,this,skip,false,return,false,synchronized,pvs,if,this,skip,null,return,this,skip,if,this,pd,null,if,pvs,contains,this,pd,get,name,this,skip,true,return,true,else,if,pvs,instanceof,mutable,property,values,mutable,property,values,pvs,register,processed,property,this,pd,get,name,this,skip,false,return,false
InjectionMetadata -> InjectedElement -> protected boolean checkPropertySkipping(@Nullable PropertyValues pvs);1498780456;Check whether this injector's property needs to be skipped due to_an explicit property value having been specified. Also marks the_affected property as processed for other processors to ignore it.;protected boolean checkPropertySkipping(@Nullable PropertyValues pvs) {_			Boolean skip = this.skip__			if (skip != null) {_				return skip__			}_			if (pvs == null) {_				this.skip = false__				return false__			}_			synchronized (pvs) {_				skip = this.skip__				if (skip != null) {_					return skip__				}_				if (this.pd != null) {_					if (pvs.contains(this.pd.getName())) {_						_						this.skip = true__						return true__					}_					else if (pvs instanceof MutablePropertyValues) {_						((MutablePropertyValues) pvs).registerProcessedProperty(this.pd.getName())__					}_				}_				this.skip = false__				return false__			}_		};check,whether,this,injector,s,property,needs,to,be,skipped,due,to,an,explicit,property,value,having,been,specified,also,marks,the,affected,property,as,processed,for,other,processors,to,ignore,it;protected,boolean,check,property,skipping,nullable,property,values,pvs,boolean,skip,this,skip,if,skip,null,return,skip,if,pvs,null,this,skip,false,return,false,synchronized,pvs,skip,this,skip,if,skip,null,return,skip,if,this,pd,null,if,pvs,contains,this,pd,get,name,this,skip,true,return,true,else,if,pvs,instanceof,mutable,property,values,mutable,property,values,pvs,register,processed,property,this,pd,get,name,this,skip,false,return,false
InjectionMetadata -> InjectedElement -> protected boolean checkPropertySkipping(@Nullable PropertyValues pvs);1520528267;Check whether this injector's property needs to be skipped due to_an explicit property value having been specified. Also marks the_affected property as processed for other processors to ignore it.;protected boolean checkPropertySkipping(@Nullable PropertyValues pvs) {_			Boolean skip = this.skip__			if (skip != null) {_				return skip__			}_			if (pvs == null) {_				this.skip = false__				return false__			}_			synchronized (pvs) {_				skip = this.skip__				if (skip != null) {_					return skip__				}_				if (this.pd != null) {_					if (pvs.contains(this.pd.getName())) {_						_						this.skip = true__						return true__					}_					else if (pvs instanceof MutablePropertyValues) {_						((MutablePropertyValues) pvs).registerProcessedProperty(this.pd.getName())__					}_				}_				this.skip = false__				return false__			}_		};check,whether,this,injector,s,property,needs,to,be,skipped,due,to,an,explicit,property,value,having,been,specified,also,marks,the,affected,property,as,processed,for,other,processors,to,ignore,it;protected,boolean,check,property,skipping,nullable,property,values,pvs,boolean,skip,this,skip,if,skip,null,return,skip,if,pvs,null,this,skip,false,return,false,synchronized,pvs,skip,this,skip,if,skip,null,return,skip,if,this,pd,null,if,pvs,contains,this,pd,get,name,this,skip,true,return,true,else,if,pvs,instanceof,mutable,property,values,mutable,property,values,pvs,register,processed,property,this,pd,get,name,this,skip,false,return,false
InjectionMetadata -> InjectedElement -> protected boolean checkPropertySkipping(@Nullable PropertyValues pvs);1530174524;Check whether this injector's property needs to be skipped due to_an explicit property value having been specified. Also marks the_affected property as processed for other processors to ignore it.;protected boolean checkPropertySkipping(@Nullable PropertyValues pvs) {_			Boolean skip = this.skip__			if (skip != null) {_				return skip__			}_			if (pvs == null) {_				this.skip = false__				return false__			}_			synchronized (pvs) {_				skip = this.skip__				if (skip != null) {_					return skip__				}_				if (this.pd != null) {_					if (pvs.contains(this.pd.getName())) {_						_						this.skip = true__						return true__					}_					else if (pvs instanceof MutablePropertyValues) {_						((MutablePropertyValues) pvs).registerProcessedProperty(this.pd.getName())__					}_				}_				this.skip = false__				return false__			}_		};check,whether,this,injector,s,property,needs,to,be,skipped,due,to,an,explicit,property,value,having,been,specified,also,marks,the,affected,property,as,processed,for,other,processors,to,ignore,it;protected,boolean,check,property,skipping,nullable,property,values,pvs,boolean,skip,this,skip,if,skip,null,return,skip,if,pvs,null,this,skip,false,return,false,synchronized,pvs,skip,this,skip,if,skip,null,return,skip,if,this,pd,null,if,pvs,contains,this,pd,get,name,this,skip,true,return,true,else,if,pvs,instanceof,mutable,property,values,mutable,property,values,pvs,register,processed,property,this,pd,get,name,this,skip,false,return,false
InjectionMetadata -> InjectedElement -> protected boolean checkPropertySkipping(@Nullable PropertyValues pvs);1533908746;Check whether this injector's property needs to be skipped due to_an explicit property value having been specified. Also marks the_affected property as processed for other processors to ignore it.;protected boolean checkPropertySkipping(@Nullable PropertyValues pvs) {_			Boolean skip = this.skip__			if (skip != null) {_				return skip__			}_			if (pvs == null) {_				this.skip = false__				return false__			}_			synchronized (pvs) {_				skip = this.skip__				if (skip != null) {_					return skip__				}_				if (this.pd != null) {_					if (pvs.contains(this.pd.getName())) {_						_						this.skip = true__						return true__					}_					else if (pvs instanceof MutablePropertyValues) {_						((MutablePropertyValues) pvs).registerProcessedProperty(this.pd.getName())__					}_				}_				this.skip = false__				return false__			}_		};check,whether,this,injector,s,property,needs,to,be,skipped,due,to,an,explicit,property,value,having,been,specified,also,marks,the,affected,property,as,processed,for,other,processors,to,ignore,it;protected,boolean,check,property,skipping,nullable,property,values,pvs,boolean,skip,this,skip,if,skip,null,return,skip,if,pvs,null,this,skip,false,return,false,synchronized,pvs,skip,this,skip,if,skip,null,return,skip,if,this,pd,null,if,pvs,contains,this,pd,get,name,this,skip,true,return,true,else,if,pvs,instanceof,mutable,property,values,mutable,property,values,pvs,register,processed,property,this,pd,get,name,this,skip,false,return,false
InjectionMetadata -> public void clear(PropertyValues pvs);1419339720;@since 3.2.13;public void clear(PropertyValues pvs) {_		Collection<InjectedElement> elementsToIterate =_				(this.checkedElements != null ? this.checkedElements : this.injectedElements)__		if (!elementsToIterate.isEmpty()) {_			for (InjectedElement element : elementsToIterate) {_				element.clearPropertySkipping(pvs)__			}_		}_	};since,3,2,13;public,void,clear,property,values,pvs,collection,injected,element,elements,to,iterate,this,checked,elements,null,this,checked,elements,this,injected,elements,if,elements,to,iterate,is,empty,for,injected,element,element,elements,to,iterate,element,clear,property,skipping,pvs
InjectionMetadata -> public void clear(PropertyValues pvs);1449660489;@since 3.2.13;public void clear(PropertyValues pvs) {_		Collection<InjectedElement> elementsToIterate =_				(this.checkedElements != null ? this.checkedElements : this.injectedElements)__		if (!elementsToIterate.isEmpty()) {_			for (InjectedElement element : elementsToIterate) {_				element.clearPropertySkipping(pvs)__			}_		}_	};since,3,2,13;public,void,clear,property,values,pvs,collection,injected,element,elements,to,iterate,this,checked,elements,null,this,checked,elements,this,injected,elements,if,elements,to,iterate,is,empty,for,injected,element,element,elements,to,iterate,element,clear,property,skipping,pvs
InjectionMetadata -> public void clear(PropertyValues pvs);1467730834;@since 3.2.13;public void clear(PropertyValues pvs) {_		Collection<InjectedElement> elementsToIterate =_				(this.checkedElements != null ? this.checkedElements : this.injectedElements)__		if (!elementsToIterate.isEmpty()) {_			for (InjectedElement element : elementsToIterate) {_				element.clearPropertySkipping(pvs)__			}_		}_	};since,3,2,13;public,void,clear,property,values,pvs,collection,injected,element,elements,to,iterate,this,checked,elements,null,this,checked,elements,this,injected,elements,if,elements,to,iterate,is,empty,for,injected,element,element,elements,to,iterate,element,clear,property,skipping,pvs
InjectionMetadata -> public void clear(PropertyValues pvs);1495868221;@since 3.2.13;public void clear(PropertyValues pvs) {_		Collection<InjectedElement> elementsToIterate =_				(this.checkedElements != null ? this.checkedElements : this.injectedElements)__		if (!elementsToIterate.isEmpty()) {_			for (InjectedElement element : elementsToIterate) {_				element.clearPropertySkipping(pvs)__			}_		}_	};since,3,2,13;public,void,clear,property,values,pvs,collection,injected,element,elements,to,iterate,this,checked,elements,null,this,checked,elements,this,injected,elements,if,elements,to,iterate,is,empty,for,injected,element,element,elements,to,iterate,element,clear,property,skipping,pvs
InjectionMetadata -> InjectedElement -> protected void inject(Object target, @Nullable String requestingBeanName, @Nullable PropertyValues pvs) 				throws Throwable;1496837955;Either this or {@link #getResourceToInject} needs to be overridden.;protected void inject(Object target, @Nullable String requestingBeanName, @Nullable PropertyValues pvs)_				throws Throwable {__			if (this.isField) {_				Field field = (Field) this.member__				ReflectionUtils.makeAccessible(field)__				field.set(target, getResourceToInject(target, requestingBeanName))__			}_			else {_				if (checkPropertySkipping(pvs)) {_					return__				}_				try {_					Method method = (Method) this.member__					ReflectionUtils.makeAccessible(method)__					method.invoke(target, getResourceToInject(target, requestingBeanName))__				}_				catch (InvocationTargetException ex) {_					throw ex.getTargetException()__				}_			}_		};either,this,or,link,get,resource,to,inject,needs,to,be,overridden;protected,void,inject,object,target,nullable,string,requesting,bean,name,nullable,property,values,pvs,throws,throwable,if,this,is,field,field,field,field,this,member,reflection,utils,make,accessible,field,field,set,target,get,resource,to,inject,target,requesting,bean,name,else,if,check,property,skipping,pvs,return,try,method,method,method,this,member,reflection,utils,make,accessible,method,method,invoke,target,get,resource,to,inject,target,requesting,bean,name,catch,invocation,target,exception,ex,throw,ex,get,target,exception
InjectionMetadata -> InjectedElement -> protected void inject(Object target, @Nullable String requestingBeanName, @Nullable PropertyValues pvs) 				throws Throwable;1498780456;Either this or {@link #getResourceToInject} needs to be overridden.;protected void inject(Object target, @Nullable String requestingBeanName, @Nullable PropertyValues pvs)_				throws Throwable {__			if (this.isField) {_				Field field = (Field) this.member__				ReflectionUtils.makeAccessible(field)__				field.set(target, getResourceToInject(target, requestingBeanName))__			}_			else {_				if (checkPropertySkipping(pvs)) {_					return__				}_				try {_					Method method = (Method) this.member__					ReflectionUtils.makeAccessible(method)__					method.invoke(target, getResourceToInject(target, requestingBeanName))__				}_				catch (InvocationTargetException ex) {_					throw ex.getTargetException()__				}_			}_		};either,this,or,link,get,resource,to,inject,needs,to,be,overridden;protected,void,inject,object,target,nullable,string,requesting,bean,name,nullable,property,values,pvs,throws,throwable,if,this,is,field,field,field,field,this,member,reflection,utils,make,accessible,field,field,set,target,get,resource,to,inject,target,requesting,bean,name,else,if,check,property,skipping,pvs,return,try,method,method,method,this,member,reflection,utils,make,accessible,method,method,invoke,target,get,resource,to,inject,target,requesting,bean,name,catch,invocation,target,exception,ex,throw,ex,get,target,exception
InjectionMetadata -> InjectedElement -> protected void inject(Object target, @Nullable String requestingBeanName, @Nullable PropertyValues pvs) 				throws Throwable;1520528267;Either this or {@link #getResourceToInject} needs to be overridden.;protected void inject(Object target, @Nullable String requestingBeanName, @Nullable PropertyValues pvs)_				throws Throwable {__			if (this.isField) {_				Field field = (Field) this.member__				ReflectionUtils.makeAccessible(field)__				field.set(target, getResourceToInject(target, requestingBeanName))__			}_			else {_				if (checkPropertySkipping(pvs)) {_					return__				}_				try {_					Method method = (Method) this.member__					ReflectionUtils.makeAccessible(method)__					method.invoke(target, getResourceToInject(target, requestingBeanName))__				}_				catch (InvocationTargetException ex) {_					throw ex.getTargetException()__				}_			}_		};either,this,or,link,get,resource,to,inject,needs,to,be,overridden;protected,void,inject,object,target,nullable,string,requesting,bean,name,nullable,property,values,pvs,throws,throwable,if,this,is,field,field,field,field,this,member,reflection,utils,make,accessible,field,field,set,target,get,resource,to,inject,target,requesting,bean,name,else,if,check,property,skipping,pvs,return,try,method,method,method,this,member,reflection,utils,make,accessible,method,method,invoke,target,get,resource,to,inject,target,requesting,bean,name,catch,invocation,target,exception,ex,throw,ex,get,target,exception
InjectionMetadata -> InjectedElement -> protected void inject(Object target, @Nullable String requestingBeanName, @Nullable PropertyValues pvs) 				throws Throwable;1530174524;Either this or {@link #getResourceToInject} needs to be overridden.;protected void inject(Object target, @Nullable String requestingBeanName, @Nullable PropertyValues pvs)_				throws Throwable {__			if (this.isField) {_				Field field = (Field) this.member__				ReflectionUtils.makeAccessible(field)__				field.set(target, getResourceToInject(target, requestingBeanName))__			}_			else {_				if (checkPropertySkipping(pvs)) {_					return__				}_				try {_					Method method = (Method) this.member__					ReflectionUtils.makeAccessible(method)__					method.invoke(target, getResourceToInject(target, requestingBeanName))__				}_				catch (InvocationTargetException ex) {_					throw ex.getTargetException()__				}_			}_		};either,this,or,link,get,resource,to,inject,needs,to,be,overridden;protected,void,inject,object,target,nullable,string,requesting,bean,name,nullable,property,values,pvs,throws,throwable,if,this,is,field,field,field,field,this,member,reflection,utils,make,accessible,field,field,set,target,get,resource,to,inject,target,requesting,bean,name,else,if,check,property,skipping,pvs,return,try,method,method,method,this,member,reflection,utils,make,accessible,method,method,invoke,target,get,resource,to,inject,target,requesting,bean,name,catch,invocation,target,exception,ex,throw,ex,get,target,exception
InjectionMetadata -> InjectedElement -> protected void inject(Object target, @Nullable String requestingBeanName, @Nullable PropertyValues pvs) 				throws Throwable;1533908746;Either this or {@link #getResourceToInject} needs to be overridden.;protected void inject(Object target, @Nullable String requestingBeanName, @Nullable PropertyValues pvs)_				throws Throwable {__			if (this.isField) {_				Field field = (Field) this.member__				ReflectionUtils.makeAccessible(field)__				field.set(target, getResourceToInject(target, requestingBeanName))__			}_			else {_				if (checkPropertySkipping(pvs)) {_					return__				}_				try {_					Method method = (Method) this.member__					ReflectionUtils.makeAccessible(method)__					method.invoke(target, getResourceToInject(target, requestingBeanName))__				}_				catch (InvocationTargetException ex) {_					throw ex.getTargetException()__				}_			}_		};either,this,or,link,get,resource,to,inject,needs,to,be,overridden;protected,void,inject,object,target,nullable,string,requesting,bean,name,nullable,property,values,pvs,throws,throwable,if,this,is,field,field,field,field,this,member,reflection,utils,make,accessible,field,field,set,target,get,resource,to,inject,target,requesting,bean,name,else,if,check,property,skipping,pvs,return,try,method,method,method,this,member,reflection,utils,make,accessible,method,method,invoke,target,get,resource,to,inject,target,requesting,bean,name,catch,invocation,target,exception,ex,throw,ex,get,target,exception
InjectionMetadata -> InjectedElement -> @Nullable 		protected Object getResourceToInject(Object target, @Nullable String requestingBeanName);1496837955;Either this or {@link #inject} needs to be overridden.;@Nullable_		protected Object getResourceToInject(Object target, @Nullable String requestingBeanName) {_			return null__		};either,this,or,link,inject,needs,to,be,overridden;nullable,protected,object,get,resource,to,inject,object,target,nullable,string,requesting,bean,name,return,null
InjectionMetadata -> InjectedElement -> @Nullable 		protected Object getResourceToInject(Object target, @Nullable String requestingBeanName);1498780456;Either this or {@link #inject} needs to be overridden.;@Nullable_		protected Object getResourceToInject(Object target, @Nullable String requestingBeanName) {_			return null__		};either,this,or,link,inject,needs,to,be,overridden;nullable,protected,object,get,resource,to,inject,object,target,nullable,string,requesting,bean,name,return,null
InjectionMetadata -> InjectedElement -> @Nullable 		protected Object getResourceToInject(Object target, @Nullable String requestingBeanName);1520528267;Either this or {@link #inject} needs to be overridden.;@Nullable_		protected Object getResourceToInject(Object target, @Nullable String requestingBeanName) {_			return null__		};either,this,or,link,inject,needs,to,be,overridden;nullable,protected,object,get,resource,to,inject,object,target,nullable,string,requesting,bean,name,return,null
InjectionMetadata -> InjectedElement -> @Nullable 		protected Object getResourceToInject(Object target, @Nullable String requestingBeanName);1530174524;Either this or {@link #inject} needs to be overridden.;@Nullable_		protected Object getResourceToInject(Object target, @Nullable String requestingBeanName) {_			return null__		};either,this,or,link,inject,needs,to,be,overridden;nullable,protected,object,get,resource,to,inject,object,target,nullable,string,requesting,bean,name,return,null
InjectionMetadata -> InjectedElement -> @Nullable 		protected Object getResourceToInject(Object target, @Nullable String requestingBeanName);1533908746;Either this or {@link #inject} needs to be overridden.;@Nullable_		protected Object getResourceToInject(Object target, @Nullable String requestingBeanName) {_			return null__		};either,this,or,link,inject,needs,to,be,overridden;nullable,protected,object,get,resource,to,inject,object,target,nullable,string,requesting,bean,name,return,null
