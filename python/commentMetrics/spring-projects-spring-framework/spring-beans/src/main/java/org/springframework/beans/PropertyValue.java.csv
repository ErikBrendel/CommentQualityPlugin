# id;timestamp;commentText;codeText;commentWords;codeWords
PropertyValue -> public void setOptional(boolean optional);1473794945;Set whether this is an optional value, that is, to be ignored_when no corresponding property exists on the target class._@since 3.0;public void setOptional(boolean optional) {_		this.optional = optional__	};set,whether,this,is,an,optional,value,that,is,to,be,ignored,when,no,corresponding,property,exists,on,the,target,class,since,3,0;public,void,set,optional,boolean,optional,this,optional,optional
PropertyValue -> public void setOptional(boolean optional);1473803321;Set whether this is an optional value, that is, to be ignored_when no corresponding property exists on the target class._@since 3.0;public void setOptional(boolean optional) {_		this.optional = optional__	};set,whether,this,is,an,optional,value,that,is,to,be,ignored,when,no,corresponding,property,exists,on,the,target,class,since,3,0;public,void,set,optional,boolean,optional,this,optional,optional
PropertyValue -> public void setOptional(boolean optional);1496837955;Set whether this is an optional value, that is, to be ignored_when no corresponding property exists on the target class._@since 3.0;public void setOptional(boolean optional) {_		this.optional = optional__	};set,whether,this,is,an,optional,value,that,is,to,be,ignored,when,no,corresponding,property,exists,on,the,target,class,since,3,0;public,void,set,optional,boolean,optional,this,optional,optional
PropertyValue -> public void setOptional(boolean optional);1498780456;Set whether this is an optional value, that is, to be ignored_when no corresponding property exists on the target class._@since 3.0;public void setOptional(boolean optional) {_		this.optional = optional__	};set,whether,this,is,an,optional,value,that,is,to,be,ignored,when,no,corresponding,property,exists,on,the,target,class,since,3,0;public,void,set,optional,boolean,optional,this,optional,optional
PropertyValue -> public void setOptional(boolean optional);1506097334;Set whether this is an optional value, that is, to be ignored_when no corresponding property exists on the target class._@since 3.0;public void setOptional(boolean optional) {_		this.optional = optional__	};set,whether,this,is,an,optional,value,that,is,to,be,ignored,when,no,corresponding,property,exists,on,the,target,class,since,3,0;public,void,set,optional,boolean,optional,this,optional,optional
PropertyValue -> public void setOptional(boolean optional);1530174524;Set whether this is an optional value, that is, to be ignored_when no corresponding property exists on the target class._@since 3.0;public void setOptional(boolean optional) {_		this.optional = optional__	};set,whether,this,is,an,optional,value,that,is,to,be,ignored,when,no,corresponding,property,exists,on,the,target,class,since,3,0;public,void,set,optional,boolean,optional,this,optional,optional
PropertyValue -> public PropertyValue(String name, Object value);1328020251;Create a new PropertyValue instance._@param name the name of the property (never <code>null</code>)_@param value the value of the property (possibly before type conversion);public PropertyValue(String name, Object value) {_		this.name = name__		this.value = value__	};create,a,new,property,value,instance,param,name,the,name,of,the,property,never,code,null,code,param,value,the,value,of,the,property,possibly,before,type,conversion;public,property,value,string,name,object,value,this,name,name,this,value,value
PropertyValue -> public PropertyValue(String name, Object value);1356735495;Create a new PropertyValue instance._@param name the name of the property (never {@code null})_@param value the value of the property (possibly before type conversion);public PropertyValue(String name, Object value) {_		this.name = name__		this.value = value__	};create,a,new,property,value,instance,param,name,the,name,of,the,property,never,code,null,param,value,the,value,of,the,property,possibly,before,type,conversion;public,property,value,string,name,object,value,this,name,name,this,value,value
PropertyValue -> public PropertyValue(String name, Object value);1414421342;Create a new PropertyValue instance._@param name the name of the property (never {@code null})_@param value the value of the property (possibly before type conversion);public PropertyValue(String name, Object value) {_		this.name = name__		this.value = value__	};create,a,new,property,value,instance,param,name,the,name,of,the,property,never,code,null,param,value,the,value,of,the,property,possibly,before,type,conversion;public,property,value,string,name,object,value,this,name,name,this,value,value
PropertyValue -> public PropertyValue(String name, Object value);1432208995;Create a new PropertyValue instance._@param name the name of the property (never {@code null})_@param value the value of the property (possibly before type conversion);public PropertyValue(String name, Object value) {_		this.name = name__		this.value = value__	};create,a,new,property,value,instance,param,name,the,name,of,the,property,never,code,null,param,value,the,value,of,the,property,possibly,before,type,conversion;public,property,value,string,name,object,value,this,name,name,this,value,value
PropertyValue -> public PropertyValue(String name, Object value);1473794945;Create a new PropertyValue instance._@param name the name of the property (never {@code null})_@param value the value of the property (possibly before type conversion);public PropertyValue(String name, Object value) {_		this.name = name__		this.value = value__	};create,a,new,property,value,instance,param,name,the,name,of,the,property,never,code,null,param,value,the,value,of,the,property,possibly,before,type,conversion;public,property,value,string,name,object,value,this,name,name,this,value,value
PropertyValue -> public PropertyValue(String name, Object value);1473803321;Create a new PropertyValue instance._@param name the name of the property (never {@code null})_@param value the value of the property (possibly before type conversion);public PropertyValue(String name, Object value) {_		this.name = name__		this.value = value__	};create,a,new,property,value,instance,param,name,the,name,of,the,property,never,code,null,param,value,the,value,of,the,property,possibly,before,type,conversion;public,property,value,string,name,object,value,this,name,name,this,value,value
PropertyValue -> public synchronized boolean isConverted();1328020251;Return whether this holder contains a converted value already (<code>true</code>),_or whether the value still needs to be converted (<code>false</code>).;public synchronized boolean isConverted() {_		return this.converted__	};return,whether,this,holder,contains,a,converted,value,already,code,true,code,or,whether,the,value,still,needs,to,be,converted,code,false,code;public,synchronized,boolean,is,converted,return,this,converted
PropertyValue -> public synchronized boolean isConverted();1356735495;Return whether this holder contains a converted value already ({@code true}),_or whether the value still needs to be converted ({@code false}).;public synchronized boolean isConverted() {_		return this.converted__	};return,whether,this,holder,contains,a,converted,value,already,code,true,or,whether,the,value,still,needs,to,be,converted,code,false;public,synchronized,boolean,is,converted,return,this,converted
PropertyValue -> public synchronized boolean isConverted();1414421342;Return whether this holder contains a converted value already ({@code true}),_or whether the value still needs to be converted ({@code false}).;public synchronized boolean isConverted() {_		return this.converted__	};return,whether,this,holder,contains,a,converted,value,already,code,true,or,whether,the,value,still,needs,to,be,converted,code,false;public,synchronized,boolean,is,converted,return,this,converted
PropertyValue -> public synchronized boolean isConverted();1432208995;Return whether this holder contains a converted value already ({@code true}),_or whether the value still needs to be converted ({@code false}).;public synchronized boolean isConverted() {_		return this.converted__	};return,whether,this,holder,contains,a,converted,value,already,code,true,or,whether,the,value,still,needs,to,be,converted,code,false;public,synchronized,boolean,is,converted,return,this,converted
PropertyValue -> public synchronized boolean isConverted();1473794945;Return whether this holder contains a converted value already ({@code true}),_or whether the value still needs to be converted ({@code false}).;public synchronized boolean isConverted() {_		return this.converted__	};return,whether,this,holder,contains,a,converted,value,already,code,true,or,whether,the,value,still,needs,to,be,converted,code,false;public,synchronized,boolean,is,converted,return,this,converted
PropertyValue -> public synchronized boolean isConverted();1473803321;Return whether this holder contains a converted value already ({@code true}),_or whether the value still needs to be converted ({@code false}).;public synchronized boolean isConverted() {_		return this.converted__	};return,whether,this,holder,contains,a,converted,value,already,code,true,or,whether,the,value,still,needs,to,be,converted,code,false;public,synchronized,boolean,is,converted,return,this,converted
PropertyValue -> public synchronized boolean isConverted();1496837955;Return whether this holder contains a converted value already ({@code true}),_or whether the value still needs to be converted ({@code false}).;public synchronized boolean isConverted() {_		return this.converted__	};return,whether,this,holder,contains,a,converted,value,already,code,true,or,whether,the,value,still,needs,to,be,converted,code,false;public,synchronized,boolean,is,converted,return,this,converted
PropertyValue -> public synchronized boolean isConverted();1498780456;Return whether this holder contains a converted value already ({@code true}),_or whether the value still needs to be converted ({@code false}).;public synchronized boolean isConverted() {_		return this.converted__	};return,whether,this,holder,contains,a,converted,value,already,code,true,or,whether,the,value,still,needs,to,be,converted,code,false;public,synchronized,boolean,is,converted,return,this,converted
PropertyValue -> public synchronized boolean isConverted();1506097334;Return whether this holder contains a converted value already ({@code true}),_or whether the value still needs to be converted ({@code false}).;public synchronized boolean isConverted() {_		return this.converted__	};return,whether,this,holder,contains,a,converted,value,already,code,true,or,whether,the,value,still,needs,to,be,converted,code,false;public,synchronized,boolean,is,converted,return,this,converted
PropertyValue -> public synchronized boolean isConverted();1530174524;Return whether this holder contains a converted value already ({@code true}),_or whether the value still needs to be converted ({@code false}).;public synchronized boolean isConverted() {_		return this.converted__	};return,whether,this,holder,contains,a,converted,value,already,code,true,or,whether,the,value,still,needs,to,be,converted,code,false;public,synchronized,boolean,is,converted,return,this,converted
PropertyValue -> public synchronized Object getConvertedValue();1328020251;Return the converted value of the constructor argument,_after processed type conversion.;public synchronized Object getConvertedValue() {_		return this.convertedValue__	};return,the,converted,value,of,the,constructor,argument,after,processed,type,conversion;public,synchronized,object,get,converted,value,return,this,converted,value
PropertyValue -> public synchronized Object getConvertedValue();1356735495;Return the converted value of the constructor argument,_after processed type conversion.;public synchronized Object getConvertedValue() {_		return this.convertedValue__	};return,the,converted,value,of,the,constructor,argument,after,processed,type,conversion;public,synchronized,object,get,converted,value,return,this,converted,value
PropertyValue -> public synchronized Object getConvertedValue();1414421342;Return the converted value of the constructor argument,_after processed type conversion.;public synchronized Object getConvertedValue() {_		return this.convertedValue__	};return,the,converted,value,of,the,constructor,argument,after,processed,type,conversion;public,synchronized,object,get,converted,value,return,this,converted,value
PropertyValue -> public synchronized Object getConvertedValue();1432208995;Return the converted value of the constructor argument,_after processed type conversion.;public synchronized Object getConvertedValue() {_		return this.convertedValue__	};return,the,converted,value,of,the,constructor,argument,after,processed,type,conversion;public,synchronized,object,get,converted,value,return,this,converted,value
PropertyValue -> public synchronized Object getConvertedValue();1473794945;Return the converted value of the constructor argument,_after processed type conversion.;public synchronized Object getConvertedValue() {_		return this.convertedValue__	};return,the,converted,value,of,the,constructor,argument,after,processed,type,conversion;public,synchronized,object,get,converted,value,return,this,converted,value
PropertyValue -> public synchronized Object getConvertedValue();1473803321;Return the converted value of the constructor argument,_after processed type conversion.;public synchronized Object getConvertedValue() {_		return this.convertedValue__	};return,the,converted,value,of,the,constructor,argument,after,processed,type,conversion;public,synchronized,object,get,converted,value,return,this,converted,value
PropertyValue -> public synchronized Object getConvertedValue();1496837955;Return the converted value of the constructor argument,_after processed type conversion.;public synchronized Object getConvertedValue() {_		return this.convertedValue__	};return,the,converted,value,of,the,constructor,argument,after,processed,type,conversion;public,synchronized,object,get,converted,value,return,this,converted,value
PropertyValue -> public String getName();1328020251;Return the name of the property.;public String getName() {_		return this.name__	};return,the,name,of,the,property;public,string,get,name,return,this,name
PropertyValue -> public String getName();1356735495;Return the name of the property.;public String getName() {_		return this.name__	};return,the,name,of,the,property;public,string,get,name,return,this,name
PropertyValue -> public String getName();1414421342;Return the name of the property.;public String getName() {_		return this.name__	};return,the,name,of,the,property;public,string,get,name,return,this,name
PropertyValue -> public String getName();1432208995;Return the name of the property.;public String getName() {_		return this.name__	};return,the,name,of,the,property;public,string,get,name,return,this,name
PropertyValue -> public String getName();1473794945;Return the name of the property.;public String getName() {_		return this.name__	};return,the,name,of,the,property;public,string,get,name,return,this,name
PropertyValue -> public String getName();1473803321;Return the name of the property.;public String getName() {_		return this.name__	};return,the,name,of,the,property;public,string,get,name,return,this,name
PropertyValue -> public String getName();1496837955;Return the name of the property.;public String getName() {_		return this.name__	};return,the,name,of,the,property;public,string,get,name,return,this,name
PropertyValue -> public String getName();1498780456;Return the name of the property.;public String getName() {_		return this.name__	};return,the,name,of,the,property;public,string,get,name,return,this,name
PropertyValue -> public String getName();1506097334;Return the name of the property.;public String getName() {_		return this.name__	};return,the,name,of,the,property;public,string,get,name,return,this,name
PropertyValue -> public String getName();1530174524;Return the name of the property.;public String getName() {_		return this.name__	};return,the,name,of,the,property;public,string,get,name,return,this,name
PropertyValue -> public PropertyValue getOriginalPropertyValue();1328020251;Return the original PropertyValue instance for this value holder._@return the original PropertyValue (either a source of this_value holder or this value holder itself).;public PropertyValue getOriginalPropertyValue() {_		PropertyValue original = this__		while (original.source instanceof PropertyValue && original.source != original) {_			original = (PropertyValue) original.source__		}_		return original__	};return,the,original,property,value,instance,for,this,value,holder,return,the,original,property,value,either,a,source,of,this,value,holder,or,this,value,holder,itself;public,property,value,get,original,property,value,property,value,original,this,while,original,source,instanceof,property,value,original,source,original,original,property,value,original,source,return,original
PropertyValue -> public PropertyValue getOriginalPropertyValue();1356735495;Return the original PropertyValue instance for this value holder._@return the original PropertyValue (either a source of this_value holder or this value holder itself).;public PropertyValue getOriginalPropertyValue() {_		PropertyValue original = this__		while (original.source instanceof PropertyValue && original.source != original) {_			original = (PropertyValue) original.source__		}_		return original__	};return,the,original,property,value,instance,for,this,value,holder,return,the,original,property,value,either,a,source,of,this,value,holder,or,this,value,holder,itself;public,property,value,get,original,property,value,property,value,original,this,while,original,source,instanceof,property,value,original,source,original,original,property,value,original,source,return,original
PropertyValue -> public PropertyValue getOriginalPropertyValue();1414421342;Return the original PropertyValue instance for this value holder._@return the original PropertyValue (either a source of this_value holder or this value holder itself).;public PropertyValue getOriginalPropertyValue() {_		PropertyValue original = this__		while (original.source instanceof PropertyValue && original.source != original) {_			original = (PropertyValue) original.source__		}_		return original__	};return,the,original,property,value,instance,for,this,value,holder,return,the,original,property,value,either,a,source,of,this,value,holder,or,this,value,holder,itself;public,property,value,get,original,property,value,property,value,original,this,while,original,source,instanceof,property,value,original,source,original,original,property,value,original,source,return,original
PropertyValue -> public PropertyValue getOriginalPropertyValue();1432208995;Return the original PropertyValue instance for this value holder._@return the original PropertyValue (either a source of this_value holder or this value holder itself).;public PropertyValue getOriginalPropertyValue() {_		PropertyValue original = this__		while (original.source instanceof PropertyValue && original.source != original) {_			original = (PropertyValue) original.source__		}_		return original__	};return,the,original,property,value,instance,for,this,value,holder,return,the,original,property,value,either,a,source,of,this,value,holder,or,this,value,holder,itself;public,property,value,get,original,property,value,property,value,original,this,while,original,source,instanceof,property,value,original,source,original,original,property,value,original,source,return,original
PropertyValue -> public PropertyValue getOriginalPropertyValue();1473794945;Return the original PropertyValue instance for this value holder._@return the original PropertyValue (either a source of this_value holder or this value holder itself).;public PropertyValue getOriginalPropertyValue() {_		PropertyValue original = this__		Object source = getSource()__		while (source instanceof PropertyValue && source != original) {_			original = (PropertyValue) source__			source = original.getSource()__		}_		return original__	};return,the,original,property,value,instance,for,this,value,holder,return,the,original,property,value,either,a,source,of,this,value,holder,or,this,value,holder,itself;public,property,value,get,original,property,value,property,value,original,this,object,source,get,source,while,source,instanceof,property,value,source,original,original,property,value,source,source,original,get,source,return,original
PropertyValue -> public PropertyValue getOriginalPropertyValue();1473803321;Return the original PropertyValue instance for this value holder._@return the original PropertyValue (either a source of this_value holder or this value holder itself).;public PropertyValue getOriginalPropertyValue() {_		PropertyValue original = this__		Object source = getSource()__		while (source instanceof PropertyValue && source != original) {_			original = (PropertyValue) source__			source = original.getSource()__		}_		return original__	};return,the,original,property,value,instance,for,this,value,holder,return,the,original,property,value,either,a,source,of,this,value,holder,or,this,value,holder,itself;public,property,value,get,original,property,value,property,value,original,this,object,source,get,source,while,source,instanceof,property,value,source,original,original,property,value,source,source,original,get,source,return,original
PropertyValue -> public PropertyValue getOriginalPropertyValue();1496837955;Return the original PropertyValue instance for this value holder._@return the original PropertyValue (either a source of this_value holder or this value holder itself).;public PropertyValue getOriginalPropertyValue() {_		PropertyValue original = this__		Object source = getSource()__		while (source instanceof PropertyValue && source != original) {_			original = (PropertyValue) source__			source = original.getSource()__		}_		return original__	};return,the,original,property,value,instance,for,this,value,holder,return,the,original,property,value,either,a,source,of,this,value,holder,or,this,value,holder,itself;public,property,value,get,original,property,value,property,value,original,this,object,source,get,source,while,source,instanceof,property,value,source,original,original,property,value,source,source,original,get,source,return,original
PropertyValue -> public PropertyValue getOriginalPropertyValue();1498780456;Return the original PropertyValue instance for this value holder._@return the original PropertyValue (either a source of this_value holder or this value holder itself).;public PropertyValue getOriginalPropertyValue() {_		PropertyValue original = this__		Object source = getSource()__		while (source instanceof PropertyValue && source != original) {_			original = (PropertyValue) source__			source = original.getSource()__		}_		return original__	};return,the,original,property,value,instance,for,this,value,holder,return,the,original,property,value,either,a,source,of,this,value,holder,or,this,value,holder,itself;public,property,value,get,original,property,value,property,value,original,this,object,source,get,source,while,source,instanceof,property,value,source,original,original,property,value,source,source,original,get,source,return,original
PropertyValue -> public PropertyValue getOriginalPropertyValue();1506097334;Return the original PropertyValue instance for this value holder._@return the original PropertyValue (either a source of this_value holder or this value holder itself).;public PropertyValue getOriginalPropertyValue() {_		PropertyValue original = this__		Object source = getSource()__		while (source instanceof PropertyValue && source != original) {_			original = (PropertyValue) source__			source = original.getSource()__		}_		return original__	};return,the,original,property,value,instance,for,this,value,holder,return,the,original,property,value,either,a,source,of,this,value,holder,or,this,value,holder,itself;public,property,value,get,original,property,value,property,value,original,this,object,source,get,source,while,source,instanceof,property,value,source,original,original,property,value,source,source,original,get,source,return,original
PropertyValue -> public PropertyValue getOriginalPropertyValue();1530174524;Return the original PropertyValue instance for this value holder._@return the original PropertyValue (either a source of this_value holder or this value holder itself).;public PropertyValue getOriginalPropertyValue() {_		PropertyValue original = this__		Object source = getSource()__		while (source instanceof PropertyValue && source != original) {_			original = (PropertyValue) source__			source = original.getSource()__		}_		return original__	};return,the,original,property,value,instance,for,this,value,holder,return,the,original,property,value,either,a,source,of,this,value,holder,or,this,value,holder,itself;public,property,value,get,original,property,value,property,value,original,this,object,source,get,source,while,source,instanceof,property,value,source,original,original,property,value,source,source,original,get,source,return,original
PropertyValue -> public synchronized void setConvertedValue(Object value);1328020251;Set the converted value of the constructor argument,_after processed type conversion.;public synchronized void setConvertedValue(Object value) {_		this.converted = true__		this.convertedValue = value__	};set,the,converted,value,of,the,constructor,argument,after,processed,type,conversion;public,synchronized,void,set,converted,value,object,value,this,converted,true,this,converted,value,value
PropertyValue -> public synchronized void setConvertedValue(Object value);1356735495;Set the converted value of the constructor argument,_after processed type conversion.;public synchronized void setConvertedValue(Object value) {_		this.converted = true__		this.convertedValue = value__	};set,the,converted,value,of,the,constructor,argument,after,processed,type,conversion;public,synchronized,void,set,converted,value,object,value,this,converted,true,this,converted,value,value
PropertyValue -> public synchronized void setConvertedValue(Object value);1414421342;Set the converted value of the constructor argument,_after processed type conversion.;public synchronized void setConvertedValue(Object value) {_		this.converted = true__		this.convertedValue = value__	};set,the,converted,value,of,the,constructor,argument,after,processed,type,conversion;public,synchronized,void,set,converted,value,object,value,this,converted,true,this,converted,value,value
PropertyValue -> public synchronized void setConvertedValue(Object value);1432208995;Set the converted value of the constructor argument,_after processed type conversion.;public synchronized void setConvertedValue(Object value) {_		this.converted = true__		this.convertedValue = value__	};set,the,converted,value,of,the,constructor,argument,after,processed,type,conversion;public,synchronized,void,set,converted,value,object,value,this,converted,true,this,converted,value,value
PropertyValue -> public synchronized void setConvertedValue(Object value);1473794945;Set the converted value of the constructor argument,_after processed type conversion.;public synchronized void setConvertedValue(Object value) {_		this.converted = true__		this.convertedValue = value__	};set,the,converted,value,of,the,constructor,argument,after,processed,type,conversion;public,synchronized,void,set,converted,value,object,value,this,converted,true,this,converted,value,value
PropertyValue -> public synchronized void setConvertedValue(Object value);1473803321;Set the converted value of the constructor argument,_after processed type conversion.;public synchronized void setConvertedValue(Object value) {_		this.converted = true__		this.convertedValue = value__	};set,the,converted,value,of,the,constructor,argument,after,processed,type,conversion;public,synchronized,void,set,converted,value,object,value,this,converted,true,this,converted,value,value
PropertyValue -> public synchronized void setConvertedValue(Object value);1496837955;Set the converted value of the constructor argument,_after processed type conversion.;public synchronized void setConvertedValue(Object value) {_		this.converted = true__		this.convertedValue = value__	};set,the,converted,value,of,the,constructor,argument,after,processed,type,conversion;public,synchronized,void,set,converted,value,object,value,this,converted,true,this,converted,value,value
PropertyValue -> public synchronized void setConvertedValue(Object value);1498780456;Set the converted value of the constructor argument,_after processed type conversion.;public synchronized void setConvertedValue(Object value) {_		this.converted = true__		this.convertedValue = value__	};set,the,converted,value,of,the,constructor,argument,after,processed,type,conversion;public,synchronized,void,set,converted,value,object,value,this,converted,true,this,converted,value,value
PropertyValue -> public PropertyValue(PropertyValue original, @Nullable Object newValue);1506097334;Constructor that exposes a new value for an original value holder._The original holder will be exposed as source of the new holder._@param original the PropertyValue to link to (never {@code null})_@param newValue the new value to apply;public PropertyValue(PropertyValue original, @Nullable Object newValue) {_		Assert.notNull(original, "Original must not be null")__		this.name = original.getName()__		this.value = newValue__		this.optional = original.isOptional()__		this.conversionNecessary = original.conversionNecessary__		this.resolvedTokens = original.resolvedTokens__		setSource(original)__		copyAttributesFrom(original)__	};constructor,that,exposes,a,new,value,for,an,original,value,holder,the,original,holder,will,be,exposed,as,source,of,the,new,holder,param,original,the,property,value,to,link,to,never,code,null,param,new,value,the,new,value,to,apply;public,property,value,property,value,original,nullable,object,new,value,assert,not,null,original,original,must,not,be,null,this,name,original,get,name,this,value,new,value,this,optional,original,is,optional,this,conversion,necessary,original,conversion,necessary,this,resolved,tokens,original,resolved,tokens,set,source,original,copy,attributes,from,original
PropertyValue -> public PropertyValue(PropertyValue original, @Nullable Object newValue);1530174524;Constructor that exposes a new value for an original value holder._The original holder will be exposed as source of the new holder._@param original the PropertyValue to link to (never {@code null})_@param newValue the new value to apply;public PropertyValue(PropertyValue original, @Nullable Object newValue) {_		Assert.notNull(original, "Original must not be null")__		this.name = original.getName()__		this.value = newValue__		this.optional = original.isOptional()__		this.conversionNecessary = original.conversionNecessary__		this.resolvedTokens = original.resolvedTokens__		setSource(original)__		copyAttributesFrom(original)__	};constructor,that,exposes,a,new,value,for,an,original,value,holder,the,original,holder,will,be,exposed,as,source,of,the,new,holder,param,original,the,property,value,to,link,to,never,code,null,param,new,value,the,new,value,to,apply;public,property,value,property,value,original,nullable,object,new,value,assert,not,null,original,original,must,not,be,null,this,name,original,get,name,this,value,new,value,this,optional,original,is,optional,this,conversion,necessary,original,conversion,necessary,this,resolved,tokens,original,resolved,tokens,set,source,original,copy,attributes,from,original
PropertyValue -> public synchronized void setConvertedValue(@Nullable Object value);1506097334;Set the converted value of the constructor argument,_after processed type conversion.;public synchronized void setConvertedValue(@Nullable Object value) {_		this.converted = true__		this.convertedValue = value__	};set,the,converted,value,of,the,constructor,argument,after,processed,type,conversion;public,synchronized,void,set,converted,value,nullable,object,value,this,converted,true,this,converted,value,value
PropertyValue -> public synchronized void setConvertedValue(@Nullable Object value);1530174524;Set the converted value of the constructor argument,_after processed type conversion.;public synchronized void setConvertedValue(@Nullable Object value) {_		this.converted = true__		this.convertedValue = value__	};set,the,converted,value,of,the,constructor,argument,after,processed,type,conversion;public,synchronized,void,set,converted,value,nullable,object,value,this,converted,true,this,converted,value,value
PropertyValue -> public PropertyValue(PropertyValue original, Object newValue);1328020251;Constructor that exposes a new value for an original value holder._The original holder will be exposed as source of the new holder._@param original the PropertyValue to link to (never <code>null</code>)_@param newValue the new value to apply;public PropertyValue(PropertyValue original, Object newValue) {_		Assert.notNull(original, "Original must not be null")__		this.name = original.getName()__		this.value = newValue__		this.source = original__		this.optional = original.isOptional()__		this.conversionNecessary = original.conversionNecessary__		this.resolvedTokens = original.resolvedTokens__		this.resolvedDescriptor = original.resolvedDescriptor__		copyAttributesFrom(original)__	};constructor,that,exposes,a,new,value,for,an,original,value,holder,the,original,holder,will,be,exposed,as,source,of,the,new,holder,param,original,the,property,value,to,link,to,never,code,null,code,param,new,value,the,new,value,to,apply;public,property,value,property,value,original,object,new,value,assert,not,null,original,original,must,not,be,null,this,name,original,get,name,this,value,new,value,this,source,original,this,optional,original,is,optional,this,conversion,necessary,original,conversion,necessary,this,resolved,tokens,original,resolved,tokens,this,resolved,descriptor,original,resolved,descriptor,copy,attributes,from,original
PropertyValue -> public PropertyValue(PropertyValue original, Object newValue);1356735495;Constructor that exposes a new value for an original value holder._The original holder will be exposed as source of the new holder._@param original the PropertyValue to link to (never {@code null})_@param newValue the new value to apply;public PropertyValue(PropertyValue original, Object newValue) {_		Assert.notNull(original, "Original must not be null")__		this.name = original.getName()__		this.value = newValue__		this.source = original__		this.optional = original.isOptional()__		this.conversionNecessary = original.conversionNecessary__		this.resolvedTokens = original.resolvedTokens__		this.resolvedDescriptor = original.resolvedDescriptor__		copyAttributesFrom(original)__	};constructor,that,exposes,a,new,value,for,an,original,value,holder,the,original,holder,will,be,exposed,as,source,of,the,new,holder,param,original,the,property,value,to,link,to,never,code,null,param,new,value,the,new,value,to,apply;public,property,value,property,value,original,object,new,value,assert,not,null,original,original,must,not,be,null,this,name,original,get,name,this,value,new,value,this,source,original,this,optional,original,is,optional,this,conversion,necessary,original,conversion,necessary,this,resolved,tokens,original,resolved,tokens,this,resolved,descriptor,original,resolved,descriptor,copy,attributes,from,original
PropertyValue -> public PropertyValue(PropertyValue original, Object newValue);1414421342;Constructor that exposes a new value for an original value holder._The original holder will be exposed as source of the new holder._@param original the PropertyValue to link to (never {@code null})_@param newValue the new value to apply;public PropertyValue(PropertyValue original, Object newValue) {_		Assert.notNull(original, "Original must not be null")__		this.name = original.getName()__		this.value = newValue__		this.source = original__		this.optional = original.isOptional()__		this.conversionNecessary = original.conversionNecessary__		this.resolvedTokens = original.resolvedTokens__		this.resolvedDescriptor = original.resolvedDescriptor__		copyAttributesFrom(original)__	};constructor,that,exposes,a,new,value,for,an,original,value,holder,the,original,holder,will,be,exposed,as,source,of,the,new,holder,param,original,the,property,value,to,link,to,never,code,null,param,new,value,the,new,value,to,apply;public,property,value,property,value,original,object,new,value,assert,not,null,original,original,must,not,be,null,this,name,original,get,name,this,value,new,value,this,source,original,this,optional,original,is,optional,this,conversion,necessary,original,conversion,necessary,this,resolved,tokens,original,resolved,tokens,this,resolved,descriptor,original,resolved,descriptor,copy,attributes,from,original
PropertyValue -> public PropertyValue(PropertyValue original, Object newValue);1432208995;Constructor that exposes a new value for an original value holder._The original holder will be exposed as source of the new holder._@param original the PropertyValue to link to (never {@code null})_@param newValue the new value to apply;public PropertyValue(PropertyValue original, Object newValue) {_		Assert.notNull(original, "Original must not be null")__		this.name = original.getName()__		this.value = newValue__		this.source = original__		this.optional = original.isOptional()__		this.conversionNecessary = original.conversionNecessary__		this.resolvedTokens = original.resolvedTokens__		copyAttributesFrom(original)__	};constructor,that,exposes,a,new,value,for,an,original,value,holder,the,original,holder,will,be,exposed,as,source,of,the,new,holder,param,original,the,property,value,to,link,to,never,code,null,param,new,value,the,new,value,to,apply;public,property,value,property,value,original,object,new,value,assert,not,null,original,original,must,not,be,null,this,name,original,get,name,this,value,new,value,this,source,original,this,optional,original,is,optional,this,conversion,necessary,original,conversion,necessary,this,resolved,tokens,original,resolved,tokens,copy,attributes,from,original
PropertyValue -> public PropertyValue(PropertyValue original, Object newValue);1473794945;Constructor that exposes a new value for an original value holder._The original holder will be exposed as source of the new holder._@param original the PropertyValue to link to (never {@code null})_@param newValue the new value to apply;public PropertyValue(PropertyValue original, Object newValue) {_		Assert.notNull(original, "Original must not be null")__		this.name = original.getName()__		this.value = newValue__		this.optional = original.isOptional()__		this.conversionNecessary = original.conversionNecessary__		this.resolvedTokens = original.resolvedTokens__		setSource(original)__		copyAttributesFrom(original)__	};constructor,that,exposes,a,new,value,for,an,original,value,holder,the,original,holder,will,be,exposed,as,source,of,the,new,holder,param,original,the,property,value,to,link,to,never,code,null,param,new,value,the,new,value,to,apply;public,property,value,property,value,original,object,new,value,assert,not,null,original,original,must,not,be,null,this,name,original,get,name,this,value,new,value,this,optional,original,is,optional,this,conversion,necessary,original,conversion,necessary,this,resolved,tokens,original,resolved,tokens,set,source,original,copy,attributes,from,original
PropertyValue -> public PropertyValue(PropertyValue original, Object newValue);1473803321;Constructor that exposes a new value for an original value holder._The original holder will be exposed as source of the new holder._@param original the PropertyValue to link to (never {@code null})_@param newValue the new value to apply;public PropertyValue(PropertyValue original, Object newValue) {_		Assert.notNull(original, "Original must not be null")__		this.name = original.getName()__		this.value = newValue__		this.optional = original.isOptional()__		this.conversionNecessary = original.conversionNecessary__		this.resolvedTokens = original.resolvedTokens__		setSource(original)__		copyAttributesFrom(original)__	};constructor,that,exposes,a,new,value,for,an,original,value,holder,the,original,holder,will,be,exposed,as,source,of,the,new,holder,param,original,the,property,value,to,link,to,never,code,null,param,new,value,the,new,value,to,apply;public,property,value,property,value,original,object,new,value,assert,not,null,original,original,must,not,be,null,this,name,original,get,name,this,value,new,value,this,optional,original,is,optional,this,conversion,necessary,original,conversion,necessary,this,resolved,tokens,original,resolved,tokens,set,source,original,copy,attributes,from,original
PropertyValue -> public PropertyValue(PropertyValue original, Object newValue);1496837955;Constructor that exposes a new value for an original value holder._The original holder will be exposed as source of the new holder._@param original the PropertyValue to link to (never {@code null})_@param newValue the new value to apply;public PropertyValue(PropertyValue original, Object newValue) {_		Assert.notNull(original, "Original must not be null")__		this.name = original.getName()__		this.value = newValue__		this.optional = original.isOptional()__		this.conversionNecessary = original.conversionNecessary__		this.resolvedTokens = original.resolvedTokens__		setSource(original)__		copyAttributesFrom(original)__	};constructor,that,exposes,a,new,value,for,an,original,value,holder,the,original,holder,will,be,exposed,as,source,of,the,new,holder,param,original,the,property,value,to,link,to,never,code,null,param,new,value,the,new,value,to,apply;public,property,value,property,value,original,object,new,value,assert,not,null,original,original,must,not,be,null,this,name,original,get,name,this,value,new,value,this,optional,original,is,optional,this,conversion,necessary,original,conversion,necessary,this,resolved,tokens,original,resolved,tokens,set,source,original,copy,attributes,from,original
PropertyValue -> public PropertyValue(PropertyValue original, Object newValue);1498780456;Constructor that exposes a new value for an original value holder._The original holder will be exposed as source of the new holder._@param original the PropertyValue to link to (never {@code null})_@param newValue the new value to apply;public PropertyValue(PropertyValue original, Object newValue) {_		Assert.notNull(original, "Original must not be null")__		this.name = original.getName()__		this.value = newValue__		this.optional = original.isOptional()__		this.conversionNecessary = original.conversionNecessary__		this.resolvedTokens = original.resolvedTokens__		setSource(original)__		copyAttributesFrom(original)__	};constructor,that,exposes,a,new,value,for,an,original,value,holder,the,original,holder,will,be,exposed,as,source,of,the,new,holder,param,original,the,property,value,to,link,to,never,code,null,param,new,value,the,new,value,to,apply;public,property,value,property,value,original,object,new,value,assert,not,null,original,original,must,not,be,null,this,name,original,get,name,this,value,new,value,this,optional,original,is,optional,this,conversion,necessary,original,conversion,necessary,this,resolved,tokens,original,resolved,tokens,set,source,original,copy,attributes,from,original
PropertyValue -> public PropertyValue(PropertyValue original);1328020251;Copy constructor._@param original the PropertyValue to copy (never <code>null</code>);public PropertyValue(PropertyValue original) {_		Assert.notNull(original, "Original must not be null")__		this.name = original.getName()__		this.value = original.getValue()__		this.source = original.getSource()__		this.optional = original.isOptional()__		this.converted = original.converted__		this.convertedValue = original.convertedValue__		this.conversionNecessary = original.conversionNecessary__		this.resolvedTokens = original.resolvedTokens__		this.resolvedDescriptor = original.resolvedDescriptor__		copyAttributesFrom(original)__	};copy,constructor,param,original,the,property,value,to,copy,never,code,null,code;public,property,value,property,value,original,assert,not,null,original,original,must,not,be,null,this,name,original,get,name,this,value,original,get,value,this,source,original,get,source,this,optional,original,is,optional,this,converted,original,converted,this,converted,value,original,converted,value,this,conversion,necessary,original,conversion,necessary,this,resolved,tokens,original,resolved,tokens,this,resolved,descriptor,original,resolved,descriptor,copy,attributes,from,original
PropertyValue -> public PropertyValue(PropertyValue original);1356735495;Copy constructor._@param original the PropertyValue to copy (never {@code null});public PropertyValue(PropertyValue original) {_		Assert.notNull(original, "Original must not be null")__		this.name = original.getName()__		this.value = original.getValue()__		this.source = original.getSource()__		this.optional = original.isOptional()__		this.converted = original.converted__		this.convertedValue = original.convertedValue__		this.conversionNecessary = original.conversionNecessary__		this.resolvedTokens = original.resolvedTokens__		this.resolvedDescriptor = original.resolvedDescriptor__		copyAttributesFrom(original)__	};copy,constructor,param,original,the,property,value,to,copy,never,code,null;public,property,value,property,value,original,assert,not,null,original,original,must,not,be,null,this,name,original,get,name,this,value,original,get,value,this,source,original,get,source,this,optional,original,is,optional,this,converted,original,converted,this,converted,value,original,converted,value,this,conversion,necessary,original,conversion,necessary,this,resolved,tokens,original,resolved,tokens,this,resolved,descriptor,original,resolved,descriptor,copy,attributes,from,original
PropertyValue -> public PropertyValue(PropertyValue original);1414421342;Copy constructor._@param original the PropertyValue to copy (never {@code null});public PropertyValue(PropertyValue original) {_		Assert.notNull(original, "Original must not be null")__		this.name = original.getName()__		this.value = original.getValue()__		this.source = original.getSource()__		this.optional = original.isOptional()__		this.converted = original.converted__		this.convertedValue = original.convertedValue__		this.conversionNecessary = original.conversionNecessary__		this.resolvedTokens = original.resolvedTokens__		this.resolvedDescriptor = original.resolvedDescriptor__		copyAttributesFrom(original)__	};copy,constructor,param,original,the,property,value,to,copy,never,code,null;public,property,value,property,value,original,assert,not,null,original,original,must,not,be,null,this,name,original,get,name,this,value,original,get,value,this,source,original,get,source,this,optional,original,is,optional,this,converted,original,converted,this,converted,value,original,converted,value,this,conversion,necessary,original,conversion,necessary,this,resolved,tokens,original,resolved,tokens,this,resolved,descriptor,original,resolved,descriptor,copy,attributes,from,original
PropertyValue -> public PropertyValue(PropertyValue original);1432208995;Copy constructor._@param original the PropertyValue to copy (never {@code null});public PropertyValue(PropertyValue original) {_		Assert.notNull(original, "Original must not be null")__		this.name = original.getName()__		this.value = original.getValue()__		this.source = original.getSource()__		this.optional = original.isOptional()__		this.converted = original.converted__		this.convertedValue = original.convertedValue__		this.conversionNecessary = original.conversionNecessary__		this.resolvedTokens = original.resolvedTokens__		copyAttributesFrom(original)__	};copy,constructor,param,original,the,property,value,to,copy,never,code,null;public,property,value,property,value,original,assert,not,null,original,original,must,not,be,null,this,name,original,get,name,this,value,original,get,value,this,source,original,get,source,this,optional,original,is,optional,this,converted,original,converted,this,converted,value,original,converted,value,this,conversion,necessary,original,conversion,necessary,this,resolved,tokens,original,resolved,tokens,copy,attributes,from,original
PropertyValue -> public PropertyValue(PropertyValue original);1473794945;Copy constructor._@param original the PropertyValue to copy (never {@code null});public PropertyValue(PropertyValue original) {_		Assert.notNull(original, "Original must not be null")__		this.name = original.getName()__		this.value = original.getValue()__		this.optional = original.isOptional()__		this.converted = original.converted__		this.convertedValue = original.convertedValue__		this.conversionNecessary = original.conversionNecessary__		this.resolvedTokens = original.resolvedTokens__		setSource(original.getSource())__		copyAttributesFrom(original)__	};copy,constructor,param,original,the,property,value,to,copy,never,code,null;public,property,value,property,value,original,assert,not,null,original,original,must,not,be,null,this,name,original,get,name,this,value,original,get,value,this,optional,original,is,optional,this,converted,original,converted,this,converted,value,original,converted,value,this,conversion,necessary,original,conversion,necessary,this,resolved,tokens,original,resolved,tokens,set,source,original,get,source,copy,attributes,from,original
PropertyValue -> public PropertyValue(PropertyValue original);1473803321;Copy constructor._@param original the PropertyValue to copy (never {@code null});public PropertyValue(PropertyValue original) {_		Assert.notNull(original, "Original must not be null")__		this.name = original.getName()__		this.value = original.getValue()__		this.optional = original.isOptional()__		this.converted = original.converted__		this.convertedValue = original.convertedValue__		this.conversionNecessary = original.conversionNecessary__		this.resolvedTokens = original.resolvedTokens__		setSource(original.getSource())__		copyAttributesFrom(original)__	};copy,constructor,param,original,the,property,value,to,copy,never,code,null;public,property,value,property,value,original,assert,not,null,original,original,must,not,be,null,this,name,original,get,name,this,value,original,get,value,this,optional,original,is,optional,this,converted,original,converted,this,converted,value,original,converted,value,this,conversion,necessary,original,conversion,necessary,this,resolved,tokens,original,resolved,tokens,set,source,original,get,source,copy,attributes,from,original
PropertyValue -> public PropertyValue(PropertyValue original);1496837955;Copy constructor._@param original the PropertyValue to copy (never {@code null});public PropertyValue(PropertyValue original) {_		Assert.notNull(original, "Original must not be null")__		this.name = original.getName()__		this.value = original.getValue()__		this.optional = original.isOptional()__		this.converted = original.converted__		this.convertedValue = original.convertedValue__		this.conversionNecessary = original.conversionNecessary__		this.resolvedTokens = original.resolvedTokens__		setSource(original.getSource())__		copyAttributesFrom(original)__	};copy,constructor,param,original,the,property,value,to,copy,never,code,null;public,property,value,property,value,original,assert,not,null,original,original,must,not,be,null,this,name,original,get,name,this,value,original,get,value,this,optional,original,is,optional,this,converted,original,converted,this,converted,value,original,converted,value,this,conversion,necessary,original,conversion,necessary,this,resolved,tokens,original,resolved,tokens,set,source,original,get,source,copy,attributes,from,original
PropertyValue -> public PropertyValue(PropertyValue original);1498780456;Copy constructor._@param original the PropertyValue to copy (never {@code null});public PropertyValue(PropertyValue original) {_		Assert.notNull(original, "Original must not be null")__		this.name = original.getName()__		this.value = original.getValue()__		this.optional = original.isOptional()__		this.converted = original.converted__		this.convertedValue = original.convertedValue__		this.conversionNecessary = original.conversionNecessary__		this.resolvedTokens = original.resolvedTokens__		setSource(original.getSource())__		copyAttributesFrom(original)__	};copy,constructor,param,original,the,property,value,to,copy,never,code,null;public,property,value,property,value,original,assert,not,null,original,original,must,not,be,null,this,name,original,get,name,this,value,original,get,value,this,optional,original,is,optional,this,converted,original,converted,this,converted,value,original,converted,value,this,conversion,necessary,original,conversion,necessary,this,resolved,tokens,original,resolved,tokens,set,source,original,get,source,copy,attributes,from,original
PropertyValue -> public PropertyValue(PropertyValue original);1506097334;Copy constructor._@param original the PropertyValue to copy (never {@code null});public PropertyValue(PropertyValue original) {_		Assert.notNull(original, "Original must not be null")__		this.name = original.getName()__		this.value = original.getValue()__		this.optional = original.isOptional()__		this.converted = original.converted__		this.convertedValue = original.convertedValue__		this.conversionNecessary = original.conversionNecessary__		this.resolvedTokens = original.resolvedTokens__		setSource(original.getSource())__		copyAttributesFrom(original)__	};copy,constructor,param,original,the,property,value,to,copy,never,code,null;public,property,value,property,value,original,assert,not,null,original,original,must,not,be,null,this,name,original,get,name,this,value,original,get,value,this,optional,original,is,optional,this,converted,original,converted,this,converted,value,original,converted,value,this,conversion,necessary,original,conversion,necessary,this,resolved,tokens,original,resolved,tokens,set,source,original,get,source,copy,attributes,from,original
PropertyValue -> public PropertyValue(PropertyValue original);1530174524;Copy constructor._@param original the PropertyValue to copy (never {@code null});public PropertyValue(PropertyValue original) {_		Assert.notNull(original, "Original must not be null")__		this.name = original.getName()__		this.value = original.getValue()__		this.optional = original.isOptional()__		this.converted = original.converted__		this.convertedValue = original.convertedValue__		this.conversionNecessary = original.conversionNecessary__		this.resolvedTokens = original.resolvedTokens__		setSource(original.getSource())__		copyAttributesFrom(original)__	};copy,constructor,param,original,the,property,value,to,copy,never,code,null;public,property,value,property,value,original,assert,not,null,original,original,must,not,be,null,this,name,original,get,name,this,value,original,get,value,this,optional,original,is,optional,this,converted,original,converted,this,converted,value,original,converted,value,this,conversion,necessary,original,conversion,necessary,this,resolved,tokens,original,resolved,tokens,set,source,original,get,source,copy,attributes,from,original
PropertyValue -> public Object getValue();1328020251;Return the value of the property._<p>Note that type conversion will <i>not</i> have occurred here._It is the responsibility of the BeanWrapper implementation to_perform type conversion.;public Object getValue() {_		return this.value__	};return,the,value,of,the,property,p,note,that,type,conversion,will,i,not,i,have,occurred,here,it,is,the,responsibility,of,the,bean,wrapper,implementation,to,perform,type,conversion;public,object,get,value,return,this,value
PropertyValue -> public Object getValue();1356735495;Return the value of the property._<p>Note that type conversion will <i>not</i> have occurred here._It is the responsibility of the BeanWrapper implementation to_perform type conversion.;public Object getValue() {_		return this.value__	};return,the,value,of,the,property,p,note,that,type,conversion,will,i,not,i,have,occurred,here,it,is,the,responsibility,of,the,bean,wrapper,implementation,to,perform,type,conversion;public,object,get,value,return,this,value
PropertyValue -> public Object getValue();1414421342;Return the value of the property._<p>Note that type conversion will <i>not</i> have occurred here._It is the responsibility of the BeanWrapper implementation to_perform type conversion.;public Object getValue() {_		return this.value__	};return,the,value,of,the,property,p,note,that,type,conversion,will,i,not,i,have,occurred,here,it,is,the,responsibility,of,the,bean,wrapper,implementation,to,perform,type,conversion;public,object,get,value,return,this,value
PropertyValue -> public Object getValue();1432208995;Return the value of the property._<p>Note that type conversion will <i>not</i> have occurred here._It is the responsibility of the BeanWrapper implementation to_perform type conversion.;public Object getValue() {_		return this.value__	};return,the,value,of,the,property,p,note,that,type,conversion,will,i,not,i,have,occurred,here,it,is,the,responsibility,of,the,bean,wrapper,implementation,to,perform,type,conversion;public,object,get,value,return,this,value
PropertyValue -> public Object getValue();1473794945;Return the value of the property._<p>Note that type conversion will <i>not</i> have occurred here._It is the responsibility of the BeanWrapper implementation to_perform type conversion.;public Object getValue() {_		return this.value__	};return,the,value,of,the,property,p,note,that,type,conversion,will,i,not,i,have,occurred,here,it,is,the,responsibility,of,the,bean,wrapper,implementation,to,perform,type,conversion;public,object,get,value,return,this,value
PropertyValue -> public Object getValue();1473803321;Return the value of the property._<p>Note that type conversion will <i>not</i> have occurred here._It is the responsibility of the BeanWrapper implementation to_perform type conversion.;public Object getValue() {_		return this.value__	};return,the,value,of,the,property,p,note,that,type,conversion,will,i,not,i,have,occurred,here,it,is,the,responsibility,of,the,bean,wrapper,implementation,to,perform,type,conversion;public,object,get,value,return,this,value
PropertyValue -> public boolean isOptional();1473794945;Reeurn whether this is an optional value, that is, to be ignored_when no corresponding property exists on the target class._@since 3.0;public boolean isOptional() {_		return this.optional__	};reeurn,whether,this,is,an,optional,value,that,is,to,be,ignored,when,no,corresponding,property,exists,on,the,target,class,since,3,0;public,boolean,is,optional,return,this,optional
PropertyValue -> public boolean isOptional();1473803321;Return whether this is an optional value, that is, to be ignored_when no corresponding property exists on the target class._@since 3.0;public boolean isOptional() {_		return this.optional__	};return,whether,this,is,an,optional,value,that,is,to,be,ignored,when,no,corresponding,property,exists,on,the,target,class,since,3,0;public,boolean,is,optional,return,this,optional
PropertyValue -> public boolean isOptional();1496837955;Return whether this is an optional value, that is, to be ignored_when no corresponding property exists on the target class._@since 3.0;public boolean isOptional() {_		return this.optional__	};return,whether,this,is,an,optional,value,that,is,to,be,ignored,when,no,corresponding,property,exists,on,the,target,class,since,3,0;public,boolean,is,optional,return,this,optional
PropertyValue -> public boolean isOptional();1498780456;Return whether this is an optional value, that is, to be ignored_when no corresponding property exists on the target class._@since 3.0;public boolean isOptional() {_		return this.optional__	};return,whether,this,is,an,optional,value,that,is,to,be,ignored,when,no,corresponding,property,exists,on,the,target,class,since,3,0;public,boolean,is,optional,return,this,optional
PropertyValue -> public boolean isOptional();1506097334;Return whether this is an optional value, that is, to be ignored_when no corresponding property exists on the target class._@since 3.0;public boolean isOptional() {_		return this.optional__	};return,whether,this,is,an,optional,value,that,is,to,be,ignored,when,no,corresponding,property,exists,on,the,target,class,since,3,0;public,boolean,is,optional,return,this,optional
PropertyValue -> public boolean isOptional();1530174524;Return whether this is an optional value, that is, to be ignored_when no corresponding property exists on the target class._@since 3.0;public boolean isOptional() {_		return this.optional__	};return,whether,this,is,an,optional,value,that,is,to,be,ignored,when,no,corresponding,property,exists,on,the,target,class,since,3,0;public,boolean,is,optional,return,this,optional
PropertyValue -> @Nullable 	public synchronized Object getConvertedValue();1498780456;Return the converted value of the constructor argument,_after processed type conversion.;@Nullable_	public synchronized Object getConvertedValue() {_		return this.convertedValue__	};return,the,converted,value,of,the,constructor,argument,after,processed,type,conversion;nullable,public,synchronized,object,get,converted,value,return,this,converted,value
PropertyValue -> @Nullable 	public synchronized Object getConvertedValue();1506097334;Return the converted value of the constructor argument,_after processed type conversion.;@Nullable_	public synchronized Object getConvertedValue() {_		return this.convertedValue__	};return,the,converted,value,of,the,constructor,argument,after,processed,type,conversion;nullable,public,synchronized,object,get,converted,value,return,this,converted,value
PropertyValue -> @Nullable 	public synchronized Object getConvertedValue();1530174524;Return the converted value of the constructor argument,_after processed type conversion.;@Nullable_	public synchronized Object getConvertedValue() {_		return this.convertedValue__	};return,the,converted,value,of,the,constructor,argument,after,processed,type,conversion;nullable,public,synchronized,object,get,converted,value,return,this,converted,value
PropertyValue -> @Nullable 	public Object getValue();1496837955;Return the value of the property._<p>Note that type conversion will <i>not</i> have occurred here._It is the responsibility of the BeanWrapper implementation to_perform type conversion.;@Nullable_	public Object getValue() {_		return this.value__	};return,the,value,of,the,property,p,note,that,type,conversion,will,i,not,i,have,occurred,here,it,is,the,responsibility,of,the,bean,wrapper,implementation,to,perform,type,conversion;nullable,public,object,get,value,return,this,value
PropertyValue -> @Nullable 	public Object getValue();1498780456;Return the value of the property._<p>Note that type conversion will <i>not</i> have occurred here._It is the responsibility of the BeanWrapper implementation to_perform type conversion.;@Nullable_	public Object getValue() {_		return this.value__	};return,the,value,of,the,property,p,note,that,type,conversion,will,i,not,i,have,occurred,here,it,is,the,responsibility,of,the,bean,wrapper,implementation,to,perform,type,conversion;nullable,public,object,get,value,return,this,value
PropertyValue -> @Nullable 	public Object getValue();1506097334;Return the value of the property._<p>Note that type conversion will <i>not</i> have occurred here._It is the responsibility of the BeanWrapper implementation to_perform type conversion.;@Nullable_	public Object getValue() {_		return this.value__	};return,the,value,of,the,property,p,note,that,type,conversion,will,i,not,i,have,occurred,here,it,is,the,responsibility,of,the,bean,wrapper,implementation,to,perform,type,conversion;nullable,public,object,get,value,return,this,value
PropertyValue -> @Nullable 	public Object getValue();1530174524;Return the value of the property._<p>Note that type conversion will <i>not</i> have occurred here._It is the responsibility of the BeanWrapper implementation to_perform type conversion.;@Nullable_	public Object getValue() {_		return this.value__	};return,the,value,of,the,property,p,note,that,type,conversion,will,i,not,i,have,occurred,here,it,is,the,responsibility,of,the,bean,wrapper,implementation,to,perform,type,conversion;nullable,public,object,get,value,return,this,value
PropertyValue -> public PropertyValue(String name, @Nullable Object value);1496837955;Create a new PropertyValue instance._@param name the name of the property (never {@code null})_@param value the value of the property (possibly before type conversion);public PropertyValue(String name, @Nullable Object value) {_		Assert.notNull(name, "Name must not be null")__		this.name = name__		this.value = value__	};create,a,new,property,value,instance,param,name,the,name,of,the,property,never,code,null,param,value,the,value,of,the,property,possibly,before,type,conversion;public,property,value,string,name,nullable,object,value,assert,not,null,name,name,must,not,be,null,this,name,name,this,value,value
PropertyValue -> public PropertyValue(String name, @Nullable Object value);1498780456;Create a new PropertyValue instance._@param name the name of the property (never {@code null})_@param value the value of the property (possibly before type conversion);public PropertyValue(String name, @Nullable Object value) {_		Assert.notNull(name, "Name must not be null")__		this.name = name__		this.value = value__	};create,a,new,property,value,instance,param,name,the,name,of,the,property,never,code,null,param,value,the,value,of,the,property,possibly,before,type,conversion;public,property,value,string,name,nullable,object,value,assert,not,null,name,name,must,not,be,null,this,name,name,this,value,value
PropertyValue -> public PropertyValue(String name, @Nullable Object value);1506097334;Create a new PropertyValue instance._@param name the name of the property (never {@code null})_@param value the value of the property (possibly before type conversion);public PropertyValue(String name, @Nullable Object value) {_		Assert.notNull(name, "Name must not be null")__		this.name = name__		this.value = value__	};create,a,new,property,value,instance,param,name,the,name,of,the,property,never,code,null,param,value,the,value,of,the,property,possibly,before,type,conversion;public,property,value,string,name,nullable,object,value,assert,not,null,name,name,must,not,be,null,this,name,name,this,value,value
PropertyValue -> public PropertyValue(String name, @Nullable Object value);1530174524;Create a new PropertyValue instance._@param name the name of the property (never {@code null})_@param value the value of the property (possibly before type conversion);public PropertyValue(String name, @Nullable Object value) {_		Assert.notNull(name, "Name must not be null")__		this.name = name__		this.value = value__	};create,a,new,property,value,instance,param,name,the,name,of,the,property,never,code,null,param,value,the,value,of,the,property,possibly,before,type,conversion;public,property,value,string,name,nullable,object,value,assert,not,null,name,name,must,not,be,null,this,name,name,this,value,value
