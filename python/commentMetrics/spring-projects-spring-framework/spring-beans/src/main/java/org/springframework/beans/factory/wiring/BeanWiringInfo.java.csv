# id;timestamp;commentText;codeText;commentWords;codeWords
BeanWiringInfo -> public int getAutowireMode();1328020251;Return one of the constants {@link #AUTOWIRE_BY_NAME} /_{@link #AUTOWIRE_BY_TYPE}, if autowiring is indicated.;public int getAutowireMode() {_		return this.autowireMode__	};return,one,of,the,constants,link,link,if,autowiring,is,indicated;public,int,get,autowire,mode,return,this,autowire,mode
BeanWiringInfo -> public int getAutowireMode();1356735495;Return one of the constants {@link #AUTOWIRE_BY_NAME} /_{@link #AUTOWIRE_BY_TYPE}, if autowiring is indicated.;public int getAutowireMode() {_		return this.autowireMode__	};return,one,of,the,constants,link,link,if,autowiring,is,indicated;public,int,get,autowire,mode,return,this,autowire,mode
BeanWiringInfo -> public int getAutowireMode();1495868221;Return one of the constants {@link #AUTOWIRE_BY_NAME} /_{@link #AUTOWIRE_BY_TYPE}, if autowiring is indicated.;public int getAutowireMode() {_		return this.autowireMode__	};return,one,of,the,constants,link,link,if,autowiring,is,indicated;public,int,get,autowire,mode,return,this,autowire,mode
BeanWiringInfo -> public int getAutowireMode();1498780456;Return one of the constants {@link #AUTOWIRE_BY_NAME} /_{@link #AUTOWIRE_BY_TYPE}, if autowiring is indicated.;public int getAutowireMode() {_		return this.autowireMode__	};return,one,of,the,constants,link,link,if,autowiring,is,indicated;public,int,get,autowire,mode,return,this,autowire,mode
BeanWiringInfo -> public BeanWiringInfo(String beanName, boolean isDefaultBeanName);1328020251;Create a new BeanWiringInfo that points to the given bean name._@param beanName the name of the bean definition to take the property values from_@param isDefaultBeanName whether the given bean name is a suggested_default bean name, not necessarily matching an actual bean definition_@throws IllegalArgumentException if the supplied beanName is <code>null</code>,_is empty, or consists wholly of whitespace;public BeanWiringInfo(String beanName, boolean isDefaultBeanName) {_		Assert.hasText(beanName, "'beanName' must not be empty")__		this.beanName = beanName__		this.isDefaultBeanName = isDefaultBeanName__	};create,a,new,bean,wiring,info,that,points,to,the,given,bean,name,param,bean,name,the,name,of,the,bean,definition,to,take,the,property,values,from,param,is,default,bean,name,whether,the,given,bean,name,is,a,suggested,default,bean,name,not,necessarily,matching,an,actual,bean,definition,throws,illegal,argument,exception,if,the,supplied,bean,name,is,code,null,code,is,empty,or,consists,wholly,of,whitespace;public,bean,wiring,info,string,bean,name,boolean,is,default,bean,name,assert,has,text,bean,name,bean,name,must,not,be,empty,this,bean,name,bean,name,this,is,default,bean,name,is,default,bean,name
BeanWiringInfo -> public BeanWiringInfo(String beanName, boolean isDefaultBeanName);1356735495;Create a new BeanWiringInfo that points to the given bean name._@param beanName the name of the bean definition to take the property values from_@param isDefaultBeanName whether the given bean name is a suggested_default bean name, not necessarily matching an actual bean definition_@throws IllegalArgumentException if the supplied beanName is {@code null},_is empty, or consists wholly of whitespace;public BeanWiringInfo(String beanName, boolean isDefaultBeanName) {_		Assert.hasText(beanName, "'beanName' must not be empty")__		this.beanName = beanName__		this.isDefaultBeanName = isDefaultBeanName__	};create,a,new,bean,wiring,info,that,points,to,the,given,bean,name,param,bean,name,the,name,of,the,bean,definition,to,take,the,property,values,from,param,is,default,bean,name,whether,the,given,bean,name,is,a,suggested,default,bean,name,not,necessarily,matching,an,actual,bean,definition,throws,illegal,argument,exception,if,the,supplied,bean,name,is,code,null,is,empty,or,consists,wholly,of,whitespace;public,bean,wiring,info,string,bean,name,boolean,is,default,bean,name,assert,has,text,bean,name,bean,name,must,not,be,empty,this,bean,name,bean,name,this,is,default,bean,name,is,default,bean,name
BeanWiringInfo -> public BeanWiringInfo(String beanName, boolean isDefaultBeanName);1495868221;Create a new BeanWiringInfo that points to the given bean name._@param beanName the name of the bean definition to take the property values from_@param isDefaultBeanName whether the given bean name is a suggested_default bean name, not necessarily matching an actual bean definition_@throws IllegalArgumentException if the supplied beanName is {@code null},_is empty, or consists wholly of whitespace;public BeanWiringInfo(String beanName, boolean isDefaultBeanName) {_		Assert.hasText(beanName, "'beanName' must not be empty")__		this.beanName = beanName__		this.isDefaultBeanName = isDefaultBeanName__	};create,a,new,bean,wiring,info,that,points,to,the,given,bean,name,param,bean,name,the,name,of,the,bean,definition,to,take,the,property,values,from,param,is,default,bean,name,whether,the,given,bean,name,is,a,suggested,default,bean,name,not,necessarily,matching,an,actual,bean,definition,throws,illegal,argument,exception,if,the,supplied,bean,name,is,code,null,is,empty,or,consists,wholly,of,whitespace;public,bean,wiring,info,string,bean,name,boolean,is,default,bean,name,assert,has,text,bean,name,bean,name,must,not,be,empty,this,bean,name,bean,name,this,is,default,bean,name,is,default,bean,name
BeanWiringInfo -> public BeanWiringInfo(String beanName, boolean isDefaultBeanName);1498780456;Create a new BeanWiringInfo that points to the given bean name._@param beanName the name of the bean definition to take the property values from_@param isDefaultBeanName whether the given bean name is a suggested_default bean name, not necessarily matching an actual bean definition_@throws IllegalArgumentException if the supplied beanName is {@code null},_is empty, or consists wholly of whitespace;public BeanWiringInfo(String beanName, boolean isDefaultBeanName) {_		Assert.hasText(beanName, "'beanName' must not be empty")__		this.beanName = beanName__		this.isDefaultBeanName = isDefaultBeanName__	};create,a,new,bean,wiring,info,that,points,to,the,given,bean,name,param,bean,name,the,name,of,the,bean,definition,to,take,the,property,values,from,param,is,default,bean,name,whether,the,given,bean,name,is,a,suggested,default,bean,name,not,necessarily,matching,an,actual,bean,definition,throws,illegal,argument,exception,if,the,supplied,bean,name,is,code,null,is,empty,or,consists,wholly,of,whitespace;public,bean,wiring,info,string,bean,name,boolean,is,default,bean,name,assert,has,text,bean,name,bean,name,must,not,be,empty,this,bean,name,bean,name,this,is,default,bean,name,is,default,bean,name
BeanWiringInfo -> public boolean indicatesAutowiring();1328020251;Return whether this BeanWiringInfo indicates autowiring.;public boolean indicatesAutowiring() {_		return (this.beanName == null)__	};return,whether,this,bean,wiring,info,indicates,autowiring;public,boolean,indicates,autowiring,return,this,bean,name,null
BeanWiringInfo -> public boolean indicatesAutowiring();1356735495;Return whether this BeanWiringInfo indicates autowiring.;public boolean indicatesAutowiring() {_		return (this.beanName == null)__	};return,whether,this,bean,wiring,info,indicates,autowiring;public,boolean,indicates,autowiring,return,this,bean,name,null
BeanWiringInfo -> public boolean indicatesAutowiring();1495868221;Return whether this BeanWiringInfo indicates autowiring.;public boolean indicatesAutowiring() {_		return (this.beanName == null)__	};return,whether,this,bean,wiring,info,indicates,autowiring;public,boolean,indicates,autowiring,return,this,bean,name,null
BeanWiringInfo -> public boolean indicatesAutowiring();1498780456;Return whether this BeanWiringInfo indicates autowiring.;public boolean indicatesAutowiring() {_		return (this.beanName == null)__	};return,whether,this,bean,wiring,info,indicates,autowiring;public,boolean,indicates,autowiring,return,this,bean,name,null
BeanWiringInfo -> public String getBeanName();1328020251;Return the specific bean name that this BeanWiringInfo points to, if any.;public String getBeanName() {_		return this.beanName__	};return,the,specific,bean,name,that,this,bean,wiring,info,points,to,if,any;public,string,get,bean,name,return,this,bean,name
BeanWiringInfo -> public String getBeanName();1356735495;Return the specific bean name that this BeanWiringInfo points to, if any.;public String getBeanName() {_		return this.beanName__	};return,the,specific,bean,name,that,this,bean,wiring,info,points,to,if,any;public,string,get,bean,name,return,this,bean,name
BeanWiringInfo -> public boolean getDependencyCheck();1328020251;Return whether to perform a dependency check for object references_in the bean instance (after autowiring).;public boolean getDependencyCheck() {_		return this.dependencyCheck__	};return,whether,to,perform,a,dependency,check,for,object,references,in,the,bean,instance,after,autowiring;public,boolean,get,dependency,check,return,this,dependency,check
BeanWiringInfo -> public boolean getDependencyCheck();1356735495;Return whether to perform a dependency check for object references_in the bean instance (after autowiring).;public boolean getDependencyCheck() {_		return this.dependencyCheck__	};return,whether,to,perform,a,dependency,check,for,object,references,in,the,bean,instance,after,autowiring;public,boolean,get,dependency,check,return,this,dependency,check
BeanWiringInfo -> public boolean getDependencyCheck();1495868221;Return whether to perform a dependency check for object references_in the bean instance (after autowiring).;public boolean getDependencyCheck() {_		return this.dependencyCheck__	};return,whether,to,perform,a,dependency,check,for,object,references,in,the,bean,instance,after,autowiring;public,boolean,get,dependency,check,return,this,dependency,check
BeanWiringInfo -> public boolean getDependencyCheck();1498780456;Return whether to perform a dependency check for object references_in the bean instance (after autowiring).;public boolean getDependencyCheck() {_		return this.dependencyCheck__	};return,whether,to,perform,a,dependency,check,for,object,references,in,the,bean,instance,after,autowiring;public,boolean,get,dependency,check,return,this,dependency,check
BeanWiringInfo -> @Nullable 	public String getBeanName();1495868221;Return the specific bean name that this BeanWiringInfo points to, if any.;@Nullable_	public String getBeanName() {_		return this.beanName__	};return,the,specific,bean,name,that,this,bean,wiring,info,points,to,if,any;nullable,public,string,get,bean,name,return,this,bean,name
BeanWiringInfo -> @Nullable 	public String getBeanName();1498780456;Return the specific bean name that this BeanWiringInfo points to, if any.;@Nullable_	public String getBeanName() {_		return this.beanName__	};return,the,specific,bean,name,that,this,bean,wiring,info,points,to,if,any;nullable,public,string,get,bean,name,return,this,bean,name
BeanWiringInfo -> public BeanWiringInfo();1328020251;Create a default BeanWiringInfo that suggests plain initialization of_factory and post-processor callbacks that the bean class may expect.;public BeanWiringInfo() {_	};create,a,default,bean,wiring,info,that,suggests,plain,initialization,of,factory,and,post,processor,callbacks,that,the,bean,class,may,expect;public,bean,wiring,info
BeanWiringInfo -> public BeanWiringInfo();1356735495;Create a default BeanWiringInfo that suggests plain initialization of_factory and post-processor callbacks that the bean class may expect.;public BeanWiringInfo() {_	};create,a,default,bean,wiring,info,that,suggests,plain,initialization,of,factory,and,post,processor,callbacks,that,the,bean,class,may,expect;public,bean,wiring,info
BeanWiringInfo -> public BeanWiringInfo();1495868221;Create a default BeanWiringInfo that suggests plain initialization of_factory and post-processor callbacks that the bean class may expect.;public BeanWiringInfo() {_	};create,a,default,bean,wiring,info,that,suggests,plain,initialization,of,factory,and,post,processor,callbacks,that,the,bean,class,may,expect;public,bean,wiring,info
BeanWiringInfo -> public BeanWiringInfo();1498780456;Create a default BeanWiringInfo that suggests plain initialization of_factory and post-processor callbacks that the bean class may expect.;public BeanWiringInfo() {_	};create,a,default,bean,wiring,info,that,suggests,plain,initialization,of,factory,and,post,processor,callbacks,that,the,bean,class,may,expect;public,bean,wiring,info
BeanWiringInfo -> public boolean isDefaultBeanName();1328020251;Return whether the specific bean name is a suggested default bean name,_not necessarily matching an actual bean definition in the factory.;public boolean isDefaultBeanName() {_		return this.isDefaultBeanName__	};return,whether,the,specific,bean,name,is,a,suggested,default,bean,name,not,necessarily,matching,an,actual,bean,definition,in,the,factory;public,boolean,is,default,bean,name,return,this,is,default,bean,name
BeanWiringInfo -> public boolean isDefaultBeanName();1356735495;Return whether the specific bean name is a suggested default bean name,_not necessarily matching an actual bean definition in the factory.;public boolean isDefaultBeanName() {_		return this.isDefaultBeanName__	};return,whether,the,specific,bean,name,is,a,suggested,default,bean,name,not,necessarily,matching,an,actual,bean,definition,in,the,factory;public,boolean,is,default,bean,name,return,this,is,default,bean,name
BeanWiringInfo -> public boolean isDefaultBeanName();1495868221;Return whether the specific bean name is a suggested default bean name,_not necessarily matching an actual bean definition in the factory.;public boolean isDefaultBeanName() {_		return this.isDefaultBeanName__	};return,whether,the,specific,bean,name,is,a,suggested,default,bean,name,not,necessarily,matching,an,actual,bean,definition,in,the,factory;public,boolean,is,default,bean,name,return,this,is,default,bean,name
BeanWiringInfo -> public boolean isDefaultBeanName();1498780456;Return whether the specific bean name is a suggested default bean name,_not necessarily matching an actual bean definition in the factory.;public boolean isDefaultBeanName() {_		return this.isDefaultBeanName__	};return,whether,the,specific,bean,name,is,a,suggested,default,bean,name,not,necessarily,matching,an,actual,bean,definition,in,the,factory;public,boolean,is,default,bean,name,return,this,is,default,bean,name
BeanWiringInfo -> public BeanWiringInfo(String beanName);1328020251;Create a new BeanWiringInfo that points to the given bean name._@param beanName the name of the bean definition to take the property values from_@throws IllegalArgumentException if the supplied beanName is <code>null</code>,_is empty, or consists wholly of whitespace;public BeanWiringInfo(String beanName) {_		this(beanName, false)__	};create,a,new,bean,wiring,info,that,points,to,the,given,bean,name,param,bean,name,the,name,of,the,bean,definition,to,take,the,property,values,from,throws,illegal,argument,exception,if,the,supplied,bean,name,is,code,null,code,is,empty,or,consists,wholly,of,whitespace;public,bean,wiring,info,string,bean,name,this,bean,name,false
BeanWiringInfo -> public BeanWiringInfo(String beanName);1356735495;Create a new BeanWiringInfo that points to the given bean name._@param beanName the name of the bean definition to take the property values from_@throws IllegalArgumentException if the supplied beanName is {@code null},_is empty, or consists wholly of whitespace;public BeanWiringInfo(String beanName) {_		this(beanName, false)__	};create,a,new,bean,wiring,info,that,points,to,the,given,bean,name,param,bean,name,the,name,of,the,bean,definition,to,take,the,property,values,from,throws,illegal,argument,exception,if,the,supplied,bean,name,is,code,null,is,empty,or,consists,wholly,of,whitespace;public,bean,wiring,info,string,bean,name,this,bean,name,false
BeanWiringInfo -> public BeanWiringInfo(String beanName);1495868221;Create a new BeanWiringInfo that points to the given bean name._@param beanName the name of the bean definition to take the property values from_@throws IllegalArgumentException if the supplied beanName is {@code null},_is empty, or consists wholly of whitespace;public BeanWiringInfo(String beanName) {_		this(beanName, false)__	};create,a,new,bean,wiring,info,that,points,to,the,given,bean,name,param,bean,name,the,name,of,the,bean,definition,to,take,the,property,values,from,throws,illegal,argument,exception,if,the,supplied,bean,name,is,code,null,is,empty,or,consists,wholly,of,whitespace;public,bean,wiring,info,string,bean,name,this,bean,name,false
BeanWiringInfo -> public BeanWiringInfo(String beanName);1498780456;Create a new BeanWiringInfo that points to the given bean name._@param beanName the name of the bean definition to take the property values from_@throws IllegalArgumentException if the supplied beanName is {@code null},_is empty, or consists wholly of whitespace;public BeanWiringInfo(String beanName) {_		this(beanName, false)__	};create,a,new,bean,wiring,info,that,points,to,the,given,bean,name,param,bean,name,the,name,of,the,bean,definition,to,take,the,property,values,from,throws,illegal,argument,exception,if,the,supplied,bean,name,is,code,null,is,empty,or,consists,wholly,of,whitespace;public,bean,wiring,info,string,bean,name,this,bean,name,false
BeanWiringInfo -> public BeanWiringInfo(int autowireMode, boolean dependencyCheck);1328020251;Create a new BeanWiringInfo that indicates autowiring._@param autowireMode one of the constants {@link #AUTOWIRE_BY_NAME} /_{@link #AUTOWIRE_BY_TYPE}_@param dependencyCheck whether to perform a dependency check for object_references in the bean instance (after autowiring)_@throws IllegalArgumentException if the supplied <code>autowireMode</code>_is not one of the allowed values_@see #AUTOWIRE_BY_NAME_@see #AUTOWIRE_BY_TYPE;public BeanWiringInfo(int autowireMode, boolean dependencyCheck) {_		if (autowireMode != AUTOWIRE_BY_NAME && autowireMode != AUTOWIRE_BY_TYPE) {_			throw new IllegalArgumentException("Only constants AUTOWIRE_BY_NAME and AUTOWIRE_BY_TYPE supported")__		}_		this.autowireMode = autowireMode__		this.dependencyCheck = dependencyCheck__	};create,a,new,bean,wiring,info,that,indicates,autowiring,param,autowire,mode,one,of,the,constants,link,link,param,dependency,check,whether,to,perform,a,dependency,check,for,object,references,in,the,bean,instance,after,autowiring,throws,illegal,argument,exception,if,the,supplied,code,autowire,mode,code,is,not,one,of,the,allowed,values,see,see;public,bean,wiring,info,int,autowire,mode,boolean,dependency,check,if,autowire,mode,autowire,mode,throw,new,illegal,argument,exception,only,constants,and,supported,this,autowire,mode,autowire,mode,this,dependency,check,dependency,check
BeanWiringInfo -> public BeanWiringInfo(int autowireMode, boolean dependencyCheck);1356735495;Create a new BeanWiringInfo that indicates autowiring._@param autowireMode one of the constants {@link #AUTOWIRE_BY_NAME} /_{@link #AUTOWIRE_BY_TYPE}_@param dependencyCheck whether to perform a dependency check for object_references in the bean instance (after autowiring)_@throws IllegalArgumentException if the supplied {@code autowireMode}_is not one of the allowed values_@see #AUTOWIRE_BY_NAME_@see #AUTOWIRE_BY_TYPE;public BeanWiringInfo(int autowireMode, boolean dependencyCheck) {_		if (autowireMode != AUTOWIRE_BY_NAME && autowireMode != AUTOWIRE_BY_TYPE) {_			throw new IllegalArgumentException("Only constants AUTOWIRE_BY_NAME and AUTOWIRE_BY_TYPE supported")__		}_		this.autowireMode = autowireMode__		this.dependencyCheck = dependencyCheck__	};create,a,new,bean,wiring,info,that,indicates,autowiring,param,autowire,mode,one,of,the,constants,link,link,param,dependency,check,whether,to,perform,a,dependency,check,for,object,references,in,the,bean,instance,after,autowiring,throws,illegal,argument,exception,if,the,supplied,code,autowire,mode,is,not,one,of,the,allowed,values,see,see;public,bean,wiring,info,int,autowire,mode,boolean,dependency,check,if,autowire,mode,autowire,mode,throw,new,illegal,argument,exception,only,constants,and,supported,this,autowire,mode,autowire,mode,this,dependency,check,dependency,check
BeanWiringInfo -> public BeanWiringInfo(int autowireMode, boolean dependencyCheck);1495868221;Create a new BeanWiringInfo that indicates autowiring._@param autowireMode one of the constants {@link #AUTOWIRE_BY_NAME} /_{@link #AUTOWIRE_BY_TYPE}_@param dependencyCheck whether to perform a dependency check for object_references in the bean instance (after autowiring)_@throws IllegalArgumentException if the supplied {@code autowireMode}_is not one of the allowed values_@see #AUTOWIRE_BY_NAME_@see #AUTOWIRE_BY_TYPE;public BeanWiringInfo(int autowireMode, boolean dependencyCheck) {_		if (autowireMode != AUTOWIRE_BY_NAME && autowireMode != AUTOWIRE_BY_TYPE) {_			throw new IllegalArgumentException("Only constants AUTOWIRE_BY_NAME and AUTOWIRE_BY_TYPE supported")__		}_		this.autowireMode = autowireMode__		this.dependencyCheck = dependencyCheck__	};create,a,new,bean,wiring,info,that,indicates,autowiring,param,autowire,mode,one,of,the,constants,link,link,param,dependency,check,whether,to,perform,a,dependency,check,for,object,references,in,the,bean,instance,after,autowiring,throws,illegal,argument,exception,if,the,supplied,code,autowire,mode,is,not,one,of,the,allowed,values,see,see;public,bean,wiring,info,int,autowire,mode,boolean,dependency,check,if,autowire,mode,autowire,mode,throw,new,illegal,argument,exception,only,constants,and,supported,this,autowire,mode,autowire,mode,this,dependency,check,dependency,check
BeanWiringInfo -> public BeanWiringInfo(int autowireMode, boolean dependencyCheck);1498780456;Create a new BeanWiringInfo that indicates autowiring._@param autowireMode one of the constants {@link #AUTOWIRE_BY_NAME} /_{@link #AUTOWIRE_BY_TYPE}_@param dependencyCheck whether to perform a dependency check for object_references in the bean instance (after autowiring)_@throws IllegalArgumentException if the supplied {@code autowireMode}_is not one of the allowed values_@see #AUTOWIRE_BY_NAME_@see #AUTOWIRE_BY_TYPE;public BeanWiringInfo(int autowireMode, boolean dependencyCheck) {_		if (autowireMode != AUTOWIRE_BY_NAME && autowireMode != AUTOWIRE_BY_TYPE) {_			throw new IllegalArgumentException("Only constants AUTOWIRE_BY_NAME and AUTOWIRE_BY_TYPE supported")__		}_		this.autowireMode = autowireMode__		this.dependencyCheck = dependencyCheck__	};create,a,new,bean,wiring,info,that,indicates,autowiring,param,autowire,mode,one,of,the,constants,link,link,param,dependency,check,whether,to,perform,a,dependency,check,for,object,references,in,the,bean,instance,after,autowiring,throws,illegal,argument,exception,if,the,supplied,code,autowire,mode,is,not,one,of,the,allowed,values,see,see;public,bean,wiring,info,int,autowire,mode,boolean,dependency,check,if,autowire,mode,autowire,mode,throw,new,illegal,argument,exception,only,constants,and,supported,this,autowire,mode,autowire,mode,this,dependency,check,dependency,check
