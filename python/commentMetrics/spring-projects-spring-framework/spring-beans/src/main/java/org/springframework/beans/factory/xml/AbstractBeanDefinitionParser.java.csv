# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractBeanDefinitionParser -> protected void postProcessComponentDefinition(BeanComponentDefinition componentDefinition);1328020251;Hook method called after the primary parsing of a_{@link BeanComponentDefinition} but before the_{@link BeanComponentDefinition} has been registered with a_{@link org.springframework.beans.factory.support.BeanDefinitionRegistry}._<p>Derived classes can override this method to supply any custom logic that_is to be executed after all the parsing is finished._<p>The default implementation is a no-op._@param componentDefinition the {@link BeanComponentDefinition} that is to be processed;protected void postProcessComponentDefinition(BeanComponentDefinition componentDefinition) {_	};hook,method,called,after,the,primary,parsing,of,a,link,bean,component,definition,but,before,the,link,bean,component,definition,has,been,registered,with,a,link,org,springframework,beans,factory,support,bean,definition,registry,p,derived,classes,can,override,this,method,to,supply,any,custom,logic,that,is,to,be,executed,after,all,the,parsing,is,finished,p,the,default,implementation,is,a,no,op,param,component,definition,the,link,bean,component,definition,that,is,to,be,processed;protected,void,post,process,component,definition,bean,component,definition,component,definition
AbstractBeanDefinitionParser -> protected void postProcessComponentDefinition(BeanComponentDefinition componentDefinition);1356735495;Hook method called after the primary parsing of a_{@link BeanComponentDefinition} but before the_{@link BeanComponentDefinition} has been registered with a_{@link org.springframework.beans.factory.support.BeanDefinitionRegistry}._<p>Derived classes can override this method to supply any custom logic that_is to be executed after all the parsing is finished._<p>The default implementation is a no-op._@param componentDefinition the {@link BeanComponentDefinition} that is to be processed;protected void postProcessComponentDefinition(BeanComponentDefinition componentDefinition) {_	};hook,method,called,after,the,primary,parsing,of,a,link,bean,component,definition,but,before,the,link,bean,component,definition,has,been,registered,with,a,link,org,springframework,beans,factory,support,bean,definition,registry,p,derived,classes,can,override,this,method,to,supply,any,custom,logic,that,is,to,be,executed,after,all,the,parsing,is,finished,p,the,default,implementation,is,a,no,op,param,component,definition,the,link,bean,component,definition,that,is,to,be,processed;protected,void,post,process,component,definition,bean,component,definition,component,definition
AbstractBeanDefinitionParser -> protected void postProcessComponentDefinition(BeanComponentDefinition componentDefinition);1357119239;Hook method called after the primary parsing of a_{@link BeanComponentDefinition} but before the_{@link BeanComponentDefinition} has been registered with a_{@link org.springframework.beans.factory.support.BeanDefinitionRegistry}._<p>Derived classes can override this method to supply any custom logic that_is to be executed after all the parsing is finished._<p>The default implementation is a no-op._@param componentDefinition the {@link BeanComponentDefinition} that is to be processed;protected void postProcessComponentDefinition(BeanComponentDefinition componentDefinition) {_	};hook,method,called,after,the,primary,parsing,of,a,link,bean,component,definition,but,before,the,link,bean,component,definition,has,been,registered,with,a,link,org,springframework,beans,factory,support,bean,definition,registry,p,derived,classes,can,override,this,method,to,supply,any,custom,logic,that,is,to,be,executed,after,all,the,parsing,is,finished,p,the,default,implementation,is,a,no,op,param,component,definition,the,link,bean,component,definition,that,is,to,be,processed;protected,void,post,process,component,definition,bean,component,definition,component,definition
AbstractBeanDefinitionParser -> protected void postProcessComponentDefinition(BeanComponentDefinition componentDefinition);1368482696;Hook method called after the primary parsing of a_{@link BeanComponentDefinition} but before the_{@link BeanComponentDefinition} has been registered with a_{@link org.springframework.beans.factory.support.BeanDefinitionRegistry}._<p>Derived classes can override this method to supply any custom logic that_is to be executed after all the parsing is finished._<p>The default implementation is a no-op._@param componentDefinition the {@link BeanComponentDefinition} that is to be processed;protected void postProcessComponentDefinition(BeanComponentDefinition componentDefinition) {_	};hook,method,called,after,the,primary,parsing,of,a,link,bean,component,definition,but,before,the,link,bean,component,definition,has,been,registered,with,a,link,org,springframework,beans,factory,support,bean,definition,registry,p,derived,classes,can,override,this,method,to,supply,any,custom,logic,that,is,to,be,executed,after,all,the,parsing,is,finished,p,the,default,implementation,is,a,no,op,param,component,definition,the,link,bean,component,definition,that,is,to,be,processed;protected,void,post,process,component,definition,bean,component,definition,component,definition
AbstractBeanDefinitionParser -> protected void postProcessComponentDefinition(BeanComponentDefinition componentDefinition);1421766121;Hook method called after the primary parsing of a_{@link BeanComponentDefinition} but before the_{@link BeanComponentDefinition} has been registered with a_{@link org.springframework.beans.factory.support.BeanDefinitionRegistry}._<p>Derived classes can override this method to supply any custom logic that_is to be executed after all the parsing is finished._<p>The default implementation is a no-op._@param componentDefinition the {@link BeanComponentDefinition} that is to be processed;protected void postProcessComponentDefinition(BeanComponentDefinition componentDefinition) {_	};hook,method,called,after,the,primary,parsing,of,a,link,bean,component,definition,but,before,the,link,bean,component,definition,has,been,registered,with,a,link,org,springframework,beans,factory,support,bean,definition,registry,p,derived,classes,can,override,this,method,to,supply,any,custom,logic,that,is,to,be,executed,after,all,the,parsing,is,finished,p,the,default,implementation,is,a,no,op,param,component,definition,the,link,bean,component,definition,that,is,to,be,processed;protected,void,post,process,component,definition,bean,component,definition,component,definition
AbstractBeanDefinitionParser -> protected void postProcessComponentDefinition(BeanComponentDefinition componentDefinition);1496242568;Hook method called after the primary parsing of a_{@link BeanComponentDefinition} but before the_{@link BeanComponentDefinition} has been registered with a_{@link org.springframework.beans.factory.support.BeanDefinitionRegistry}._<p>Derived classes can override this method to supply any custom logic that_is to be executed after all the parsing is finished._<p>The default implementation is a no-op._@param componentDefinition the {@link BeanComponentDefinition} that is to be processed;protected void postProcessComponentDefinition(BeanComponentDefinition componentDefinition) {_	};hook,method,called,after,the,primary,parsing,of,a,link,bean,component,definition,but,before,the,link,bean,component,definition,has,been,registered,with,a,link,org,springframework,beans,factory,support,bean,definition,registry,p,derived,classes,can,override,this,method,to,supply,any,custom,logic,that,is,to,be,executed,after,all,the,parsing,is,finished,p,the,default,implementation,is,a,no,op,param,component,definition,the,link,bean,component,definition,that,is,to,be,processed;protected,void,post,process,component,definition,bean,component,definition,component,definition
AbstractBeanDefinitionParser -> protected void postProcessComponentDefinition(BeanComponentDefinition componentDefinition);1496837955;Hook method called after the primary parsing of a_{@link BeanComponentDefinition} but before the_{@link BeanComponentDefinition} has been registered with a_{@link org.springframework.beans.factory.support.BeanDefinitionRegistry}._<p>Derived classes can override this method to supply any custom logic that_is to be executed after all the parsing is finished._<p>The default implementation is a no-op._@param componentDefinition the {@link BeanComponentDefinition} that is to be processed;protected void postProcessComponentDefinition(BeanComponentDefinition componentDefinition) {_	};hook,method,called,after,the,primary,parsing,of,a,link,bean,component,definition,but,before,the,link,bean,component,definition,has,been,registered,with,a,link,org,springframework,beans,factory,support,bean,definition,registry,p,derived,classes,can,override,this,method,to,supply,any,custom,logic,that,is,to,be,executed,after,all,the,parsing,is,finished,p,the,default,implementation,is,a,no,op,param,component,definition,the,link,bean,component,definition,that,is,to,be,processed;protected,void,post,process,component,definition,bean,component,definition,component,definition
AbstractBeanDefinitionParser -> protected void postProcessComponentDefinition(BeanComponentDefinition componentDefinition);1502974979;Hook method called after the primary parsing of a_{@link BeanComponentDefinition} but before the_{@link BeanComponentDefinition} has been registered with a_{@link org.springframework.beans.factory.support.BeanDefinitionRegistry}._<p>Derived classes can override this method to supply any custom logic that_is to be executed after all the parsing is finished._<p>The default implementation is a no-op._@param componentDefinition the {@link BeanComponentDefinition} that is to be processed;protected void postProcessComponentDefinition(BeanComponentDefinition componentDefinition) {_	};hook,method,called,after,the,primary,parsing,of,a,link,bean,component,definition,but,before,the,link,bean,component,definition,has,been,registered,with,a,link,org,springframework,beans,factory,support,bean,definition,registry,p,derived,classes,can,override,this,method,to,supply,any,custom,logic,that,is,to,be,executed,after,all,the,parsing,is,finished,p,the,default,implementation,is,a,no,op,param,component,definition,the,link,bean,component,definition,that,is,to,be,processed;protected,void,post,process,component,definition,bean,component,definition,component,definition
AbstractBeanDefinitionParser -> protected void postProcessComponentDefinition(BeanComponentDefinition componentDefinition);1530174524;Hook method called after the primary parsing of a_{@link BeanComponentDefinition} but before the_{@link BeanComponentDefinition} has been registered with a_{@link org.springframework.beans.factory.support.BeanDefinitionRegistry}._<p>Derived classes can override this method to supply any custom logic that_is to be executed after all the parsing is finished._<p>The default implementation is a no-op._@param componentDefinition the {@link BeanComponentDefinition} that is to be processed;protected void postProcessComponentDefinition(BeanComponentDefinition componentDefinition) {_	};hook,method,called,after,the,primary,parsing,of,a,link,bean,component,definition,but,before,the,link,bean,component,definition,has,been,registered,with,a,link,org,springframework,beans,factory,support,bean,definition,registry,p,derived,classes,can,override,this,method,to,supply,any,custom,logic,that,is,to,be,executed,after,all,the,parsing,is,finished,p,the,default,implementation,is,a,no,op,param,component,definition,the,link,bean,component,definition,that,is,to,be,processed;protected,void,post,process,component,definition,bean,component,definition,component,definition
AbstractBeanDefinitionParser -> protected boolean shouldGenerateIdAsFallback();1328020251;Should an ID be generated instead if the passed in {@link Element} does not_specify an "id" attribute explicitly?_<p>Disabled by default_ subclasses can override this to enable ID generation_as fallback: The parser will first check for an "id" attribute in this case,_only falling back to a generated ID if no value was specified._@return whether the parser should generate an id if no id was specified;protected boolean shouldGenerateIdAsFallback() {_		return false__	};should,an,id,be,generated,instead,if,the,passed,in,link,element,does,not,specify,an,id,attribute,explicitly,p,disabled,by,default,subclasses,can,override,this,to,enable,id,generation,as,fallback,the,parser,will,first,check,for,an,id,attribute,in,this,case,only,falling,back,to,a,generated,id,if,no,value,was,specified,return,whether,the,parser,should,generate,an,id,if,no,id,was,specified;protected,boolean,should,generate,id,as,fallback,return,false
AbstractBeanDefinitionParser -> protected boolean shouldGenerateIdAsFallback();1356735495;Should an ID be generated instead if the passed in {@link Element} does not_specify an "id" attribute explicitly?_<p>Disabled by default_ subclasses can override this to enable ID generation_as fallback: The parser will first check for an "id" attribute in this case,_only falling back to a generated ID if no value was specified._@return whether the parser should generate an id if no id was specified;protected boolean shouldGenerateIdAsFallback() {_		return false__	};should,an,id,be,generated,instead,if,the,passed,in,link,element,does,not,specify,an,id,attribute,explicitly,p,disabled,by,default,subclasses,can,override,this,to,enable,id,generation,as,fallback,the,parser,will,first,check,for,an,id,attribute,in,this,case,only,falling,back,to,a,generated,id,if,no,value,was,specified,return,whether,the,parser,should,generate,an,id,if,no,id,was,specified;protected,boolean,should,generate,id,as,fallback,return,false
AbstractBeanDefinitionParser -> protected boolean shouldGenerateIdAsFallback();1357119239;Should an ID be generated instead if the passed in {@link Element} does not_specify an "id" attribute explicitly?_<p>Disabled by default_ subclasses can override this to enable ID generation_as fallback: The parser will first check for an "id" attribute in this case,_only falling back to a generated ID if no value was specified._@return whether the parser should generate an id if no id was specified;protected boolean shouldGenerateIdAsFallback() {_		return false__	};should,an,id,be,generated,instead,if,the,passed,in,link,element,does,not,specify,an,id,attribute,explicitly,p,disabled,by,default,subclasses,can,override,this,to,enable,id,generation,as,fallback,the,parser,will,first,check,for,an,id,attribute,in,this,case,only,falling,back,to,a,generated,id,if,no,value,was,specified,return,whether,the,parser,should,generate,an,id,if,no,id,was,specified;protected,boolean,should,generate,id,as,fallback,return,false
AbstractBeanDefinitionParser -> protected boolean shouldGenerateIdAsFallback();1368482696;Should an ID be generated instead if the passed in {@link Element} does not_specify an "id" attribute explicitly?_<p>Disabled by default_ subclasses can override this to enable ID generation_as fallback: The parser will first check for an "id" attribute in this case,_only falling back to a generated ID if no value was specified._@return whether the parser should generate an id if no id was specified;protected boolean shouldGenerateIdAsFallback() {_		return false__	};should,an,id,be,generated,instead,if,the,passed,in,link,element,does,not,specify,an,id,attribute,explicitly,p,disabled,by,default,subclasses,can,override,this,to,enable,id,generation,as,fallback,the,parser,will,first,check,for,an,id,attribute,in,this,case,only,falling,back,to,a,generated,id,if,no,value,was,specified,return,whether,the,parser,should,generate,an,id,if,no,id,was,specified;protected,boolean,should,generate,id,as,fallback,return,false
AbstractBeanDefinitionParser -> protected boolean shouldGenerateIdAsFallback();1421766121;Should an ID be generated instead if the passed in {@link Element} does not_specify an "id" attribute explicitly?_<p>Disabled by default_ subclasses can override this to enable ID generation_as fallback: The parser will first check for an "id" attribute in this case,_only falling back to a generated ID if no value was specified._@return whether the parser should generate an id if no id was specified;protected boolean shouldGenerateIdAsFallback() {_		return false__	};should,an,id,be,generated,instead,if,the,passed,in,link,element,does,not,specify,an,id,attribute,explicitly,p,disabled,by,default,subclasses,can,override,this,to,enable,id,generation,as,fallback,the,parser,will,first,check,for,an,id,attribute,in,this,case,only,falling,back,to,a,generated,id,if,no,value,was,specified,return,whether,the,parser,should,generate,an,id,if,no,id,was,specified;protected,boolean,should,generate,id,as,fallback,return,false
AbstractBeanDefinitionParser -> protected boolean shouldGenerateIdAsFallback();1496242568;Should an ID be generated instead if the passed in {@link Element} does not_specify an "id" attribute explicitly?_<p>Disabled by default_ subclasses can override this to enable ID generation_as fallback: The parser will first check for an "id" attribute in this case,_only falling back to a generated ID if no value was specified._@return whether the parser should generate an id if no id was specified;protected boolean shouldGenerateIdAsFallback() {_		return false__	};should,an,id,be,generated,instead,if,the,passed,in,link,element,does,not,specify,an,id,attribute,explicitly,p,disabled,by,default,subclasses,can,override,this,to,enable,id,generation,as,fallback,the,parser,will,first,check,for,an,id,attribute,in,this,case,only,falling,back,to,a,generated,id,if,no,value,was,specified,return,whether,the,parser,should,generate,an,id,if,no,id,was,specified;protected,boolean,should,generate,id,as,fallback,return,false
AbstractBeanDefinitionParser -> protected boolean shouldGenerateIdAsFallback();1496837955;Should an ID be generated instead if the passed in {@link Element} does not_specify an "id" attribute explicitly?_<p>Disabled by default_ subclasses can override this to enable ID generation_as fallback: The parser will first check for an "id" attribute in this case,_only falling back to a generated ID if no value was specified._@return whether the parser should generate an id if no id was specified;protected boolean shouldGenerateIdAsFallback() {_		return false__	};should,an,id,be,generated,instead,if,the,passed,in,link,element,does,not,specify,an,id,attribute,explicitly,p,disabled,by,default,subclasses,can,override,this,to,enable,id,generation,as,fallback,the,parser,will,first,check,for,an,id,attribute,in,this,case,only,falling,back,to,a,generated,id,if,no,value,was,specified,return,whether,the,parser,should,generate,an,id,if,no,id,was,specified;protected,boolean,should,generate,id,as,fallback,return,false
AbstractBeanDefinitionParser -> protected boolean shouldGenerateIdAsFallback();1502974979;Should an ID be generated instead if the passed in {@link Element} does not_specify an "id" attribute explicitly?_<p>Disabled by default_ subclasses can override this to enable ID generation_as fallback: The parser will first check for an "id" attribute in this case,_only falling back to a generated ID if no value was specified._@return whether the parser should generate an id if no id was specified;protected boolean shouldGenerateIdAsFallback() {_		return false__	};should,an,id,be,generated,instead,if,the,passed,in,link,element,does,not,specify,an,id,attribute,explicitly,p,disabled,by,default,subclasses,can,override,this,to,enable,id,generation,as,fallback,the,parser,will,first,check,for,an,id,attribute,in,this,case,only,falling,back,to,a,generated,id,if,no,value,was,specified,return,whether,the,parser,should,generate,an,id,if,no,id,was,specified;protected,boolean,should,generate,id,as,fallback,return,false
AbstractBeanDefinitionParser -> protected boolean shouldGenerateIdAsFallback();1530174524;Should an ID be generated instead if the passed in {@link Element} does not_specify an "id" attribute explicitly?_<p>Disabled by default_ subclasses can override this to enable ID generation_as fallback: The parser will first check for an "id" attribute in this case,_only falling back to a generated ID if no value was specified._@return whether the parser should generate an id if no id was specified;protected boolean shouldGenerateIdAsFallback() {_		return false__	};should,an,id,be,generated,instead,if,the,passed,in,link,element,does,not,specify,an,id,attribute,explicitly,p,disabled,by,default,subclasses,can,override,this,to,enable,id,generation,as,fallback,the,parser,will,first,check,for,an,id,attribute,in,this,case,only,falling,back,to,a,generated,id,if,no,value,was,specified,return,whether,the,parser,should,generate,an,id,if,no,id,was,specified;protected,boolean,should,generate,id,as,fallback,return,false
AbstractBeanDefinitionParser -> protected boolean shouldFireEvents();1328020251;Controls whether this parser is supposed to fire a_{@link org.springframework.beans.factory.parsing.BeanComponentDefinition}_event after parsing the bean definition._<p>This implementation returns <code>true</code> by default_ that is,_an event will be fired when a bean definition has been completely parsed._Override this to return <code>false</code> in order to suppress the event._@return <code>true</code> in order to fire a component registration event_after parsing the bean definition_ <code>false</code> to suppress the event_@see #postProcessComponentDefinition_@see org.springframework.beans.factory.parsing.ReaderContext#fireComponentRegistered;protected boolean shouldFireEvents() {_		return true__	};controls,whether,this,parser,is,supposed,to,fire,a,link,org,springframework,beans,factory,parsing,bean,component,definition,event,after,parsing,the,bean,definition,p,this,implementation,returns,code,true,code,by,default,that,is,an,event,will,be,fired,when,a,bean,definition,has,been,completely,parsed,override,this,to,return,code,false,code,in,order,to,suppress,the,event,return,code,true,code,in,order,to,fire,a,component,registration,event,after,parsing,the,bean,definition,code,false,code,to,suppress,the,event,see,post,process,component,definition,see,org,springframework,beans,factory,parsing,reader,context,fire,component,registered;protected,boolean,should,fire,events,return,true
AbstractBeanDefinitionParser -> protected boolean shouldFireEvents();1356735495;Controls whether this parser is supposed to fire a_{@link org.springframework.beans.factory.parsing.BeanComponentDefinition}_event after parsing the bean definition._<p>This implementation returns {@code true} by default_ that is,_an event will be fired when a bean definition has been completely parsed._Override this to return {@code false} in order to suppress the event._@return {@code true} in order to fire a component registration event_after parsing the bean definition_ {@code false} to suppress the event_@see #postProcessComponentDefinition_@see org.springframework.beans.factory.parsing.ReaderContext#fireComponentRegistered;protected boolean shouldFireEvents() {_		return true__	};controls,whether,this,parser,is,supposed,to,fire,a,link,org,springframework,beans,factory,parsing,bean,component,definition,event,after,parsing,the,bean,definition,p,this,implementation,returns,code,true,by,default,that,is,an,event,will,be,fired,when,a,bean,definition,has,been,completely,parsed,override,this,to,return,code,false,in,order,to,suppress,the,event,return,code,true,in,order,to,fire,a,component,registration,event,after,parsing,the,bean,definition,code,false,to,suppress,the,event,see,post,process,component,definition,see,org,springframework,beans,factory,parsing,reader,context,fire,component,registered;protected,boolean,should,fire,events,return,true
AbstractBeanDefinitionParser -> protected boolean shouldFireEvents();1357119239;Controls whether this parser is supposed to fire a_{@link org.springframework.beans.factory.parsing.BeanComponentDefinition}_event after parsing the bean definition._<p>This implementation returns {@code true} by default_ that is,_an event will be fired when a bean definition has been completely parsed._Override this to return {@code false} in order to suppress the event._@return {@code true} in order to fire a component registration event_after parsing the bean definition_ {@code false} to suppress the event_@see #postProcessComponentDefinition_@see org.springframework.beans.factory.parsing.ReaderContext#fireComponentRegistered;protected boolean shouldFireEvents() {_		return true__	};controls,whether,this,parser,is,supposed,to,fire,a,link,org,springframework,beans,factory,parsing,bean,component,definition,event,after,parsing,the,bean,definition,p,this,implementation,returns,code,true,by,default,that,is,an,event,will,be,fired,when,a,bean,definition,has,been,completely,parsed,override,this,to,return,code,false,in,order,to,suppress,the,event,return,code,true,in,order,to,fire,a,component,registration,event,after,parsing,the,bean,definition,code,false,to,suppress,the,event,see,post,process,component,definition,see,org,springframework,beans,factory,parsing,reader,context,fire,component,registered;protected,boolean,should,fire,events,return,true
AbstractBeanDefinitionParser -> protected boolean shouldFireEvents();1368482696;Controls whether this parser is supposed to fire a_{@link org.springframework.beans.factory.parsing.BeanComponentDefinition}_event after parsing the bean definition._<p>This implementation returns {@code true} by default_ that is,_an event will be fired when a bean definition has been completely parsed._Override this to return {@code false} in order to suppress the event._@return {@code true} in order to fire a component registration event_after parsing the bean definition_ {@code false} to suppress the event_@see #postProcessComponentDefinition_@see org.springframework.beans.factory.parsing.ReaderContext#fireComponentRegistered;protected boolean shouldFireEvents() {_		return true__	};controls,whether,this,parser,is,supposed,to,fire,a,link,org,springframework,beans,factory,parsing,bean,component,definition,event,after,parsing,the,bean,definition,p,this,implementation,returns,code,true,by,default,that,is,an,event,will,be,fired,when,a,bean,definition,has,been,completely,parsed,override,this,to,return,code,false,in,order,to,suppress,the,event,return,code,true,in,order,to,fire,a,component,registration,event,after,parsing,the,bean,definition,code,false,to,suppress,the,event,see,post,process,component,definition,see,org,springframework,beans,factory,parsing,reader,context,fire,component,registered;protected,boolean,should,fire,events,return,true
AbstractBeanDefinitionParser -> protected boolean shouldFireEvents();1421766121;Determine whether this parser is supposed to fire a_{@link org.springframework.beans.factory.parsing.BeanComponentDefinition}_event after parsing the bean definition._<p>This implementation returns {@code true} by default_ that is,_an event will be fired when a bean definition has been completely parsed._Override this to return {@code false} in order to suppress the event._@return {@code true} in order to fire a component registration event_after parsing the bean definition_ {@code false} to suppress the event_@see #postProcessComponentDefinition_@see org.springframework.beans.factory.parsing.ReaderContext#fireComponentRegistered;protected boolean shouldFireEvents() {_		return true__	};determine,whether,this,parser,is,supposed,to,fire,a,link,org,springframework,beans,factory,parsing,bean,component,definition,event,after,parsing,the,bean,definition,p,this,implementation,returns,code,true,by,default,that,is,an,event,will,be,fired,when,a,bean,definition,has,been,completely,parsed,override,this,to,return,code,false,in,order,to,suppress,the,event,return,code,true,in,order,to,fire,a,component,registration,event,after,parsing,the,bean,definition,code,false,to,suppress,the,event,see,post,process,component,definition,see,org,springframework,beans,factory,parsing,reader,context,fire,component,registered;protected,boolean,should,fire,events,return,true
AbstractBeanDefinitionParser -> protected boolean shouldFireEvents();1496242568;Determine whether this parser is supposed to fire a_{@link org.springframework.beans.factory.parsing.BeanComponentDefinition}_event after parsing the bean definition._<p>This implementation returns {@code true} by default_ that is,_an event will be fired when a bean definition has been completely parsed._Override this to return {@code false} in order to suppress the event._@return {@code true} in order to fire a component registration event_after parsing the bean definition_ {@code false} to suppress the event_@see #postProcessComponentDefinition_@see org.springframework.beans.factory.parsing.ReaderContext#fireComponentRegistered;protected boolean shouldFireEvents() {_		return true__	};determine,whether,this,parser,is,supposed,to,fire,a,link,org,springframework,beans,factory,parsing,bean,component,definition,event,after,parsing,the,bean,definition,p,this,implementation,returns,code,true,by,default,that,is,an,event,will,be,fired,when,a,bean,definition,has,been,completely,parsed,override,this,to,return,code,false,in,order,to,suppress,the,event,return,code,true,in,order,to,fire,a,component,registration,event,after,parsing,the,bean,definition,code,false,to,suppress,the,event,see,post,process,component,definition,see,org,springframework,beans,factory,parsing,reader,context,fire,component,registered;protected,boolean,should,fire,events,return,true
AbstractBeanDefinitionParser -> protected boolean shouldFireEvents();1496837955;Determine whether this parser is supposed to fire a_{@link org.springframework.beans.factory.parsing.BeanComponentDefinition}_event after parsing the bean definition._<p>This implementation returns {@code true} by default_ that is,_an event will be fired when a bean definition has been completely parsed._Override this to return {@code false} in order to suppress the event._@return {@code true} in order to fire a component registration event_after parsing the bean definition_ {@code false} to suppress the event_@see #postProcessComponentDefinition_@see org.springframework.beans.factory.parsing.ReaderContext#fireComponentRegistered;protected boolean shouldFireEvents() {_		return true__	};determine,whether,this,parser,is,supposed,to,fire,a,link,org,springframework,beans,factory,parsing,bean,component,definition,event,after,parsing,the,bean,definition,p,this,implementation,returns,code,true,by,default,that,is,an,event,will,be,fired,when,a,bean,definition,has,been,completely,parsed,override,this,to,return,code,false,in,order,to,suppress,the,event,return,code,true,in,order,to,fire,a,component,registration,event,after,parsing,the,bean,definition,code,false,to,suppress,the,event,see,post,process,component,definition,see,org,springframework,beans,factory,parsing,reader,context,fire,component,registered;protected,boolean,should,fire,events,return,true
AbstractBeanDefinitionParser -> protected boolean shouldFireEvents();1502974979;Determine whether this parser is supposed to fire a_{@link org.springframework.beans.factory.parsing.BeanComponentDefinition}_event after parsing the bean definition._<p>This implementation returns {@code true} by default_ that is,_an event will be fired when a bean definition has been completely parsed._Override this to return {@code false} in order to suppress the event._@return {@code true} in order to fire a component registration event_after parsing the bean definition_ {@code false} to suppress the event_@see #postProcessComponentDefinition_@see org.springframework.beans.factory.parsing.ReaderContext#fireComponentRegistered;protected boolean shouldFireEvents() {_		return true__	};determine,whether,this,parser,is,supposed,to,fire,a,link,org,springframework,beans,factory,parsing,bean,component,definition,event,after,parsing,the,bean,definition,p,this,implementation,returns,code,true,by,default,that,is,an,event,will,be,fired,when,a,bean,definition,has,been,completely,parsed,override,this,to,return,code,false,in,order,to,suppress,the,event,return,code,true,in,order,to,fire,a,component,registration,event,after,parsing,the,bean,definition,code,false,to,suppress,the,event,see,post,process,component,definition,see,org,springframework,beans,factory,parsing,reader,context,fire,component,registered;protected,boolean,should,fire,events,return,true
AbstractBeanDefinitionParser -> protected boolean shouldFireEvents();1530174524;Determine whether this parser is supposed to fire a_{@link org.springframework.beans.factory.parsing.BeanComponentDefinition}_event after parsing the bean definition._<p>This implementation returns {@code true} by default_ that is,_an event will be fired when a bean definition has been completely parsed._Override this to return {@code false} in order to suppress the event._@return {@code true} in order to fire a component registration event_after parsing the bean definition_ {@code false} to suppress the event_@see #postProcessComponentDefinition_@see org.springframework.beans.factory.parsing.ReaderContext#fireComponentRegistered;protected boolean shouldFireEvents() {_		return true__	};determine,whether,this,parser,is,supposed,to,fire,a,link,org,springframework,beans,factory,parsing,bean,component,definition,event,after,parsing,the,bean,definition,p,this,implementation,returns,code,true,by,default,that,is,an,event,will,be,fired,when,a,bean,definition,has,been,completely,parsed,override,this,to,return,code,false,in,order,to,suppress,the,event,return,code,true,in,order,to,fire,a,component,registration,event,after,parsing,the,bean,definition,code,false,to,suppress,the,event,see,post,process,component,definition,see,org,springframework,beans,factory,parsing,reader,context,fire,component,registered;protected,boolean,should,fire,events,return,true
AbstractBeanDefinitionParser -> protected String resolveId(Element element, AbstractBeanDefinition definition, ParserContext parserContext) 			throws BeanDefinitionStoreException;1328020251;Resolve the ID for the supplied {@link BeanDefinition}._<p>When using {@link #shouldGenerateId generation}, a name is generated automatically._Otherwise, the ID is extracted from the "id" attribute, potentially with a_{@link #shouldGenerateIdAsFallback() fallback} to a generated id._@param element the element that the bean definition has been built from_@param definition the bean definition to be registered_@param parserContext the object encapsulating the current state of the parsing process__provides access to a {@link org.springframework.beans.factory.support.BeanDefinitionRegistry}_@return the resolved id_@throws BeanDefinitionStoreException if no unique name could be generated_for the given bean definition;protected String resolveId(Element element, AbstractBeanDefinition definition, ParserContext parserContext)_			throws BeanDefinitionStoreException {__		if (shouldGenerateId()) {_			return parserContext.getReaderContext().generateBeanName(definition)__		}_		else {_			String id = element.getAttribute(ID_ATTRIBUTE)__			if (!StringUtils.hasText(id) && shouldGenerateIdAsFallback()) {_				id = parserContext.getReaderContext().generateBeanName(definition)__			}_			return id__		}_	};resolve,the,id,for,the,supplied,link,bean,definition,p,when,using,link,should,generate,id,generation,a,name,is,generated,automatically,otherwise,the,id,is,extracted,from,the,id,attribute,potentially,with,a,link,should,generate,id,as,fallback,fallback,to,a,generated,id,param,element,the,element,that,the,bean,definition,has,been,built,from,param,definition,the,bean,definition,to,be,registered,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,provides,access,to,a,link,org,springframework,beans,factory,support,bean,definition,registry,return,the,resolved,id,throws,bean,definition,store,exception,if,no,unique,name,could,be,generated,for,the,given,bean,definition;protected,string,resolve,id,element,element,abstract,bean,definition,definition,parser,context,parser,context,throws,bean,definition,store,exception,if,should,generate,id,return,parser,context,get,reader,context,generate,bean,name,definition,else,string,id,element,get,attribute,if,string,utils,has,text,id,should,generate,id,as,fallback,id,parser,context,get,reader,context,generate,bean,name,definition,return,id
AbstractBeanDefinitionParser -> protected String resolveId(Element element, AbstractBeanDefinition definition, ParserContext parserContext) 			throws BeanDefinitionStoreException;1356735495;Resolve the ID for the supplied {@link BeanDefinition}._<p>When using {@link #shouldGenerateId generation}, a name is generated automatically._Otherwise, the ID is extracted from the "id" attribute, potentially with a_{@link #shouldGenerateIdAsFallback() fallback} to a generated id._@param element the element that the bean definition has been built from_@param definition the bean definition to be registered_@param parserContext the object encapsulating the current state of the parsing process__provides access to a {@link org.springframework.beans.factory.support.BeanDefinitionRegistry}_@return the resolved id_@throws BeanDefinitionStoreException if no unique name could be generated_for the given bean definition;protected String resolveId(Element element, AbstractBeanDefinition definition, ParserContext parserContext)_			throws BeanDefinitionStoreException {__		if (shouldGenerateId()) {_			return parserContext.getReaderContext().generateBeanName(definition)__		}_		else {_			String id = element.getAttribute(ID_ATTRIBUTE)__			if (!StringUtils.hasText(id) && shouldGenerateIdAsFallback()) {_				id = parserContext.getReaderContext().generateBeanName(definition)__			}_			return id__		}_	};resolve,the,id,for,the,supplied,link,bean,definition,p,when,using,link,should,generate,id,generation,a,name,is,generated,automatically,otherwise,the,id,is,extracted,from,the,id,attribute,potentially,with,a,link,should,generate,id,as,fallback,fallback,to,a,generated,id,param,element,the,element,that,the,bean,definition,has,been,built,from,param,definition,the,bean,definition,to,be,registered,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,provides,access,to,a,link,org,springframework,beans,factory,support,bean,definition,registry,return,the,resolved,id,throws,bean,definition,store,exception,if,no,unique,name,could,be,generated,for,the,given,bean,definition;protected,string,resolve,id,element,element,abstract,bean,definition,definition,parser,context,parser,context,throws,bean,definition,store,exception,if,should,generate,id,return,parser,context,get,reader,context,generate,bean,name,definition,else,string,id,element,get,attribute,if,string,utils,has,text,id,should,generate,id,as,fallback,id,parser,context,get,reader,context,generate,bean,name,definition,return,id
AbstractBeanDefinitionParser -> protected String resolveId(Element element, AbstractBeanDefinition definition, ParserContext parserContext) 			throws BeanDefinitionStoreException;1357119239;Resolve the ID for the supplied {@link BeanDefinition}._<p>When using {@link #shouldGenerateId generation}, a name is generated automatically._Otherwise, the ID is extracted from the "id" attribute, potentially with a_{@link #shouldGenerateIdAsFallback() fallback} to a generated id._@param element the element that the bean definition has been built from_@param definition the bean definition to be registered_@param parserContext the object encapsulating the current state of the parsing process__provides access to a {@link org.springframework.beans.factory.support.BeanDefinitionRegistry}_@return the resolved id_@throws BeanDefinitionStoreException if no unique name could be generated_for the given bean definition;protected String resolveId(Element element, AbstractBeanDefinition definition, ParserContext parserContext)_			throws BeanDefinitionStoreException {__		if (shouldGenerateId()) {_			return parserContext.getReaderContext().generateBeanName(definition)__		}_		else {_			String id = element.getAttribute(ID_ATTRIBUTE)__			if (!StringUtils.hasText(id) && shouldGenerateIdAsFallback()) {_				id = parserContext.getReaderContext().generateBeanName(definition)__			}_			return id__		}_	};resolve,the,id,for,the,supplied,link,bean,definition,p,when,using,link,should,generate,id,generation,a,name,is,generated,automatically,otherwise,the,id,is,extracted,from,the,id,attribute,potentially,with,a,link,should,generate,id,as,fallback,fallback,to,a,generated,id,param,element,the,element,that,the,bean,definition,has,been,built,from,param,definition,the,bean,definition,to,be,registered,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,provides,access,to,a,link,org,springframework,beans,factory,support,bean,definition,registry,return,the,resolved,id,throws,bean,definition,store,exception,if,no,unique,name,could,be,generated,for,the,given,bean,definition;protected,string,resolve,id,element,element,abstract,bean,definition,definition,parser,context,parser,context,throws,bean,definition,store,exception,if,should,generate,id,return,parser,context,get,reader,context,generate,bean,name,definition,else,string,id,element,get,attribute,if,string,utils,has,text,id,should,generate,id,as,fallback,id,parser,context,get,reader,context,generate,bean,name,definition,return,id
AbstractBeanDefinitionParser -> protected String resolveId(Element element, AbstractBeanDefinition definition, ParserContext parserContext) 			throws BeanDefinitionStoreException;1368482696;Resolve the ID for the supplied {@link BeanDefinition}._<p>When using {@link #shouldGenerateId generation}, a name is generated automatically._Otherwise, the ID is extracted from the "id" attribute, potentially with a_{@link #shouldGenerateIdAsFallback() fallback} to a generated id._@param element the element that the bean definition has been built from_@param definition the bean definition to be registered_@param parserContext the object encapsulating the current state of the parsing process__provides access to a {@link org.springframework.beans.factory.support.BeanDefinitionRegistry}_@return the resolved id_@throws BeanDefinitionStoreException if no unique name could be generated_for the given bean definition;protected String resolveId(Element element, AbstractBeanDefinition definition, ParserContext parserContext)_			throws BeanDefinitionStoreException {__		if (shouldGenerateId()) {_			return parserContext.getReaderContext().generateBeanName(definition)__		}_		else {_			String id = element.getAttribute(ID_ATTRIBUTE)__			if (!StringUtils.hasText(id) && shouldGenerateIdAsFallback()) {_				id = parserContext.getReaderContext().generateBeanName(definition)__			}_			return id__		}_	};resolve,the,id,for,the,supplied,link,bean,definition,p,when,using,link,should,generate,id,generation,a,name,is,generated,automatically,otherwise,the,id,is,extracted,from,the,id,attribute,potentially,with,a,link,should,generate,id,as,fallback,fallback,to,a,generated,id,param,element,the,element,that,the,bean,definition,has,been,built,from,param,definition,the,bean,definition,to,be,registered,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,provides,access,to,a,link,org,springframework,beans,factory,support,bean,definition,registry,return,the,resolved,id,throws,bean,definition,store,exception,if,no,unique,name,could,be,generated,for,the,given,bean,definition;protected,string,resolve,id,element,element,abstract,bean,definition,definition,parser,context,parser,context,throws,bean,definition,store,exception,if,should,generate,id,return,parser,context,get,reader,context,generate,bean,name,definition,else,string,id,element,get,attribute,if,string,utils,has,text,id,should,generate,id,as,fallback,id,parser,context,get,reader,context,generate,bean,name,definition,return,id
AbstractBeanDefinitionParser -> protected String resolveId(Element element, AbstractBeanDefinition definition, ParserContext parserContext) 			throws BeanDefinitionStoreException;1421766121;Resolve the ID for the supplied {@link BeanDefinition}._<p>When using {@link #shouldGenerateId generation}, a name is generated automatically._Otherwise, the ID is extracted from the "id" attribute, potentially with a_{@link #shouldGenerateIdAsFallback() fallback} to a generated id._@param element the element that the bean definition has been built from_@param definition the bean definition to be registered_@param parserContext the object encapsulating the current state of the parsing process__provides access to a {@link org.springframework.beans.factory.support.BeanDefinitionRegistry}_@return the resolved id_@throws BeanDefinitionStoreException if no unique name could be generated_for the given bean definition;protected String resolveId(Element element, AbstractBeanDefinition definition, ParserContext parserContext)_			throws BeanDefinitionStoreException {__		if (shouldGenerateId()) {_			return parserContext.getReaderContext().generateBeanName(definition)__		}_		else {_			String id = element.getAttribute(ID_ATTRIBUTE)__			if (!StringUtils.hasText(id) && shouldGenerateIdAsFallback()) {_				id = parserContext.getReaderContext().generateBeanName(definition)__			}_			return id__		}_	};resolve,the,id,for,the,supplied,link,bean,definition,p,when,using,link,should,generate,id,generation,a,name,is,generated,automatically,otherwise,the,id,is,extracted,from,the,id,attribute,potentially,with,a,link,should,generate,id,as,fallback,fallback,to,a,generated,id,param,element,the,element,that,the,bean,definition,has,been,built,from,param,definition,the,bean,definition,to,be,registered,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,provides,access,to,a,link,org,springframework,beans,factory,support,bean,definition,registry,return,the,resolved,id,throws,bean,definition,store,exception,if,no,unique,name,could,be,generated,for,the,given,bean,definition;protected,string,resolve,id,element,element,abstract,bean,definition,definition,parser,context,parser,context,throws,bean,definition,store,exception,if,should,generate,id,return,parser,context,get,reader,context,generate,bean,name,definition,else,string,id,element,get,attribute,if,string,utils,has,text,id,should,generate,id,as,fallback,id,parser,context,get,reader,context,generate,bean,name,definition,return,id
AbstractBeanDefinitionParser -> protected String resolveId(Element element, AbstractBeanDefinition definition, ParserContext parserContext) 			throws BeanDefinitionStoreException;1496242568;Resolve the ID for the supplied {@link BeanDefinition}._<p>When using {@link #shouldGenerateId generation}, a name is generated automatically._Otherwise, the ID is extracted from the "id" attribute, potentially with a_{@link #shouldGenerateIdAsFallback() fallback} to a generated id._@param element the element that the bean definition has been built from_@param definition the bean definition to be registered_@param parserContext the object encapsulating the current state of the parsing process__provides access to a {@link org.springframework.beans.factory.support.BeanDefinitionRegistry}_@return the resolved id_@throws BeanDefinitionStoreException if no unique name could be generated_for the given bean definition;protected String resolveId(Element element, AbstractBeanDefinition definition, ParserContext parserContext)_			throws BeanDefinitionStoreException {__		if (shouldGenerateId()) {_			return parserContext.getReaderContext().generateBeanName(definition)__		}_		else {_			String id = element.getAttribute(ID_ATTRIBUTE)__			if (!StringUtils.hasText(id) && shouldGenerateIdAsFallback()) {_				id = parserContext.getReaderContext().generateBeanName(definition)__			}_			return id__		}_	};resolve,the,id,for,the,supplied,link,bean,definition,p,when,using,link,should,generate,id,generation,a,name,is,generated,automatically,otherwise,the,id,is,extracted,from,the,id,attribute,potentially,with,a,link,should,generate,id,as,fallback,fallback,to,a,generated,id,param,element,the,element,that,the,bean,definition,has,been,built,from,param,definition,the,bean,definition,to,be,registered,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,provides,access,to,a,link,org,springframework,beans,factory,support,bean,definition,registry,return,the,resolved,id,throws,bean,definition,store,exception,if,no,unique,name,could,be,generated,for,the,given,bean,definition;protected,string,resolve,id,element,element,abstract,bean,definition,definition,parser,context,parser,context,throws,bean,definition,store,exception,if,should,generate,id,return,parser,context,get,reader,context,generate,bean,name,definition,else,string,id,element,get,attribute,if,string,utils,has,text,id,should,generate,id,as,fallback,id,parser,context,get,reader,context,generate,bean,name,definition,return,id
AbstractBeanDefinitionParser -> protected String resolveId(Element element, AbstractBeanDefinition definition, ParserContext parserContext) 			throws BeanDefinitionStoreException;1496837955;Resolve the ID for the supplied {@link BeanDefinition}._<p>When using {@link #shouldGenerateId generation}, a name is generated automatically._Otherwise, the ID is extracted from the "id" attribute, potentially with a_{@link #shouldGenerateIdAsFallback() fallback} to a generated id._@param element the element that the bean definition has been built from_@param definition the bean definition to be registered_@param parserContext the object encapsulating the current state of the parsing process__provides access to a {@link org.springframework.beans.factory.support.BeanDefinitionRegistry}_@return the resolved id_@throws BeanDefinitionStoreException if no unique name could be generated_for the given bean definition;protected String resolveId(Element element, AbstractBeanDefinition definition, ParserContext parserContext)_			throws BeanDefinitionStoreException {__		if (shouldGenerateId()) {_			return parserContext.getReaderContext().generateBeanName(definition)__		}_		else {_			String id = element.getAttribute(ID_ATTRIBUTE)__			if (!StringUtils.hasText(id) && shouldGenerateIdAsFallback()) {_				id = parserContext.getReaderContext().generateBeanName(definition)__			}_			return id__		}_	};resolve,the,id,for,the,supplied,link,bean,definition,p,when,using,link,should,generate,id,generation,a,name,is,generated,automatically,otherwise,the,id,is,extracted,from,the,id,attribute,potentially,with,a,link,should,generate,id,as,fallback,fallback,to,a,generated,id,param,element,the,element,that,the,bean,definition,has,been,built,from,param,definition,the,bean,definition,to,be,registered,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,provides,access,to,a,link,org,springframework,beans,factory,support,bean,definition,registry,return,the,resolved,id,throws,bean,definition,store,exception,if,no,unique,name,could,be,generated,for,the,given,bean,definition;protected,string,resolve,id,element,element,abstract,bean,definition,definition,parser,context,parser,context,throws,bean,definition,store,exception,if,should,generate,id,return,parser,context,get,reader,context,generate,bean,name,definition,else,string,id,element,get,attribute,if,string,utils,has,text,id,should,generate,id,as,fallback,id,parser,context,get,reader,context,generate,bean,name,definition,return,id
AbstractBeanDefinitionParser -> protected String resolveId(Element element, AbstractBeanDefinition definition, ParserContext parserContext) 			throws BeanDefinitionStoreException;1502974979;Resolve the ID for the supplied {@link BeanDefinition}._<p>When using {@link #shouldGenerateId generation}, a name is generated automatically._Otherwise, the ID is extracted from the "id" attribute, potentially with a_{@link #shouldGenerateIdAsFallback() fallback} to a generated id._@param element the element that the bean definition has been built from_@param definition the bean definition to be registered_@param parserContext the object encapsulating the current state of the parsing process__provides access to a {@link org.springframework.beans.factory.support.BeanDefinitionRegistry}_@return the resolved id_@throws BeanDefinitionStoreException if no unique name could be generated_for the given bean definition;protected String resolveId(Element element, AbstractBeanDefinition definition, ParserContext parserContext)_			throws BeanDefinitionStoreException {__		if (shouldGenerateId()) {_			return parserContext.getReaderContext().generateBeanName(definition)__		}_		else {_			String id = element.getAttribute(ID_ATTRIBUTE)__			if (!StringUtils.hasText(id) && shouldGenerateIdAsFallback()) {_				id = parserContext.getReaderContext().generateBeanName(definition)__			}_			return id__		}_	};resolve,the,id,for,the,supplied,link,bean,definition,p,when,using,link,should,generate,id,generation,a,name,is,generated,automatically,otherwise,the,id,is,extracted,from,the,id,attribute,potentially,with,a,link,should,generate,id,as,fallback,fallback,to,a,generated,id,param,element,the,element,that,the,bean,definition,has,been,built,from,param,definition,the,bean,definition,to,be,registered,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,provides,access,to,a,link,org,springframework,beans,factory,support,bean,definition,registry,return,the,resolved,id,throws,bean,definition,store,exception,if,no,unique,name,could,be,generated,for,the,given,bean,definition;protected,string,resolve,id,element,element,abstract,bean,definition,definition,parser,context,parser,context,throws,bean,definition,store,exception,if,should,generate,id,return,parser,context,get,reader,context,generate,bean,name,definition,else,string,id,element,get,attribute,if,string,utils,has,text,id,should,generate,id,as,fallback,id,parser,context,get,reader,context,generate,bean,name,definition,return,id
AbstractBeanDefinitionParser -> protected String resolveId(Element element, AbstractBeanDefinition definition, ParserContext parserContext) 			throws BeanDefinitionStoreException;1530174524;Resolve the ID for the supplied {@link BeanDefinition}._<p>When using {@link #shouldGenerateId generation}, a name is generated automatically._Otherwise, the ID is extracted from the "id" attribute, potentially with a_{@link #shouldGenerateIdAsFallback() fallback} to a generated id._@param element the element that the bean definition has been built from_@param definition the bean definition to be registered_@param parserContext the object encapsulating the current state of the parsing process__provides access to a {@link org.springframework.beans.factory.support.BeanDefinitionRegistry}_@return the resolved id_@throws BeanDefinitionStoreException if no unique name could be generated_for the given bean definition;protected String resolveId(Element element, AbstractBeanDefinition definition, ParserContext parserContext)_			throws BeanDefinitionStoreException {__		if (shouldGenerateId()) {_			return parserContext.getReaderContext().generateBeanName(definition)__		}_		else {_			String id = element.getAttribute(ID_ATTRIBUTE)__			if (!StringUtils.hasText(id) && shouldGenerateIdAsFallback()) {_				id = parserContext.getReaderContext().generateBeanName(definition)__			}_			return id__		}_	};resolve,the,id,for,the,supplied,link,bean,definition,p,when,using,link,should,generate,id,generation,a,name,is,generated,automatically,otherwise,the,id,is,extracted,from,the,id,attribute,potentially,with,a,link,should,generate,id,as,fallback,fallback,to,a,generated,id,param,element,the,element,that,the,bean,definition,has,been,built,from,param,definition,the,bean,definition,to,be,registered,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,provides,access,to,a,link,org,springframework,beans,factory,support,bean,definition,registry,return,the,resolved,id,throws,bean,definition,store,exception,if,no,unique,name,could,be,generated,for,the,given,bean,definition;protected,string,resolve,id,element,element,abstract,bean,definition,definition,parser,context,parser,context,throws,bean,definition,store,exception,if,should,generate,id,return,parser,context,get,reader,context,generate,bean,name,definition,else,string,id,element,get,attribute,if,string,utils,has,text,id,should,generate,id,as,fallback,id,parser,context,get,reader,context,generate,bean,name,definition,return,id
AbstractBeanDefinitionParser -> protected boolean shouldGenerateId();1328020251;Should an ID be generated instead of read from the passed in {@link Element}?_<p>Disabled by default_ subclasses can override this to enable ID generation._Note that this flag is about <i>always</i> generating an ID_ the parser_won't even check for an "id" attribute in this case._@return whether the parser should always generate an id;protected boolean shouldGenerateId() {_		return false__	};should,an,id,be,generated,instead,of,read,from,the,passed,in,link,element,p,disabled,by,default,subclasses,can,override,this,to,enable,id,generation,note,that,this,flag,is,about,i,always,i,generating,an,id,the,parser,won,t,even,check,for,an,id,attribute,in,this,case,return,whether,the,parser,should,always,generate,an,id;protected,boolean,should,generate,id,return,false
AbstractBeanDefinitionParser -> protected boolean shouldGenerateId();1356735495;Should an ID be generated instead of read from the passed in {@link Element}?_<p>Disabled by default_ subclasses can override this to enable ID generation._Note that this flag is about <i>always</i> generating an ID_ the parser_won't even check for an "id" attribute in this case._@return whether the parser should always generate an id;protected boolean shouldGenerateId() {_		return false__	};should,an,id,be,generated,instead,of,read,from,the,passed,in,link,element,p,disabled,by,default,subclasses,can,override,this,to,enable,id,generation,note,that,this,flag,is,about,i,always,i,generating,an,id,the,parser,won,t,even,check,for,an,id,attribute,in,this,case,return,whether,the,parser,should,always,generate,an,id;protected,boolean,should,generate,id,return,false
AbstractBeanDefinitionParser -> protected boolean shouldGenerateId();1357119239;Should an ID be generated instead of read from the passed in {@link Element}?_<p>Disabled by default_ subclasses can override this to enable ID generation._Note that this flag is about <i>always</i> generating an ID_ the parser_won't even check for an "id" attribute in this case._@return whether the parser should always generate an id;protected boolean shouldGenerateId() {_		return false__	};should,an,id,be,generated,instead,of,read,from,the,passed,in,link,element,p,disabled,by,default,subclasses,can,override,this,to,enable,id,generation,note,that,this,flag,is,about,i,always,i,generating,an,id,the,parser,won,t,even,check,for,an,id,attribute,in,this,case,return,whether,the,parser,should,always,generate,an,id;protected,boolean,should,generate,id,return,false
AbstractBeanDefinitionParser -> protected boolean shouldGenerateId();1368482696;Should an ID be generated instead of read from the passed in {@link Element}?_<p>Disabled by default_ subclasses can override this to enable ID generation._Note that this flag is about <i>always</i> generating an ID_ the parser_won't even check for an "id" attribute in this case._@return whether the parser should always generate an id;protected boolean shouldGenerateId() {_		return false__	};should,an,id,be,generated,instead,of,read,from,the,passed,in,link,element,p,disabled,by,default,subclasses,can,override,this,to,enable,id,generation,note,that,this,flag,is,about,i,always,i,generating,an,id,the,parser,won,t,even,check,for,an,id,attribute,in,this,case,return,whether,the,parser,should,always,generate,an,id;protected,boolean,should,generate,id,return,false
AbstractBeanDefinitionParser -> protected boolean shouldGenerateId();1421766121;Should an ID be generated instead of read from the passed in {@link Element}?_<p>Disabled by default_ subclasses can override this to enable ID generation._Note that this flag is about <i>always</i> generating an ID_ the parser_won't even check for an "id" attribute in this case._@return whether the parser should always generate an id;protected boolean shouldGenerateId() {_		return false__	};should,an,id,be,generated,instead,of,read,from,the,passed,in,link,element,p,disabled,by,default,subclasses,can,override,this,to,enable,id,generation,note,that,this,flag,is,about,i,always,i,generating,an,id,the,parser,won,t,even,check,for,an,id,attribute,in,this,case,return,whether,the,parser,should,always,generate,an,id;protected,boolean,should,generate,id,return,false
AbstractBeanDefinitionParser -> protected boolean shouldGenerateId();1496242568;Should an ID be generated instead of read from the passed in {@link Element}?_<p>Disabled by default_ subclasses can override this to enable ID generation._Note that this flag is about <i>always</i> generating an ID_ the parser_won't even check for an "id" attribute in this case._@return whether the parser should always generate an id;protected boolean shouldGenerateId() {_		return false__	};should,an,id,be,generated,instead,of,read,from,the,passed,in,link,element,p,disabled,by,default,subclasses,can,override,this,to,enable,id,generation,note,that,this,flag,is,about,i,always,i,generating,an,id,the,parser,won,t,even,check,for,an,id,attribute,in,this,case,return,whether,the,parser,should,always,generate,an,id;protected,boolean,should,generate,id,return,false
AbstractBeanDefinitionParser -> protected boolean shouldGenerateId();1496837955;Should an ID be generated instead of read from the passed in {@link Element}?_<p>Disabled by default_ subclasses can override this to enable ID generation._Note that this flag is about <i>always</i> generating an ID_ the parser_won't even check for an "id" attribute in this case._@return whether the parser should always generate an id;protected boolean shouldGenerateId() {_		return false__	};should,an,id,be,generated,instead,of,read,from,the,passed,in,link,element,p,disabled,by,default,subclasses,can,override,this,to,enable,id,generation,note,that,this,flag,is,about,i,always,i,generating,an,id,the,parser,won,t,even,check,for,an,id,attribute,in,this,case,return,whether,the,parser,should,always,generate,an,id;protected,boolean,should,generate,id,return,false
AbstractBeanDefinitionParser -> protected boolean shouldGenerateId();1502974979;Should an ID be generated instead of read from the passed in {@link Element}?_<p>Disabled by default_ subclasses can override this to enable ID generation._Note that this flag is about <i>always</i> generating an ID_ the parser_won't even check for an "id" attribute in this case._@return whether the parser should always generate an id;protected boolean shouldGenerateId() {_		return false__	};should,an,id,be,generated,instead,of,read,from,the,passed,in,link,element,p,disabled,by,default,subclasses,can,override,this,to,enable,id,generation,note,that,this,flag,is,about,i,always,i,generating,an,id,the,parser,won,t,even,check,for,an,id,attribute,in,this,case,return,whether,the,parser,should,always,generate,an,id;protected,boolean,should,generate,id,return,false
AbstractBeanDefinitionParser -> protected boolean shouldGenerateId();1530174524;Should an ID be generated instead of read from the passed in {@link Element}?_<p>Disabled by default_ subclasses can override this to enable ID generation._Note that this flag is about <i>always</i> generating an ID_ the parser_won't even check for an "id" attribute in this case._@return whether the parser should always generate an id;protected boolean shouldGenerateId() {_		return false__	};should,an,id,be,generated,instead,of,read,from,the,passed,in,link,element,p,disabled,by,default,subclasses,can,override,this,to,enable,id,generation,note,that,this,flag,is,about,i,always,i,generating,an,id,the,parser,won,t,even,check,for,an,id,attribute,in,this,case,return,whether,the,parser,should,always,generate,an,id;protected,boolean,should,generate,id,return,false
AbstractBeanDefinitionParser -> protected boolean shouldParseNameAsAliases();1421766121;Determine whether the element's "name" attribute should get parsed as_bean definition aliases, i.e. alternative bean definition names._<p>The default implementation returns {@code true}._@return whether the parser should evaluate the "name" attribute as aliases_@since 4.1.5;protected boolean shouldParseNameAsAliases() {_		return true__	};determine,whether,the,element,s,name,attribute,should,get,parsed,as,bean,definition,aliases,i,e,alternative,bean,definition,names,p,the,default,implementation,returns,code,true,return,whether,the,parser,should,evaluate,the,name,attribute,as,aliases,since,4,1,5;protected,boolean,should,parse,name,as,aliases,return,true
AbstractBeanDefinitionParser -> protected boolean shouldParseNameAsAliases();1496242568;Determine whether the element's "name" attribute should get parsed as_bean definition aliases, i.e. alternative bean definition names._<p>The default implementation returns {@code true}._@return whether the parser should evaluate the "name" attribute as aliases_@since 4.1.5;protected boolean shouldParseNameAsAliases() {_		return true__	};determine,whether,the,element,s,name,attribute,should,get,parsed,as,bean,definition,aliases,i,e,alternative,bean,definition,names,p,the,default,implementation,returns,code,true,return,whether,the,parser,should,evaluate,the,name,attribute,as,aliases,since,4,1,5;protected,boolean,should,parse,name,as,aliases,return,true
AbstractBeanDefinitionParser -> protected boolean shouldParseNameAsAliases();1496837955;Determine whether the element's "name" attribute should get parsed as_bean definition aliases, i.e. alternative bean definition names._<p>The default implementation returns {@code true}._@return whether the parser should evaluate the "name" attribute as aliases_@since 4.1.5;protected boolean shouldParseNameAsAliases() {_		return true__	};determine,whether,the,element,s,name,attribute,should,get,parsed,as,bean,definition,aliases,i,e,alternative,bean,definition,names,p,the,default,implementation,returns,code,true,return,whether,the,parser,should,evaluate,the,name,attribute,as,aliases,since,4,1,5;protected,boolean,should,parse,name,as,aliases,return,true
AbstractBeanDefinitionParser -> protected boolean shouldParseNameAsAliases();1502974979;Determine whether the element's "name" attribute should get parsed as_bean definition aliases, i.e. alternative bean definition names._<p>The default implementation returns {@code true}._@return whether the parser should evaluate the "name" attribute as aliases_@since 4.1.5;protected boolean shouldParseNameAsAliases() {_		return true__	};determine,whether,the,element,s,name,attribute,should,get,parsed,as,bean,definition,aliases,i,e,alternative,bean,definition,names,p,the,default,implementation,returns,code,true,return,whether,the,parser,should,evaluate,the,name,attribute,as,aliases,since,4,1,5;protected,boolean,should,parse,name,as,aliases,return,true
AbstractBeanDefinitionParser -> protected boolean shouldParseNameAsAliases();1530174524;Determine whether the element's "name" attribute should get parsed as_bean definition aliases, i.e. alternative bean definition names._<p>The default implementation returns {@code true}._@return whether the parser should evaluate the "name" attribute as aliases_@since 4.1.5;protected boolean shouldParseNameAsAliases() {_		return true__	};determine,whether,the,element,s,name,attribute,should,get,parsed,as,bean,definition,aliases,i,e,alternative,bean,definition,names,p,the,default,implementation,returns,code,true,return,whether,the,parser,should,evaluate,the,name,attribute,as,aliases,since,4,1,5;protected,boolean,should,parse,name,as,aliases,return,true
AbstractBeanDefinitionParser -> protected void registerBeanDefinition(BeanDefinitionHolder definition, BeanDefinitionRegistry registry);1328020251;Register the supplied {@link BeanDefinitionHolder bean} with the supplied_{@link BeanDefinitionRegistry registry}._<p>Subclasses can override this method to control whether or not the supplied_{@link BeanDefinitionHolder bean} is actually even registered, or to_register even more beans._<p>The default implementation registers the supplied {@link BeanDefinitionHolder bean}_with the supplied {@link BeanDefinitionRegistry registry} only if the <code>isNested</code>_parameter is <code>false</code>, because one typically does not want inner beans_to be registered as top level beans._@param definition the bean definition to be registered_@param registry the registry that the bean is to be registered with_@see BeanDefinitionReaderUtils#registerBeanDefinition(BeanDefinitionHolder, BeanDefinitionRegistry);protected void registerBeanDefinition(BeanDefinitionHolder definition, BeanDefinitionRegistry registry) {_		BeanDefinitionReaderUtils.registerBeanDefinition(definition, registry)__	};register,the,supplied,link,bean,definition,holder,bean,with,the,supplied,link,bean,definition,registry,registry,p,subclasses,can,override,this,method,to,control,whether,or,not,the,supplied,link,bean,definition,holder,bean,is,actually,even,registered,or,to,register,even,more,beans,p,the,default,implementation,registers,the,supplied,link,bean,definition,holder,bean,with,the,supplied,link,bean,definition,registry,registry,only,if,the,code,is,nested,code,parameter,is,code,false,code,because,one,typically,does,not,want,inner,beans,to,be,registered,as,top,level,beans,param,definition,the,bean,definition,to,be,registered,param,registry,the,registry,that,the,bean,is,to,be,registered,with,see,bean,definition,reader,utils,register,bean,definition,bean,definition,holder,bean,definition,registry;protected,void,register,bean,definition,bean,definition,holder,definition,bean,definition,registry,registry,bean,definition,reader,utils,register,bean,definition,definition,registry
AbstractBeanDefinitionParser -> protected void registerBeanDefinition(BeanDefinitionHolder definition, BeanDefinitionRegistry registry);1356735495;Register the supplied {@link BeanDefinitionHolder bean} with the supplied_{@link BeanDefinitionRegistry registry}._<p>Subclasses can override this method to control whether or not the supplied_{@link BeanDefinitionHolder bean} is actually even registered, or to_register even more beans._<p>The default implementation registers the supplied {@link BeanDefinitionHolder bean}_with the supplied {@link BeanDefinitionRegistry registry} only if the {@code isNested}_parameter is {@code false}, because one typically does not want inner beans_to be registered as top level beans._@param definition the bean definition to be registered_@param registry the registry that the bean is to be registered with_@see BeanDefinitionReaderUtils#registerBeanDefinition(BeanDefinitionHolder, BeanDefinitionRegistry);protected void registerBeanDefinition(BeanDefinitionHolder definition, BeanDefinitionRegistry registry) {_		BeanDefinitionReaderUtils.registerBeanDefinition(definition, registry)__	};register,the,supplied,link,bean,definition,holder,bean,with,the,supplied,link,bean,definition,registry,registry,p,subclasses,can,override,this,method,to,control,whether,or,not,the,supplied,link,bean,definition,holder,bean,is,actually,even,registered,or,to,register,even,more,beans,p,the,default,implementation,registers,the,supplied,link,bean,definition,holder,bean,with,the,supplied,link,bean,definition,registry,registry,only,if,the,code,is,nested,parameter,is,code,false,because,one,typically,does,not,want,inner,beans,to,be,registered,as,top,level,beans,param,definition,the,bean,definition,to,be,registered,param,registry,the,registry,that,the,bean,is,to,be,registered,with,see,bean,definition,reader,utils,register,bean,definition,bean,definition,holder,bean,definition,registry;protected,void,register,bean,definition,bean,definition,holder,definition,bean,definition,registry,registry,bean,definition,reader,utils,register,bean,definition,definition,registry
AbstractBeanDefinitionParser -> protected void registerBeanDefinition(BeanDefinitionHolder definition, BeanDefinitionRegistry registry);1357119239;Register the supplied {@link BeanDefinitionHolder bean} with the supplied_{@link BeanDefinitionRegistry registry}._<p>Subclasses can override this method to control whether or not the supplied_{@link BeanDefinitionHolder bean} is actually even registered, or to_register even more beans._<p>The default implementation registers the supplied {@link BeanDefinitionHolder bean}_with the supplied {@link BeanDefinitionRegistry registry} only if the {@code isNested}_parameter is {@code false}, because one typically does not want inner beans_to be registered as top level beans._@param definition the bean definition to be registered_@param registry the registry that the bean is to be registered with_@see BeanDefinitionReaderUtils#registerBeanDefinition(BeanDefinitionHolder, BeanDefinitionRegistry);protected void registerBeanDefinition(BeanDefinitionHolder definition, BeanDefinitionRegistry registry) {_		BeanDefinitionReaderUtils.registerBeanDefinition(definition, registry)__	};register,the,supplied,link,bean,definition,holder,bean,with,the,supplied,link,bean,definition,registry,registry,p,subclasses,can,override,this,method,to,control,whether,or,not,the,supplied,link,bean,definition,holder,bean,is,actually,even,registered,or,to,register,even,more,beans,p,the,default,implementation,registers,the,supplied,link,bean,definition,holder,bean,with,the,supplied,link,bean,definition,registry,registry,only,if,the,code,is,nested,parameter,is,code,false,because,one,typically,does,not,want,inner,beans,to,be,registered,as,top,level,beans,param,definition,the,bean,definition,to,be,registered,param,registry,the,registry,that,the,bean,is,to,be,registered,with,see,bean,definition,reader,utils,register,bean,definition,bean,definition,holder,bean,definition,registry;protected,void,register,bean,definition,bean,definition,holder,definition,bean,definition,registry,registry,bean,definition,reader,utils,register,bean,definition,definition,registry
AbstractBeanDefinitionParser -> protected void registerBeanDefinition(BeanDefinitionHolder definition, BeanDefinitionRegistry registry);1368482696;Register the supplied {@link BeanDefinitionHolder bean} with the supplied_{@link BeanDefinitionRegistry registry}._<p>Subclasses can override this method to control whether or not the supplied_{@link BeanDefinitionHolder bean} is actually even registered, or to_register even more beans._<p>The default implementation registers the supplied {@link BeanDefinitionHolder bean}_with the supplied {@link BeanDefinitionRegistry registry} only if the {@code isNested}_parameter is {@code false}, because one typically does not want inner beans_to be registered as top level beans._@param definition the bean definition to be registered_@param registry the registry that the bean is to be registered with_@see BeanDefinitionReaderUtils#registerBeanDefinition(BeanDefinitionHolder, BeanDefinitionRegistry);protected void registerBeanDefinition(BeanDefinitionHolder definition, BeanDefinitionRegistry registry) {_		BeanDefinitionReaderUtils.registerBeanDefinition(definition, registry)__	};register,the,supplied,link,bean,definition,holder,bean,with,the,supplied,link,bean,definition,registry,registry,p,subclasses,can,override,this,method,to,control,whether,or,not,the,supplied,link,bean,definition,holder,bean,is,actually,even,registered,or,to,register,even,more,beans,p,the,default,implementation,registers,the,supplied,link,bean,definition,holder,bean,with,the,supplied,link,bean,definition,registry,registry,only,if,the,code,is,nested,parameter,is,code,false,because,one,typically,does,not,want,inner,beans,to,be,registered,as,top,level,beans,param,definition,the,bean,definition,to,be,registered,param,registry,the,registry,that,the,bean,is,to,be,registered,with,see,bean,definition,reader,utils,register,bean,definition,bean,definition,holder,bean,definition,registry;protected,void,register,bean,definition,bean,definition,holder,definition,bean,definition,registry,registry,bean,definition,reader,utils,register,bean,definition,definition,registry
AbstractBeanDefinitionParser -> protected void registerBeanDefinition(BeanDefinitionHolder definition, BeanDefinitionRegistry registry);1421766121;Register the supplied {@link BeanDefinitionHolder bean} with the supplied_{@link BeanDefinitionRegistry registry}._<p>Subclasses can override this method to control whether or not the supplied_{@link BeanDefinitionHolder bean} is actually even registered, or to_register even more beans._<p>The default implementation registers the supplied {@link BeanDefinitionHolder bean}_with the supplied {@link BeanDefinitionRegistry registry} only if the {@code isNested}_parameter is {@code false}, because one typically does not want inner beans_to be registered as top level beans._@param definition the bean definition to be registered_@param registry the registry that the bean is to be registered with_@see BeanDefinitionReaderUtils#registerBeanDefinition(BeanDefinitionHolder, BeanDefinitionRegistry);protected void registerBeanDefinition(BeanDefinitionHolder definition, BeanDefinitionRegistry registry) {_		BeanDefinitionReaderUtils.registerBeanDefinition(definition, registry)__	};register,the,supplied,link,bean,definition,holder,bean,with,the,supplied,link,bean,definition,registry,registry,p,subclasses,can,override,this,method,to,control,whether,or,not,the,supplied,link,bean,definition,holder,bean,is,actually,even,registered,or,to,register,even,more,beans,p,the,default,implementation,registers,the,supplied,link,bean,definition,holder,bean,with,the,supplied,link,bean,definition,registry,registry,only,if,the,code,is,nested,parameter,is,code,false,because,one,typically,does,not,want,inner,beans,to,be,registered,as,top,level,beans,param,definition,the,bean,definition,to,be,registered,param,registry,the,registry,that,the,bean,is,to,be,registered,with,see,bean,definition,reader,utils,register,bean,definition,bean,definition,holder,bean,definition,registry;protected,void,register,bean,definition,bean,definition,holder,definition,bean,definition,registry,registry,bean,definition,reader,utils,register,bean,definition,definition,registry
AbstractBeanDefinitionParser -> protected void registerBeanDefinition(BeanDefinitionHolder definition, BeanDefinitionRegistry registry);1496242568;Register the supplied {@link BeanDefinitionHolder bean} with the supplied_{@link BeanDefinitionRegistry registry}._<p>Subclasses can override this method to control whether or not the supplied_{@link BeanDefinitionHolder bean} is actually even registered, or to_register even more beans._<p>The default implementation registers the supplied {@link BeanDefinitionHolder bean}_with the supplied {@link BeanDefinitionRegistry registry} only if the {@code isNested}_parameter is {@code false}, because one typically does not want inner beans_to be registered as top level beans._@param definition the bean definition to be registered_@param registry the registry that the bean is to be registered with_@see BeanDefinitionReaderUtils#registerBeanDefinition(BeanDefinitionHolder, BeanDefinitionRegistry);protected void registerBeanDefinition(BeanDefinitionHolder definition, BeanDefinitionRegistry registry) {_		BeanDefinitionReaderUtils.registerBeanDefinition(definition, registry)__	};register,the,supplied,link,bean,definition,holder,bean,with,the,supplied,link,bean,definition,registry,registry,p,subclasses,can,override,this,method,to,control,whether,or,not,the,supplied,link,bean,definition,holder,bean,is,actually,even,registered,or,to,register,even,more,beans,p,the,default,implementation,registers,the,supplied,link,bean,definition,holder,bean,with,the,supplied,link,bean,definition,registry,registry,only,if,the,code,is,nested,parameter,is,code,false,because,one,typically,does,not,want,inner,beans,to,be,registered,as,top,level,beans,param,definition,the,bean,definition,to,be,registered,param,registry,the,registry,that,the,bean,is,to,be,registered,with,see,bean,definition,reader,utils,register,bean,definition,bean,definition,holder,bean,definition,registry;protected,void,register,bean,definition,bean,definition,holder,definition,bean,definition,registry,registry,bean,definition,reader,utils,register,bean,definition,definition,registry
AbstractBeanDefinitionParser -> protected void registerBeanDefinition(BeanDefinitionHolder definition, BeanDefinitionRegistry registry);1496837955;Register the supplied {@link BeanDefinitionHolder bean} with the supplied_{@link BeanDefinitionRegistry registry}._<p>Subclasses can override this method to control whether or not the supplied_{@link BeanDefinitionHolder bean} is actually even registered, or to_register even more beans._<p>The default implementation registers the supplied {@link BeanDefinitionHolder bean}_with the supplied {@link BeanDefinitionRegistry registry} only if the {@code isNested}_parameter is {@code false}, because one typically does not want inner beans_to be registered as top level beans._@param definition the bean definition to be registered_@param registry the registry that the bean is to be registered with_@see BeanDefinitionReaderUtils#registerBeanDefinition(BeanDefinitionHolder, BeanDefinitionRegistry);protected void registerBeanDefinition(BeanDefinitionHolder definition, BeanDefinitionRegistry registry) {_		BeanDefinitionReaderUtils.registerBeanDefinition(definition, registry)__	};register,the,supplied,link,bean,definition,holder,bean,with,the,supplied,link,bean,definition,registry,registry,p,subclasses,can,override,this,method,to,control,whether,or,not,the,supplied,link,bean,definition,holder,bean,is,actually,even,registered,or,to,register,even,more,beans,p,the,default,implementation,registers,the,supplied,link,bean,definition,holder,bean,with,the,supplied,link,bean,definition,registry,registry,only,if,the,code,is,nested,parameter,is,code,false,because,one,typically,does,not,want,inner,beans,to,be,registered,as,top,level,beans,param,definition,the,bean,definition,to,be,registered,param,registry,the,registry,that,the,bean,is,to,be,registered,with,see,bean,definition,reader,utils,register,bean,definition,bean,definition,holder,bean,definition,registry;protected,void,register,bean,definition,bean,definition,holder,definition,bean,definition,registry,registry,bean,definition,reader,utils,register,bean,definition,definition,registry
AbstractBeanDefinitionParser -> protected void registerBeanDefinition(BeanDefinitionHolder definition, BeanDefinitionRegistry registry);1502974979;Register the supplied {@link BeanDefinitionHolder bean} with the supplied_{@link BeanDefinitionRegistry registry}._<p>Subclasses can override this method to control whether or not the supplied_{@link BeanDefinitionHolder bean} is actually even registered, or to_register even more beans._<p>The default implementation registers the supplied {@link BeanDefinitionHolder bean}_with the supplied {@link BeanDefinitionRegistry registry} only if the {@code isNested}_parameter is {@code false}, because one typically does not want inner beans_to be registered as top level beans._@param definition the bean definition to be registered_@param registry the registry that the bean is to be registered with_@see BeanDefinitionReaderUtils#registerBeanDefinition(BeanDefinitionHolder, BeanDefinitionRegistry);protected void registerBeanDefinition(BeanDefinitionHolder definition, BeanDefinitionRegistry registry) {_		BeanDefinitionReaderUtils.registerBeanDefinition(definition, registry)__	};register,the,supplied,link,bean,definition,holder,bean,with,the,supplied,link,bean,definition,registry,registry,p,subclasses,can,override,this,method,to,control,whether,or,not,the,supplied,link,bean,definition,holder,bean,is,actually,even,registered,or,to,register,even,more,beans,p,the,default,implementation,registers,the,supplied,link,bean,definition,holder,bean,with,the,supplied,link,bean,definition,registry,registry,only,if,the,code,is,nested,parameter,is,code,false,because,one,typically,does,not,want,inner,beans,to,be,registered,as,top,level,beans,param,definition,the,bean,definition,to,be,registered,param,registry,the,registry,that,the,bean,is,to,be,registered,with,see,bean,definition,reader,utils,register,bean,definition,bean,definition,holder,bean,definition,registry;protected,void,register,bean,definition,bean,definition,holder,definition,bean,definition,registry,registry,bean,definition,reader,utils,register,bean,definition,definition,registry
AbstractBeanDefinitionParser -> protected void registerBeanDefinition(BeanDefinitionHolder definition, BeanDefinitionRegistry registry);1530174524;Register the supplied {@link BeanDefinitionHolder bean} with the supplied_{@link BeanDefinitionRegistry registry}._<p>Subclasses can override this method to control whether or not the supplied_{@link BeanDefinitionHolder bean} is actually even registered, or to_register even more beans._<p>The default implementation registers the supplied {@link BeanDefinitionHolder bean}_with the supplied {@link BeanDefinitionRegistry registry} only if the {@code isNested}_parameter is {@code false}, because one typically does not want inner beans_to be registered as top level beans._@param definition the bean definition to be registered_@param registry the registry that the bean is to be registered with_@see BeanDefinitionReaderUtils#registerBeanDefinition(BeanDefinitionHolder, BeanDefinitionRegistry);protected void registerBeanDefinition(BeanDefinitionHolder definition, BeanDefinitionRegistry registry) {_		BeanDefinitionReaderUtils.registerBeanDefinition(definition, registry)__	};register,the,supplied,link,bean,definition,holder,bean,with,the,supplied,link,bean,definition,registry,registry,p,subclasses,can,override,this,method,to,control,whether,or,not,the,supplied,link,bean,definition,holder,bean,is,actually,even,registered,or,to,register,even,more,beans,p,the,default,implementation,registers,the,supplied,link,bean,definition,holder,bean,with,the,supplied,link,bean,definition,registry,registry,only,if,the,code,is,nested,parameter,is,code,false,because,one,typically,does,not,want,inner,beans,to,be,registered,as,top,level,beans,param,definition,the,bean,definition,to,be,registered,param,registry,the,registry,that,the,bean,is,to,be,registered,with,see,bean,definition,reader,utils,register,bean,definition,bean,definition,holder,bean,definition,registry;protected,void,register,bean,definition,bean,definition,holder,definition,bean,definition,registry,registry,bean,definition,reader,utils,register,bean,definition,definition,registry
AbstractBeanDefinitionParser -> protected abstract AbstractBeanDefinition parseInternal(Element element, ParserContext parserContext)_;1328020251;Central template method to actually parse the supplied {@link Element}_into one or more {@link BeanDefinition BeanDefinitions}._@param element	the element that is to be parsed into one or more {@link BeanDefinition BeanDefinitions}_@param parserContext the object encapsulating the current state of the parsing process__provides access to a {@link org.springframework.beans.factory.support.BeanDefinitionRegistry}_@return the primary {@link BeanDefinition} resulting from the parsing of the supplied {@link Element}_@see #parse(org.w3c.dom.Element, ParserContext)_@see #postProcessComponentDefinition(org.springframework.beans.factory.parsing.BeanComponentDefinition);protected abstract AbstractBeanDefinition parseInternal(Element element, ParserContext parserContext)_;central,template,method,to,actually,parse,the,supplied,link,element,into,one,or,more,link,bean,definition,bean,definitions,param,element,the,element,that,is,to,be,parsed,into,one,or,more,link,bean,definition,bean,definitions,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,provides,access,to,a,link,org,springframework,beans,factory,support,bean,definition,registry,return,the,primary,link,bean,definition,resulting,from,the,parsing,of,the,supplied,link,element,see,parse,org,w3c,dom,element,parser,context,see,post,process,component,definition,org,springframework,beans,factory,parsing,bean,component,definition;protected,abstract,abstract,bean,definition,parse,internal,element,element,parser,context,parser,context
AbstractBeanDefinitionParser -> protected abstract AbstractBeanDefinition parseInternal(Element element, ParserContext parserContext)_;1356735495;Central template method to actually parse the supplied {@link Element}_into one or more {@link BeanDefinition BeanDefinitions}._@param element	the element that is to be parsed into one or more {@link BeanDefinition BeanDefinitions}_@param parserContext the object encapsulating the current state of the parsing process__provides access to a {@link org.springframework.beans.factory.support.BeanDefinitionRegistry}_@return the primary {@link BeanDefinition} resulting from the parsing of the supplied {@link Element}_@see #parse(org.w3c.dom.Element, ParserContext)_@see #postProcessComponentDefinition(org.springframework.beans.factory.parsing.BeanComponentDefinition);protected abstract AbstractBeanDefinition parseInternal(Element element, ParserContext parserContext)_;central,template,method,to,actually,parse,the,supplied,link,element,into,one,or,more,link,bean,definition,bean,definitions,param,element,the,element,that,is,to,be,parsed,into,one,or,more,link,bean,definition,bean,definitions,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,provides,access,to,a,link,org,springframework,beans,factory,support,bean,definition,registry,return,the,primary,link,bean,definition,resulting,from,the,parsing,of,the,supplied,link,element,see,parse,org,w3c,dom,element,parser,context,see,post,process,component,definition,org,springframework,beans,factory,parsing,bean,component,definition;protected,abstract,abstract,bean,definition,parse,internal,element,element,parser,context,parser,context
AbstractBeanDefinitionParser -> protected abstract AbstractBeanDefinition parseInternal(Element element, ParserContext parserContext)_;1357119239;Central template method to actually parse the supplied {@link Element}_into one or more {@link BeanDefinition BeanDefinitions}._@param element	the element that is to be parsed into one or more {@link BeanDefinition BeanDefinitions}_@param parserContext the object encapsulating the current state of the parsing process__provides access to a {@link org.springframework.beans.factory.support.BeanDefinitionRegistry}_@return the primary {@link BeanDefinition} resulting from the parsing of the supplied {@link Element}_@see #parse(org.w3c.dom.Element, ParserContext)_@see #postProcessComponentDefinition(org.springframework.beans.factory.parsing.BeanComponentDefinition);protected abstract AbstractBeanDefinition parseInternal(Element element, ParserContext parserContext)_;central,template,method,to,actually,parse,the,supplied,link,element,into,one,or,more,link,bean,definition,bean,definitions,param,element,the,element,that,is,to,be,parsed,into,one,or,more,link,bean,definition,bean,definitions,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,provides,access,to,a,link,org,springframework,beans,factory,support,bean,definition,registry,return,the,primary,link,bean,definition,resulting,from,the,parsing,of,the,supplied,link,element,see,parse,org,w3c,dom,element,parser,context,see,post,process,component,definition,org,springframework,beans,factory,parsing,bean,component,definition;protected,abstract,abstract,bean,definition,parse,internal,element,element,parser,context,parser,context
AbstractBeanDefinitionParser -> protected abstract AbstractBeanDefinition parseInternal(Element element, ParserContext parserContext)_;1368482696;Central template method to actually parse the supplied {@link Element}_into one or more {@link BeanDefinition BeanDefinitions}._@param element	the element that is to be parsed into one or more {@link BeanDefinition BeanDefinitions}_@param parserContext the object encapsulating the current state of the parsing process__provides access to a {@link org.springframework.beans.factory.support.BeanDefinitionRegistry}_@return the primary {@link BeanDefinition} resulting from the parsing of the supplied {@link Element}_@see #parse(org.w3c.dom.Element, ParserContext)_@see #postProcessComponentDefinition(org.springframework.beans.factory.parsing.BeanComponentDefinition);protected abstract AbstractBeanDefinition parseInternal(Element element, ParserContext parserContext)_;central,template,method,to,actually,parse,the,supplied,link,element,into,one,or,more,link,bean,definition,bean,definitions,param,element,the,element,that,is,to,be,parsed,into,one,or,more,link,bean,definition,bean,definitions,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,provides,access,to,a,link,org,springframework,beans,factory,support,bean,definition,registry,return,the,primary,link,bean,definition,resulting,from,the,parsing,of,the,supplied,link,element,see,parse,org,w3c,dom,element,parser,context,see,post,process,component,definition,org,springframework,beans,factory,parsing,bean,component,definition;protected,abstract,abstract,bean,definition,parse,internal,element,element,parser,context,parser,context
AbstractBeanDefinitionParser -> protected abstract AbstractBeanDefinition parseInternal(Element element, ParserContext parserContext)_;1421766121;Central template method to actually parse the supplied {@link Element}_into one or more {@link BeanDefinition BeanDefinitions}._@param element	the element that is to be parsed into one or more {@link BeanDefinition BeanDefinitions}_@param parserContext the object encapsulating the current state of the parsing process__provides access to a {@link org.springframework.beans.factory.support.BeanDefinitionRegistry}_@return the primary {@link BeanDefinition} resulting from the parsing of the supplied {@link Element}_@see #parse(org.w3c.dom.Element, ParserContext)_@see #postProcessComponentDefinition(org.springframework.beans.factory.parsing.BeanComponentDefinition);protected abstract AbstractBeanDefinition parseInternal(Element element, ParserContext parserContext)_;central,template,method,to,actually,parse,the,supplied,link,element,into,one,or,more,link,bean,definition,bean,definitions,param,element,the,element,that,is,to,be,parsed,into,one,or,more,link,bean,definition,bean,definitions,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,provides,access,to,a,link,org,springframework,beans,factory,support,bean,definition,registry,return,the,primary,link,bean,definition,resulting,from,the,parsing,of,the,supplied,link,element,see,parse,org,w3c,dom,element,parser,context,see,post,process,component,definition,org,springframework,beans,factory,parsing,bean,component,definition;protected,abstract,abstract,bean,definition,parse,internal,element,element,parser,context,parser,context
AbstractBeanDefinitionParser -> @Nullable 	protected abstract AbstractBeanDefinition parseInternal(Element element, ParserContext parserContext)_;1496837955;Central template method to actually parse the supplied {@link Element}_into one or more {@link BeanDefinition BeanDefinitions}._@param element the element that is to be parsed into one or more {@link BeanDefinition BeanDefinitions}_@param parserContext the object encapsulating the current state of the parsing process__provides access to a {@link org.springframework.beans.factory.support.BeanDefinitionRegistry}_@return the primary {@link BeanDefinition} resulting from the parsing of the supplied {@link Element}_@see #parse(org.w3c.dom.Element, ParserContext)_@see #postProcessComponentDefinition(org.springframework.beans.factory.parsing.BeanComponentDefinition);@Nullable_	protected abstract AbstractBeanDefinition parseInternal(Element element, ParserContext parserContext)_;central,template,method,to,actually,parse,the,supplied,link,element,into,one,or,more,link,bean,definition,bean,definitions,param,element,the,element,that,is,to,be,parsed,into,one,or,more,link,bean,definition,bean,definitions,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,provides,access,to,a,link,org,springframework,beans,factory,support,bean,definition,registry,return,the,primary,link,bean,definition,resulting,from,the,parsing,of,the,supplied,link,element,see,parse,org,w3c,dom,element,parser,context,see,post,process,component,definition,org,springframework,beans,factory,parsing,bean,component,definition;nullable,protected,abstract,abstract,bean,definition,parse,internal,element,element,parser,context,parser,context
AbstractBeanDefinitionParser -> @Nullable 	protected abstract AbstractBeanDefinition parseInternal(Element element, ParserContext parserContext)_;1502974979;Central template method to actually parse the supplied {@link Element}_into one or more {@link BeanDefinition BeanDefinitions}._@param element the element that is to be parsed into one or more {@link BeanDefinition BeanDefinitions}_@param parserContext the object encapsulating the current state of the parsing process__provides access to a {@link org.springframework.beans.factory.support.BeanDefinitionRegistry}_@return the primary {@link BeanDefinition} resulting from the parsing of the supplied {@link Element}_@see #parse(org.w3c.dom.Element, ParserContext)_@see #postProcessComponentDefinition(org.springframework.beans.factory.parsing.BeanComponentDefinition);@Nullable_	protected abstract AbstractBeanDefinition parseInternal(Element element, ParserContext parserContext)_;central,template,method,to,actually,parse,the,supplied,link,element,into,one,or,more,link,bean,definition,bean,definitions,param,element,the,element,that,is,to,be,parsed,into,one,or,more,link,bean,definition,bean,definitions,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,provides,access,to,a,link,org,springframework,beans,factory,support,bean,definition,registry,return,the,primary,link,bean,definition,resulting,from,the,parsing,of,the,supplied,link,element,see,parse,org,w3c,dom,element,parser,context,see,post,process,component,definition,org,springframework,beans,factory,parsing,bean,component,definition;nullable,protected,abstract,abstract,bean,definition,parse,internal,element,element,parser,context,parser,context
AbstractBeanDefinitionParser -> @Nullable 	protected abstract AbstractBeanDefinition parseInternal(Element element, ParserContext parserContext)_;1530174524;Central template method to actually parse the supplied {@link Element}_into one or more {@link BeanDefinition BeanDefinitions}._@param element the element that is to be parsed into one or more {@link BeanDefinition BeanDefinitions}_@param parserContext the object encapsulating the current state of the parsing process__provides access to a {@link org.springframework.beans.factory.support.BeanDefinitionRegistry}_@return the primary {@link BeanDefinition} resulting from the parsing of the supplied {@link Element}_@see #parse(org.w3c.dom.Element, ParserContext)_@see #postProcessComponentDefinition(org.springframework.beans.factory.parsing.BeanComponentDefinition);@Nullable_	protected abstract AbstractBeanDefinition parseInternal(Element element, ParserContext parserContext)_;central,template,method,to,actually,parse,the,supplied,link,element,into,one,or,more,link,bean,definition,bean,definitions,param,element,the,element,that,is,to,be,parsed,into,one,or,more,link,bean,definition,bean,definitions,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,provides,access,to,a,link,org,springframework,beans,factory,support,bean,definition,registry,return,the,primary,link,bean,definition,resulting,from,the,parsing,of,the,supplied,link,element,see,parse,org,w3c,dom,element,parser,context,see,post,process,component,definition,org,springframework,beans,factory,parsing,bean,component,definition;nullable,protected,abstract,abstract,bean,definition,parse,internal,element,element,parser,context,parser,context
