# id;timestamp;commentText;codeText;commentWords;codeWords
BeanPostProcessor -> Object postProcessBeforeInitialization(Object bean, String beanName) throws BeansException_;1328020251;Apply this BeanPostProcessor to the given new bean instance <i>before</i> any bean_initialization callbacks (like InitializingBean's <code>afterPropertiesSet</code>_or a custom init-method). The bean will already be populated with property values._The returned bean instance may be a wrapper around the original._@param bean the new bean instance_@param beanName the name of the bean_@return the bean instance to use, either the original or a wrapped one_ if_<code>null</code>, no subsequent BeanPostProcessors will be invoked_@throws org.springframework.beans.BeansException in case of errors_@see org.springframework.beans.factory.InitializingBean#afterPropertiesSet;Object postProcessBeforeInitialization(Object bean, String beanName) throws BeansException_;apply,this,bean,post,processor,to,the,given,new,bean,instance,i,before,i,any,bean,initialization,callbacks,like,initializing,bean,s,code,after,properties,set,code,or,a,custom,init,method,the,bean,will,already,be,populated,with,property,values,the,returned,bean,instance,may,be,a,wrapper,around,the,original,param,bean,the,new,bean,instance,param,bean,name,the,name,of,the,bean,return,the,bean,instance,to,use,either,the,original,or,a,wrapped,one,if,code,null,code,no,subsequent,bean,post,processors,will,be,invoked,throws,org,springframework,beans,beans,exception,in,case,of,errors,see,org,springframework,beans,factory,initializing,bean,after,properties,set;object,post,process,before,initialization,object,bean,string,bean,name,throws,beans,exception
BeanPostProcessor -> Object postProcessBeforeInitialization(Object bean, String beanName) throws BeansException_;1356735495;Apply this BeanPostProcessor to the given new bean instance <i>before</i> any bean_initialization callbacks (like InitializingBean's {@code afterPropertiesSet}_or a custom init-method). The bean will already be populated with property values._The returned bean instance may be a wrapper around the original._@param bean the new bean instance_@param beanName the name of the bean_@return the bean instance to use, either the original or a wrapped one_ if_{@code null}, no subsequent BeanPostProcessors will be invoked_@throws org.springframework.beans.BeansException in case of errors_@see org.springframework.beans.factory.InitializingBean#afterPropertiesSet;Object postProcessBeforeInitialization(Object bean, String beanName) throws BeansException_;apply,this,bean,post,processor,to,the,given,new,bean,instance,i,before,i,any,bean,initialization,callbacks,like,initializing,bean,s,code,after,properties,set,or,a,custom,init,method,the,bean,will,already,be,populated,with,property,values,the,returned,bean,instance,may,be,a,wrapper,around,the,original,param,bean,the,new,bean,instance,param,bean,name,the,name,of,the,bean,return,the,bean,instance,to,use,either,the,original,or,a,wrapped,one,if,code,null,no,subsequent,bean,post,processors,will,be,invoked,throws,org,springframework,beans,beans,exception,in,case,of,errors,see,org,springframework,beans,factory,initializing,bean,after,properties,set;object,post,process,before,initialization,object,bean,string,bean,name,throws,beans,exception
BeanPostProcessor -> Object postProcessBeforeInitialization(Object bean, String beanName) throws BeansException_;1447195666;Apply this BeanPostProcessor to the given new bean instance <i>before</i> any bean_initialization callbacks (like InitializingBean's {@code afterPropertiesSet}_or a custom init-method). The bean will already be populated with property values._The returned bean instance may be a wrapper around the original._@param bean the new bean instance_@param beanName the name of the bean_@return the bean instance to use, either the original or a wrapped one__if {@code null}, no subsequent BeanPostProcessors will be invoked_@throws org.springframework.beans.BeansException in case of errors_@see org.springframework.beans.factory.InitializingBean#afterPropertiesSet;Object postProcessBeforeInitialization(Object bean, String beanName) throws BeansException_;apply,this,bean,post,processor,to,the,given,new,bean,instance,i,before,i,any,bean,initialization,callbacks,like,initializing,bean,s,code,after,properties,set,or,a,custom,init,method,the,bean,will,already,be,populated,with,property,values,the,returned,bean,instance,may,be,a,wrapper,around,the,original,param,bean,the,new,bean,instance,param,bean,name,the,name,of,the,bean,return,the,bean,instance,to,use,either,the,original,or,a,wrapped,one,if,code,null,no,subsequent,bean,post,processors,will,be,invoked,throws,org,springframework,beans,beans,exception,in,case,of,errors,see,org,springframework,beans,factory,initializing,bean,after,properties,set;object,post,process,before,initialization,object,bean,string,bean,name,throws,beans,exception
BeanPostProcessor -> Object postProcessAfterInitialization(Object bean, String beanName) throws BeansException_;1328020251;Apply this BeanPostProcessor to the given new bean instance <i>after</i> any bean_initialization callbacks (like InitializingBean's <code>afterPropertiesSet</code>_or a custom init-method). The bean will already be populated with property values._The returned bean instance may be a wrapper around the original._<p>In case of a FactoryBean, this callback will be invoked for both the FactoryBean_instance and the objects created by the FactoryBean (as of Spring 2.0). The_post-processor can decide whether to apply to either the FactoryBean or created_objects or both through corresponding <code>bean instanceof FactoryBean</code> checks._<p>This callback will also be invoked after a short-circuiting triggered by a_{@link InstantiationAwareBeanPostProcessor#postProcessBeforeInstantiation} method,_in contrast to all other BeanPostProcessor callbacks._@param bean the new bean instance_@param beanName the name of the bean_@return the bean instance to use, either the original or a wrapped one_ if_<code>null</code>, no subsequent BeanPostProcessors will be invoked_@throws org.springframework.beans.BeansException in case of errors_@see org.springframework.beans.factory.InitializingBean#afterPropertiesSet_@see org.springframework.beans.factory.FactoryBean;Object postProcessAfterInitialization(Object bean, String beanName) throws BeansException_;apply,this,bean,post,processor,to,the,given,new,bean,instance,i,after,i,any,bean,initialization,callbacks,like,initializing,bean,s,code,after,properties,set,code,or,a,custom,init,method,the,bean,will,already,be,populated,with,property,values,the,returned,bean,instance,may,be,a,wrapper,around,the,original,p,in,case,of,a,factory,bean,this,callback,will,be,invoked,for,both,the,factory,bean,instance,and,the,objects,created,by,the,factory,bean,as,of,spring,2,0,the,post,processor,can,decide,whether,to,apply,to,either,the,factory,bean,or,created,objects,or,both,through,corresponding,code,bean,instanceof,factory,bean,code,checks,p,this,callback,will,also,be,invoked,after,a,short,circuiting,triggered,by,a,link,instantiation,aware,bean,post,processor,post,process,before,instantiation,method,in,contrast,to,all,other,bean,post,processor,callbacks,param,bean,the,new,bean,instance,param,bean,name,the,name,of,the,bean,return,the,bean,instance,to,use,either,the,original,or,a,wrapped,one,if,code,null,code,no,subsequent,bean,post,processors,will,be,invoked,throws,org,springframework,beans,beans,exception,in,case,of,errors,see,org,springframework,beans,factory,initializing,bean,after,properties,set,see,org,springframework,beans,factory,factory,bean;object,post,process,after,initialization,object,bean,string,bean,name,throws,beans,exception
BeanPostProcessor -> Object postProcessAfterInitialization(Object bean, String beanName) throws BeansException_;1356735495;Apply this BeanPostProcessor to the given new bean instance <i>after</i> any bean_initialization callbacks (like InitializingBean's {@code afterPropertiesSet}_or a custom init-method). The bean will already be populated with property values._The returned bean instance may be a wrapper around the original._<p>In case of a FactoryBean, this callback will be invoked for both the FactoryBean_instance and the objects created by the FactoryBean (as of Spring 2.0). The_post-processor can decide whether to apply to either the FactoryBean or created_objects or both through corresponding {@code bean instanceof FactoryBean} checks._<p>This callback will also be invoked after a short-circuiting triggered by a_{@link InstantiationAwareBeanPostProcessor#postProcessBeforeInstantiation} method,_in contrast to all other BeanPostProcessor callbacks._@param bean the new bean instance_@param beanName the name of the bean_@return the bean instance to use, either the original or a wrapped one_ if_{@code null}, no subsequent BeanPostProcessors will be invoked_@throws org.springframework.beans.BeansException in case of errors_@see org.springframework.beans.factory.InitializingBean#afterPropertiesSet_@see org.springframework.beans.factory.FactoryBean;Object postProcessAfterInitialization(Object bean, String beanName) throws BeansException_;apply,this,bean,post,processor,to,the,given,new,bean,instance,i,after,i,any,bean,initialization,callbacks,like,initializing,bean,s,code,after,properties,set,or,a,custom,init,method,the,bean,will,already,be,populated,with,property,values,the,returned,bean,instance,may,be,a,wrapper,around,the,original,p,in,case,of,a,factory,bean,this,callback,will,be,invoked,for,both,the,factory,bean,instance,and,the,objects,created,by,the,factory,bean,as,of,spring,2,0,the,post,processor,can,decide,whether,to,apply,to,either,the,factory,bean,or,created,objects,or,both,through,corresponding,code,bean,instanceof,factory,bean,checks,p,this,callback,will,also,be,invoked,after,a,short,circuiting,triggered,by,a,link,instantiation,aware,bean,post,processor,post,process,before,instantiation,method,in,contrast,to,all,other,bean,post,processor,callbacks,param,bean,the,new,bean,instance,param,bean,name,the,name,of,the,bean,return,the,bean,instance,to,use,either,the,original,or,a,wrapped,one,if,code,null,no,subsequent,bean,post,processors,will,be,invoked,throws,org,springframework,beans,beans,exception,in,case,of,errors,see,org,springframework,beans,factory,initializing,bean,after,properties,set,see,org,springframework,beans,factory,factory,bean;object,post,process,after,initialization,object,bean,string,bean,name,throws,beans,exception
BeanPostProcessor -> Object postProcessAfterInitialization(Object bean, String beanName) throws BeansException_;1447195666;Apply this BeanPostProcessor to the given new bean instance <i>after</i> any bean_initialization callbacks (like InitializingBean's {@code afterPropertiesSet}_or a custom init-method). The bean will already be populated with property values._The returned bean instance may be a wrapper around the original._<p>In case of a FactoryBean, this callback will be invoked for both the FactoryBean_instance and the objects created by the FactoryBean (as of Spring 2.0). The_post-processor can decide whether to apply to either the FactoryBean or created_objects or both through corresponding {@code bean instanceof FactoryBean} checks._<p>This callback will also be invoked after a short-circuiting triggered by a_{@link InstantiationAwareBeanPostProcessor#postProcessBeforeInstantiation} method,_in contrast to all other BeanPostProcessor callbacks._@param bean the new bean instance_@param beanName the name of the bean_@return the bean instance to use, either the original or a wrapped one__if {@code null}, no subsequent BeanPostProcessors will be invoked_@throws org.springframework.beans.BeansException in case of errors_@see org.springframework.beans.factory.InitializingBean#afterPropertiesSet_@see org.springframework.beans.factory.FactoryBean;Object postProcessAfterInitialization(Object bean, String beanName) throws BeansException_;apply,this,bean,post,processor,to,the,given,new,bean,instance,i,after,i,any,bean,initialization,callbacks,like,initializing,bean,s,code,after,properties,set,or,a,custom,init,method,the,bean,will,already,be,populated,with,property,values,the,returned,bean,instance,may,be,a,wrapper,around,the,original,p,in,case,of,a,factory,bean,this,callback,will,be,invoked,for,both,the,factory,bean,instance,and,the,objects,created,by,the,factory,bean,as,of,spring,2,0,the,post,processor,can,decide,whether,to,apply,to,either,the,factory,bean,or,created,objects,or,both,through,corresponding,code,bean,instanceof,factory,bean,checks,p,this,callback,will,also,be,invoked,after,a,short,circuiting,triggered,by,a,link,instantiation,aware,bean,post,processor,post,process,before,instantiation,method,in,contrast,to,all,other,bean,post,processor,callbacks,param,bean,the,new,bean,instance,param,bean,name,the,name,of,the,bean,return,the,bean,instance,to,use,either,the,original,or,a,wrapped,one,if,code,null,no,subsequent,bean,post,processors,will,be,invoked,throws,org,springframework,beans,beans,exception,in,case,of,errors,see,org,springframework,beans,factory,initializing,bean,after,properties,set,see,org,springframework,beans,factory,factory,bean;object,post,process,after,initialization,object,bean,string,bean,name,throws,beans,exception
