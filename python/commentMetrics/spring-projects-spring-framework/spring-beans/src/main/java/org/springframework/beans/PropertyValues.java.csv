commented;modifiers;parameterAmount;loc;comment;code
true;default;0;4;/**  * Return an {@link Iterator} over the property values.  * @since 5.1  */ ;/**  * Return an {@link Iterator} over the property values.  * @since 5.1  */ @Override default Iterator<PropertyValue> iterator() {     return Arrays.asList(getPropertyValues()).iterator(). }
true;default;0;4;/**  * Return a {@link Spliterator} over the property values.  * @since 5.1  */ ;/**  * Return a {@link Spliterator} over the property values.  * @since 5.1  */ @Override default Spliterator<PropertyValue> spliterator() {     return Spliterators.spliterator(getPropertyValues(), 0). }
true;default;0;3;/**  * Return a sequential {@link Stream} containing the property values.  * @since 5.1  */ ;/**  * Return a sequential {@link Stream} containing the property values.  * @since 5.1  */ default Stream<PropertyValue> stream() {     return StreamSupport.stream(spliterator(), false). }
true;;0;1;/**  * Return an array of the PropertyValue objects held in this object.  */ ;/**  * Return an array of the PropertyValue objects held in this object.  */ PropertyValue[] getPropertyValues().
true;;1;2;/**  * Return the property value with the given name, if any.  * @param propertyName the name to search for  * @return the property value, or {@code null} if none  */ ;/**  * Return the property value with the given name, if any.  * @param propertyName the name to search for  * @return the property value, or {@code null} if none  */ @Nullable PropertyValue getPropertyValue(String propertyName).
true;;1;1;/**  * Return the changes since the previous PropertyValues.  * Subclasses should also override {@code equals}.  * @param old old property values  * @return the updated or new properties.  * Return empty PropertyValues if there are no changes.  * @see Object#equals  */ ;/**  * Return the changes since the previous PropertyValues.  * Subclasses should also override {@code equals}.  * @param old old property values  * @return the updated or new properties.  * Return empty PropertyValues if there are no changes.  * @see Object#equals  */ PropertyValues changesSince(PropertyValues old).
true;;1;1;/**  * Is there a property value (or other processing entry) for this property?  * @param propertyName the name of the property we're interested in  * @return whether there is a property value for this property  */ ;/**  * Is there a property value (or other processing entry) for this property?  * @param propertyName the name of the property we're interested in  * @return whether there is a property value for this property  */ boolean contains(String propertyName).
true;;0;1;/**  * Does this holder not contain any PropertyValue objects at all?  */ ;/**  * Does this holder not contain any PropertyValue objects at all?  */ boolean isEmpty().
