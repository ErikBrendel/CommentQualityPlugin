# id;timestamp;commentText;codeText;commentWords;codeWords
BeanDefinitionVisitor -> @Nullable 	protected String resolveStringValue(String strVal);1496837955;Resolve the given String value, for example parsing placeholders._@param strVal the original String value_@return the resolved String value;@Nullable_	protected String resolveStringValue(String strVal) {_		if (this.valueResolver == null) {_			throw new IllegalStateException("No StringValueResolver specified - pass a resolver " +_					"object into the constructor or override the 'resolveStringValue' method")__		}_		String resolvedValue = this.valueResolver.resolveStringValue(strVal)__		_		return (strVal.equals(resolvedValue) ? strVal : resolvedValue)__	};resolve,the,given,string,value,for,example,parsing,placeholders,param,str,val,the,original,string,value,return,the,resolved,string,value;nullable,protected,string,resolve,string,value,string,str,val,if,this,value,resolver,null,throw,new,illegal,state,exception,no,string,value,resolver,specified,pass,a,resolver,object,into,the,constructor,or,override,the,resolve,string,value,method,string,resolved,value,this,value,resolver,resolve,string,value,str,val,return,str,val,equals,resolved,value,str,val,resolved,value
BeanDefinitionVisitor -> @Nullable 	protected String resolveStringValue(String strVal);1498780456;Resolve the given String value, for example parsing placeholders._@param strVal the original String value_@return the resolved String value;@Nullable_	protected String resolveStringValue(String strVal) {_		if (this.valueResolver == null) {_			throw new IllegalStateException("No StringValueResolver specified - pass a resolver " +_					"object into the constructor or override the 'resolveStringValue' method")__		}_		String resolvedValue = this.valueResolver.resolveStringValue(strVal)__		_		return (strVal.equals(resolvedValue) ? strVal : resolvedValue)__	};resolve,the,given,string,value,for,example,parsing,placeholders,param,str,val,the,original,string,value,return,the,resolved,string,value;nullable,protected,string,resolve,string,value,string,str,val,if,this,value,resolver,null,throw,new,illegal,state,exception,no,string,value,resolver,specified,pass,a,resolver,object,into,the,constructor,or,override,the,resolve,string,value,method,string,resolved,value,this,value,resolver,resolve,string,value,str,val,return,str,val,equals,resolved,value,str,val,resolved,value
BeanDefinitionVisitor -> @Nullable 	protected String resolveStringValue(String strVal);1510606271;Resolve the given String value, for example parsing placeholders._@param strVal the original String value_@return the resolved String value;@Nullable_	protected String resolveStringValue(String strVal) {_		if (this.valueResolver == null) {_			throw new IllegalStateException("No StringValueResolver specified - pass a resolver " +_					"object into the constructor or override the 'resolveStringValue' method")__		}_		String resolvedValue = this.valueResolver.resolveStringValue(strVal)__		_		return (strVal.equals(resolvedValue) ? strVal : resolvedValue)__	};resolve,the,given,string,value,for,example,parsing,placeholders,param,str,val,the,original,string,value,return,the,resolved,string,value;nullable,protected,string,resolve,string,value,string,str,val,if,this,value,resolver,null,throw,new,illegal,state,exception,no,string,value,resolver,specified,pass,a,resolver,object,into,the,constructor,or,override,the,resolve,string,value,method,string,resolved,value,this,value,resolver,resolve,string,value,str,val,return,str,val,equals,resolved,value,str,val,resolved,value
BeanDefinitionVisitor -> @Nullable 	protected String resolveStringValue(String strVal);1549554785;Resolve the given String value, for example parsing placeholders._@param strVal the original String value_@return the resolved String value;@Nullable_	protected String resolveStringValue(String strVal) {_		if (this.valueResolver == null) {_			throw new IllegalStateException("No StringValueResolver specified - pass a resolver " +_					"object into the constructor or override the 'resolveStringValue' method")__		}_		String resolvedValue = this.valueResolver.resolveStringValue(strVal)__		_		return (strVal.equals(resolvedValue) ? strVal : resolvedValue)__	};resolve,the,given,string,value,for,example,parsing,placeholders,param,str,val,the,original,string,value,return,the,resolved,string,value;nullable,protected,string,resolve,string,value,string,str,val,if,this,value,resolver,null,throw,new,illegal,state,exception,no,string,value,resolver,specified,pass,a,resolver,object,into,the,constructor,or,override,the,resolve,string,value,method,string,resolved,value,this,value,resolver,resolve,string,value,str,val,return,str,val,equals,resolved,value,str,val,resolved,value
BeanDefinitionVisitor -> public BeanDefinitionVisitor(StringValueResolver valueResolver);1328020251;Create a new BeanDefinitionVisitor, applying the specified_value resolver to all bean metadata values._@param valueResolver the StringValueResolver to apply;public BeanDefinitionVisitor(StringValueResolver valueResolver) {_		Assert.notNull(valueResolver, "StringValueResolver must not be null")__		this.valueResolver = valueResolver__	};create,a,new,bean,definition,visitor,applying,the,specified,value,resolver,to,all,bean,metadata,values,param,value,resolver,the,string,value,resolver,to,apply;public,bean,definition,visitor,string,value,resolver,value,resolver,assert,not,null,value,resolver,string,value,resolver,must,not,be,null,this,value,resolver,value,resolver
BeanDefinitionVisitor -> public BeanDefinitionVisitor(StringValueResolver valueResolver);1496837955;Create a new BeanDefinitionVisitor, applying the specified_value resolver to all bean metadata values._@param valueResolver the StringValueResolver to apply;public BeanDefinitionVisitor(StringValueResolver valueResolver) {_		Assert.notNull(valueResolver, "StringValueResolver must not be null")__		this.valueResolver = valueResolver__	};create,a,new,bean,definition,visitor,applying,the,specified,value,resolver,to,all,bean,metadata,values,param,value,resolver,the,string,value,resolver,to,apply;public,bean,definition,visitor,string,value,resolver,value,resolver,assert,not,null,value,resolver,string,value,resolver,must,not,be,null,this,value,resolver,value,resolver
BeanDefinitionVisitor -> public BeanDefinitionVisitor(StringValueResolver valueResolver);1498780456;Create a new BeanDefinitionVisitor, applying the specified_value resolver to all bean metadata values._@param valueResolver the StringValueResolver to apply;public BeanDefinitionVisitor(StringValueResolver valueResolver) {_		Assert.notNull(valueResolver, "StringValueResolver must not be null")__		this.valueResolver = valueResolver__	};create,a,new,bean,definition,visitor,applying,the,specified,value,resolver,to,all,bean,metadata,values,param,value,resolver,the,string,value,resolver,to,apply;public,bean,definition,visitor,string,value,resolver,value,resolver,assert,not,null,value,resolver,string,value,resolver,must,not,be,null,this,value,resolver,value,resolver
BeanDefinitionVisitor -> public BeanDefinitionVisitor(StringValueResolver valueResolver);1510606271;Create a new BeanDefinitionVisitor, applying the specified_value resolver to all bean metadata values._@param valueResolver the StringValueResolver to apply;public BeanDefinitionVisitor(StringValueResolver valueResolver) {_		Assert.notNull(valueResolver, "StringValueResolver must not be null")__		this.valueResolver = valueResolver__	};create,a,new,bean,definition,visitor,applying,the,specified,value,resolver,to,all,bean,metadata,values,param,value,resolver,the,string,value,resolver,to,apply;public,bean,definition,visitor,string,value,resolver,value,resolver,assert,not,null,value,resolver,string,value,resolver,must,not,be,null,this,value,resolver,value,resolver
BeanDefinitionVisitor -> public BeanDefinitionVisitor(StringValueResolver valueResolver);1549554785;Create a new BeanDefinitionVisitor, applying the specified_value resolver to all bean metadata values._@param valueResolver the StringValueResolver to apply;public BeanDefinitionVisitor(StringValueResolver valueResolver) {_		Assert.notNull(valueResolver, "StringValueResolver must not be null")__		this.valueResolver = valueResolver__	};create,a,new,bean,definition,visitor,applying,the,specified,value,resolver,to,all,bean,metadata,values,param,value,resolver,the,string,value,resolver,to,apply;public,bean,definition,visitor,string,value,resolver,value,resolver,assert,not,null,value,resolver,string,value,resolver,must,not,be,null,this,value,resolver,value,resolver
BeanDefinitionVisitor -> public void visitBeanDefinition(BeanDefinition beanDefinition);1328020251;Traverse the given BeanDefinition object and the MutablePropertyValues_and ConstructorArgumentValues contained in them._@param beanDefinition the BeanDefinition object to traverse_@see #resolveStringValue(String);public void visitBeanDefinition(BeanDefinition beanDefinition) {_		visitParentName(beanDefinition)__		visitBeanClassName(beanDefinition)__		visitFactoryBeanName(beanDefinition)__		visitFactoryMethodName(beanDefinition)__		visitScope(beanDefinition)__		visitPropertyValues(beanDefinition.getPropertyValues())__		ConstructorArgumentValues cas = beanDefinition.getConstructorArgumentValues()__		visitIndexedArgumentValues(cas.getIndexedArgumentValues())__		visitGenericArgumentValues(cas.getGenericArgumentValues())__	};traverse,the,given,bean,definition,object,and,the,mutable,property,values,and,constructor,argument,values,contained,in,them,param,bean,definition,the,bean,definition,object,to,traverse,see,resolve,string,value,string;public,void,visit,bean,definition,bean,definition,bean,definition,visit,parent,name,bean,definition,visit,bean,class,name,bean,definition,visit,factory,bean,name,bean,definition,visit,factory,method,name,bean,definition,visit,scope,bean,definition,visit,property,values,bean,definition,get,property,values,constructor,argument,values,cas,bean,definition,get,constructor,argument,values,visit,indexed,argument,values,cas,get,indexed,argument,values,visit,generic,argument,values,cas,get,generic,argument,values
BeanDefinitionVisitor -> public void visitBeanDefinition(BeanDefinition beanDefinition);1496837955;Traverse the given BeanDefinition object and the MutablePropertyValues_and ConstructorArgumentValues contained in them._@param beanDefinition the BeanDefinition object to traverse_@see #resolveStringValue(String);public void visitBeanDefinition(BeanDefinition beanDefinition) {_		visitParentName(beanDefinition)__		visitBeanClassName(beanDefinition)__		visitFactoryBeanName(beanDefinition)__		visitFactoryMethodName(beanDefinition)__		visitScope(beanDefinition)__		visitPropertyValues(beanDefinition.getPropertyValues())__		ConstructorArgumentValues cas = beanDefinition.getConstructorArgumentValues()__		visitIndexedArgumentValues(cas.getIndexedArgumentValues())__		visitGenericArgumentValues(cas.getGenericArgumentValues())__	};traverse,the,given,bean,definition,object,and,the,mutable,property,values,and,constructor,argument,values,contained,in,them,param,bean,definition,the,bean,definition,object,to,traverse,see,resolve,string,value,string;public,void,visit,bean,definition,bean,definition,bean,definition,visit,parent,name,bean,definition,visit,bean,class,name,bean,definition,visit,factory,bean,name,bean,definition,visit,factory,method,name,bean,definition,visit,scope,bean,definition,visit,property,values,bean,definition,get,property,values,constructor,argument,values,cas,bean,definition,get,constructor,argument,values,visit,indexed,argument,values,cas,get,indexed,argument,values,visit,generic,argument,values,cas,get,generic,argument,values
BeanDefinitionVisitor -> public void visitBeanDefinition(BeanDefinition beanDefinition);1498780456;Traverse the given BeanDefinition object and the MutablePropertyValues_and ConstructorArgumentValues contained in them._@param beanDefinition the BeanDefinition object to traverse_@see #resolveStringValue(String);public void visitBeanDefinition(BeanDefinition beanDefinition) {_		visitParentName(beanDefinition)__		visitBeanClassName(beanDefinition)__		visitFactoryBeanName(beanDefinition)__		visitFactoryMethodName(beanDefinition)__		visitScope(beanDefinition)__		visitPropertyValues(beanDefinition.getPropertyValues())__		ConstructorArgumentValues cas = beanDefinition.getConstructorArgumentValues()__		visitIndexedArgumentValues(cas.getIndexedArgumentValues())__		visitGenericArgumentValues(cas.getGenericArgumentValues())__	};traverse,the,given,bean,definition,object,and,the,mutable,property,values,and,constructor,argument,values,contained,in,them,param,bean,definition,the,bean,definition,object,to,traverse,see,resolve,string,value,string;public,void,visit,bean,definition,bean,definition,bean,definition,visit,parent,name,bean,definition,visit,bean,class,name,bean,definition,visit,factory,bean,name,bean,definition,visit,factory,method,name,bean,definition,visit,scope,bean,definition,visit,property,values,bean,definition,get,property,values,constructor,argument,values,cas,bean,definition,get,constructor,argument,values,visit,indexed,argument,values,cas,get,indexed,argument,values,visit,generic,argument,values,cas,get,generic,argument,values
BeanDefinitionVisitor -> public void visitBeanDefinition(BeanDefinition beanDefinition);1510606271;Traverse the given BeanDefinition object and the MutablePropertyValues_and ConstructorArgumentValues contained in them._@param beanDefinition the BeanDefinition object to traverse_@see #resolveStringValue(String);public void visitBeanDefinition(BeanDefinition beanDefinition) {_		visitParentName(beanDefinition)__		visitBeanClassName(beanDefinition)__		visitFactoryBeanName(beanDefinition)__		visitFactoryMethodName(beanDefinition)__		visitScope(beanDefinition)__		if (beanDefinition.hasPropertyValues()) {_			visitPropertyValues(beanDefinition.getPropertyValues())__		}_		if (beanDefinition.hasConstructorArgumentValues()) {_			ConstructorArgumentValues cas = beanDefinition.getConstructorArgumentValues()__			visitIndexedArgumentValues(cas.getIndexedArgumentValues())__			visitGenericArgumentValues(cas.getGenericArgumentValues())__		}_	};traverse,the,given,bean,definition,object,and,the,mutable,property,values,and,constructor,argument,values,contained,in,them,param,bean,definition,the,bean,definition,object,to,traverse,see,resolve,string,value,string;public,void,visit,bean,definition,bean,definition,bean,definition,visit,parent,name,bean,definition,visit,bean,class,name,bean,definition,visit,factory,bean,name,bean,definition,visit,factory,method,name,bean,definition,visit,scope,bean,definition,if,bean,definition,has,property,values,visit,property,values,bean,definition,get,property,values,if,bean,definition,has,constructor,argument,values,constructor,argument,values,cas,bean,definition,get,constructor,argument,values,visit,indexed,argument,values,cas,get,indexed,argument,values,visit,generic,argument,values,cas,get,generic,argument,values
BeanDefinitionVisitor -> public void visitBeanDefinition(BeanDefinition beanDefinition);1549554785;Traverse the given BeanDefinition object and the MutablePropertyValues_and ConstructorArgumentValues contained in them._@param beanDefinition the BeanDefinition object to traverse_@see #resolveStringValue(String);public void visitBeanDefinition(BeanDefinition beanDefinition) {_		visitParentName(beanDefinition)__		visitBeanClassName(beanDefinition)__		visitFactoryBeanName(beanDefinition)__		visitFactoryMethodName(beanDefinition)__		visitScope(beanDefinition)__		if (beanDefinition.hasPropertyValues()) {_			visitPropertyValues(beanDefinition.getPropertyValues())__		}_		if (beanDefinition.hasConstructorArgumentValues()) {_			ConstructorArgumentValues cas = beanDefinition.getConstructorArgumentValues()__			visitIndexedArgumentValues(cas.getIndexedArgumentValues())__			visitGenericArgumentValues(cas.getGenericArgumentValues())__		}_	};traverse,the,given,bean,definition,object,and,the,mutable,property,values,and,constructor,argument,values,contained,in,them,param,bean,definition,the,bean,definition,object,to,traverse,see,resolve,string,value,string;public,void,visit,bean,definition,bean,definition,bean,definition,visit,parent,name,bean,definition,visit,bean,class,name,bean,definition,visit,factory,bean,name,bean,definition,visit,factory,method,name,bean,definition,visit,scope,bean,definition,if,bean,definition,has,property,values,visit,property,values,bean,definition,get,property,values,if,bean,definition,has,constructor,argument,values,constructor,argument,values,cas,bean,definition,get,constructor,argument,values,visit,indexed,argument,values,cas,get,indexed,argument,values,visit,generic,argument,values,cas,get,generic,argument,values
BeanDefinitionVisitor -> protected BeanDefinitionVisitor();1328020251;Create a new BeanDefinitionVisitor for subclassing._Subclasses need to override the {@link #resolveStringValue} method.;protected BeanDefinitionVisitor() {_	};create,a,new,bean,definition,visitor,for,subclassing,subclasses,need,to,override,the,link,resolve,string,value,method;protected,bean,definition,visitor
BeanDefinitionVisitor -> protected BeanDefinitionVisitor();1496837955;Create a new BeanDefinitionVisitor for subclassing._Subclasses need to override the {@link #resolveStringValue} method.;protected BeanDefinitionVisitor() {_	};create,a,new,bean,definition,visitor,for,subclassing,subclasses,need,to,override,the,link,resolve,string,value,method;protected,bean,definition,visitor
BeanDefinitionVisitor -> protected BeanDefinitionVisitor();1498780456;Create a new BeanDefinitionVisitor for subclassing._Subclasses need to override the {@link #resolveStringValue} method.;protected BeanDefinitionVisitor() {_	};create,a,new,bean,definition,visitor,for,subclassing,subclasses,need,to,override,the,link,resolve,string,value,method;protected,bean,definition,visitor
BeanDefinitionVisitor -> protected BeanDefinitionVisitor();1510606271;Create a new BeanDefinitionVisitor for subclassing._Subclasses need to override the {@link #resolveStringValue} method.;protected BeanDefinitionVisitor() {_	};create,a,new,bean,definition,visitor,for,subclassing,subclasses,need,to,override,the,link,resolve,string,value,method;protected,bean,definition,visitor
BeanDefinitionVisitor -> protected BeanDefinitionVisitor();1549554785;Create a new BeanDefinitionVisitor for subclassing._Subclasses need to override the {@link #resolveStringValue} method.;protected BeanDefinitionVisitor() {_	};create,a,new,bean,definition,visitor,for,subclassing,subclasses,need,to,override,the,link,resolve,string,value,method;protected,bean,definition,visitor
