commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * Register custom {@link java.beans.PropertyEditor PropertyEditors} with  * the given {@code PropertyEditorRegistry}.  * <p>The passed-in registry will usually be a {@link BeanWrapper} or a  * {@link org.springframework.validation.DataBinder DataBinder}.  * <p>It is expected that implementations will create brand new  * {@code PropertyEditors} instances for each invocation of this  * method (since {@code PropertyEditors} are not threadsafe).  * @param registry the {@code PropertyEditorRegistry} to register the  * custom {@code PropertyEditors} with  */ ;/**  * Register custom {@link java.beans.PropertyEditor PropertyEditors} with  * the given {@code PropertyEditorRegistry}.  * <p>The passed-in registry will usually be a {@link BeanWrapper} or a  * {@link org.springframework.validation.DataBinder DataBinder}.  * <p>It is expected that implementations will create brand new  * {@code PropertyEditors} instances for each invocation of this  * method (since {@code PropertyEditors} are not threadsafe).  * @param registry the {@code PropertyEditorRegistry} to register the  * custom {@code PropertyEditors} with  */ void registerCustomEditors(PropertyEditorRegistry registry).
