# id;timestamp;commentText;codeText;commentWords;codeWords
NamespaceHandler -> BeanDefinitionHolder decorate(Node source, BeanDefinitionHolder definition, ParserContext parserContext)_;1328020251;Parse the specified {@link Node} and decorate the supplied_{@link BeanDefinitionHolder}, returning the decorated definition._<p>The {@link Node} may be either an {@link org.w3c.dom.Attr} or an_{@link Element}, depending on whether a custom attribute or element_is being parsed._<p>Implementations may choose to return a completely new definition,_which will replace the original definition in the resulting_{@link org.springframework.beans.factory.BeanFactory}._<p>The supplied {@link ParserContext} can be used to register any_additional beans needed to support the main definition._@param source the source element or attribute that is to be parsed_@param definition the current bean definition_@param parserContext the object encapsulating the current state of the parsing process_@return the decorated definition (to be registered in the BeanFactory),_or simply the original bean definition if no decoration is required._A <code>null</code> value is strictly speaking invalid, but will be leniently_treated like the case where the original bean definition gets returned.;BeanDefinitionHolder decorate(Node source, BeanDefinitionHolder definition, ParserContext parserContext)_;parse,the,specified,link,node,and,decorate,the,supplied,link,bean,definition,holder,returning,the,decorated,definition,p,the,link,node,may,be,either,an,link,org,w3c,dom,attr,or,an,link,element,depending,on,whether,a,custom,attribute,or,element,is,being,parsed,p,implementations,may,choose,to,return,a,completely,new,definition,which,will,replace,the,original,definition,in,the,resulting,link,org,springframework,beans,factory,bean,factory,p,the,supplied,link,parser,context,can,be,used,to,register,any,additional,beans,needed,to,support,the,main,definition,param,source,the,source,element,or,attribute,that,is,to,be,parsed,param,definition,the,current,bean,definition,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,return,the,decorated,definition,to,be,registered,in,the,bean,factory,or,simply,the,original,bean,definition,if,no,decoration,is,required,a,code,null,code,value,is,strictly,speaking,invalid,but,will,be,leniently,treated,like,the,case,where,the,original,bean,definition,gets,returned;bean,definition,holder,decorate,node,source,bean,definition,holder,definition,parser,context,parser,context
NamespaceHandler -> BeanDefinitionHolder decorate(Node source, BeanDefinitionHolder definition, ParserContext parserContext)_;1356735495;Parse the specified {@link Node} and decorate the supplied_{@link BeanDefinitionHolder}, returning the decorated definition._<p>The {@link Node} may be either an {@link org.w3c.dom.Attr} or an_{@link Element}, depending on whether a custom attribute or element_is being parsed._<p>Implementations may choose to return a completely new definition,_which will replace the original definition in the resulting_{@link org.springframework.beans.factory.BeanFactory}._<p>The supplied {@link ParserContext} can be used to register any_additional beans needed to support the main definition._@param source the source element or attribute that is to be parsed_@param definition the current bean definition_@param parserContext the object encapsulating the current state of the parsing process_@return the decorated definition (to be registered in the BeanFactory),_or simply the original bean definition if no decoration is required._A {@code null} value is strictly speaking invalid, but will be leniently_treated like the case where the original bean definition gets returned.;BeanDefinitionHolder decorate(Node source, BeanDefinitionHolder definition, ParserContext parserContext)_;parse,the,specified,link,node,and,decorate,the,supplied,link,bean,definition,holder,returning,the,decorated,definition,p,the,link,node,may,be,either,an,link,org,w3c,dom,attr,or,an,link,element,depending,on,whether,a,custom,attribute,or,element,is,being,parsed,p,implementations,may,choose,to,return,a,completely,new,definition,which,will,replace,the,original,definition,in,the,resulting,link,org,springframework,beans,factory,bean,factory,p,the,supplied,link,parser,context,can,be,used,to,register,any,additional,beans,needed,to,support,the,main,definition,param,source,the,source,element,or,attribute,that,is,to,be,parsed,param,definition,the,current,bean,definition,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,return,the,decorated,definition,to,be,registered,in,the,bean,factory,or,simply,the,original,bean,definition,if,no,decoration,is,required,a,code,null,value,is,strictly,speaking,invalid,but,will,be,leniently,treated,like,the,case,where,the,original,bean,definition,gets,returned;bean,definition,holder,decorate,node,source,bean,definition,holder,definition,parser,context,parser,context
NamespaceHandler -> BeanDefinitionHolder decorate(Node source, BeanDefinitionHolder definition, ParserContext parserContext)_;1385423968;Parse the specified {@link Node} and decorate the supplied_{@link BeanDefinitionHolder}, returning the decorated definition._<p>The {@link Node} may be either an {@link org.w3c.dom.Attr} or an_{@link Element}, depending on whether a custom attribute or element_is being parsed._<p>Implementations may choose to return a completely new definition,_which will replace the original definition in the resulting_{@link org.springframework.beans.factory.BeanFactory}._<p>The supplied {@link ParserContext} can be used to register any_additional beans needed to support the main definition._@param source the source element or attribute that is to be parsed_@param definition the current bean definition_@param parserContext the object encapsulating the current state of the parsing process_@return the decorated definition (to be registered in the BeanFactory),_or simply the original bean definition if no decoration is required._A {@code null} value is strictly speaking invalid, but will be leniently_treated like the case where the original bean definition gets returned.;BeanDefinitionHolder decorate(Node source, BeanDefinitionHolder definition, ParserContext parserContext)_;parse,the,specified,link,node,and,decorate,the,supplied,link,bean,definition,holder,returning,the,decorated,definition,p,the,link,node,may,be,either,an,link,org,w3c,dom,attr,or,an,link,element,depending,on,whether,a,custom,attribute,or,element,is,being,parsed,p,implementations,may,choose,to,return,a,completely,new,definition,which,will,replace,the,original,definition,in,the,resulting,link,org,springframework,beans,factory,bean,factory,p,the,supplied,link,parser,context,can,be,used,to,register,any,additional,beans,needed,to,support,the,main,definition,param,source,the,source,element,or,attribute,that,is,to,be,parsed,param,definition,the,current,bean,definition,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,return,the,decorated,definition,to,be,registered,in,the,bean,factory,or,simply,the,original,bean,definition,if,no,decoration,is,required,a,code,null,value,is,strictly,speaking,invalid,but,will,be,leniently,treated,like,the,case,where,the,original,bean,definition,gets,returned;bean,definition,holder,decorate,node,source,bean,definition,holder,definition,parser,context,parser,context
NamespaceHandler -> BeanDefinitionHolder decorate(Node source, BeanDefinitionHolder definition, ParserContext parserContext)_;1447323728;Parse the specified {@link Node} and decorate the supplied_{@link BeanDefinitionHolder}, returning the decorated definition._<p>The {@link Node} may be either an {@link org.w3c.dom.Attr} or an_{@link Element}, depending on whether a custom attribute or element_is being parsed._<p>Implementations may choose to return a completely new definition,_which will replace the original definition in the resulting_{@link org.springframework.beans.factory.BeanFactory}._<p>The supplied {@link ParserContext} can be used to register any_additional beans needed to support the main definition._@param source the source element or attribute that is to be parsed_@param definition the current bean definition_@param parserContext the object encapsulating the current state of the parsing process_@return the decorated definition (to be registered in the BeanFactory),_or simply the original bean definition if no decoration is required._A {@code null} value is strictly speaking invalid, but will be leniently_treated like the case where the original bean definition gets returned.;BeanDefinitionHolder decorate(Node source, BeanDefinitionHolder definition, ParserContext parserContext)_;parse,the,specified,link,node,and,decorate,the,supplied,link,bean,definition,holder,returning,the,decorated,definition,p,the,link,node,may,be,either,an,link,org,w3c,dom,attr,or,an,link,element,depending,on,whether,a,custom,attribute,or,element,is,being,parsed,p,implementations,may,choose,to,return,a,completely,new,definition,which,will,replace,the,original,definition,in,the,resulting,link,org,springframework,beans,factory,bean,factory,p,the,supplied,link,parser,context,can,be,used,to,register,any,additional,beans,needed,to,support,the,main,definition,param,source,the,source,element,or,attribute,that,is,to,be,parsed,param,definition,the,current,bean,definition,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,return,the,decorated,definition,to,be,registered,in,the,bean,factory,or,simply,the,original,bean,definition,if,no,decoration,is,required,a,code,null,value,is,strictly,speaking,invalid,but,will,be,leniently,treated,like,the,case,where,the,original,bean,definition,gets,returned;bean,definition,holder,decorate,node,source,bean,definition,holder,definition,parser,context,parser,context
NamespaceHandler -> BeanDefinitionHolder decorate(Node source, BeanDefinitionHolder definition, ParserContext parserContext)_;1495868221;Parse the specified {@link Node} and decorate the supplied_{@link BeanDefinitionHolder}, returning the decorated definition._<p>The {@link Node} may be either an {@link org.w3c.dom.Attr} or an_{@link Element}, depending on whether a custom attribute or element_is being parsed._<p>Implementations may choose to return a completely new definition,_which will replace the original definition in the resulting_{@link org.springframework.beans.factory.BeanFactory}._<p>The supplied {@link ParserContext} can be used to register any_additional beans needed to support the main definition._@param source the source element or attribute that is to be parsed_@param definition the current bean definition_@param parserContext the object encapsulating the current state of the parsing process_@return the decorated definition (to be registered in the BeanFactory),_or simply the original bean definition if no decoration is required._A {@code null} value is strictly speaking invalid, but will be leniently_treated like the case where the original bean definition gets returned.;BeanDefinitionHolder decorate(Node source, BeanDefinitionHolder definition, ParserContext parserContext)_;parse,the,specified,link,node,and,decorate,the,supplied,link,bean,definition,holder,returning,the,decorated,definition,p,the,link,node,may,be,either,an,link,org,w3c,dom,attr,or,an,link,element,depending,on,whether,a,custom,attribute,or,element,is,being,parsed,p,implementations,may,choose,to,return,a,completely,new,definition,which,will,replace,the,original,definition,in,the,resulting,link,org,springframework,beans,factory,bean,factory,p,the,supplied,link,parser,context,can,be,used,to,register,any,additional,beans,needed,to,support,the,main,definition,param,source,the,source,element,or,attribute,that,is,to,be,parsed,param,definition,the,current,bean,definition,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,return,the,decorated,definition,to,be,registered,in,the,bean,factory,or,simply,the,original,bean,definition,if,no,decoration,is,required,a,code,null,value,is,strictly,speaking,invalid,but,will,be,leniently,treated,like,the,case,where,the,original,bean,definition,gets,returned;bean,definition,holder,decorate,node,source,bean,definition,holder,definition,parser,context,parser,context
NamespaceHandler -> @Nullable 	BeanDefinition parse(Element element, ParserContext parserContext)_;1495868221;Parse the specified {@link Element} and register any resulting_{@link BeanDefinition BeanDefinitions} with the_{@link org.springframework.beans.factory.support.BeanDefinitionRegistry}_that is embedded in the supplied {@link ParserContext}._<p>Implementations should return the primary {@code BeanDefinition}_that results from the parse phase if they wish to be used nested_inside (for example) a {@code <property>} tag._<p>Implementations may return {@code null} if they will_<strong>not</strong> be used in a nested scenario._@param element the element that is to be parsed into one or more {@code BeanDefinitions}_@param parserContext the object encapsulating the current state of the parsing process_@return the primary {@code BeanDefinition} (can be {@code null} as explained above);@Nullable_	BeanDefinition parse(Element element, ParserContext parserContext)_;parse,the,specified,link,element,and,register,any,resulting,link,bean,definition,bean,definitions,with,the,link,org,springframework,beans,factory,support,bean,definition,registry,that,is,embedded,in,the,supplied,link,parser,context,p,implementations,should,return,the,primary,code,bean,definition,that,results,from,the,parse,phase,if,they,wish,to,be,used,nested,inside,for,example,a,code,property,tag,p,implementations,may,return,code,null,if,they,will,strong,not,strong,be,used,in,a,nested,scenario,param,element,the,element,that,is,to,be,parsed,into,one,or,more,code,bean,definitions,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,return,the,primary,code,bean,definition,can,be,code,null,as,explained,above;nullable,bean,definition,parse,element,element,parser,context,parser,context
NamespaceHandler -> @Nullable 	BeanDefinition parse(Element element, ParserContext parserContext)_;1496837955;Parse the specified {@link Element} and register any resulting_{@link BeanDefinition BeanDefinitions} with the_{@link org.springframework.beans.factory.support.BeanDefinitionRegistry}_that is embedded in the supplied {@link ParserContext}._<p>Implementations should return the primary {@code BeanDefinition}_that results from the parse phase if they wish to be used nested_inside (for example) a {@code <property>} tag._<p>Implementations may return {@code null} if they will_<strong>not</strong> be used in a nested scenario._@param element the element that is to be parsed into one or more {@code BeanDefinitions}_@param parserContext the object encapsulating the current state of the parsing process_@return the primary {@code BeanDefinition} (can be {@code null} as explained above);@Nullable_	BeanDefinition parse(Element element, ParserContext parserContext)_;parse,the,specified,link,element,and,register,any,resulting,link,bean,definition,bean,definitions,with,the,link,org,springframework,beans,factory,support,bean,definition,registry,that,is,embedded,in,the,supplied,link,parser,context,p,implementations,should,return,the,primary,code,bean,definition,that,results,from,the,parse,phase,if,they,wish,to,be,used,nested,inside,for,example,a,code,property,tag,p,implementations,may,return,code,null,if,they,will,strong,not,strong,be,used,in,a,nested,scenario,param,element,the,element,that,is,to,be,parsed,into,one,or,more,code,bean,definitions,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,return,the,primary,code,bean,definition,can,be,code,null,as,explained,above;nullable,bean,definition,parse,element,element,parser,context,parser,context
NamespaceHandler -> void init()_;1328020251;Invoked by the {@link DefaultBeanDefinitionDocumentReader} after_construction but before any custom elements are parsed._@see NamespaceHandlerSupport#registerBeanDefinitionParser(String, BeanDefinitionParser);void init()_;invoked,by,the,link,default,bean,definition,document,reader,after,construction,but,before,any,custom,elements,are,parsed,see,namespace,handler,support,register,bean,definition,parser,string,bean,definition,parser;void,init
NamespaceHandler -> void init()_;1356735495;Invoked by the {@link DefaultBeanDefinitionDocumentReader} after_construction but before any custom elements are parsed._@see NamespaceHandlerSupport#registerBeanDefinitionParser(String, BeanDefinitionParser);void init()_;invoked,by,the,link,default,bean,definition,document,reader,after,construction,but,before,any,custom,elements,are,parsed,see,namespace,handler,support,register,bean,definition,parser,string,bean,definition,parser;void,init
NamespaceHandler -> void init()_;1385423968;Invoked by the {@link DefaultBeanDefinitionDocumentReader} after_construction but before any custom elements are parsed._@see NamespaceHandlerSupport#registerBeanDefinitionParser(String, BeanDefinitionParser);void init()_;invoked,by,the,link,default,bean,definition,document,reader,after,construction,but,before,any,custom,elements,are,parsed,see,namespace,handler,support,register,bean,definition,parser,string,bean,definition,parser;void,init
NamespaceHandler -> void init()_;1447323728;Invoked by the {@link DefaultBeanDefinitionDocumentReader} after_construction but before any custom elements are parsed._@see NamespaceHandlerSupport#registerBeanDefinitionParser(String, BeanDefinitionParser);void init()_;invoked,by,the,link,default,bean,definition,document,reader,after,construction,but,before,any,custom,elements,are,parsed,see,namespace,handler,support,register,bean,definition,parser,string,bean,definition,parser;void,init
NamespaceHandler -> void init()_;1495868221;Invoked by the {@link DefaultBeanDefinitionDocumentReader} after_construction but before any custom elements are parsed._@see NamespaceHandlerSupport#registerBeanDefinitionParser(String, BeanDefinitionParser);void init()_;invoked,by,the,link,default,bean,definition,document,reader,after,construction,but,before,any,custom,elements,are,parsed,see,namespace,handler,support,register,bean,definition,parser,string,bean,definition,parser;void,init
NamespaceHandler -> void init()_;1496837955;Invoked by the {@link DefaultBeanDefinitionDocumentReader} after_construction but before any custom elements are parsed._@see NamespaceHandlerSupport#registerBeanDefinitionParser(String, BeanDefinitionParser);void init()_;invoked,by,the,link,default,bean,definition,document,reader,after,construction,but,before,any,custom,elements,are,parsed,see,namespace,handler,support,register,bean,definition,parser,string,bean,definition,parser;void,init
NamespaceHandler -> BeanDefinition parse(Element element, ParserContext parserContext)_;1328020251;Parse the specified {@link Element} and register any resulting_{@link BeanDefinition BeanDefinitions} with the_{@link org.springframework.beans.factory.support.BeanDefinitionRegistry}_that is embedded in the supplied {@link ParserContext}._<p>Implementations should return the primary <code>BeanDefinition</code>_that results from the parse phase if they wish to be used nested_inside (for example) a <code>&lt_property&gt_</code> tag._<p>Implementations may return <code>null</code> if they will_<strong>not</strong> be used in a nested scenario._@param element the element that is to be parsed into one or more <code>BeanDefinitions</code>_@param parserContext the object encapsulating the current state of the parsing process_@return the primary <code>BeanDefinition</code> (can be <code>null</code> as explained above);BeanDefinition parse(Element element, ParserContext parserContext)_;parse,the,specified,link,element,and,register,any,resulting,link,bean,definition,bean,definitions,with,the,link,org,springframework,beans,factory,support,bean,definition,registry,that,is,embedded,in,the,supplied,link,parser,context,p,implementations,should,return,the,primary,code,bean,definition,code,that,results,from,the,parse,phase,if,they,wish,to,be,used,nested,inside,for,example,a,code,lt,property,gt,code,tag,p,implementations,may,return,code,null,code,if,they,will,strong,not,strong,be,used,in,a,nested,scenario,param,element,the,element,that,is,to,be,parsed,into,one,or,more,code,bean,definitions,code,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,return,the,primary,code,bean,definition,code,can,be,code,null,code,as,explained,above;bean,definition,parse,element,element,parser,context,parser,context
NamespaceHandler -> BeanDefinition parse(Element element, ParserContext parserContext)_;1356735495;Parse the specified {@link Element} and register any resulting_{@link BeanDefinition BeanDefinitions} with the_{@link org.springframework.beans.factory.support.BeanDefinitionRegistry}_that is embedded in the supplied {@link ParserContext}._<p>Implementations should return the primary {@code BeanDefinition}_that results from the parse phase if they wish to be used nested_inside (for example) a {@code &lt_property&gt_} tag._<p>Implementations may return {@code null} if they will_<strong>not</strong> be used in a nested scenario._@param element the element that is to be parsed into one or more {@code BeanDefinitions}_@param parserContext the object encapsulating the current state of the parsing process_@return the primary {@code BeanDefinition} (can be {@code null} as explained above);BeanDefinition parse(Element element, ParserContext parserContext)_;parse,the,specified,link,element,and,register,any,resulting,link,bean,definition,bean,definitions,with,the,link,org,springframework,beans,factory,support,bean,definition,registry,that,is,embedded,in,the,supplied,link,parser,context,p,implementations,should,return,the,primary,code,bean,definition,that,results,from,the,parse,phase,if,they,wish,to,be,used,nested,inside,for,example,a,code,lt,property,gt,tag,p,implementations,may,return,code,null,if,they,will,strong,not,strong,be,used,in,a,nested,scenario,param,element,the,element,that,is,to,be,parsed,into,one,or,more,code,bean,definitions,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,return,the,primary,code,bean,definition,can,be,code,null,as,explained,above;bean,definition,parse,element,element,parser,context,parser,context
NamespaceHandler -> BeanDefinition parse(Element element, ParserContext parserContext)_;1385423968;Parse the specified {@link Element} and register any resulting_{@link BeanDefinition BeanDefinitions} with the_{@link org.springframework.beans.factory.support.BeanDefinitionRegistry}_that is embedded in the supplied {@link ParserContext}._<p>Implementations should return the primary {@code BeanDefinition}_that results from the parse phase if they wish to be used nested_inside (for example) a {@code &lt_property&gt_} tag._<p>Implementations may return {@code null} if they will_<strong>not</strong> be used in a nested scenario._@param element the element that is to be parsed into one or more {@code BeanDefinitions}_@param parserContext the object encapsulating the current state of the parsing process_@return the primary {@code BeanDefinition} (can be {@code null} as explained above);BeanDefinition parse(Element element, ParserContext parserContext)_;parse,the,specified,link,element,and,register,any,resulting,link,bean,definition,bean,definitions,with,the,link,org,springframework,beans,factory,support,bean,definition,registry,that,is,embedded,in,the,supplied,link,parser,context,p,implementations,should,return,the,primary,code,bean,definition,that,results,from,the,parse,phase,if,they,wish,to,be,used,nested,inside,for,example,a,code,lt,property,gt,tag,p,implementations,may,return,code,null,if,they,will,strong,not,strong,be,used,in,a,nested,scenario,param,element,the,element,that,is,to,be,parsed,into,one,or,more,code,bean,definitions,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,return,the,primary,code,bean,definition,can,be,code,null,as,explained,above;bean,definition,parse,element,element,parser,context,parser,context
NamespaceHandler -> BeanDefinition parse(Element element, ParserContext parserContext)_;1447323728;Parse the specified {@link Element} and register any resulting_{@link BeanDefinition BeanDefinitions} with the_{@link org.springframework.beans.factory.support.BeanDefinitionRegistry}_that is embedded in the supplied {@link ParserContext}._<p>Implementations should return the primary {@code BeanDefinition}_that results from the parse phase if they wish to be used nested_inside (for example) a {@code <property>} tag._<p>Implementations may return {@code null} if they will_<strong>not</strong> be used in a nested scenario._@param element the element that is to be parsed into one or more {@code BeanDefinitions}_@param parserContext the object encapsulating the current state of the parsing process_@return the primary {@code BeanDefinition} (can be {@code null} as explained above);BeanDefinition parse(Element element, ParserContext parserContext)_;parse,the,specified,link,element,and,register,any,resulting,link,bean,definition,bean,definitions,with,the,link,org,springframework,beans,factory,support,bean,definition,registry,that,is,embedded,in,the,supplied,link,parser,context,p,implementations,should,return,the,primary,code,bean,definition,that,results,from,the,parse,phase,if,they,wish,to,be,used,nested,inside,for,example,a,code,property,tag,p,implementations,may,return,code,null,if,they,will,strong,not,strong,be,used,in,a,nested,scenario,param,element,the,element,that,is,to,be,parsed,into,one,or,more,code,bean,definitions,param,parser,context,the,object,encapsulating,the,current,state,of,the,parsing,process,return,the,primary,code,bean,definition,can,be,code,null,as,explained,above;bean,definition,parse,element,element,parser,context,parser,context
