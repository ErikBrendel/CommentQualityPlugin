# id;timestamp;commentText;codeText;commentWords;codeWords
CustomBooleanEditor -> public CustomBooleanEditor(boolean allowEmpty);1328020251;Create a new CustomBooleanEditor instance, with "true"/"on"/"yes"_and "false"/"off"/"no" as recognized String values._<p>The "allowEmpty" parameter states if an empty String should_be allowed for parsing, i.e. get interpreted as null value._Else, an IllegalArgumentException gets thrown in that case._@param allowEmpty if empty strings should be allowed;public CustomBooleanEditor(boolean allowEmpty) {_		this(null, null, allowEmpty)__	};create,a,new,custom,boolean,editor,instance,with,true,on,yes,and,false,off,no,as,recognized,string,values,p,the,allow,empty,parameter,states,if,an,empty,string,should,be,allowed,for,parsing,i,e,get,interpreted,as,null,value,else,an,illegal,argument,exception,gets,thrown,in,that,case,param,allow,empty,if,empty,strings,should,be,allowed;public,custom,boolean,editor,boolean,allow,empty,this,null,null,allow,empty
CustomBooleanEditor -> public CustomBooleanEditor(boolean allowEmpty);1356735495;Create a new CustomBooleanEditor instance, with "true"/"on"/"yes"_and "false"/"off"/"no" as recognized String values._<p>The "allowEmpty" parameter states if an empty String should_be allowed for parsing, i.e. get interpreted as null value._Else, an IllegalArgumentException gets thrown in that case._@param allowEmpty if empty strings should be allowed;public CustomBooleanEditor(boolean allowEmpty) {_		this(null, null, allowEmpty)__	};create,a,new,custom,boolean,editor,instance,with,true,on,yes,and,false,off,no,as,recognized,string,values,p,the,allow,empty,parameter,states,if,an,empty,string,should,be,allowed,for,parsing,i,e,get,interpreted,as,null,value,else,an,illegal,argument,exception,gets,thrown,in,that,case,param,allow,empty,if,empty,strings,should,be,allowed;public,custom,boolean,editor,boolean,allow,empty,this,null,null,allow,empty
CustomBooleanEditor -> public CustomBooleanEditor(boolean allowEmpty);1385501137;Create a new CustomBooleanEditor instance, with "true"/"on"/"yes"_and "false"/"off"/"no" as recognized String values._<p>The "allowEmpty" parameter states if an empty String should_be allowed for parsing, i.e. get interpreted as null value._Else, an IllegalArgumentException gets thrown in that case._@param allowEmpty if empty strings should be allowed;public CustomBooleanEditor(boolean allowEmpty) {_		this(null, null, allowEmpty)__	};create,a,new,custom,boolean,editor,instance,with,true,on,yes,and,false,off,no,as,recognized,string,values,p,the,allow,empty,parameter,states,if,an,empty,string,should,be,allowed,for,parsing,i,e,get,interpreted,as,null,value,else,an,illegal,argument,exception,gets,thrown,in,that,case,param,allow,empty,if,empty,strings,should,be,allowed;public,custom,boolean,editor,boolean,allow,empty,this,null,null,allow,empty
CustomBooleanEditor -> public CustomBooleanEditor(boolean allowEmpty);1431346819;Create a new CustomBooleanEditor instance, with "true"/"on"/"yes"_and "false"/"off"/"no" as recognized String values._<p>The "allowEmpty" parameter states if an empty String should_be allowed for parsing, i.e. get interpreted as null value._Else, an IllegalArgumentException gets thrown in that case._@param allowEmpty if empty strings should be allowed;public CustomBooleanEditor(boolean allowEmpty) {_		this(null, null, allowEmpty)__	};create,a,new,custom,boolean,editor,instance,with,true,on,yes,and,false,off,no,as,recognized,string,values,p,the,allow,empty,parameter,states,if,an,empty,string,should,be,allowed,for,parsing,i,e,get,interpreted,as,null,value,else,an,illegal,argument,exception,gets,thrown,in,that,case,param,allow,empty,if,empty,strings,should,be,allowed;public,custom,boolean,editor,boolean,allow,empty,this,null,null,allow,empty
CustomBooleanEditor -> public CustomBooleanEditor(boolean allowEmpty);1496837955;Create a new CustomBooleanEditor instance, with "true"/"on"/"yes"_and "false"/"off"/"no" as recognized String values._<p>The "allowEmpty" parameter states if an empty String should_be allowed for parsing, i.e. get interpreted as null value._Else, an IllegalArgumentException gets thrown in that case._@param allowEmpty if empty strings should be allowed;public CustomBooleanEditor(boolean allowEmpty) {_		this(null, null, allowEmpty)__	};create,a,new,custom,boolean,editor,instance,with,true,on,yes,and,false,off,no,as,recognized,string,values,p,the,allow,empty,parameter,states,if,an,empty,string,should,be,allowed,for,parsing,i,e,get,interpreted,as,null,value,else,an,illegal,argument,exception,gets,thrown,in,that,case,param,allow,empty,if,empty,strings,should,be,allowed;public,custom,boolean,editor,boolean,allow,empty,this,null,null,allow,empty
CustomBooleanEditor -> public CustomBooleanEditor(boolean allowEmpty);1498780456;Create a new CustomBooleanEditor instance, with "true"/"on"/"yes"_and "false"/"off"/"no" as recognized String values._<p>The "allowEmpty" parameter states if an empty String should_be allowed for parsing, i.e. get interpreted as null value._Else, an IllegalArgumentException gets thrown in that case._@param allowEmpty if empty strings should be allowed;public CustomBooleanEditor(boolean allowEmpty) {_		this(null, null, allowEmpty)__	};create,a,new,custom,boolean,editor,instance,with,true,on,yes,and,false,off,no,as,recognized,string,values,p,the,allow,empty,parameter,states,if,an,empty,string,should,be,allowed,for,parsing,i,e,get,interpreted,as,null,value,else,an,illegal,argument,exception,gets,thrown,in,that,case,param,allow,empty,if,empty,strings,should,be,allowed;public,custom,boolean,editor,boolean,allow,empty,this,null,null,allow,empty
CustomBooleanEditor -> public CustomBooleanEditor(boolean allowEmpty);1530174524;Create a new CustomBooleanEditor instance, with "true"/"on"/"yes"_and "false"/"off"/"no" as recognized String values._<p>The "allowEmpty" parameter states if an empty String should_be allowed for parsing, i.e. get interpreted as null value._Else, an IllegalArgumentException gets thrown in that case._@param allowEmpty if empty strings should be allowed;public CustomBooleanEditor(boolean allowEmpty) {_		this(null, null, allowEmpty)__	};create,a,new,custom,boolean,editor,instance,with,true,on,yes,and,false,off,no,as,recognized,string,values,p,the,allow,empty,parameter,states,if,an,empty,string,should,be,allowed,for,parsing,i,e,get,interpreted,as,null,value,else,an,illegal,argument,exception,gets,thrown,in,that,case,param,allow,empty,if,empty,strings,should,be,allowed;public,custom,boolean,editor,boolean,allow,empty,this,null,null,allow,empty
CustomBooleanEditor -> public CustomBooleanEditor(@Nullable String trueString, @Nullable String falseString, boolean allowEmpty);1496837955;Create a new CustomBooleanEditor instance,_with configurable String values for true and false._<p>The "allowEmpty" parameter states if an empty String should_be allowed for parsing, i.e. get interpreted as null value._Else, an IllegalArgumentException gets thrown in that case._@param trueString the String value that represents true:_for example, "true" (VALUE_TRUE), "on" (VALUE_ON),_"yes" (VALUE_YES) or some custom value_@param falseString the String value that represents false:_for example, "false" (VALUE_FALSE), "off" (VALUE_OFF),_"no" (VALUE_NO) or some custom value_@param allowEmpty if empty strings should be allowed_@see #VALUE_TRUE_@see #VALUE_FALSE_@see #VALUE_ON_@see #VALUE_OFF_@see #VALUE_YES_@see #VALUE_NO;public CustomBooleanEditor(@Nullable String trueString, @Nullable String falseString, boolean allowEmpty) {_		this.trueString = trueString__		this.falseString = falseString__		this.allowEmpty = allowEmpty__	};create,a,new,custom,boolean,editor,instance,with,configurable,string,values,for,true,and,false,p,the,allow,empty,parameter,states,if,an,empty,string,should,be,allowed,for,parsing,i,e,get,interpreted,as,null,value,else,an,illegal,argument,exception,gets,thrown,in,that,case,param,true,string,the,string,value,that,represents,true,for,example,true,on,yes,or,some,custom,value,param,false,string,the,string,value,that,represents,false,for,example,false,off,no,or,some,custom,value,param,allow,empty,if,empty,strings,should,be,allowed,see,see,see,see,see,see;public,custom,boolean,editor,nullable,string,true,string,nullable,string,false,string,boolean,allow,empty,this,true,string,true,string,this,false,string,false,string,this,allow,empty,allow,empty
CustomBooleanEditor -> public CustomBooleanEditor(@Nullable String trueString, @Nullable String falseString, boolean allowEmpty);1498780456;Create a new CustomBooleanEditor instance,_with configurable String values for true and false._<p>The "allowEmpty" parameter states if an empty String should_be allowed for parsing, i.e. get interpreted as null value._Else, an IllegalArgumentException gets thrown in that case._@param trueString the String value that represents true:_for example, "true" (VALUE_TRUE), "on" (VALUE_ON),_"yes" (VALUE_YES) or some custom value_@param falseString the String value that represents false:_for example, "false" (VALUE_FALSE), "off" (VALUE_OFF),_"no" (VALUE_NO) or some custom value_@param allowEmpty if empty strings should be allowed_@see #VALUE_TRUE_@see #VALUE_FALSE_@see #VALUE_ON_@see #VALUE_OFF_@see #VALUE_YES_@see #VALUE_NO;public CustomBooleanEditor(@Nullable String trueString, @Nullable String falseString, boolean allowEmpty) {_		this.trueString = trueString__		this.falseString = falseString__		this.allowEmpty = allowEmpty__	};create,a,new,custom,boolean,editor,instance,with,configurable,string,values,for,true,and,false,p,the,allow,empty,parameter,states,if,an,empty,string,should,be,allowed,for,parsing,i,e,get,interpreted,as,null,value,else,an,illegal,argument,exception,gets,thrown,in,that,case,param,true,string,the,string,value,that,represents,true,for,example,true,on,yes,or,some,custom,value,param,false,string,the,string,value,that,represents,false,for,example,false,off,no,or,some,custom,value,param,allow,empty,if,empty,strings,should,be,allowed,see,see,see,see,see,see;public,custom,boolean,editor,nullable,string,true,string,nullable,string,false,string,boolean,allow,empty,this,true,string,true,string,this,false,string,false,string,this,allow,empty,allow,empty
CustomBooleanEditor -> public CustomBooleanEditor(@Nullable String trueString, @Nullable String falseString, boolean allowEmpty);1530174524;Create a new CustomBooleanEditor instance,_with configurable String values for true and false._<p>The "allowEmpty" parameter states if an empty String should_be allowed for parsing, i.e. get interpreted as null value._Else, an IllegalArgumentException gets thrown in that case._@param trueString the String value that represents true:_for example, "true" (VALUE_TRUE), "on" (VALUE_ON),_"yes" (VALUE_YES) or some custom value_@param falseString the String value that represents false:_for example, "false" (VALUE_FALSE), "off" (VALUE_OFF),_"no" (VALUE_NO) or some custom value_@param allowEmpty if empty strings should be allowed_@see #VALUE_TRUE_@see #VALUE_FALSE_@see #VALUE_ON_@see #VALUE_OFF_@see #VALUE_YES_@see #VALUE_NO;public CustomBooleanEditor(@Nullable String trueString, @Nullable String falseString, boolean allowEmpty) {_		this.trueString = trueString__		this.falseString = falseString__		this.allowEmpty = allowEmpty__	};create,a,new,custom,boolean,editor,instance,with,configurable,string,values,for,true,and,false,p,the,allow,empty,parameter,states,if,an,empty,string,should,be,allowed,for,parsing,i,e,get,interpreted,as,null,value,else,an,illegal,argument,exception,gets,thrown,in,that,case,param,true,string,the,string,value,that,represents,true,for,example,true,on,yes,or,some,custom,value,param,false,string,the,string,value,that,represents,false,for,example,false,off,no,or,some,custom,value,param,allow,empty,if,empty,strings,should,be,allowed,see,see,see,see,see,see;public,custom,boolean,editor,nullable,string,true,string,nullable,string,false,string,boolean,allow,empty,this,true,string,true,string,this,false,string,false,string,this,allow,empty,allow,empty
CustomBooleanEditor -> public CustomBooleanEditor(String trueString, String falseString, boolean allowEmpty);1328020251;Create a new CustomBooleanEditor instance,_with configurable String values for true and false._<p>The "allowEmpty" parameter states if an empty String should_be allowed for parsing, i.e. get interpreted as null value._Else, an IllegalArgumentException gets thrown in that case._@param trueString the String value that represents true:_for example, "true" (VALUE_TRUE), "on" (VALUE_ON),_"yes" (VALUE_YES) or some custom value_@param falseString the String value that represents false:_for example, "false" (VALUE_FALSE), "off" (VALUE_OFF),_"no" (VALUE_NO) or some custom value_@param allowEmpty if empty strings should be allowed_@see #VALUE_TRUE_@see #VALUE_FALSE_@see #VALUE_ON_@see #VALUE_OFF_@see #VALUE_YES_@see #VALUE_NO;public CustomBooleanEditor(String trueString, String falseString, boolean allowEmpty) {_		this.trueString = trueString__		this.falseString = falseString__		this.allowEmpty = allowEmpty__	};create,a,new,custom,boolean,editor,instance,with,configurable,string,values,for,true,and,false,p,the,allow,empty,parameter,states,if,an,empty,string,should,be,allowed,for,parsing,i,e,get,interpreted,as,null,value,else,an,illegal,argument,exception,gets,thrown,in,that,case,param,true,string,the,string,value,that,represents,true,for,example,true,on,yes,or,some,custom,value,param,false,string,the,string,value,that,represents,false,for,example,false,off,no,or,some,custom,value,param,allow,empty,if,empty,strings,should,be,allowed,see,see,see,see,see,see;public,custom,boolean,editor,string,true,string,string,false,string,boolean,allow,empty,this,true,string,true,string,this,false,string,false,string,this,allow,empty,allow,empty
CustomBooleanEditor -> public CustomBooleanEditor(String trueString, String falseString, boolean allowEmpty);1356735495;Create a new CustomBooleanEditor instance,_with configurable String values for true and false._<p>The "allowEmpty" parameter states if an empty String should_be allowed for parsing, i.e. get interpreted as null value._Else, an IllegalArgumentException gets thrown in that case._@param trueString the String value that represents true:_for example, "true" (VALUE_TRUE), "on" (VALUE_ON),_"yes" (VALUE_YES) or some custom value_@param falseString the String value that represents false:_for example, "false" (VALUE_FALSE), "off" (VALUE_OFF),_"no" (VALUE_NO) or some custom value_@param allowEmpty if empty strings should be allowed_@see #VALUE_TRUE_@see #VALUE_FALSE_@see #VALUE_ON_@see #VALUE_OFF_@see #VALUE_YES_@see #VALUE_NO;public CustomBooleanEditor(String trueString, String falseString, boolean allowEmpty) {_		this.trueString = trueString__		this.falseString = falseString__		this.allowEmpty = allowEmpty__	};create,a,new,custom,boolean,editor,instance,with,configurable,string,values,for,true,and,false,p,the,allow,empty,parameter,states,if,an,empty,string,should,be,allowed,for,parsing,i,e,get,interpreted,as,null,value,else,an,illegal,argument,exception,gets,thrown,in,that,case,param,true,string,the,string,value,that,represents,true,for,example,true,on,yes,or,some,custom,value,param,false,string,the,string,value,that,represents,false,for,example,false,off,no,or,some,custom,value,param,allow,empty,if,empty,strings,should,be,allowed,see,see,see,see,see,see;public,custom,boolean,editor,string,true,string,string,false,string,boolean,allow,empty,this,true,string,true,string,this,false,string,false,string,this,allow,empty,allow,empty
CustomBooleanEditor -> public CustomBooleanEditor(String trueString, String falseString, boolean allowEmpty);1385501137;Create a new CustomBooleanEditor instance,_with configurable String values for true and false._<p>The "allowEmpty" parameter states if an empty String should_be allowed for parsing, i.e. get interpreted as null value._Else, an IllegalArgumentException gets thrown in that case._@param trueString the String value that represents true:_for example, "true" (VALUE_TRUE), "on" (VALUE_ON),_"yes" (VALUE_YES) or some custom value_@param falseString the String value that represents false:_for example, "false" (VALUE_FALSE), "off" (VALUE_OFF),_"no" (VALUE_NO) or some custom value_@param allowEmpty if empty strings should be allowed_@see #VALUE_TRUE_@see #VALUE_FALSE_@see #VALUE_ON_@see #VALUE_OFF_@see #VALUE_YES_@see #VALUE_NO;public CustomBooleanEditor(String trueString, String falseString, boolean allowEmpty) {_		this.trueString = trueString__		this.falseString = falseString__		this.allowEmpty = allowEmpty__	};create,a,new,custom,boolean,editor,instance,with,configurable,string,values,for,true,and,false,p,the,allow,empty,parameter,states,if,an,empty,string,should,be,allowed,for,parsing,i,e,get,interpreted,as,null,value,else,an,illegal,argument,exception,gets,thrown,in,that,case,param,true,string,the,string,value,that,represents,true,for,example,true,on,yes,or,some,custom,value,param,false,string,the,string,value,that,represents,false,for,example,false,off,no,or,some,custom,value,param,allow,empty,if,empty,strings,should,be,allowed,see,see,see,see,see,see;public,custom,boolean,editor,string,true,string,string,false,string,boolean,allow,empty,this,true,string,true,string,this,false,string,false,string,this,allow,empty,allow,empty
CustomBooleanEditor -> public CustomBooleanEditor(String trueString, String falseString, boolean allowEmpty);1431346819;Create a new CustomBooleanEditor instance,_with configurable String values for true and false._<p>The "allowEmpty" parameter states if an empty String should_be allowed for parsing, i.e. get interpreted as null value._Else, an IllegalArgumentException gets thrown in that case._@param trueString the String value that represents true:_for example, "true" (VALUE_TRUE), "on" (VALUE_ON),_"yes" (VALUE_YES) or some custom value_@param falseString the String value that represents false:_for example, "false" (VALUE_FALSE), "off" (VALUE_OFF),_"no" (VALUE_NO) or some custom value_@param allowEmpty if empty strings should be allowed_@see #VALUE_TRUE_@see #VALUE_FALSE_@see #VALUE_ON_@see #VALUE_OFF_@see #VALUE_YES_@see #VALUE_NO;public CustomBooleanEditor(String trueString, String falseString, boolean allowEmpty) {_		this.trueString = trueString__		this.falseString = falseString__		this.allowEmpty = allowEmpty__	};create,a,new,custom,boolean,editor,instance,with,configurable,string,values,for,true,and,false,p,the,allow,empty,parameter,states,if,an,empty,string,should,be,allowed,for,parsing,i,e,get,interpreted,as,null,value,else,an,illegal,argument,exception,gets,thrown,in,that,case,param,true,string,the,string,value,that,represents,true,for,example,true,on,yes,or,some,custom,value,param,false,string,the,string,value,that,represents,false,for,example,false,off,no,or,some,custom,value,param,allow,empty,if,empty,strings,should,be,allowed,see,see,see,see,see,see;public,custom,boolean,editor,string,true,string,string,false,string,boolean,allow,empty,this,true,string,true,string,this,false,string,false,string,this,allow,empty,allow,empty
