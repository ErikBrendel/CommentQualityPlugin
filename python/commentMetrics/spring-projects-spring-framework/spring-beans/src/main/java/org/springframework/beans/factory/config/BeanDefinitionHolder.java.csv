# id;timestamp;commentText;codeText;commentWords;codeWords
BeanDefinitionHolder -> public boolean matchesName(String candidateName);1328020251;Determine whether the given candidate name matches the bean name_or the aliases stored in this bean definition.;public boolean matchesName(String candidateName) {_		return (candidateName != null &&_				(candidateName.equals(this.beanName) || ObjectUtils.containsElement(this.aliases, candidateName)))__	};determine,whether,the,given,candidate,name,matches,the,bean,name,or,the,aliases,stored,in,this,bean,definition;public,boolean,matches,name,string,candidate,name,return,candidate,name,null,candidate,name,equals,this,bean,name,object,utils,contains,element,this,aliases,candidate,name
BeanDefinitionHolder -> public boolean matchesName(String candidateName);1356735495;Determine whether the given candidate name matches the bean name_or the aliases stored in this bean definition.;public boolean matchesName(String candidateName) {_		return (candidateName != null &&_				(candidateName.equals(this.beanName) || ObjectUtils.containsElement(this.aliases, candidateName)))__	};determine,whether,the,given,candidate,name,matches,the,bean,name,or,the,aliases,stored,in,this,bean,definition;public,boolean,matches,name,string,candidate,name,return,candidate,name,null,candidate,name,equals,this,bean,name,object,utils,contains,element,this,aliases,candidate,name
BeanDefinitionHolder -> public boolean matchesName(String candidateName);1357119239;Determine whether the given candidate name matches the bean name_or the aliases stored in this bean definition.;public boolean matchesName(String candidateName) {_		return (candidateName != null &&_				(candidateName.equals(this.beanName) || ObjectUtils.containsElement(this.aliases, candidateName)))__	};determine,whether,the,given,candidate,name,matches,the,bean,name,or,the,aliases,stored,in,this,bean,definition;public,boolean,matches,name,string,candidate,name,return,candidate,name,null,candidate,name,equals,this,bean,name,object,utils,contains,element,this,aliases,candidate,name
BeanDefinitionHolder -> public boolean matchesName(String candidateName);1368482696;Determine whether the given candidate name matches the bean name_or the aliases stored in this bean definition.;public boolean matchesName(String candidateName) {_		return (candidateName != null &&_				(candidateName.equals(this.beanName) || ObjectUtils.containsElement(this.aliases, candidateName)))__	};determine,whether,the,given,candidate,name,matches,the,bean,name,or,the,aliases,stored,in,this,bean,definition;public,boolean,matches,name,string,candidate,name,return,candidate,name,null,candidate,name,equals,this,bean,name,object,utils,contains,element,this,aliases,candidate,name
BeanDefinitionHolder -> public boolean matchesName(String candidateName);1383229570;Determine whether the given candidate name matches the bean name_or the aliases stored in this bean definition.;public boolean matchesName(String candidateName) {_		return (candidateName != null && (candidateName.equals(this.beanName) ||_				candidateName.equals(BeanFactoryUtils.transformedBeanName(this.beanName)) ||_				ObjectUtils.containsElement(this.aliases, candidateName)))__	};determine,whether,the,given,candidate,name,matches,the,bean,name,or,the,aliases,stored,in,this,bean,definition;public,boolean,matches,name,string,candidate,name,return,candidate,name,null,candidate,name,equals,this,bean,name,candidate,name,equals,bean,factory,utils,transformed,bean,name,this,bean,name,object,utils,contains,element,this,aliases,candidate,name
BeanDefinitionHolder -> public boolean matchesName(String candidateName);1495868221;Determine whether the given candidate name matches the bean name_or the aliases stored in this bean definition.;public boolean matchesName(String candidateName) {_		return (candidateName != null && (candidateName.equals(this.beanName) ||_				candidateName.equals(BeanFactoryUtils.transformedBeanName(this.beanName)) ||_				ObjectUtils.containsElement(this.aliases, candidateName)))__	};determine,whether,the,given,candidate,name,matches,the,bean,name,or,the,aliases,stored,in,this,bean,definition;public,boolean,matches,name,string,candidate,name,return,candidate,name,null,candidate,name,equals,this,bean,name,candidate,name,equals,bean,factory,utils,transformed,bean,name,this,bean,name,object,utils,contains,element,this,aliases,candidate,name
BeanDefinitionHolder -> public String getShortDescription();1328020251;Return a friendly, short description for the bean, stating name and aliases._@see #getBeanName()_@see #getAliases();public String getShortDescription() {_		StringBuilder sb = new StringBuilder()__		sb.append("Bean definition with name '").append(this.beanName).append("'")__		if (this.aliases != null) {_			sb.append(" and aliases [").append(StringUtils.arrayToCommaDelimitedString(this.aliases)).append("]")__		}_		return sb.toString()__	};return,a,friendly,short,description,for,the,bean,stating,name,and,aliases,see,get,bean,name,see,get,aliases;public,string,get,short,description,string,builder,sb,new,string,builder,sb,append,bean,definition,with,name,append,this,bean,name,append,if,this,aliases,null,sb,append,and,aliases,append,string,utils,array,to,comma,delimited,string,this,aliases,append,return,sb,to,string
BeanDefinitionHolder -> public String getShortDescription();1356735495;Return a friendly, short description for the bean, stating name and aliases._@see #getBeanName()_@see #getAliases();public String getShortDescription() {_		StringBuilder sb = new StringBuilder()__		sb.append("Bean definition with name '").append(this.beanName).append("'")__		if (this.aliases != null) {_			sb.append(" and aliases [").append(StringUtils.arrayToCommaDelimitedString(this.aliases)).append("]")__		}_		return sb.toString()__	};return,a,friendly,short,description,for,the,bean,stating,name,and,aliases,see,get,bean,name,see,get,aliases;public,string,get,short,description,string,builder,sb,new,string,builder,sb,append,bean,definition,with,name,append,this,bean,name,append,if,this,aliases,null,sb,append,and,aliases,append,string,utils,array,to,comma,delimited,string,this,aliases,append,return,sb,to,string
BeanDefinitionHolder -> public String getShortDescription();1357119239;Return a friendly, short description for the bean, stating name and aliases._@see #getBeanName()_@see #getAliases();public String getShortDescription() {_		StringBuilder sb = new StringBuilder()__		sb.append("Bean definition with name '").append(this.beanName).append("'")__		if (this.aliases != null) {_			sb.append(" and aliases [").append(StringUtils.arrayToCommaDelimitedString(this.aliases)).append("]")__		}_		return sb.toString()__	};return,a,friendly,short,description,for,the,bean,stating,name,and,aliases,see,get,bean,name,see,get,aliases;public,string,get,short,description,string,builder,sb,new,string,builder,sb,append,bean,definition,with,name,append,this,bean,name,append,if,this,aliases,null,sb,append,and,aliases,append,string,utils,array,to,comma,delimited,string,this,aliases,append,return,sb,to,string
BeanDefinitionHolder -> public String getShortDescription();1368482696;Return a friendly, short description for the bean, stating name and aliases._@see #getBeanName()_@see #getAliases();public String getShortDescription() {_		StringBuilder sb = new StringBuilder()__		sb.append("Bean definition with name '").append(this.beanName).append("'")__		if (this.aliases != null) {_			sb.append(" and aliases [").append(StringUtils.arrayToCommaDelimitedString(this.aliases)).append("]")__		}_		return sb.toString()__	};return,a,friendly,short,description,for,the,bean,stating,name,and,aliases,see,get,bean,name,see,get,aliases;public,string,get,short,description,string,builder,sb,new,string,builder,sb,append,bean,definition,with,name,append,this,bean,name,append,if,this,aliases,null,sb,append,and,aliases,append,string,utils,array,to,comma,delimited,string,this,aliases,append,return,sb,to,string
BeanDefinitionHolder -> public String getShortDescription();1383229570;Return a friendly, short description for the bean, stating name and aliases._@see #getBeanName()_@see #getAliases();public String getShortDescription() {_		StringBuilder sb = new StringBuilder()__		sb.append("Bean definition with name '").append(this.beanName).append("'")__		if (this.aliases != null) {_			sb.append(" and aliases [").append(StringUtils.arrayToCommaDelimitedString(this.aliases)).append("]")__		}_		return sb.toString()__	};return,a,friendly,short,description,for,the,bean,stating,name,and,aliases,see,get,bean,name,see,get,aliases;public,string,get,short,description,string,builder,sb,new,string,builder,sb,append,bean,definition,with,name,append,this,bean,name,append,if,this,aliases,null,sb,append,and,aliases,append,string,utils,array,to,comma,delimited,string,this,aliases,append,return,sb,to,string
BeanDefinitionHolder -> public String getShortDescription();1495868221;Return a friendly, short description for the bean, stating name and aliases._@see #getBeanName()_@see #getAliases();public String getShortDescription() {_		StringBuilder sb = new StringBuilder()__		sb.append("Bean definition with name '").append(this.beanName).append("'")__		if (this.aliases != null) {_			sb.append(" and aliases [").append(StringUtils.arrayToCommaDelimitedString(this.aliases)).append("]")__		}_		return sb.toString()__	};return,a,friendly,short,description,for,the,bean,stating,name,and,aliases,see,get,bean,name,see,get,aliases;public,string,get,short,description,string,builder,sb,new,string,builder,sb,append,bean,definition,with,name,append,this,bean,name,append,if,this,aliases,null,sb,append,and,aliases,append,string,utils,array,to,comma,delimited,string,this,aliases,append,return,sb,to,string
BeanDefinitionHolder -> public String getShortDescription();1496837955;Return a friendly, short description for the bean, stating name and aliases._@see #getBeanName()_@see #getAliases();public String getShortDescription() {_		StringBuilder sb = new StringBuilder()__		sb.append("Bean definition with name '").append(this.beanName).append("'")__		if (this.aliases != null) {_			sb.append(" and aliases [").append(StringUtils.arrayToCommaDelimitedString(this.aliases)).append("]")__		}_		return sb.toString()__	};return,a,friendly,short,description,for,the,bean,stating,name,and,aliases,see,get,bean,name,see,get,aliases;public,string,get,short,description,string,builder,sb,new,string,builder,sb,append,bean,definition,with,name,append,this,bean,name,append,if,this,aliases,null,sb,append,and,aliases,append,string,utils,array,to,comma,delimited,string,this,aliases,append,return,sb,to,string
BeanDefinitionHolder -> public String getShortDescription();1498780456;Return a friendly, short description for the bean, stating name and aliases._@see #getBeanName()_@see #getAliases();public String getShortDescription() {_		StringBuilder sb = new StringBuilder()__		sb.append("Bean definition with name '").append(this.beanName).append("'")__		if (this.aliases != null) {_			sb.append(" and aliases [").append(StringUtils.arrayToCommaDelimitedString(this.aliases)).append("]")__		}_		return sb.toString()__	};return,a,friendly,short,description,for,the,bean,stating,name,and,aliases,see,get,bean,name,see,get,aliases;public,string,get,short,description,string,builder,sb,new,string,builder,sb,append,bean,definition,with,name,append,this,bean,name,append,if,this,aliases,null,sb,append,and,aliases,append,string,utils,array,to,comma,delimited,string,this,aliases,append,return,sb,to,string
BeanDefinitionHolder -> public String getShortDescription();1502974979;Return a friendly, short description for the bean, stating name and aliases._@see #getBeanName()_@see #getAliases();public String getShortDescription() {_		StringBuilder sb = new StringBuilder()__		sb.append("Bean definition with name '").append(this.beanName).append("'")__		if (this.aliases != null) {_			sb.append(" and aliases [").append(StringUtils.arrayToCommaDelimitedString(this.aliases)).append("]")__		}_		return sb.toString()__	};return,a,friendly,short,description,for,the,bean,stating,name,and,aliases,see,get,bean,name,see,get,aliases;public,string,get,short,description,string,builder,sb,new,string,builder,sb,append,bean,definition,with,name,append,this,bean,name,append,if,this,aliases,null,sb,append,and,aliases,append,string,utils,array,to,comma,delimited,string,this,aliases,append,return,sb,to,string
BeanDefinitionHolder -> public String[] getAliases();1328020251;Return the alias names for the bean, as specified directly for the bean definition._@return the array of alias names, or <code>null</code> if none;public String[] getAliases() {_		return this.aliases__	};return,the,alias,names,for,the,bean,as,specified,directly,for,the,bean,definition,return,the,array,of,alias,names,or,code,null,code,if,none;public,string,get,aliases,return,this,aliases
BeanDefinitionHolder -> public String[] getAliases();1356735495;Return the alias names for the bean, as specified directly for the bean definition._@return the array of alias names, or {@code null} if none;public String[] getAliases() {_		return this.aliases__	};return,the,alias,names,for,the,bean,as,specified,directly,for,the,bean,definition,return,the,array,of,alias,names,or,code,null,if,none;public,string,get,aliases,return,this,aliases
BeanDefinitionHolder -> public String[] getAliases();1357119239;Return the alias names for the bean, as specified directly for the bean definition._@return the array of alias names, or {@code null} if none;public String[] getAliases() {_		return this.aliases__	};return,the,alias,names,for,the,bean,as,specified,directly,for,the,bean,definition,return,the,array,of,alias,names,or,code,null,if,none;public,string,get,aliases,return,this,aliases
BeanDefinitionHolder -> public String[] getAliases();1368482696;Return the alias names for the bean, as specified directly for the bean definition._@return the array of alias names, or {@code null} if none;public String[] getAliases() {_		return this.aliases__	};return,the,alias,names,for,the,bean,as,specified,directly,for,the,bean,definition,return,the,array,of,alias,names,or,code,null,if,none;public,string,get,aliases,return,this,aliases
BeanDefinitionHolder -> public String[] getAliases();1383229570;Return the alias names for the bean, as specified directly for the bean definition._@return the array of alias names, or {@code null} if none;public String[] getAliases() {_		return this.aliases__	};return,the,alias,names,for,the,bean,as,specified,directly,for,the,bean,definition,return,the,array,of,alias,names,or,code,null,if,none;public,string,get,aliases,return,this,aliases
BeanDefinitionHolder -> @Override 	public Object getSource();1356735495;Expose the bean definition's source object._@see BeanDefinition#getSource();@Override_	public Object getSource() {_		return this.beanDefinition.getSource()__	};expose,the,bean,definition,s,source,object,see,bean,definition,get,source;override,public,object,get,source,return,this,bean,definition,get,source
BeanDefinitionHolder -> @Override 	public Object getSource();1368482696;Expose the bean definition's source object._@see BeanDefinition#getSource();@Override_	public Object getSource() {_		return this.beanDefinition.getSource()__	};expose,the,bean,definition,s,source,object,see,bean,definition,get,source;override,public,object,get,source,return,this,bean,definition,get,source
BeanDefinitionHolder -> @Override 	public Object getSource();1383229570;Expose the bean definition's source object._@see BeanDefinition#getSource();@Override_	public Object getSource() {_		return this.beanDefinition.getSource()__	};expose,the,bean,definition,s,source,object,see,bean,definition,get,source;override,public,object,get,source,return,this,bean,definition,get,source
BeanDefinitionHolder -> @Override 	public Object getSource();1495868221;Expose the bean definition's source object._@see BeanDefinition#getSource();@Override_	public Object getSource() {_		return this.beanDefinition.getSource()__	};expose,the,bean,definition,s,source,object,see,bean,definition,get,source;override,public,object,get,source,return,this,bean,definition,get,source
BeanDefinitionHolder -> @Override 	public Object getSource();1496837955;Expose the bean definition's source object._@see BeanDefinition#getSource();@Override_	public Object getSource() {_		return this.beanDefinition.getSource()__	};expose,the,bean,definition,s,source,object,see,bean,definition,get,source;override,public,object,get,source,return,this,bean,definition,get,source
BeanDefinitionHolder -> @Override 	public Object getSource();1498780456;Expose the bean definition's source object._@see BeanDefinition#getSource();@Override_	public Object getSource() {_		return this.beanDefinition.getSource()__	};expose,the,bean,definition,s,source,object,see,bean,definition,get,source;override,public,object,get,source,return,this,bean,definition,get,source
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName);1328020251;Create a new BeanDefinitionHolder._@param beanDefinition the BeanDefinition to wrap_@param beanName the name of the bean, as specified for the bean definition;public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName) {_		this(beanDefinition, beanName, null)__	};create,a,new,bean,definition,holder,param,bean,definition,the,bean,definition,to,wrap,param,bean,name,the,name,of,the,bean,as,specified,for,the,bean,definition;public,bean,definition,holder,bean,definition,bean,definition,string,bean,name,this,bean,definition,bean,name,null
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName);1356735495;Create a new BeanDefinitionHolder._@param beanDefinition the BeanDefinition to wrap_@param beanName the name of the bean, as specified for the bean definition;public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName) {_		this(beanDefinition, beanName, null)__	};create,a,new,bean,definition,holder,param,bean,definition,the,bean,definition,to,wrap,param,bean,name,the,name,of,the,bean,as,specified,for,the,bean,definition;public,bean,definition,holder,bean,definition,bean,definition,string,bean,name,this,bean,definition,bean,name,null
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName);1357119239;Create a new BeanDefinitionHolder._@param beanDefinition the BeanDefinition to wrap_@param beanName the name of the bean, as specified for the bean definition;public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName) {_		this(beanDefinition, beanName, null)__	};create,a,new,bean,definition,holder,param,bean,definition,the,bean,definition,to,wrap,param,bean,name,the,name,of,the,bean,as,specified,for,the,bean,definition;public,bean,definition,holder,bean,definition,bean,definition,string,bean,name,this,bean,definition,bean,name,null
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName);1368482696;Create a new BeanDefinitionHolder._@param beanDefinition the BeanDefinition to wrap_@param beanName the name of the bean, as specified for the bean definition;public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName) {_		this(beanDefinition, beanName, null)__	};create,a,new,bean,definition,holder,param,bean,definition,the,bean,definition,to,wrap,param,bean,name,the,name,of,the,bean,as,specified,for,the,bean,definition;public,bean,definition,holder,bean,definition,bean,definition,string,bean,name,this,bean,definition,bean,name,null
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName);1383229570;Create a new BeanDefinitionHolder._@param beanDefinition the BeanDefinition to wrap_@param beanName the name of the bean, as specified for the bean definition;public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName) {_		this(beanDefinition, beanName, null)__	};create,a,new,bean,definition,holder,param,bean,definition,the,bean,definition,to,wrap,param,bean,name,the,name,of,the,bean,as,specified,for,the,bean,definition;public,bean,definition,holder,bean,definition,bean,definition,string,bean,name,this,bean,definition,bean,name,null
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName);1495868221;Create a new BeanDefinitionHolder._@param beanDefinition the BeanDefinition to wrap_@param beanName the name of the bean, as specified for the bean definition;public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName) {_		this(beanDefinition, beanName, null)__	};create,a,new,bean,definition,holder,param,bean,definition,the,bean,definition,to,wrap,param,bean,name,the,name,of,the,bean,as,specified,for,the,bean,definition;public,bean,definition,holder,bean,definition,bean,definition,string,bean,name,this,bean,definition,bean,name,null
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName);1496837955;Create a new BeanDefinitionHolder._@param beanDefinition the BeanDefinition to wrap_@param beanName the name of the bean, as specified for the bean definition;public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName) {_		this(beanDefinition, beanName, null)__	};create,a,new,bean,definition,holder,param,bean,definition,the,bean,definition,to,wrap,param,bean,name,the,name,of,the,bean,as,specified,for,the,bean,definition;public,bean,definition,holder,bean,definition,bean,definition,string,bean,name,this,bean,definition,bean,name,null
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName);1498780456;Create a new BeanDefinitionHolder._@param beanDefinition the BeanDefinition to wrap_@param beanName the name of the bean, as specified for the bean definition;public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName) {_		this(beanDefinition, beanName, null)__	};create,a,new,bean,definition,holder,param,bean,definition,the,bean,definition,to,wrap,param,bean,name,the,name,of,the,bean,as,specified,for,the,bean,definition;public,bean,definition,holder,bean,definition,bean,definition,string,bean,name,this,bean,definition,bean,name,null
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName);1502974979;Create a new BeanDefinitionHolder._@param beanDefinition the BeanDefinition to wrap_@param beanName the name of the bean, as specified for the bean definition;public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName) {_		this(beanDefinition, beanName, null)__	};create,a,new,bean,definition,holder,param,bean,definition,the,bean,definition,to,wrap,param,bean,name,the,name,of,the,bean,as,specified,for,the,bean,definition;public,bean,definition,holder,bean,definition,bean,definition,string,bean,name,this,bean,definition,bean,name,null
BeanDefinitionHolder -> public boolean matchesName(@Nullable String candidateName);1496837955;Determine whether the given candidate name matches the bean name_or the aliases stored in this bean definition.;public boolean matchesName(@Nullable String candidateName) {_		return (candidateName != null && (candidateName.equals(this.beanName) ||_				candidateName.equals(BeanFactoryUtils.transformedBeanName(this.beanName)) ||_				ObjectUtils.containsElement(this.aliases, candidateName)))__	};determine,whether,the,given,candidate,name,matches,the,bean,name,or,the,aliases,stored,in,this,bean,definition;public,boolean,matches,name,nullable,string,candidate,name,return,candidate,name,null,candidate,name,equals,this,bean,name,candidate,name,equals,bean,factory,utils,transformed,bean,name,this,bean,name,object,utils,contains,element,this,aliases,candidate,name
BeanDefinitionHolder -> public boolean matchesName(@Nullable String candidateName);1498780456;Determine whether the given candidate name matches the bean name_or the aliases stored in this bean definition.;public boolean matchesName(@Nullable String candidateName) {_		return (candidateName != null && (candidateName.equals(this.beanName) ||_				candidateName.equals(BeanFactoryUtils.transformedBeanName(this.beanName)) ||_				ObjectUtils.containsElement(this.aliases, candidateName)))__	};determine,whether,the,given,candidate,name,matches,the,bean,name,or,the,aliases,stored,in,this,bean,definition;public,boolean,matches,name,nullable,string,candidate,name,return,candidate,name,null,candidate,name,equals,this,bean,name,candidate,name,equals,bean,factory,utils,transformed,bean,name,this,bean,name,object,utils,contains,element,this,aliases,candidate,name
BeanDefinitionHolder -> public boolean matchesName(@Nullable String candidateName);1502974979;Determine whether the given candidate name matches the bean name_or the aliases stored in this bean definition.;public boolean matchesName(@Nullable String candidateName) {_		return (candidateName != null && (candidateName.equals(this.beanName) ||_				candidateName.equals(BeanFactoryUtils.transformedBeanName(this.beanName)) ||_				ObjectUtils.containsElement(this.aliases, candidateName)))__	};determine,whether,the,given,candidate,name,matches,the,bean,name,or,the,aliases,stored,in,this,bean,definition;public,boolean,matches,name,nullable,string,candidate,name,return,candidate,name,null,candidate,name,equals,this,bean,name,candidate,name,equals,bean,factory,utils,transformed,bean,name,this,bean,name,object,utils,contains,element,this,aliases,candidate,name
BeanDefinitionHolder -> public Object getSource();1328020251;Expose the bean definition's source object._@see BeanDefinition#getSource();public Object getSource() {_		return this.beanDefinition.getSource()__	};expose,the,bean,definition,s,source,object,see,bean,definition,get,source;public,object,get,source,return,this,bean,definition,get,source
BeanDefinitionHolder -> public Object getSource();1357119239;Expose the bean definition's source object._@see BeanDefinition#getSource();public Object getSource() {_		return this.beanDefinition.getSource()__	};expose,the,bean,definition,s,source,object,see,bean,definition,get,source;public,object,get,source,return,this,bean,definition,get,source
BeanDefinitionHolder -> public BeanDefinition getBeanDefinition();1328020251;Return the wrapped BeanDefinition.;public BeanDefinition getBeanDefinition() {_		return this.beanDefinition__	};return,the,wrapped,bean,definition;public,bean,definition,get,bean,definition,return,this,bean,definition
BeanDefinitionHolder -> public BeanDefinition getBeanDefinition();1356735495;Return the wrapped BeanDefinition.;public BeanDefinition getBeanDefinition() {_		return this.beanDefinition__	};return,the,wrapped,bean,definition;public,bean,definition,get,bean,definition,return,this,bean,definition
BeanDefinitionHolder -> public BeanDefinition getBeanDefinition();1357119239;Return the wrapped BeanDefinition.;public BeanDefinition getBeanDefinition() {_		return this.beanDefinition__	};return,the,wrapped,bean,definition;public,bean,definition,get,bean,definition,return,this,bean,definition
BeanDefinitionHolder -> public BeanDefinition getBeanDefinition();1368482696;Return the wrapped BeanDefinition.;public BeanDefinition getBeanDefinition() {_		return this.beanDefinition__	};return,the,wrapped,bean,definition;public,bean,definition,get,bean,definition,return,this,bean,definition
BeanDefinitionHolder -> public BeanDefinition getBeanDefinition();1383229570;Return the wrapped BeanDefinition.;public BeanDefinition getBeanDefinition() {_		return this.beanDefinition__	};return,the,wrapped,bean,definition;public,bean,definition,get,bean,definition,return,this,bean,definition
BeanDefinitionHolder -> public BeanDefinition getBeanDefinition();1495868221;Return the wrapped BeanDefinition.;public BeanDefinition getBeanDefinition() {_		return this.beanDefinition__	};return,the,wrapped,bean,definition;public,bean,definition,get,bean,definition,return,this,bean,definition
BeanDefinitionHolder -> public BeanDefinition getBeanDefinition();1496837955;Return the wrapped BeanDefinition.;public BeanDefinition getBeanDefinition() {_		return this.beanDefinition__	};return,the,wrapped,bean,definition;public,bean,definition,get,bean,definition,return,this,bean,definition
BeanDefinitionHolder -> public BeanDefinition getBeanDefinition();1498780456;Return the wrapped BeanDefinition.;public BeanDefinition getBeanDefinition() {_		return this.beanDefinition__	};return,the,wrapped,bean,definition;public,bean,definition,get,bean,definition,return,this,bean,definition
BeanDefinitionHolder -> public BeanDefinition getBeanDefinition();1502974979;Return the wrapped BeanDefinition.;public BeanDefinition getBeanDefinition() {_		return this.beanDefinition__	};return,the,wrapped,bean,definition;public,bean,definition,get,bean,definition,return,this,bean,definition
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinitionHolder beanDefinitionHolder);1328020251;Copy constructor: Create a new BeanDefinitionHolder with the_same contents as the given BeanDefinitionHolder instance._<p>Note: The wrapped BeanDefinition reference is taken as-is__it is <code>not</code> deeply copied._@param beanDefinitionHolder the BeanDefinitionHolder to copy;public BeanDefinitionHolder(BeanDefinitionHolder beanDefinitionHolder) {_		Assert.notNull(beanDefinitionHolder, "BeanDefinitionHolder must not be null")__		this.beanDefinition = beanDefinitionHolder.getBeanDefinition()__		this.beanName = beanDefinitionHolder.getBeanName()__		this.aliases = beanDefinitionHolder.getAliases()__	};copy,constructor,create,a,new,bean,definition,holder,with,the,same,contents,as,the,given,bean,definition,holder,instance,p,note,the,wrapped,bean,definition,reference,is,taken,as,is,it,is,code,not,code,deeply,copied,param,bean,definition,holder,the,bean,definition,holder,to,copy;public,bean,definition,holder,bean,definition,holder,bean,definition,holder,assert,not,null,bean,definition,holder,bean,definition,holder,must,not,be,null,this,bean,definition,bean,definition,holder,get,bean,definition,this,bean,name,bean,definition,holder,get,bean,name,this,aliases,bean,definition,holder,get,aliases
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinitionHolder beanDefinitionHolder);1356735495;Copy constructor: Create a new BeanDefinitionHolder with the_same contents as the given BeanDefinitionHolder instance._<p>Note: The wrapped BeanDefinition reference is taken as-is__it is {@code not} deeply copied._@param beanDefinitionHolder the BeanDefinitionHolder to copy;public BeanDefinitionHolder(BeanDefinitionHolder beanDefinitionHolder) {_		Assert.notNull(beanDefinitionHolder, "BeanDefinitionHolder must not be null")__		this.beanDefinition = beanDefinitionHolder.getBeanDefinition()__		this.beanName = beanDefinitionHolder.getBeanName()__		this.aliases = beanDefinitionHolder.getAliases()__	};copy,constructor,create,a,new,bean,definition,holder,with,the,same,contents,as,the,given,bean,definition,holder,instance,p,note,the,wrapped,bean,definition,reference,is,taken,as,is,it,is,code,not,deeply,copied,param,bean,definition,holder,the,bean,definition,holder,to,copy;public,bean,definition,holder,bean,definition,holder,bean,definition,holder,assert,not,null,bean,definition,holder,bean,definition,holder,must,not,be,null,this,bean,definition,bean,definition,holder,get,bean,definition,this,bean,name,bean,definition,holder,get,bean,name,this,aliases,bean,definition,holder,get,aliases
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinitionHolder beanDefinitionHolder);1357119239;Copy constructor: Create a new BeanDefinitionHolder with the_same contents as the given BeanDefinitionHolder instance._<p>Note: The wrapped BeanDefinition reference is taken as-is__it is {@code not} deeply copied._@param beanDefinitionHolder the BeanDefinitionHolder to copy;public BeanDefinitionHolder(BeanDefinitionHolder beanDefinitionHolder) {_		Assert.notNull(beanDefinitionHolder, "BeanDefinitionHolder must not be null")__		this.beanDefinition = beanDefinitionHolder.getBeanDefinition()__		this.beanName = beanDefinitionHolder.getBeanName()__		this.aliases = beanDefinitionHolder.getAliases()__	};copy,constructor,create,a,new,bean,definition,holder,with,the,same,contents,as,the,given,bean,definition,holder,instance,p,note,the,wrapped,bean,definition,reference,is,taken,as,is,it,is,code,not,deeply,copied,param,bean,definition,holder,the,bean,definition,holder,to,copy;public,bean,definition,holder,bean,definition,holder,bean,definition,holder,assert,not,null,bean,definition,holder,bean,definition,holder,must,not,be,null,this,bean,definition,bean,definition,holder,get,bean,definition,this,bean,name,bean,definition,holder,get,bean,name,this,aliases,bean,definition,holder,get,aliases
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinitionHolder beanDefinitionHolder);1368482696;Copy constructor: Create a new BeanDefinitionHolder with the_same contents as the given BeanDefinitionHolder instance._<p>Note: The wrapped BeanDefinition reference is taken as-is__it is {@code not} deeply copied._@param beanDefinitionHolder the BeanDefinitionHolder to copy;public BeanDefinitionHolder(BeanDefinitionHolder beanDefinitionHolder) {_		Assert.notNull(beanDefinitionHolder, "BeanDefinitionHolder must not be null")__		this.beanDefinition = beanDefinitionHolder.getBeanDefinition()__		this.beanName = beanDefinitionHolder.getBeanName()__		this.aliases = beanDefinitionHolder.getAliases()__	};copy,constructor,create,a,new,bean,definition,holder,with,the,same,contents,as,the,given,bean,definition,holder,instance,p,note,the,wrapped,bean,definition,reference,is,taken,as,is,it,is,code,not,deeply,copied,param,bean,definition,holder,the,bean,definition,holder,to,copy;public,bean,definition,holder,bean,definition,holder,bean,definition,holder,assert,not,null,bean,definition,holder,bean,definition,holder,must,not,be,null,this,bean,definition,bean,definition,holder,get,bean,definition,this,bean,name,bean,definition,holder,get,bean,name,this,aliases,bean,definition,holder,get,aliases
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinitionHolder beanDefinitionHolder);1383229570;Copy constructor: Create a new BeanDefinitionHolder with the_same contents as the given BeanDefinitionHolder instance._<p>Note: The wrapped BeanDefinition reference is taken as-is__it is {@code not} deeply copied._@param beanDefinitionHolder the BeanDefinitionHolder to copy;public BeanDefinitionHolder(BeanDefinitionHolder beanDefinitionHolder) {_		Assert.notNull(beanDefinitionHolder, "BeanDefinitionHolder must not be null")__		this.beanDefinition = beanDefinitionHolder.getBeanDefinition()__		this.beanName = beanDefinitionHolder.getBeanName()__		this.aliases = beanDefinitionHolder.getAliases()__	};copy,constructor,create,a,new,bean,definition,holder,with,the,same,contents,as,the,given,bean,definition,holder,instance,p,note,the,wrapped,bean,definition,reference,is,taken,as,is,it,is,code,not,deeply,copied,param,bean,definition,holder,the,bean,definition,holder,to,copy;public,bean,definition,holder,bean,definition,holder,bean,definition,holder,assert,not,null,bean,definition,holder,bean,definition,holder,must,not,be,null,this,bean,definition,bean,definition,holder,get,bean,definition,this,bean,name,bean,definition,holder,get,bean,name,this,aliases,bean,definition,holder,get,aliases
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinitionHolder beanDefinitionHolder);1495868221;Copy constructor: Create a new BeanDefinitionHolder with the_same contents as the given BeanDefinitionHolder instance._<p>Note: The wrapped BeanDefinition reference is taken as-is__it is {@code not} deeply copied._@param beanDefinitionHolder the BeanDefinitionHolder to copy;public BeanDefinitionHolder(BeanDefinitionHolder beanDefinitionHolder) {_		Assert.notNull(beanDefinitionHolder, "BeanDefinitionHolder must not be null")__		this.beanDefinition = beanDefinitionHolder.getBeanDefinition()__		this.beanName = beanDefinitionHolder.getBeanName()__		this.aliases = beanDefinitionHolder.getAliases()__	};copy,constructor,create,a,new,bean,definition,holder,with,the,same,contents,as,the,given,bean,definition,holder,instance,p,note,the,wrapped,bean,definition,reference,is,taken,as,is,it,is,code,not,deeply,copied,param,bean,definition,holder,the,bean,definition,holder,to,copy;public,bean,definition,holder,bean,definition,holder,bean,definition,holder,assert,not,null,bean,definition,holder,bean,definition,holder,must,not,be,null,this,bean,definition,bean,definition,holder,get,bean,definition,this,bean,name,bean,definition,holder,get,bean,name,this,aliases,bean,definition,holder,get,aliases
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinitionHolder beanDefinitionHolder);1496837955;Copy constructor: Create a new BeanDefinitionHolder with the_same contents as the given BeanDefinitionHolder instance._<p>Note: The wrapped BeanDefinition reference is taken as-is__it is {@code not} deeply copied._@param beanDefinitionHolder the BeanDefinitionHolder to copy;public BeanDefinitionHolder(BeanDefinitionHolder beanDefinitionHolder) {_		Assert.notNull(beanDefinitionHolder, "BeanDefinitionHolder must not be null")__		this.beanDefinition = beanDefinitionHolder.getBeanDefinition()__		this.beanName = beanDefinitionHolder.getBeanName()__		this.aliases = beanDefinitionHolder.getAliases()__	};copy,constructor,create,a,new,bean,definition,holder,with,the,same,contents,as,the,given,bean,definition,holder,instance,p,note,the,wrapped,bean,definition,reference,is,taken,as,is,it,is,code,not,deeply,copied,param,bean,definition,holder,the,bean,definition,holder,to,copy;public,bean,definition,holder,bean,definition,holder,bean,definition,holder,assert,not,null,bean,definition,holder,bean,definition,holder,must,not,be,null,this,bean,definition,bean,definition,holder,get,bean,definition,this,bean,name,bean,definition,holder,get,bean,name,this,aliases,bean,definition,holder,get,aliases
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinitionHolder beanDefinitionHolder);1498780456;Copy constructor: Create a new BeanDefinitionHolder with the_same contents as the given BeanDefinitionHolder instance._<p>Note: The wrapped BeanDefinition reference is taken as-is__it is {@code not} deeply copied._@param beanDefinitionHolder the BeanDefinitionHolder to copy;public BeanDefinitionHolder(BeanDefinitionHolder beanDefinitionHolder) {_		Assert.notNull(beanDefinitionHolder, "BeanDefinitionHolder must not be null")__		this.beanDefinition = beanDefinitionHolder.getBeanDefinition()__		this.beanName = beanDefinitionHolder.getBeanName()__		this.aliases = beanDefinitionHolder.getAliases()__	};copy,constructor,create,a,new,bean,definition,holder,with,the,same,contents,as,the,given,bean,definition,holder,instance,p,note,the,wrapped,bean,definition,reference,is,taken,as,is,it,is,code,not,deeply,copied,param,bean,definition,holder,the,bean,definition,holder,to,copy;public,bean,definition,holder,bean,definition,holder,bean,definition,holder,assert,not,null,bean,definition,holder,bean,definition,holder,must,not,be,null,this,bean,definition,bean,definition,holder,get,bean,definition,this,bean,name,bean,definition,holder,get,bean,name,this,aliases,bean,definition,holder,get,aliases
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinitionHolder beanDefinitionHolder);1502974979;Copy constructor: Create a new BeanDefinitionHolder with the_same contents as the given BeanDefinitionHolder instance._<p>Note: The wrapped BeanDefinition reference is taken as-is__it is {@code not} deeply copied._@param beanDefinitionHolder the BeanDefinitionHolder to copy;public BeanDefinitionHolder(BeanDefinitionHolder beanDefinitionHolder) {_		Assert.notNull(beanDefinitionHolder, "BeanDefinitionHolder must not be null")__		this.beanDefinition = beanDefinitionHolder.getBeanDefinition()__		this.beanName = beanDefinitionHolder.getBeanName()__		this.aliases = beanDefinitionHolder.getAliases()__	};copy,constructor,create,a,new,bean,definition,holder,with,the,same,contents,as,the,given,bean,definition,holder,instance,p,note,the,wrapped,bean,definition,reference,is,taken,as,is,it,is,code,not,deeply,copied,param,bean,definition,holder,the,bean,definition,holder,to,copy;public,bean,definition,holder,bean,definition,holder,bean,definition,holder,assert,not,null,bean,definition,holder,bean,definition,holder,must,not,be,null,this,bean,definition,bean,definition,holder,get,bean,definition,this,bean,name,bean,definition,holder,get,bean,name,this,aliases,bean,definition,holder,get,aliases
BeanDefinitionHolder -> @Override 	public String toString();1328020251;This implementation returns the long description. Can be overridden_to return the short description or any kind of custom description instead._@see #getLongDescription()_@see #getShortDescription();@Override_	public String toString() {_		return getLongDescription()__	};this,implementation,returns,the,long,description,can,be,overridden,to,return,the,short,description,or,any,kind,of,custom,description,instead,see,get,long,description,see,get,short,description;override,public,string,to,string,return,get,long,description
BeanDefinitionHolder -> @Override 	public String toString();1356735495;This implementation returns the long description. Can be overridden_to return the short description or any kind of custom description instead._@see #getLongDescription()_@see #getShortDescription();@Override_	public String toString() {_		return getLongDescription()__	};this,implementation,returns,the,long,description,can,be,overridden,to,return,the,short,description,or,any,kind,of,custom,description,instead,see,get,long,description,see,get,short,description;override,public,string,to,string,return,get,long,description
BeanDefinitionHolder -> @Override 	public String toString();1357119239;This implementation returns the long description. Can be overridden_to return the short description or any kind of custom description instead._@see #getLongDescription()_@see #getShortDescription();@Override_	public String toString() {_		return getLongDescription()__	};this,implementation,returns,the,long,description,can,be,overridden,to,return,the,short,description,or,any,kind,of,custom,description,instead,see,get,long,description,see,get,short,description;override,public,string,to,string,return,get,long,description
BeanDefinitionHolder -> @Override 	public String toString();1368482696;This implementation returns the long description. Can be overridden_to return the short description or any kind of custom description instead._@see #getLongDescription()_@see #getShortDescription();@Override_	public String toString() {_		return getLongDescription()__	};this,implementation,returns,the,long,description,can,be,overridden,to,return,the,short,description,or,any,kind,of,custom,description,instead,see,get,long,description,see,get,short,description;override,public,string,to,string,return,get,long,description
BeanDefinitionHolder -> @Override 	public String toString();1383229570;This implementation returns the long description. Can be overridden_to return the short description or any kind of custom description instead._@see #getLongDescription()_@see #getShortDescription();@Override_	public String toString() {_		return getLongDescription()__	};this,implementation,returns,the,long,description,can,be,overridden,to,return,the,short,description,or,any,kind,of,custom,description,instead,see,get,long,description,see,get,short,description;override,public,string,to,string,return,get,long,description
BeanDefinitionHolder -> @Override 	public String toString();1495868221;This implementation returns the long description. Can be overridden_to return the short description or any kind of custom description instead._@see #getLongDescription()_@see #getShortDescription();@Override_	public String toString() {_		return getLongDescription()__	};this,implementation,returns,the,long,description,can,be,overridden,to,return,the,short,description,or,any,kind,of,custom,description,instead,see,get,long,description,see,get,short,description;override,public,string,to,string,return,get,long,description
BeanDefinitionHolder -> @Override 	public String toString();1496837955;This implementation returns the long description. Can be overridden_to return the short description or any kind of custom description instead._@see #getLongDescription()_@see #getShortDescription();@Override_	public String toString() {_		return getLongDescription()__	};this,implementation,returns,the,long,description,can,be,overridden,to,return,the,short,description,or,any,kind,of,custom,description,instead,see,get,long,description,see,get,short,description;override,public,string,to,string,return,get,long,description
BeanDefinitionHolder -> @Override 	public String toString();1498780456;This implementation returns the long description. Can be overridden_to return the short description or any kind of custom description instead._@see #getLongDescription()_@see #getShortDescription();@Override_	public String toString() {_		return getLongDescription()__	};this,implementation,returns,the,long,description,can,be,overridden,to,return,the,short,description,or,any,kind,of,custom,description,instead,see,get,long,description,see,get,short,description;override,public,string,to,string,return,get,long,description
BeanDefinitionHolder -> @Override 	public String toString();1502974979;This implementation returns the long description. Can be overridden_to return the short description or any kind of custom description instead._@see #getLongDescription()_@see #getShortDescription();@Override_	public String toString() {_		return getLongDescription()__	};this,implementation,returns,the,long,description,can,be,overridden,to,return,the,short,description,or,any,kind,of,custom,description,instead,see,get,long,description,see,get,short,description;override,public,string,to,string,return,get,long,description
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName, String[] aliases);1328020251;Create a new BeanDefinitionHolder._@param beanDefinition the BeanDefinition to wrap_@param beanName the name of the bean, as specified for the bean definition_@param aliases alias names for the bean, or <code>null</code> if none;public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName, String[] aliases) {_		Assert.notNull(beanDefinition, "BeanDefinition must not be null")__		Assert.notNull(beanName, "Bean name must not be null")__		this.beanDefinition = beanDefinition__		this.beanName = beanName__		this.aliases = aliases__	};create,a,new,bean,definition,holder,param,bean,definition,the,bean,definition,to,wrap,param,bean,name,the,name,of,the,bean,as,specified,for,the,bean,definition,param,aliases,alias,names,for,the,bean,or,code,null,code,if,none;public,bean,definition,holder,bean,definition,bean,definition,string,bean,name,string,aliases,assert,not,null,bean,definition,bean,definition,must,not,be,null,assert,not,null,bean,name,bean,name,must,not,be,null,this,bean,definition,bean,definition,this,bean,name,bean,name,this,aliases,aliases
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName, String[] aliases);1356735495;Create a new BeanDefinitionHolder._@param beanDefinition the BeanDefinition to wrap_@param beanName the name of the bean, as specified for the bean definition_@param aliases alias names for the bean, or {@code null} if none;public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName, String[] aliases) {_		Assert.notNull(beanDefinition, "BeanDefinition must not be null")__		Assert.notNull(beanName, "Bean name must not be null")__		this.beanDefinition = beanDefinition__		this.beanName = beanName__		this.aliases = aliases__	};create,a,new,bean,definition,holder,param,bean,definition,the,bean,definition,to,wrap,param,bean,name,the,name,of,the,bean,as,specified,for,the,bean,definition,param,aliases,alias,names,for,the,bean,or,code,null,if,none;public,bean,definition,holder,bean,definition,bean,definition,string,bean,name,string,aliases,assert,not,null,bean,definition,bean,definition,must,not,be,null,assert,not,null,bean,name,bean,name,must,not,be,null,this,bean,definition,bean,definition,this,bean,name,bean,name,this,aliases,aliases
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName, String[] aliases);1357119239;Create a new BeanDefinitionHolder._@param beanDefinition the BeanDefinition to wrap_@param beanName the name of the bean, as specified for the bean definition_@param aliases alias names for the bean, or {@code null} if none;public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName, String[] aliases) {_		Assert.notNull(beanDefinition, "BeanDefinition must not be null")__		Assert.notNull(beanName, "Bean name must not be null")__		this.beanDefinition = beanDefinition__		this.beanName = beanName__		this.aliases = aliases__	};create,a,new,bean,definition,holder,param,bean,definition,the,bean,definition,to,wrap,param,bean,name,the,name,of,the,bean,as,specified,for,the,bean,definition,param,aliases,alias,names,for,the,bean,or,code,null,if,none;public,bean,definition,holder,bean,definition,bean,definition,string,bean,name,string,aliases,assert,not,null,bean,definition,bean,definition,must,not,be,null,assert,not,null,bean,name,bean,name,must,not,be,null,this,bean,definition,bean,definition,this,bean,name,bean,name,this,aliases,aliases
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName, String[] aliases);1368482696;Create a new BeanDefinitionHolder._@param beanDefinition the BeanDefinition to wrap_@param beanName the name of the bean, as specified for the bean definition_@param aliases alias names for the bean, or {@code null} if none;public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName, String[] aliases) {_		Assert.notNull(beanDefinition, "BeanDefinition must not be null")__		Assert.notNull(beanName, "Bean name must not be null")__		this.beanDefinition = beanDefinition__		this.beanName = beanName__		this.aliases = aliases__	};create,a,new,bean,definition,holder,param,bean,definition,the,bean,definition,to,wrap,param,bean,name,the,name,of,the,bean,as,specified,for,the,bean,definition,param,aliases,alias,names,for,the,bean,or,code,null,if,none;public,bean,definition,holder,bean,definition,bean,definition,string,bean,name,string,aliases,assert,not,null,bean,definition,bean,definition,must,not,be,null,assert,not,null,bean,name,bean,name,must,not,be,null,this,bean,definition,bean,definition,this,bean,name,bean,name,this,aliases,aliases
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName, String[] aliases);1383229570;Create a new BeanDefinitionHolder._@param beanDefinition the BeanDefinition to wrap_@param beanName the name of the bean, as specified for the bean definition_@param aliases alias names for the bean, or {@code null} if none;public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName, String[] aliases) {_		Assert.notNull(beanDefinition, "BeanDefinition must not be null")__		Assert.notNull(beanName, "Bean name must not be null")__		this.beanDefinition = beanDefinition__		this.beanName = beanName__		this.aliases = aliases__	};create,a,new,bean,definition,holder,param,bean,definition,the,bean,definition,to,wrap,param,bean,name,the,name,of,the,bean,as,specified,for,the,bean,definition,param,aliases,alias,names,for,the,bean,or,code,null,if,none;public,bean,definition,holder,bean,definition,bean,definition,string,bean,name,string,aliases,assert,not,null,bean,definition,bean,definition,must,not,be,null,assert,not,null,bean,name,bean,name,must,not,be,null,this,bean,definition,bean,definition,this,bean,name,bean,name,this,aliases,aliases
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName, @Nullable String[] aliases);1495868221;Create a new BeanDefinitionHolder._@param beanDefinition the BeanDefinition to wrap_@param beanName the name of the bean, as specified for the bean definition_@param aliases alias names for the bean, or {@code null} if none;public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName, @Nullable String[] aliases) {_		Assert.notNull(beanDefinition, "BeanDefinition must not be null")__		Assert.notNull(beanName, "Bean name must not be null")__		this.beanDefinition = beanDefinition__		this.beanName = beanName__		this.aliases = aliases__	};create,a,new,bean,definition,holder,param,bean,definition,the,bean,definition,to,wrap,param,bean,name,the,name,of,the,bean,as,specified,for,the,bean,definition,param,aliases,alias,names,for,the,bean,or,code,null,if,none;public,bean,definition,holder,bean,definition,bean,definition,string,bean,name,nullable,string,aliases,assert,not,null,bean,definition,bean,definition,must,not,be,null,assert,not,null,bean,name,bean,name,must,not,be,null,this,bean,definition,bean,definition,this,bean,name,bean,name,this,aliases,aliases
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName, @Nullable String[] aliases);1496837955;Create a new BeanDefinitionHolder._@param beanDefinition the BeanDefinition to wrap_@param beanName the name of the bean, as specified for the bean definition_@param aliases alias names for the bean, or {@code null} if none;public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName, @Nullable String[] aliases) {_		Assert.notNull(beanDefinition, "BeanDefinition must not be null")__		Assert.notNull(beanName, "Bean name must not be null")__		this.beanDefinition = beanDefinition__		this.beanName = beanName__		this.aliases = aliases__	};create,a,new,bean,definition,holder,param,bean,definition,the,bean,definition,to,wrap,param,bean,name,the,name,of,the,bean,as,specified,for,the,bean,definition,param,aliases,alias,names,for,the,bean,or,code,null,if,none;public,bean,definition,holder,bean,definition,bean,definition,string,bean,name,nullable,string,aliases,assert,not,null,bean,definition,bean,definition,must,not,be,null,assert,not,null,bean,name,bean,name,must,not,be,null,this,bean,definition,bean,definition,this,bean,name,bean,name,this,aliases,aliases
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName, @Nullable String[] aliases);1498780456;Create a new BeanDefinitionHolder._@param beanDefinition the BeanDefinition to wrap_@param beanName the name of the bean, as specified for the bean definition_@param aliases alias names for the bean, or {@code null} if none;public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName, @Nullable String[] aliases) {_		Assert.notNull(beanDefinition, "BeanDefinition must not be null")__		Assert.notNull(beanName, "Bean name must not be null")__		this.beanDefinition = beanDefinition__		this.beanName = beanName__		this.aliases = aliases__	};create,a,new,bean,definition,holder,param,bean,definition,the,bean,definition,to,wrap,param,bean,name,the,name,of,the,bean,as,specified,for,the,bean,definition,param,aliases,alias,names,for,the,bean,or,code,null,if,none;public,bean,definition,holder,bean,definition,bean,definition,string,bean,name,nullable,string,aliases,assert,not,null,bean,definition,bean,definition,must,not,be,null,assert,not,null,bean,name,bean,name,must,not,be,null,this,bean,definition,bean,definition,this,bean,name,bean,name,this,aliases,aliases
BeanDefinitionHolder -> public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName, @Nullable String[] aliases);1502974979;Create a new BeanDefinitionHolder._@param beanDefinition the BeanDefinition to wrap_@param beanName the name of the bean, as specified for the bean definition_@param aliases alias names for the bean, or {@code null} if none;public BeanDefinitionHolder(BeanDefinition beanDefinition, String beanName, @Nullable String[] aliases) {_		Assert.notNull(beanDefinition, "BeanDefinition must not be null")__		Assert.notNull(beanName, "Bean name must not be null")__		this.beanDefinition = beanDefinition__		this.beanName = beanName__		this.aliases = aliases__	};create,a,new,bean,definition,holder,param,bean,definition,the,bean,definition,to,wrap,param,bean,name,the,name,of,the,bean,as,specified,for,the,bean,definition,param,aliases,alias,names,for,the,bean,or,code,null,if,none;public,bean,definition,holder,bean,definition,bean,definition,string,bean,name,nullable,string,aliases,assert,not,null,bean,definition,bean,definition,must,not,be,null,assert,not,null,bean,name,bean,name,must,not,be,null,this,bean,definition,bean,definition,this,bean,name,bean,name,this,aliases,aliases
BeanDefinitionHolder -> public String getLongDescription();1328020251;Return a long description for the bean, including name and aliases_as well as a description of the contained {@link BeanDefinition}._@see #getShortDescription()_@see #getBeanDefinition();public String getLongDescription() {_		StringBuilder sb = new StringBuilder(getShortDescription())__		sb.append(": ").append(this.beanDefinition)__		return sb.toString()__	};return,a,long,description,for,the,bean,including,name,and,aliases,as,well,as,a,description,of,the,contained,link,bean,definition,see,get,short,description,see,get,bean,definition;public,string,get,long,description,string,builder,sb,new,string,builder,get,short,description,sb,append,append,this,bean,definition,return,sb,to,string
BeanDefinitionHolder -> public String getLongDescription();1356735495;Return a long description for the bean, including name and aliases_as well as a description of the contained {@link BeanDefinition}._@see #getShortDescription()_@see #getBeanDefinition();public String getLongDescription() {_		StringBuilder sb = new StringBuilder(getShortDescription())__		sb.append(": ").append(this.beanDefinition)__		return sb.toString()__	};return,a,long,description,for,the,bean,including,name,and,aliases,as,well,as,a,description,of,the,contained,link,bean,definition,see,get,short,description,see,get,bean,definition;public,string,get,long,description,string,builder,sb,new,string,builder,get,short,description,sb,append,append,this,bean,definition,return,sb,to,string
BeanDefinitionHolder -> public String getLongDescription();1357119239;Return a long description for the bean, including name and aliases_as well as a description of the contained {@link BeanDefinition}._@see #getShortDescription()_@see #getBeanDefinition();public String getLongDescription() {_		StringBuilder sb = new StringBuilder(getShortDescription())__		sb.append(": ").append(this.beanDefinition)__		return sb.toString()__	};return,a,long,description,for,the,bean,including,name,and,aliases,as,well,as,a,description,of,the,contained,link,bean,definition,see,get,short,description,see,get,bean,definition;public,string,get,long,description,string,builder,sb,new,string,builder,get,short,description,sb,append,append,this,bean,definition,return,sb,to,string
BeanDefinitionHolder -> public String getLongDescription();1368482696;Return a long description for the bean, including name and aliases_as well as a description of the contained {@link BeanDefinition}._@see #getShortDescription()_@see #getBeanDefinition();public String getLongDescription() {_		StringBuilder sb = new StringBuilder(getShortDescription())__		sb.append(": ").append(this.beanDefinition)__		return sb.toString()__	};return,a,long,description,for,the,bean,including,name,and,aliases,as,well,as,a,description,of,the,contained,link,bean,definition,see,get,short,description,see,get,bean,definition;public,string,get,long,description,string,builder,sb,new,string,builder,get,short,description,sb,append,append,this,bean,definition,return,sb,to,string
BeanDefinitionHolder -> public String getLongDescription();1383229570;Return a long description for the bean, including name and aliases_as well as a description of the contained {@link BeanDefinition}._@see #getShortDescription()_@see #getBeanDefinition();public String getLongDescription() {_		StringBuilder sb = new StringBuilder(getShortDescription())__		sb.append(": ").append(this.beanDefinition)__		return sb.toString()__	};return,a,long,description,for,the,bean,including,name,and,aliases,as,well,as,a,description,of,the,contained,link,bean,definition,see,get,short,description,see,get,bean,definition;public,string,get,long,description,string,builder,sb,new,string,builder,get,short,description,sb,append,append,this,bean,definition,return,sb,to,string
BeanDefinitionHolder -> public String getLongDescription();1495868221;Return a long description for the bean, including name and aliases_as well as a description of the contained {@link BeanDefinition}._@see #getShortDescription()_@see #getBeanDefinition();public String getLongDescription() {_		StringBuilder sb = new StringBuilder(getShortDescription())__		sb.append(": ").append(this.beanDefinition)__		return sb.toString()__	};return,a,long,description,for,the,bean,including,name,and,aliases,as,well,as,a,description,of,the,contained,link,bean,definition,see,get,short,description,see,get,bean,definition;public,string,get,long,description,string,builder,sb,new,string,builder,get,short,description,sb,append,append,this,bean,definition,return,sb,to,string
BeanDefinitionHolder -> public String getLongDescription();1496837955;Return a long description for the bean, including name and aliases_as well as a description of the contained {@link BeanDefinition}._@see #getShortDescription()_@see #getBeanDefinition();public String getLongDescription() {_		StringBuilder sb = new StringBuilder(getShortDescription())__		sb.append(": ").append(this.beanDefinition)__		return sb.toString()__	};return,a,long,description,for,the,bean,including,name,and,aliases,as,well,as,a,description,of,the,contained,link,bean,definition,see,get,short,description,see,get,bean,definition;public,string,get,long,description,string,builder,sb,new,string,builder,get,short,description,sb,append,append,this,bean,definition,return,sb,to,string
BeanDefinitionHolder -> public String getLongDescription();1498780456;Return a long description for the bean, including name and aliases_as well as a description of the contained {@link BeanDefinition}._@see #getShortDescription()_@see #getBeanDefinition();public String getLongDescription() {_		StringBuilder sb = new StringBuilder(getShortDescription())__		sb.append(": ").append(this.beanDefinition)__		return sb.toString()__	};return,a,long,description,for,the,bean,including,name,and,aliases,as,well,as,a,description,of,the,contained,link,bean,definition,see,get,short,description,see,get,bean,definition;public,string,get,long,description,string,builder,sb,new,string,builder,get,short,description,sb,append,append,this,bean,definition,return,sb,to,string
BeanDefinitionHolder -> public String getLongDescription();1502974979;Return a long description for the bean, including name and aliases_as well as a description of the contained {@link BeanDefinition}._@see #getShortDescription()_@see #getBeanDefinition();public String getLongDescription() {_		StringBuilder sb = new StringBuilder(getShortDescription())__		sb.append(": ").append(this.beanDefinition)__		return sb.toString()__	};return,a,long,description,for,the,bean,including,name,and,aliases,as,well,as,a,description,of,the,contained,link,bean,definition,see,get,short,description,see,get,bean,definition;public,string,get,long,description,string,builder,sb,new,string,builder,get,short,description,sb,append,append,this,bean,definition,return,sb,to,string
BeanDefinitionHolder -> @Nullable 	public String[] getAliases();1495868221;Return the alias names for the bean, as specified directly for the bean definition._@return the array of alias names, or {@code null} if none;@Nullable_	public String[] getAliases() {_		return this.aliases__	};return,the,alias,names,for,the,bean,as,specified,directly,for,the,bean,definition,return,the,array,of,alias,names,or,code,null,if,none;nullable,public,string,get,aliases,return,this,aliases
BeanDefinitionHolder -> @Nullable 	public String[] getAliases();1496837955;Return the alias names for the bean, as specified directly for the bean definition._@return the array of alias names, or {@code null} if none;@Nullable_	public String[] getAliases() {_		return this.aliases__	};return,the,alias,names,for,the,bean,as,specified,directly,for,the,bean,definition,return,the,array,of,alias,names,or,code,null,if,none;nullable,public,string,get,aliases,return,this,aliases
BeanDefinitionHolder -> @Nullable 	public String[] getAliases();1498780456;Return the alias names for the bean, as specified directly for the bean definition._@return the array of alias names, or {@code null} if none;@Nullable_	public String[] getAliases() {_		return this.aliases__	};return,the,alias,names,for,the,bean,as,specified,directly,for,the,bean,definition,return,the,array,of,alias,names,or,code,null,if,none;nullable,public,string,get,aliases,return,this,aliases
BeanDefinitionHolder -> @Nullable 	public String[] getAliases();1502974979;Return the alias names for the bean, as specified directly for the bean definition._@return the array of alias names, or {@code null} if none;@Nullable_	public String[] getAliases() {_		return this.aliases__	};return,the,alias,names,for,the,bean,as,specified,directly,for,the,bean,definition,return,the,array,of,alias,names,or,code,null,if,none;nullable,public,string,get,aliases,return,this,aliases
BeanDefinitionHolder -> public String getBeanName();1328020251;Return the primary name of the bean, as specified for the bean definition.;public String getBeanName() {_		return this.beanName__	};return,the,primary,name,of,the,bean,as,specified,for,the,bean,definition;public,string,get,bean,name,return,this,bean,name
BeanDefinitionHolder -> public String getBeanName();1356735495;Return the primary name of the bean, as specified for the bean definition.;public String getBeanName() {_		return this.beanName__	};return,the,primary,name,of,the,bean,as,specified,for,the,bean,definition;public,string,get,bean,name,return,this,bean,name
BeanDefinitionHolder -> public String getBeanName();1357119239;Return the primary name of the bean, as specified for the bean definition.;public String getBeanName() {_		return this.beanName__	};return,the,primary,name,of,the,bean,as,specified,for,the,bean,definition;public,string,get,bean,name,return,this,bean,name
BeanDefinitionHolder -> public String getBeanName();1368482696;Return the primary name of the bean, as specified for the bean definition.;public String getBeanName() {_		return this.beanName__	};return,the,primary,name,of,the,bean,as,specified,for,the,bean,definition;public,string,get,bean,name,return,this,bean,name
BeanDefinitionHolder -> public String getBeanName();1383229570;Return the primary name of the bean, as specified for the bean definition.;public String getBeanName() {_		return this.beanName__	};return,the,primary,name,of,the,bean,as,specified,for,the,bean,definition;public,string,get,bean,name,return,this,bean,name
BeanDefinitionHolder -> public String getBeanName();1495868221;Return the primary name of the bean, as specified for the bean definition.;public String getBeanName() {_		return this.beanName__	};return,the,primary,name,of,the,bean,as,specified,for,the,bean,definition;public,string,get,bean,name,return,this,bean,name
BeanDefinitionHolder -> public String getBeanName();1496837955;Return the primary name of the bean, as specified for the bean definition.;public String getBeanName() {_		return this.beanName__	};return,the,primary,name,of,the,bean,as,specified,for,the,bean,definition;public,string,get,bean,name,return,this,bean,name
BeanDefinitionHolder -> public String getBeanName();1498780456;Return the primary name of the bean, as specified for the bean definition.;public String getBeanName() {_		return this.beanName__	};return,the,primary,name,of,the,bean,as,specified,for,the,bean,definition;public,string,get,bean,name,return,this,bean,name
BeanDefinitionHolder -> public String getBeanName();1502974979;Return the primary name of the bean, as specified for the bean definition.;public String getBeanName() {_		return this.beanName__	};return,the,primary,name,of,the,bean,as,specified,for,the,bean,definition;public,string,get,bean,name,return,this,bean,name
