# id;timestamp;commentText;codeText;commentWords;codeWords
ResourceEditorRegistrar -> @Override 	public void registerCustomEditors(PropertyEditorRegistry registry);1356735495;Populate the given {@code registry} with the following resource editors:_ResourceEditor, InputStreamEditor, InputSourceEditor, FileEditor, URLEditor,_URIEditor, ClassEditor, ClassArrayEditor._<p>If this registrar has been configured with a {@link ResourcePatternResolver},_a ResourceArrayPropertyEditor will be registered as well._@see org.springframework.core.io.ResourceEditor_@see org.springframework.beans.propertyeditors.InputStreamEditor_@see org.springframework.beans.propertyeditors.InputSourceEditor_@see org.springframework.beans.propertyeditors.FileEditor_@see org.springframework.beans.propertyeditors.URLEditor_@see org.springframework.beans.propertyeditors.URIEditor_@see org.springframework.beans.propertyeditors.ClassEditor_@see org.springframework.beans.propertyeditors.ClassArrayEditor_@see org.springframework.core.io.support.ResourceArrayPropertyEditor;@Override_	public void registerCustomEditors(PropertyEditorRegistry registry) {_		ResourceEditor baseEditor = new ResourceEditor(this.resourceLoader, this.propertyResolver)__		doRegisterEditor(registry, Resource.class, baseEditor)__		doRegisterEditor(registry, ContextResource.class, baseEditor)__		doRegisterEditor(registry, InputStream.class, new InputStreamEditor(baseEditor))__		doRegisterEditor(registry, InputSource.class, new InputSourceEditor(baseEditor))__		doRegisterEditor(registry, File.class, new FileEditor(baseEditor))__		doRegisterEditor(registry, URL.class, new URLEditor(baseEditor))___		ClassLoader classLoader = this.resourceLoader.getClassLoader()__		doRegisterEditor(registry, URI.class, new URIEditor(classLoader))__		doRegisterEditor(registry, Class.class, new ClassEditor(classLoader))__		doRegisterEditor(registry, Class[].class, new ClassArrayEditor(classLoader))___		if (this.resourceLoader instanceof ResourcePatternResolver) {_			doRegisterEditor(registry, Resource[].class,_					new ResourceArrayPropertyEditor((ResourcePatternResolver) this.resourceLoader, this.propertyResolver))__		}_	};populate,the,given,code,registry,with,the,following,resource,editors,resource,editor,input,stream,editor,input,source,editor,file,editor,urleditor,urieditor,class,editor,class,array,editor,p,if,this,registrar,has,been,configured,with,a,link,resource,pattern,resolver,a,resource,array,property,editor,will,be,registered,as,well,see,org,springframework,core,io,resource,editor,see,org,springframework,beans,propertyeditors,input,stream,editor,see,org,springframework,beans,propertyeditors,input,source,editor,see,org,springframework,beans,propertyeditors,file,editor,see,org,springframework,beans,propertyeditors,urleditor,see,org,springframework,beans,propertyeditors,urieditor,see,org,springframework,beans,propertyeditors,class,editor,see,org,springframework,beans,propertyeditors,class,array,editor,see,org,springframework,core,io,support,resource,array,property,editor;override,public,void,register,custom,editors,property,editor,registry,registry,resource,editor,base,editor,new,resource,editor,this,resource,loader,this,property,resolver,do,register,editor,registry,resource,class,base,editor,do,register,editor,registry,context,resource,class,base,editor,do,register,editor,registry,input,stream,class,new,input,stream,editor,base,editor,do,register,editor,registry,input,source,class,new,input,source,editor,base,editor,do,register,editor,registry,file,class,new,file,editor,base,editor,do,register,editor,registry,url,class,new,urleditor,base,editor,class,loader,class,loader,this,resource,loader,get,class,loader,do,register,editor,registry,uri,class,new,urieditor,class,loader,do,register,editor,registry,class,class,new,class,editor,class,loader,do,register,editor,registry,class,class,new,class,array,editor,class,loader,if,this,resource,loader,instanceof,resource,pattern,resolver,do,register,editor,registry,resource,class,new,resource,array,property,editor,resource,pattern,resolver,this,resource,loader,this,property,resolver
ResourceEditorRegistrar -> @Override 	public void registerCustomEditors(PropertyEditorRegistry registry);1368482696;Populate the given {@code registry} with the following resource editors:_ResourceEditor, InputStreamEditor, InputSourceEditor, FileEditor, URLEditor,_URIEditor, ClassEditor, ClassArrayEditor._<p>If this registrar has been configured with a {@link ResourcePatternResolver},_a ResourceArrayPropertyEditor will be registered as well._@see org.springframework.core.io.ResourceEditor_@see org.springframework.beans.propertyeditors.InputStreamEditor_@see org.springframework.beans.propertyeditors.InputSourceEditor_@see org.springframework.beans.propertyeditors.FileEditor_@see org.springframework.beans.propertyeditors.URLEditor_@see org.springframework.beans.propertyeditors.URIEditor_@see org.springframework.beans.propertyeditors.ClassEditor_@see org.springframework.beans.propertyeditors.ClassArrayEditor_@see org.springframework.core.io.support.ResourceArrayPropertyEditor;@Override_	public void registerCustomEditors(PropertyEditorRegistry registry) {_		ResourceEditor baseEditor = new ResourceEditor(this.resourceLoader, this.propertyResolver)__		doRegisterEditor(registry, Resource.class, baseEditor)__		doRegisterEditor(registry, ContextResource.class, baseEditor)__		doRegisterEditor(registry, InputStream.class, new InputStreamEditor(baseEditor))__		doRegisterEditor(registry, InputSource.class, new InputSourceEditor(baseEditor))__		doRegisterEditor(registry, File.class, new FileEditor(baseEditor))__		doRegisterEditor(registry, URL.class, new URLEditor(baseEditor))___		ClassLoader classLoader = this.resourceLoader.getClassLoader()__		doRegisterEditor(registry, URI.class, new URIEditor(classLoader))__		doRegisterEditor(registry, Class.class, new ClassEditor(classLoader))__		doRegisterEditor(registry, Class[].class, new ClassArrayEditor(classLoader))___		if (this.resourceLoader instanceof ResourcePatternResolver) {_			doRegisterEditor(registry, Resource[].class,_					new ResourceArrayPropertyEditor((ResourcePatternResolver) this.resourceLoader, this.propertyResolver))__		}_	};populate,the,given,code,registry,with,the,following,resource,editors,resource,editor,input,stream,editor,input,source,editor,file,editor,urleditor,urieditor,class,editor,class,array,editor,p,if,this,registrar,has,been,configured,with,a,link,resource,pattern,resolver,a,resource,array,property,editor,will,be,registered,as,well,see,org,springframework,core,io,resource,editor,see,org,springframework,beans,propertyeditors,input,stream,editor,see,org,springframework,beans,propertyeditors,input,source,editor,see,org,springframework,beans,propertyeditors,file,editor,see,org,springframework,beans,propertyeditors,urleditor,see,org,springframework,beans,propertyeditors,urieditor,see,org,springframework,beans,propertyeditors,class,editor,see,org,springframework,beans,propertyeditors,class,array,editor,see,org,springframework,core,io,support,resource,array,property,editor;override,public,void,register,custom,editors,property,editor,registry,registry,resource,editor,base,editor,new,resource,editor,this,resource,loader,this,property,resolver,do,register,editor,registry,resource,class,base,editor,do,register,editor,registry,context,resource,class,base,editor,do,register,editor,registry,input,stream,class,new,input,stream,editor,base,editor,do,register,editor,registry,input,source,class,new,input,source,editor,base,editor,do,register,editor,registry,file,class,new,file,editor,base,editor,do,register,editor,registry,url,class,new,urleditor,base,editor,class,loader,class,loader,this,resource,loader,get,class,loader,do,register,editor,registry,uri,class,new,urieditor,class,loader,do,register,editor,registry,class,class,new,class,editor,class,loader,do,register,editor,registry,class,class,new,class,array,editor,class,loader,if,this,resource,loader,instanceof,resource,pattern,resolver,do,register,editor,registry,resource,class,new,resource,array,property,editor,resource,pattern,resolver,this,resource,loader,this,property,resolver
ResourceEditorRegistrar -> @Override 	public void registerCustomEditors(PropertyEditorRegistry registry);1368654092;Populate the given {@code registry} with the following resource editors:_ResourceEditor, InputStreamEditor, InputSourceEditor, FileEditor, URLEditor,_URIEditor, ClassEditor, ClassArrayEditor._<p>If this registrar has been configured with a {@link ResourcePatternResolver},_a ResourceArrayPropertyEditor will be registered as well._@see org.springframework.core.io.ResourceEditor_@see org.springframework.beans.propertyeditors.InputStreamEditor_@see org.springframework.beans.propertyeditors.InputSourceEditor_@see org.springframework.beans.propertyeditors.FileEditor_@see org.springframework.beans.propertyeditors.URLEditor_@see org.springframework.beans.propertyeditors.URIEditor_@see org.springframework.beans.propertyeditors.ClassEditor_@see org.springframework.beans.propertyeditors.ClassArrayEditor_@see org.springframework.core.io.support.ResourceArrayPropertyEditor;@Override_	public void registerCustomEditors(PropertyEditorRegistry registry) {_		ResourceEditor baseEditor = new ResourceEditor(this.resourceLoader, this.propertyResolver)__		doRegisterEditor(registry, Resource.class, baseEditor)__		doRegisterEditor(registry, ContextResource.class, baseEditor)__		doRegisterEditor(registry, InputStream.class, new InputStreamEditor(baseEditor))__		doRegisterEditor(registry, InputSource.class, new InputSourceEditor(baseEditor))__		doRegisterEditor(registry, File.class, new FileEditor(baseEditor))__		doRegisterEditor(registry, URL.class, new URLEditor(baseEditor))___		ClassLoader classLoader = this.resourceLoader.getClassLoader()__		doRegisterEditor(registry, URI.class, new URIEditor(classLoader))__		doRegisterEditor(registry, Class.class, new ClassEditor(classLoader))__		doRegisterEditor(registry, Class[].class, new ClassArrayEditor(classLoader))___		if (this.resourceLoader instanceof ResourcePatternResolver) {_			doRegisterEditor(registry, Resource[].class,_					new ResourceArrayPropertyEditor((ResourcePatternResolver) this.resourceLoader, this.propertyResolver))__		}_	};populate,the,given,code,registry,with,the,following,resource,editors,resource,editor,input,stream,editor,input,source,editor,file,editor,urleditor,urieditor,class,editor,class,array,editor,p,if,this,registrar,has,been,configured,with,a,link,resource,pattern,resolver,a,resource,array,property,editor,will,be,registered,as,well,see,org,springframework,core,io,resource,editor,see,org,springframework,beans,propertyeditors,input,stream,editor,see,org,springframework,beans,propertyeditors,input,source,editor,see,org,springframework,beans,propertyeditors,file,editor,see,org,springframework,beans,propertyeditors,urleditor,see,org,springframework,beans,propertyeditors,urieditor,see,org,springframework,beans,propertyeditors,class,editor,see,org,springframework,beans,propertyeditors,class,array,editor,see,org,springframework,core,io,support,resource,array,property,editor;override,public,void,register,custom,editors,property,editor,registry,registry,resource,editor,base,editor,new,resource,editor,this,resource,loader,this,property,resolver,do,register,editor,registry,resource,class,base,editor,do,register,editor,registry,context,resource,class,base,editor,do,register,editor,registry,input,stream,class,new,input,stream,editor,base,editor,do,register,editor,registry,input,source,class,new,input,source,editor,base,editor,do,register,editor,registry,file,class,new,file,editor,base,editor,do,register,editor,registry,url,class,new,urleditor,base,editor,class,loader,class,loader,this,resource,loader,get,class,loader,do,register,editor,registry,uri,class,new,urieditor,class,loader,do,register,editor,registry,class,class,new,class,editor,class,loader,do,register,editor,registry,class,class,new,class,array,editor,class,loader,if,this,resource,loader,instanceof,resource,pattern,resolver,do,register,editor,registry,resource,class,new,resource,array,property,editor,resource,pattern,resolver,this,resource,loader,this,property,resolver
ResourceEditorRegistrar -> @Override 	public void registerCustomEditors(PropertyEditorRegistry registry);1419966315;Populate the given {@code registry} with the following resource editors:_ResourceEditor, InputStreamEditor, InputSourceEditor, FileEditor, URLEditor,_URIEditor, ClassEditor, ClassArrayEditor._<p>If this registrar has been configured with a {@link ResourcePatternResolver},_a ResourceArrayPropertyEditor will be registered as well._@see org.springframework.core.io.ResourceEditor_@see org.springframework.beans.propertyeditors.InputStreamEditor_@see org.springframework.beans.propertyeditors.InputSourceEditor_@see org.springframework.beans.propertyeditors.FileEditor_@see org.springframework.beans.propertyeditors.URLEditor_@see org.springframework.beans.propertyeditors.URIEditor_@see org.springframework.beans.propertyeditors.ClassEditor_@see org.springframework.beans.propertyeditors.ClassArrayEditor_@see org.springframework.core.io.support.ResourceArrayPropertyEditor;@Override_	public void registerCustomEditors(PropertyEditorRegistry registry) {_		ResourceEditor baseEditor = new ResourceEditor(this.resourceLoader, this.propertyResolver)__		doRegisterEditor(registry, Resource.class, baseEditor)__		doRegisterEditor(registry, ContextResource.class, baseEditor)__		doRegisterEditor(registry, InputStream.class, new InputStreamEditor(baseEditor))__		doRegisterEditor(registry, InputSource.class, new InputSourceEditor(baseEditor))__		doRegisterEditor(registry, File.class, new FileEditor(baseEditor))__		doRegisterEditor(registry, URL.class, new URLEditor(baseEditor))___		ClassLoader classLoader = this.resourceLoader.getClassLoader()__		doRegisterEditor(registry, URI.class, new URIEditor(classLoader))__		doRegisterEditor(registry, Class.class, new ClassEditor(classLoader))__		doRegisterEditor(registry, Class[].class, new ClassArrayEditor(classLoader))___		if (this.resourceLoader instanceof ResourcePatternResolver) {_			doRegisterEditor(registry, Resource[].class,_					new ResourceArrayPropertyEditor((ResourcePatternResolver) this.resourceLoader, this.propertyResolver))__		}_	};populate,the,given,code,registry,with,the,following,resource,editors,resource,editor,input,stream,editor,input,source,editor,file,editor,urleditor,urieditor,class,editor,class,array,editor,p,if,this,registrar,has,been,configured,with,a,link,resource,pattern,resolver,a,resource,array,property,editor,will,be,registered,as,well,see,org,springframework,core,io,resource,editor,see,org,springframework,beans,propertyeditors,input,stream,editor,see,org,springframework,beans,propertyeditors,input,source,editor,see,org,springframework,beans,propertyeditors,file,editor,see,org,springframework,beans,propertyeditors,urleditor,see,org,springframework,beans,propertyeditors,urieditor,see,org,springframework,beans,propertyeditors,class,editor,see,org,springframework,beans,propertyeditors,class,array,editor,see,org,springframework,core,io,support,resource,array,property,editor;override,public,void,register,custom,editors,property,editor,registry,registry,resource,editor,base,editor,new,resource,editor,this,resource,loader,this,property,resolver,do,register,editor,registry,resource,class,base,editor,do,register,editor,registry,context,resource,class,base,editor,do,register,editor,registry,input,stream,class,new,input,stream,editor,base,editor,do,register,editor,registry,input,source,class,new,input,source,editor,base,editor,do,register,editor,registry,file,class,new,file,editor,base,editor,do,register,editor,registry,url,class,new,urleditor,base,editor,class,loader,class,loader,this,resource,loader,get,class,loader,do,register,editor,registry,uri,class,new,urieditor,class,loader,do,register,editor,registry,class,class,new,class,editor,class,loader,do,register,editor,registry,class,class,new,class,array,editor,class,loader,if,this,resource,loader,instanceof,resource,pattern,resolver,do,register,editor,registry,resource,class,new,resource,array,property,editor,resource,pattern,resolver,this,resource,loader,this,property,resolver
ResourceEditorRegistrar -> @Override 	public void registerCustomEditors(PropertyEditorRegistry registry);1427900575;Populate the given {@code registry} with the following resource editors:_ResourceEditor, InputStreamEditor, InputSourceEditor, FileEditor, URLEditor,_URIEditor, ClassEditor, ClassArrayEditor._<p>If this registrar has been configured with a {@link ResourcePatternResolver},_a ResourceArrayPropertyEditor will be registered as well._@see org.springframework.core.io.ResourceEditor_@see org.springframework.beans.propertyeditors.InputStreamEditor_@see org.springframework.beans.propertyeditors.InputSourceEditor_@see org.springframework.beans.propertyeditors.FileEditor_@see org.springframework.beans.propertyeditors.URLEditor_@see org.springframework.beans.propertyeditors.URIEditor_@see org.springframework.beans.propertyeditors.ClassEditor_@see org.springframework.beans.propertyeditors.ClassArrayEditor_@see org.springframework.core.io.support.ResourceArrayPropertyEditor;@Override_	public void registerCustomEditors(PropertyEditorRegistry registry) {_		ResourceEditor baseEditor = new ResourceEditor(this.resourceLoader, this.propertyResolver)__		doRegisterEditor(registry, Resource.class, baseEditor)__		doRegisterEditor(registry, ContextResource.class, baseEditor)__		doRegisterEditor(registry, InputStream.class, new InputStreamEditor(baseEditor))__		doRegisterEditor(registry, InputSource.class, new InputSourceEditor(baseEditor))__		doRegisterEditor(registry, File.class, new FileEditor(baseEditor))__		doRegisterEditor(registry, Reader.class, new ReaderEditor(baseEditor))__		doRegisterEditor(registry, URL.class, new URLEditor(baseEditor))___		ClassLoader classLoader = this.resourceLoader.getClassLoader()__		doRegisterEditor(registry, URI.class, new URIEditor(classLoader))__		doRegisterEditor(registry, Class.class, new ClassEditor(classLoader))__		doRegisterEditor(registry, Class[].class, new ClassArrayEditor(classLoader))___		if (this.resourceLoader instanceof ResourcePatternResolver) {_			doRegisterEditor(registry, Resource[].class,_					new ResourceArrayPropertyEditor((ResourcePatternResolver) this.resourceLoader, this.propertyResolver))__		}_	};populate,the,given,code,registry,with,the,following,resource,editors,resource,editor,input,stream,editor,input,source,editor,file,editor,urleditor,urieditor,class,editor,class,array,editor,p,if,this,registrar,has,been,configured,with,a,link,resource,pattern,resolver,a,resource,array,property,editor,will,be,registered,as,well,see,org,springframework,core,io,resource,editor,see,org,springframework,beans,propertyeditors,input,stream,editor,see,org,springframework,beans,propertyeditors,input,source,editor,see,org,springframework,beans,propertyeditors,file,editor,see,org,springframework,beans,propertyeditors,urleditor,see,org,springframework,beans,propertyeditors,urieditor,see,org,springframework,beans,propertyeditors,class,editor,see,org,springframework,beans,propertyeditors,class,array,editor,see,org,springframework,core,io,support,resource,array,property,editor;override,public,void,register,custom,editors,property,editor,registry,registry,resource,editor,base,editor,new,resource,editor,this,resource,loader,this,property,resolver,do,register,editor,registry,resource,class,base,editor,do,register,editor,registry,context,resource,class,base,editor,do,register,editor,registry,input,stream,class,new,input,stream,editor,base,editor,do,register,editor,registry,input,source,class,new,input,source,editor,base,editor,do,register,editor,registry,file,class,new,file,editor,base,editor,do,register,editor,registry,reader,class,new,reader,editor,base,editor,do,register,editor,registry,url,class,new,urleditor,base,editor,class,loader,class,loader,this,resource,loader,get,class,loader,do,register,editor,registry,uri,class,new,urieditor,class,loader,do,register,editor,registry,class,class,new,class,editor,class,loader,do,register,editor,registry,class,class,new,class,array,editor,class,loader,if,this,resource,loader,instanceof,resource,pattern,resolver,do,register,editor,registry,resource,class,new,resource,array,property,editor,resource,pattern,resolver,this,resource,loader,this,property,resolver
ResourceEditorRegistrar -> @Override 	public void registerCustomEditors(PropertyEditorRegistry registry);1467982718;Populate the given {@code registry} with the following resource editors:_ResourceEditor, InputStreamEditor, InputSourceEditor, FileEditor, URLEditor,_URIEditor, ClassEditor, ClassArrayEditor._<p>If this registrar has been configured with a {@link ResourcePatternResolver},_a ResourceArrayPropertyEditor will be registered as well._@see org.springframework.core.io.ResourceEditor_@see org.springframework.beans.propertyeditors.InputStreamEditor_@see org.springframework.beans.propertyeditors.InputSourceEditor_@see org.springframework.beans.propertyeditors.FileEditor_@see org.springframework.beans.propertyeditors.URLEditor_@see org.springframework.beans.propertyeditors.URIEditor_@see org.springframework.beans.propertyeditors.ClassEditor_@see org.springframework.beans.propertyeditors.ClassArrayEditor_@see org.springframework.core.io.support.ResourceArrayPropertyEditor;@Override_	public void registerCustomEditors(PropertyEditorRegistry registry) {_		ResourceEditor baseEditor = new ResourceEditor(this.resourceLoader, this.propertyResolver)__		doRegisterEditor(registry, Resource.class, baseEditor)__		doRegisterEditor(registry, ContextResource.class, baseEditor)__		doRegisterEditor(registry, InputStream.class, new InputStreamEditor(baseEditor))__		doRegisterEditor(registry, InputSource.class, new InputSourceEditor(baseEditor))__		doRegisterEditor(registry, File.class, new FileEditor(baseEditor))__		doRegisterEditor(registry, Path.class, new PathEditor(baseEditor))__		doRegisterEditor(registry, Reader.class, new ReaderEditor(baseEditor))__		doRegisterEditor(registry, URL.class, new URLEditor(baseEditor))___		ClassLoader classLoader = this.resourceLoader.getClassLoader()__		doRegisterEditor(registry, URI.class, new URIEditor(classLoader))__		doRegisterEditor(registry, Class.class, new ClassEditor(classLoader))__		doRegisterEditor(registry, Class[].class, new ClassArrayEditor(classLoader))___		if (this.resourceLoader instanceof ResourcePatternResolver) {_			doRegisterEditor(registry, Resource[].class,_					new ResourceArrayPropertyEditor((ResourcePatternResolver) this.resourceLoader, this.propertyResolver))__		}_	};populate,the,given,code,registry,with,the,following,resource,editors,resource,editor,input,stream,editor,input,source,editor,file,editor,urleditor,urieditor,class,editor,class,array,editor,p,if,this,registrar,has,been,configured,with,a,link,resource,pattern,resolver,a,resource,array,property,editor,will,be,registered,as,well,see,org,springframework,core,io,resource,editor,see,org,springframework,beans,propertyeditors,input,stream,editor,see,org,springframework,beans,propertyeditors,input,source,editor,see,org,springframework,beans,propertyeditors,file,editor,see,org,springframework,beans,propertyeditors,urleditor,see,org,springframework,beans,propertyeditors,urieditor,see,org,springframework,beans,propertyeditors,class,editor,see,org,springframework,beans,propertyeditors,class,array,editor,see,org,springframework,core,io,support,resource,array,property,editor;override,public,void,register,custom,editors,property,editor,registry,registry,resource,editor,base,editor,new,resource,editor,this,resource,loader,this,property,resolver,do,register,editor,registry,resource,class,base,editor,do,register,editor,registry,context,resource,class,base,editor,do,register,editor,registry,input,stream,class,new,input,stream,editor,base,editor,do,register,editor,registry,input,source,class,new,input,source,editor,base,editor,do,register,editor,registry,file,class,new,file,editor,base,editor,do,register,editor,registry,path,class,new,path,editor,base,editor,do,register,editor,registry,reader,class,new,reader,editor,base,editor,do,register,editor,registry,url,class,new,urleditor,base,editor,class,loader,class,loader,this,resource,loader,get,class,loader,do,register,editor,registry,uri,class,new,urieditor,class,loader,do,register,editor,registry,class,class,new,class,editor,class,loader,do,register,editor,registry,class,class,new,class,array,editor,class,loader,if,this,resource,loader,instanceof,resource,pattern,resolver,do,register,editor,registry,resource,class,new,resource,array,property,editor,resource,pattern,resolver,this,resource,loader,this,property,resolver
ResourceEditorRegistrar -> public ResourceEditorRegistrar(ResourceLoader resourceLoader, PropertyResolver propertyResolver);1328020251;Create a new ResourceEditorRegistrar for the given ResourceLoader_@param resourceLoader the ResourceLoader (or ResourcePatternResolver)_to create editors for (usually an ApplicationContext)_@see org.springframework.core.io.support.ResourcePatternResolver_@see org.springframework.context.ApplicationContext;public ResourceEditorRegistrar(ResourceLoader resourceLoader, PropertyResolver propertyResolver) {_		this.resourceLoader = resourceLoader__		this.propertyResolver = propertyResolver__	};create,a,new,resource,editor,registrar,for,the,given,resource,loader,param,resource,loader,the,resource,loader,or,resource,pattern,resolver,to,create,editors,for,usually,an,application,context,see,org,springframework,core,io,support,resource,pattern,resolver,see,org,springframework,context,application,context;public,resource,editor,registrar,resource,loader,resource,loader,property,resolver,property,resolver,this,resource,loader,resource,loader,this,property,resolver,property,resolver
ResourceEditorRegistrar -> public ResourceEditorRegistrar(ResourceLoader resourceLoader, PropertyResolver propertyResolver);1335774711;Create a new ResourceEditorRegistrar for the given ResourceLoader_@param resourceLoader the ResourceLoader (or ResourcePatternResolver)_to create editors for (usually an ApplicationContext)_@see org.springframework.core.io.support.ResourcePatternResolver_@see org.springframework.context.ApplicationContext;public ResourceEditorRegistrar(ResourceLoader resourceLoader, PropertyResolver propertyResolver) {_		this.resourceLoader = resourceLoader__		this.propertyResolver = propertyResolver__	};create,a,new,resource,editor,registrar,for,the,given,resource,loader,param,resource,loader,the,resource,loader,or,resource,pattern,resolver,to,create,editors,for,usually,an,application,context,see,org,springframework,core,io,support,resource,pattern,resolver,see,org,springframework,context,application,context;public,resource,editor,registrar,resource,loader,resource,loader,property,resolver,property,resolver,this,resource,loader,resource,loader,this,property,resolver,property,resolver
ResourceEditorRegistrar -> public ResourceEditorRegistrar(ResourceLoader resourceLoader, PropertyResolver propertyResolver);1356735495;Create a new ResourceEditorRegistrar for the given ResourceLoader_@param resourceLoader the ResourceLoader (or ResourcePatternResolver)_to create editors for (usually an ApplicationContext)_@see org.springframework.core.io.support.ResourcePatternResolver_@see org.springframework.context.ApplicationContext;public ResourceEditorRegistrar(ResourceLoader resourceLoader, PropertyResolver propertyResolver) {_		this.resourceLoader = resourceLoader__		this.propertyResolver = propertyResolver__	};create,a,new,resource,editor,registrar,for,the,given,resource,loader,param,resource,loader,the,resource,loader,or,resource,pattern,resolver,to,create,editors,for,usually,an,application,context,see,org,springframework,core,io,support,resource,pattern,resolver,see,org,springframework,context,application,context;public,resource,editor,registrar,resource,loader,resource,loader,property,resolver,property,resolver,this,resource,loader,resource,loader,this,property,resolver,property,resolver
ResourceEditorRegistrar -> public ResourceEditorRegistrar(ResourceLoader resourceLoader, PropertyResolver propertyResolver);1357119239;Create a new ResourceEditorRegistrar for the given ResourceLoader_@param resourceLoader the ResourceLoader (or ResourcePatternResolver)_to create editors for (usually an ApplicationContext)_@see org.springframework.core.io.support.ResourcePatternResolver_@see org.springframework.context.ApplicationContext;public ResourceEditorRegistrar(ResourceLoader resourceLoader, PropertyResolver propertyResolver) {_		this.resourceLoader = resourceLoader__		this.propertyResolver = propertyResolver__	};create,a,new,resource,editor,registrar,for,the,given,resource,loader,param,resource,loader,the,resource,loader,or,resource,pattern,resolver,to,create,editors,for,usually,an,application,context,see,org,springframework,core,io,support,resource,pattern,resolver,see,org,springframework,context,application,context;public,resource,editor,registrar,resource,loader,resource,loader,property,resolver,property,resolver,this,resource,loader,resource,loader,this,property,resolver,property,resolver
ResourceEditorRegistrar -> public ResourceEditorRegistrar(ResourceLoader resourceLoader, PropertyResolver propertyResolver);1368482696;Create a new ResourceEditorRegistrar for the given ResourceLoader_@param resourceLoader the ResourceLoader (or ResourcePatternResolver)_to create editors for (usually an ApplicationContext)_@see org.springframework.core.io.support.ResourcePatternResolver_@see org.springframework.context.ApplicationContext;public ResourceEditorRegistrar(ResourceLoader resourceLoader, PropertyResolver propertyResolver) {_		this.resourceLoader = resourceLoader__		this.propertyResolver = propertyResolver__	};create,a,new,resource,editor,registrar,for,the,given,resource,loader,param,resource,loader,the,resource,loader,or,resource,pattern,resolver,to,create,editors,for,usually,an,application,context,see,org,springframework,core,io,support,resource,pattern,resolver,see,org,springframework,context,application,context;public,resource,editor,registrar,resource,loader,resource,loader,property,resolver,property,resolver,this,resource,loader,resource,loader,this,property,resolver,property,resolver
ResourceEditorRegistrar -> public ResourceEditorRegistrar(ResourceLoader resourceLoader, PropertyResolver propertyResolver);1368654092;Create a new ResourceEditorRegistrar for the given {@link ResourceLoader}_and {@link PropertyResolver}._@param resourceLoader the ResourceLoader (or ResourcePatternResolver)_to create editors for (usually an ApplicationContext)_@param propertyResolver the PropertyResolver (usually an Environment)_@see org.springframework.core.env.Environment_@see org.springframework.core.io.support.ResourcePatternResolver_@see org.springframework.context.ApplicationContext;public ResourceEditorRegistrar(ResourceLoader resourceLoader, PropertyResolver propertyResolver) {_		this.resourceLoader = resourceLoader__		this.propertyResolver = propertyResolver__	};create,a,new,resource,editor,registrar,for,the,given,link,resource,loader,and,link,property,resolver,param,resource,loader,the,resource,loader,or,resource,pattern,resolver,to,create,editors,for,usually,an,application,context,param,property,resolver,the,property,resolver,usually,an,environment,see,org,springframework,core,env,environment,see,org,springframework,core,io,support,resource,pattern,resolver,see,org,springframework,context,application,context;public,resource,editor,registrar,resource,loader,resource,loader,property,resolver,property,resolver,this,resource,loader,resource,loader,this,property,resolver,property,resolver
ResourceEditorRegistrar -> public ResourceEditorRegistrar(ResourceLoader resourceLoader, PropertyResolver propertyResolver);1419966315;Create a new ResourceEditorRegistrar for the given {@link ResourceLoader}_and {@link PropertyResolver}._@param resourceLoader the ResourceLoader (or ResourcePatternResolver)_to create editors for (usually an ApplicationContext)_@param propertyResolver the PropertyResolver (usually an Environment)_@see org.springframework.core.env.Environment_@see org.springframework.core.io.support.ResourcePatternResolver_@see org.springframework.context.ApplicationContext;public ResourceEditorRegistrar(ResourceLoader resourceLoader, PropertyResolver propertyResolver) {_		this.resourceLoader = resourceLoader__		this.propertyResolver = propertyResolver__	};create,a,new,resource,editor,registrar,for,the,given,link,resource,loader,and,link,property,resolver,param,resource,loader,the,resource,loader,or,resource,pattern,resolver,to,create,editors,for,usually,an,application,context,param,property,resolver,the,property,resolver,usually,an,environment,see,org,springframework,core,env,environment,see,org,springframework,core,io,support,resource,pattern,resolver,see,org,springframework,context,application,context;public,resource,editor,registrar,resource,loader,resource,loader,property,resolver,property,resolver,this,resource,loader,resource,loader,this,property,resolver,property,resolver
ResourceEditorRegistrar -> public ResourceEditorRegistrar(ResourceLoader resourceLoader, PropertyResolver propertyResolver);1427900575;Create a new ResourceEditorRegistrar for the given {@link ResourceLoader}_and {@link PropertyResolver}._@param resourceLoader the ResourceLoader (or ResourcePatternResolver)_to create editors for (usually an ApplicationContext)_@param propertyResolver the PropertyResolver (usually an Environment)_@see org.springframework.core.env.Environment_@see org.springframework.core.io.support.ResourcePatternResolver_@see org.springframework.context.ApplicationContext;public ResourceEditorRegistrar(ResourceLoader resourceLoader, PropertyResolver propertyResolver) {_		this.resourceLoader = resourceLoader__		this.propertyResolver = propertyResolver__	};create,a,new,resource,editor,registrar,for,the,given,link,resource,loader,and,link,property,resolver,param,resource,loader,the,resource,loader,or,resource,pattern,resolver,to,create,editors,for,usually,an,application,context,param,property,resolver,the,property,resolver,usually,an,environment,see,org,springframework,core,env,environment,see,org,springframework,core,io,support,resource,pattern,resolver,see,org,springframework,context,application,context;public,resource,editor,registrar,resource,loader,resource,loader,property,resolver,property,resolver,this,resource,loader,resource,loader,this,property,resolver,property,resolver
ResourceEditorRegistrar -> public ResourceEditorRegistrar(ResourceLoader resourceLoader, PropertyResolver propertyResolver);1467982718;Create a new ResourceEditorRegistrar for the given {@link ResourceLoader}_and {@link PropertyResolver}._@param resourceLoader the ResourceLoader (or ResourcePatternResolver)_to create editors for (usually an ApplicationContext)_@param propertyResolver the PropertyResolver (usually an Environment)_@see org.springframework.core.env.Environment_@see org.springframework.core.io.support.ResourcePatternResolver_@see org.springframework.context.ApplicationContext;public ResourceEditorRegistrar(ResourceLoader resourceLoader, PropertyResolver propertyResolver) {_		this.resourceLoader = resourceLoader__		this.propertyResolver = propertyResolver__	};create,a,new,resource,editor,registrar,for,the,given,link,resource,loader,and,link,property,resolver,param,resource,loader,the,resource,loader,or,resource,pattern,resolver,to,create,editors,for,usually,an,application,context,param,property,resolver,the,property,resolver,usually,an,environment,see,org,springframework,core,env,environment,see,org,springframework,core,io,support,resource,pattern,resolver,see,org,springframework,context,application,context;public,resource,editor,registrar,resource,loader,resource,loader,property,resolver,property,resolver,this,resource,loader,resource,loader,this,property,resolver,property,resolver
ResourceEditorRegistrar -> @Deprecated 	public ResourceEditorRegistrar(ResourceLoader resourceLoader);1328020251;Create a new ResourceEditorRegistrar for the given {@link ResourceLoader}_using a {@link StandardEnvironment}._@param resourceLoader the ResourceLoader (or ResourcePatternResolver)_to create editors for (usually an ApplicationContext)_@see org.springframework.core.io.support.ResourcePatternResolver_@see org.springframework.context.ApplicationContext_@deprecated as of Spring 3.1 in favor of_{@link #ResourceEditorRegistrar(ResourceLoader, Environment)};@Deprecated_	public ResourceEditorRegistrar(ResourceLoader resourceLoader) {_		this(resourceLoader, new StandardEnvironment())__	};create,a,new,resource,editor,registrar,for,the,given,link,resource,loader,using,a,link,standard,environment,param,resource,loader,the,resource,loader,or,resource,pattern,resolver,to,create,editors,for,usually,an,application,context,see,org,springframework,core,io,support,resource,pattern,resolver,see,org,springframework,context,application,context,deprecated,as,of,spring,3,1,in,favor,of,link,resource,editor,registrar,resource,loader,environment;deprecated,public,resource,editor,registrar,resource,loader,resource,loader,this,resource,loader,new,standard,environment
ResourceEditorRegistrar -> @Deprecated 	public ResourceEditorRegistrar(ResourceLoader resourceLoader);1335774711;Create a new ResourceEditorRegistrar for the given {@link ResourceLoader}_using a {@link StandardEnvironment}._@param resourceLoader the ResourceLoader (or ResourcePatternResolver)_to create editors for (usually an ApplicationContext)_@see org.springframework.core.io.support.ResourcePatternResolver_@see org.springframework.context.ApplicationContext_@deprecated as of Spring 3.1 in favor of_{@link #ResourceEditorRegistrar(ResourceLoader, PropertyResolver)};@Deprecated_	public ResourceEditorRegistrar(ResourceLoader resourceLoader) {_		this(resourceLoader, new StandardEnvironment())__	};create,a,new,resource,editor,registrar,for,the,given,link,resource,loader,using,a,link,standard,environment,param,resource,loader,the,resource,loader,or,resource,pattern,resolver,to,create,editors,for,usually,an,application,context,see,org,springframework,core,io,support,resource,pattern,resolver,see,org,springframework,context,application,context,deprecated,as,of,spring,3,1,in,favor,of,link,resource,editor,registrar,resource,loader,property,resolver;deprecated,public,resource,editor,registrar,resource,loader,resource,loader,this,resource,loader,new,standard,environment
ResourceEditorRegistrar -> @Deprecated 	public ResourceEditorRegistrar(ResourceLoader resourceLoader);1356735495;Create a new ResourceEditorRegistrar for the given {@link ResourceLoader}_using a {@link StandardEnvironment}._@param resourceLoader the ResourceLoader (or ResourcePatternResolver)_to create editors for (usually an ApplicationContext)_@see org.springframework.core.io.support.ResourcePatternResolver_@see org.springframework.context.ApplicationContext_@deprecated as of Spring 3.1 in favor of_{@link #ResourceEditorRegistrar(ResourceLoader, PropertyResolver)};@Deprecated_	public ResourceEditorRegistrar(ResourceLoader resourceLoader) {_		this(resourceLoader, new StandardEnvironment())__	};create,a,new,resource,editor,registrar,for,the,given,link,resource,loader,using,a,link,standard,environment,param,resource,loader,the,resource,loader,or,resource,pattern,resolver,to,create,editors,for,usually,an,application,context,see,org,springframework,core,io,support,resource,pattern,resolver,see,org,springframework,context,application,context,deprecated,as,of,spring,3,1,in,favor,of,link,resource,editor,registrar,resource,loader,property,resolver;deprecated,public,resource,editor,registrar,resource,loader,resource,loader,this,resource,loader,new,standard,environment
ResourceEditorRegistrar -> @Deprecated 	public ResourceEditorRegistrar(ResourceLoader resourceLoader);1357119239;Create a new ResourceEditorRegistrar for the given {@link ResourceLoader}_using a {@link StandardEnvironment}._@param resourceLoader the ResourceLoader (or ResourcePatternResolver)_to create editors for (usually an ApplicationContext)_@see org.springframework.core.io.support.ResourcePatternResolver_@see org.springframework.context.ApplicationContext_@deprecated as of Spring 3.1 in favor of_{@link #ResourceEditorRegistrar(ResourceLoader, PropertyResolver)};@Deprecated_	public ResourceEditorRegistrar(ResourceLoader resourceLoader) {_		this(resourceLoader, new StandardEnvironment())__	};create,a,new,resource,editor,registrar,for,the,given,link,resource,loader,using,a,link,standard,environment,param,resource,loader,the,resource,loader,or,resource,pattern,resolver,to,create,editors,for,usually,an,application,context,see,org,springframework,core,io,support,resource,pattern,resolver,see,org,springframework,context,application,context,deprecated,as,of,spring,3,1,in,favor,of,link,resource,editor,registrar,resource,loader,property,resolver;deprecated,public,resource,editor,registrar,resource,loader,resource,loader,this,resource,loader,new,standard,environment
ResourceEditorRegistrar -> @Deprecated 	public ResourceEditorRegistrar(ResourceLoader resourceLoader);1368482696;Create a new ResourceEditorRegistrar for the given {@link ResourceLoader}_using a {@link StandardEnvironment}._@param resourceLoader the ResourceLoader (or ResourcePatternResolver)_to create editors for (usually an ApplicationContext)_@see org.springframework.core.io.support.ResourcePatternResolver_@see org.springframework.context.ApplicationContext_@deprecated as of Spring 3.1 in favor of_{@link #ResourceEditorRegistrar(ResourceLoader, PropertyResolver)};@Deprecated_	public ResourceEditorRegistrar(ResourceLoader resourceLoader) {_		this(resourceLoader, new StandardEnvironment())__	};create,a,new,resource,editor,registrar,for,the,given,link,resource,loader,using,a,link,standard,environment,param,resource,loader,the,resource,loader,or,resource,pattern,resolver,to,create,editors,for,usually,an,application,context,see,org,springframework,core,io,support,resource,pattern,resolver,see,org,springframework,context,application,context,deprecated,as,of,spring,3,1,in,favor,of,link,resource,editor,registrar,resource,loader,property,resolver;deprecated,public,resource,editor,registrar,resource,loader,resource,loader,this,resource,loader,new,standard,environment
ResourceEditorRegistrar -> @Deprecated 	public ResourceEditorRegistrar(ResourceLoader resourceLoader);1368654092;Create a new ResourceEditorRegistrar for the given {@link ResourceLoader}_using a {@link StandardEnvironment}._@param resourceLoader the ResourceLoader (or ResourcePatternResolver)_to create editors for (usually an ApplicationContext)_@see org.springframework.core.io.support.ResourcePatternResolver_@see org.springframework.context.ApplicationContext_@deprecated as of Spring 3.1 in favor of_{@link #ResourceEditorRegistrar(ResourceLoader, PropertyResolver)};@Deprecated_	public ResourceEditorRegistrar(ResourceLoader resourceLoader) {_		this(resourceLoader, new StandardEnvironment())__	};create,a,new,resource,editor,registrar,for,the,given,link,resource,loader,using,a,link,standard,environment,param,resource,loader,the,resource,loader,or,resource,pattern,resolver,to,create,editors,for,usually,an,application,context,see,org,springframework,core,io,support,resource,pattern,resolver,see,org,springframework,context,application,context,deprecated,as,of,spring,3,1,in,favor,of,link,resource,editor,registrar,resource,loader,property,resolver;deprecated,public,resource,editor,registrar,resource,loader,resource,loader,this,resource,loader,new,standard,environment
ResourceEditorRegistrar -> private void doRegisterEditor(PropertyEditorRegistry registry, Class<?> requiredType, PropertyEditor editor);1328020251;Override default editor, if possible (since that's what we really mean to do here)__otherwise register as a custom editor.;private void doRegisterEditor(PropertyEditorRegistry registry, Class<?> requiredType, PropertyEditor editor) {_		if (registry instanceof PropertyEditorRegistrySupport) {_			((PropertyEditorRegistrySupport) registry).overrideDefaultEditor(requiredType, editor)__		}_		else {_			registry.registerCustomEditor(requiredType, editor)__		}_	};override,default,editor,if,possible,since,that,s,what,we,really,mean,to,do,here,otherwise,register,as,a,custom,editor;private,void,do,register,editor,property,editor,registry,registry,class,required,type,property,editor,editor,if,registry,instanceof,property,editor,registry,support,property,editor,registry,support,registry,override,default,editor,required,type,editor,else,registry,register,custom,editor,required,type,editor
ResourceEditorRegistrar -> private void doRegisterEditor(PropertyEditorRegistry registry, Class<?> requiredType, PropertyEditor editor);1335774711;Override default editor, if possible (since that's what we really mean to do here)__otherwise register as a custom editor.;private void doRegisterEditor(PropertyEditorRegistry registry, Class<?> requiredType, PropertyEditor editor) {_		if (registry instanceof PropertyEditorRegistrySupport) {_			((PropertyEditorRegistrySupport) registry).overrideDefaultEditor(requiredType, editor)__		}_		else {_			registry.registerCustomEditor(requiredType, editor)__		}_	};override,default,editor,if,possible,since,that,s,what,we,really,mean,to,do,here,otherwise,register,as,a,custom,editor;private,void,do,register,editor,property,editor,registry,registry,class,required,type,property,editor,editor,if,registry,instanceof,property,editor,registry,support,property,editor,registry,support,registry,override,default,editor,required,type,editor,else,registry,register,custom,editor,required,type,editor
ResourceEditorRegistrar -> private void doRegisterEditor(PropertyEditorRegistry registry, Class<?> requiredType, PropertyEditor editor);1356735495;Override default editor, if possible (since that's what we really mean to do here)__otherwise register as a custom editor.;private void doRegisterEditor(PropertyEditorRegistry registry, Class<?> requiredType, PropertyEditor editor) {_		if (registry instanceof PropertyEditorRegistrySupport) {_			((PropertyEditorRegistrySupport) registry).overrideDefaultEditor(requiredType, editor)__		}_		else {_			registry.registerCustomEditor(requiredType, editor)__		}_	};override,default,editor,if,possible,since,that,s,what,we,really,mean,to,do,here,otherwise,register,as,a,custom,editor;private,void,do,register,editor,property,editor,registry,registry,class,required,type,property,editor,editor,if,registry,instanceof,property,editor,registry,support,property,editor,registry,support,registry,override,default,editor,required,type,editor,else,registry,register,custom,editor,required,type,editor
ResourceEditorRegistrar -> private void doRegisterEditor(PropertyEditorRegistry registry, Class<?> requiredType, PropertyEditor editor);1357119239;Override default editor, if possible (since that's what we really mean to do here)__otherwise register as a custom editor.;private void doRegisterEditor(PropertyEditorRegistry registry, Class<?> requiredType, PropertyEditor editor) {_		if (registry instanceof PropertyEditorRegistrySupport) {_			((PropertyEditorRegistrySupport) registry).overrideDefaultEditor(requiredType, editor)__		}_		else {_			registry.registerCustomEditor(requiredType, editor)__		}_	};override,default,editor,if,possible,since,that,s,what,we,really,mean,to,do,here,otherwise,register,as,a,custom,editor;private,void,do,register,editor,property,editor,registry,registry,class,required,type,property,editor,editor,if,registry,instanceof,property,editor,registry,support,property,editor,registry,support,registry,override,default,editor,required,type,editor,else,registry,register,custom,editor,required,type,editor
ResourceEditorRegistrar -> private void doRegisterEditor(PropertyEditorRegistry registry, Class<?> requiredType, PropertyEditor editor);1368482696;Override default editor, if possible (since that's what we really mean to do here)__otherwise register as a custom editor.;private void doRegisterEditor(PropertyEditorRegistry registry, Class<?> requiredType, PropertyEditor editor) {_		if (registry instanceof PropertyEditorRegistrySupport) {_			((PropertyEditorRegistrySupport) registry).overrideDefaultEditor(requiredType, editor)__		}_		else {_			registry.registerCustomEditor(requiredType, editor)__		}_	};override,default,editor,if,possible,since,that,s,what,we,really,mean,to,do,here,otherwise,register,as,a,custom,editor;private,void,do,register,editor,property,editor,registry,registry,class,required,type,property,editor,editor,if,registry,instanceof,property,editor,registry,support,property,editor,registry,support,registry,override,default,editor,required,type,editor,else,registry,register,custom,editor,required,type,editor
ResourceEditorRegistrar -> private void doRegisterEditor(PropertyEditorRegistry registry, Class<?> requiredType, PropertyEditor editor);1368654092;Override default editor, if possible (since that's what we really mean to do here)__otherwise register as a custom editor.;private void doRegisterEditor(PropertyEditorRegistry registry, Class<?> requiredType, PropertyEditor editor) {_		if (registry instanceof PropertyEditorRegistrySupport) {_			((PropertyEditorRegistrySupport) registry).overrideDefaultEditor(requiredType, editor)__		}_		else {_			registry.registerCustomEditor(requiredType, editor)__		}_	};override,default,editor,if,possible,since,that,s,what,we,really,mean,to,do,here,otherwise,register,as,a,custom,editor;private,void,do,register,editor,property,editor,registry,registry,class,required,type,property,editor,editor,if,registry,instanceof,property,editor,registry,support,property,editor,registry,support,registry,override,default,editor,required,type,editor,else,registry,register,custom,editor,required,type,editor
ResourceEditorRegistrar -> private void doRegisterEditor(PropertyEditorRegistry registry, Class<?> requiredType, PropertyEditor editor);1419966315;Override default editor, if possible (since that's what we really mean to do here)__otherwise register as a custom editor.;private void doRegisterEditor(PropertyEditorRegistry registry, Class<?> requiredType, PropertyEditor editor) {_		if (registry instanceof PropertyEditorRegistrySupport) {_			((PropertyEditorRegistrySupport) registry).overrideDefaultEditor(requiredType, editor)__		}_		else {_			registry.registerCustomEditor(requiredType, editor)__		}_	};override,default,editor,if,possible,since,that,s,what,we,really,mean,to,do,here,otherwise,register,as,a,custom,editor;private,void,do,register,editor,property,editor,registry,registry,class,required,type,property,editor,editor,if,registry,instanceof,property,editor,registry,support,property,editor,registry,support,registry,override,default,editor,required,type,editor,else,registry,register,custom,editor,required,type,editor
ResourceEditorRegistrar -> private void doRegisterEditor(PropertyEditorRegistry registry, Class<?> requiredType, PropertyEditor editor);1427900575;Override default editor, if possible (since that's what we really mean to do here)__otherwise register as a custom editor.;private void doRegisterEditor(PropertyEditorRegistry registry, Class<?> requiredType, PropertyEditor editor) {_		if (registry instanceof PropertyEditorRegistrySupport) {_			((PropertyEditorRegistrySupport) registry).overrideDefaultEditor(requiredType, editor)__		}_		else {_			registry.registerCustomEditor(requiredType, editor)__		}_	};override,default,editor,if,possible,since,that,s,what,we,really,mean,to,do,here,otherwise,register,as,a,custom,editor;private,void,do,register,editor,property,editor,registry,registry,class,required,type,property,editor,editor,if,registry,instanceof,property,editor,registry,support,property,editor,registry,support,registry,override,default,editor,required,type,editor,else,registry,register,custom,editor,required,type,editor
ResourceEditorRegistrar -> private void doRegisterEditor(PropertyEditorRegistry registry, Class<?> requiredType, PropertyEditor editor);1467982718;Override default editor, if possible (since that's what we really mean to do here)__otherwise register as a custom editor.;private void doRegisterEditor(PropertyEditorRegistry registry, Class<?> requiredType, PropertyEditor editor) {_		if (registry instanceof PropertyEditorRegistrySupport) {_			((PropertyEditorRegistrySupport) registry).overrideDefaultEditor(requiredType, editor)__		}_		else {_			registry.registerCustomEditor(requiredType, editor)__		}_	};override,default,editor,if,possible,since,that,s,what,we,really,mean,to,do,here,otherwise,register,as,a,custom,editor;private,void,do,register,editor,property,editor,registry,registry,class,required,type,property,editor,editor,if,registry,instanceof,property,editor,registry,support,property,editor,registry,support,registry,override,default,editor,required,type,editor,else,registry,register,custom,editor,required,type,editor
ResourceEditorRegistrar -> public void registerCustomEditors(PropertyEditorRegistry registry);1328020251;Populate the given <code>registry</code> with the following resource editors:_ResourceEditor, InputStreamEditor, InputSourceEditor, FileEditor, URLEditor,_URIEditor, ClassEditor, ClassArrayEditor._<p>If this registrar has been configured with a {@link ResourcePatternResolver},_a ResourceArrayPropertyEditor will be registered as well._@see org.springframework.core.io.ResourceEditor_@see org.springframework.beans.propertyeditors.InputStreamEditor_@see org.springframework.beans.propertyeditors.InputSourceEditor_@see org.springframework.beans.propertyeditors.FileEditor_@see org.springframework.beans.propertyeditors.URLEditor_@see org.springframework.beans.propertyeditors.URIEditor_@see org.springframework.beans.propertyeditors.ClassEditor_@see org.springframework.beans.propertyeditors.ClassArrayEditor_@see org.springframework.core.io.support.ResourceArrayPropertyEditor;public void registerCustomEditors(PropertyEditorRegistry registry) {_		ResourceEditor baseEditor = new ResourceEditor(this.resourceLoader, this.propertyResolver)__		doRegisterEditor(registry, Resource.class, baseEditor)__		doRegisterEditor(registry, ContextResource.class, baseEditor)__		doRegisterEditor(registry, InputStream.class, new InputStreamEditor(baseEditor))__		doRegisterEditor(registry, InputSource.class, new InputSourceEditor(baseEditor))__		doRegisterEditor(registry, File.class, new FileEditor(baseEditor))__		doRegisterEditor(registry, URL.class, new URLEditor(baseEditor))___		ClassLoader classLoader = this.resourceLoader.getClassLoader()__		doRegisterEditor(registry, URI.class, new URIEditor(classLoader))__		doRegisterEditor(registry, Class.class, new ClassEditor(classLoader))__		doRegisterEditor(registry, Class[].class, new ClassArrayEditor(classLoader))___		if (this.resourceLoader instanceof ResourcePatternResolver) {_			doRegisterEditor(registry, Resource[].class,_					new ResourceArrayPropertyEditor((ResourcePatternResolver) this.resourceLoader, this.propertyResolver))__		}_	};populate,the,given,code,registry,code,with,the,following,resource,editors,resource,editor,input,stream,editor,input,source,editor,file,editor,urleditor,urieditor,class,editor,class,array,editor,p,if,this,registrar,has,been,configured,with,a,link,resource,pattern,resolver,a,resource,array,property,editor,will,be,registered,as,well,see,org,springframework,core,io,resource,editor,see,org,springframework,beans,propertyeditors,input,stream,editor,see,org,springframework,beans,propertyeditors,input,source,editor,see,org,springframework,beans,propertyeditors,file,editor,see,org,springframework,beans,propertyeditors,urleditor,see,org,springframework,beans,propertyeditors,urieditor,see,org,springframework,beans,propertyeditors,class,editor,see,org,springframework,beans,propertyeditors,class,array,editor,see,org,springframework,core,io,support,resource,array,property,editor;public,void,register,custom,editors,property,editor,registry,registry,resource,editor,base,editor,new,resource,editor,this,resource,loader,this,property,resolver,do,register,editor,registry,resource,class,base,editor,do,register,editor,registry,context,resource,class,base,editor,do,register,editor,registry,input,stream,class,new,input,stream,editor,base,editor,do,register,editor,registry,input,source,class,new,input,source,editor,base,editor,do,register,editor,registry,file,class,new,file,editor,base,editor,do,register,editor,registry,url,class,new,urleditor,base,editor,class,loader,class,loader,this,resource,loader,get,class,loader,do,register,editor,registry,uri,class,new,urieditor,class,loader,do,register,editor,registry,class,class,new,class,editor,class,loader,do,register,editor,registry,class,class,new,class,array,editor,class,loader,if,this,resource,loader,instanceof,resource,pattern,resolver,do,register,editor,registry,resource,class,new,resource,array,property,editor,resource,pattern,resolver,this,resource,loader,this,property,resolver
ResourceEditorRegistrar -> public void registerCustomEditors(PropertyEditorRegistry registry);1335774711;Populate the given <code>registry</code> with the following resource editors:_ResourceEditor, InputStreamEditor, InputSourceEditor, FileEditor, URLEditor,_URIEditor, ClassEditor, ClassArrayEditor._<p>If this registrar has been configured with a {@link ResourcePatternResolver},_a ResourceArrayPropertyEditor will be registered as well._@see org.springframework.core.io.ResourceEditor_@see org.springframework.beans.propertyeditors.InputStreamEditor_@see org.springframework.beans.propertyeditors.InputSourceEditor_@see org.springframework.beans.propertyeditors.FileEditor_@see org.springframework.beans.propertyeditors.URLEditor_@see org.springframework.beans.propertyeditors.URIEditor_@see org.springframework.beans.propertyeditors.ClassEditor_@see org.springframework.beans.propertyeditors.ClassArrayEditor_@see org.springframework.core.io.support.ResourceArrayPropertyEditor;public void registerCustomEditors(PropertyEditorRegistry registry) {_		ResourceEditor baseEditor = new ResourceEditor(this.resourceLoader, this.propertyResolver)__		doRegisterEditor(registry, Resource.class, baseEditor)__		doRegisterEditor(registry, ContextResource.class, baseEditor)__		doRegisterEditor(registry, InputStream.class, new InputStreamEditor(baseEditor))__		doRegisterEditor(registry, InputSource.class, new InputSourceEditor(baseEditor))__		doRegisterEditor(registry, File.class, new FileEditor(baseEditor))__		doRegisterEditor(registry, URL.class, new URLEditor(baseEditor))___		ClassLoader classLoader = this.resourceLoader.getClassLoader()__		doRegisterEditor(registry, URI.class, new URIEditor(classLoader))__		doRegisterEditor(registry, Class.class, new ClassEditor(classLoader))__		doRegisterEditor(registry, Class[].class, new ClassArrayEditor(classLoader))___		if (this.resourceLoader instanceof ResourcePatternResolver) {_			doRegisterEditor(registry, Resource[].class,_					new ResourceArrayPropertyEditor((ResourcePatternResolver) this.resourceLoader, this.propertyResolver))__		}_	};populate,the,given,code,registry,code,with,the,following,resource,editors,resource,editor,input,stream,editor,input,source,editor,file,editor,urleditor,urieditor,class,editor,class,array,editor,p,if,this,registrar,has,been,configured,with,a,link,resource,pattern,resolver,a,resource,array,property,editor,will,be,registered,as,well,see,org,springframework,core,io,resource,editor,see,org,springframework,beans,propertyeditors,input,stream,editor,see,org,springframework,beans,propertyeditors,input,source,editor,see,org,springframework,beans,propertyeditors,file,editor,see,org,springframework,beans,propertyeditors,urleditor,see,org,springframework,beans,propertyeditors,urieditor,see,org,springframework,beans,propertyeditors,class,editor,see,org,springframework,beans,propertyeditors,class,array,editor,see,org,springframework,core,io,support,resource,array,property,editor;public,void,register,custom,editors,property,editor,registry,registry,resource,editor,base,editor,new,resource,editor,this,resource,loader,this,property,resolver,do,register,editor,registry,resource,class,base,editor,do,register,editor,registry,context,resource,class,base,editor,do,register,editor,registry,input,stream,class,new,input,stream,editor,base,editor,do,register,editor,registry,input,source,class,new,input,source,editor,base,editor,do,register,editor,registry,file,class,new,file,editor,base,editor,do,register,editor,registry,url,class,new,urleditor,base,editor,class,loader,class,loader,this,resource,loader,get,class,loader,do,register,editor,registry,uri,class,new,urieditor,class,loader,do,register,editor,registry,class,class,new,class,editor,class,loader,do,register,editor,registry,class,class,new,class,array,editor,class,loader,if,this,resource,loader,instanceof,resource,pattern,resolver,do,register,editor,registry,resource,class,new,resource,array,property,editor,resource,pattern,resolver,this,resource,loader,this,property,resolver
ResourceEditorRegistrar -> public void registerCustomEditors(PropertyEditorRegistry registry);1357119239;Populate the given {@code registry} with the following resource editors:_ResourceEditor, InputStreamEditor, InputSourceEditor, FileEditor, URLEditor,_URIEditor, ClassEditor, ClassArrayEditor._<p>If this registrar has been configured with a {@link ResourcePatternResolver},_a ResourceArrayPropertyEditor will be registered as well._@see org.springframework.core.io.ResourceEditor_@see org.springframework.beans.propertyeditors.InputStreamEditor_@see org.springframework.beans.propertyeditors.InputSourceEditor_@see org.springframework.beans.propertyeditors.FileEditor_@see org.springframework.beans.propertyeditors.URLEditor_@see org.springframework.beans.propertyeditors.URIEditor_@see org.springframework.beans.propertyeditors.ClassEditor_@see org.springframework.beans.propertyeditors.ClassArrayEditor_@see org.springframework.core.io.support.ResourceArrayPropertyEditor;public void registerCustomEditors(PropertyEditorRegistry registry) {_		ResourceEditor baseEditor = new ResourceEditor(this.resourceLoader, this.propertyResolver)__		doRegisterEditor(registry, Resource.class, baseEditor)__		doRegisterEditor(registry, ContextResource.class, baseEditor)__		doRegisterEditor(registry, InputStream.class, new InputStreamEditor(baseEditor))__		doRegisterEditor(registry, InputSource.class, new InputSourceEditor(baseEditor))__		doRegisterEditor(registry, File.class, new FileEditor(baseEditor))__		doRegisterEditor(registry, URL.class, new URLEditor(baseEditor))___		ClassLoader classLoader = this.resourceLoader.getClassLoader()__		doRegisterEditor(registry, URI.class, new URIEditor(classLoader))__		doRegisterEditor(registry, Class.class, new ClassEditor(classLoader))__		doRegisterEditor(registry, Class[].class, new ClassArrayEditor(classLoader))___		if (this.resourceLoader instanceof ResourcePatternResolver) {_			doRegisterEditor(registry, Resource[].class,_					new ResourceArrayPropertyEditor((ResourcePatternResolver) this.resourceLoader, this.propertyResolver))__		}_	};populate,the,given,code,registry,with,the,following,resource,editors,resource,editor,input,stream,editor,input,source,editor,file,editor,urleditor,urieditor,class,editor,class,array,editor,p,if,this,registrar,has,been,configured,with,a,link,resource,pattern,resolver,a,resource,array,property,editor,will,be,registered,as,well,see,org,springframework,core,io,resource,editor,see,org,springframework,beans,propertyeditors,input,stream,editor,see,org,springframework,beans,propertyeditors,input,source,editor,see,org,springframework,beans,propertyeditors,file,editor,see,org,springframework,beans,propertyeditors,urleditor,see,org,springframework,beans,propertyeditors,urieditor,see,org,springframework,beans,propertyeditors,class,editor,see,org,springframework,beans,propertyeditors,class,array,editor,see,org,springframework,core,io,support,resource,array,property,editor;public,void,register,custom,editors,property,editor,registry,registry,resource,editor,base,editor,new,resource,editor,this,resource,loader,this,property,resolver,do,register,editor,registry,resource,class,base,editor,do,register,editor,registry,context,resource,class,base,editor,do,register,editor,registry,input,stream,class,new,input,stream,editor,base,editor,do,register,editor,registry,input,source,class,new,input,source,editor,base,editor,do,register,editor,registry,file,class,new,file,editor,base,editor,do,register,editor,registry,url,class,new,urleditor,base,editor,class,loader,class,loader,this,resource,loader,get,class,loader,do,register,editor,registry,uri,class,new,urieditor,class,loader,do,register,editor,registry,class,class,new,class,editor,class,loader,do,register,editor,registry,class,class,new,class,array,editor,class,loader,if,this,resource,loader,instanceof,resource,pattern,resolver,do,register,editor,registry,resource,class,new,resource,array,property,editor,resource,pattern,resolver,this,resource,loader,this,property,resolver
