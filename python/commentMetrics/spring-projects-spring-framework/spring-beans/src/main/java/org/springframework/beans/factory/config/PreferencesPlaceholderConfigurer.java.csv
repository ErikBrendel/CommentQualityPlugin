# id;timestamp;commentText;codeText;commentWords;codeWords
PreferencesPlaceholderConfigurer -> public void setUserTreePath(String userTreePath);1328020251;Set the path in the system preferences tree to use for resolving_placeholders. Default is the root node.;public void setUserTreePath(String userTreePath) {_		this.userTreePath = userTreePath__	};set,the,path,in,the,system,preferences,tree,to,use,for,resolving,placeholders,default,is,the,root,node;public,void,set,user,tree,path,string,user,tree,path,this,user,tree,path,user,tree,path
PreferencesPlaceholderConfigurer -> public void setUserTreePath(String userTreePath);1356735495;Set the path in the system preferences tree to use for resolving_placeholders. Default is the root node.;public void setUserTreePath(String userTreePath) {_		this.userTreePath = userTreePath__	};set,the,path,in,the,system,preferences,tree,to,use,for,resolving,placeholders,default,is,the,root,node;public,void,set,user,tree,path,string,user,tree,path,this,user,tree,path,user,tree,path
PreferencesPlaceholderConfigurer -> public void setUserTreePath(String userTreePath);1357119239;Set the path in the system preferences tree to use for resolving_placeholders. Default is the root node.;public void setUserTreePath(String userTreePath) {_		this.userTreePath = userTreePath__	};set,the,path,in,the,system,preferences,tree,to,use,for,resolving,placeholders,default,is,the,root,node;public,void,set,user,tree,path,string,user,tree,path,this,user,tree,path,user,tree,path
PreferencesPlaceholderConfigurer -> public void setUserTreePath(String userTreePath);1368482696;Set the path in the system preferences tree to use for resolving_placeholders. Default is the root node.;public void setUserTreePath(String userTreePath) {_		this.userTreePath = userTreePath__	};set,the,path,in,the,system,preferences,tree,to,use,for,resolving,placeholders,default,is,the,root,node;public,void,set,user,tree,path,string,user,tree,path,this,user,tree,path,user,tree,path
PreferencesPlaceholderConfigurer -> public void setUserTreePath(String userTreePath);1495868221;Set the path in the system preferences tree to use for resolving_placeholders. Default is the root node.;public void setUserTreePath(String userTreePath) {_		this.userTreePath = userTreePath__	};set,the,path,in,the,system,preferences,tree,to,use,for,resolving,placeholders,default,is,the,root,node;public,void,set,user,tree,path,string,user,tree,path,this,user,tree,path,user,tree,path
PreferencesPlaceholderConfigurer -> public void setUserTreePath(String userTreePath);1496837955;Set the path in the system preferences tree to use for resolving_placeholders. Default is the root node.;public void setUserTreePath(String userTreePath) {_		this.userTreePath = userTreePath__	};set,the,path,in,the,system,preferences,tree,to,use,for,resolving,placeholders,default,is,the,root,node;public,void,set,user,tree,path,string,user,tree,path,this,user,tree,path,user,tree,path
PreferencesPlaceholderConfigurer -> public void setUserTreePath(String userTreePath);1498780456;Set the path in the system preferences tree to use for resolving_placeholders. Default is the root node.;public void setUserTreePath(String userTreePath) {_		this.userTreePath = userTreePath__	};set,the,path,in,the,system,preferences,tree,to,use,for,resolving,placeholders,default,is,the,root,node;public,void,set,user,tree,path,string,user,tree,path,this,user,tree,path,user,tree,path
PreferencesPlaceholderConfigurer -> public void setUserTreePath(String userTreePath);1538724083;Set the path in the system preferences tree to use for resolving_placeholders. Default is the root node.;public void setUserTreePath(String userTreePath) {_		this.userTreePath = userTreePath__	};set,the,path,in,the,system,preferences,tree,to,use,for,resolving,placeholders,default,is,the,root,node;public,void,set,user,tree,path,string,user,tree,path,this,user,tree,path,user,tree,path
PreferencesPlaceholderConfigurer -> public void setUserTreePath(String userTreePath);1549554785;Set the path in the system preferences tree to use for resolving_placeholders. Default is the root node.;public void setUserTreePath(String userTreePath) {_		this.userTreePath = userTreePath__	};set,the,path,in,the,system,preferences,tree,to,use,for,resolving,placeholders,default,is,the,root,node;public,void,set,user,tree,path,string,user,tree,path,this,user,tree,path,user,tree,path
PreferencesPlaceholderConfigurer -> @Override 	protected String resolvePlaceholder(String placeholder, Properties props);1328020251;This implementation tries to resolve placeholders as keys first_in the user preferences, then in the system preferences, then in_the passed-in properties.;@Override_	protected String resolvePlaceholder(String placeholder, Properties props) {_		String path = null__		String key = placeholder__		int endOfPath = placeholder.lastIndexOf('/')__		if (endOfPath != -1) {_			path = placeholder.substring(0, endOfPath)__			key = placeholder.substring(endOfPath + 1)__		}_		String value = resolvePlaceholder(path, key, this.userPrefs)__		if (value == null) {_			value = resolvePlaceholder(path, key, this.systemPrefs)__			if (value == null) {_				value = props.getProperty(placeholder)__			}_		}_		return value__	};this,implementation,tries,to,resolve,placeholders,as,keys,first,in,the,user,preferences,then,in,the,system,preferences,then,in,the,passed,in,properties;override,protected,string,resolve,placeholder,string,placeholder,properties,props,string,path,null,string,key,placeholder,int,end,of,path,placeholder,last,index,of,if,end,of,path,1,path,placeholder,substring,0,end,of,path,key,placeholder,substring,end,of,path,1,string,value,resolve,placeholder,path,key,this,user,prefs,if,value,null,value,resolve,placeholder,path,key,this,system,prefs,if,value,null,value,props,get,property,placeholder,return,value
PreferencesPlaceholderConfigurer -> @Override 	protected String resolvePlaceholder(String placeholder, Properties props);1356735495;This implementation tries to resolve placeholders as keys first_in the user preferences, then in the system preferences, then in_the passed-in properties.;@Override_	protected String resolvePlaceholder(String placeholder, Properties props) {_		String path = null__		String key = placeholder__		int endOfPath = placeholder.lastIndexOf('/')__		if (endOfPath != -1) {_			path = placeholder.substring(0, endOfPath)__			key = placeholder.substring(endOfPath + 1)__		}_		String value = resolvePlaceholder(path, key, this.userPrefs)__		if (value == null) {_			value = resolvePlaceholder(path, key, this.systemPrefs)__			if (value == null) {_				value = props.getProperty(placeholder)__			}_		}_		return value__	};this,implementation,tries,to,resolve,placeholders,as,keys,first,in,the,user,preferences,then,in,the,system,preferences,then,in,the,passed,in,properties;override,protected,string,resolve,placeholder,string,placeholder,properties,props,string,path,null,string,key,placeholder,int,end,of,path,placeholder,last,index,of,if,end,of,path,1,path,placeholder,substring,0,end,of,path,key,placeholder,substring,end,of,path,1,string,value,resolve,placeholder,path,key,this,user,prefs,if,value,null,value,resolve,placeholder,path,key,this,system,prefs,if,value,null,value,props,get,property,placeholder,return,value
PreferencesPlaceholderConfigurer -> @Override 	protected String resolvePlaceholder(String placeholder, Properties props);1357119239;This implementation tries to resolve placeholders as keys first_in the user preferences, then in the system preferences, then in_the passed-in properties.;@Override_	protected String resolvePlaceholder(String placeholder, Properties props) {_		String path = null__		String key = placeholder__		int endOfPath = placeholder.lastIndexOf('/')__		if (endOfPath != -1) {_			path = placeholder.substring(0, endOfPath)__			key = placeholder.substring(endOfPath + 1)__		}_		String value = resolvePlaceholder(path, key, this.userPrefs)__		if (value == null) {_			value = resolvePlaceholder(path, key, this.systemPrefs)__			if (value == null) {_				value = props.getProperty(placeholder)__			}_		}_		return value__	};this,implementation,tries,to,resolve,placeholders,as,keys,first,in,the,user,preferences,then,in,the,system,preferences,then,in,the,passed,in,properties;override,protected,string,resolve,placeholder,string,placeholder,properties,props,string,path,null,string,key,placeholder,int,end,of,path,placeholder,last,index,of,if,end,of,path,1,path,placeholder,substring,0,end,of,path,key,placeholder,substring,end,of,path,1,string,value,resolve,placeholder,path,key,this,user,prefs,if,value,null,value,resolve,placeholder,path,key,this,system,prefs,if,value,null,value,props,get,property,placeholder,return,value
PreferencesPlaceholderConfigurer -> @Override 	protected String resolvePlaceholder(String placeholder, Properties props);1368482696;This implementation tries to resolve placeholders as keys first_in the user preferences, then in the system preferences, then in_the passed-in properties.;@Override_	protected String resolvePlaceholder(String placeholder, Properties props) {_		String path = null__		String key = placeholder__		int endOfPath = placeholder.lastIndexOf('/')__		if (endOfPath != -1) {_			path = placeholder.substring(0, endOfPath)__			key = placeholder.substring(endOfPath + 1)__		}_		String value = resolvePlaceholder(path, key, this.userPrefs)__		if (value == null) {_			value = resolvePlaceholder(path, key, this.systemPrefs)__			if (value == null) {_				value = props.getProperty(placeholder)__			}_		}_		return value__	};this,implementation,tries,to,resolve,placeholders,as,keys,first,in,the,user,preferences,then,in,the,system,preferences,then,in,the,passed,in,properties;override,protected,string,resolve,placeholder,string,placeholder,properties,props,string,path,null,string,key,placeholder,int,end,of,path,placeholder,last,index,of,if,end,of,path,1,path,placeholder,substring,0,end,of,path,key,placeholder,substring,end,of,path,1,string,value,resolve,placeholder,path,key,this,user,prefs,if,value,null,value,resolve,placeholder,path,key,this,system,prefs,if,value,null,value,props,get,property,placeholder,return,value
PreferencesPlaceholderConfigurer -> @Override 	protected String resolvePlaceholder(String placeholder, Properties props);1495868221;This implementation tries to resolve placeholders as keys first_in the user preferences, then in the system preferences, then in_the passed-in properties.;@Override_	protected String resolvePlaceholder(String placeholder, Properties props) {_		String path = null__		String key = placeholder__		int endOfPath = placeholder.lastIndexOf('/')__		if (endOfPath != -1) {_			path = placeholder.substring(0, endOfPath)__			key = placeholder.substring(endOfPath + 1)__		}_		String value = resolvePlaceholder(path, key, this.userPrefs)__		if (value == null) {_			value = resolvePlaceholder(path, key, this.systemPrefs)__			if (value == null) {_				value = props.getProperty(placeholder)__			}_		}_		return value__	};this,implementation,tries,to,resolve,placeholders,as,keys,first,in,the,user,preferences,then,in,the,system,preferences,then,in,the,passed,in,properties;override,protected,string,resolve,placeholder,string,placeholder,properties,props,string,path,null,string,key,placeholder,int,end,of,path,placeholder,last,index,of,if,end,of,path,1,path,placeholder,substring,0,end,of,path,key,placeholder,substring,end,of,path,1,string,value,resolve,placeholder,path,key,this,user,prefs,if,value,null,value,resolve,placeholder,path,key,this,system,prefs,if,value,null,value,props,get,property,placeholder,return,value
PreferencesPlaceholderConfigurer -> @Override 	protected String resolvePlaceholder(String placeholder, Properties props);1496837955;This implementation tries to resolve placeholders as keys first_in the user preferences, then in the system preferences, then in_the passed-in properties.;@Override_	protected String resolvePlaceholder(String placeholder, Properties props) {_		String path = null__		String key = placeholder__		int endOfPath = placeholder.lastIndexOf('/')__		if (endOfPath != -1) {_			path = placeholder.substring(0, endOfPath)__			key = placeholder.substring(endOfPath + 1)__		}_		String value = resolvePlaceholder(path, key, this.userPrefs)__		if (value == null) {_			value = resolvePlaceholder(path, key, this.systemPrefs)__			if (value == null) {_				value = props.getProperty(placeholder)__			}_		}_		return value__	};this,implementation,tries,to,resolve,placeholders,as,keys,first,in,the,user,preferences,then,in,the,system,preferences,then,in,the,passed,in,properties;override,protected,string,resolve,placeholder,string,placeholder,properties,props,string,path,null,string,key,placeholder,int,end,of,path,placeholder,last,index,of,if,end,of,path,1,path,placeholder,substring,0,end,of,path,key,placeholder,substring,end,of,path,1,string,value,resolve,placeholder,path,key,this,user,prefs,if,value,null,value,resolve,placeholder,path,key,this,system,prefs,if,value,null,value,props,get,property,placeholder,return,value
PreferencesPlaceholderConfigurer -> @Override 	protected String resolvePlaceholder(String placeholder, Properties props);1498780456;This implementation tries to resolve placeholders as keys first_in the user preferences, then in the system preferences, then in_the passed-in properties.;@Override_	protected String resolvePlaceholder(String placeholder, Properties props) {_		String path = null__		String key = placeholder__		int endOfPath = placeholder.lastIndexOf('/')__		if (endOfPath != -1) {_			path = placeholder.substring(0, endOfPath)__			key = placeholder.substring(endOfPath + 1)__		}_		String value = resolvePlaceholder(path, key, this.userPrefs)__		if (value == null) {_			value = resolvePlaceholder(path, key, this.systemPrefs)__			if (value == null) {_				value = props.getProperty(placeholder)__			}_		}_		return value__	};this,implementation,tries,to,resolve,placeholders,as,keys,first,in,the,user,preferences,then,in,the,system,preferences,then,in,the,passed,in,properties;override,protected,string,resolve,placeholder,string,placeholder,properties,props,string,path,null,string,key,placeholder,int,end,of,path,placeholder,last,index,of,if,end,of,path,1,path,placeholder,substring,0,end,of,path,key,placeholder,substring,end,of,path,1,string,value,resolve,placeholder,path,key,this,user,prefs,if,value,null,value,resolve,placeholder,path,key,this,system,prefs,if,value,null,value,props,get,property,placeholder,return,value
PreferencesPlaceholderConfigurer -> @Override 	protected String resolvePlaceholder(String placeholder, Properties props);1538724083;This implementation tries to resolve placeholders as keys first_in the user preferences, then in the system preferences, then in_the passed-in properties.;@Override_	protected String resolvePlaceholder(String placeholder, Properties props) {_		String path = null__		String key = placeholder__		int endOfPath = placeholder.lastIndexOf('/')__		if (endOfPath != -1) {_			path = placeholder.substring(0, endOfPath)__			key = placeholder.substring(endOfPath + 1)__		}_		String value = resolvePlaceholder(path, key, this.userPrefs)__		if (value == null) {_			value = resolvePlaceholder(path, key, this.systemPrefs)__			if (value == null) {_				value = props.getProperty(placeholder)__			}_		}_		return value__	};this,implementation,tries,to,resolve,placeholders,as,keys,first,in,the,user,preferences,then,in,the,system,preferences,then,in,the,passed,in,properties;override,protected,string,resolve,placeholder,string,placeholder,properties,props,string,path,null,string,key,placeholder,int,end,of,path,placeholder,last,index,of,if,end,of,path,1,path,placeholder,substring,0,end,of,path,key,placeholder,substring,end,of,path,1,string,value,resolve,placeholder,path,key,this,user,prefs,if,value,null,value,resolve,placeholder,path,key,this,system,prefs,if,value,null,value,props,get,property,placeholder,return,value
PreferencesPlaceholderConfigurer -> @Override 	protected String resolvePlaceholder(String placeholder, Properties props);1549554785;This implementation tries to resolve placeholders as keys first_in the user preferences, then in the system preferences, then in_the passed-in properties.;@Override_	protected String resolvePlaceholder(String placeholder, Properties props) {_		String path = null__		String key = placeholder__		int endOfPath = placeholder.lastIndexOf('/')__		if (endOfPath != -1) {_			path = placeholder.substring(0, endOfPath)__			key = placeholder.substring(endOfPath + 1)__		}_		String value = resolvePlaceholder(path, key, this.userPrefs)__		if (value == null) {_			value = resolvePlaceholder(path, key, this.systemPrefs)__			if (value == null) {_				value = props.getProperty(placeholder)__			}_		}_		return value__	};this,implementation,tries,to,resolve,placeholders,as,keys,first,in,the,user,preferences,then,in,the,system,preferences,then,in,the,passed,in,properties;override,protected,string,resolve,placeholder,string,placeholder,properties,props,string,path,null,string,key,placeholder,int,end,of,path,placeholder,last,index,of,if,end,of,path,1,path,placeholder,substring,0,end,of,path,key,placeholder,substring,end,of,path,1,string,value,resolve,placeholder,path,key,this,user,prefs,if,value,null,value,resolve,placeholder,path,key,this,system,prefs,if,value,null,value,props,get,property,placeholder,return,value
PreferencesPlaceholderConfigurer -> @Nullable 	protected String resolvePlaceholder(@Nullable String path, String key, Preferences preferences);1496837955;Resolve the given path and key against the given Preferences._@param path the preferences path (placeholder part before '/')_@param key the preferences key (placeholder part after '/')_@param preferences the Preferences to resolve against_@return the value for the placeholder, or {@code null} if none found;@Nullable_	protected String resolvePlaceholder(@Nullable String path, String key, Preferences preferences) {_		if (path != null) {_			 _			try {_				if (preferences.nodeExists(path)) {_					return preferences.node(path).get(key, null)__				}_				else {_					return null__				}_			}_			catch (BackingStoreException ex) {_				throw new BeanDefinitionStoreException("Cannot access specified node path [" + path + "]", ex)__			}_		}_		else {_			return preferences.get(key, null)__		}_	};resolve,the,given,path,and,key,against,the,given,preferences,param,path,the,preferences,path,placeholder,part,before,param,key,the,preferences,key,placeholder,part,after,param,preferences,the,preferences,to,resolve,against,return,the,value,for,the,placeholder,or,code,null,if,none,found;nullable,protected,string,resolve,placeholder,nullable,string,path,string,key,preferences,preferences,if,path,null,try,if,preferences,node,exists,path,return,preferences,node,path,get,key,null,else,return,null,catch,backing,store,exception,ex,throw,new,bean,definition,store,exception,cannot,access,specified,node,path,path,ex,else,return,preferences,get,key,null
PreferencesPlaceholderConfigurer -> @Nullable 	protected String resolvePlaceholder(@Nullable String path, String key, Preferences preferences);1498780456;Resolve the given path and key against the given Preferences._@param path the preferences path (placeholder part before '/')_@param key the preferences key (placeholder part after '/')_@param preferences the Preferences to resolve against_@return the value for the placeholder, or {@code null} if none found;@Nullable_	protected String resolvePlaceholder(@Nullable String path, String key, Preferences preferences) {_		if (path != null) {_			 _			try {_				if (preferences.nodeExists(path)) {_					return preferences.node(path).get(key, null)__				}_				else {_					return null__				}_			}_			catch (BackingStoreException ex) {_				throw new BeanDefinitionStoreException("Cannot access specified node path [" + path + "]", ex)__			}_		}_		else {_			return preferences.get(key, null)__		}_	};resolve,the,given,path,and,key,against,the,given,preferences,param,path,the,preferences,path,placeholder,part,before,param,key,the,preferences,key,placeholder,part,after,param,preferences,the,preferences,to,resolve,against,return,the,value,for,the,placeholder,or,code,null,if,none,found;nullable,protected,string,resolve,placeholder,nullable,string,path,string,key,preferences,preferences,if,path,null,try,if,preferences,node,exists,path,return,preferences,node,path,get,key,null,else,return,null,catch,backing,store,exception,ex,throw,new,bean,definition,store,exception,cannot,access,specified,node,path,path,ex,else,return,preferences,get,key,null
PreferencesPlaceholderConfigurer -> @Nullable 	protected String resolvePlaceholder(@Nullable String path, String key, Preferences preferences);1538724083;Resolve the given path and key against the given Preferences._@param path the preferences path (placeholder part before '/')_@param key the preferences key (placeholder part after '/')_@param preferences the Preferences to resolve against_@return the value for the placeholder, or {@code null} if none found;@Nullable_	protected String resolvePlaceholder(@Nullable String path, String key, Preferences preferences) {_		if (path != null) {_			_			try {_				if (preferences.nodeExists(path)) {_					return preferences.node(path).get(key, null)__				}_				else {_					return null__				}_			}_			catch (BackingStoreException ex) {_				throw new BeanDefinitionStoreException("Cannot access specified node path [" + path + "]", ex)__			}_		}_		else {_			return preferences.get(key, null)__		}_	};resolve,the,given,path,and,key,against,the,given,preferences,param,path,the,preferences,path,placeholder,part,before,param,key,the,preferences,key,placeholder,part,after,param,preferences,the,preferences,to,resolve,against,return,the,value,for,the,placeholder,or,code,null,if,none,found;nullable,protected,string,resolve,placeholder,nullable,string,path,string,key,preferences,preferences,if,path,null,try,if,preferences,node,exists,path,return,preferences,node,path,get,key,null,else,return,null,catch,backing,store,exception,ex,throw,new,bean,definition,store,exception,cannot,access,specified,node,path,path,ex,else,return,preferences,get,key,null
PreferencesPlaceholderConfigurer -> @Nullable 	protected String resolvePlaceholder(@Nullable String path, String key, Preferences preferences);1549554785;Resolve the given path and key against the given Preferences._@param path the preferences path (placeholder part before '/')_@param key the preferences key (placeholder part after '/')_@param preferences the Preferences to resolve against_@return the value for the placeholder, or {@code null} if none found;@Nullable_	protected String resolvePlaceholder(@Nullable String path, String key, Preferences preferences) {_		if (path != null) {_			_			try {_				if (preferences.nodeExists(path)) {_					return preferences.node(path).get(key, null)__				}_				else {_					return null__				}_			}_			catch (BackingStoreException ex) {_				throw new BeanDefinitionStoreException("Cannot access specified node path [" + path + "]", ex)__			}_		}_		else {_			return preferences.get(key, null)__		}_	};resolve,the,given,path,and,key,against,the,given,preferences,param,path,the,preferences,path,placeholder,part,before,param,key,the,preferences,key,placeholder,part,after,param,preferences,the,preferences,to,resolve,against,return,the,value,for,the,placeholder,or,code,null,if,none,found;nullable,protected,string,resolve,placeholder,nullable,string,path,string,key,preferences,preferences,if,path,null,try,if,preferences,node,exists,path,return,preferences,node,path,get,key,null,else,return,null,catch,backing,store,exception,ex,throw,new,bean,definition,store,exception,cannot,access,specified,node,path,path,ex,else,return,preferences,get,key,null
PreferencesPlaceholderConfigurer -> public void afterPropertiesSet();1328020251;This implementation eagerly fetches the Preferences instances_for the required system and user tree nodes.;public void afterPropertiesSet() {_		this.systemPrefs = (this.systemTreePath != null) ?_		    Preferences.systemRoot().node(this.systemTreePath) : Preferences.systemRoot()__		this.userPrefs = (this.userTreePath != null) ?_		    Preferences.userRoot().node(this.userTreePath) : Preferences.userRoot()__	};this,implementation,eagerly,fetches,the,preferences,instances,for,the,required,system,and,user,tree,nodes;public,void,after,properties,set,this,system,prefs,this,system,tree,path,null,preferences,system,root,node,this,system,tree,path,preferences,system,root,this,user,prefs,this,user,tree,path,null,preferences,user,root,node,this,user,tree,path,preferences,user,root
PreferencesPlaceholderConfigurer -> public void afterPropertiesSet();1357119239;This implementation eagerly fetches the Preferences instances_for the required system and user tree nodes.;public void afterPropertiesSet() {_		this.systemPrefs = (this.systemTreePath != null) ?_				Preferences.systemRoot().node(this.systemTreePath) : Preferences.systemRoot()__		this.userPrefs = (this.userTreePath != null) ?_				Preferences.userRoot().node(this.userTreePath) : Preferences.userRoot()__	};this,implementation,eagerly,fetches,the,preferences,instances,for,the,required,system,and,user,tree,nodes;public,void,after,properties,set,this,system,prefs,this,system,tree,path,null,preferences,system,root,node,this,system,tree,path,preferences,system,root,this,user,prefs,this,user,tree,path,null,preferences,user,root,node,this,user,tree,path,preferences,user,root
PreferencesPlaceholderConfigurer -> protected String resolvePlaceholder(String path, String key, Preferences preferences);1328020251;Resolve the given path and key against the given Preferences._@param path the preferences path (placeholder part before '/')_@param key the preferences key (placeholder part after '/')_@param preferences the Preferences to resolve against_@return the value for the placeholder, or <code>null</code> if none found;protected String resolvePlaceholder(String path, String key, Preferences preferences) {_		if (path != null) {_			 _			try {_				if (preferences.nodeExists(path)) {_					return preferences.node(path).get(key, null)__				}_				else {_					return null__				}_			}_			catch (BackingStoreException ex) {_				throw new BeanDefinitionStoreException("Cannot access specified node path [" + path + "]", ex)__			}_		}_		else {_			return preferences.get(key, null)__		}_	};resolve,the,given,path,and,key,against,the,given,preferences,param,path,the,preferences,path,placeholder,part,before,param,key,the,preferences,key,placeholder,part,after,param,preferences,the,preferences,to,resolve,against,return,the,value,for,the,placeholder,or,code,null,code,if,none,found;protected,string,resolve,placeholder,string,path,string,key,preferences,preferences,if,path,null,try,if,preferences,node,exists,path,return,preferences,node,path,get,key,null,else,return,null,catch,backing,store,exception,ex,throw,new,bean,definition,store,exception,cannot,access,specified,node,path,path,ex,else,return,preferences,get,key,null
PreferencesPlaceholderConfigurer -> protected String resolvePlaceholder(String path, String key, Preferences preferences);1356735495;Resolve the given path and key against the given Preferences._@param path the preferences path (placeholder part before '/')_@param key the preferences key (placeholder part after '/')_@param preferences the Preferences to resolve against_@return the value for the placeholder, or {@code null} if none found;protected String resolvePlaceholder(String path, String key, Preferences preferences) {_		if (path != null) {_			 _			try {_				if (preferences.nodeExists(path)) {_					return preferences.node(path).get(key, null)__				}_				else {_					return null__				}_			}_			catch (BackingStoreException ex) {_				throw new BeanDefinitionStoreException("Cannot access specified node path [" + path + "]", ex)__			}_		}_		else {_			return preferences.get(key, null)__		}_	};resolve,the,given,path,and,key,against,the,given,preferences,param,path,the,preferences,path,placeholder,part,before,param,key,the,preferences,key,placeholder,part,after,param,preferences,the,preferences,to,resolve,against,return,the,value,for,the,placeholder,or,code,null,if,none,found;protected,string,resolve,placeholder,string,path,string,key,preferences,preferences,if,path,null,try,if,preferences,node,exists,path,return,preferences,node,path,get,key,null,else,return,null,catch,backing,store,exception,ex,throw,new,bean,definition,store,exception,cannot,access,specified,node,path,path,ex,else,return,preferences,get,key,null
PreferencesPlaceholderConfigurer -> protected String resolvePlaceholder(String path, String key, Preferences preferences);1357119239;Resolve the given path and key against the given Preferences._@param path the preferences path (placeholder part before '/')_@param key the preferences key (placeholder part after '/')_@param preferences the Preferences to resolve against_@return the value for the placeholder, or {@code null} if none found;protected String resolvePlaceholder(String path, String key, Preferences preferences) {_		if (path != null) {_			 _			try {_				if (preferences.nodeExists(path)) {_					return preferences.node(path).get(key, null)__				}_				else {_					return null__				}_			}_			catch (BackingStoreException ex) {_				throw new BeanDefinitionStoreException("Cannot access specified node path [" + path + "]", ex)__			}_		}_		else {_			return preferences.get(key, null)__		}_	};resolve,the,given,path,and,key,against,the,given,preferences,param,path,the,preferences,path,placeholder,part,before,param,key,the,preferences,key,placeholder,part,after,param,preferences,the,preferences,to,resolve,against,return,the,value,for,the,placeholder,or,code,null,if,none,found;protected,string,resolve,placeholder,string,path,string,key,preferences,preferences,if,path,null,try,if,preferences,node,exists,path,return,preferences,node,path,get,key,null,else,return,null,catch,backing,store,exception,ex,throw,new,bean,definition,store,exception,cannot,access,specified,node,path,path,ex,else,return,preferences,get,key,null
PreferencesPlaceholderConfigurer -> protected String resolvePlaceholder(String path, String key, Preferences preferences);1368482696;Resolve the given path and key against the given Preferences._@param path the preferences path (placeholder part before '/')_@param key the preferences key (placeholder part after '/')_@param preferences the Preferences to resolve against_@return the value for the placeholder, or {@code null} if none found;protected String resolvePlaceholder(String path, String key, Preferences preferences) {_		if (path != null) {_			 _			try {_				if (preferences.nodeExists(path)) {_					return preferences.node(path).get(key, null)__				}_				else {_					return null__				}_			}_			catch (BackingStoreException ex) {_				throw new BeanDefinitionStoreException("Cannot access specified node path [" + path + "]", ex)__			}_		}_		else {_			return preferences.get(key, null)__		}_	};resolve,the,given,path,and,key,against,the,given,preferences,param,path,the,preferences,path,placeholder,part,before,param,key,the,preferences,key,placeholder,part,after,param,preferences,the,preferences,to,resolve,against,return,the,value,for,the,placeholder,or,code,null,if,none,found;protected,string,resolve,placeholder,string,path,string,key,preferences,preferences,if,path,null,try,if,preferences,node,exists,path,return,preferences,node,path,get,key,null,else,return,null,catch,backing,store,exception,ex,throw,new,bean,definition,store,exception,cannot,access,specified,node,path,path,ex,else,return,preferences,get,key,null
PreferencesPlaceholderConfigurer -> @Override 	public void afterPropertiesSet();1356735495;This implementation eagerly fetches the Preferences instances_for the required system and user tree nodes.;@Override_	public void afterPropertiesSet() {_		this.systemPrefs = (this.systemTreePath != null) ?_				Preferences.systemRoot().node(this.systemTreePath) : Preferences.systemRoot()__		this.userPrefs = (this.userTreePath != null) ?_				Preferences.userRoot().node(this.userTreePath) : Preferences.userRoot()__	};this,implementation,eagerly,fetches,the,preferences,instances,for,the,required,system,and,user,tree,nodes;override,public,void,after,properties,set,this,system,prefs,this,system,tree,path,null,preferences,system,root,node,this,system,tree,path,preferences,system,root,this,user,prefs,this,user,tree,path,null,preferences,user,root,node,this,user,tree,path,preferences,user,root
PreferencesPlaceholderConfigurer -> @Override 	public void afterPropertiesSet();1368482696;This implementation eagerly fetches the Preferences instances_for the required system and user tree nodes.;@Override_	public void afterPropertiesSet() {_		this.systemPrefs = (this.systemTreePath != null) ?_				Preferences.systemRoot().node(this.systemTreePath) : Preferences.systemRoot()__		this.userPrefs = (this.userTreePath != null) ?_				Preferences.userRoot().node(this.userTreePath) : Preferences.userRoot()__	};this,implementation,eagerly,fetches,the,preferences,instances,for,the,required,system,and,user,tree,nodes;override,public,void,after,properties,set,this,system,prefs,this,system,tree,path,null,preferences,system,root,node,this,system,tree,path,preferences,system,root,this,user,prefs,this,user,tree,path,null,preferences,user,root,node,this,user,tree,path,preferences,user,root
PreferencesPlaceholderConfigurer -> @Override 	public void afterPropertiesSet();1495868221;This implementation eagerly fetches the Preferences instances_for the required system and user tree nodes.;@Override_	public void afterPropertiesSet() {_		this.systemPrefs = (this.systemTreePath != null) ?_				Preferences.systemRoot().node(this.systemTreePath) : Preferences.systemRoot()__		this.userPrefs = (this.userTreePath != null) ?_				Preferences.userRoot().node(this.userTreePath) : Preferences.userRoot()__	};this,implementation,eagerly,fetches,the,preferences,instances,for,the,required,system,and,user,tree,nodes;override,public,void,after,properties,set,this,system,prefs,this,system,tree,path,null,preferences,system,root,node,this,system,tree,path,preferences,system,root,this,user,prefs,this,user,tree,path,null,preferences,user,root,node,this,user,tree,path,preferences,user,root
PreferencesPlaceholderConfigurer -> @Override 	public void afterPropertiesSet();1496837955;This implementation eagerly fetches the Preferences instances_for the required system and user tree nodes.;@Override_	public void afterPropertiesSet() {_		this.systemPrefs = (this.systemTreePath != null) ?_				Preferences.systemRoot().node(this.systemTreePath) : Preferences.systemRoot()__		this.userPrefs = (this.userTreePath != null) ?_				Preferences.userRoot().node(this.userTreePath) : Preferences.userRoot()__	};this,implementation,eagerly,fetches,the,preferences,instances,for,the,required,system,and,user,tree,nodes;override,public,void,after,properties,set,this,system,prefs,this,system,tree,path,null,preferences,system,root,node,this,system,tree,path,preferences,system,root,this,user,prefs,this,user,tree,path,null,preferences,user,root,node,this,user,tree,path,preferences,user,root
PreferencesPlaceholderConfigurer -> @Override 	public void afterPropertiesSet();1498780456;This implementation eagerly fetches the Preferences instances_for the required system and user tree nodes.;@Override_	public void afterPropertiesSet() {_		if (this.systemTreePath != null) {_			this.systemPrefs = this.systemPrefs.node(this.systemTreePath)__		}_		if (this.userTreePath != null) {_			this.userPrefs = this.userPrefs.node(this.userTreePath)__		}_	};this,implementation,eagerly,fetches,the,preferences,instances,for,the,required,system,and,user,tree,nodes;override,public,void,after,properties,set,if,this,system,tree,path,null,this,system,prefs,this,system,prefs,node,this,system,tree,path,if,this,user,tree,path,null,this,user,prefs,this,user,prefs,node,this,user,tree,path
PreferencesPlaceholderConfigurer -> @Override 	public void afterPropertiesSet();1538724083;This implementation eagerly fetches the Preferences instances_for the required system and user tree nodes.;@Override_	public void afterPropertiesSet() {_		if (this.systemTreePath != null) {_			this.systemPrefs = this.systemPrefs.node(this.systemTreePath)__		}_		if (this.userTreePath != null) {_			this.userPrefs = this.userPrefs.node(this.userTreePath)__		}_	};this,implementation,eagerly,fetches,the,preferences,instances,for,the,required,system,and,user,tree,nodes;override,public,void,after,properties,set,if,this,system,tree,path,null,this,system,prefs,this,system,prefs,node,this,system,tree,path,if,this,user,tree,path,null,this,user,prefs,this,user,prefs,node,this,user,tree,path
PreferencesPlaceholderConfigurer -> @Override 	public void afterPropertiesSet();1549554785;This implementation eagerly fetches the Preferences instances_for the required system and user tree nodes.;@Override_	public void afterPropertiesSet() {_		if (this.systemTreePath != null) {_			this.systemPrefs = this.systemPrefs.node(this.systemTreePath)__		}_		if (this.userTreePath != null) {_			this.userPrefs = this.userPrefs.node(this.userTreePath)__		}_	};this,implementation,eagerly,fetches,the,preferences,instances,for,the,required,system,and,user,tree,nodes;override,public,void,after,properties,set,if,this,system,tree,path,null,this,system,prefs,this,system,prefs,node,this,system,tree,path,if,this,user,tree,path,null,this,user,prefs,this,user,prefs,node,this,user,tree,path
PreferencesPlaceholderConfigurer -> public void setSystemTreePath(String systemTreePath);1328020251;Set the path in the system preferences tree to use for resolving_placeholders. Default is the root node.;public void setSystemTreePath(String systemTreePath) {_		this.systemTreePath = systemTreePath__	};set,the,path,in,the,system,preferences,tree,to,use,for,resolving,placeholders,default,is,the,root,node;public,void,set,system,tree,path,string,system,tree,path,this,system,tree,path,system,tree,path
PreferencesPlaceholderConfigurer -> public void setSystemTreePath(String systemTreePath);1356735495;Set the path in the system preferences tree to use for resolving_placeholders. Default is the root node.;public void setSystemTreePath(String systemTreePath) {_		this.systemTreePath = systemTreePath__	};set,the,path,in,the,system,preferences,tree,to,use,for,resolving,placeholders,default,is,the,root,node;public,void,set,system,tree,path,string,system,tree,path,this,system,tree,path,system,tree,path
PreferencesPlaceholderConfigurer -> public void setSystemTreePath(String systemTreePath);1357119239;Set the path in the system preferences tree to use for resolving_placeholders. Default is the root node.;public void setSystemTreePath(String systemTreePath) {_		this.systemTreePath = systemTreePath__	};set,the,path,in,the,system,preferences,tree,to,use,for,resolving,placeholders,default,is,the,root,node;public,void,set,system,tree,path,string,system,tree,path,this,system,tree,path,system,tree,path
PreferencesPlaceholderConfigurer -> public void setSystemTreePath(String systemTreePath);1368482696;Set the path in the system preferences tree to use for resolving_placeholders. Default is the root node.;public void setSystemTreePath(String systemTreePath) {_		this.systemTreePath = systemTreePath__	};set,the,path,in,the,system,preferences,tree,to,use,for,resolving,placeholders,default,is,the,root,node;public,void,set,system,tree,path,string,system,tree,path,this,system,tree,path,system,tree,path
PreferencesPlaceholderConfigurer -> public void setSystemTreePath(String systemTreePath);1495868221;Set the path in the system preferences tree to use for resolving_placeholders. Default is the root node.;public void setSystemTreePath(String systemTreePath) {_		this.systemTreePath = systemTreePath__	};set,the,path,in,the,system,preferences,tree,to,use,for,resolving,placeholders,default,is,the,root,node;public,void,set,system,tree,path,string,system,tree,path,this,system,tree,path,system,tree,path
PreferencesPlaceholderConfigurer -> public void setSystemTreePath(String systemTreePath);1496837955;Set the path in the system preferences tree to use for resolving_placeholders. Default is the root node.;public void setSystemTreePath(String systemTreePath) {_		this.systemTreePath = systemTreePath__	};set,the,path,in,the,system,preferences,tree,to,use,for,resolving,placeholders,default,is,the,root,node;public,void,set,system,tree,path,string,system,tree,path,this,system,tree,path,system,tree,path
PreferencesPlaceholderConfigurer -> public void setSystemTreePath(String systemTreePath);1498780456;Set the path in the system preferences tree to use for resolving_placeholders. Default is the root node.;public void setSystemTreePath(String systemTreePath) {_		this.systemTreePath = systemTreePath__	};set,the,path,in,the,system,preferences,tree,to,use,for,resolving,placeholders,default,is,the,root,node;public,void,set,system,tree,path,string,system,tree,path,this,system,tree,path,system,tree,path
PreferencesPlaceholderConfigurer -> public void setSystemTreePath(String systemTreePath);1538724083;Set the path in the system preferences tree to use for resolving_placeholders. Default is the root node.;public void setSystemTreePath(String systemTreePath) {_		this.systemTreePath = systemTreePath__	};set,the,path,in,the,system,preferences,tree,to,use,for,resolving,placeholders,default,is,the,root,node;public,void,set,system,tree,path,string,system,tree,path,this,system,tree,path,system,tree,path
PreferencesPlaceholderConfigurer -> public void setSystemTreePath(String systemTreePath);1549554785;Set the path in the system preferences tree to use for resolving_placeholders. Default is the root node.;public void setSystemTreePath(String systemTreePath) {_		this.systemTreePath = systemTreePath__	};set,the,path,in,the,system,preferences,tree,to,use,for,resolving,placeholders,default,is,the,root,node;public,void,set,system,tree,path,string,system,tree,path,this,system,tree,path,system,tree,path
