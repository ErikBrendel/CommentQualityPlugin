# id;timestamp;commentText;codeText;commentWords;codeWords
BeanWrapper -> Class<?> getWrappedClass()_;1385412762;Return the type of the wrapped JavaBean object._@return the type of the wrapped bean instance,_or {@code null} if no wrapped object has been set;Class<?> getWrappedClass()_;return,the,type,of,the,wrapped,java,bean,object,return,the,type,of,the,wrapped,bean,instance,or,code,null,if,no,wrapped,object,has,been,set;class,get,wrapped,class
BeanWrapper -> Class<?> getWrappedClass()_;1390868759;Return the type of the wrapped JavaBean object._@return the type of the wrapped bean instance,_or {@code null} if no wrapped object has been set;Class<?> getWrappedClass()_;return,the,type,of,the,wrapped,java,bean,object,return,the,type,of,the,wrapped,bean,instance,or,code,null,if,no,wrapped,object,has,been,set;class,get,wrapped,class
BeanWrapper -> Class<?> getWrappedClass()_;1403803322;Return the type of the wrapped JavaBean object._@return the type of the wrapped bean instance,_or {@code null} if no wrapped object has been set;Class<?> getWrappedClass()_;return,the,type,of,the,wrapped,java,bean,object,return,the,type,of,the,wrapped,bean,instance,or,code,null,if,no,wrapped,object,has,been,set;class,get,wrapped,class
BeanWrapper -> Class<?> getWrappedClass()_;1460032042;Return the type of the wrapped JavaBean object._@return the type of the wrapped bean instance,_or {@code null} if no wrapped object has been set;Class<?> getWrappedClass()_;return,the,type,of,the,wrapped,java,bean,object,return,the,type,of,the,wrapped,bean,instance,or,code,null,if,no,wrapped,object,has,been,set;class,get,wrapped,class
BeanWrapper -> Class<?> getWrappedClass()_;1496837955;Return the type of the wrapped bean instance.;Class<?> getWrappedClass()_;return,the,type,of,the,wrapped,bean,instance;class,get,wrapped,class
BeanWrapper -> void setAutoGrowCollectionLimit(int autoGrowCollectionLimit)_;1328020251;Specify a limit for array and collection auto-growing._<p>Default is unlimited on a plain BeanWrapper.;void setAutoGrowCollectionLimit(int autoGrowCollectionLimit)_;specify,a,limit,for,array,and,collection,auto,growing,p,default,is,unlimited,on,a,plain,bean,wrapper;void,set,auto,grow,collection,limit,int,auto,grow,collection,limit
BeanWrapper -> void setAutoGrowCollectionLimit(int autoGrowCollectionLimit)_;1356735495;Specify a limit for array and collection auto-growing._<p>Default is unlimited on a plain BeanWrapper.;void setAutoGrowCollectionLimit(int autoGrowCollectionLimit)_;specify,a,limit,for,array,and,collection,auto,growing,p,default,is,unlimited,on,a,plain,bean,wrapper;void,set,auto,grow,collection,limit,int,auto,grow,collection,limit
BeanWrapper -> void setAutoGrowCollectionLimit(int autoGrowCollectionLimit)_;1385412762;Specify a limit for array and collection auto-growing._<p>Default is unlimited on a plain BeanWrapper.;void setAutoGrowCollectionLimit(int autoGrowCollectionLimit)_;specify,a,limit,for,array,and,collection,auto,growing,p,default,is,unlimited,on,a,plain,bean,wrapper;void,set,auto,grow,collection,limit,int,auto,grow,collection,limit
BeanWrapper -> void setAutoGrowCollectionLimit(int autoGrowCollectionLimit)_;1390868759;Specify a limit for array and collection auto-growing._<p>Default is unlimited on a plain BeanWrapper.;void setAutoGrowCollectionLimit(int autoGrowCollectionLimit)_;specify,a,limit,for,array,and,collection,auto,growing,p,default,is,unlimited,on,a,plain,bean,wrapper;void,set,auto,grow,collection,limit,int,auto,grow,collection,limit
BeanWrapper -> void setAutoGrowCollectionLimit(int autoGrowCollectionLimit)_;1403803322;Specify a limit for array and collection auto-growing._<p>Default is unlimited on a plain BeanWrapper.;void setAutoGrowCollectionLimit(int autoGrowCollectionLimit)_;specify,a,limit,for,array,and,collection,auto,growing,p,default,is,unlimited,on,a,plain,bean,wrapper;void,set,auto,grow,collection,limit,int,auto,grow,collection,limit
BeanWrapper -> void setAutoGrowCollectionLimit(int autoGrowCollectionLimit)_;1460032042;Specify a limit for array and collection auto-growing._<p>Default is unlimited on a plain BeanWrapper._@since 4.1;void setAutoGrowCollectionLimit(int autoGrowCollectionLimit)_;specify,a,limit,for,array,and,collection,auto,growing,p,default,is,unlimited,on,a,plain,bean,wrapper,since,4,1;void,set,auto,grow,collection,limit,int,auto,grow,collection,limit
BeanWrapper -> void setAutoGrowCollectionLimit(int autoGrowCollectionLimit)_;1495868221;Specify a limit for array and collection auto-growing._<p>Default is unlimited on a plain BeanWrapper._@since 4.1;void setAutoGrowCollectionLimit(int autoGrowCollectionLimit)_;specify,a,limit,for,array,and,collection,auto,growing,p,default,is,unlimited,on,a,plain,bean,wrapper,since,4,1;void,set,auto,grow,collection,limit,int,auto,grow,collection,limit
BeanWrapper -> void setAutoGrowCollectionLimit(int autoGrowCollectionLimit)_;1496837955;Specify a limit for array and collection auto-growing._<p>Default is unlimited on a plain BeanWrapper._@since 4.1;void setAutoGrowCollectionLimit(int autoGrowCollectionLimit)_;specify,a,limit,for,array,and,collection,auto,growing,p,default,is,unlimited,on,a,plain,bean,wrapper,since,4,1;void,set,auto,grow,collection,limit,int,auto,grow,collection,limit
BeanWrapper -> PropertyDescriptor getPropertyDescriptor(String propertyName) throws InvalidPropertyException_;1328020251;Obtain the property descriptor for a specific property_of the wrapped object._@param propertyName the property to obtain the descriptor for_(may be a nested path, but no indexed/mapped property)_@return the property descriptor for the specified property_@throws InvalidPropertyException if there is no such property;PropertyDescriptor getPropertyDescriptor(String propertyName) throws InvalidPropertyException_;obtain,the,property,descriptor,for,a,specific,property,of,the,wrapped,object,param,property,name,the,property,to,obtain,the,descriptor,for,may,be,a,nested,path,but,no,indexed,mapped,property,return,the,property,descriptor,for,the,specified,property,throws,invalid,property,exception,if,there,is,no,such,property;property,descriptor,get,property,descriptor,string,property,name,throws,invalid,property,exception
BeanWrapper -> PropertyDescriptor getPropertyDescriptor(String propertyName) throws InvalidPropertyException_;1356735495;Obtain the property descriptor for a specific property_of the wrapped object._@param propertyName the property to obtain the descriptor for_(may be a nested path, but no indexed/mapped property)_@return the property descriptor for the specified property_@throws InvalidPropertyException if there is no such property;PropertyDescriptor getPropertyDescriptor(String propertyName) throws InvalidPropertyException_;obtain,the,property,descriptor,for,a,specific,property,of,the,wrapped,object,param,property,name,the,property,to,obtain,the,descriptor,for,may,be,a,nested,path,but,no,indexed,mapped,property,return,the,property,descriptor,for,the,specified,property,throws,invalid,property,exception,if,there,is,no,such,property;property,descriptor,get,property,descriptor,string,property,name,throws,invalid,property,exception
BeanWrapper -> PropertyDescriptor getPropertyDescriptor(String propertyName) throws InvalidPropertyException_;1385412762;Obtain the property descriptor for a specific property_of the wrapped object._@param propertyName the property to obtain the descriptor for_(may be a nested path, but no indexed/mapped property)_@return the property descriptor for the specified property_@throws InvalidPropertyException if there is no such property;PropertyDescriptor getPropertyDescriptor(String propertyName) throws InvalidPropertyException_;obtain,the,property,descriptor,for,a,specific,property,of,the,wrapped,object,param,property,name,the,property,to,obtain,the,descriptor,for,may,be,a,nested,path,but,no,indexed,mapped,property,return,the,property,descriptor,for,the,specified,property,throws,invalid,property,exception,if,there,is,no,such,property;property,descriptor,get,property,descriptor,string,property,name,throws,invalid,property,exception
BeanWrapper -> PropertyDescriptor getPropertyDescriptor(String propertyName) throws InvalidPropertyException_;1390868759;Obtain the property descriptor for a specific property_of the wrapped object._@param propertyName the property to obtain the descriptor for_(may be a nested path, but no indexed/mapped property)_@return the property descriptor for the specified property_@throws InvalidPropertyException if there is no such property;PropertyDescriptor getPropertyDescriptor(String propertyName) throws InvalidPropertyException_;obtain,the,property,descriptor,for,a,specific,property,of,the,wrapped,object,param,property,name,the,property,to,obtain,the,descriptor,for,may,be,a,nested,path,but,no,indexed,mapped,property,return,the,property,descriptor,for,the,specified,property,throws,invalid,property,exception,if,there,is,no,such,property;property,descriptor,get,property,descriptor,string,property,name,throws,invalid,property,exception
BeanWrapper -> PropertyDescriptor getPropertyDescriptor(String propertyName) throws InvalidPropertyException_;1403803322;Obtain the property descriptor for a specific property_of the wrapped object._@param propertyName the property to obtain the descriptor for_(may be a nested path, but no indexed/mapped property)_@return the property descriptor for the specified property_@throws InvalidPropertyException if there is no such property;PropertyDescriptor getPropertyDescriptor(String propertyName) throws InvalidPropertyException_;obtain,the,property,descriptor,for,a,specific,property,of,the,wrapped,object,param,property,name,the,property,to,obtain,the,descriptor,for,may,be,a,nested,path,but,no,indexed,mapped,property,return,the,property,descriptor,for,the,specified,property,throws,invalid,property,exception,if,there,is,no,such,property;property,descriptor,get,property,descriptor,string,property,name,throws,invalid,property,exception
BeanWrapper -> PropertyDescriptor getPropertyDescriptor(String propertyName) throws InvalidPropertyException_;1460032042;Obtain the property descriptor for a specific property_of the wrapped object._@param propertyName the property to obtain the descriptor for_(may be a nested path, but no indexed/mapped property)_@return the property descriptor for the specified property_@throws InvalidPropertyException if there is no such property;PropertyDescriptor getPropertyDescriptor(String propertyName) throws InvalidPropertyException_;obtain,the,property,descriptor,for,a,specific,property,of,the,wrapped,object,param,property,name,the,property,to,obtain,the,descriptor,for,may,be,a,nested,path,but,no,indexed,mapped,property,return,the,property,descriptor,for,the,specified,property,throws,invalid,property,exception,if,there,is,no,such,property;property,descriptor,get,property,descriptor,string,property,name,throws,invalid,property,exception
BeanWrapper -> PropertyDescriptor getPropertyDescriptor(String propertyName) throws InvalidPropertyException_;1495868221;Obtain the property descriptor for a specific property_of the wrapped object._@param propertyName the property to obtain the descriptor for_(may be a nested path, but no indexed/mapped property)_@return the property descriptor for the specified property_@throws InvalidPropertyException if there is no such property;PropertyDescriptor getPropertyDescriptor(String propertyName) throws InvalidPropertyException_;obtain,the,property,descriptor,for,a,specific,property,of,the,wrapped,object,param,property,name,the,property,to,obtain,the,descriptor,for,may,be,a,nested,path,but,no,indexed,mapped,property,return,the,property,descriptor,for,the,specified,property,throws,invalid,property,exception,if,there,is,no,such,property;property,descriptor,get,property,descriptor,string,property,name,throws,invalid,property,exception
BeanWrapper -> PropertyDescriptor getPropertyDescriptor(String propertyName) throws InvalidPropertyException_;1496837955;Obtain the property descriptor for a specific property_of the wrapped object._@param propertyName the property to obtain the descriptor for_(may be a nested path, but no indexed/mapped property)_@return the property descriptor for the specified property_@throws InvalidPropertyException if there is no such property;PropertyDescriptor getPropertyDescriptor(String propertyName) throws InvalidPropertyException_;obtain,the,property,descriptor,for,a,specific,property,of,the,wrapped,object,param,property,name,the,property,to,obtain,the,descriptor,for,may,be,a,nested,path,but,no,indexed,mapped,property,return,the,property,descriptor,for,the,specified,property,throws,invalid,property,exception,if,there,is,no,such,property;property,descriptor,get,property,descriptor,string,property,name,throws,invalid,property,exception
BeanWrapper -> int getAutoGrowCollectionLimit()_;1328020251;Return the limit for array and collection auto-growing.;int getAutoGrowCollectionLimit()_;return,the,limit,for,array,and,collection,auto,growing;int,get,auto,grow,collection,limit
BeanWrapper -> int getAutoGrowCollectionLimit()_;1356735495;Return the limit for array and collection auto-growing.;int getAutoGrowCollectionLimit()_;return,the,limit,for,array,and,collection,auto,growing;int,get,auto,grow,collection,limit
BeanWrapper -> int getAutoGrowCollectionLimit()_;1385412762;Return the limit for array and collection auto-growing.;int getAutoGrowCollectionLimit()_;return,the,limit,for,array,and,collection,auto,growing;int,get,auto,grow,collection,limit
BeanWrapper -> int getAutoGrowCollectionLimit()_;1390868759;Return the limit for array and collection auto-growing.;int getAutoGrowCollectionLimit()_;return,the,limit,for,array,and,collection,auto,growing;int,get,auto,grow,collection,limit
BeanWrapper -> int getAutoGrowCollectionLimit()_;1403803322;Return the limit for array and collection auto-growing.;int getAutoGrowCollectionLimit()_;return,the,limit,for,array,and,collection,auto,growing;int,get,auto,grow,collection,limit
BeanWrapper -> int getAutoGrowCollectionLimit()_;1460032042;Return the limit for array and collection auto-growing._@since 4.1;int getAutoGrowCollectionLimit()_;return,the,limit,for,array,and,collection,auto,growing,since,4,1;int,get,auto,grow,collection,limit
BeanWrapper -> int getAutoGrowCollectionLimit()_;1495868221;Return the limit for array and collection auto-growing._@since 4.1;int getAutoGrowCollectionLimit()_;return,the,limit,for,array,and,collection,auto,growing,since,4,1;int,get,auto,grow,collection,limit
BeanWrapper -> int getAutoGrowCollectionLimit()_;1496837955;Return the limit for array and collection auto-growing._@since 4.1;int getAutoGrowCollectionLimit()_;return,the,limit,for,array,and,collection,auto,growing,since,4,1;int,get,auto,grow,collection,limit
BeanWrapper -> void setAutoGrowNestedPaths(boolean autoGrowNestedPaths)_;1328020251;Set whether this BeanWrapper should attempt to "auto-grow" a nested path that contains a null value._<p>If "true", a null path location will be populated with a default object value and traversed_instead of resulting in a {@link NullValueInNestedPathException}. Turning this flag on also_enables auto-growth of collection elements when accessing an out-of-bounds index._<p>Default is "false" on a plain BeanWrapper.;void setAutoGrowNestedPaths(boolean autoGrowNestedPaths)_;set,whether,this,bean,wrapper,should,attempt,to,auto,grow,a,nested,path,that,contains,a,null,value,p,if,true,a,null,path,location,will,be,populated,with,a,default,object,value,and,traversed,instead,of,resulting,in,a,link,null,value,in,nested,path,exception,turning,this,flag,on,also,enables,auto,growth,of,collection,elements,when,accessing,an,out,of,bounds,index,p,default,is,false,on,a,plain,bean,wrapper;void,set,auto,grow,nested,paths,boolean,auto,grow,nested,paths
BeanWrapper -> void setAutoGrowNestedPaths(boolean autoGrowNestedPaths)_;1356735495;Set whether this BeanWrapper should attempt to "auto-grow" a nested path that contains a null value._<p>If "true", a null path location will be populated with a default object value and traversed_instead of resulting in a {@link NullValueInNestedPathException}. Turning this flag on also_enables auto-growth of collection elements when accessing an out-of-bounds index._<p>Default is "false" on a plain BeanWrapper.;void setAutoGrowNestedPaths(boolean autoGrowNestedPaths)_;set,whether,this,bean,wrapper,should,attempt,to,auto,grow,a,nested,path,that,contains,a,null,value,p,if,true,a,null,path,location,will,be,populated,with,a,default,object,value,and,traversed,instead,of,resulting,in,a,link,null,value,in,nested,path,exception,turning,this,flag,on,also,enables,auto,growth,of,collection,elements,when,accessing,an,out,of,bounds,index,p,default,is,false,on,a,plain,bean,wrapper;void,set,auto,grow,nested,paths,boolean,auto,grow,nested,paths
BeanWrapper -> void setAutoGrowNestedPaths(boolean autoGrowNestedPaths)_;1385412762;Set whether this BeanWrapper should attempt to "auto-grow" a nested path that contains a null value._<p>If "true", a null path location will be populated with a default object value and traversed_instead of resulting in a {@link NullValueInNestedPathException}. Turning this flag on also_enables auto-growth of collection elements when accessing an out-of-bounds index._<p>Default is "false" on a plain BeanWrapper.;void setAutoGrowNestedPaths(boolean autoGrowNestedPaths)_;set,whether,this,bean,wrapper,should,attempt,to,auto,grow,a,nested,path,that,contains,a,null,value,p,if,true,a,null,path,location,will,be,populated,with,a,default,object,value,and,traversed,instead,of,resulting,in,a,link,null,value,in,nested,path,exception,turning,this,flag,on,also,enables,auto,growth,of,collection,elements,when,accessing,an,out,of,bounds,index,p,default,is,false,on,a,plain,bean,wrapper;void,set,auto,grow,nested,paths,boolean,auto,grow,nested,paths
BeanWrapper -> void setAutoGrowNestedPaths(boolean autoGrowNestedPaths)_;1390868759;Set whether this BeanWrapper should attempt to "auto-grow" a_nested path that contains a {@code null} value._<p>If {@code true}, a {@code null} path location will be populated_with a default object value and traversed instead of resulting in a_{@link NullValueInNestedPathException}. Turning this flag on also enables_auto-growth of collection elements when accessing an out-of-bounds index._<p>Default is {@code false} on a plain BeanWrapper.;void setAutoGrowNestedPaths(boolean autoGrowNestedPaths)_;set,whether,this,bean,wrapper,should,attempt,to,auto,grow,a,nested,path,that,contains,a,code,null,value,p,if,code,true,a,code,null,path,location,will,be,populated,with,a,default,object,value,and,traversed,instead,of,resulting,in,a,link,null,value,in,nested,path,exception,turning,this,flag,on,also,enables,auto,growth,of,collection,elements,when,accessing,an,out,of,bounds,index,p,default,is,code,false,on,a,plain,bean,wrapper;void,set,auto,grow,nested,paths,boolean,auto,grow,nested,paths
BeanWrapper -> PropertyDescriptor[] getPropertyDescriptors()_;1328020251;Obtain the PropertyDescriptors for the wrapped object_(as determined by standard JavaBeans introspection)._@return the PropertyDescriptors for the wrapped object;PropertyDescriptor[] getPropertyDescriptors()_;obtain,the,property,descriptors,for,the,wrapped,object,as,determined,by,standard,java,beans,introspection,return,the,property,descriptors,for,the,wrapped,object;property,descriptor,get,property,descriptors
BeanWrapper -> PropertyDescriptor[] getPropertyDescriptors()_;1356735495;Obtain the PropertyDescriptors for the wrapped object_(as determined by standard JavaBeans introspection)._@return the PropertyDescriptors for the wrapped object;PropertyDescriptor[] getPropertyDescriptors()_;obtain,the,property,descriptors,for,the,wrapped,object,as,determined,by,standard,java,beans,introspection,return,the,property,descriptors,for,the,wrapped,object;property,descriptor,get,property,descriptors
BeanWrapper -> PropertyDescriptor[] getPropertyDescriptors()_;1385412762;Obtain the PropertyDescriptors for the wrapped object_(as determined by standard JavaBeans introspection)._@return the PropertyDescriptors for the wrapped object;PropertyDescriptor[] getPropertyDescriptors()_;obtain,the,property,descriptors,for,the,wrapped,object,as,determined,by,standard,java,beans,introspection,return,the,property,descriptors,for,the,wrapped,object;property,descriptor,get,property,descriptors
BeanWrapper -> PropertyDescriptor[] getPropertyDescriptors()_;1390868759;Obtain the PropertyDescriptors for the wrapped object_(as determined by standard JavaBeans introspection)._@return the PropertyDescriptors for the wrapped object;PropertyDescriptor[] getPropertyDescriptors()_;obtain,the,property,descriptors,for,the,wrapped,object,as,determined,by,standard,java,beans,introspection,return,the,property,descriptors,for,the,wrapped,object;property,descriptor,get,property,descriptors
BeanWrapper -> PropertyDescriptor[] getPropertyDescriptors()_;1403803322;Obtain the PropertyDescriptors for the wrapped object_(as determined by standard JavaBeans introspection)._@return the PropertyDescriptors for the wrapped object;PropertyDescriptor[] getPropertyDescriptors()_;obtain,the,property,descriptors,for,the,wrapped,object,as,determined,by,standard,java,beans,introspection,return,the,property,descriptors,for,the,wrapped,object;property,descriptor,get,property,descriptors
BeanWrapper -> PropertyDescriptor[] getPropertyDescriptors()_;1460032042;Obtain the PropertyDescriptors for the wrapped object_(as determined by standard JavaBeans introspection)._@return the PropertyDescriptors for the wrapped object;PropertyDescriptor[] getPropertyDescriptors()_;obtain,the,property,descriptors,for,the,wrapped,object,as,determined,by,standard,java,beans,introspection,return,the,property,descriptors,for,the,wrapped,object;property,descriptor,get,property,descriptors
BeanWrapper -> PropertyDescriptor[] getPropertyDescriptors()_;1495868221;Obtain the PropertyDescriptors for the wrapped object_(as determined by standard JavaBeans introspection)._@return the PropertyDescriptors for the wrapped object;PropertyDescriptor[] getPropertyDescriptors()_;obtain,the,property,descriptors,for,the,wrapped,object,as,determined,by,standard,java,beans,introspection,return,the,property,descriptors,for,the,wrapped,object;property,descriptor,get,property,descriptors
BeanWrapper -> PropertyDescriptor[] getPropertyDescriptors()_;1496837955;Obtain the PropertyDescriptors for the wrapped object_(as determined by standard JavaBeans introspection)._@return the PropertyDescriptors for the wrapped object;PropertyDescriptor[] getPropertyDescriptors()_;obtain,the,property,descriptors,for,the,wrapped,object,as,determined,by,standard,java,beans,introspection,return,the,property,descriptors,for,the,wrapped,object;property,descriptor,get,property,descriptors
BeanWrapper -> boolean isAutoGrowNestedPaths()_;1328020251;Return whether "auto-growing" of nested paths has been activated.;boolean isAutoGrowNestedPaths()_;return,whether,auto,growing,of,nested,paths,has,been,activated;boolean,is,auto,grow,nested,paths
BeanWrapper -> boolean isAutoGrowNestedPaths()_;1356735495;Return whether "auto-growing" of nested paths has been activated.;boolean isAutoGrowNestedPaths()_;return,whether,auto,growing,of,nested,paths,has,been,activated;boolean,is,auto,grow,nested,paths
BeanWrapper -> boolean isAutoGrowNestedPaths()_;1385412762;Return whether "auto-growing" of nested paths has been activated.;boolean isAutoGrowNestedPaths()_;return,whether,auto,growing,of,nested,paths,has,been,activated;boolean,is,auto,grow,nested,paths
BeanWrapper -> boolean isAutoGrowNestedPaths()_;1390868759;Return whether "auto-growing" of nested paths has been activated.;boolean isAutoGrowNestedPaths()_;return,whether,auto,growing,of,nested,paths,has,been,activated;boolean,is,auto,grow,nested,paths
BeanWrapper -> Object getWrappedInstance()_;1328020251;Return the bean instance wrapped by this object, if any._@return the bean instance, or <code>null</code> if none set;Object getWrappedInstance()_;return,the,bean,instance,wrapped,by,this,object,if,any,return,the,bean,instance,or,code,null,code,if,none,set;object,get,wrapped,instance
BeanWrapper -> Object getWrappedInstance()_;1356735495;Return the bean instance wrapped by this object, if any._@return the bean instance, or {@code null} if none set;Object getWrappedInstance()_;return,the,bean,instance,wrapped,by,this,object,if,any,return,the,bean,instance,or,code,null,if,none,set;object,get,wrapped,instance
BeanWrapper -> Object getWrappedInstance()_;1385412762;Return the bean instance wrapped by this object, if any._@return the bean instance, or {@code null} if none set;Object getWrappedInstance()_;return,the,bean,instance,wrapped,by,this,object,if,any,return,the,bean,instance,or,code,null,if,none,set;object,get,wrapped,instance
BeanWrapper -> Object getWrappedInstance()_;1390868759;Return the bean instance wrapped by this object, if any._@return the bean instance, or {@code null} if none set;Object getWrappedInstance()_;return,the,bean,instance,wrapped,by,this,object,if,any,return,the,bean,instance,or,code,null,if,none,set;object,get,wrapped,instance
BeanWrapper -> Object getWrappedInstance()_;1403803322;Return the bean instance wrapped by this object, if any._@return the bean instance, or {@code null} if none set;Object getWrappedInstance()_;return,the,bean,instance,wrapped,by,this,object,if,any,return,the,bean,instance,or,code,null,if,none,set;object,get,wrapped,instance
BeanWrapper -> Object getWrappedInstance()_;1460032042;Return the bean instance wrapped by this object, if any._@return the bean instance, or {@code null} if none set;Object getWrappedInstance()_;return,the,bean,instance,wrapped,by,this,object,if,any,return,the,bean,instance,or,code,null,if,none,set;object,get,wrapped,instance
BeanWrapper -> Object getWrappedInstance()_;1496837955;Return the bean instance wrapped by this object.;Object getWrappedInstance()_;return,the,bean,instance,wrapped,by,this,object;object,get,wrapped,instance
BeanWrapper -> Class getWrappedClass()_;1328020251;Return the type of the wrapped JavaBean object._@return the type of the wrapped bean instance,_or <code>null</code> if no wrapped object has been set;Class getWrappedClass()_;return,the,type,of,the,wrapped,java,bean,object,return,the,type,of,the,wrapped,bean,instance,or,code,null,code,if,no,wrapped,object,has,been,set;class,get,wrapped,class
BeanWrapper -> Class getWrappedClass()_;1356735495;Return the type of the wrapped JavaBean object._@return the type of the wrapped bean instance,_or {@code null} if no wrapped object has been set;Class getWrappedClass()_;return,the,type,of,the,wrapped,java,bean,object,return,the,type,of,the,wrapped,bean,instance,or,code,null,if,no,wrapped,object,has,been,set;class,get,wrapped,class
