commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * Specify a limit for array and collection auto-growing.  * <p>Default is unlimited on a plain BeanWrapper.  * @since 4.1  */ ;/**  * Specify a limit for array and collection auto-growing.  * <p>Default is unlimited on a plain BeanWrapper.  * @since 4.1  */ void setAutoGrowCollectionLimit(int autoGrowCollectionLimit).
true;;0;1;/**  * Return the limit for array and collection auto-growing.  * @since 4.1  */ ;/**  * Return the limit for array and collection auto-growing.  * @since 4.1  */ int getAutoGrowCollectionLimit().
true;;0;1;/**  * Return the bean instance wrapped by this object.  */ ;/**  * Return the bean instance wrapped by this object.  */ Object getWrappedInstance().
true;;0;1;/**  * Return the type of the wrapped bean instance.  */ ;/**  * Return the type of the wrapped bean instance.  */ Class<?> getWrappedClass().
true;;0;1;/**  * Obtain the PropertyDescriptors for the wrapped object  * (as determined by standard JavaBeans introspection).  * @return the PropertyDescriptors for the wrapped object  */ ;/**  * Obtain the PropertyDescriptors for the wrapped object  * (as determined by standard JavaBeans introspection).  * @return the PropertyDescriptors for the wrapped object  */ PropertyDescriptor[] getPropertyDescriptors().
true;;1;1;/**  * Obtain the property descriptor for a specific property  * of the wrapped object.  * @param propertyName the property to obtain the descriptor for  * (may be a nested path, but no indexed/mapped property)  * @return the property descriptor for the specified property  * @throws InvalidPropertyException if there is no such property  */ ;/**  * Obtain the property descriptor for a specific property  * of the wrapped object.  * @param propertyName the property to obtain the descriptor for  * (may be a nested path, but no indexed/mapped property)  * @return the property descriptor for the specified property  * @throws InvalidPropertyException if there is no such property  */ PropertyDescriptor getPropertyDescriptor(String propertyName) throws InvalidPropertyException.
