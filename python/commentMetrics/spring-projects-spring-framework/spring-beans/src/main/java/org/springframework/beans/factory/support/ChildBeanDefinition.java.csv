commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void setParentName(@Nullable String parentName) {     this.parentName = parentName. }
false;public;0;5;;@Override @Nullable public String getParentName() {     return this.parentName. }
false;public;0;7;;@Override public void validate() throws BeanDefinitionValidationException {     super.validate().     if (this.parentName == null) {         throw new BeanDefinitionValidationException("'parentName' must be set in ChildBeanDefinition").     } }
false;public;0;4;;@Override public AbstractBeanDefinition cloneBeanDefinition() {     return new ChildBeanDefinition(this). }
false;public;1;11;;@Override public boolean equals(Object other) {     if (this == other) {         return true.     }     if (!(other instanceof ChildBeanDefinition)) {         return false.     }     ChildBeanDefinition that = (ChildBeanDefinition) other.     return (ObjectUtils.nullSafeEquals(this.parentName, that.parentName) && super.equals(other)). }
false;public;0;4;;@Override public int hashCode() {     return ObjectUtils.nullSafeHashCode(this.parentName) * 29 + super.hashCode(). }
false;public;0;4;;@Override public String toString() {     return "Child bean with parent '" + this.parentName + "': " + super.toString(). }
