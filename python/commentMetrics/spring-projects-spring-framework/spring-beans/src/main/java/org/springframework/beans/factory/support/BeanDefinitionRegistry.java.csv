commented;modifiers;parameterAmount;loc;comment;code
true;;2;2;/**  * Register a new bean definition with this registry.  * Must support RootBeanDefinition and ChildBeanDefinition.  * @param beanName the name of the bean instance to register  * @param beanDefinition definition of the bean instance to register  * @throws BeanDefinitionStoreException if the BeanDefinition is invalid  * @throws BeanDefinitionOverrideException if there is already a BeanDefinition  * for the specified bean name and we are not allowed to override it  * @see GenericBeanDefinition  * @see RootBeanDefinition  * @see ChildBeanDefinition  */ ;/**  * Register a new bean definition with this registry.  * Must support RootBeanDefinition and ChildBeanDefinition.  * @param beanName the name of the bean instance to register  * @param beanDefinition definition of the bean instance to register  * @throws BeanDefinitionStoreException if the BeanDefinition is invalid  * @throws BeanDefinitionOverrideException if there is already a BeanDefinition  * for the specified bean name and we are not allowed to override it  * @see GenericBeanDefinition  * @see RootBeanDefinition  * @see ChildBeanDefinition  */ void registerBeanDefinition(String beanName, BeanDefinition beanDefinition) throws BeanDefinitionStoreException.
true;;1;1;/**  * Remove the BeanDefinition for the given name.  * @param beanName the name of the bean instance to register  * @throws NoSuchBeanDefinitionException if there is no such bean definition  */ ;/**  * Remove the BeanDefinition for the given name.  * @param beanName the name of the bean instance to register  * @throws NoSuchBeanDefinitionException if there is no such bean definition  */ void removeBeanDefinition(String beanName) throws NoSuchBeanDefinitionException.
true;;1;1;/**  * Return the BeanDefinition for the given bean name.  * @param beanName name of the bean to find a definition for  * @return the BeanDefinition for the given name (never {@code null})  * @throws NoSuchBeanDefinitionException if there is no such bean definition  */ ;/**  * Return the BeanDefinition for the given bean name.  * @param beanName name of the bean to find a definition for  * @return the BeanDefinition for the given name (never {@code null})  * @throws NoSuchBeanDefinitionException if there is no such bean definition  */ BeanDefinition getBeanDefinition(String beanName) throws NoSuchBeanDefinitionException.
true;;1;1;/**  * Check if this registry contains a bean definition with the given name.  * @param beanName the name of the bean to look for  * @return if this registry contains a bean definition with the given name  */ ;/**  * Check if this registry contains a bean definition with the given name.  * @param beanName the name of the bean to look for  * @return if this registry contains a bean definition with the given name  */ boolean containsBeanDefinition(String beanName).
true;;0;1;/**  * Return the names of all beans defined in this registry.  * @return the names of all beans defined in this registry,  * or an empty array if none defined  */ ;/**  * Return the names of all beans defined in this registry.  * @return the names of all beans defined in this registry,  * or an empty array if none defined  */ String[] getBeanDefinitionNames().
true;;0;1;/**  * Return the number of beans defined in the registry.  * @return the number of beans defined in the registry  */ ;/**  * Return the number of beans defined in the registry.  * @return the number of beans defined in the registry  */ int getBeanDefinitionCount().
true;;1;1;/**  * Determine whether the given bean name is already in use within this registry,  * i.e. whether there is a local bean or alias registered under this name.  * @param beanName the name to check  * @return whether the given bean name is already in use  */ ;/**  * Determine whether the given bean name is already in use within this registry,  * i.e. whether there is a local bean or alias registered under this name.  * @param beanName the name to check  * @return whether the given bean name is already in use  */ boolean isBeanNameInUse(String beanName).
