# id;timestamp;commentText;codeText;commentWords;codeWords
PropertyEditorRegistry -> PropertyEditor findCustomEditor(Class<?> requiredType, String propertyPath)_;1328020251;Find a custom property editor for the given type and property._@param requiredType the type of the property (can be <code>null</code> if a property_is given but should be specified in any case for consistency checking)_@param propertyPath the path of the property (name or nested path), or_<code>null</code> if looking for an editor for all properties of the given type_@return the registered editor, or <code>null</code> if none;PropertyEditor findCustomEditor(Class<?> requiredType, String propertyPath)_;find,a,custom,property,editor,for,the,given,type,and,property,param,required,type,the,type,of,the,property,can,be,code,null,code,if,a,property,is,given,but,should,be,specified,in,any,case,for,consistency,checking,param,property,path,the,path,of,the,property,name,or,nested,path,or,code,null,code,if,looking,for,an,editor,for,all,properties,of,the,given,type,return,the,registered,editor,or,code,null,code,if,none;property,editor,find,custom,editor,class,required,type,string,property,path
PropertyEditorRegistry -> PropertyEditor findCustomEditor(Class<?> requiredType, String propertyPath)_;1356735495;Find a custom property editor for the given type and property._@param requiredType the type of the property (can be {@code null} if a property_is given but should be specified in any case for consistency checking)_@param propertyPath the path of the property (name or nested path), or_{@code null} if looking for an editor for all properties of the given type_@return the registered editor, or {@code null} if none;PropertyEditor findCustomEditor(Class<?> requiredType, String propertyPath)_;find,a,custom,property,editor,for,the,given,type,and,property,param,required,type,the,type,of,the,property,can,be,code,null,if,a,property,is,given,but,should,be,specified,in,any,case,for,consistency,checking,param,property,path,the,path,of,the,property,name,or,nested,path,or,code,null,if,looking,for,an,editor,for,all,properties,of,the,given,type,return,the,registered,editor,or,code,null,if,none;property,editor,find,custom,editor,class,required,type,string,property,path
PropertyEditorRegistry -> void registerCustomEditor(Class<?> requiredType, String propertyPath, PropertyEditor propertyEditor)_;1328020251;Register the given custom property editor for the given type and_property, or for all properties of the given type._<p>If the property path denotes an array or Collection property,_the editor will get applied either to the array/Collection itself_(the {@link PropertyEditor} has to create an array or Collection value) or_to each element (the <code>PropertyEditor</code> has to create the element type),_depending on the specified required type._<p>Note: Only one single registered custom editor per property path_is supported. In the case of a Collection/array, do not register an editor_for both the Collection/array and each element on the same property._<p>For example, if you wanted to register an editor for "items[n].quantity"_(for all values n), you would use "items.quantity" as the value of the_'propertyPath' argument to this method._@param requiredType the type of the property. This may be <code>null</code>_if a property is given but should be specified in any case, in particular in_case of a Collection - making clear whether the editor is supposed to apply_to the entire Collection itself or to each of its entries. So as a general rule:_<b>Do not specify <code>null</code> here in case of a Collection/array!</b>_@param propertyPath the path of the property (name or nested path), or_<code>null</code> if registering an editor for all properties of the given type_@param propertyEditor editor to register;void registerCustomEditor(Class<?> requiredType, String propertyPath, PropertyEditor propertyEditor)_;register,the,given,custom,property,editor,for,the,given,type,and,property,or,for,all,properties,of,the,given,type,p,if,the,property,path,denotes,an,array,or,collection,property,the,editor,will,get,applied,either,to,the,array,collection,itself,the,link,property,editor,has,to,create,an,array,or,collection,value,or,to,each,element,the,code,property,editor,code,has,to,create,the,element,type,depending,on,the,specified,required,type,p,note,only,one,single,registered,custom,editor,per,property,path,is,supported,in,the,case,of,a,collection,array,do,not,register,an,editor,for,both,the,collection,array,and,each,element,on,the,same,property,p,for,example,if,you,wanted,to,register,an,editor,for,items,n,quantity,for,all,values,n,you,would,use,items,quantity,as,the,value,of,the,property,path,argument,to,this,method,param,required,type,the,type,of,the,property,this,may,be,code,null,code,if,a,property,is,given,but,should,be,specified,in,any,case,in,particular,in,case,of,a,collection,making,clear,whether,the,editor,is,supposed,to,apply,to,the,entire,collection,itself,or,to,each,of,its,entries,so,as,a,general,rule,b,do,not,specify,code,null,code,here,in,case,of,a,collection,array,b,param,property,path,the,path,of,the,property,name,or,nested,path,or,code,null,code,if,registering,an,editor,for,all,properties,of,the,given,type,param,property,editor,editor,to,register;void,register,custom,editor,class,required,type,string,property,path,property,editor,property,editor
PropertyEditorRegistry -> void registerCustomEditor(Class<?> requiredType, String propertyPath, PropertyEditor propertyEditor)_;1356735495;Register the given custom property editor for the given type and_property, or for all properties of the given type._<p>If the property path denotes an array or Collection property,_the editor will get applied either to the array/Collection itself_(the {@link PropertyEditor} has to create an array or Collection value) or_to each element (the {@code PropertyEditor} has to create the element type),_depending on the specified required type._<p>Note: Only one single registered custom editor per property path_is supported. In the case of a Collection/array, do not register an editor_for both the Collection/array and each element on the same property._<p>For example, if you wanted to register an editor for "items[n].quantity"_(for all values n), you would use "items.quantity" as the value of the_'propertyPath' argument to this method._@param requiredType the type of the property. This may be {@code null}_if a property is given but should be specified in any case, in particular in_case of a Collection - making clear whether the editor is supposed to apply_to the entire Collection itself or to each of its entries. So as a general rule:_<b>Do not specify {@code null} here in case of a Collection/array!</b>_@param propertyPath the path of the property (name or nested path), or_{@code null} if registering an editor for all properties of the given type_@param propertyEditor editor to register;void registerCustomEditor(Class<?> requiredType, String propertyPath, PropertyEditor propertyEditor)_;register,the,given,custom,property,editor,for,the,given,type,and,property,or,for,all,properties,of,the,given,type,p,if,the,property,path,denotes,an,array,or,collection,property,the,editor,will,get,applied,either,to,the,array,collection,itself,the,link,property,editor,has,to,create,an,array,or,collection,value,or,to,each,element,the,code,property,editor,has,to,create,the,element,type,depending,on,the,specified,required,type,p,note,only,one,single,registered,custom,editor,per,property,path,is,supported,in,the,case,of,a,collection,array,do,not,register,an,editor,for,both,the,collection,array,and,each,element,on,the,same,property,p,for,example,if,you,wanted,to,register,an,editor,for,items,n,quantity,for,all,values,n,you,would,use,items,quantity,as,the,value,of,the,property,path,argument,to,this,method,param,required,type,the,type,of,the,property,this,may,be,code,null,if,a,property,is,given,but,should,be,specified,in,any,case,in,particular,in,case,of,a,collection,making,clear,whether,the,editor,is,supposed,to,apply,to,the,entire,collection,itself,or,to,each,of,its,entries,so,as,a,general,rule,b,do,not,specify,code,null,here,in,case,of,a,collection,array,b,param,property,path,the,path,of,the,property,name,or,nested,path,or,code,null,if,registering,an,editor,for,all,properties,of,the,given,type,param,property,editor,editor,to,register;void,register,custom,editor,class,required,type,string,property,path,property,editor,property,editor
PropertyEditorRegistry -> void registerCustomEditor(Class<?> requiredType, PropertyEditor propertyEditor)_;1328020251;Register the given custom property editor for all properties of the given type._@param requiredType the type of the property_@param propertyEditor the editor to register;void registerCustomEditor(Class<?> requiredType, PropertyEditor propertyEditor)_;register,the,given,custom,property,editor,for,all,properties,of,the,given,type,param,required,type,the,type,of,the,property,param,property,editor,the,editor,to,register;void,register,custom,editor,class,required,type,property,editor,property,editor
PropertyEditorRegistry -> void registerCustomEditor(Class<?> requiredType, PropertyEditor propertyEditor)_;1356735495;Register the given custom property editor for all properties of the given type._@param requiredType the type of the property_@param propertyEditor the editor to register;void registerCustomEditor(Class<?> requiredType, PropertyEditor propertyEditor)_;register,the,given,custom,property,editor,for,all,properties,of,the,given,type,param,required,type,the,type,of,the,property,param,property,editor,the,editor,to,register;void,register,custom,editor,class,required,type,property,editor,property,editor
PropertyEditorRegistry -> void registerCustomEditor(Class<?> requiredType, PropertyEditor propertyEditor)_;1495868221;Register the given custom property editor for all properties of the given type._@param requiredType the type of the property_@param propertyEditor the editor to register;void registerCustomEditor(Class<?> requiredType, PropertyEditor propertyEditor)_;register,the,given,custom,property,editor,for,all,properties,of,the,given,type,param,required,type,the,type,of,the,property,param,property,editor,the,editor,to,register;void,register,custom,editor,class,required,type,property,editor,property,editor
