# id;timestamp;commentText;codeText;commentWords;codeWords
StaticListableBeanFactory -> public StaticListableBeanFactory();1459864170;Create a regular {@code StaticListableBeanFactory}, to be populated_with singleton bean instances through {@link #addBean} calls.;public StaticListableBeanFactory() {_		this.beans = new LinkedHashMap<String, Object>()__	};create,a,regular,code,static,listable,bean,factory,to,be,populated,with,singleton,bean,instances,through,link,add,bean,calls;public,static,listable,bean,factory,this,beans,new,linked,hash,map,string,object
StaticListableBeanFactory -> public StaticListableBeanFactory();1467730834;Create a regular {@code StaticListableBeanFactory}, to be populated_with singleton bean instances through {@link #addBean} calls.;public StaticListableBeanFactory() {_		this.beans = new LinkedHashMap<>()__	};create,a,regular,code,static,listable,bean,factory,to,be,populated,with,singleton,bean,instances,through,link,add,bean,calls;public,static,listable,bean,factory,this,beans,new,linked,hash,map
StaticListableBeanFactory -> public StaticListableBeanFactory();1482012648;Create a regular {@code StaticListableBeanFactory}, to be populated_with singleton bean instances through {@link #addBean} calls.;public StaticListableBeanFactory() {_		this.beans = new LinkedHashMap<>()__	};create,a,regular,code,static,listable,bean,factory,to,be,populated,with,singleton,bean,instances,through,link,add,bean,calls;public,static,listable,bean,factory,this,beans,new,linked,hash,map
StaticListableBeanFactory -> public StaticListableBeanFactory();1496242568;Create a regular {@code StaticListableBeanFactory}, to be populated_with singleton bean instances through {@link #addBean} calls.;public StaticListableBeanFactory() {_		this.beans = new LinkedHashMap<>()__	};create,a,regular,code,static,listable,bean,factory,to,be,populated,with,singleton,bean,instances,through,link,add,bean,calls;public,static,listable,bean,factory,this,beans,new,linked,hash,map
StaticListableBeanFactory -> public StaticListableBeanFactory();1496837955;Create a regular {@code StaticListableBeanFactory}, to be populated_with singleton bean instances through {@link #addBean} calls.;public StaticListableBeanFactory() {_		this.beans = new LinkedHashMap<>()__	};create,a,regular,code,static,listable,bean,factory,to,be,populated,with,singleton,bean,instances,through,link,add,bean,calls;public,static,listable,bean,factory,this,beans,new,linked,hash,map
StaticListableBeanFactory -> public StaticListableBeanFactory();1502974979;Create a regular {@code StaticListableBeanFactory}, to be populated_with singleton bean instances through {@link #addBean} calls.;public StaticListableBeanFactory() {_		this.beans = new LinkedHashMap<>()__	};create,a,regular,code,static,listable,bean,factory,to,be,populated,with,singleton,bean,instances,through,link,add,bean,calls;public,static,listable,bean,factory,this,beans,new,linked,hash,map
StaticListableBeanFactory -> public StaticListableBeanFactory();1518810557;Create a regular {@code StaticListableBeanFactory}, to be populated_with singleton bean instances through {@link #addBean} calls.;public StaticListableBeanFactory() {_		this.beans = new LinkedHashMap<>()__	};create,a,regular,code,static,listable,bean,factory,to,be,populated,with,singleton,bean,instances,through,link,add,bean,calls;public,static,listable,bean,factory,this,beans,new,linked,hash,map
StaticListableBeanFactory -> public StaticListableBeanFactory();1530174524;Create a regular {@code StaticListableBeanFactory}, to be populated_with singleton bean instances through {@link #addBean} calls.;public StaticListableBeanFactory() {_		this.beans = new LinkedHashMap<>()__	};create,a,regular,code,static,listable,bean,factory,to,be,populated,with,singleton,bean,instances,through,link,add,bean,calls;public,static,listable,bean,factory,this,beans,new,linked,hash,map
StaticListableBeanFactory -> public StaticListableBeanFactory();1532385723;Create a regular {@code StaticListableBeanFactory}, to be populated_with singleton bean instances through {@link #addBean} calls.;public StaticListableBeanFactory() {_		this.beans = new LinkedHashMap<>()__	};create,a,regular,code,static,listable,bean,factory,to,be,populated,with,singleton,bean,instances,through,link,add,bean,calls;public,static,listable,bean,factory,this,beans,new,linked,hash,map
StaticListableBeanFactory -> public StaticListableBeanFactory();1536962185;Create a regular {@code StaticListableBeanFactory}, to be populated_with singleton bean instances through {@link #addBean} calls.;public StaticListableBeanFactory() {_		this.beans = new LinkedHashMap<>()__	};create,a,regular,code,static,listable,bean,factory,to,be,populated,with,singleton,bean,instances,through,link,add,bean,calls;public,static,listable,bean,factory,this,beans,new,linked,hash,map
StaticListableBeanFactory -> public StaticListableBeanFactory();1538724083;Create a regular {@code StaticListableBeanFactory}, to be populated_with singleton bean instances through {@link #addBean} calls.;public StaticListableBeanFactory() {_		this.beans = new LinkedHashMap<>()__	};create,a,regular,code,static,listable,bean,factory,to,be,populated,with,singleton,bean,instances,through,link,add,bean,calls;public,static,listable,bean,factory,this,beans,new,linked,hash,map
StaticListableBeanFactory -> public void addBean(String name, Object bean);1328020251;Add a new singleton bean._Will overwrite any existing instance for the given name._@param name the name of the bean_@param bean the bean instance;public void addBean(String name, Object bean) {_		this.beans.put(name, bean)__	};add,a,new,singleton,bean,will,overwrite,any,existing,instance,for,the,given,name,param,name,the,name,of,the,bean,param,bean,the,bean,instance;public,void,add,bean,string,name,object,bean,this,beans,put,name,bean
StaticListableBeanFactory -> public void addBean(String name, Object bean);1356735495;Add a new singleton bean._Will overwrite any existing instance for the given name._@param name the name of the bean_@param bean the bean instance;public void addBean(String name, Object bean) {_		this.beans.put(name, bean)__	};add,a,new,singleton,bean,will,overwrite,any,existing,instance,for,the,given,name,param,name,the,name,of,the,bean,param,bean,the,bean,instance;public,void,add,bean,string,name,object,bean,this,beans,put,name,bean
StaticListableBeanFactory -> public void addBean(String name, Object bean);1357119239;Add a new singleton bean._Will overwrite any existing instance for the given name._@param name the name of the bean_@param bean the bean instance;public void addBean(String name, Object bean) {_		this.beans.put(name, bean)__	};add,a,new,singleton,bean,will,overwrite,any,existing,instance,for,the,given,name,param,name,the,name,of,the,bean,param,bean,the,bean,instance;public,void,add,bean,string,name,object,bean,this,beans,put,name,bean
StaticListableBeanFactory -> public void addBean(String name, Object bean);1362408075;Add a new singleton bean._Will overwrite any existing instance for the given name._@param name the name of the bean_@param bean the bean instance;public void addBean(String name, Object bean) {_		this.beans.put(name, bean)__	};add,a,new,singleton,bean,will,overwrite,any,existing,instance,for,the,given,name,param,name,the,name,of,the,bean,param,bean,the,bean,instance;public,void,add,bean,string,name,object,bean,this,beans,put,name,bean
StaticListableBeanFactory -> public void addBean(String name, Object bean);1368482696;Add a new singleton bean._Will overwrite any existing instance for the given name._@param name the name of the bean_@param bean the bean instance;public void addBean(String name, Object bean) {_		this.beans.put(name, bean)__	};add,a,new,singleton,bean,will,overwrite,any,existing,instance,for,the,given,name,param,name,the,name,of,the,bean,param,bean,the,bean,instance;public,void,add,bean,string,name,object,bean,this,beans,put,name,bean
StaticListableBeanFactory -> public void addBean(String name, Object bean);1384527851;Add a new singleton bean._Will overwrite any existing instance for the given name._@param name the name of the bean_@param bean the bean instance;public void addBean(String name, Object bean) {_		this.beans.put(name, bean)__	};add,a,new,singleton,bean,will,overwrite,any,existing,instance,for,the,given,name,param,name,the,name,of,the,bean,param,bean,the,bean,instance;public,void,add,bean,string,name,object,bean,this,beans,put,name,bean
StaticListableBeanFactory -> public void addBean(String name, Object bean);1385412762;Add a new singleton bean._Will overwrite any existing instance for the given name._@param name the name of the bean_@param bean the bean instance;public void addBean(String name, Object bean) {_		this.beans.put(name, bean)__	};add,a,new,singleton,bean,will,overwrite,any,existing,instance,for,the,given,name,param,name,the,name,of,the,bean,param,bean,the,bean,instance;public,void,add,bean,string,name,object,bean,this,beans,put,name,bean
StaticListableBeanFactory -> public void addBean(String name, Object bean);1407874032;Add a new singleton bean._Will overwrite any existing instance for the given name._@param name the name of the bean_@param bean the bean instance;public void addBean(String name, Object bean) {_		this.beans.put(name, bean)__	};add,a,new,singleton,bean,will,overwrite,any,existing,instance,for,the,given,name,param,name,the,name,of,the,bean,param,bean,the,bean,instance;public,void,add,bean,string,name,object,bean,this,beans,put,name,bean
StaticListableBeanFactory -> public void addBean(String name, Object bean);1426716313;Add a new singleton bean._Will overwrite any existing instance for the given name._@param name the name of the bean_@param bean the bean instance;public void addBean(String name, Object bean) {_		this.beans.put(name, bean)__	};add,a,new,singleton,bean,will,overwrite,any,existing,instance,for,the,given,name,param,name,the,name,of,the,bean,param,bean,the,bean,instance;public,void,add,bean,string,name,object,bean,this,beans,put,name,bean
StaticListableBeanFactory -> public void addBean(String name, Object bean);1427144223;Add a new singleton bean._Will overwrite any existing instance for the given name._@param name the name of the bean_@param bean the bean instance;public void addBean(String name, Object bean) {_		this.beans.put(name, bean)__	};add,a,new,singleton,bean,will,overwrite,any,existing,instance,for,the,given,name,param,name,the,name,of,the,bean,param,bean,the,bean,instance;public,void,add,bean,string,name,object,bean,this,beans,put,name,bean
StaticListableBeanFactory -> public void addBean(String name, Object bean);1459864170;Add a new singleton bean._Will overwrite any existing instance for the given name._@param name the name of the bean_@param bean the bean instance;public void addBean(String name, Object bean) {_		this.beans.put(name, bean)__	};add,a,new,singleton,bean,will,overwrite,any,existing,instance,for,the,given,name,param,name,the,name,of,the,bean,param,bean,the,bean,instance;public,void,add,bean,string,name,object,bean,this,beans,put,name,bean
StaticListableBeanFactory -> public void addBean(String name, Object bean);1467730834;Add a new singleton bean._Will overwrite any existing instance for the given name._@param name the name of the bean_@param bean the bean instance;public void addBean(String name, Object bean) {_		this.beans.put(name, bean)__	};add,a,new,singleton,bean,will,overwrite,any,existing,instance,for,the,given,name,param,name,the,name,of,the,bean,param,bean,the,bean,instance;public,void,add,bean,string,name,object,bean,this,beans,put,name,bean
StaticListableBeanFactory -> public void addBean(String name, Object bean);1482012648;Add a new singleton bean._Will overwrite any existing instance for the given name._@param name the name of the bean_@param bean the bean instance;public void addBean(String name, Object bean) {_		this.beans.put(name, bean)__	};add,a,new,singleton,bean,will,overwrite,any,existing,instance,for,the,given,name,param,name,the,name,of,the,bean,param,bean,the,bean,instance;public,void,add,bean,string,name,object,bean,this,beans,put,name,bean
StaticListableBeanFactory -> public void addBean(String name, Object bean);1496242568;Add a new singleton bean._Will overwrite any existing instance for the given name._@param name the name of the bean_@param bean the bean instance;public void addBean(String name, Object bean) {_		this.beans.put(name, bean)__	};add,a,new,singleton,bean,will,overwrite,any,existing,instance,for,the,given,name,param,name,the,name,of,the,bean,param,bean,the,bean,instance;public,void,add,bean,string,name,object,bean,this,beans,put,name,bean
StaticListableBeanFactory -> public void addBean(String name, Object bean);1496837955;Add a new singleton bean._Will overwrite any existing instance for the given name._@param name the name of the bean_@param bean the bean instance;public void addBean(String name, Object bean) {_		this.beans.put(name, bean)__	};add,a,new,singleton,bean,will,overwrite,any,existing,instance,for,the,given,name,param,name,the,name,of,the,bean,param,bean,the,bean,instance;public,void,add,bean,string,name,object,bean,this,beans,put,name,bean
StaticListableBeanFactory -> public void addBean(String name, Object bean);1502974979;Add a new singleton bean._Will overwrite any existing instance for the given name._@param name the name of the bean_@param bean the bean instance;public void addBean(String name, Object bean) {_		this.beans.put(name, bean)__	};add,a,new,singleton,bean,will,overwrite,any,existing,instance,for,the,given,name,param,name,the,name,of,the,bean,param,bean,the,bean,instance;public,void,add,bean,string,name,object,bean,this,beans,put,name,bean
StaticListableBeanFactory -> public void addBean(String name, Object bean);1518810557;Add a new singleton bean._Will overwrite any existing instance for the given name._@param name the name of the bean_@param bean the bean instance;public void addBean(String name, Object bean) {_		this.beans.put(name, bean)__	};add,a,new,singleton,bean,will,overwrite,any,existing,instance,for,the,given,name,param,name,the,name,of,the,bean,param,bean,the,bean,instance;public,void,add,bean,string,name,object,bean,this,beans,put,name,bean
StaticListableBeanFactory -> public void addBean(String name, Object bean);1530174524;Add a new singleton bean._Will overwrite any existing instance for the given name._@param name the name of the bean_@param bean the bean instance;public void addBean(String name, Object bean) {_		this.beans.put(name, bean)__	};add,a,new,singleton,bean,will,overwrite,any,existing,instance,for,the,given,name,param,name,the,name,of,the,bean,param,bean,the,bean,instance;public,void,add,bean,string,name,object,bean,this,beans,put,name,bean
StaticListableBeanFactory -> public void addBean(String name, Object bean);1532385723;Add a new singleton bean._Will overwrite any existing instance for the given name._@param name the name of the bean_@param bean the bean instance;public void addBean(String name, Object bean) {_		this.beans.put(name, bean)__	};add,a,new,singleton,bean,will,overwrite,any,existing,instance,for,the,given,name,param,name,the,name,of,the,bean,param,bean,the,bean,instance;public,void,add,bean,string,name,object,bean,this,beans,put,name,bean
StaticListableBeanFactory -> public void addBean(String name, Object bean);1536962185;Add a new singleton bean._Will overwrite any existing instance for the given name._@param name the name of the bean_@param bean the bean instance;public void addBean(String name, Object bean) {_		this.beans.put(name, bean)__	};add,a,new,singleton,bean,will,overwrite,any,existing,instance,for,the,given,name,param,name,the,name,of,the,bean,param,bean,the,bean,instance;public,void,add,bean,string,name,object,bean,this,beans,put,name,bean
StaticListableBeanFactory -> public void addBean(String name, Object bean);1538724083;Add a new singleton bean._Will overwrite any existing instance for the given name._@param name the name of the bean_@param bean the bean instance;public void addBean(String name, Object bean) {_		this.beans.put(name, bean)__	};add,a,new,singleton,bean,will,overwrite,any,existing,instance,for,the,given,name,param,name,the,name,of,the,bean,param,bean,the,bean,instance;public,void,add,bean,string,name,object,bean,this,beans,put,name,bean
StaticListableBeanFactory -> public StaticListableBeanFactory(Map<String, Object> beans);1459864170;Create a {@code StaticListableBeanFactory} wrapping the given {@code Map}._<p>Note that the given {@code Map} may be pre-populated with beans__or new, still allowing for beans to be registered via {@link #addBean}__or {@link java.util.Collections#emptyMap()} for a dummy factory which_enforces operating against an empty set of beans._@param beans a {@code Map} for holding this factory's beans, with the_bean name String as key and the corresponding singleton object as value_@since 4.3;public StaticListableBeanFactory(Map<String, Object> beans) {_		Assert.notNull(beans, "Beans Map must not be null")__		this.beans = beans__	};create,a,code,static,listable,bean,factory,wrapping,the,given,code,map,p,note,that,the,given,code,map,may,be,pre,populated,with,beans,or,new,still,allowing,for,beans,to,be,registered,via,link,add,bean,or,link,java,util,collections,empty,map,for,a,dummy,factory,which,enforces,operating,against,an,empty,set,of,beans,param,beans,a,code,map,for,holding,this,factory,s,beans,with,the,bean,name,string,as,key,and,the,corresponding,singleton,object,as,value,since,4,3;public,static,listable,bean,factory,map,string,object,beans,assert,not,null,beans,beans,map,must,not,be,null,this,beans,beans
StaticListableBeanFactory -> public StaticListableBeanFactory(Map<String, Object> beans);1467730834;Create a {@code StaticListableBeanFactory} wrapping the given {@code Map}._<p>Note that the given {@code Map} may be pre-populated with beans__or new, still allowing for beans to be registered via {@link #addBean}__or {@link java.util.Collections#emptyMap()} for a dummy factory which_enforces operating against an empty set of beans._@param beans a {@code Map} for holding this factory's beans, with the_bean name String as key and the corresponding singleton object as value_@since 4.3;public StaticListableBeanFactory(Map<String, Object> beans) {_		Assert.notNull(beans, "Beans Map must not be null")__		this.beans = beans__	};create,a,code,static,listable,bean,factory,wrapping,the,given,code,map,p,note,that,the,given,code,map,may,be,pre,populated,with,beans,or,new,still,allowing,for,beans,to,be,registered,via,link,add,bean,or,link,java,util,collections,empty,map,for,a,dummy,factory,which,enforces,operating,against,an,empty,set,of,beans,param,beans,a,code,map,for,holding,this,factory,s,beans,with,the,bean,name,string,as,key,and,the,corresponding,singleton,object,as,value,since,4,3;public,static,listable,bean,factory,map,string,object,beans,assert,not,null,beans,beans,map,must,not,be,null,this,beans,beans
StaticListableBeanFactory -> public StaticListableBeanFactory(Map<String, Object> beans);1482012648;Create a {@code StaticListableBeanFactory} wrapping the given {@code Map}._<p>Note that the given {@code Map} may be pre-populated with beans__or new, still allowing for beans to be registered via {@link #addBean}__or {@link java.util.Collections#emptyMap()} for a dummy factory which_enforces operating against an empty set of beans._@param beans a {@code Map} for holding this factory's beans, with the_bean name String as key and the corresponding singleton object as value_@since 4.3;public StaticListableBeanFactory(Map<String, Object> beans) {_		Assert.notNull(beans, "Beans Map must not be null")__		this.beans = beans__	};create,a,code,static,listable,bean,factory,wrapping,the,given,code,map,p,note,that,the,given,code,map,may,be,pre,populated,with,beans,or,new,still,allowing,for,beans,to,be,registered,via,link,add,bean,or,link,java,util,collections,empty,map,for,a,dummy,factory,which,enforces,operating,against,an,empty,set,of,beans,param,beans,a,code,map,for,holding,this,factory,s,beans,with,the,bean,name,string,as,key,and,the,corresponding,singleton,object,as,value,since,4,3;public,static,listable,bean,factory,map,string,object,beans,assert,not,null,beans,beans,map,must,not,be,null,this,beans,beans
StaticListableBeanFactory -> public StaticListableBeanFactory(Map<String, Object> beans);1496242568;Create a {@code StaticListableBeanFactory} wrapping the given {@code Map}._<p>Note that the given {@code Map} may be pre-populated with beans__or new, still allowing for beans to be registered via {@link #addBean}__or {@link java.util.Collections#emptyMap()} for a dummy factory which_enforces operating against an empty set of beans._@param beans a {@code Map} for holding this factory's beans, with the_bean name String as key and the corresponding singleton object as value_@since 4.3;public StaticListableBeanFactory(Map<String, Object> beans) {_		Assert.notNull(beans, "Beans Map must not be null")__		this.beans = beans__	};create,a,code,static,listable,bean,factory,wrapping,the,given,code,map,p,note,that,the,given,code,map,may,be,pre,populated,with,beans,or,new,still,allowing,for,beans,to,be,registered,via,link,add,bean,or,link,java,util,collections,empty,map,for,a,dummy,factory,which,enforces,operating,against,an,empty,set,of,beans,param,beans,a,code,map,for,holding,this,factory,s,beans,with,the,bean,name,string,as,key,and,the,corresponding,singleton,object,as,value,since,4,3;public,static,listable,bean,factory,map,string,object,beans,assert,not,null,beans,beans,map,must,not,be,null,this,beans,beans
StaticListableBeanFactory -> public StaticListableBeanFactory(Map<String, Object> beans);1496837955;Create a {@code StaticListableBeanFactory} wrapping the given {@code Map}._<p>Note that the given {@code Map} may be pre-populated with beans__or new, still allowing for beans to be registered via {@link #addBean}__or {@link java.util.Collections#emptyMap()} for a dummy factory which_enforces operating against an empty set of beans._@param beans a {@code Map} for holding this factory's beans, with the_bean name String as key and the corresponding singleton object as value_@since 4.3;public StaticListableBeanFactory(Map<String, Object> beans) {_		Assert.notNull(beans, "Beans Map must not be null")__		this.beans = beans__	};create,a,code,static,listable,bean,factory,wrapping,the,given,code,map,p,note,that,the,given,code,map,may,be,pre,populated,with,beans,or,new,still,allowing,for,beans,to,be,registered,via,link,add,bean,or,link,java,util,collections,empty,map,for,a,dummy,factory,which,enforces,operating,against,an,empty,set,of,beans,param,beans,a,code,map,for,holding,this,factory,s,beans,with,the,bean,name,string,as,key,and,the,corresponding,singleton,object,as,value,since,4,3;public,static,listable,bean,factory,map,string,object,beans,assert,not,null,beans,beans,map,must,not,be,null,this,beans,beans
StaticListableBeanFactory -> public StaticListableBeanFactory(Map<String, Object> beans);1502974979;Create a {@code StaticListableBeanFactory} wrapping the given {@code Map}._<p>Note that the given {@code Map} may be pre-populated with beans__or new, still allowing for beans to be registered via {@link #addBean}__or {@link java.util.Collections#emptyMap()} for a dummy factory which_enforces operating against an empty set of beans._@param beans a {@code Map} for holding this factory's beans, with the_bean name String as key and the corresponding singleton object as value_@since 4.3;public StaticListableBeanFactory(Map<String, Object> beans) {_		Assert.notNull(beans, "Beans Map must not be null")__		this.beans = beans__	};create,a,code,static,listable,bean,factory,wrapping,the,given,code,map,p,note,that,the,given,code,map,may,be,pre,populated,with,beans,or,new,still,allowing,for,beans,to,be,registered,via,link,add,bean,or,link,java,util,collections,empty,map,for,a,dummy,factory,which,enforces,operating,against,an,empty,set,of,beans,param,beans,a,code,map,for,holding,this,factory,s,beans,with,the,bean,name,string,as,key,and,the,corresponding,singleton,object,as,value,since,4,3;public,static,listable,bean,factory,map,string,object,beans,assert,not,null,beans,beans,map,must,not,be,null,this,beans,beans
StaticListableBeanFactory -> public StaticListableBeanFactory(Map<String, Object> beans);1518810557;Create a {@code StaticListableBeanFactory} wrapping the given {@code Map}._<p>Note that the given {@code Map} may be pre-populated with beans__or new, still allowing for beans to be registered via {@link #addBean}__or {@link java.util.Collections#emptyMap()} for a dummy factory which_enforces operating against an empty set of beans._@param beans a {@code Map} for holding this factory's beans, with the_bean name String as key and the corresponding singleton object as value_@since 4.3;public StaticListableBeanFactory(Map<String, Object> beans) {_		Assert.notNull(beans, "Beans Map must not be null")__		this.beans = beans__	};create,a,code,static,listable,bean,factory,wrapping,the,given,code,map,p,note,that,the,given,code,map,may,be,pre,populated,with,beans,or,new,still,allowing,for,beans,to,be,registered,via,link,add,bean,or,link,java,util,collections,empty,map,for,a,dummy,factory,which,enforces,operating,against,an,empty,set,of,beans,param,beans,a,code,map,for,holding,this,factory,s,beans,with,the,bean,name,string,as,key,and,the,corresponding,singleton,object,as,value,since,4,3;public,static,listable,bean,factory,map,string,object,beans,assert,not,null,beans,beans,map,must,not,be,null,this,beans,beans
StaticListableBeanFactory -> public StaticListableBeanFactory(Map<String, Object> beans);1530174524;Create a {@code StaticListableBeanFactory} wrapping the given {@code Map}._<p>Note that the given {@code Map} may be pre-populated with beans__or new, still allowing for beans to be registered via {@link #addBean}__or {@link java.util.Collections#emptyMap()} for a dummy factory which_enforces operating against an empty set of beans._@param beans a {@code Map} for holding this factory's beans, with the_bean name String as key and the corresponding singleton object as value_@since 4.3;public StaticListableBeanFactory(Map<String, Object> beans) {_		Assert.notNull(beans, "Beans Map must not be null")__		this.beans = beans__	};create,a,code,static,listable,bean,factory,wrapping,the,given,code,map,p,note,that,the,given,code,map,may,be,pre,populated,with,beans,or,new,still,allowing,for,beans,to,be,registered,via,link,add,bean,or,link,java,util,collections,empty,map,for,a,dummy,factory,which,enforces,operating,against,an,empty,set,of,beans,param,beans,a,code,map,for,holding,this,factory,s,beans,with,the,bean,name,string,as,key,and,the,corresponding,singleton,object,as,value,since,4,3;public,static,listable,bean,factory,map,string,object,beans,assert,not,null,beans,beans,map,must,not,be,null,this,beans,beans
StaticListableBeanFactory -> public StaticListableBeanFactory(Map<String, Object> beans);1532385723;Create a {@code StaticListableBeanFactory} wrapping the given {@code Map}._<p>Note that the given {@code Map} may be pre-populated with beans__or new, still allowing for beans to be registered via {@link #addBean}__or {@link java.util.Collections#emptyMap()} for a dummy factory which_enforces operating against an empty set of beans._@param beans a {@code Map} for holding this factory's beans, with the_bean name String as key and the corresponding singleton object as value_@since 4.3;public StaticListableBeanFactory(Map<String, Object> beans) {_		Assert.notNull(beans, "Beans Map must not be null")__		this.beans = beans__	};create,a,code,static,listable,bean,factory,wrapping,the,given,code,map,p,note,that,the,given,code,map,may,be,pre,populated,with,beans,or,new,still,allowing,for,beans,to,be,registered,via,link,add,bean,or,link,java,util,collections,empty,map,for,a,dummy,factory,which,enforces,operating,against,an,empty,set,of,beans,param,beans,a,code,map,for,holding,this,factory,s,beans,with,the,bean,name,string,as,key,and,the,corresponding,singleton,object,as,value,since,4,3;public,static,listable,bean,factory,map,string,object,beans,assert,not,null,beans,beans,map,must,not,be,null,this,beans,beans
StaticListableBeanFactory -> public StaticListableBeanFactory(Map<String, Object> beans);1536962185;Create a {@code StaticListableBeanFactory} wrapping the given {@code Map}._<p>Note that the given {@code Map} may be pre-populated with beans__or new, still allowing for beans to be registered via {@link #addBean}__or {@link java.util.Collections#emptyMap()} for a dummy factory which_enforces operating against an empty set of beans._@param beans a {@code Map} for holding this factory's beans, with the_bean name String as key and the corresponding singleton object as value_@since 4.3;public StaticListableBeanFactory(Map<String, Object> beans) {_		Assert.notNull(beans, "Beans Map must not be null")__		this.beans = beans__	};create,a,code,static,listable,bean,factory,wrapping,the,given,code,map,p,note,that,the,given,code,map,may,be,pre,populated,with,beans,or,new,still,allowing,for,beans,to,be,registered,via,link,add,bean,or,link,java,util,collections,empty,map,for,a,dummy,factory,which,enforces,operating,against,an,empty,set,of,beans,param,beans,a,code,map,for,holding,this,factory,s,beans,with,the,bean,name,string,as,key,and,the,corresponding,singleton,object,as,value,since,4,3;public,static,listable,bean,factory,map,string,object,beans,assert,not,null,beans,beans,map,must,not,be,null,this,beans,beans
StaticListableBeanFactory -> public StaticListableBeanFactory(Map<String, Object> beans);1538724083;Create a {@code StaticListableBeanFactory} wrapping the given {@code Map}._<p>Note that the given {@code Map} may be pre-populated with beans__or new, still allowing for beans to be registered via {@link #addBean}__or {@link java.util.Collections#emptyMap()} for a dummy factory which_enforces operating against an empty set of beans._@param beans a {@code Map} for holding this factory's beans, with the_bean name String as key and the corresponding singleton object as value_@since 4.3;public StaticListableBeanFactory(Map<String, Object> beans) {_		Assert.notNull(beans, "Beans Map must not be null")__		this.beans = beans__	};create,a,code,static,listable,bean,factory,wrapping,the,given,code,map,p,note,that,the,given,code,map,may,be,pre,populated,with,beans,or,new,still,allowing,for,beans,to,be,registered,via,link,add,bean,or,link,java,util,collections,empty,map,for,a,dummy,factory,which,enforces,operating,against,an,empty,set,of,beans,param,beans,a,code,map,for,holding,this,factory,s,beans,with,the,bean,name,string,as,key,and,the,corresponding,singleton,object,as,value,since,4,3;public,static,listable,bean,factory,map,string,object,beans,assert,not,null,beans,beans,map,must,not,be,null,this,beans,beans
