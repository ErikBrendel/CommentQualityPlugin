# id;timestamp;commentText;codeText;commentWords;codeWords
NamespaceHandlerSupport -> @Override 	public BeanDefinition parse(Element element, ParserContext parserContext);1356735495;Parses the supplied {@link Element} by delegating to the {@link BeanDefinitionParser} that is_registered for that {@link Element}.;@Override_	public BeanDefinition parse(Element element, ParserContext parserContext) {_		return findParserForElement(element, parserContext).parse(element, parserContext)__	};parses,the,supplied,link,element,by,delegating,to,the,link,bean,definition,parser,that,is,registered,for,that,link,element;override,public,bean,definition,parse,element,element,parser,context,parser,context,return,find,parser,for,element,element,parser,context,parse,element,parser,context
NamespaceHandlerSupport -> @Override 	public BeanDefinition parse(Element element, ParserContext parserContext);1368482696;Parses the supplied {@link Element} by delegating to the {@link BeanDefinitionParser} that is_registered for that {@link Element}.;@Override_	public BeanDefinition parse(Element element, ParserContext parserContext) {_		return findParserForElement(element, parserContext).parse(element, parserContext)__	};parses,the,supplied,link,element,by,delegating,to,the,link,bean,definition,parser,that,is,registered,for,that,link,element;override,public,bean,definition,parse,element,element,parser,context,parser,context,return,find,parser,for,element,element,parser,context,parse,element,parser,context
NamespaceHandlerSupport -> @Override 	public BeanDefinition parse(Element element, ParserContext parserContext);1467730834;Parses the supplied {@link Element} by delegating to the {@link BeanDefinitionParser} that is_registered for that {@link Element}.;@Override_	public BeanDefinition parse(Element element, ParserContext parserContext) {_		return findParserForElement(element, parserContext).parse(element, parserContext)__	};parses,the,supplied,link,element,by,delegating,to,the,link,bean,definition,parser,that,is,registered,for,that,link,element;override,public,bean,definition,parse,element,element,parser,context,parser,context,return,find,parser,for,element,element,parser,context,parse,element,parser,context
NamespaceHandlerSupport -> @Override 	public BeanDefinition parse(Element element, ParserContext parserContext);1496837955;Parses the supplied {@link Element} by delegating to the {@link BeanDefinitionParser} that is_registered for that {@link Element}.;@Override_	public BeanDefinition parse(Element element, ParserContext parserContext) {_		BeanDefinitionParser parser = findParserForElement(element, parserContext)__		return (parser != null ? parser.parse(element, parserContext) : null)__	};parses,the,supplied,link,element,by,delegating,to,the,link,bean,definition,parser,that,is,registered,for,that,link,element;override,public,bean,definition,parse,element,element,parser,context,parser,context,bean,definition,parser,parser,find,parser,for,element,element,parser,context,return,parser,null,parser,parse,element,parser,context,null
NamespaceHandlerSupport -> @Nullable 	private BeanDefinitionDecorator findDecoratorForNode(Node node, ParserContext parserContext);1496837955;Locates the {@link BeanDefinitionParser} from the register implementations using_the local name of the supplied {@link Node}. Supports both {@link Element Elements}_and {@link Attr Attrs}.;@Nullable_	private BeanDefinitionDecorator findDecoratorForNode(Node node, ParserContext parserContext) {_		BeanDefinitionDecorator decorator = null__		String localName = parserContext.getDelegate().getLocalName(node)__		if (node instanceof Element) {_			decorator = this.decorators.get(localName)__		}_		else if (node instanceof Attr) {_			decorator = this.attributeDecorators.get(localName)__		}_		else {_			parserContext.getReaderContext().fatal(_					"Cannot decorate based on Nodes of type [" + node.getClass().getName() + "]", node)__		}_		if (decorator == null) {_			parserContext.getReaderContext().fatal("Cannot locate BeanDefinitionDecorator for " +_					(node instanceof Element ? "element" : "attribute") + " [" + localName + "]", node)__		}_		return decorator__	};locates,the,link,bean,definition,parser,from,the,register,implementations,using,the,local,name,of,the,supplied,link,node,supports,both,link,element,elements,and,link,attr,attrs;nullable,private,bean,definition,decorator,find,decorator,for,node,node,node,parser,context,parser,context,bean,definition,decorator,decorator,null,string,local,name,parser,context,get,delegate,get,local,name,node,if,node,instanceof,element,decorator,this,decorators,get,local,name,else,if,node,instanceof,attr,decorator,this,attribute,decorators,get,local,name,else,parser,context,get,reader,context,fatal,cannot,decorate,based,on,nodes,of,type,node,get,class,get,name,node,if,decorator,null,parser,context,get,reader,context,fatal,cannot,locate,bean,definition,decorator,for,node,instanceof,element,element,attribute,local,name,node,return,decorator
NamespaceHandlerSupport -> @Nullable 	private BeanDefinitionDecorator findDecoratorForNode(Node node, ParserContext parserContext);1502974979;Locates the {@link BeanDefinitionParser} from the register implementations using_the local name of the supplied {@link Node}. Supports both {@link Element Elements}_and {@link Attr Attrs}.;@Nullable_	private BeanDefinitionDecorator findDecoratorForNode(Node node, ParserContext parserContext) {_		BeanDefinitionDecorator decorator = null__		String localName = parserContext.getDelegate().getLocalName(node)__		if (node instanceof Element) {_			decorator = this.decorators.get(localName)__		}_		else if (node instanceof Attr) {_			decorator = this.attributeDecorators.get(localName)__		}_		else {_			parserContext.getReaderContext().fatal(_					"Cannot decorate based on Nodes of type [" + node.getClass().getName() + "]", node)__		}_		if (decorator == null) {_			parserContext.getReaderContext().fatal("Cannot locate BeanDefinitionDecorator for " +_					(node instanceof Element ? "element" : "attribute") + " [" + localName + "]", node)__		}_		return decorator__	};locates,the,link,bean,definition,parser,from,the,register,implementations,using,the,local,name,of,the,supplied,link,node,supports,both,link,element,elements,and,link,attr,attrs;nullable,private,bean,definition,decorator,find,decorator,for,node,node,node,parser,context,parser,context,bean,definition,decorator,decorator,null,string,local,name,parser,context,get,delegate,get,local,name,node,if,node,instanceof,element,decorator,this,decorators,get,local,name,else,if,node,instanceof,attr,decorator,this,attribute,decorators,get,local,name,else,parser,context,get,reader,context,fatal,cannot,decorate,based,on,nodes,of,type,node,get,class,get,name,node,if,decorator,null,parser,context,get,reader,context,fatal,cannot,locate,bean,definition,decorator,for,node,instanceof,element,element,attribute,local,name,node,return,decorator
NamespaceHandlerSupport -> private BeanDefinitionDecorator findDecoratorForNode(Node node, ParserContext parserContext);1328020251;Locates the {@link BeanDefinitionParser} from the register implementations using_the local name of the supplied {@link Node}. Supports both {@link Element Elements}_and {@link Attr Attrs}.;private BeanDefinitionDecorator findDecoratorForNode(Node node, ParserContext parserContext) {_		BeanDefinitionDecorator decorator = null__		String localName = parserContext.getDelegate().getLocalName(node)__		if (node instanceof Element) {_			decorator = this.decorators.get(localName)__		}_		else if (node instanceof Attr) {_			decorator = this.attributeDecorators.get(localName)__		}_		else {_			parserContext.getReaderContext().fatal(_					"Cannot decorate based on Nodes of type [" + node.getClass().getName() + "]", node)__		}_		if (decorator == null) {_			parserContext.getReaderContext().fatal("Cannot locate BeanDefinitionDecorator for " +_					(node instanceof Element ? "element" : "attribute") + " [" + localName + "]", node)__		}_		return decorator__	};locates,the,link,bean,definition,parser,from,the,register,implementations,using,the,local,name,of,the,supplied,link,node,supports,both,link,element,elements,and,link,attr,attrs;private,bean,definition,decorator,find,decorator,for,node,node,node,parser,context,parser,context,bean,definition,decorator,decorator,null,string,local,name,parser,context,get,delegate,get,local,name,node,if,node,instanceof,element,decorator,this,decorators,get,local,name,else,if,node,instanceof,attr,decorator,this,attribute,decorators,get,local,name,else,parser,context,get,reader,context,fatal,cannot,decorate,based,on,nodes,of,type,node,get,class,get,name,node,if,decorator,null,parser,context,get,reader,context,fatal,cannot,locate,bean,definition,decorator,for,node,instanceof,element,element,attribute,local,name,node,return,decorator
NamespaceHandlerSupport -> private BeanDefinitionDecorator findDecoratorForNode(Node node, ParserContext parserContext);1356735495;Locates the {@link BeanDefinitionParser} from the register implementations using_the local name of the supplied {@link Node}. Supports both {@link Element Elements}_and {@link Attr Attrs}.;private BeanDefinitionDecorator findDecoratorForNode(Node node, ParserContext parserContext) {_		BeanDefinitionDecorator decorator = null__		String localName = parserContext.getDelegate().getLocalName(node)__		if (node instanceof Element) {_			decorator = this.decorators.get(localName)__		}_		else if (node instanceof Attr) {_			decorator = this.attributeDecorators.get(localName)__		}_		else {_			parserContext.getReaderContext().fatal(_					"Cannot decorate based on Nodes of type [" + node.getClass().getName() + "]", node)__		}_		if (decorator == null) {_			parserContext.getReaderContext().fatal("Cannot locate BeanDefinitionDecorator for " +_					(node instanceof Element ? "element" : "attribute") + " [" + localName + "]", node)__		}_		return decorator__	};locates,the,link,bean,definition,parser,from,the,register,implementations,using,the,local,name,of,the,supplied,link,node,supports,both,link,element,elements,and,link,attr,attrs;private,bean,definition,decorator,find,decorator,for,node,node,node,parser,context,parser,context,bean,definition,decorator,decorator,null,string,local,name,parser,context,get,delegate,get,local,name,node,if,node,instanceof,element,decorator,this,decorators,get,local,name,else,if,node,instanceof,attr,decorator,this,attribute,decorators,get,local,name,else,parser,context,get,reader,context,fatal,cannot,decorate,based,on,nodes,of,type,node,get,class,get,name,node,if,decorator,null,parser,context,get,reader,context,fatal,cannot,locate,bean,definition,decorator,for,node,instanceof,element,element,attribute,local,name,node,return,decorator
NamespaceHandlerSupport -> private BeanDefinitionDecorator findDecoratorForNode(Node node, ParserContext parserContext);1357119239;Locates the {@link BeanDefinitionParser} from the register implementations using_the local name of the supplied {@link Node}. Supports both {@link Element Elements}_and {@link Attr Attrs}.;private BeanDefinitionDecorator findDecoratorForNode(Node node, ParserContext parserContext) {_		BeanDefinitionDecorator decorator = null__		String localName = parserContext.getDelegate().getLocalName(node)__		if (node instanceof Element) {_			decorator = this.decorators.get(localName)__		}_		else if (node instanceof Attr) {_			decorator = this.attributeDecorators.get(localName)__		}_		else {_			parserContext.getReaderContext().fatal(_					"Cannot decorate based on Nodes of type [" + node.getClass().getName() + "]", node)__		}_		if (decorator == null) {_			parserContext.getReaderContext().fatal("Cannot locate BeanDefinitionDecorator for " +_					(node instanceof Element ? "element" : "attribute") + " [" + localName + "]", node)__		}_		return decorator__	};locates,the,link,bean,definition,parser,from,the,register,implementations,using,the,local,name,of,the,supplied,link,node,supports,both,link,element,elements,and,link,attr,attrs;private,bean,definition,decorator,find,decorator,for,node,node,node,parser,context,parser,context,bean,definition,decorator,decorator,null,string,local,name,parser,context,get,delegate,get,local,name,node,if,node,instanceof,element,decorator,this,decorators,get,local,name,else,if,node,instanceof,attr,decorator,this,attribute,decorators,get,local,name,else,parser,context,get,reader,context,fatal,cannot,decorate,based,on,nodes,of,type,node,get,class,get,name,node,if,decorator,null,parser,context,get,reader,context,fatal,cannot,locate,bean,definition,decorator,for,node,instanceof,element,element,attribute,local,name,node,return,decorator
NamespaceHandlerSupport -> private BeanDefinitionDecorator findDecoratorForNode(Node node, ParserContext parserContext);1368482696;Locates the {@link BeanDefinitionParser} from the register implementations using_the local name of the supplied {@link Node}. Supports both {@link Element Elements}_and {@link Attr Attrs}.;private BeanDefinitionDecorator findDecoratorForNode(Node node, ParserContext parserContext) {_		BeanDefinitionDecorator decorator = null__		String localName = parserContext.getDelegate().getLocalName(node)__		if (node instanceof Element) {_			decorator = this.decorators.get(localName)__		}_		else if (node instanceof Attr) {_			decorator = this.attributeDecorators.get(localName)__		}_		else {_			parserContext.getReaderContext().fatal(_					"Cannot decorate based on Nodes of type [" + node.getClass().getName() + "]", node)__		}_		if (decorator == null) {_			parserContext.getReaderContext().fatal("Cannot locate BeanDefinitionDecorator for " +_					(node instanceof Element ? "element" : "attribute") + " [" + localName + "]", node)__		}_		return decorator__	};locates,the,link,bean,definition,parser,from,the,register,implementations,using,the,local,name,of,the,supplied,link,node,supports,both,link,element,elements,and,link,attr,attrs;private,bean,definition,decorator,find,decorator,for,node,node,node,parser,context,parser,context,bean,definition,decorator,decorator,null,string,local,name,parser,context,get,delegate,get,local,name,node,if,node,instanceof,element,decorator,this,decorators,get,local,name,else,if,node,instanceof,attr,decorator,this,attribute,decorators,get,local,name,else,parser,context,get,reader,context,fatal,cannot,decorate,based,on,nodes,of,type,node,get,class,get,name,node,if,decorator,null,parser,context,get,reader,context,fatal,cannot,locate,bean,definition,decorator,for,node,instanceof,element,element,attribute,local,name,node,return,decorator
NamespaceHandlerSupport -> private BeanDefinitionDecorator findDecoratorForNode(Node node, ParserContext parserContext);1467730834;Locates the {@link BeanDefinitionParser} from the register implementations using_the local name of the supplied {@link Node}. Supports both {@link Element Elements}_and {@link Attr Attrs}.;private BeanDefinitionDecorator findDecoratorForNode(Node node, ParserContext parserContext) {_		BeanDefinitionDecorator decorator = null__		String localName = parserContext.getDelegate().getLocalName(node)__		if (node instanceof Element) {_			decorator = this.decorators.get(localName)__		}_		else if (node instanceof Attr) {_			decorator = this.attributeDecorators.get(localName)__		}_		else {_			parserContext.getReaderContext().fatal(_					"Cannot decorate based on Nodes of type [" + node.getClass().getName() + "]", node)__		}_		if (decorator == null) {_			parserContext.getReaderContext().fatal("Cannot locate BeanDefinitionDecorator for " +_					(node instanceof Element ? "element" : "attribute") + " [" + localName + "]", node)__		}_		return decorator__	};locates,the,link,bean,definition,parser,from,the,register,implementations,using,the,local,name,of,the,supplied,link,node,supports,both,link,element,elements,and,link,attr,attrs;private,bean,definition,decorator,find,decorator,for,node,node,node,parser,context,parser,context,bean,definition,decorator,decorator,null,string,local,name,parser,context,get,delegate,get,local,name,node,if,node,instanceof,element,decorator,this,decorators,get,local,name,else,if,node,instanceof,attr,decorator,this,attribute,decorators,get,local,name,else,parser,context,get,reader,context,fatal,cannot,decorate,based,on,nodes,of,type,node,get,class,get,name,node,if,decorator,null,parser,context,get,reader,context,fatal,cannot,locate,bean,definition,decorator,for,node,instanceof,element,element,attribute,local,name,node,return,decorator
NamespaceHandlerSupport -> protected final void registerBeanDefinitionDecoratorForAttribute(String attrName, BeanDefinitionDecorator dec);1328020251;Subclasses can call this to register the supplied {@link BeanDefinitionDecorator} to_handle the specified attribute. The attribute name is the local (non-namespace qualified)_name.;protected final void registerBeanDefinitionDecoratorForAttribute(String attrName, BeanDefinitionDecorator dec) {_		this.attributeDecorators.put(attrName, dec)__	};subclasses,can,call,this,to,register,the,supplied,link,bean,definition,decorator,to,handle,the,specified,attribute,the,attribute,name,is,the,local,non,namespace,qualified,name;protected,final,void,register,bean,definition,decorator,for,attribute,string,attr,name,bean,definition,decorator,dec,this,attribute,decorators,put,attr,name,dec
NamespaceHandlerSupport -> protected final void registerBeanDefinitionDecoratorForAttribute(String attrName, BeanDefinitionDecorator dec);1356735495;Subclasses can call this to register the supplied {@link BeanDefinitionDecorator} to_handle the specified attribute. The attribute name is the local (non-namespace qualified)_name.;protected final void registerBeanDefinitionDecoratorForAttribute(String attrName, BeanDefinitionDecorator dec) {_		this.attributeDecorators.put(attrName, dec)__	};subclasses,can,call,this,to,register,the,supplied,link,bean,definition,decorator,to,handle,the,specified,attribute,the,attribute,name,is,the,local,non,namespace,qualified,name;protected,final,void,register,bean,definition,decorator,for,attribute,string,attr,name,bean,definition,decorator,dec,this,attribute,decorators,put,attr,name,dec
NamespaceHandlerSupport -> protected final void registerBeanDefinitionDecoratorForAttribute(String attrName, BeanDefinitionDecorator dec);1357119239;Subclasses can call this to register the supplied {@link BeanDefinitionDecorator} to_handle the specified attribute. The attribute name is the local (non-namespace qualified)_name.;protected final void registerBeanDefinitionDecoratorForAttribute(String attrName, BeanDefinitionDecorator dec) {_		this.attributeDecorators.put(attrName, dec)__	};subclasses,can,call,this,to,register,the,supplied,link,bean,definition,decorator,to,handle,the,specified,attribute,the,attribute,name,is,the,local,non,namespace,qualified,name;protected,final,void,register,bean,definition,decorator,for,attribute,string,attr,name,bean,definition,decorator,dec,this,attribute,decorators,put,attr,name,dec
NamespaceHandlerSupport -> protected final void registerBeanDefinitionDecoratorForAttribute(String attrName, BeanDefinitionDecorator dec);1368482696;Subclasses can call this to register the supplied {@link BeanDefinitionDecorator} to_handle the specified attribute. The attribute name is the local (non-namespace qualified)_name.;protected final void registerBeanDefinitionDecoratorForAttribute(String attrName, BeanDefinitionDecorator dec) {_		this.attributeDecorators.put(attrName, dec)__	};subclasses,can,call,this,to,register,the,supplied,link,bean,definition,decorator,to,handle,the,specified,attribute,the,attribute,name,is,the,local,non,namespace,qualified,name;protected,final,void,register,bean,definition,decorator,for,attribute,string,attr,name,bean,definition,decorator,dec,this,attribute,decorators,put,attr,name,dec
NamespaceHandlerSupport -> protected final void registerBeanDefinitionDecoratorForAttribute(String attrName, BeanDefinitionDecorator dec);1467730834;Subclasses can call this to register the supplied {@link BeanDefinitionDecorator} to_handle the specified attribute. The attribute name is the local (non-namespace qualified)_name.;protected final void registerBeanDefinitionDecoratorForAttribute(String attrName, BeanDefinitionDecorator dec) {_		this.attributeDecorators.put(attrName, dec)__	};subclasses,can,call,this,to,register,the,supplied,link,bean,definition,decorator,to,handle,the,specified,attribute,the,attribute,name,is,the,local,non,namespace,qualified,name;protected,final,void,register,bean,definition,decorator,for,attribute,string,attr,name,bean,definition,decorator,dec,this,attribute,decorators,put,attr,name,dec
NamespaceHandlerSupport -> protected final void registerBeanDefinitionDecoratorForAttribute(String attrName, BeanDefinitionDecorator dec);1496837955;Subclasses can call this to register the supplied {@link BeanDefinitionDecorator} to_handle the specified attribute. The attribute name is the local (non-namespace qualified)_name.;protected final void registerBeanDefinitionDecoratorForAttribute(String attrName, BeanDefinitionDecorator dec) {_		this.attributeDecorators.put(attrName, dec)__	};subclasses,can,call,this,to,register,the,supplied,link,bean,definition,decorator,to,handle,the,specified,attribute,the,attribute,name,is,the,local,non,namespace,qualified,name;protected,final,void,register,bean,definition,decorator,for,attribute,string,attr,name,bean,definition,decorator,dec,this,attribute,decorators,put,attr,name,dec
NamespaceHandlerSupport -> protected final void registerBeanDefinitionDecoratorForAttribute(String attrName, BeanDefinitionDecorator dec);1502974979;Subclasses can call this to register the supplied {@link BeanDefinitionDecorator} to_handle the specified attribute. The attribute name is the local (non-namespace qualified)_name.;protected final void registerBeanDefinitionDecoratorForAttribute(String attrName, BeanDefinitionDecorator dec) {_		this.attributeDecorators.put(attrName, dec)__	};subclasses,can,call,this,to,register,the,supplied,link,bean,definition,decorator,to,handle,the,specified,attribute,the,attribute,name,is,the,local,non,namespace,qualified,name;protected,final,void,register,bean,definition,decorator,for,attribute,string,attr,name,bean,definition,decorator,dec,this,attribute,decorators,put,attr,name,dec
NamespaceHandlerSupport -> public BeanDefinition parse(Element element, ParserContext parserContext);1328020251;Parses the supplied {@link Element} by delegating to the {@link BeanDefinitionParser} that is_registered for that {@link Element}.;public BeanDefinition parse(Element element, ParserContext parserContext) {_		return findParserForElement(element, parserContext).parse(element, parserContext)__	};parses,the,supplied,link,element,by,delegating,to,the,link,bean,definition,parser,that,is,registered,for,that,link,element;public,bean,definition,parse,element,element,parser,context,parser,context,return,find,parser,for,element,element,parser,context,parse,element,parser,context
NamespaceHandlerSupport -> public BeanDefinition parse(Element element, ParserContext parserContext);1357119239;Parses the supplied {@link Element} by delegating to the {@link BeanDefinitionParser} that is_registered for that {@link Element}.;public BeanDefinition parse(Element element, ParserContext parserContext) {_		return findParserForElement(element, parserContext).parse(element, parserContext)__	};parses,the,supplied,link,element,by,delegating,to,the,link,bean,definition,parser,that,is,registered,for,that,link,element;public,bean,definition,parse,element,element,parser,context,parser,context,return,find,parser,for,element,element,parser,context,parse,element,parser,context
NamespaceHandlerSupport -> protected final void registerBeanDefinitionDecorator(String elementName, BeanDefinitionDecorator dec);1328020251;Subclasses can call this to register the supplied {@link BeanDefinitionDecorator} to_handle the specified element. The element name is the local (non-namespace qualified)_name.;protected final void registerBeanDefinitionDecorator(String elementName, BeanDefinitionDecorator dec) {_		this.decorators.put(elementName, dec)__	};subclasses,can,call,this,to,register,the,supplied,link,bean,definition,decorator,to,handle,the,specified,element,the,element,name,is,the,local,non,namespace,qualified,name;protected,final,void,register,bean,definition,decorator,string,element,name,bean,definition,decorator,dec,this,decorators,put,element,name,dec
NamespaceHandlerSupport -> protected final void registerBeanDefinitionDecorator(String elementName, BeanDefinitionDecorator dec);1356735495;Subclasses can call this to register the supplied {@link BeanDefinitionDecorator} to_handle the specified element. The element name is the local (non-namespace qualified)_name.;protected final void registerBeanDefinitionDecorator(String elementName, BeanDefinitionDecorator dec) {_		this.decorators.put(elementName, dec)__	};subclasses,can,call,this,to,register,the,supplied,link,bean,definition,decorator,to,handle,the,specified,element,the,element,name,is,the,local,non,namespace,qualified,name;protected,final,void,register,bean,definition,decorator,string,element,name,bean,definition,decorator,dec,this,decorators,put,element,name,dec
NamespaceHandlerSupport -> protected final void registerBeanDefinitionDecorator(String elementName, BeanDefinitionDecorator dec);1357119239;Subclasses can call this to register the supplied {@link BeanDefinitionDecorator} to_handle the specified element. The element name is the local (non-namespace qualified)_name.;protected final void registerBeanDefinitionDecorator(String elementName, BeanDefinitionDecorator dec) {_		this.decorators.put(elementName, dec)__	};subclasses,can,call,this,to,register,the,supplied,link,bean,definition,decorator,to,handle,the,specified,element,the,element,name,is,the,local,non,namespace,qualified,name;protected,final,void,register,bean,definition,decorator,string,element,name,bean,definition,decorator,dec,this,decorators,put,element,name,dec
NamespaceHandlerSupport -> protected final void registerBeanDefinitionDecorator(String elementName, BeanDefinitionDecorator dec);1368482696;Subclasses can call this to register the supplied {@link BeanDefinitionDecorator} to_handle the specified element. The element name is the local (non-namespace qualified)_name.;protected final void registerBeanDefinitionDecorator(String elementName, BeanDefinitionDecorator dec) {_		this.decorators.put(elementName, dec)__	};subclasses,can,call,this,to,register,the,supplied,link,bean,definition,decorator,to,handle,the,specified,element,the,element,name,is,the,local,non,namespace,qualified,name;protected,final,void,register,bean,definition,decorator,string,element,name,bean,definition,decorator,dec,this,decorators,put,element,name,dec
NamespaceHandlerSupport -> protected final void registerBeanDefinitionDecorator(String elementName, BeanDefinitionDecorator dec);1467730834;Subclasses can call this to register the supplied {@link BeanDefinitionDecorator} to_handle the specified element. The element name is the local (non-namespace qualified)_name.;protected final void registerBeanDefinitionDecorator(String elementName, BeanDefinitionDecorator dec) {_		this.decorators.put(elementName, dec)__	};subclasses,can,call,this,to,register,the,supplied,link,bean,definition,decorator,to,handle,the,specified,element,the,element,name,is,the,local,non,namespace,qualified,name;protected,final,void,register,bean,definition,decorator,string,element,name,bean,definition,decorator,dec,this,decorators,put,element,name,dec
NamespaceHandlerSupport -> protected final void registerBeanDefinitionDecorator(String elementName, BeanDefinitionDecorator dec);1496837955;Subclasses can call this to register the supplied {@link BeanDefinitionDecorator} to_handle the specified element. The element name is the local (non-namespace qualified)_name.;protected final void registerBeanDefinitionDecorator(String elementName, BeanDefinitionDecorator dec) {_		this.decorators.put(elementName, dec)__	};subclasses,can,call,this,to,register,the,supplied,link,bean,definition,decorator,to,handle,the,specified,element,the,element,name,is,the,local,non,namespace,qualified,name;protected,final,void,register,bean,definition,decorator,string,element,name,bean,definition,decorator,dec,this,decorators,put,element,name,dec
NamespaceHandlerSupport -> protected final void registerBeanDefinitionDecorator(String elementName, BeanDefinitionDecorator dec);1502974979;Subclasses can call this to register the supplied {@link BeanDefinitionDecorator} to_handle the specified element. The element name is the local (non-namespace qualified)_name.;protected final void registerBeanDefinitionDecorator(String elementName, BeanDefinitionDecorator dec) {_		this.decorators.put(elementName, dec)__	};subclasses,can,call,this,to,register,the,supplied,link,bean,definition,decorator,to,handle,the,specified,element,the,element,name,is,the,local,non,namespace,qualified,name;protected,final,void,register,bean,definition,decorator,string,element,name,bean,definition,decorator,dec,this,decorators,put,element,name,dec
NamespaceHandlerSupport -> @Nullable 	private BeanDefinitionParser findParserForElement(Element element, ParserContext parserContext);1496837955;Locates the {@link BeanDefinitionParser} from the register implementations using_the local name of the supplied {@link Element}.;@Nullable_	private BeanDefinitionParser findParserForElement(Element element, ParserContext parserContext) {_		String localName = parserContext.getDelegate().getLocalName(element)__		BeanDefinitionParser parser = this.parsers.get(localName)__		if (parser == null) {_			parserContext.getReaderContext().fatal(_					"Cannot locate BeanDefinitionParser for element [" + localName + "]", element)__		}_		return parser__	};locates,the,link,bean,definition,parser,from,the,register,implementations,using,the,local,name,of,the,supplied,link,element;nullable,private,bean,definition,parser,find,parser,for,element,element,element,parser,context,parser,context,string,local,name,parser,context,get,delegate,get,local,name,element,bean,definition,parser,parser,this,parsers,get,local,name,if,parser,null,parser,context,get,reader,context,fatal,cannot,locate,bean,definition,parser,for,element,local,name,element,return,parser
NamespaceHandlerSupport -> @Nullable 	private BeanDefinitionParser findParserForElement(Element element, ParserContext parserContext);1502974979;Locates the {@link BeanDefinitionParser} from the register implementations using_the local name of the supplied {@link Element}.;@Nullable_	private BeanDefinitionParser findParserForElement(Element element, ParserContext parserContext) {_		String localName = parserContext.getDelegate().getLocalName(element)__		BeanDefinitionParser parser = this.parsers.get(localName)__		if (parser == null) {_			parserContext.getReaderContext().fatal(_					"Cannot locate BeanDefinitionParser for element [" + localName + "]", element)__		}_		return parser__	};locates,the,link,bean,definition,parser,from,the,register,implementations,using,the,local,name,of,the,supplied,link,element;nullable,private,bean,definition,parser,find,parser,for,element,element,element,parser,context,parser,context,string,local,name,parser,context,get,delegate,get,local,name,element,bean,definition,parser,parser,this,parsers,get,local,name,if,parser,null,parser,context,get,reader,context,fatal,cannot,locate,bean,definition,parser,for,element,local,name,element,return,parser
NamespaceHandlerSupport -> protected final void registerBeanDefinitionParser(String elementName, BeanDefinitionParser parser);1328020251;Subclasses can call this to register the supplied {@link BeanDefinitionParser} to_handle the specified element. The element name is the local (non-namespace qualified)_name.;protected final void registerBeanDefinitionParser(String elementName, BeanDefinitionParser parser) {_		this.parsers.put(elementName, parser)__	};subclasses,can,call,this,to,register,the,supplied,link,bean,definition,parser,to,handle,the,specified,element,the,element,name,is,the,local,non,namespace,qualified,name;protected,final,void,register,bean,definition,parser,string,element,name,bean,definition,parser,parser,this,parsers,put,element,name,parser
NamespaceHandlerSupport -> protected final void registerBeanDefinitionParser(String elementName, BeanDefinitionParser parser);1356735495;Subclasses can call this to register the supplied {@link BeanDefinitionParser} to_handle the specified element. The element name is the local (non-namespace qualified)_name.;protected final void registerBeanDefinitionParser(String elementName, BeanDefinitionParser parser) {_		this.parsers.put(elementName, parser)__	};subclasses,can,call,this,to,register,the,supplied,link,bean,definition,parser,to,handle,the,specified,element,the,element,name,is,the,local,non,namespace,qualified,name;protected,final,void,register,bean,definition,parser,string,element,name,bean,definition,parser,parser,this,parsers,put,element,name,parser
NamespaceHandlerSupport -> protected final void registerBeanDefinitionParser(String elementName, BeanDefinitionParser parser);1357119239;Subclasses can call this to register the supplied {@link BeanDefinitionParser} to_handle the specified element. The element name is the local (non-namespace qualified)_name.;protected final void registerBeanDefinitionParser(String elementName, BeanDefinitionParser parser) {_		this.parsers.put(elementName, parser)__	};subclasses,can,call,this,to,register,the,supplied,link,bean,definition,parser,to,handle,the,specified,element,the,element,name,is,the,local,non,namespace,qualified,name;protected,final,void,register,bean,definition,parser,string,element,name,bean,definition,parser,parser,this,parsers,put,element,name,parser
NamespaceHandlerSupport -> protected final void registerBeanDefinitionParser(String elementName, BeanDefinitionParser parser);1368482696;Subclasses can call this to register the supplied {@link BeanDefinitionParser} to_handle the specified element. The element name is the local (non-namespace qualified)_name.;protected final void registerBeanDefinitionParser(String elementName, BeanDefinitionParser parser) {_		this.parsers.put(elementName, parser)__	};subclasses,can,call,this,to,register,the,supplied,link,bean,definition,parser,to,handle,the,specified,element,the,element,name,is,the,local,non,namespace,qualified,name;protected,final,void,register,bean,definition,parser,string,element,name,bean,definition,parser,parser,this,parsers,put,element,name,parser
NamespaceHandlerSupport -> protected final void registerBeanDefinitionParser(String elementName, BeanDefinitionParser parser);1467730834;Subclasses can call this to register the supplied {@link BeanDefinitionParser} to_handle the specified element. The element name is the local (non-namespace qualified)_name.;protected final void registerBeanDefinitionParser(String elementName, BeanDefinitionParser parser) {_		this.parsers.put(elementName, parser)__	};subclasses,can,call,this,to,register,the,supplied,link,bean,definition,parser,to,handle,the,specified,element,the,element,name,is,the,local,non,namespace,qualified,name;protected,final,void,register,bean,definition,parser,string,element,name,bean,definition,parser,parser,this,parsers,put,element,name,parser
NamespaceHandlerSupport -> protected final void registerBeanDefinitionParser(String elementName, BeanDefinitionParser parser);1496837955;Subclasses can call this to register the supplied {@link BeanDefinitionParser} to_handle the specified element. The element name is the local (non-namespace qualified)_name.;protected final void registerBeanDefinitionParser(String elementName, BeanDefinitionParser parser) {_		this.parsers.put(elementName, parser)__	};subclasses,can,call,this,to,register,the,supplied,link,bean,definition,parser,to,handle,the,specified,element,the,element,name,is,the,local,non,namespace,qualified,name;protected,final,void,register,bean,definition,parser,string,element,name,bean,definition,parser,parser,this,parsers,put,element,name,parser
NamespaceHandlerSupport -> protected final void registerBeanDefinitionParser(String elementName, BeanDefinitionParser parser);1502974979;Subclasses can call this to register the supplied {@link BeanDefinitionParser} to_handle the specified element. The element name is the local (non-namespace qualified)_name.;protected final void registerBeanDefinitionParser(String elementName, BeanDefinitionParser parser) {_		this.parsers.put(elementName, parser)__	};subclasses,can,call,this,to,register,the,supplied,link,bean,definition,parser,to,handle,the,specified,element,the,element,name,is,the,local,non,namespace,qualified,name;protected,final,void,register,bean,definition,parser,string,element,name,bean,definition,parser,parser,this,parsers,put,element,name,parser
NamespaceHandlerSupport -> private BeanDefinitionParser findParserForElement(Element element, ParserContext parserContext);1328020251;Locates the {@link BeanDefinitionParser} from the register implementations using_the local name of the supplied {@link Element}.;private BeanDefinitionParser findParserForElement(Element element, ParserContext parserContext) {_		String localName = parserContext.getDelegate().getLocalName(element)__		BeanDefinitionParser parser = this.parsers.get(localName)__		if (parser == null) {_			parserContext.getReaderContext().fatal(_					"Cannot locate BeanDefinitionParser for element [" + localName + "]", element)__		}_		return parser__	};locates,the,link,bean,definition,parser,from,the,register,implementations,using,the,local,name,of,the,supplied,link,element;private,bean,definition,parser,find,parser,for,element,element,element,parser,context,parser,context,string,local,name,parser,context,get,delegate,get,local,name,element,bean,definition,parser,parser,this,parsers,get,local,name,if,parser,null,parser,context,get,reader,context,fatal,cannot,locate,bean,definition,parser,for,element,local,name,element,return,parser
NamespaceHandlerSupport -> private BeanDefinitionParser findParserForElement(Element element, ParserContext parserContext);1356735495;Locates the {@link BeanDefinitionParser} from the register implementations using_the local name of the supplied {@link Element}.;private BeanDefinitionParser findParserForElement(Element element, ParserContext parserContext) {_		String localName = parserContext.getDelegate().getLocalName(element)__		BeanDefinitionParser parser = this.parsers.get(localName)__		if (parser == null) {_			parserContext.getReaderContext().fatal(_					"Cannot locate BeanDefinitionParser for element [" + localName + "]", element)__		}_		return parser__	};locates,the,link,bean,definition,parser,from,the,register,implementations,using,the,local,name,of,the,supplied,link,element;private,bean,definition,parser,find,parser,for,element,element,element,parser,context,parser,context,string,local,name,parser,context,get,delegate,get,local,name,element,bean,definition,parser,parser,this,parsers,get,local,name,if,parser,null,parser,context,get,reader,context,fatal,cannot,locate,bean,definition,parser,for,element,local,name,element,return,parser
NamespaceHandlerSupport -> private BeanDefinitionParser findParserForElement(Element element, ParserContext parserContext);1357119239;Locates the {@link BeanDefinitionParser} from the register implementations using_the local name of the supplied {@link Element}.;private BeanDefinitionParser findParserForElement(Element element, ParserContext parserContext) {_		String localName = parserContext.getDelegate().getLocalName(element)__		BeanDefinitionParser parser = this.parsers.get(localName)__		if (parser == null) {_			parserContext.getReaderContext().fatal(_					"Cannot locate BeanDefinitionParser for element [" + localName + "]", element)__		}_		return parser__	};locates,the,link,bean,definition,parser,from,the,register,implementations,using,the,local,name,of,the,supplied,link,element;private,bean,definition,parser,find,parser,for,element,element,element,parser,context,parser,context,string,local,name,parser,context,get,delegate,get,local,name,element,bean,definition,parser,parser,this,parsers,get,local,name,if,parser,null,parser,context,get,reader,context,fatal,cannot,locate,bean,definition,parser,for,element,local,name,element,return,parser
NamespaceHandlerSupport -> private BeanDefinitionParser findParserForElement(Element element, ParserContext parserContext);1368482696;Locates the {@link BeanDefinitionParser} from the register implementations using_the local name of the supplied {@link Element}.;private BeanDefinitionParser findParserForElement(Element element, ParserContext parserContext) {_		String localName = parserContext.getDelegate().getLocalName(element)__		BeanDefinitionParser parser = this.parsers.get(localName)__		if (parser == null) {_			parserContext.getReaderContext().fatal(_					"Cannot locate BeanDefinitionParser for element [" + localName + "]", element)__		}_		return parser__	};locates,the,link,bean,definition,parser,from,the,register,implementations,using,the,local,name,of,the,supplied,link,element;private,bean,definition,parser,find,parser,for,element,element,element,parser,context,parser,context,string,local,name,parser,context,get,delegate,get,local,name,element,bean,definition,parser,parser,this,parsers,get,local,name,if,parser,null,parser,context,get,reader,context,fatal,cannot,locate,bean,definition,parser,for,element,local,name,element,return,parser
NamespaceHandlerSupport -> private BeanDefinitionParser findParserForElement(Element element, ParserContext parserContext);1467730834;Locates the {@link BeanDefinitionParser} from the register implementations using_the local name of the supplied {@link Element}.;private BeanDefinitionParser findParserForElement(Element element, ParserContext parserContext) {_		String localName = parserContext.getDelegate().getLocalName(element)__		BeanDefinitionParser parser = this.parsers.get(localName)__		if (parser == null) {_			parserContext.getReaderContext().fatal(_					"Cannot locate BeanDefinitionParser for element [" + localName + "]", element)__		}_		return parser__	};locates,the,link,bean,definition,parser,from,the,register,implementations,using,the,local,name,of,the,supplied,link,element;private,bean,definition,parser,find,parser,for,element,element,element,parser,context,parser,context,string,local,name,parser,context,get,delegate,get,local,name,element,bean,definition,parser,parser,this,parsers,get,local,name,if,parser,null,parser,context,get,reader,context,fatal,cannot,locate,bean,definition,parser,for,element,local,name,element,return,parser
NamespaceHandlerSupport -> public BeanDefinitionHolder decorate( 			Node node, BeanDefinitionHolder definition, ParserContext parserContext);1328020251;Decorates the supplied {@link Node} by delegating to the {@link BeanDefinitionDecorator} that_is registered to handle that {@link Node}.;public BeanDefinitionHolder decorate(_			Node node, BeanDefinitionHolder definition, ParserContext parserContext) {__		return findDecoratorForNode(node, parserContext).decorate(node, definition, parserContext)__	};decorates,the,supplied,link,node,by,delegating,to,the,link,bean,definition,decorator,that,is,registered,to,handle,that,link,node;public,bean,definition,holder,decorate,node,node,bean,definition,holder,definition,parser,context,parser,context,return,find,decorator,for,node,node,parser,context,decorate,node,definition,parser,context
NamespaceHandlerSupport -> public BeanDefinitionHolder decorate( 			Node node, BeanDefinitionHolder definition, ParserContext parserContext);1357119239;Decorates the supplied {@link Node} by delegating to the {@link BeanDefinitionDecorator} that_is registered to handle that {@link Node}.;public BeanDefinitionHolder decorate(_			Node node, BeanDefinitionHolder definition, ParserContext parserContext) {__		return findDecoratorForNode(node, parserContext).decorate(node, definition, parserContext)__	};decorates,the,supplied,link,node,by,delegating,to,the,link,bean,definition,decorator,that,is,registered,to,handle,that,link,node;public,bean,definition,holder,decorate,node,node,bean,definition,holder,definition,parser,context,parser,context,return,find,decorator,for,node,node,parser,context,decorate,node,definition,parser,context
NamespaceHandlerSupport -> @Override 	public BeanDefinitionHolder decorate( 			Node node, BeanDefinitionHolder definition, ParserContext parserContext);1356735495;Decorates the supplied {@link Node} by delegating to the {@link BeanDefinitionDecorator} that_is registered to handle that {@link Node}.;@Override_	public BeanDefinitionHolder decorate(_			Node node, BeanDefinitionHolder definition, ParserContext parserContext) {__		return findDecoratorForNode(node, parserContext).decorate(node, definition, parserContext)__	};decorates,the,supplied,link,node,by,delegating,to,the,link,bean,definition,decorator,that,is,registered,to,handle,that,link,node;override,public,bean,definition,holder,decorate,node,node,bean,definition,holder,definition,parser,context,parser,context,return,find,decorator,for,node,node,parser,context,decorate,node,definition,parser,context
NamespaceHandlerSupport -> @Override 	public BeanDefinitionHolder decorate( 			Node node, BeanDefinitionHolder definition, ParserContext parserContext);1368482696;Decorates the supplied {@link Node} by delegating to the {@link BeanDefinitionDecorator} that_is registered to handle that {@link Node}.;@Override_	public BeanDefinitionHolder decorate(_			Node node, BeanDefinitionHolder definition, ParserContext parserContext) {__		return findDecoratorForNode(node, parserContext).decorate(node, definition, parserContext)__	};decorates,the,supplied,link,node,by,delegating,to,the,link,bean,definition,decorator,that,is,registered,to,handle,that,link,node;override,public,bean,definition,holder,decorate,node,node,bean,definition,holder,definition,parser,context,parser,context,return,find,decorator,for,node,node,parser,context,decorate,node,definition,parser,context
NamespaceHandlerSupport -> @Override 	public BeanDefinitionHolder decorate( 			Node node, BeanDefinitionHolder definition, ParserContext parserContext);1467730834;Decorates the supplied {@link Node} by delegating to the {@link BeanDefinitionDecorator} that_is registered to handle that {@link Node}.;@Override_	public BeanDefinitionHolder decorate(_			Node node, BeanDefinitionHolder definition, ParserContext parserContext) {__		return findDecoratorForNode(node, parserContext).decorate(node, definition, parserContext)__	};decorates,the,supplied,link,node,by,delegating,to,the,link,bean,definition,decorator,that,is,registered,to,handle,that,link,node;override,public,bean,definition,holder,decorate,node,node,bean,definition,holder,definition,parser,context,parser,context,return,find,decorator,for,node,node,parser,context,decorate,node,definition,parser,context
NamespaceHandlerSupport -> @Override 	public BeanDefinitionHolder decorate( 			Node node, BeanDefinitionHolder definition, ParserContext parserContext);1496837955;Decorates the supplied {@link Node} by delegating to the {@link BeanDefinitionDecorator} that_is registered to handle that {@link Node}.;@Override_	public BeanDefinitionHolder decorate(_			Node node, BeanDefinitionHolder definition, ParserContext parserContext) {__		BeanDefinitionDecorator decorator = findDecoratorForNode(node, parserContext)__		return (decorator != null ? decorator.decorate(node, definition, parserContext) : null)__	};decorates,the,supplied,link,node,by,delegating,to,the,link,bean,definition,decorator,that,is,registered,to,handle,that,link,node;override,public,bean,definition,holder,decorate,node,node,bean,definition,holder,definition,parser,context,parser,context,bean,definition,decorator,decorator,find,decorator,for,node,node,parser,context,return,decorator,null,decorator,decorate,node,definition,parser,context,null
