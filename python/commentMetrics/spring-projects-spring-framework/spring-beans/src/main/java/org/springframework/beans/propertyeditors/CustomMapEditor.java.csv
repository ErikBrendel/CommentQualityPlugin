# id;timestamp;commentText;codeText;commentWords;codeWords
CustomMapEditor -> protected Map createMap(Class mapType, int initialCapacity);1328020251;Create a Map of the given type, with the given_initial capacity (if supported by the Map type)._@param mapType a sub-interface of Map_@param initialCapacity the initial capacity_@return the new Map instance;protected Map createMap(Class mapType, int initialCapacity) {_		if (!mapType.isInterface()) {_			try {_				return (Map) mapType.newInstance()__			}_			catch (Exception ex) {_				throw new IllegalArgumentException(_						"Could not instantiate map class [" + mapType.getName() + "]: " + ex.getMessage())__			}_		}_		else if (SortedMap.class.equals(mapType)) {_			return new TreeMap()__		}_		else {_			return new LinkedHashMap(initialCapacity)__		}_	};create,a,map,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,map,type,param,map,type,a,sub,interface,of,map,param,initial,capacity,the,initial,capacity,return,the,new,map,instance;protected,map,create,map,class,map,type,int,initial,capacity,if,map,type,is,interface,try,return,map,map,type,new,instance,catch,exception,ex,throw,new,illegal,argument,exception,could,not,instantiate,map,class,map,type,get,name,ex,get,message,else,if,sorted,map,class,equals,map,type,return,new,tree,map,else,return,new,linked,hash,map,initial,capacity
CustomMapEditor -> protected Map createMap(Class mapType, int initialCapacity);1356735495;Create a Map of the given type, with the given_initial capacity (if supported by the Map type)._@param mapType a sub-interface of Map_@param initialCapacity the initial capacity_@return the new Map instance;protected Map createMap(Class mapType, int initialCapacity) {_		if (!mapType.isInterface()) {_			try {_				return (Map) mapType.newInstance()__			}_			catch (Exception ex) {_				throw new IllegalArgumentException(_						"Could not instantiate map class [" + mapType.getName() + "]: " + ex.getMessage())__			}_		}_		else if (SortedMap.class.equals(mapType)) {_			return new TreeMap()__		}_		else {_			return new LinkedHashMap(initialCapacity)__		}_	};create,a,map,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,map,type,param,map,type,a,sub,interface,of,map,param,initial,capacity,the,initial,capacity,return,the,new,map,instance;protected,map,create,map,class,map,type,int,initial,capacity,if,map,type,is,interface,try,return,map,map,type,new,instance,catch,exception,ex,throw,new,illegal,argument,exception,could,not,instantiate,map,class,map,type,get,name,ex,get,message,else,if,sorted,map,class,equals,map,type,return,new,tree,map,else,return,new,linked,hash,map,initial,capacity
CustomMapEditor -> @Override 	public String getAsText();1328020251;This implementation returns <code>null</code> to indicate that_there is no appropriate text representation.;@Override_	public String getAsText() {_		return null__	};this,implementation,returns,code,null,code,to,indicate,that,there,is,no,appropriate,text,representation;override,public,string,get,as,text,return,null
CustomMapEditor -> @Override 	public String getAsText();1356735495;This implementation returns {@code null} to indicate that_there is no appropriate text representation.;@Override_	public String getAsText() {_		return null__	};this,implementation,returns,code,null,to,indicate,that,there,is,no,appropriate,text,representation;override,public,string,get,as,text,return,null
CustomMapEditor -> @Override 	public String getAsText();1385412762;This implementation returns {@code null} to indicate that_there is no appropriate text representation.;@Override_	public String getAsText() {_		return null__	};this,implementation,returns,code,null,to,indicate,that,there,is,no,appropriate,text,representation;override,public,string,get,as,text,return,null
CustomMapEditor -> @Override 	public String getAsText();1432125256;This implementation returns {@code null} to indicate that_there is no appropriate text representation.;@Override_	public String getAsText() {_		return null__	};this,implementation,returns,code,null,to,indicate,that,there,is,no,appropriate,text,representation;override,public,string,get,as,text,return,null
CustomMapEditor -> @Override 	public String getAsText();1467730834;This implementation returns {@code null} to indicate that_there is no appropriate text representation.;@Override_	public String getAsText() {_		return null__	};this,implementation,returns,code,null,to,indicate,that,there,is,no,appropriate,text,representation;override,public,string,get,as,text,return,null
CustomMapEditor -> @Override 	public String getAsText();1468948866;This implementation returns {@code null} to indicate that_there is no appropriate text representation.;@Override_	public String getAsText() {_		return null__	};this,implementation,returns,code,null,to,indicate,that,there,is,no,appropriate,text,representation;override,public,string,get,as,text,return,null
CustomMapEditor -> @SuppressWarnings("rawtypes") 	public CustomMapEditor(Class<? extends Map> mapType, boolean nullAsEmptyMap);1385412762;Create a new CustomMapEditor for the given target type._<p>If the incoming value is of the given type, it will be used as-is._If it is a different Map type or an array, it will be converted_to a default implementation of the given Map type._If the value is anything else, a target Map with that single_value will be created._<p>The default Map implementations are: TreeMap for SortedMap,_and LinkedHashMap for Map._@param mapType the target type, which needs to be a_sub-interface of Map or a concrete Map class_@param nullAsEmptyMap ap whether to convert an incoming {@code null}_value to an empty Map (of the appropriate type)_@see java.util.Map_@see java.util.TreeMap_@see java.util.LinkedHashMap;@SuppressWarnings("rawtypes")_	public CustomMapEditor(Class<? extends Map> mapType, boolean nullAsEmptyMap) {_		if (mapType == null) {_			throw new IllegalArgumentException("Map type is required")__		}_		if (!Map.class.isAssignableFrom(mapType)) {_			throw new IllegalArgumentException(_					"Map type [" + mapType.getName() + "] does not implement [java.util.Map]")__		}_		this.mapType = mapType__		this.nullAsEmptyMap = nullAsEmptyMap__	};create,a,new,custom,map,editor,for,the,given,target,type,p,if,the,incoming,value,is,of,the,given,type,it,will,be,used,as,is,if,it,is,a,different,map,type,or,an,array,it,will,be,converted,to,a,default,implementation,of,the,given,map,type,if,the,value,is,anything,else,a,target,map,with,that,single,value,will,be,created,p,the,default,map,implementations,are,tree,map,for,sorted,map,and,linked,hash,map,for,map,param,map,type,the,target,type,which,needs,to,be,a,sub,interface,of,map,or,a,concrete,map,class,param,null,as,empty,map,ap,whether,to,convert,an,incoming,code,null,value,to,an,empty,map,of,the,appropriate,type,see,java,util,map,see,java,util,tree,map,see,java,util,linked,hash,map;suppress,warnings,rawtypes,public,custom,map,editor,class,extends,map,map,type,boolean,null,as,empty,map,if,map,type,null,throw,new,illegal,argument,exception,map,type,is,required,if,map,class,is,assignable,from,map,type,throw,new,illegal,argument,exception,map,type,map,type,get,name,does,not,implement,java,util,map,this,map,type,map,type,this,null,as,empty,map,null,as,empty,map
CustomMapEditor -> @SuppressWarnings("rawtypes") 	public CustomMapEditor(Class<? extends Map> mapType, boolean nullAsEmptyMap);1432125256;Create a new CustomMapEditor for the given target type._<p>If the incoming value is of the given type, it will be used as-is._If it is a different Map type or an array, it will be converted_to a default implementation of the given Map type._If the value is anything else, a target Map with that single_value will be created._<p>The default Map implementations are: TreeMap for SortedMap,_and LinkedHashMap for Map._@param mapType the target type, which needs to be a_sub-interface of Map or a concrete Map class_@param nullAsEmptyMap ap whether to convert an incoming {@code null}_value to an empty Map (of the appropriate type)_@see java.util.Map_@see java.util.TreeMap_@see java.util.LinkedHashMap;@SuppressWarnings("rawtypes")_	public CustomMapEditor(Class<? extends Map> mapType, boolean nullAsEmptyMap) {_		if (mapType == null) {_			throw new IllegalArgumentException("Map type is required")__		}_		if (!Map.class.isAssignableFrom(mapType)) {_			throw new IllegalArgumentException(_					"Map type [" + mapType.getName() + "] does not implement [java.util.Map]")__		}_		this.mapType = mapType__		this.nullAsEmptyMap = nullAsEmptyMap__	};create,a,new,custom,map,editor,for,the,given,target,type,p,if,the,incoming,value,is,of,the,given,type,it,will,be,used,as,is,if,it,is,a,different,map,type,or,an,array,it,will,be,converted,to,a,default,implementation,of,the,given,map,type,if,the,value,is,anything,else,a,target,map,with,that,single,value,will,be,created,p,the,default,map,implementations,are,tree,map,for,sorted,map,and,linked,hash,map,for,map,param,map,type,the,target,type,which,needs,to,be,a,sub,interface,of,map,or,a,concrete,map,class,param,null,as,empty,map,ap,whether,to,convert,an,incoming,code,null,value,to,an,empty,map,of,the,appropriate,type,see,java,util,map,see,java,util,tree,map,see,java,util,linked,hash,map;suppress,warnings,rawtypes,public,custom,map,editor,class,extends,map,map,type,boolean,null,as,empty,map,if,map,type,null,throw,new,illegal,argument,exception,map,type,is,required,if,map,class,is,assignable,from,map,type,throw,new,illegal,argument,exception,map,type,map,type,get,name,does,not,implement,java,util,map,this,map,type,map,type,this,null,as,empty,map,null,as,empty,map
CustomMapEditor -> @SuppressWarnings("rawtypes") 	public CustomMapEditor(Class<? extends Map> mapType, boolean nullAsEmptyMap);1467730834;Create a new CustomMapEditor for the given target type._<p>If the incoming value is of the given type, it will be used as-is._If it is a different Map type or an array, it will be converted_to a default implementation of the given Map type._If the value is anything else, a target Map with that single_value will be created._<p>The default Map implementations are: TreeMap for SortedMap,_and LinkedHashMap for Map._@param mapType the target type, which needs to be a_sub-interface of Map or a concrete Map class_@param nullAsEmptyMap ap whether to convert an incoming {@code null}_value to an empty Map (of the appropriate type)_@see java.util.Map_@see java.util.TreeMap_@see java.util.LinkedHashMap;@SuppressWarnings("rawtypes")_	public CustomMapEditor(Class<? extends Map> mapType, boolean nullAsEmptyMap) {_		if (mapType == null) {_			throw new IllegalArgumentException("Map type is required")__		}_		if (!Map.class.isAssignableFrom(mapType)) {_			throw new IllegalArgumentException(_					"Map type [" + mapType.getName() + "] does not implement [java.util.Map]")__		}_		this.mapType = mapType__		this.nullAsEmptyMap = nullAsEmptyMap__	};create,a,new,custom,map,editor,for,the,given,target,type,p,if,the,incoming,value,is,of,the,given,type,it,will,be,used,as,is,if,it,is,a,different,map,type,or,an,array,it,will,be,converted,to,a,default,implementation,of,the,given,map,type,if,the,value,is,anything,else,a,target,map,with,that,single,value,will,be,created,p,the,default,map,implementations,are,tree,map,for,sorted,map,and,linked,hash,map,for,map,param,map,type,the,target,type,which,needs,to,be,a,sub,interface,of,map,or,a,concrete,map,class,param,null,as,empty,map,ap,whether,to,convert,an,incoming,code,null,value,to,an,empty,map,of,the,appropriate,type,see,java,util,map,see,java,util,tree,map,see,java,util,linked,hash,map;suppress,warnings,rawtypes,public,custom,map,editor,class,extends,map,map,type,boolean,null,as,empty,map,if,map,type,null,throw,new,illegal,argument,exception,map,type,is,required,if,map,class,is,assignable,from,map,type,throw,new,illegal,argument,exception,map,type,map,type,get,name,does,not,implement,java,util,map,this,map,type,map,type,this,null,as,empty,map,null,as,empty,map
CustomMapEditor -> @SuppressWarnings("rawtypes") 	public CustomMapEditor(Class<? extends Map> mapType, boolean nullAsEmptyMap);1468948866;Create a new CustomMapEditor for the given target type._<p>If the incoming value is of the given type, it will be used as-is._If it is a different Map type or an array, it will be converted_to a default implementation of the given Map type._If the value is anything else, a target Map with that single_value will be created._<p>The default Map implementations are: TreeMap for SortedMap,_and LinkedHashMap for Map._@param mapType the target type, which needs to be a_sub-interface of Map or a concrete Map class_@param nullAsEmptyMap ap whether to convert an incoming {@code null}_value to an empty Map (of the appropriate type)_@see java.util.Map_@see java.util.TreeMap_@see java.util.LinkedHashMap;@SuppressWarnings("rawtypes")_	public CustomMapEditor(Class<? extends Map> mapType, boolean nullAsEmptyMap) {_		if (mapType == null) {_			throw new IllegalArgumentException("Map type is required")__		}_		if (!Map.class.isAssignableFrom(mapType)) {_			throw new IllegalArgumentException(_					"Map type [" + mapType.getName() + "] does not implement [java.util.Map]")__		}_		this.mapType = mapType__		this.nullAsEmptyMap = nullAsEmptyMap__	};create,a,new,custom,map,editor,for,the,given,target,type,p,if,the,incoming,value,is,of,the,given,type,it,will,be,used,as,is,if,it,is,a,different,map,type,or,an,array,it,will,be,converted,to,a,default,implementation,of,the,given,map,type,if,the,value,is,anything,else,a,target,map,with,that,single,value,will,be,created,p,the,default,map,implementations,are,tree,map,for,sorted,map,and,linked,hash,map,for,map,param,map,type,the,target,type,which,needs,to,be,a,sub,interface,of,map,or,a,concrete,map,class,param,null,as,empty,map,ap,whether,to,convert,an,incoming,code,null,value,to,an,empty,map,of,the,appropriate,type,see,java,util,map,see,java,util,tree,map,see,java,util,linked,hash,map;suppress,warnings,rawtypes,public,custom,map,editor,class,extends,map,map,type,boolean,null,as,empty,map,if,map,type,null,throw,new,illegal,argument,exception,map,type,is,required,if,map,class,is,assignable,from,map,type,throw,new,illegal,argument,exception,map,type,map,type,get,name,does,not,implement,java,util,map,this,map,type,map,type,this,null,as,empty,map,null,as,empty,map
CustomMapEditor -> @SuppressWarnings("rawtypes") 	public CustomMapEditor(Class<? extends Map> mapType, boolean nullAsEmptyMap);1495868221;Create a new CustomMapEditor for the given target type._<p>If the incoming value is of the given type, it will be used as-is._If it is a different Map type or an array, it will be converted_to a default implementation of the given Map type._If the value is anything else, a target Map with that single_value will be created._<p>The default Map implementations are: TreeMap for SortedMap,_and LinkedHashMap for Map._@param mapType the target type, which needs to be a_sub-interface of Map or a concrete Map class_@param nullAsEmptyMap ap whether to convert an incoming {@code null}_value to an empty Map (of the appropriate type)_@see java.util.Map_@see java.util.TreeMap_@see java.util.LinkedHashMap;@SuppressWarnings("rawtypes")_	public CustomMapEditor(Class<? extends Map> mapType, boolean nullAsEmptyMap) {_		if (mapType == null) {_			throw new IllegalArgumentException("Map type is required")__		}_		if (!Map.class.isAssignableFrom(mapType)) {_			throw new IllegalArgumentException(_					"Map type [" + mapType.getName() + "] does not implement [java.util.Map]")__		}_		this.mapType = mapType__		this.nullAsEmptyMap = nullAsEmptyMap__	};create,a,new,custom,map,editor,for,the,given,target,type,p,if,the,incoming,value,is,of,the,given,type,it,will,be,used,as,is,if,it,is,a,different,map,type,or,an,array,it,will,be,converted,to,a,default,implementation,of,the,given,map,type,if,the,value,is,anything,else,a,target,map,with,that,single,value,will,be,created,p,the,default,map,implementations,are,tree,map,for,sorted,map,and,linked,hash,map,for,map,param,map,type,the,target,type,which,needs,to,be,a,sub,interface,of,map,or,a,concrete,map,class,param,null,as,empty,map,ap,whether,to,convert,an,incoming,code,null,value,to,an,empty,map,of,the,appropriate,type,see,java,util,map,see,java,util,tree,map,see,java,util,linked,hash,map;suppress,warnings,rawtypes,public,custom,map,editor,class,extends,map,map,type,boolean,null,as,empty,map,if,map,type,null,throw,new,illegal,argument,exception,map,type,is,required,if,map,class,is,assignable,from,map,type,throw,new,illegal,argument,exception,map,type,map,type,get,name,does,not,implement,java,util,map,this,map,type,map,type,this,null,as,empty,map,null,as,empty,map
CustomMapEditor -> @SuppressWarnings("rawtypes") 	public CustomMapEditor(Class<? extends Map> mapType, boolean nullAsEmptyMap);1496837955;Create a new CustomMapEditor for the given target type._<p>If the incoming value is of the given type, it will be used as-is._If it is a different Map type or an array, it will be converted_to a default implementation of the given Map type._If the value is anything else, a target Map with that single_value will be created._<p>The default Map implementations are: TreeMap for SortedMap,_and LinkedHashMap for Map._@param mapType the target type, which needs to be a_sub-interface of Map or a concrete Map class_@param nullAsEmptyMap ap whether to convert an incoming {@code null}_value to an empty Map (of the appropriate type)_@see java.util.Map_@see java.util.TreeMap_@see java.util.LinkedHashMap;@SuppressWarnings("rawtypes")_	public CustomMapEditor(Class<? extends Map> mapType, boolean nullAsEmptyMap) {_		Assert.notNull(mapType, "Map type is required")__		if (!Map.class.isAssignableFrom(mapType)) {_			throw new IllegalArgumentException(_					"Map type [" + mapType.getName() + "] does not implement [java.util.Map]")__		}_		this.mapType = mapType__		this.nullAsEmptyMap = nullAsEmptyMap__	};create,a,new,custom,map,editor,for,the,given,target,type,p,if,the,incoming,value,is,of,the,given,type,it,will,be,used,as,is,if,it,is,a,different,map,type,or,an,array,it,will,be,converted,to,a,default,implementation,of,the,given,map,type,if,the,value,is,anything,else,a,target,map,with,that,single,value,will,be,created,p,the,default,map,implementations,are,tree,map,for,sorted,map,and,linked,hash,map,for,map,param,map,type,the,target,type,which,needs,to,be,a,sub,interface,of,map,or,a,concrete,map,class,param,null,as,empty,map,ap,whether,to,convert,an,incoming,code,null,value,to,an,empty,map,of,the,appropriate,type,see,java,util,map,see,java,util,tree,map,see,java,util,linked,hash,map;suppress,warnings,rawtypes,public,custom,map,editor,class,extends,map,map,type,boolean,null,as,empty,map,assert,not,null,map,type,map,type,is,required,if,map,class,is,assignable,from,map,type,throw,new,illegal,argument,exception,map,type,map,type,get,name,does,not,implement,java,util,map,this,map,type,map,type,this,null,as,empty,map,null,as,empty,map
CustomMapEditor -> @SuppressWarnings("rawtypes") 	public CustomMapEditor(Class<? extends Map> mapType, boolean nullAsEmptyMap);1497250713;Create a new CustomMapEditor for the given target type._<p>If the incoming value is of the given type, it will be used as-is._If it is a different Map type or an array, it will be converted_to a default implementation of the given Map type._If the value is anything else, a target Map with that single_value will be created._<p>The default Map implementations are: TreeMap for SortedMap,_and LinkedHashMap for Map._@param mapType the target type, which needs to be a_sub-interface of Map or a concrete Map class_@param nullAsEmptyMap ap whether to convert an incoming {@code null}_value to an empty Map (of the appropriate type)_@see java.util.Map_@see java.util.TreeMap_@see java.util.LinkedHashMap;@SuppressWarnings("rawtypes")_	public CustomMapEditor(Class<? extends Map> mapType, boolean nullAsEmptyMap) {_		Assert.notNull(mapType, "Map type is required")__		if (!Map.class.isAssignableFrom(mapType)) {_			throw new IllegalArgumentException(_					"Map type [" + mapType.getName() + "] does not implement [java.util.Map]")__		}_		this.mapType = mapType__		this.nullAsEmptyMap = nullAsEmptyMap__	};create,a,new,custom,map,editor,for,the,given,target,type,p,if,the,incoming,value,is,of,the,given,type,it,will,be,used,as,is,if,it,is,a,different,map,type,or,an,array,it,will,be,converted,to,a,default,implementation,of,the,given,map,type,if,the,value,is,anything,else,a,target,map,with,that,single,value,will,be,created,p,the,default,map,implementations,are,tree,map,for,sorted,map,and,linked,hash,map,for,map,param,map,type,the,target,type,which,needs,to,be,a,sub,interface,of,map,or,a,concrete,map,class,param,null,as,empty,map,ap,whether,to,convert,an,incoming,code,null,value,to,an,empty,map,of,the,appropriate,type,see,java,util,map,see,java,util,tree,map,see,java,util,linked,hash,map;suppress,warnings,rawtypes,public,custom,map,editor,class,extends,map,map,type,boolean,null,as,empty,map,assert,not,null,map,type,map,type,is,required,if,map,class,is,assignable,from,map,type,throw,new,illegal,argument,exception,map,type,map,type,get,name,does,not,implement,java,util,map,this,map,type,map,type,this,null,as,empty,map,null,as,empty,map
CustomMapEditor -> @Override 	public void setAsText(String text) throws IllegalArgumentException;1328020251;Convert the given text value to a Map with a single element.;@Override_	public void setAsText(String text) throws IllegalArgumentException {_		setValue(text)__	};convert,the,given,text,value,to,a,map,with,a,single,element;override,public,void,set,as,text,string,text,throws,illegal,argument,exception,set,value,text
CustomMapEditor -> @Override 	public void setAsText(String text) throws IllegalArgumentException;1356735495;Convert the given text value to a Map with a single element.;@Override_	public void setAsText(String text) throws IllegalArgumentException {_		setValue(text)__	};convert,the,given,text,value,to,a,map,with,a,single,element;override,public,void,set,as,text,string,text,throws,illegal,argument,exception,set,value,text
CustomMapEditor -> @Override 	public void setAsText(String text) throws IllegalArgumentException;1385412762;Convert the given text value to a Map with a single element.;@Override_	public void setAsText(String text) throws IllegalArgumentException {_		setValue(text)__	};convert,the,given,text,value,to,a,map,with,a,single,element;override,public,void,set,as,text,string,text,throws,illegal,argument,exception,set,value,text
CustomMapEditor -> @Override 	public void setAsText(String text) throws IllegalArgumentException;1432125256;Convert the given text value to a Map with a single element.;@Override_	public void setAsText(String text) throws IllegalArgumentException {_		setValue(text)__	};convert,the,given,text,value,to,a,map,with,a,single,element;override,public,void,set,as,text,string,text,throws,illegal,argument,exception,set,value,text
CustomMapEditor -> @Override 	public void setAsText(String text) throws IllegalArgumentException;1467730834;Convert the given text value to a Map with a single element.;@Override_	public void setAsText(String text) throws IllegalArgumentException {_		setValue(text)__	};convert,the,given,text,value,to,a,map,with,a,single,element;override,public,void,set,as,text,string,text,throws,illegal,argument,exception,set,value,text
CustomMapEditor -> @Override 	public void setAsText(String text) throws IllegalArgumentException;1468948866;Convert the given text value to a Map with a single element.;@Override_	public void setAsText(String text) throws IllegalArgumentException {_		setValue(text)__	};convert,the,given,text,value,to,a,map,with,a,single,element;override,public,void,set,as,text,string,text,throws,illegal,argument,exception,set,value,text
CustomMapEditor -> @Override 	public void setAsText(String text) throws IllegalArgumentException;1495868221;Convert the given text value to a Map with a single element.;@Override_	public void setAsText(String text) throws IllegalArgumentException {_		setValue(text)__	};convert,the,given,text,value,to,a,map,with,a,single,element;override,public,void,set,as,text,string,text,throws,illegal,argument,exception,set,value,text
CustomMapEditor -> @Override 	public void setAsText(String text) throws IllegalArgumentException;1496837955;Convert the given text value to a Map with a single element.;@Override_	public void setAsText(String text) throws IllegalArgumentException {_		setValue(text)__	};convert,the,given,text,value,to,a,map,with,a,single,element;override,public,void,set,as,text,string,text,throws,illegal,argument,exception,set,value,text
CustomMapEditor -> @Override 	public void setAsText(String text) throws IllegalArgumentException;1497250713;Convert the given text value to a Map with a single element.;@Override_	public void setAsText(String text) throws IllegalArgumentException {_		setValue(text)__	};convert,the,given,text,value,to,a,map,with,a,single,element;override,public,void,set,as,text,string,text,throws,illegal,argument,exception,set,value,text
CustomMapEditor -> public CustomMapEditor(Class mapType, boolean nullAsEmptyMap);1328020251;Create a new CustomMapEditor for the given target type._<p>If the incoming value is of the given type, it will be used as-is._If it is a different Map type or an array, it will be converted_to a default implementation of the given Map type._If the value is anything else, a target Map with that single_value will be created._<p>The default Map implementations are: TreeMap for SortedMap,_and LinkedHashMap for Map._@param mapType the target type, which needs to be a_sub-interface of Map or a concrete Map class_@param nullAsEmptyMap ap whether to convert an incoming <code>null</code>_value to an empty Map (of the appropriate type)_@see java.util.Map_@see java.util.TreeMap_@see java.util.LinkedHashMap;public CustomMapEditor(Class mapType, boolean nullAsEmptyMap) {_		if (mapType == null) {_			throw new IllegalArgumentException("Map type is required")__		}_		if (!Map.class.isAssignableFrom(mapType)) {_			throw new IllegalArgumentException(_					"Map type [" + mapType.getName() + "] does not implement [java.util.Map]")__		}_		this.mapType = mapType__		this.nullAsEmptyMap = nullAsEmptyMap__	};create,a,new,custom,map,editor,for,the,given,target,type,p,if,the,incoming,value,is,of,the,given,type,it,will,be,used,as,is,if,it,is,a,different,map,type,or,an,array,it,will,be,converted,to,a,default,implementation,of,the,given,map,type,if,the,value,is,anything,else,a,target,map,with,that,single,value,will,be,created,p,the,default,map,implementations,are,tree,map,for,sorted,map,and,linked,hash,map,for,map,param,map,type,the,target,type,which,needs,to,be,a,sub,interface,of,map,or,a,concrete,map,class,param,null,as,empty,map,ap,whether,to,convert,an,incoming,code,null,code,value,to,an,empty,map,of,the,appropriate,type,see,java,util,map,see,java,util,tree,map,see,java,util,linked,hash,map;public,custom,map,editor,class,map,type,boolean,null,as,empty,map,if,map,type,null,throw,new,illegal,argument,exception,map,type,is,required,if,map,class,is,assignable,from,map,type,throw,new,illegal,argument,exception,map,type,map,type,get,name,does,not,implement,java,util,map,this,map,type,map,type,this,null,as,empty,map,null,as,empty,map
CustomMapEditor -> public CustomMapEditor(Class mapType, boolean nullAsEmptyMap);1356735495;Create a new CustomMapEditor for the given target type._<p>If the incoming value is of the given type, it will be used as-is._If it is a different Map type or an array, it will be converted_to a default implementation of the given Map type._If the value is anything else, a target Map with that single_value will be created._<p>The default Map implementations are: TreeMap for SortedMap,_and LinkedHashMap for Map._@param mapType the target type, which needs to be a_sub-interface of Map or a concrete Map class_@param nullAsEmptyMap ap whether to convert an incoming {@code null}_value to an empty Map (of the appropriate type)_@see java.util.Map_@see java.util.TreeMap_@see java.util.LinkedHashMap;public CustomMapEditor(Class mapType, boolean nullAsEmptyMap) {_		if (mapType == null) {_			throw new IllegalArgumentException("Map type is required")__		}_		if (!Map.class.isAssignableFrom(mapType)) {_			throw new IllegalArgumentException(_					"Map type [" + mapType.getName() + "] does not implement [java.util.Map]")__		}_		this.mapType = mapType__		this.nullAsEmptyMap = nullAsEmptyMap__	};create,a,new,custom,map,editor,for,the,given,target,type,p,if,the,incoming,value,is,of,the,given,type,it,will,be,used,as,is,if,it,is,a,different,map,type,or,an,array,it,will,be,converted,to,a,default,implementation,of,the,given,map,type,if,the,value,is,anything,else,a,target,map,with,that,single,value,will,be,created,p,the,default,map,implementations,are,tree,map,for,sorted,map,and,linked,hash,map,for,map,param,map,type,the,target,type,which,needs,to,be,a,sub,interface,of,map,or,a,concrete,map,class,param,null,as,empty,map,ap,whether,to,convert,an,incoming,code,null,value,to,an,empty,map,of,the,appropriate,type,see,java,util,map,see,java,util,tree,map,see,java,util,linked,hash,map;public,custom,map,editor,class,map,type,boolean,null,as,empty,map,if,map,type,null,throw,new,illegal,argument,exception,map,type,is,required,if,map,class,is,assignable,from,map,type,throw,new,illegal,argument,exception,map,type,map,type,get,name,does,not,implement,java,util,map,this,map,type,map,type,this,null,as,empty,map,null,as,empty,map
CustomMapEditor -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected Map<Object, Object> createMap(Class<? extends Map> mapType, int initialCapacity);1385412762;Create a Map of the given type, with the given_initial capacity (if supported by the Map type)._@param mapType a sub-interface of Map_@param initialCapacity the initial capacity_@return the new Map instance;@SuppressWarnings({ "rawtypes", "unchecked" })_	protected Map<Object, Object> createMap(Class<? extends Map> mapType, int initialCapacity) {_		if (!mapType.isInterface()) {_			try {_				return mapType.newInstance()__			}_			catch (Exception ex) {_				throw new IllegalArgumentException(_						"Could not instantiate map class [" + mapType.getName() + "]: " + ex.getMessage())__			}_		}_		else if (SortedMap.class.equals(mapType)) {_			return new TreeMap<Object, Object>()__		}_		else {_			return new LinkedHashMap<Object, Object>(initialCapacity)__		}_	};create,a,map,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,map,type,param,map,type,a,sub,interface,of,map,param,initial,capacity,the,initial,capacity,return,the,new,map,instance;suppress,warnings,rawtypes,unchecked,protected,map,object,object,create,map,class,extends,map,map,type,int,initial,capacity,if,map,type,is,interface,try,return,map,type,new,instance,catch,exception,ex,throw,new,illegal,argument,exception,could,not,instantiate,map,class,map,type,get,name,ex,get,message,else,if,sorted,map,class,equals,map,type,return,new,tree,map,object,object,else,return,new,linked,hash,map,object,object,initial,capacity
CustomMapEditor -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected Map<Object, Object> createMap(Class<? extends Map> mapType, int initialCapacity);1432125256;Create a Map of the given type, with the given_initial capacity (if supported by the Map type)._@param mapType a sub-interface of Map_@param initialCapacity the initial capacity_@return the new Map instance;@SuppressWarnings({ "rawtypes", "unchecked" })_	protected Map<Object, Object> createMap(Class<? extends Map> mapType, int initialCapacity) {_		if (!mapType.isInterface()) {_			try {_				return mapType.newInstance()__			}_			catch (Exception ex) {_				throw new IllegalArgumentException(_						"Could not instantiate map class [" + mapType.getName() + "]: " + ex.getMessage())__			}_		}_		else if (SortedMap.class == mapType) {_			return new TreeMap<Object, Object>()__		}_		else {_			return new LinkedHashMap<Object, Object>(initialCapacity)__		}_	};create,a,map,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,map,type,param,map,type,a,sub,interface,of,map,param,initial,capacity,the,initial,capacity,return,the,new,map,instance;suppress,warnings,rawtypes,unchecked,protected,map,object,object,create,map,class,extends,map,map,type,int,initial,capacity,if,map,type,is,interface,try,return,map,type,new,instance,catch,exception,ex,throw,new,illegal,argument,exception,could,not,instantiate,map,class,map,type,get,name,ex,get,message,else,if,sorted,map,class,map,type,return,new,tree,map,object,object,else,return,new,linked,hash,map,object,object,initial,capacity
CustomMapEditor -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected Map<Object, Object> createMap(Class<? extends Map> mapType, int initialCapacity);1467730834;Create a Map of the given type, with the given_initial capacity (if supported by the Map type)._@param mapType a sub-interface of Map_@param initialCapacity the initial capacity_@return the new Map instance;@SuppressWarnings({ "rawtypes", "unchecked" })_	protected Map<Object, Object> createMap(Class<? extends Map> mapType, int initialCapacity) {_		if (!mapType.isInterface()) {_			try {_				return mapType.newInstance()__			}_			catch (Exception ex) {_				throw new IllegalArgumentException(_						"Could not instantiate map class [" + mapType.getName() + "]: " + ex.getMessage())__			}_		}_		else if (SortedMap.class == mapType) {_			return new TreeMap<>()__		}_		else {_			return new LinkedHashMap<>(initialCapacity)__		}_	};create,a,map,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,map,type,param,map,type,a,sub,interface,of,map,param,initial,capacity,the,initial,capacity,return,the,new,map,instance;suppress,warnings,rawtypes,unchecked,protected,map,object,object,create,map,class,extends,map,map,type,int,initial,capacity,if,map,type,is,interface,try,return,map,type,new,instance,catch,exception,ex,throw,new,illegal,argument,exception,could,not,instantiate,map,class,map,type,get,name,ex,get,message,else,if,sorted,map,class,map,type,return,new,tree,map,else,return,new,linked,hash,map,initial,capacity
CustomMapEditor -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected Map<Object, Object> createMap(Class<? extends Map> mapType, int initialCapacity);1468948866;Create a Map of the given type, with the given_initial capacity (if supported by the Map type)._@param mapType a sub-interface of Map_@param initialCapacity the initial capacity_@return the new Map instance;@SuppressWarnings({ "rawtypes", "unchecked" })_	protected Map<Object, Object> createMap(Class<? extends Map> mapType, int initialCapacity) {_		if (!mapType.isInterface()) {_			try {_				return ReflectionUtils.accessibleConstructor(mapType).newInstance()__			}_			catch (Throwable ex) {_				throw new IllegalArgumentException(_						"Could not instantiate map class: " + mapType.getName(), ex)__			}_		}_		else if (SortedMap.class == mapType) {_			return new TreeMap<>()__		}_		else {_			return new LinkedHashMap<>(initialCapacity)__		}_	};create,a,map,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,map,type,param,map,type,a,sub,interface,of,map,param,initial,capacity,the,initial,capacity,return,the,new,map,instance;suppress,warnings,rawtypes,unchecked,protected,map,object,object,create,map,class,extends,map,map,type,int,initial,capacity,if,map,type,is,interface,try,return,reflection,utils,accessible,constructor,map,type,new,instance,catch,throwable,ex,throw,new,illegal,argument,exception,could,not,instantiate,map,class,map,type,get,name,ex,else,if,sorted,map,class,map,type,return,new,tree,map,else,return,new,linked,hash,map,initial,capacity
CustomMapEditor -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected Map<Object, Object> createMap(Class<? extends Map> mapType, int initialCapacity);1495868221;Create a Map of the given type, with the given_initial capacity (if supported by the Map type)._@param mapType a sub-interface of Map_@param initialCapacity the initial capacity_@return the new Map instance;@SuppressWarnings({ "rawtypes", "unchecked" })_	protected Map<Object, Object> createMap(Class<? extends Map> mapType, int initialCapacity) {_		if (!mapType.isInterface()) {_			try {_				return ReflectionUtils.accessibleConstructor(mapType).newInstance()__			}_			catch (Throwable ex) {_				throw new IllegalArgumentException(_						"Could not instantiate map class: " + mapType.getName(), ex)__			}_		}_		else if (SortedMap.class == mapType) {_			return new TreeMap<>()__		}_		else {_			return new LinkedHashMap<>(initialCapacity)__		}_	};create,a,map,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,map,type,param,map,type,a,sub,interface,of,map,param,initial,capacity,the,initial,capacity,return,the,new,map,instance;suppress,warnings,rawtypes,unchecked,protected,map,object,object,create,map,class,extends,map,map,type,int,initial,capacity,if,map,type,is,interface,try,return,reflection,utils,accessible,constructor,map,type,new,instance,catch,throwable,ex,throw,new,illegal,argument,exception,could,not,instantiate,map,class,map,type,get,name,ex,else,if,sorted,map,class,map,type,return,new,tree,map,else,return,new,linked,hash,map,initial,capacity
CustomMapEditor -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected Map<Object, Object> createMap(Class<? extends Map> mapType, int initialCapacity);1496837955;Create a Map of the given type, with the given_initial capacity (if supported by the Map type)._@param mapType a sub-interface of Map_@param initialCapacity the initial capacity_@return the new Map instance;@SuppressWarnings({ "rawtypes", "unchecked" })_	protected Map<Object, Object> createMap(Class<? extends Map> mapType, int initialCapacity) {_		if (!mapType.isInterface()) {_			try {_				return ReflectionUtils.accessibleConstructor(mapType).newInstance()__			}_			catch (Throwable ex) {_				throw new IllegalArgumentException(_						"Could not instantiate map class: " + mapType.getName(), ex)__			}_		}_		else if (SortedMap.class == mapType) {_			return new TreeMap<>()__		}_		else {_			return new LinkedHashMap<>(initialCapacity)__		}_	};create,a,map,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,map,type,param,map,type,a,sub,interface,of,map,param,initial,capacity,the,initial,capacity,return,the,new,map,instance;suppress,warnings,rawtypes,unchecked,protected,map,object,object,create,map,class,extends,map,map,type,int,initial,capacity,if,map,type,is,interface,try,return,reflection,utils,accessible,constructor,map,type,new,instance,catch,throwable,ex,throw,new,illegal,argument,exception,could,not,instantiate,map,class,map,type,get,name,ex,else,if,sorted,map,class,map,type,return,new,tree,map,else,return,new,linked,hash,map,initial,capacity
CustomMapEditor -> @SuppressWarnings({ "rawtypes", "unchecked" }) 	protected Map<Object, Object> createMap(Class<? extends Map> mapType, int initialCapacity);1497250713;Create a Map of the given type, with the given_initial capacity (if supported by the Map type)._@param mapType a sub-interface of Map_@param initialCapacity the initial capacity_@return the new Map instance;@SuppressWarnings({ "rawtypes", "unchecked" })_	protected Map<Object, Object> createMap(Class<? extends Map> mapType, int initialCapacity) {_		if (!mapType.isInterface()) {_			try {_				return ReflectionUtils.accessibleConstructor(mapType).newInstance()__			}_			catch (Throwable ex) {_				throw new IllegalArgumentException(_						"Could not instantiate map class: " + mapType.getName(), ex)__			}_		}_		else if (SortedMap.class == mapType) {_			return new TreeMap<>()__		}_		else {_			return new LinkedHashMap<>(initialCapacity)__		}_	};create,a,map,of,the,given,type,with,the,given,initial,capacity,if,supported,by,the,map,type,param,map,type,a,sub,interface,of,map,param,initial,capacity,the,initial,capacity,return,the,new,map,instance;suppress,warnings,rawtypes,unchecked,protected,map,object,object,create,map,class,extends,map,map,type,int,initial,capacity,if,map,type,is,interface,try,return,reflection,utils,accessible,constructor,map,type,new,instance,catch,throwable,ex,throw,new,illegal,argument,exception,could,not,instantiate,map,class,map,type,get,name,ex,else,if,sorted,map,class,map,type,return,new,tree,map,else,return,new,linked,hash,map,initial,capacity
CustomMapEditor -> @Override 	@Nullable 	public String getAsText();1495868221;This implementation returns {@code null} to indicate that_there is no appropriate text representation.;@Override_	@Nullable_	public String getAsText() {_		return null__	};this,implementation,returns,code,null,to,indicate,that,there,is,no,appropriate,text,representation;override,nullable,public,string,get,as,text,return,null
CustomMapEditor -> @Override 	@Nullable 	public String getAsText();1496837955;This implementation returns {@code null} to indicate that_there is no appropriate text representation.;@Override_	@Nullable_	public String getAsText() {_		return null__	};this,implementation,returns,code,null,to,indicate,that,there,is,no,appropriate,text,representation;override,nullable,public,string,get,as,text,return,null
CustomMapEditor -> @Override 	@Nullable 	public String getAsText();1497250713;This implementation returns {@code null} to indicate that_there is no appropriate text representation.;@Override_	@Nullable_	public String getAsText() {_		return null__	};this,implementation,returns,code,null,to,indicate,that,there,is,no,appropriate,text,representation;override,nullable,public,string,get,as,text,return,null
CustomMapEditor -> public CustomMapEditor(Class mapType);1328020251;Create a new CustomMapEditor for the given target type,_keeping an incoming <code>null</code> as-is._@param mapType the target type, which needs to be a_sub-interface of Map or a concrete Map class_@see java.util.Map_@see java.util.HashMap_@see java.util.TreeMap_@see java.util.LinkedHashMap;public CustomMapEditor(Class mapType) {_		this(mapType, false)__	};create,a,new,custom,map,editor,for,the,given,target,type,keeping,an,incoming,code,null,code,as,is,param,map,type,the,target,type,which,needs,to,be,a,sub,interface,of,map,or,a,concrete,map,class,see,java,util,map,see,java,util,hash,map,see,java,util,tree,map,see,java,util,linked,hash,map;public,custom,map,editor,class,map,type,this,map,type,false
CustomMapEditor -> public CustomMapEditor(Class mapType);1356735495;Create a new CustomMapEditor for the given target type,_keeping an incoming {@code null} as-is._@param mapType the target type, which needs to be a_sub-interface of Map or a concrete Map class_@see java.util.Map_@see java.util.HashMap_@see java.util.TreeMap_@see java.util.LinkedHashMap;public CustomMapEditor(Class mapType) {_		this(mapType, false)__	};create,a,new,custom,map,editor,for,the,given,target,type,keeping,an,incoming,code,null,as,is,param,map,type,the,target,type,which,needs,to,be,a,sub,interface,of,map,or,a,concrete,map,class,see,java,util,map,see,java,util,hash,map,see,java,util,tree,map,see,java,util,linked,hash,map;public,custom,map,editor,class,map,type,this,map,type,false
CustomMapEditor -> protected Object convertValue(Object value);1328020251;Hook to convert each encountered Map value._The default implementation simply returns the passed-in value as-is._<p>Can be overridden to perform conversion of certain values,_for example from String to Integer._<p>Only called if actually creating a new Map!_This is by default not the case if the type of the passed-in Map_already matches. Override {@link #alwaysCreateNewMap()} to_enforce creating a new Map in every case._@param value the source value_@return the value to be used in the target Map_@see #alwaysCreateNewMap;protected Object convertValue(Object value) {_		return value__	};hook,to,convert,each,encountered,map,value,the,default,implementation,simply,returns,the,passed,in,value,as,is,p,can,be,overridden,to,perform,conversion,of,certain,values,for,example,from,string,to,integer,p,only,called,if,actually,creating,a,new,map,this,is,by,default,not,the,case,if,the,type,of,the,passed,in,map,already,matches,override,link,always,create,new,map,to,enforce,creating,a,new,map,in,every,case,param,value,the,source,value,return,the,value,to,be,used,in,the,target,map,see,always,create,new,map;protected,object,convert,value,object,value,return,value
CustomMapEditor -> protected Object convertValue(Object value);1356735495;Hook to convert each encountered Map value._The default implementation simply returns the passed-in value as-is._<p>Can be overridden to perform conversion of certain values,_for example from String to Integer._<p>Only called if actually creating a new Map!_This is by default not the case if the type of the passed-in Map_already matches. Override {@link #alwaysCreateNewMap()} to_enforce creating a new Map in every case._@param value the source value_@return the value to be used in the target Map_@see #alwaysCreateNewMap;protected Object convertValue(Object value) {_		return value__	};hook,to,convert,each,encountered,map,value,the,default,implementation,simply,returns,the,passed,in,value,as,is,p,can,be,overridden,to,perform,conversion,of,certain,values,for,example,from,string,to,integer,p,only,called,if,actually,creating,a,new,map,this,is,by,default,not,the,case,if,the,type,of,the,passed,in,map,already,matches,override,link,always,create,new,map,to,enforce,creating,a,new,map,in,every,case,param,value,the,source,value,return,the,value,to,be,used,in,the,target,map,see,always,create,new,map;protected,object,convert,value,object,value,return,value
CustomMapEditor -> protected Object convertValue(Object value);1385412762;Hook to convert each encountered Map value._The default implementation simply returns the passed-in value as-is._<p>Can be overridden to perform conversion of certain values,_for example from String to Integer._<p>Only called if actually creating a new Map!_This is by default not the case if the type of the passed-in Map_already matches. Override {@link #alwaysCreateNewMap()} to_enforce creating a new Map in every case._@param value the source value_@return the value to be used in the target Map_@see #alwaysCreateNewMap;protected Object convertValue(Object value) {_		return value__	};hook,to,convert,each,encountered,map,value,the,default,implementation,simply,returns,the,passed,in,value,as,is,p,can,be,overridden,to,perform,conversion,of,certain,values,for,example,from,string,to,integer,p,only,called,if,actually,creating,a,new,map,this,is,by,default,not,the,case,if,the,type,of,the,passed,in,map,already,matches,override,link,always,create,new,map,to,enforce,creating,a,new,map,in,every,case,param,value,the,source,value,return,the,value,to,be,used,in,the,target,map,see,always,create,new,map;protected,object,convert,value,object,value,return,value
CustomMapEditor -> protected Object convertValue(Object value);1432125256;Hook to convert each encountered Map value._The default implementation simply returns the passed-in value as-is._<p>Can be overridden to perform conversion of certain values,_for example from String to Integer._<p>Only called if actually creating a new Map!_This is by default not the case if the type of the passed-in Map_already matches. Override {@link #alwaysCreateNewMap()} to_enforce creating a new Map in every case._@param value the source value_@return the value to be used in the target Map_@see #alwaysCreateNewMap;protected Object convertValue(Object value) {_		return value__	};hook,to,convert,each,encountered,map,value,the,default,implementation,simply,returns,the,passed,in,value,as,is,p,can,be,overridden,to,perform,conversion,of,certain,values,for,example,from,string,to,integer,p,only,called,if,actually,creating,a,new,map,this,is,by,default,not,the,case,if,the,type,of,the,passed,in,map,already,matches,override,link,always,create,new,map,to,enforce,creating,a,new,map,in,every,case,param,value,the,source,value,return,the,value,to,be,used,in,the,target,map,see,always,create,new,map;protected,object,convert,value,object,value,return,value
CustomMapEditor -> protected Object convertValue(Object value);1467730834;Hook to convert each encountered Map value._The default implementation simply returns the passed-in value as-is._<p>Can be overridden to perform conversion of certain values,_for example from String to Integer._<p>Only called if actually creating a new Map!_This is by default not the case if the type of the passed-in Map_already matches. Override {@link #alwaysCreateNewMap()} to_enforce creating a new Map in every case._@param value the source value_@return the value to be used in the target Map_@see #alwaysCreateNewMap;protected Object convertValue(Object value) {_		return value__	};hook,to,convert,each,encountered,map,value,the,default,implementation,simply,returns,the,passed,in,value,as,is,p,can,be,overridden,to,perform,conversion,of,certain,values,for,example,from,string,to,integer,p,only,called,if,actually,creating,a,new,map,this,is,by,default,not,the,case,if,the,type,of,the,passed,in,map,already,matches,override,link,always,create,new,map,to,enforce,creating,a,new,map,in,every,case,param,value,the,source,value,return,the,value,to,be,used,in,the,target,map,see,always,create,new,map;protected,object,convert,value,object,value,return,value
CustomMapEditor -> protected Object convertValue(Object value);1468948866;Hook to convert each encountered Map value._The default implementation simply returns the passed-in value as-is._<p>Can be overridden to perform conversion of certain values,_for example from String to Integer._<p>Only called if actually creating a new Map!_This is by default not the case if the type of the passed-in Map_already matches. Override {@link #alwaysCreateNewMap()} to_enforce creating a new Map in every case._@param value the source value_@return the value to be used in the target Map_@see #alwaysCreateNewMap;protected Object convertValue(Object value) {_		return value__	};hook,to,convert,each,encountered,map,value,the,default,implementation,simply,returns,the,passed,in,value,as,is,p,can,be,overridden,to,perform,conversion,of,certain,values,for,example,from,string,to,integer,p,only,called,if,actually,creating,a,new,map,this,is,by,default,not,the,case,if,the,type,of,the,passed,in,map,already,matches,override,link,always,create,new,map,to,enforce,creating,a,new,map,in,every,case,param,value,the,source,value,return,the,value,to,be,used,in,the,target,map,see,always,create,new,map;protected,object,convert,value,object,value,return,value
CustomMapEditor -> protected Object convertValue(Object value);1495868221;Hook to convert each encountered Map value._The default implementation simply returns the passed-in value as-is._<p>Can be overridden to perform conversion of certain values,_for example from String to Integer._<p>Only called if actually creating a new Map!_This is by default not the case if the type of the passed-in Map_already matches. Override {@link #alwaysCreateNewMap()} to_enforce creating a new Map in every case._@param value the source value_@return the value to be used in the target Map_@see #alwaysCreateNewMap;protected Object convertValue(Object value) {_		return value__	};hook,to,convert,each,encountered,map,value,the,default,implementation,simply,returns,the,passed,in,value,as,is,p,can,be,overridden,to,perform,conversion,of,certain,values,for,example,from,string,to,integer,p,only,called,if,actually,creating,a,new,map,this,is,by,default,not,the,case,if,the,type,of,the,passed,in,map,already,matches,override,link,always,create,new,map,to,enforce,creating,a,new,map,in,every,case,param,value,the,source,value,return,the,value,to,be,used,in,the,target,map,see,always,create,new,map;protected,object,convert,value,object,value,return,value
CustomMapEditor -> protected Object convertValue(Object value);1496837955;Hook to convert each encountered Map value._The default implementation simply returns the passed-in value as-is._<p>Can be overridden to perform conversion of certain values,_for example from String to Integer._<p>Only called if actually creating a new Map!_This is by default not the case if the type of the passed-in Map_already matches. Override {@link #alwaysCreateNewMap()} to_enforce creating a new Map in every case._@param value the source value_@return the value to be used in the target Map_@see #alwaysCreateNewMap;protected Object convertValue(Object value) {_		return value__	};hook,to,convert,each,encountered,map,value,the,default,implementation,simply,returns,the,passed,in,value,as,is,p,can,be,overridden,to,perform,conversion,of,certain,values,for,example,from,string,to,integer,p,only,called,if,actually,creating,a,new,map,this,is,by,default,not,the,case,if,the,type,of,the,passed,in,map,already,matches,override,link,always,create,new,map,to,enforce,creating,a,new,map,in,every,case,param,value,the,source,value,return,the,value,to,be,used,in,the,target,map,see,always,create,new,map;protected,object,convert,value,object,value,return,value
CustomMapEditor -> protected Object convertValue(Object value);1497250713;Hook to convert each encountered Map value._The default implementation simply returns the passed-in value as-is._<p>Can be overridden to perform conversion of certain values,_for example from String to Integer._<p>Only called if actually creating a new Map!_This is by default not the case if the type of the passed-in Map_already matches. Override {@link #alwaysCreateNewMap()} to_enforce creating a new Map in every case._@param value the source value_@return the value to be used in the target Map_@see #alwaysCreateNewMap;protected Object convertValue(Object value) {_		return value__	};hook,to,convert,each,encountered,map,value,the,default,implementation,simply,returns,the,passed,in,value,as,is,p,can,be,overridden,to,perform,conversion,of,certain,values,for,example,from,string,to,integer,p,only,called,if,actually,creating,a,new,map,this,is,by,default,not,the,case,if,the,type,of,the,passed,in,map,already,matches,override,link,always,create,new,map,to,enforce,creating,a,new,map,in,every,case,param,value,the,source,value,return,the,value,to,be,used,in,the,target,map,see,always,create,new,map;protected,object,convert,value,object,value,return,value
CustomMapEditor -> @Override 	public void setValue(@Nullable Object value);1496837955;Convert the given value to a Map of the target type.;@Override_	public void setValue(@Nullable Object value) {_		if (value == null && this.nullAsEmptyMap) {_			super.setValue(createMap(this.mapType, 0))__		}_		else if (value == null || (this.mapType.isInstance(value) && !alwaysCreateNewMap())) {_			_			super.setValue(value)__		}_		else if (value instanceof Map) {_			_			Map<?, ?> source = (Map<?, ?>) value__			Map<Object, Object> target = createMap(this.mapType, source.size())__			for (Map.Entry<?, ?> entry : source.entrySet()) {_				target.put(convertKey(entry.getKey()), convertValue(entry.getValue()))__			}_			super.setValue(target)__		}_		else {_			throw new IllegalArgumentException("Value cannot be converted to Map: " + value)__		}_	};convert,the,given,value,to,a,map,of,the,target,type;override,public,void,set,value,nullable,object,value,if,value,null,this,null,as,empty,map,super,set,value,create,map,this,map,type,0,else,if,value,null,this,map,type,is,instance,value,always,create,new,map,super,set,value,value,else,if,value,instanceof,map,map,source,map,value,map,object,object,target,create,map,this,map,type,source,size,for,map,entry,entry,source,entry,set,target,put,convert,key,entry,get,key,convert,value,entry,get,value,super,set,value,target,else,throw,new,illegal,argument,exception,value,cannot,be,converted,to,map,value
CustomMapEditor -> @Override 	public void setValue(@Nullable Object value);1497250713;Convert the given value to a Map of the target type.;@Override_	public void setValue(@Nullable Object value) {_		if (value == null && this.nullAsEmptyMap) {_			super.setValue(createMap(this.mapType, 0))__		}_		else if (value == null || (this.mapType.isInstance(value) && !alwaysCreateNewMap())) {_			_			super.setValue(value)__		}_		else if (value instanceof Map) {_			_			Map<?, ?> source = (Map<?, ?>) value__			Map<Object, Object> target = createMap(this.mapType, source.size())__			source.forEach((key, val) -> target.put(convertKey(key), convertValue(val)))__			super.setValue(target)__		}_		else {_			throw new IllegalArgumentException("Value cannot be converted to Map: " + value)__		}_	};convert,the,given,value,to,a,map,of,the,target,type;override,public,void,set,value,nullable,object,value,if,value,null,this,null,as,empty,map,super,set,value,create,map,this,map,type,0,else,if,value,null,this,map,type,is,instance,value,always,create,new,map,super,set,value,value,else,if,value,instanceof,map,map,source,map,value,map,object,object,target,create,map,this,map,type,source,size,source,for,each,key,val,target,put,convert,key,key,convert,value,val,super,set,value,target,else,throw,new,illegal,argument,exception,value,cannot,be,converted,to,map,value
CustomMapEditor -> protected boolean alwaysCreateNewMap();1328020251;Return whether to always create a new Map,_even if the type of the passed-in Map already matches._<p>Default is "false"_ can be overridden to enforce creation of a_new Map, for example to convert elements in any case._@see #convertKey_@see #convertValue;protected boolean alwaysCreateNewMap() {_		return false__	};return,whether,to,always,create,a,new,map,even,if,the,type,of,the,passed,in,map,already,matches,p,default,is,false,can,be,overridden,to,enforce,creation,of,a,new,map,for,example,to,convert,elements,in,any,case,see,convert,key,see,convert,value;protected,boolean,always,create,new,map,return,false
CustomMapEditor -> protected boolean alwaysCreateNewMap();1356735495;Return whether to always create a new Map,_even if the type of the passed-in Map already matches._<p>Default is "false"_ can be overridden to enforce creation of a_new Map, for example to convert elements in any case._@see #convertKey_@see #convertValue;protected boolean alwaysCreateNewMap() {_		return false__	};return,whether,to,always,create,a,new,map,even,if,the,type,of,the,passed,in,map,already,matches,p,default,is,false,can,be,overridden,to,enforce,creation,of,a,new,map,for,example,to,convert,elements,in,any,case,see,convert,key,see,convert,value;protected,boolean,always,create,new,map,return,false
CustomMapEditor -> protected boolean alwaysCreateNewMap();1385412762;Return whether to always create a new Map,_even if the type of the passed-in Map already matches._<p>Default is "false"_ can be overridden to enforce creation of a_new Map, for example to convert elements in any case._@see #convertKey_@see #convertValue;protected boolean alwaysCreateNewMap() {_		return false__	};return,whether,to,always,create,a,new,map,even,if,the,type,of,the,passed,in,map,already,matches,p,default,is,false,can,be,overridden,to,enforce,creation,of,a,new,map,for,example,to,convert,elements,in,any,case,see,convert,key,see,convert,value;protected,boolean,always,create,new,map,return,false
CustomMapEditor -> protected boolean alwaysCreateNewMap();1432125256;Return whether to always create a new Map,_even if the type of the passed-in Map already matches._<p>Default is "false"_ can be overridden to enforce creation of a_new Map, for example to convert elements in any case._@see #convertKey_@see #convertValue;protected boolean alwaysCreateNewMap() {_		return false__	};return,whether,to,always,create,a,new,map,even,if,the,type,of,the,passed,in,map,already,matches,p,default,is,false,can,be,overridden,to,enforce,creation,of,a,new,map,for,example,to,convert,elements,in,any,case,see,convert,key,see,convert,value;protected,boolean,always,create,new,map,return,false
CustomMapEditor -> protected boolean alwaysCreateNewMap();1467730834;Return whether to always create a new Map,_even if the type of the passed-in Map already matches._<p>Default is "false"_ can be overridden to enforce creation of a_new Map, for example to convert elements in any case._@see #convertKey_@see #convertValue;protected boolean alwaysCreateNewMap() {_		return false__	};return,whether,to,always,create,a,new,map,even,if,the,type,of,the,passed,in,map,already,matches,p,default,is,false,can,be,overridden,to,enforce,creation,of,a,new,map,for,example,to,convert,elements,in,any,case,see,convert,key,see,convert,value;protected,boolean,always,create,new,map,return,false
CustomMapEditor -> protected boolean alwaysCreateNewMap();1468948866;Return whether to always create a new Map,_even if the type of the passed-in Map already matches._<p>Default is "false"_ can be overridden to enforce creation of a_new Map, for example to convert elements in any case._@see #convertKey_@see #convertValue;protected boolean alwaysCreateNewMap() {_		return false__	};return,whether,to,always,create,a,new,map,even,if,the,type,of,the,passed,in,map,already,matches,p,default,is,false,can,be,overridden,to,enforce,creation,of,a,new,map,for,example,to,convert,elements,in,any,case,see,convert,key,see,convert,value;protected,boolean,always,create,new,map,return,false
CustomMapEditor -> protected boolean alwaysCreateNewMap();1495868221;Return whether to always create a new Map,_even if the type of the passed-in Map already matches._<p>Default is "false"_ can be overridden to enforce creation of a_new Map, for example to convert elements in any case._@see #convertKey_@see #convertValue;protected boolean alwaysCreateNewMap() {_		return false__	};return,whether,to,always,create,a,new,map,even,if,the,type,of,the,passed,in,map,already,matches,p,default,is,false,can,be,overridden,to,enforce,creation,of,a,new,map,for,example,to,convert,elements,in,any,case,see,convert,key,see,convert,value;protected,boolean,always,create,new,map,return,false
CustomMapEditor -> protected boolean alwaysCreateNewMap();1496837955;Return whether to always create a new Map,_even if the type of the passed-in Map already matches._<p>Default is "false"_ can be overridden to enforce creation of a_new Map, for example to convert elements in any case._@see #convertKey_@see #convertValue;protected boolean alwaysCreateNewMap() {_		return false__	};return,whether,to,always,create,a,new,map,even,if,the,type,of,the,passed,in,map,already,matches,p,default,is,false,can,be,overridden,to,enforce,creation,of,a,new,map,for,example,to,convert,elements,in,any,case,see,convert,key,see,convert,value;protected,boolean,always,create,new,map,return,false
CustomMapEditor -> protected boolean alwaysCreateNewMap();1497250713;Return whether to always create a new Map,_even if the type of the passed-in Map already matches._<p>Default is "false"_ can be overridden to enforce creation of a_new Map, for example to convert elements in any case._@see #convertKey_@see #convertValue;protected boolean alwaysCreateNewMap() {_		return false__	};return,whether,to,always,create,a,new,map,even,if,the,type,of,the,passed,in,map,already,matches,p,default,is,false,can,be,overridden,to,enforce,creation,of,a,new,map,for,example,to,convert,elements,in,any,case,see,convert,key,see,convert,value;protected,boolean,always,create,new,map,return,false
CustomMapEditor -> @Override 	public void setValue(Object value);1328020251;Convert the given value to a Map of the target type.;@Override_	public void setValue(Object value) {_		if (value == null && this.nullAsEmptyMap) {_			super.setValue(createMap(this.mapType, 0))__		}_		else if (value == null || (this.mapType.isInstance(value) && !alwaysCreateNewMap())) {_			_			super.setValue(value)__		}_		else if (value instanceof Map) {_			_			Map<?, ?> source = (Map) value__			Map target = createMap(this.mapType, source.size())__			for (Map.Entry entry : source.entrySet()) {_				target.put(convertKey(entry.getKey()), convertValue(entry.getValue()))__			}_			super.setValue(target)__		}_		else {_			throw new IllegalArgumentException("Value cannot be converted to Map: " + value)__		}_	};convert,the,given,value,to,a,map,of,the,target,type;override,public,void,set,value,object,value,if,value,null,this,null,as,empty,map,super,set,value,create,map,this,map,type,0,else,if,value,null,this,map,type,is,instance,value,always,create,new,map,super,set,value,value,else,if,value,instanceof,map,map,source,map,value,map,target,create,map,this,map,type,source,size,for,map,entry,entry,source,entry,set,target,put,convert,key,entry,get,key,convert,value,entry,get,value,super,set,value,target,else,throw,new,illegal,argument,exception,value,cannot,be,converted,to,map,value
CustomMapEditor -> @Override 	public void setValue(Object value);1356735495;Convert the given value to a Map of the target type.;@Override_	public void setValue(Object value) {_		if (value == null && this.nullAsEmptyMap) {_			super.setValue(createMap(this.mapType, 0))__		}_		else if (value == null || (this.mapType.isInstance(value) && !alwaysCreateNewMap())) {_			_			super.setValue(value)__		}_		else if (value instanceof Map) {_			_			Map<?, ?> source = (Map) value__			Map target = createMap(this.mapType, source.size())__			for (Map.Entry entry : source.entrySet()) {_				target.put(convertKey(entry.getKey()), convertValue(entry.getValue()))__			}_			super.setValue(target)__		}_		else {_			throw new IllegalArgumentException("Value cannot be converted to Map: " + value)__		}_	};convert,the,given,value,to,a,map,of,the,target,type;override,public,void,set,value,object,value,if,value,null,this,null,as,empty,map,super,set,value,create,map,this,map,type,0,else,if,value,null,this,map,type,is,instance,value,always,create,new,map,super,set,value,value,else,if,value,instanceof,map,map,source,map,value,map,target,create,map,this,map,type,source,size,for,map,entry,entry,source,entry,set,target,put,convert,key,entry,get,key,convert,value,entry,get,value,super,set,value,target,else,throw,new,illegal,argument,exception,value,cannot,be,converted,to,map,value
CustomMapEditor -> @Override 	public void setValue(Object value);1385412762;Convert the given value to a Map of the target type.;@Override_	public void setValue(Object value) {_		if (value == null && this.nullAsEmptyMap) {_			super.setValue(createMap(this.mapType, 0))__		}_		else if (value == null || (this.mapType.isInstance(value) && !alwaysCreateNewMap())) {_			_			super.setValue(value)__		}_		else if (value instanceof Map) {_			_			Map<?, ?> source = (Map<?, ?>) value__			Map<Object, Object> target = createMap(this.mapType, source.size())__			for (Map.Entry<?, ?> entry : source.entrySet()) {_				target.put(convertKey(entry.getKey()), convertValue(entry.getValue()))__			}_			super.setValue(target)__		}_		else {_			throw new IllegalArgumentException("Value cannot be converted to Map: " + value)__		}_	};convert,the,given,value,to,a,map,of,the,target,type;override,public,void,set,value,object,value,if,value,null,this,null,as,empty,map,super,set,value,create,map,this,map,type,0,else,if,value,null,this,map,type,is,instance,value,always,create,new,map,super,set,value,value,else,if,value,instanceof,map,map,source,map,value,map,object,object,target,create,map,this,map,type,source,size,for,map,entry,entry,source,entry,set,target,put,convert,key,entry,get,key,convert,value,entry,get,value,super,set,value,target,else,throw,new,illegal,argument,exception,value,cannot,be,converted,to,map,value
CustomMapEditor -> @Override 	public void setValue(Object value);1432125256;Convert the given value to a Map of the target type.;@Override_	public void setValue(Object value) {_		if (value == null && this.nullAsEmptyMap) {_			super.setValue(createMap(this.mapType, 0))__		}_		else if (value == null || (this.mapType.isInstance(value) && !alwaysCreateNewMap())) {_			_			super.setValue(value)__		}_		else if (value instanceof Map) {_			_			Map<?, ?> source = (Map<?, ?>) value__			Map<Object, Object> target = createMap(this.mapType, source.size())__			for (Map.Entry<?, ?> entry : source.entrySet()) {_				target.put(convertKey(entry.getKey()), convertValue(entry.getValue()))__			}_			super.setValue(target)__		}_		else {_			throw new IllegalArgumentException("Value cannot be converted to Map: " + value)__		}_	};convert,the,given,value,to,a,map,of,the,target,type;override,public,void,set,value,object,value,if,value,null,this,null,as,empty,map,super,set,value,create,map,this,map,type,0,else,if,value,null,this,map,type,is,instance,value,always,create,new,map,super,set,value,value,else,if,value,instanceof,map,map,source,map,value,map,object,object,target,create,map,this,map,type,source,size,for,map,entry,entry,source,entry,set,target,put,convert,key,entry,get,key,convert,value,entry,get,value,super,set,value,target,else,throw,new,illegal,argument,exception,value,cannot,be,converted,to,map,value
CustomMapEditor -> @Override 	public void setValue(Object value);1467730834;Convert the given value to a Map of the target type.;@Override_	public void setValue(Object value) {_		if (value == null && this.nullAsEmptyMap) {_			super.setValue(createMap(this.mapType, 0))__		}_		else if (value == null || (this.mapType.isInstance(value) && !alwaysCreateNewMap())) {_			_			super.setValue(value)__		}_		else if (value instanceof Map) {_			_			Map<?, ?> source = (Map<?, ?>) value__			Map<Object, Object> target = createMap(this.mapType, source.size())__			for (Map.Entry<?, ?> entry : source.entrySet()) {_				target.put(convertKey(entry.getKey()), convertValue(entry.getValue()))__			}_			super.setValue(target)__		}_		else {_			throw new IllegalArgumentException("Value cannot be converted to Map: " + value)__		}_	};convert,the,given,value,to,a,map,of,the,target,type;override,public,void,set,value,object,value,if,value,null,this,null,as,empty,map,super,set,value,create,map,this,map,type,0,else,if,value,null,this,map,type,is,instance,value,always,create,new,map,super,set,value,value,else,if,value,instanceof,map,map,source,map,value,map,object,object,target,create,map,this,map,type,source,size,for,map,entry,entry,source,entry,set,target,put,convert,key,entry,get,key,convert,value,entry,get,value,super,set,value,target,else,throw,new,illegal,argument,exception,value,cannot,be,converted,to,map,value
CustomMapEditor -> @Override 	public void setValue(Object value);1468948866;Convert the given value to a Map of the target type.;@Override_	public void setValue(Object value) {_		if (value == null && this.nullAsEmptyMap) {_			super.setValue(createMap(this.mapType, 0))__		}_		else if (value == null || (this.mapType.isInstance(value) && !alwaysCreateNewMap())) {_			_			super.setValue(value)__		}_		else if (value instanceof Map) {_			_			Map<?, ?> source = (Map<?, ?>) value__			Map<Object, Object> target = createMap(this.mapType, source.size())__			for (Map.Entry<?, ?> entry : source.entrySet()) {_				target.put(convertKey(entry.getKey()), convertValue(entry.getValue()))__			}_			super.setValue(target)__		}_		else {_			throw new IllegalArgumentException("Value cannot be converted to Map: " + value)__		}_	};convert,the,given,value,to,a,map,of,the,target,type;override,public,void,set,value,object,value,if,value,null,this,null,as,empty,map,super,set,value,create,map,this,map,type,0,else,if,value,null,this,map,type,is,instance,value,always,create,new,map,super,set,value,value,else,if,value,instanceof,map,map,source,map,value,map,object,object,target,create,map,this,map,type,source,size,for,map,entry,entry,source,entry,set,target,put,convert,key,entry,get,key,convert,value,entry,get,value,super,set,value,target,else,throw,new,illegal,argument,exception,value,cannot,be,converted,to,map,value
CustomMapEditor -> @Override 	public void setValue(Object value);1495868221;Convert the given value to a Map of the target type.;@Override_	public void setValue(Object value) {_		if (value == null && this.nullAsEmptyMap) {_			super.setValue(createMap(this.mapType, 0))__		}_		else if (value == null || (this.mapType.isInstance(value) && !alwaysCreateNewMap())) {_			_			super.setValue(value)__		}_		else if (value instanceof Map) {_			_			Map<?, ?> source = (Map<?, ?>) value__			Map<Object, Object> target = createMap(this.mapType, source.size())__			for (Map.Entry<?, ?> entry : source.entrySet()) {_				target.put(convertKey(entry.getKey()), convertValue(entry.getValue()))__			}_			super.setValue(target)__		}_		else {_			throw new IllegalArgumentException("Value cannot be converted to Map: " + value)__		}_	};convert,the,given,value,to,a,map,of,the,target,type;override,public,void,set,value,object,value,if,value,null,this,null,as,empty,map,super,set,value,create,map,this,map,type,0,else,if,value,null,this,map,type,is,instance,value,always,create,new,map,super,set,value,value,else,if,value,instanceof,map,map,source,map,value,map,object,object,target,create,map,this,map,type,source,size,for,map,entry,entry,source,entry,set,target,put,convert,key,entry,get,key,convert,value,entry,get,value,super,set,value,target,else,throw,new,illegal,argument,exception,value,cannot,be,converted,to,map,value
CustomMapEditor -> protected Object convertKey(Object key);1328020251;Hook to convert each encountered Map key._The default implementation simply returns the passed-in key as-is._<p>Can be overridden to perform conversion of certain keys,_for example from String to Integer._<p>Only called if actually creating a new Map!_This is by default not the case if the type of the passed-in Map_already matches. Override {@link #alwaysCreateNewMap()} to_enforce creating a new Map in every case._@param key the source key_@return the key to be used in the target Map_@see #alwaysCreateNewMap;protected Object convertKey(Object key) {_		return key__	};hook,to,convert,each,encountered,map,key,the,default,implementation,simply,returns,the,passed,in,key,as,is,p,can,be,overridden,to,perform,conversion,of,certain,keys,for,example,from,string,to,integer,p,only,called,if,actually,creating,a,new,map,this,is,by,default,not,the,case,if,the,type,of,the,passed,in,map,already,matches,override,link,always,create,new,map,to,enforce,creating,a,new,map,in,every,case,param,key,the,source,key,return,the,key,to,be,used,in,the,target,map,see,always,create,new,map;protected,object,convert,key,object,key,return,key
CustomMapEditor -> protected Object convertKey(Object key);1356735495;Hook to convert each encountered Map key._The default implementation simply returns the passed-in key as-is._<p>Can be overridden to perform conversion of certain keys,_for example from String to Integer._<p>Only called if actually creating a new Map!_This is by default not the case if the type of the passed-in Map_already matches. Override {@link #alwaysCreateNewMap()} to_enforce creating a new Map in every case._@param key the source key_@return the key to be used in the target Map_@see #alwaysCreateNewMap;protected Object convertKey(Object key) {_		return key__	};hook,to,convert,each,encountered,map,key,the,default,implementation,simply,returns,the,passed,in,key,as,is,p,can,be,overridden,to,perform,conversion,of,certain,keys,for,example,from,string,to,integer,p,only,called,if,actually,creating,a,new,map,this,is,by,default,not,the,case,if,the,type,of,the,passed,in,map,already,matches,override,link,always,create,new,map,to,enforce,creating,a,new,map,in,every,case,param,key,the,source,key,return,the,key,to,be,used,in,the,target,map,see,always,create,new,map;protected,object,convert,key,object,key,return,key
CustomMapEditor -> protected Object convertKey(Object key);1385412762;Hook to convert each encountered Map key._The default implementation simply returns the passed-in key as-is._<p>Can be overridden to perform conversion of certain keys,_for example from String to Integer._<p>Only called if actually creating a new Map!_This is by default not the case if the type of the passed-in Map_already matches. Override {@link #alwaysCreateNewMap()} to_enforce creating a new Map in every case._@param key the source key_@return the key to be used in the target Map_@see #alwaysCreateNewMap;protected Object convertKey(Object key) {_		return key__	};hook,to,convert,each,encountered,map,key,the,default,implementation,simply,returns,the,passed,in,key,as,is,p,can,be,overridden,to,perform,conversion,of,certain,keys,for,example,from,string,to,integer,p,only,called,if,actually,creating,a,new,map,this,is,by,default,not,the,case,if,the,type,of,the,passed,in,map,already,matches,override,link,always,create,new,map,to,enforce,creating,a,new,map,in,every,case,param,key,the,source,key,return,the,key,to,be,used,in,the,target,map,see,always,create,new,map;protected,object,convert,key,object,key,return,key
CustomMapEditor -> protected Object convertKey(Object key);1432125256;Hook to convert each encountered Map key._The default implementation simply returns the passed-in key as-is._<p>Can be overridden to perform conversion of certain keys,_for example from String to Integer._<p>Only called if actually creating a new Map!_This is by default not the case if the type of the passed-in Map_already matches. Override {@link #alwaysCreateNewMap()} to_enforce creating a new Map in every case._@param key the source key_@return the key to be used in the target Map_@see #alwaysCreateNewMap;protected Object convertKey(Object key) {_		return key__	};hook,to,convert,each,encountered,map,key,the,default,implementation,simply,returns,the,passed,in,key,as,is,p,can,be,overridden,to,perform,conversion,of,certain,keys,for,example,from,string,to,integer,p,only,called,if,actually,creating,a,new,map,this,is,by,default,not,the,case,if,the,type,of,the,passed,in,map,already,matches,override,link,always,create,new,map,to,enforce,creating,a,new,map,in,every,case,param,key,the,source,key,return,the,key,to,be,used,in,the,target,map,see,always,create,new,map;protected,object,convert,key,object,key,return,key
CustomMapEditor -> protected Object convertKey(Object key);1467730834;Hook to convert each encountered Map key._The default implementation simply returns the passed-in key as-is._<p>Can be overridden to perform conversion of certain keys,_for example from String to Integer._<p>Only called if actually creating a new Map!_This is by default not the case if the type of the passed-in Map_already matches. Override {@link #alwaysCreateNewMap()} to_enforce creating a new Map in every case._@param key the source key_@return the key to be used in the target Map_@see #alwaysCreateNewMap;protected Object convertKey(Object key) {_		return key__	};hook,to,convert,each,encountered,map,key,the,default,implementation,simply,returns,the,passed,in,key,as,is,p,can,be,overridden,to,perform,conversion,of,certain,keys,for,example,from,string,to,integer,p,only,called,if,actually,creating,a,new,map,this,is,by,default,not,the,case,if,the,type,of,the,passed,in,map,already,matches,override,link,always,create,new,map,to,enforce,creating,a,new,map,in,every,case,param,key,the,source,key,return,the,key,to,be,used,in,the,target,map,see,always,create,new,map;protected,object,convert,key,object,key,return,key
CustomMapEditor -> protected Object convertKey(Object key);1468948866;Hook to convert each encountered Map key._The default implementation simply returns the passed-in key as-is._<p>Can be overridden to perform conversion of certain keys,_for example from String to Integer._<p>Only called if actually creating a new Map!_This is by default not the case if the type of the passed-in Map_already matches. Override {@link #alwaysCreateNewMap()} to_enforce creating a new Map in every case._@param key the source key_@return the key to be used in the target Map_@see #alwaysCreateNewMap;protected Object convertKey(Object key) {_		return key__	};hook,to,convert,each,encountered,map,key,the,default,implementation,simply,returns,the,passed,in,key,as,is,p,can,be,overridden,to,perform,conversion,of,certain,keys,for,example,from,string,to,integer,p,only,called,if,actually,creating,a,new,map,this,is,by,default,not,the,case,if,the,type,of,the,passed,in,map,already,matches,override,link,always,create,new,map,to,enforce,creating,a,new,map,in,every,case,param,key,the,source,key,return,the,key,to,be,used,in,the,target,map,see,always,create,new,map;protected,object,convert,key,object,key,return,key
CustomMapEditor -> protected Object convertKey(Object key);1495868221;Hook to convert each encountered Map key._The default implementation simply returns the passed-in key as-is._<p>Can be overridden to perform conversion of certain keys,_for example from String to Integer._<p>Only called if actually creating a new Map!_This is by default not the case if the type of the passed-in Map_already matches. Override {@link #alwaysCreateNewMap()} to_enforce creating a new Map in every case._@param key the source key_@return the key to be used in the target Map_@see #alwaysCreateNewMap;protected Object convertKey(Object key) {_		return key__	};hook,to,convert,each,encountered,map,key,the,default,implementation,simply,returns,the,passed,in,key,as,is,p,can,be,overridden,to,perform,conversion,of,certain,keys,for,example,from,string,to,integer,p,only,called,if,actually,creating,a,new,map,this,is,by,default,not,the,case,if,the,type,of,the,passed,in,map,already,matches,override,link,always,create,new,map,to,enforce,creating,a,new,map,in,every,case,param,key,the,source,key,return,the,key,to,be,used,in,the,target,map,see,always,create,new,map;protected,object,convert,key,object,key,return,key
CustomMapEditor -> protected Object convertKey(Object key);1496837955;Hook to convert each encountered Map key._The default implementation simply returns the passed-in key as-is._<p>Can be overridden to perform conversion of certain keys,_for example from String to Integer._<p>Only called if actually creating a new Map!_This is by default not the case if the type of the passed-in Map_already matches. Override {@link #alwaysCreateNewMap()} to_enforce creating a new Map in every case._@param key the source key_@return the key to be used in the target Map_@see #alwaysCreateNewMap;protected Object convertKey(Object key) {_		return key__	};hook,to,convert,each,encountered,map,key,the,default,implementation,simply,returns,the,passed,in,key,as,is,p,can,be,overridden,to,perform,conversion,of,certain,keys,for,example,from,string,to,integer,p,only,called,if,actually,creating,a,new,map,this,is,by,default,not,the,case,if,the,type,of,the,passed,in,map,already,matches,override,link,always,create,new,map,to,enforce,creating,a,new,map,in,every,case,param,key,the,source,key,return,the,key,to,be,used,in,the,target,map,see,always,create,new,map;protected,object,convert,key,object,key,return,key
CustomMapEditor -> protected Object convertKey(Object key);1497250713;Hook to convert each encountered Map key._The default implementation simply returns the passed-in key as-is._<p>Can be overridden to perform conversion of certain keys,_for example from String to Integer._<p>Only called if actually creating a new Map!_This is by default not the case if the type of the passed-in Map_already matches. Override {@link #alwaysCreateNewMap()} to_enforce creating a new Map in every case._@param key the source key_@return the key to be used in the target Map_@see #alwaysCreateNewMap;protected Object convertKey(Object key) {_		return key__	};hook,to,convert,each,encountered,map,key,the,default,implementation,simply,returns,the,passed,in,key,as,is,p,can,be,overridden,to,perform,conversion,of,certain,keys,for,example,from,string,to,integer,p,only,called,if,actually,creating,a,new,map,this,is,by,default,not,the,case,if,the,type,of,the,passed,in,map,already,matches,override,link,always,create,new,map,to,enforce,creating,a,new,map,in,every,case,param,key,the,source,key,return,the,key,to,be,used,in,the,target,map,see,always,create,new,map;protected,object,convert,key,object,key,return,key
CustomMapEditor -> @SuppressWarnings("rawtypes") 	public CustomMapEditor(Class<? extends Map> mapType);1385412762;Create a new CustomMapEditor for the given target type,_keeping an incoming {@code null} as-is._@param mapType the target type, which needs to be a_sub-interface of Map or a concrete Map class_@see java.util.Map_@see java.util.HashMap_@see java.util.TreeMap_@see java.util.LinkedHashMap;@SuppressWarnings("rawtypes")_	public CustomMapEditor(Class<? extends Map> mapType) {_		this(mapType, false)__	};create,a,new,custom,map,editor,for,the,given,target,type,keeping,an,incoming,code,null,as,is,param,map,type,the,target,type,which,needs,to,be,a,sub,interface,of,map,or,a,concrete,map,class,see,java,util,map,see,java,util,hash,map,see,java,util,tree,map,see,java,util,linked,hash,map;suppress,warnings,rawtypes,public,custom,map,editor,class,extends,map,map,type,this,map,type,false
CustomMapEditor -> @SuppressWarnings("rawtypes") 	public CustomMapEditor(Class<? extends Map> mapType);1432125256;Create a new CustomMapEditor for the given target type,_keeping an incoming {@code null} as-is._@param mapType the target type, which needs to be a_sub-interface of Map or a concrete Map class_@see java.util.Map_@see java.util.HashMap_@see java.util.TreeMap_@see java.util.LinkedHashMap;@SuppressWarnings("rawtypes")_	public CustomMapEditor(Class<? extends Map> mapType) {_		this(mapType, false)__	};create,a,new,custom,map,editor,for,the,given,target,type,keeping,an,incoming,code,null,as,is,param,map,type,the,target,type,which,needs,to,be,a,sub,interface,of,map,or,a,concrete,map,class,see,java,util,map,see,java,util,hash,map,see,java,util,tree,map,see,java,util,linked,hash,map;suppress,warnings,rawtypes,public,custom,map,editor,class,extends,map,map,type,this,map,type,false
CustomMapEditor -> @SuppressWarnings("rawtypes") 	public CustomMapEditor(Class<? extends Map> mapType);1467730834;Create a new CustomMapEditor for the given target type,_keeping an incoming {@code null} as-is._@param mapType the target type, which needs to be a_sub-interface of Map or a concrete Map class_@see java.util.Map_@see java.util.HashMap_@see java.util.TreeMap_@see java.util.LinkedHashMap;@SuppressWarnings("rawtypes")_	public CustomMapEditor(Class<? extends Map> mapType) {_		this(mapType, false)__	};create,a,new,custom,map,editor,for,the,given,target,type,keeping,an,incoming,code,null,as,is,param,map,type,the,target,type,which,needs,to,be,a,sub,interface,of,map,or,a,concrete,map,class,see,java,util,map,see,java,util,hash,map,see,java,util,tree,map,see,java,util,linked,hash,map;suppress,warnings,rawtypes,public,custom,map,editor,class,extends,map,map,type,this,map,type,false
CustomMapEditor -> @SuppressWarnings("rawtypes") 	public CustomMapEditor(Class<? extends Map> mapType);1468948866;Create a new CustomMapEditor for the given target type,_keeping an incoming {@code null} as-is._@param mapType the target type, which needs to be a_sub-interface of Map or a concrete Map class_@see java.util.Map_@see java.util.HashMap_@see java.util.TreeMap_@see java.util.LinkedHashMap;@SuppressWarnings("rawtypes")_	public CustomMapEditor(Class<? extends Map> mapType) {_		this(mapType, false)__	};create,a,new,custom,map,editor,for,the,given,target,type,keeping,an,incoming,code,null,as,is,param,map,type,the,target,type,which,needs,to,be,a,sub,interface,of,map,or,a,concrete,map,class,see,java,util,map,see,java,util,hash,map,see,java,util,tree,map,see,java,util,linked,hash,map;suppress,warnings,rawtypes,public,custom,map,editor,class,extends,map,map,type,this,map,type,false
CustomMapEditor -> @SuppressWarnings("rawtypes") 	public CustomMapEditor(Class<? extends Map> mapType);1495868221;Create a new CustomMapEditor for the given target type,_keeping an incoming {@code null} as-is._@param mapType the target type, which needs to be a_sub-interface of Map or a concrete Map class_@see java.util.Map_@see java.util.HashMap_@see java.util.TreeMap_@see java.util.LinkedHashMap;@SuppressWarnings("rawtypes")_	public CustomMapEditor(Class<? extends Map> mapType) {_		this(mapType, false)__	};create,a,new,custom,map,editor,for,the,given,target,type,keeping,an,incoming,code,null,as,is,param,map,type,the,target,type,which,needs,to,be,a,sub,interface,of,map,or,a,concrete,map,class,see,java,util,map,see,java,util,hash,map,see,java,util,tree,map,see,java,util,linked,hash,map;suppress,warnings,rawtypes,public,custom,map,editor,class,extends,map,map,type,this,map,type,false
CustomMapEditor -> @SuppressWarnings("rawtypes") 	public CustomMapEditor(Class<? extends Map> mapType);1496837955;Create a new CustomMapEditor for the given target type,_keeping an incoming {@code null} as-is._@param mapType the target type, which needs to be a_sub-interface of Map or a concrete Map class_@see java.util.Map_@see java.util.HashMap_@see java.util.TreeMap_@see java.util.LinkedHashMap;@SuppressWarnings("rawtypes")_	public CustomMapEditor(Class<? extends Map> mapType) {_		this(mapType, false)__	};create,a,new,custom,map,editor,for,the,given,target,type,keeping,an,incoming,code,null,as,is,param,map,type,the,target,type,which,needs,to,be,a,sub,interface,of,map,or,a,concrete,map,class,see,java,util,map,see,java,util,hash,map,see,java,util,tree,map,see,java,util,linked,hash,map;suppress,warnings,rawtypes,public,custom,map,editor,class,extends,map,map,type,this,map,type,false
CustomMapEditor -> @SuppressWarnings("rawtypes") 	public CustomMapEditor(Class<? extends Map> mapType);1497250713;Create a new CustomMapEditor for the given target type,_keeping an incoming {@code null} as-is._@param mapType the target type, which needs to be a_sub-interface of Map or a concrete Map class_@see java.util.Map_@see java.util.HashMap_@see java.util.TreeMap_@see java.util.LinkedHashMap;@SuppressWarnings("rawtypes")_	public CustomMapEditor(Class<? extends Map> mapType) {_		this(mapType, false)__	};create,a,new,custom,map,editor,for,the,given,target,type,keeping,an,incoming,code,null,as,is,param,map,type,the,target,type,which,needs,to,be,a,sub,interface,of,map,or,a,concrete,map,class,see,java,util,map,see,java,util,hash,map,see,java,util,tree,map,see,java,util,linked,hash,map;suppress,warnings,rawtypes,public,custom,map,editor,class,extends,map,map,type,this,map,type,false
