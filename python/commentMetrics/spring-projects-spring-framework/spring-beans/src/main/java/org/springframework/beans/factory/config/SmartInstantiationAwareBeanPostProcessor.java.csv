# id;timestamp;commentText;codeText;commentWords;codeWords
SmartInstantiationAwareBeanPostProcessor -> Class<?> predictBeanType(Class<?> beanClass, String beanName) throws BeansException_;1328020251;Predict the type of the bean to be eventually returned from this_processor's {@link #postProcessBeforeInstantiation} callback._@param beanClass the raw class of the bean_@param beanName the name of the bean_@return the type of the bean, or <code>null</code> if not predictable_@throws org.springframework.beans.BeansException in case of errors;Class<?> predictBeanType(Class<?> beanClass, String beanName) throws BeansException_;predict,the,type,of,the,bean,to,be,eventually,returned,from,this,processor,s,link,post,process,before,instantiation,callback,param,bean,class,the,raw,class,of,the,bean,param,bean,name,the,name,of,the,bean,return,the,type,of,the,bean,or,code,null,code,if,not,predictable,throws,org,springframework,beans,beans,exception,in,case,of,errors;class,predict,bean,type,class,bean,class,string,bean,name,throws,beans,exception
SmartInstantiationAwareBeanPostProcessor -> Class<?> predictBeanType(Class<?> beanClass, String beanName) throws BeansException_;1356735495;Predict the type of the bean to be eventually returned from this_processor's {@link #postProcessBeforeInstantiation} callback._@param beanClass the raw class of the bean_@param beanName the name of the bean_@return the type of the bean, or {@code null} if not predictable_@throws org.springframework.beans.BeansException in case of errors;Class<?> predictBeanType(Class<?> beanClass, String beanName) throws BeansException_;predict,the,type,of,the,bean,to,be,eventually,returned,from,this,processor,s,link,post,process,before,instantiation,callback,param,bean,class,the,raw,class,of,the,bean,param,bean,name,the,name,of,the,bean,return,the,type,of,the,bean,or,code,null,if,not,predictable,throws,org,springframework,beans,beans,exception,in,case,of,errors;class,predict,bean,type,class,bean,class,string,bean,name,throws,beans,exception
SmartInstantiationAwareBeanPostProcessor -> @Nullable 	default Class<?> predictBeanType(Class<?> beanClass, String beanName) throws BeansException;1495868221;Predict the type of the bean to be eventually returned from this_processor's {@link #postProcessBeforeInstantiation} callback._<p>The default implementation returns {@code null}._@param beanClass the raw class of the bean_@param beanName the name of the bean_@return the type of the bean, or {@code null} if not predictable_@throws org.springframework.beans.BeansException in case of errors;@Nullable_	default Class<?> predictBeanType(Class<?> beanClass, String beanName) throws BeansException {_		return null__	};predict,the,type,of,the,bean,to,be,eventually,returned,from,this,processor,s,link,post,process,before,instantiation,callback,p,the,default,implementation,returns,code,null,param,bean,class,the,raw,class,of,the,bean,param,bean,name,the,name,of,the,bean,return,the,type,of,the,bean,or,code,null,if,not,predictable,throws,org,springframework,beans,beans,exception,in,case,of,errors;nullable,default,class,predict,bean,type,class,bean,class,string,bean,name,throws,beans,exception,return,null
SmartInstantiationAwareBeanPostProcessor -> @Nullable 	default Class<?> predictBeanType(Class<?> beanClass, String beanName) throws BeansException;1496837955;Predict the type of the bean to be eventually returned from this_processor's {@link #postProcessBeforeInstantiation} callback._<p>The default implementation returns {@code null}._@param beanClass the raw class of the bean_@param beanName the name of the bean_@return the type of the bean, or {@code null} if not predictable_@throws org.springframework.beans.BeansException in case of errors;@Nullable_	default Class<?> predictBeanType(Class<?> beanClass, String beanName) throws BeansException {_		return null__	};predict,the,type,of,the,bean,to,be,eventually,returned,from,this,processor,s,link,post,process,before,instantiation,callback,p,the,default,implementation,returns,code,null,param,bean,class,the,raw,class,of,the,bean,param,bean,name,the,name,of,the,bean,return,the,type,of,the,bean,or,code,null,if,not,predictable,throws,org,springframework,beans,beans,exception,in,case,of,errors;nullable,default,class,predict,bean,type,class,bean,class,string,bean,name,throws,beans,exception,return,null
SmartInstantiationAwareBeanPostProcessor -> @Nullable 	default Class<?> predictBeanType(Class<?> beanClass, String beanName) throws BeansException;1503007895;Predict the type of the bean to be eventually returned from this_processor's {@link #postProcessBeforeInstantiation} callback._<p>The default implementation returns {@code null}._@param beanClass the raw class of the bean_@param beanName the name of the bean_@return the type of the bean, or {@code null} if not predictable_@throws org.springframework.beans.BeansException in case of errors;@Nullable_	default Class<?> predictBeanType(Class<?> beanClass, String beanName) throws BeansException {_		return null__	};predict,the,type,of,the,bean,to,be,eventually,returned,from,this,processor,s,link,post,process,before,instantiation,callback,p,the,default,implementation,returns,code,null,param,bean,class,the,raw,class,of,the,bean,param,bean,name,the,name,of,the,bean,return,the,type,of,the,bean,or,code,null,if,not,predictable,throws,org,springframework,beans,beans,exception,in,case,of,errors;nullable,default,class,predict,bean,type,class,bean,class,string,bean,name,throws,beans,exception,return,null
SmartInstantiationAwareBeanPostProcessor -> Constructor<?>[] determineCandidateConstructors(Class<?> beanClass, String beanName) throws BeansException_;1328020251;Determine the candidate constructors to use for the given bean._@param beanClass the raw class of the bean (never <code>null</code>)_@param beanName the name of the bean_@return the candidate constructors, or <code>null</code> if none specified_@throws org.springframework.beans.BeansException in case of errors;Constructor<?>[] determineCandidateConstructors(Class<?> beanClass, String beanName) throws BeansException_;determine,the,candidate,constructors,to,use,for,the,given,bean,param,bean,class,the,raw,class,of,the,bean,never,code,null,code,param,bean,name,the,name,of,the,bean,return,the,candidate,constructors,or,code,null,code,if,none,specified,throws,org,springframework,beans,beans,exception,in,case,of,errors;constructor,determine,candidate,constructors,class,bean,class,string,bean,name,throws,beans,exception
SmartInstantiationAwareBeanPostProcessor -> Constructor<?>[] determineCandidateConstructors(Class<?> beanClass, String beanName) throws BeansException_;1356735495;Determine the candidate constructors to use for the given bean._@param beanClass the raw class of the bean (never {@code null})_@param beanName the name of the bean_@return the candidate constructors, or {@code null} if none specified_@throws org.springframework.beans.BeansException in case of errors;Constructor<?>[] determineCandidateConstructors(Class<?> beanClass, String beanName) throws BeansException_;determine,the,candidate,constructors,to,use,for,the,given,bean,param,bean,class,the,raw,class,of,the,bean,never,code,null,param,bean,name,the,name,of,the,bean,return,the,candidate,constructors,or,code,null,if,none,specified,throws,org,springframework,beans,beans,exception,in,case,of,errors;constructor,determine,candidate,constructors,class,bean,class,string,bean,name,throws,beans,exception
SmartInstantiationAwareBeanPostProcessor -> @Nullable 	default Constructor<?>[] determineCandidateConstructors(Class<?> beanClass, String beanName) 			throws BeansException;1495868221;Determine the candidate constructors to use for the given bean._<p>The default implementation returns {@code null}._@param beanClass the raw class of the bean (never {@code null})_@param beanName the name of the bean_@return the candidate constructors, or {@code null} if none specified_@throws org.springframework.beans.BeansException in case of errors;@Nullable_	default Constructor<?>[] determineCandidateConstructors(Class<?> beanClass, String beanName)_			throws BeansException {__		return null__	};determine,the,candidate,constructors,to,use,for,the,given,bean,p,the,default,implementation,returns,code,null,param,bean,class,the,raw,class,of,the,bean,never,code,null,param,bean,name,the,name,of,the,bean,return,the,candidate,constructors,or,code,null,if,none,specified,throws,org,springframework,beans,beans,exception,in,case,of,errors;nullable,default,constructor,determine,candidate,constructors,class,bean,class,string,bean,name,throws,beans,exception,return,null
SmartInstantiationAwareBeanPostProcessor -> @Nullable 	default Constructor<?>[] determineCandidateConstructors(Class<?> beanClass, String beanName) 			throws BeansException;1496837955;Determine the candidate constructors to use for the given bean._<p>The default implementation returns {@code null}._@param beanClass the raw class of the bean (never {@code null})_@param beanName the name of the bean_@return the candidate constructors, or {@code null} if none specified_@throws org.springframework.beans.BeansException in case of errors;@Nullable_	default Constructor<?>[] determineCandidateConstructors(Class<?> beanClass, String beanName)_			throws BeansException {__		return null__	};determine,the,candidate,constructors,to,use,for,the,given,bean,p,the,default,implementation,returns,code,null,param,bean,class,the,raw,class,of,the,bean,never,code,null,param,bean,name,the,name,of,the,bean,return,the,candidate,constructors,or,code,null,if,none,specified,throws,org,springframework,beans,beans,exception,in,case,of,errors;nullable,default,constructor,determine,candidate,constructors,class,bean,class,string,bean,name,throws,beans,exception,return,null
SmartInstantiationAwareBeanPostProcessor -> @Nullable 	default Constructor<?>[] determineCandidateConstructors(Class<?> beanClass, String beanName) 			throws BeansException;1503007895;Determine the candidate constructors to use for the given bean._<p>The default implementation returns {@code null}._@param beanClass the raw class of the bean (never {@code null})_@param beanName the name of the bean_@return the candidate constructors, or {@code null} if none specified_@throws org.springframework.beans.BeansException in case of errors;@Nullable_	default Constructor<?>[] determineCandidateConstructors(Class<?> beanClass, String beanName)_			throws BeansException {__		return null__	};determine,the,candidate,constructors,to,use,for,the,given,bean,p,the,default,implementation,returns,code,null,param,bean,class,the,raw,class,of,the,bean,never,code,null,param,bean,name,the,name,of,the,bean,return,the,candidate,constructors,or,code,null,if,none,specified,throws,org,springframework,beans,beans,exception,in,case,of,errors;nullable,default,constructor,determine,candidate,constructors,class,bean,class,string,bean,name,throws,beans,exception,return,null
SmartInstantiationAwareBeanPostProcessor -> Object getEarlyBeanReference(Object bean, String beanName) throws BeansException_;1328020251;Obtain a reference for early access to the specified bean,_typically for the purpose of resolving a circular reference._<p>This callback gives post-processors a chance to expose a wrapper_early - that is, before the target bean instance is fully initialized._The exposed object should be equivalent to the what_{@link #postProcessBeforeInitialization} / {@link #postProcessAfterInitialization}_would expose otherwise. Note that the object returned by this method will_be used as bean reference unless the post-processor returns a different_wrapper from said post-process callbacks. In other words: Those post-process_callbacks may either eventually expose the same reference or alternatively_return the raw bean instance from those subsequent callbacks (if the wrapper_for the affected bean has been built for a call to this method already,_it will be exposes as final bean reference by default)._@param bean the raw bean instance_@param beanName the name of the bean_@return the object to expose as bean reference_(typically with the passed-in bean instance as default)_@throws org.springframework.beans.BeansException in case of errors;Object getEarlyBeanReference(Object bean, String beanName) throws BeansException_;obtain,a,reference,for,early,access,to,the,specified,bean,typically,for,the,purpose,of,resolving,a,circular,reference,p,this,callback,gives,post,processors,a,chance,to,expose,a,wrapper,early,that,is,before,the,target,bean,instance,is,fully,initialized,the,exposed,object,should,be,equivalent,to,the,what,link,post,process,before,initialization,link,post,process,after,initialization,would,expose,otherwise,note,that,the,object,returned,by,this,method,will,be,used,as,bean,reference,unless,the,post,processor,returns,a,different,wrapper,from,said,post,process,callbacks,in,other,words,those,post,process,callbacks,may,either,eventually,expose,the,same,reference,or,alternatively,return,the,raw,bean,instance,from,those,subsequent,callbacks,if,the,wrapper,for,the,affected,bean,has,been,built,for,a,call,to,this,method,already,it,will,be,exposes,as,final,bean,reference,by,default,param,bean,the,raw,bean,instance,param,bean,name,the,name,of,the,bean,return,the,object,to,expose,as,bean,reference,typically,with,the,passed,in,bean,instance,as,default,throws,org,springframework,beans,beans,exception,in,case,of,errors;object,get,early,bean,reference,object,bean,string,bean,name,throws,beans,exception
SmartInstantiationAwareBeanPostProcessor -> Object getEarlyBeanReference(Object bean, String beanName) throws BeansException_;1356735495;Obtain a reference for early access to the specified bean,_typically for the purpose of resolving a circular reference._<p>This callback gives post-processors a chance to expose a wrapper_early - that is, before the target bean instance is fully initialized._The exposed object should be equivalent to the what_{@link #postProcessBeforeInitialization} / {@link #postProcessAfterInitialization}_would expose otherwise. Note that the object returned by this method will_be used as bean reference unless the post-processor returns a different_wrapper from said post-process callbacks. In other words: Those post-process_callbacks may either eventually expose the same reference or alternatively_return the raw bean instance from those subsequent callbacks (if the wrapper_for the affected bean has been built for a call to this method already,_it will be exposes as final bean reference by default)._@param bean the raw bean instance_@param beanName the name of the bean_@return the object to expose as bean reference_(typically with the passed-in bean instance as default)_@throws org.springframework.beans.BeansException in case of errors;Object getEarlyBeanReference(Object bean, String beanName) throws BeansException_;obtain,a,reference,for,early,access,to,the,specified,bean,typically,for,the,purpose,of,resolving,a,circular,reference,p,this,callback,gives,post,processors,a,chance,to,expose,a,wrapper,early,that,is,before,the,target,bean,instance,is,fully,initialized,the,exposed,object,should,be,equivalent,to,the,what,link,post,process,before,initialization,link,post,process,after,initialization,would,expose,otherwise,note,that,the,object,returned,by,this,method,will,be,used,as,bean,reference,unless,the,post,processor,returns,a,different,wrapper,from,said,post,process,callbacks,in,other,words,those,post,process,callbacks,may,either,eventually,expose,the,same,reference,or,alternatively,return,the,raw,bean,instance,from,those,subsequent,callbacks,if,the,wrapper,for,the,affected,bean,has,been,built,for,a,call,to,this,method,already,it,will,be,exposes,as,final,bean,reference,by,default,param,bean,the,raw,bean,instance,param,bean,name,the,name,of,the,bean,return,the,object,to,expose,as,bean,reference,typically,with,the,passed,in,bean,instance,as,default,throws,org,springframework,beans,beans,exception,in,case,of,errors;object,get,early,bean,reference,object,bean,string,bean,name,throws,beans,exception
SmartInstantiationAwareBeanPostProcessor -> default Object getEarlyBeanReference(Object bean, String beanName) throws BeansException;1467810608;Obtain a reference for early access to the specified bean,_typically for the purpose of resolving a circular reference._<p>This callback gives post-processors a chance to expose a wrapper_early - that is, before the target bean instance is fully initialized._The exposed object should be equivalent to the what_{@link #postProcessBeforeInitialization} / {@link #postProcessAfterInitialization}_would expose otherwise. Note that the object returned by this method will_be used as bean reference unless the post-processor returns a different_wrapper from said post-process callbacks. In other words: Those post-process_callbacks may either eventually expose the same reference or alternatively_return the raw bean instance from those subsequent callbacks (if the wrapper_for the affected bean has been built for a call to this method already,_it will be exposes as final bean reference by default)._<p>The default implementation returns the given {@code bean} as-is._@param bean the raw bean instance_@param beanName the name of the bean_@return the object to expose as bean reference_(typically with the passed-in bean instance as default)_@throws org.springframework.beans.BeansException in case of errors;default Object getEarlyBeanReference(Object bean, String beanName) throws BeansException {_		return bean__	};obtain,a,reference,for,early,access,to,the,specified,bean,typically,for,the,purpose,of,resolving,a,circular,reference,p,this,callback,gives,post,processors,a,chance,to,expose,a,wrapper,early,that,is,before,the,target,bean,instance,is,fully,initialized,the,exposed,object,should,be,equivalent,to,the,what,link,post,process,before,initialization,link,post,process,after,initialization,would,expose,otherwise,note,that,the,object,returned,by,this,method,will,be,used,as,bean,reference,unless,the,post,processor,returns,a,different,wrapper,from,said,post,process,callbacks,in,other,words,those,post,process,callbacks,may,either,eventually,expose,the,same,reference,or,alternatively,return,the,raw,bean,instance,from,those,subsequent,callbacks,if,the,wrapper,for,the,affected,bean,has,been,built,for,a,call,to,this,method,already,it,will,be,exposes,as,final,bean,reference,by,default,p,the,default,implementation,returns,the,given,code,bean,as,is,param,bean,the,raw,bean,instance,param,bean,name,the,name,of,the,bean,return,the,object,to,expose,as,bean,reference,typically,with,the,passed,in,bean,instance,as,default,throws,org,springframework,beans,beans,exception,in,case,of,errors;default,object,get,early,bean,reference,object,bean,string,bean,name,throws,beans,exception,return,bean
SmartInstantiationAwareBeanPostProcessor -> default Object getEarlyBeanReference(Object bean, String beanName) throws BeansException;1495868221;Obtain a reference for early access to the specified bean,_typically for the purpose of resolving a circular reference._<p>This callback gives post-processors a chance to expose a wrapper_early - that is, before the target bean instance is fully initialized._The exposed object should be equivalent to the what_{@link #postProcessBeforeInitialization} / {@link #postProcessAfterInitialization}_would expose otherwise. Note that the object returned by this method will_be used as bean reference unless the post-processor returns a different_wrapper from said post-process callbacks. In other words: Those post-process_callbacks may either eventually expose the same reference or alternatively_return the raw bean instance from those subsequent callbacks (if the wrapper_for the affected bean has been built for a call to this method already,_it will be exposes as final bean reference by default)._<p>The default implementation returns the given {@code bean} as-is._@param bean the raw bean instance_@param beanName the name of the bean_@return the object to expose as bean reference_(typically with the passed-in bean instance as default)_@throws org.springframework.beans.BeansException in case of errors;default Object getEarlyBeanReference(Object bean, String beanName) throws BeansException {_		return bean__	};obtain,a,reference,for,early,access,to,the,specified,bean,typically,for,the,purpose,of,resolving,a,circular,reference,p,this,callback,gives,post,processors,a,chance,to,expose,a,wrapper,early,that,is,before,the,target,bean,instance,is,fully,initialized,the,exposed,object,should,be,equivalent,to,the,what,link,post,process,before,initialization,link,post,process,after,initialization,would,expose,otherwise,note,that,the,object,returned,by,this,method,will,be,used,as,bean,reference,unless,the,post,processor,returns,a,different,wrapper,from,said,post,process,callbacks,in,other,words,those,post,process,callbacks,may,either,eventually,expose,the,same,reference,or,alternatively,return,the,raw,bean,instance,from,those,subsequent,callbacks,if,the,wrapper,for,the,affected,bean,has,been,built,for,a,call,to,this,method,already,it,will,be,exposes,as,final,bean,reference,by,default,p,the,default,implementation,returns,the,given,code,bean,as,is,param,bean,the,raw,bean,instance,param,bean,name,the,name,of,the,bean,return,the,object,to,expose,as,bean,reference,typically,with,the,passed,in,bean,instance,as,default,throws,org,springframework,beans,beans,exception,in,case,of,errors;default,object,get,early,bean,reference,object,bean,string,bean,name,throws,beans,exception,return,bean
SmartInstantiationAwareBeanPostProcessor -> default Object getEarlyBeanReference(Object bean, String beanName) throws BeansException;1503007895;Obtain a reference for early access to the specified bean,_typically for the purpose of resolving a circular reference._<p>This callback gives post-processors a chance to expose a wrapper_early - that is, before the target bean instance is fully initialized._The exposed object should be equivalent to the what_{@link #postProcessBeforeInitialization} / {@link #postProcessAfterInitialization}_would expose otherwise. Note that the object returned by this method will_be used as bean reference unless the post-processor returns a different_wrapper from said post-process callbacks. In other words: Those post-process_callbacks may either eventually expose the same reference or alternatively_return the raw bean instance from those subsequent callbacks (if the wrapper_for the affected bean has been built for a call to this method already,_it will be exposes as final bean reference by default)._<p>The default implementation returns the given {@code bean} as-is._@param bean the raw bean instance_@param beanName the name of the bean_@return the object to expose as bean reference_(typically with the passed-in bean instance as default)_@throws org.springframework.beans.BeansException in case of errors;default Object getEarlyBeanReference(Object bean, String beanName) throws BeansException {_		return bean__	};obtain,a,reference,for,early,access,to,the,specified,bean,typically,for,the,purpose,of,resolving,a,circular,reference,p,this,callback,gives,post,processors,a,chance,to,expose,a,wrapper,early,that,is,before,the,target,bean,instance,is,fully,initialized,the,exposed,object,should,be,equivalent,to,the,what,link,post,process,before,initialization,link,post,process,after,initialization,would,expose,otherwise,note,that,the,object,returned,by,this,method,will,be,used,as,bean,reference,unless,the,post,processor,returns,a,different,wrapper,from,said,post,process,callbacks,in,other,words,those,post,process,callbacks,may,either,eventually,expose,the,same,reference,or,alternatively,return,the,raw,bean,instance,from,those,subsequent,callbacks,if,the,wrapper,for,the,affected,bean,has,been,built,for,a,call,to,this,method,already,it,will,be,exposes,as,final,bean,reference,by,default,p,the,default,implementation,returns,the,given,code,bean,as,is,param,bean,the,raw,bean,instance,param,bean,name,the,name,of,the,bean,return,the,object,to,expose,as,bean,reference,typically,with,the,passed,in,bean,instance,as,default,throws,org,springframework,beans,beans,exception,in,case,of,errors;default,object,get,early,bean,reference,object,bean,string,bean,name,throws,beans,exception,return,bean
