# id;timestamp;commentText;codeText;commentWords;codeWords
InjectionPoint -> protected InjectionPoint(InjectionPoint original);1456432609;Copy constructor._@param original the original descriptor to create a copy from;protected InjectionPoint(InjectionPoint original) {_		this.methodParameter = (original.methodParameter != null ?_				new MethodParameter(original.methodParameter) : null)__		this.field = original.field__		this.fieldAnnotations = original.fieldAnnotations__	};copy,constructor,param,original,the,original,descriptor,to,create,a,copy,from;protected,injection,point,injection,point,original,this,method,parameter,original,method,parameter,null,new,method,parameter,original,method,parameter,null,this,field,original,field,this,field,annotations,original,field,annotations
InjectionPoint -> protected InjectionPoint(InjectionPoint original);1493811736;Copy constructor._@param original the original descriptor to create a copy from;protected InjectionPoint(InjectionPoint original) {_		this.methodParameter = (original.methodParameter != null ?_				new MethodParameter(original.methodParameter) : null)__		this.field = original.field__		this.fieldAnnotations = original.fieldAnnotations__	};copy,constructor,param,original,the,original,descriptor,to,create,a,copy,from;protected,injection,point,injection,point,original,this,method,parameter,original,method,parameter,null,new,method,parameter,original,method,parameter,null,this,field,original,field,this,field,annotations,original,field,annotations
InjectionPoint -> protected InjectionPoint(InjectionPoint original);1495868221;Copy constructor._@param original the original descriptor to create a copy from;protected InjectionPoint(InjectionPoint original) {_		this.methodParameter = (original.methodParameter != null ?_				new MethodParameter(original.methodParameter) : null)__		this.field = original.field__		this.fieldAnnotations = original.fieldAnnotations__	};copy,constructor,param,original,the,original,descriptor,to,create,a,copy,from;protected,injection,point,injection,point,original,this,method,parameter,original,method,parameter,null,new,method,parameter,original,method,parameter,null,this,field,original,field,this,field,annotations,original,field,annotations
InjectionPoint -> protected InjectionPoint(InjectionPoint original);1498780456;Copy constructor._@param original the original descriptor to create a copy from;protected InjectionPoint(InjectionPoint original) {_		this.methodParameter = (original.methodParameter != null ?_				new MethodParameter(original.methodParameter) : null)__		this.field = original.field__		this.fieldAnnotations = original.fieldAnnotations__	};copy,constructor,param,original,the,original,descriptor,to,create,a,copy,from;protected,injection,point,injection,point,original,this,method,parameter,original,method,parameter,null,new,method,parameter,original,method,parameter,null,this,field,original,field,this,field,annotations,original,field,annotations
InjectionPoint -> protected InjectionPoint(InjectionPoint original);1549551674;Copy constructor._@param original the original descriptor to create a copy from;protected InjectionPoint(InjectionPoint original) {_		this.methodParameter = (original.methodParameter != null ?_				new MethodParameter(original.methodParameter) : null)__		this.field = original.field__		this.fieldAnnotations = original.fieldAnnotations__	};copy,constructor,param,original,the,original,descriptor,to,create,a,copy,from;protected,injection,point,injection,point,original,this,method,parameter,original,method,parameter,null,new,method,parameter,original,method,parameter,null,this,field,original,field,this,field,annotations,original,field,annotations
InjectionPoint -> public AnnotatedElement getAnnotatedElement();1456432609;Return the wrapped annotated element._<p>Note: In case of a method/constructor parameter, this exposes_the annotations declared on the method or constructor itself_(i.e. at the method/constructor level, not at the parameter level)._Use {@link #getAnnotations()} to obtain parameter-level annotations in_such a scenario, transparently with corresponding field annotations._@return the Field / Method / Constructor as AnnotatedElement;public AnnotatedElement getAnnotatedElement() {_		return (this.field != null ? this.field : this.methodParameter.getAnnotatedElement())__	};return,the,wrapped,annotated,element,p,note,in,case,of,a,method,constructor,parameter,this,exposes,the,annotations,declared,on,the,method,or,constructor,itself,i,e,at,the,method,constructor,level,not,at,the,parameter,level,use,link,get,annotations,to,obtain,parameter,level,annotations,in,such,a,scenario,transparently,with,corresponding,field,annotations,return,the,field,method,constructor,as,annotated,element;public,annotated,element,get,annotated,element,return,this,field,null,this,field,this,method,parameter,get,annotated,element
InjectionPoint -> public AnnotatedElement getAnnotatedElement();1493811736;Return the wrapped annotated element._<p>Note: In case of a method/constructor parameter, this exposes_the annotations declared on the method or constructor itself_(i.e. at the method/constructor level, not at the parameter level)._Use {@link #getAnnotations()} to obtain parameter-level annotations in_such a scenario, transparently with corresponding field annotations._@return the Field / Method / Constructor as AnnotatedElement;public AnnotatedElement getAnnotatedElement() {_		return (this.field != null ? this.field : this.methodParameter.getAnnotatedElement())__	};return,the,wrapped,annotated,element,p,note,in,case,of,a,method,constructor,parameter,this,exposes,the,annotations,declared,on,the,method,or,constructor,itself,i,e,at,the,method,constructor,level,not,at,the,parameter,level,use,link,get,annotations,to,obtain,parameter,level,annotations,in,such,a,scenario,transparently,with,corresponding,field,annotations,return,the,field,method,constructor,as,annotated,element;public,annotated,element,get,annotated,element,return,this,field,null,this,field,this,method,parameter,get,annotated,element
InjectionPoint -> public AnnotatedElement getAnnotatedElement();1495868221;Return the wrapped annotated element._<p>Note: In case of a method/constructor parameter, this exposes_the annotations declared on the method or constructor itself_(i.e. at the method/constructor level, not at the parameter level)._Use {@link #getAnnotations()} to obtain parameter-level annotations in_such a scenario, transparently with corresponding field annotations._@return the Field / Method / Constructor as AnnotatedElement;public AnnotatedElement getAnnotatedElement() {_		return (this.field != null ? this.field : this.methodParameter.getAnnotatedElement())__	};return,the,wrapped,annotated,element,p,note,in,case,of,a,method,constructor,parameter,this,exposes,the,annotations,declared,on,the,method,or,constructor,itself,i,e,at,the,method,constructor,level,not,at,the,parameter,level,use,link,get,annotations,to,obtain,parameter,level,annotations,in,such,a,scenario,transparently,with,corresponding,field,annotations,return,the,field,method,constructor,as,annotated,element;public,annotated,element,get,annotated,element,return,this,field,null,this,field,this,method,parameter,get,annotated,element
InjectionPoint -> public AnnotatedElement getAnnotatedElement();1498780456;Return the wrapped annotated element._<p>Note: In case of a method/constructor parameter, this exposes_the annotations declared on the method or constructor itself_(i.e. at the method/constructor level, not at the parameter level)._Use {@link #getAnnotations()} to obtain parameter-level annotations in_such a scenario, transparently with corresponding field annotations._@return the Field / Method / Constructor as AnnotatedElement;public AnnotatedElement getAnnotatedElement() {_		return (this.field != null ? this.field : obtainMethodParameter().getAnnotatedElement())__	};return,the,wrapped,annotated,element,p,note,in,case,of,a,method,constructor,parameter,this,exposes,the,annotations,declared,on,the,method,or,constructor,itself,i,e,at,the,method,constructor,level,not,at,the,parameter,level,use,link,get,annotations,to,obtain,parameter,level,annotations,in,such,a,scenario,transparently,with,corresponding,field,annotations,return,the,field,method,constructor,as,annotated,element;public,annotated,element,get,annotated,element,return,this,field,null,this,field,obtain,method,parameter,get,annotated,element
InjectionPoint -> public AnnotatedElement getAnnotatedElement();1549551674;Return the wrapped annotated element._<p>Note: In case of a method/constructor parameter, this exposes_the annotations declared on the method or constructor itself_(i.e. at the method/constructor level, not at the parameter level)._Use {@link #getAnnotations()} to obtain parameter-level annotations in_such a scenario, transparently with corresponding field annotations._@return the Field / Method / Constructor as AnnotatedElement;public AnnotatedElement getAnnotatedElement() {_		return (this.field != null ? this.field : obtainMethodParameter().getAnnotatedElement())__	};return,the,wrapped,annotated,element,p,note,in,case,of,a,method,constructor,parameter,this,exposes,the,annotations,declared,on,the,method,or,constructor,itself,i,e,at,the,method,constructor,level,not,at,the,parameter,level,use,link,get,annotations,to,obtain,parameter,level,annotations,in,such,a,scenario,transparently,with,corresponding,field,annotations,return,the,field,method,constructor,as,annotated,element;public,annotated,element,get,annotated,element,return,this,field,null,this,field,obtain,method,parameter,get,annotated,element
InjectionPoint -> protected final MethodParameter obtainMethodParameter();1498780456;Return the wrapped MethodParameter, assuming it is present._@return the MethodParameter (never {@code null})_@throws IllegalStateException if no MethodParameter is available_@since 5.0;protected final MethodParameter obtainMethodParameter() {_		Assert.state(this.methodParameter != null, "Neither Field nor MethodParameter")__		return this.methodParameter__	};return,the,wrapped,method,parameter,assuming,it,is,present,return,the,method,parameter,never,code,null,throws,illegal,state,exception,if,no,method,parameter,is,available,since,5,0;protected,final,method,parameter,obtain,method,parameter,assert,state,this,method,parameter,null,neither,field,nor,method,parameter,return,this,method,parameter
InjectionPoint -> protected final MethodParameter obtainMethodParameter();1549551674;Return the wrapped MethodParameter, assuming it is present._@return the MethodParameter (never {@code null})_@throws IllegalStateException if no MethodParameter is available_@since 5.0;protected final MethodParameter obtainMethodParameter() {_		Assert.state(this.methodParameter != null, "Neither Field nor MethodParameter")__		return this.methodParameter__	};return,the,wrapped,method,parameter,assuming,it,is,present,return,the,method,parameter,never,code,null,throws,illegal,state,exception,if,no,method,parameter,is,available,since,5,0;protected,final,method,parameter,obtain,method,parameter,assert,state,this,method,parameter,null,neither,field,nor,method,parameter,return,this,method,parameter
InjectionPoint -> public InjectionPoint(MethodParameter methodParameter);1456432609;Create an injection point descriptor for a method or constructor parameter._@param methodParameter the MethodParameter to wrap;public InjectionPoint(MethodParameter methodParameter) {_		Assert.notNull(methodParameter, "MethodParameter must not be null")__		this.methodParameter = methodParameter__	};create,an,injection,point,descriptor,for,a,method,or,constructor,parameter,param,method,parameter,the,method,parameter,to,wrap;public,injection,point,method,parameter,method,parameter,assert,not,null,method,parameter,method,parameter,must,not,be,null,this,method,parameter,method,parameter
InjectionPoint -> public InjectionPoint(MethodParameter methodParameter);1493811736;Create an injection point descriptor for a method or constructor parameter._@param methodParameter the MethodParameter to wrap;public InjectionPoint(MethodParameter methodParameter) {_		Assert.notNull(methodParameter, "MethodParameter must not be null")__		this.methodParameter = methodParameter__	};create,an,injection,point,descriptor,for,a,method,or,constructor,parameter,param,method,parameter,the,method,parameter,to,wrap;public,injection,point,method,parameter,method,parameter,assert,not,null,method,parameter,method,parameter,must,not,be,null,this,method,parameter,method,parameter
InjectionPoint -> public InjectionPoint(MethodParameter methodParameter);1495868221;Create an injection point descriptor for a method or constructor parameter._@param methodParameter the MethodParameter to wrap;public InjectionPoint(MethodParameter methodParameter) {_		Assert.notNull(methodParameter, "MethodParameter must not be null")__		this.methodParameter = methodParameter__	};create,an,injection,point,descriptor,for,a,method,or,constructor,parameter,param,method,parameter,the,method,parameter,to,wrap;public,injection,point,method,parameter,method,parameter,assert,not,null,method,parameter,method,parameter,must,not,be,null,this,method,parameter,method,parameter
InjectionPoint -> public InjectionPoint(MethodParameter methodParameter);1498780456;Create an injection point descriptor for a method or constructor parameter._@param methodParameter the MethodParameter to wrap;public InjectionPoint(MethodParameter methodParameter) {_		Assert.notNull(methodParameter, "MethodParameter must not be null")__		this.methodParameter = methodParameter__	};create,an,injection,point,descriptor,for,a,method,or,constructor,parameter,param,method,parameter,the,method,parameter,to,wrap;public,injection,point,method,parameter,method,parameter,assert,not,null,method,parameter,method,parameter,must,not,be,null,this,method,parameter,method,parameter
InjectionPoint -> public InjectionPoint(MethodParameter methodParameter);1549551674;Create an injection point descriptor for a method or constructor parameter._@param methodParameter the MethodParameter to wrap;public InjectionPoint(MethodParameter methodParameter) {_		Assert.notNull(methodParameter, "MethodParameter must not be null")__		this.methodParameter = methodParameter__	};create,an,injection,point,descriptor,for,a,method,or,constructor,parameter,param,method,parameter,the,method,parameter,to,wrap;public,injection,point,method,parameter,method,parameter,assert,not,null,method,parameter,method,parameter,must,not,be,null,this,method,parameter,method,parameter
InjectionPoint -> public MethodParameter getMethodParameter();1456432609;Return the wrapped MethodParameter, if any._<p>Note: Either MethodParameter or Field is available._@return the MethodParameter, or {@code null} if none;public MethodParameter getMethodParameter() {_		return this.methodParameter__	};return,the,wrapped,method,parameter,if,any,p,note,either,method,parameter,or,field,is,available,return,the,method,parameter,or,code,null,if,none;public,method,parameter,get,method,parameter,return,this,method,parameter
InjectionPoint -> public MethodParameter getMethodParameter();1493811736;Return the wrapped MethodParameter, if any._<p>Note: Either MethodParameter or Field is available._@return the MethodParameter, or {@code null} if none;public MethodParameter getMethodParameter() {_		return this.methodParameter__	};return,the,wrapped,method,parameter,if,any,p,note,either,method,parameter,or,field,is,available,return,the,method,parameter,or,code,null,if,none;public,method,parameter,get,method,parameter,return,this,method,parameter
InjectionPoint -> public Class<?> getDeclaredType();1456432609;Return the type declared by the underlying field or method/constructor parameter,_indicating the injection type.;public Class<?> getDeclaredType() {_		return (this.field != null ? this.field.getType() : this.methodParameter.getParameterType())__	};return,the,type,declared,by,the,underlying,field,or,method,constructor,parameter,indicating,the,injection,type;public,class,get,declared,type,return,this,field,null,this,field,get,type,this,method,parameter,get,parameter,type
InjectionPoint -> public Class<?> getDeclaredType();1493811736;Return the type declared by the underlying field or method/constructor parameter,_indicating the injection type.;public Class<?> getDeclaredType() {_		return (this.field != null ? this.field.getType() : this.methodParameter.getParameterType())__	};return,the,type,declared,by,the,underlying,field,or,method,constructor,parameter,indicating,the,injection,type;public,class,get,declared,type,return,this,field,null,this,field,get,type,this,method,parameter,get,parameter,type
InjectionPoint -> public Class<?> getDeclaredType();1495868221;Return the type declared by the underlying field or method/constructor parameter,_indicating the injection type.;public Class<?> getDeclaredType() {_		return (this.field != null ? this.field.getType() : this.methodParameter.getParameterType())__	};return,the,type,declared,by,the,underlying,field,or,method,constructor,parameter,indicating,the,injection,type;public,class,get,declared,type,return,this,field,null,this,field,get,type,this,method,parameter,get,parameter,type
InjectionPoint -> public Class<?> getDeclaredType();1498780456;Return the type declared by the underlying field or method/constructor parameter,_indicating the injection type.;public Class<?> getDeclaredType() {_		return (this.field != null ? this.field.getType() : obtainMethodParameter().getParameterType())__	};return,the,type,declared,by,the,underlying,field,or,method,constructor,parameter,indicating,the,injection,type;public,class,get,declared,type,return,this,field,null,this,field,get,type,obtain,method,parameter,get,parameter,type
InjectionPoint -> public Class<?> getDeclaredType();1549551674;Return the type declared by the underlying field or method/constructor parameter,_indicating the injection type.;public Class<?> getDeclaredType() {_		return (this.field != null ? this.field.getType() : obtainMethodParameter().getParameterType())__	};return,the,type,declared,by,the,underlying,field,or,method,constructor,parameter,indicating,the,injection,type;public,class,get,declared,type,return,this,field,null,this,field,get,type,obtain,method,parameter,get,parameter,type
InjectionPoint -> @Nullable 	public MethodParameter getMethodParameter();1495868221;Return the wrapped MethodParameter, if any._<p>Note: Either MethodParameter or Field is available._@return the MethodParameter, or {@code null} if none;@Nullable_	public MethodParameter getMethodParameter() {_		return this.methodParameter__	};return,the,wrapped,method,parameter,if,any,p,note,either,method,parameter,or,field,is,available,return,the,method,parameter,or,code,null,if,none;nullable,public,method,parameter,get,method,parameter,return,this,method,parameter
InjectionPoint -> @Nullable 	public MethodParameter getMethodParameter();1498780456;Return the wrapped MethodParameter, if any._<p>Note: Either MethodParameter or Field is available._@return the MethodParameter, or {@code null} if none;@Nullable_	public MethodParameter getMethodParameter() {_		return this.methodParameter__	};return,the,wrapped,method,parameter,if,any,p,note,either,method,parameter,or,field,is,available,return,the,method,parameter,or,code,null,if,none;nullable,public,method,parameter,get,method,parameter,return,this,method,parameter
InjectionPoint -> @Nullable 	public MethodParameter getMethodParameter();1549551674;Return the wrapped MethodParameter, if any._<p>Note: Either MethodParameter or Field is available._@return the MethodParameter, or {@code null} if none;@Nullable_	public MethodParameter getMethodParameter() {_		return this.methodParameter__	};return,the,wrapped,method,parameter,if,any,p,note,either,method,parameter,or,field,is,available,return,the,method,parameter,or,code,null,if,none;nullable,public,method,parameter,get,method,parameter,return,this,method,parameter
InjectionPoint -> public InjectionPoint(Field field);1456432609;Create an injection point descriptor for a field._@param field the field to wrap;public InjectionPoint(Field field) {_		Assert.notNull(field, "Field must not be null")__		this.field = field__	};create,an,injection,point,descriptor,for,a,field,param,field,the,field,to,wrap;public,injection,point,field,field,assert,not,null,field,field,must,not,be,null,this,field,field
InjectionPoint -> public InjectionPoint(Field field);1493811736;Create an injection point descriptor for a field._@param field the field to wrap;public InjectionPoint(Field field) {_		Assert.notNull(field, "Field must not be null")__		this.field = field__	};create,an,injection,point,descriptor,for,a,field,param,field,the,field,to,wrap;public,injection,point,field,field,assert,not,null,field,field,must,not,be,null,this,field,field
InjectionPoint -> public InjectionPoint(Field field);1495868221;Create an injection point descriptor for a field._@param field the field to wrap;public InjectionPoint(Field field) {_		Assert.notNull(field, "Field must not be null")__		this.field = field__	};create,an,injection,point,descriptor,for,a,field,param,field,the,field,to,wrap;public,injection,point,field,field,assert,not,null,field,field,must,not,be,null,this,field,field
InjectionPoint -> public InjectionPoint(Field field);1498780456;Create an injection point descriptor for a field._@param field the field to wrap;public InjectionPoint(Field field) {_		Assert.notNull(field, "Field must not be null")__		this.field = field__	};create,an,injection,point,descriptor,for,a,field,param,field,the,field,to,wrap;public,injection,point,field,field,assert,not,null,field,field,must,not,be,null,this,field,field
InjectionPoint -> public InjectionPoint(Field field);1549551674;Create an injection point descriptor for a field._@param field the field to wrap;public InjectionPoint(Field field) {_		Assert.notNull(field, "Field must not be null")__		this.field = field__	};create,an,injection,point,descriptor,for,a,field,param,field,the,field,to,wrap;public,injection,point,field,field,assert,not,null,field,field,must,not,be,null,this,field,field
InjectionPoint -> protected InjectionPoint();1456432609;Just available for serialization purposes in subclasses.;protected InjectionPoint() {_	};just,available,for,serialization,purposes,in,subclasses;protected,injection,point
InjectionPoint -> protected InjectionPoint();1493811736;Just available for serialization purposes in subclasses.;protected InjectionPoint() {_	};just,available,for,serialization,purposes,in,subclasses;protected,injection,point
InjectionPoint -> protected InjectionPoint();1495868221;Just available for serialization purposes in subclasses.;protected InjectionPoint() {_	};just,available,for,serialization,purposes,in,subclasses;protected,injection,point
InjectionPoint -> protected InjectionPoint();1498780456;Just available for serialization purposes in subclasses.;protected InjectionPoint() {_	};just,available,for,serialization,purposes,in,subclasses;protected,injection,point
InjectionPoint -> protected InjectionPoint();1549551674;Just available for serialization purposes in subclasses.;protected InjectionPoint() {_	};just,available,for,serialization,purposes,in,subclasses;protected,injection,point
InjectionPoint -> @Nullable 	public <A extends Annotation> A getAnnotation(Class<A> annotationType);1495868221;Retrieve a field/parameter annotation of the given type, if any._@param annotationType the annotation type to retrieve_@return the annotation instance, or {@code null} if none found_@since 4.3.9;@Nullable_	public <A extends Annotation> A getAnnotation(Class<A> annotationType) {_		return (this.field != null ? this.field.getAnnotation(annotationType) :_				this.methodParameter.getParameterAnnotation(annotationType))__	};retrieve,a,field,parameter,annotation,of,the,given,type,if,any,param,annotation,type,the,annotation,type,to,retrieve,return,the,annotation,instance,or,code,null,if,none,found,since,4,3,9;nullable,public,a,extends,annotation,a,get,annotation,class,a,annotation,type,return,this,field,null,this,field,get,annotation,annotation,type,this,method,parameter,get,parameter,annotation,annotation,type
InjectionPoint -> @Nullable 	public <A extends Annotation> A getAnnotation(Class<A> annotationType);1498780456;Retrieve a field/parameter annotation of the given type, if any._@param annotationType the annotation type to retrieve_@return the annotation instance, or {@code null} if none found_@since 4.3.9;@Nullable_	public <A extends Annotation> A getAnnotation(Class<A> annotationType) {_		return (this.field != null ? this.field.getAnnotation(annotationType) :_				obtainMethodParameter().getParameterAnnotation(annotationType))__	};retrieve,a,field,parameter,annotation,of,the,given,type,if,any,param,annotation,type,the,annotation,type,to,retrieve,return,the,annotation,instance,or,code,null,if,none,found,since,4,3,9;nullable,public,a,extends,annotation,a,get,annotation,class,a,annotation,type,return,this,field,null,this,field,get,annotation,annotation,type,obtain,method,parameter,get,parameter,annotation,annotation,type
InjectionPoint -> @Nullable 	public <A extends Annotation> A getAnnotation(Class<A> annotationType);1549551674;Retrieve a field/parameter annotation of the given type, if any._@param annotationType the annotation type to retrieve_@return the annotation instance, or {@code null} if none found_@since 4.3.9;@Nullable_	public <A extends Annotation> A getAnnotation(Class<A> annotationType) {_		return (this.field != null ? this.field.getAnnotation(annotationType) :_				obtainMethodParameter().getParameterAnnotation(annotationType))__	};retrieve,a,field,parameter,annotation,of,the,given,type,if,any,param,annotation,type,the,annotation,type,to,retrieve,return,the,annotation,instance,or,code,null,if,none,found,since,4,3,9;nullable,public,a,extends,annotation,a,get,annotation,class,a,annotation,type,return,this,field,null,this,field,get,annotation,annotation,type,obtain,method,parameter,get,parameter,annotation,annotation,type
InjectionPoint -> public Field getField();1456432609;Return the wrapped Field, if any._<p>Note: Either MethodParameter or Field is available._@return the Field, or {@code null} if none;public Field getField() {_		return this.field__	};return,the,wrapped,field,if,any,p,note,either,method,parameter,or,field,is,available,return,the,field,or,code,null,if,none;public,field,get,field,return,this,field
InjectionPoint -> public Field getField();1493811736;Return the wrapped Field, if any._<p>Note: Either MethodParameter or Field is available._@return the Field, or {@code null} if none;public Field getField() {_		return this.field__	};return,the,wrapped,field,if,any,p,note,either,method,parameter,or,field,is,available,return,the,field,or,code,null,if,none;public,field,get,field,return,this,field
InjectionPoint -> @Nullable 	public Field getField();1495868221;Return the wrapped Field, if any._<p>Note: Either MethodParameter or Field is available._@return the Field, or {@code null} if none;@Nullable_	public Field getField() {_		return this.field__	};return,the,wrapped,field,if,any,p,note,either,method,parameter,or,field,is,available,return,the,field,or,code,null,if,none;nullable,public,field,get,field,return,this,field
InjectionPoint -> @Nullable 	public Field getField();1498780456;Return the wrapped Field, if any._<p>Note: Either MethodParameter or Field is available._@return the Field, or {@code null} if none;@Nullable_	public Field getField() {_		return this.field__	};return,the,wrapped,field,if,any,p,note,either,method,parameter,or,field,is,available,return,the,field,or,code,null,if,none;nullable,public,field,get,field,return,this,field
InjectionPoint -> @Nullable 	public Field getField();1549551674;Return the wrapped Field, if any._<p>Note: Either MethodParameter or Field is available._@return the Field, or {@code null} if none;@Nullable_	public Field getField() {_		return this.field__	};return,the,wrapped,field,if,any,p,note,either,method,parameter,or,field,is,available,return,the,field,or,code,null,if,none;nullable,public,field,get,field,return,this,field
InjectionPoint -> public Member getMember();1456432609;Returns the wrapped member, containing the injection point._@return the Field / Method / Constructor as Member;public Member getMember() {_		return (this.field != null ? this.field : this.methodParameter.getMember())__	};returns,the,wrapped,member,containing,the,injection,point,return,the,field,method,constructor,as,member;public,member,get,member,return,this,field,null,this,field,this,method,parameter,get,member
InjectionPoint -> public Member getMember();1493811736;Returns the wrapped member, containing the injection point._@return the Field / Method / Constructor as Member;public Member getMember() {_		return (this.field != null ? this.field : this.methodParameter.getMember())__	};returns,the,wrapped,member,containing,the,injection,point,return,the,field,method,constructor,as,member;public,member,get,member,return,this,field,null,this,field,this,method,parameter,get,member
InjectionPoint -> public Member getMember();1495868221;Returns the wrapped member, containing the injection point._@return the Field / Method / Constructor as Member;public Member getMember() {_		return (this.field != null ? this.field : this.methodParameter.getMember())__	};returns,the,wrapped,member,containing,the,injection,point,return,the,field,method,constructor,as,member;public,member,get,member,return,this,field,null,this,field,this,method,parameter,get,member
InjectionPoint -> public Member getMember();1498780456;Returns the wrapped member, containing the injection point._@return the Field / Method / Constructor as Member;public Member getMember() {_		return (this.field != null ? this.field : obtainMethodParameter().getMember())__	};returns,the,wrapped,member,containing,the,injection,point,return,the,field,method,constructor,as,member;public,member,get,member,return,this,field,null,this,field,obtain,method,parameter,get,member
InjectionPoint -> public Member getMember();1549551674;Returns the wrapped member, containing the injection point._@return the Field / Method / Constructor as Member;public Member getMember() {_		return (this.field != null ? this.field : obtainMethodParameter().getMember())__	};returns,the,wrapped,member,containing,the,injection,point,return,the,field,method,constructor,as,member;public,member,get,member,return,this,field,null,this,field,obtain,method,parameter,get,member
InjectionPoint -> public Annotation[] getAnnotations();1456432609;Obtain the annotations associated with the wrapped field or method/constructor parameter.;public Annotation[] getAnnotations() {_		if (this.field != null) {_			if (this.fieldAnnotations == null) {_				this.fieldAnnotations = this.field.getAnnotations()__			}_			return this.fieldAnnotations__		}_		else {_			return this.methodParameter.getParameterAnnotations()__		}_	};obtain,the,annotations,associated,with,the,wrapped,field,or,method,constructor,parameter;public,annotation,get,annotations,if,this,field,null,if,this,field,annotations,null,this,field,annotations,this,field,get,annotations,return,this,field,annotations,else,return,this,method,parameter,get,parameter,annotations
InjectionPoint -> public Annotation[] getAnnotations();1493811736;Obtain the annotations associated with the wrapped field or method/constructor parameter.;public Annotation[] getAnnotations() {_		if (this.field != null) {_			if (this.fieldAnnotations == null) {_				this.fieldAnnotations = this.field.getAnnotations()__			}_			return this.fieldAnnotations__		}_		else {_			return this.methodParameter.getParameterAnnotations()__		}_	};obtain,the,annotations,associated,with,the,wrapped,field,or,method,constructor,parameter;public,annotation,get,annotations,if,this,field,null,if,this,field,annotations,null,this,field,annotations,this,field,get,annotations,return,this,field,annotations,else,return,this,method,parameter,get,parameter,annotations
InjectionPoint -> public Annotation[] getAnnotations();1495868221;Obtain the annotations associated with the wrapped field or method/constructor parameter.;public Annotation[] getAnnotations() {_		if (this.field != null) {_			if (this.fieldAnnotations == null) {_				this.fieldAnnotations = this.field.getAnnotations()__			}_			return this.fieldAnnotations__		}_		else {_			return this.methodParameter.getParameterAnnotations()__		}_	};obtain,the,annotations,associated,with,the,wrapped,field,or,method,constructor,parameter;public,annotation,get,annotations,if,this,field,null,if,this,field,annotations,null,this,field,annotations,this,field,get,annotations,return,this,field,annotations,else,return,this,method,parameter,get,parameter,annotations
InjectionPoint -> public Annotation[] getAnnotations();1498780456;Obtain the annotations associated with the wrapped field or method/constructor parameter.;public Annotation[] getAnnotations() {_		if (this.field != null) {_			Annotation[] fieldAnnotations = this.fieldAnnotations__			if (fieldAnnotations == null) {_				fieldAnnotations = this.field.getAnnotations()__				this.fieldAnnotations = fieldAnnotations__			}_			return fieldAnnotations__		}_		else {_			return obtainMethodParameter().getParameterAnnotations()__		}_	};obtain,the,annotations,associated,with,the,wrapped,field,or,method,constructor,parameter;public,annotation,get,annotations,if,this,field,null,annotation,field,annotations,this,field,annotations,if,field,annotations,null,field,annotations,this,field,get,annotations,this,field,annotations,field,annotations,return,field,annotations,else,return,obtain,method,parameter,get,parameter,annotations
InjectionPoint -> public Annotation[] getAnnotations();1549551674;Obtain the annotations associated with the wrapped field or method/constructor parameter.;public Annotation[] getAnnotations() {_		if (this.field != null) {_			Annotation[] fieldAnnotations = this.fieldAnnotations__			if (fieldAnnotations == null) {_				fieldAnnotations = this.field.getAnnotations()__				this.fieldAnnotations = fieldAnnotations__			}_			return fieldAnnotations__		}_		else {_			return obtainMethodParameter().getParameterAnnotations()__		}_	};obtain,the,annotations,associated,with,the,wrapped,field,or,method,constructor,parameter;public,annotation,get,annotations,if,this,field,null,annotation,field,annotations,this,field,annotations,if,field,annotations,null,field,annotations,this,field,get,annotations,this,field,annotations,field,annotations,return,field,annotations,else,return,obtain,method,parameter,get,parameter,annotations
