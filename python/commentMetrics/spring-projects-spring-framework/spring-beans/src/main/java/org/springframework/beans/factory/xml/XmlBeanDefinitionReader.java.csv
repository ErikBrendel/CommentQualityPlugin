# id;timestamp;commentText;codeText;commentWords;codeWords
XmlBeanDefinitionReader -> public void setValidationModeName(String validationModeName);1328020251;Set the validation mode to use by name. Defaults to {@link #VALIDATION_AUTO}._@see #setValidationMode;public void setValidationModeName(String validationModeName) {_		setValidationMode(constants.asNumber(validationModeName).intValue())__	};set,the,validation,mode,to,use,by,name,defaults,to,link,see,set,validation,mode;public,void,set,validation,mode,name,string,validation,mode,name,set,validation,mode,constants,as,number,validation,mode,name,int,value
XmlBeanDefinitionReader -> public void setValidationModeName(String validationModeName);1356735495;Set the validation mode to use by name. Defaults to {@link #VALIDATION_AUTO}._@see #setValidationMode;public void setValidationModeName(String validationModeName) {_		setValidationMode(constants.asNumber(validationModeName).intValue())__	};set,the,validation,mode,to,use,by,name,defaults,to,link,see,set,validation,mode;public,void,set,validation,mode,name,string,validation,mode,name,set,validation,mode,constants,as,number,validation,mode,name,int,value
XmlBeanDefinitionReader -> public void setValidationModeName(String validationModeName);1357119239;Set the validation mode to use by name. Defaults to {@link #VALIDATION_AUTO}._@see #setValidationMode;public void setValidationModeName(String validationModeName) {_		setValidationMode(constants.asNumber(validationModeName).intValue())__	};set,the,validation,mode,to,use,by,name,defaults,to,link,see,set,validation,mode;public,void,set,validation,mode,name,string,validation,mode,name,set,validation,mode,constants,as,number,validation,mode,name,int,value
XmlBeanDefinitionReader -> public void setValidationModeName(String validationModeName);1368482696;Set the validation mode to use by name. Defaults to {@link #VALIDATION_AUTO}._@see #setValidationMode;public void setValidationModeName(String validationModeName) {_		setValidationMode(constants.asNumber(validationModeName).intValue())__	};set,the,validation,mode,to,use,by,name,defaults,to,link,see,set,validation,mode;public,void,set,validation,mode,name,string,validation,mode,name,set,validation,mode,constants,as,number,validation,mode,name,int,value
XmlBeanDefinitionReader -> public void setValidationModeName(String validationModeName);1382030648;Set the validation mode to use by name. Defaults to {@link #VALIDATION_AUTO}._@see #setValidationMode;public void setValidationModeName(String validationModeName) {_		setValidationMode(constants.asNumber(validationModeName).intValue())__	};set,the,validation,mode,to,use,by,name,defaults,to,link,see,set,validation,mode;public,void,set,validation,mode,name,string,validation,mode,name,set,validation,mode,constants,as,number,validation,mode,name,int,value
XmlBeanDefinitionReader -> public void setValidationModeName(String validationModeName);1411599760;Set the validation mode to use by name. Defaults to {@link #VALIDATION_AUTO}._@see #setValidationMode;public void setValidationModeName(String validationModeName) {_		setValidationMode(constants.asNumber(validationModeName).intValue())__	};set,the,validation,mode,to,use,by,name,defaults,to,link,see,set,validation,mode;public,void,set,validation,mode,name,string,validation,mode,name,set,validation,mode,constants,as,number,validation,mode,name,int,value
XmlBeanDefinitionReader -> public void setValidationModeName(String validationModeName);1419966315;Set the validation mode to use by name. Defaults to {@link #VALIDATION_AUTO}._@see #setValidationMode;public void setValidationModeName(String validationModeName) {_		setValidationMode(constants.asNumber(validationModeName).intValue())__	};set,the,validation,mode,to,use,by,name,defaults,to,link,see,set,validation,mode;public,void,set,validation,mode,name,string,validation,mode,name,set,validation,mode,constants,as,number,validation,mode,name,int,value
XmlBeanDefinitionReader -> public void setValidationModeName(String validationModeName);1467730834;Set the validation mode to use by name. Defaults to {@link #VALIDATION_AUTO}._@see #setValidationMode;public void setValidationModeName(String validationModeName) {_		setValidationMode(constants.asNumber(validationModeName).intValue())__	};set,the,validation,mode,to,use,by,name,defaults,to,link,see,set,validation,mode;public,void,set,validation,mode,name,string,validation,mode,name,set,validation,mode,constants,as,number,validation,mode,name,int,value
XmlBeanDefinitionReader -> public void setValidationModeName(String validationModeName);1495868221;Set the validation mode to use by name. Defaults to {@link #VALIDATION_AUTO}._@see #setValidationMode;public void setValidationModeName(String validationModeName) {_		setValidationMode(constants.asNumber(validationModeName).intValue())__	};set,the,validation,mode,to,use,by,name,defaults,to,link,see,set,validation,mode;public,void,set,validation,mode,name,string,validation,mode,name,set,validation,mode,constants,as,number,validation,mode,name,int,value
XmlBeanDefinitionReader -> public void setValidationModeName(String validationModeName);1496837955;Set the validation mode to use by name. Defaults to {@link #VALIDATION_AUTO}._@see #setValidationMode;public void setValidationModeName(String validationModeName) {_		setValidationMode(constants.asNumber(validationModeName).intValue())__	};set,the,validation,mode,to,use,by,name,defaults,to,link,see,set,validation,mode;public,void,set,validation,mode,name,string,validation,mode,name,set,validation,mode,constants,as,number,validation,mode,name,int,value
XmlBeanDefinitionReader -> public void setValidationModeName(String validationModeName);1498780456;Set the validation mode to use by name. Defaults to {@link #VALIDATION_AUTO}._@see #setValidationMode;public void setValidationModeName(String validationModeName) {_		setValidationMode(constants.asNumber(validationModeName).intValue())__	};set,the,validation,mode,to,use,by,name,defaults,to,link,see,set,validation,mode;public,void,set,validation,mode,name,string,validation,mode,name,set,validation,mode,constants,as,number,validation,mode,name,int,value
XmlBeanDefinitionReader -> public void setValidationModeName(String validationModeName);1530174524;Set the validation mode to use by name. Defaults to {@link #VALIDATION_AUTO}._@see #setValidationMode;public void setValidationModeName(String validationModeName) {_		setValidationMode(constants.asNumber(validationModeName).intValue())__	};set,the,validation,mode,to,use,by,name,defaults,to,link,see,set,validation,mode;public,void,set,validation,mode,name,string,validation,mode,name,set,validation,mode,constants,as,number,validation,mode,name,int,value
XmlBeanDefinitionReader -> public void setValidationModeName(String validationModeName);1532091916;Set the validation mode to use by name. Defaults to {@link #VALIDATION_AUTO}._@see #setValidationMode;public void setValidationModeName(String validationModeName) {_		setValidationMode(constants.asNumber(validationModeName).intValue())__	};set,the,validation,mode,to,use,by,name,defaults,to,link,see,set,validation,mode;public,void,set,validation,mode,name,string,validation,mode,name,set,validation,mode,constants,as,number,validation,mode,name,int,value
XmlBeanDefinitionReader -> public void setValidationModeName(String validationModeName);1532706365;Set the validation mode to use by name. Defaults to {@link #VALIDATION_AUTO}._@see #setValidationMode;public void setValidationModeName(String validationModeName) {_		setValidationMode(constants.asNumber(validationModeName).intValue())__	};set,the,validation,mode,to,use,by,name,defaults,to,link,see,set,validation,mode;public,void,set,validation,mode,name,string,validation,mode,name,set,validation,mode,constants,as,number,validation,mode,name,int,value
XmlBeanDefinitionReader -> public void setValidationModeName(String validationModeName);1532710698;Set the validation mode to use by name. Defaults to {@link #VALIDATION_AUTO}._@see #setValidationMode;public void setValidationModeName(String validationModeName) {_		setValidationMode(constants.asNumber(validationModeName).intValue())__	};set,the,validation,mode,to,use,by,name,defaults,to,link,see,set,validation,mode;public,void,set,validation,mode,name,string,validation,mode,name,set,validation,mode,constants,as,number,validation,mode,name,int,value
XmlBeanDefinitionReader -> public XmlReaderContext createReaderContext(Resource resource);1382030648;Create the {@link XmlReaderContext} to pass over to the document reader.;public XmlReaderContext createReaderContext(Resource resource) {_		return new XmlReaderContext(resource, this.problemReporter, this.eventListener,_				this.sourceExtractor, this, getNamespaceHandlerResolver())__	};create,the,link,xml,reader,context,to,pass,over,to,the,document,reader;public,xml,reader,context,create,reader,context,resource,resource,return,new,xml,reader,context,resource,this,problem,reporter,this,event,listener,this,source,extractor,this,get,namespace,handler,resolver
XmlBeanDefinitionReader -> public XmlReaderContext createReaderContext(Resource resource);1411599760;Create the {@link XmlReaderContext} to pass over to the document reader.;public XmlReaderContext createReaderContext(Resource resource) {_		return new XmlReaderContext(resource, this.problemReporter, this.eventListener,_				this.sourceExtractor, this, getNamespaceHandlerResolver())__	};create,the,link,xml,reader,context,to,pass,over,to,the,document,reader;public,xml,reader,context,create,reader,context,resource,resource,return,new,xml,reader,context,resource,this,problem,reporter,this,event,listener,this,source,extractor,this,get,namespace,handler,resolver
XmlBeanDefinitionReader -> public XmlReaderContext createReaderContext(Resource resource);1419966315;Create the {@link XmlReaderContext} to pass over to the document reader.;public XmlReaderContext createReaderContext(Resource resource) {_		return new XmlReaderContext(resource, this.problemReporter, this.eventListener,_				this.sourceExtractor, this, getNamespaceHandlerResolver())__	};create,the,link,xml,reader,context,to,pass,over,to,the,document,reader;public,xml,reader,context,create,reader,context,resource,resource,return,new,xml,reader,context,resource,this,problem,reporter,this,event,listener,this,source,extractor,this,get,namespace,handler,resolver
XmlBeanDefinitionReader -> public XmlReaderContext createReaderContext(Resource resource);1467730834;Create the {@link XmlReaderContext} to pass over to the document reader.;public XmlReaderContext createReaderContext(Resource resource) {_		return new XmlReaderContext(resource, this.problemReporter, this.eventListener,_				this.sourceExtractor, this, getNamespaceHandlerResolver())__	};create,the,link,xml,reader,context,to,pass,over,to,the,document,reader;public,xml,reader,context,create,reader,context,resource,resource,return,new,xml,reader,context,resource,this,problem,reporter,this,event,listener,this,source,extractor,this,get,namespace,handler,resolver
XmlBeanDefinitionReader -> public XmlReaderContext createReaderContext(Resource resource);1495868221;Create the {@link XmlReaderContext} to pass over to the document reader.;public XmlReaderContext createReaderContext(Resource resource) {_		return new XmlReaderContext(resource, this.problemReporter, this.eventListener,_				this.sourceExtractor, this, getNamespaceHandlerResolver())__	};create,the,link,xml,reader,context,to,pass,over,to,the,document,reader;public,xml,reader,context,create,reader,context,resource,resource,return,new,xml,reader,context,resource,this,problem,reporter,this,event,listener,this,source,extractor,this,get,namespace,handler,resolver
XmlBeanDefinitionReader -> public XmlReaderContext createReaderContext(Resource resource);1496837955;Create the {@link XmlReaderContext} to pass over to the document reader.;public XmlReaderContext createReaderContext(Resource resource) {_		return new XmlReaderContext(resource, this.problemReporter, this.eventListener,_				this.sourceExtractor, this, getNamespaceHandlerResolver())__	};create,the,link,xml,reader,context,to,pass,over,to,the,document,reader;public,xml,reader,context,create,reader,context,resource,resource,return,new,xml,reader,context,resource,this,problem,reporter,this,event,listener,this,source,extractor,this,get,namespace,handler,resolver
XmlBeanDefinitionReader -> public XmlReaderContext createReaderContext(Resource resource);1498780456;Create the {@link XmlReaderContext} to pass over to the document reader.;public XmlReaderContext createReaderContext(Resource resource) {_		return new XmlReaderContext(resource, this.problemReporter, this.eventListener,_				this.sourceExtractor, this, getNamespaceHandlerResolver())__	};create,the,link,xml,reader,context,to,pass,over,to,the,document,reader;public,xml,reader,context,create,reader,context,resource,resource,return,new,xml,reader,context,resource,this,problem,reporter,this,event,listener,this,source,extractor,this,get,namespace,handler,resolver
XmlBeanDefinitionReader -> public XmlReaderContext createReaderContext(Resource resource);1530174524;Create the {@link XmlReaderContext} to pass over to the document reader.;public XmlReaderContext createReaderContext(Resource resource) {_		return new XmlReaderContext(resource, this.problemReporter, this.eventListener,_				this.sourceExtractor, this, getNamespaceHandlerResolver())__	};create,the,link,xml,reader,context,to,pass,over,to,the,document,reader;public,xml,reader,context,create,reader,context,resource,resource,return,new,xml,reader,context,resource,this,problem,reporter,this,event,listener,this,source,extractor,this,get,namespace,handler,resolver
XmlBeanDefinitionReader -> public XmlReaderContext createReaderContext(Resource resource);1532091916;Create the {@link XmlReaderContext} to pass over to the document reader.;public XmlReaderContext createReaderContext(Resource resource) {_		return new XmlReaderContext(resource, this.problemReporter, this.eventListener,_				this.sourceExtractor, this, getNamespaceHandlerResolver())__	};create,the,link,xml,reader,context,to,pass,over,to,the,document,reader;public,xml,reader,context,create,reader,context,resource,resource,return,new,xml,reader,context,resource,this,problem,reporter,this,event,listener,this,source,extractor,this,get,namespace,handler,resolver
XmlBeanDefinitionReader -> public XmlReaderContext createReaderContext(Resource resource);1532706365;Create the {@link XmlReaderContext} to pass over to the document reader.;public XmlReaderContext createReaderContext(Resource resource) {_		return new XmlReaderContext(resource, this.problemReporter, this.eventListener,_				this.sourceExtractor, this, getNamespaceHandlerResolver())__	};create,the,link,xml,reader,context,to,pass,over,to,the,document,reader;public,xml,reader,context,create,reader,context,resource,resource,return,new,xml,reader,context,resource,this,problem,reporter,this,event,listener,this,source,extractor,this,get,namespace,handler,resolver
XmlBeanDefinitionReader -> public XmlReaderContext createReaderContext(Resource resource);1532710698;Create the {@link XmlReaderContext} to pass over to the document reader.;public XmlReaderContext createReaderContext(Resource resource) {_		return new XmlReaderContext(resource, this.problemReporter, this.eventListener,_				this.sourceExtractor, this, getNamespaceHandlerResolver())__	};create,the,link,xml,reader,context,to,pass,over,to,the,document,reader;public,xml,reader,context,create,reader,context,resource,resource,return,new,xml,reader,context,resource,this,problem,reporter,this,event,listener,this,source,extractor,this,get,namespace,handler,resolver
XmlBeanDefinitionReader -> public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException;1328020251;Load bean definitions from the specified XML file._@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(new EncodedResource(resource))__	};load,bean,definitions,from,the,specified,xml,file,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,resource,resource,throws,bean,definition,store,exception,return,load,bean,definitions,new,encoded,resource,resource
XmlBeanDefinitionReader -> public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException;1357119239;Load bean definitions from the specified XML file._@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(new EncodedResource(resource))__	};load,bean,definitions,from,the,specified,xml,file,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,resource,resource,throws,bean,definition,store,exception,return,load,bean,definitions,new,encoded,resource,resource
XmlBeanDefinitionReader -> public void setValidating(boolean validating);1328020251;Set whether to use XML validation. Default is <code>true</code>._<p>This method switches namespace awareness on if validation is turned off,_in order to still process schema namespaces properly in such a scenario._@see #setValidationMode_@see #setNamespaceAware;public void setValidating(boolean validating) {_		this.validationMode = (validating ? VALIDATION_AUTO : VALIDATION_NONE)__		this.namespaceAware = !validating__	};set,whether,to,use,xml,validation,default,is,code,true,code,p,this,method,switches,namespace,awareness,on,if,validation,is,turned,off,in,order,to,still,process,schema,namespaces,properly,in,such,a,scenario,see,set,validation,mode,see,set,namespace,aware;public,void,set,validating,boolean,validating,this,validation,mode,validating,this,namespace,aware,validating
XmlBeanDefinitionReader -> public void setValidating(boolean validating);1356735495;Set whether to use XML validation. Default is {@code true}._<p>This method switches namespace awareness on if validation is turned off,_in order to still process schema namespaces properly in such a scenario._@see #setValidationMode_@see #setNamespaceAware;public void setValidating(boolean validating) {_		this.validationMode = (validating ? VALIDATION_AUTO : VALIDATION_NONE)__		this.namespaceAware = !validating__	};set,whether,to,use,xml,validation,default,is,code,true,p,this,method,switches,namespace,awareness,on,if,validation,is,turned,off,in,order,to,still,process,schema,namespaces,properly,in,such,a,scenario,see,set,validation,mode,see,set,namespace,aware;public,void,set,validating,boolean,validating,this,validation,mode,validating,this,namespace,aware,validating
XmlBeanDefinitionReader -> public void setValidating(boolean validating);1357119239;Set whether to use XML validation. Default is {@code true}._<p>This method switches namespace awareness on if validation is turned off,_in order to still process schema namespaces properly in such a scenario._@see #setValidationMode_@see #setNamespaceAware;public void setValidating(boolean validating) {_		this.validationMode = (validating ? VALIDATION_AUTO : VALIDATION_NONE)__		this.namespaceAware = !validating__	};set,whether,to,use,xml,validation,default,is,code,true,p,this,method,switches,namespace,awareness,on,if,validation,is,turned,off,in,order,to,still,process,schema,namespaces,properly,in,such,a,scenario,see,set,validation,mode,see,set,namespace,aware;public,void,set,validating,boolean,validating,this,validation,mode,validating,this,namespace,aware,validating
XmlBeanDefinitionReader -> public void setValidating(boolean validating);1368482696;Set whether to use XML validation. Default is {@code true}._<p>This method switches namespace awareness on if validation is turned off,_in order to still process schema namespaces properly in such a scenario._@see #setValidationMode_@see #setNamespaceAware;public void setValidating(boolean validating) {_		this.validationMode = (validating ? VALIDATION_AUTO : VALIDATION_NONE)__		this.namespaceAware = !validating__	};set,whether,to,use,xml,validation,default,is,code,true,p,this,method,switches,namespace,awareness,on,if,validation,is,turned,off,in,order,to,still,process,schema,namespaces,properly,in,such,a,scenario,see,set,validation,mode,see,set,namespace,aware;public,void,set,validating,boolean,validating,this,validation,mode,validating,this,namespace,aware,validating
XmlBeanDefinitionReader -> public void setValidating(boolean validating);1382030648;Set whether to use XML validation. Default is {@code true}._<p>This method switches namespace awareness on if validation is turned off,_in order to still process schema namespaces properly in such a scenario._@see #setValidationMode_@see #setNamespaceAware;public void setValidating(boolean validating) {_		this.validationMode = (validating ? VALIDATION_AUTO : VALIDATION_NONE)__		this.namespaceAware = !validating__	};set,whether,to,use,xml,validation,default,is,code,true,p,this,method,switches,namespace,awareness,on,if,validation,is,turned,off,in,order,to,still,process,schema,namespaces,properly,in,such,a,scenario,see,set,validation,mode,see,set,namespace,aware;public,void,set,validating,boolean,validating,this,validation,mode,validating,this,namespace,aware,validating
XmlBeanDefinitionReader -> public void setValidating(boolean validating);1411599760;Set whether to use XML validation. Default is {@code true}._<p>This method switches namespace awareness on if validation is turned off,_in order to still process schema namespaces properly in such a scenario._@see #setValidationMode_@see #setNamespaceAware;public void setValidating(boolean validating) {_		this.validationMode = (validating ? VALIDATION_AUTO : VALIDATION_NONE)__		this.namespaceAware = !validating__	};set,whether,to,use,xml,validation,default,is,code,true,p,this,method,switches,namespace,awareness,on,if,validation,is,turned,off,in,order,to,still,process,schema,namespaces,properly,in,such,a,scenario,see,set,validation,mode,see,set,namespace,aware;public,void,set,validating,boolean,validating,this,validation,mode,validating,this,namespace,aware,validating
XmlBeanDefinitionReader -> public void setValidating(boolean validating);1419966315;Set whether to use XML validation. Default is {@code true}._<p>This method switches namespace awareness on if validation is turned off,_in order to still process schema namespaces properly in such a scenario._@see #setValidationMode_@see #setNamespaceAware;public void setValidating(boolean validating) {_		this.validationMode = (validating ? VALIDATION_AUTO : VALIDATION_NONE)__		this.namespaceAware = !validating__	};set,whether,to,use,xml,validation,default,is,code,true,p,this,method,switches,namespace,awareness,on,if,validation,is,turned,off,in,order,to,still,process,schema,namespaces,properly,in,such,a,scenario,see,set,validation,mode,see,set,namespace,aware;public,void,set,validating,boolean,validating,this,validation,mode,validating,this,namespace,aware,validating
XmlBeanDefinitionReader -> public void setValidating(boolean validating);1467730834;Set whether to use XML validation. Default is {@code true}._<p>This method switches namespace awareness on if validation is turned off,_in order to still process schema namespaces properly in such a scenario._@see #setValidationMode_@see #setNamespaceAware;public void setValidating(boolean validating) {_		this.validationMode = (validating ? VALIDATION_AUTO : VALIDATION_NONE)__		this.namespaceAware = !validating__	};set,whether,to,use,xml,validation,default,is,code,true,p,this,method,switches,namespace,awareness,on,if,validation,is,turned,off,in,order,to,still,process,schema,namespaces,properly,in,such,a,scenario,see,set,validation,mode,see,set,namespace,aware;public,void,set,validating,boolean,validating,this,validation,mode,validating,this,namespace,aware,validating
XmlBeanDefinitionReader -> public void setValidating(boolean validating);1495868221;Set whether to use XML validation. Default is {@code true}._<p>This method switches namespace awareness on if validation is turned off,_in order to still process schema namespaces properly in such a scenario._@see #setValidationMode_@see #setNamespaceAware;public void setValidating(boolean validating) {_		this.validationMode = (validating ? VALIDATION_AUTO : VALIDATION_NONE)__		this.namespaceAware = !validating__	};set,whether,to,use,xml,validation,default,is,code,true,p,this,method,switches,namespace,awareness,on,if,validation,is,turned,off,in,order,to,still,process,schema,namespaces,properly,in,such,a,scenario,see,set,validation,mode,see,set,namespace,aware;public,void,set,validating,boolean,validating,this,validation,mode,validating,this,namespace,aware,validating
XmlBeanDefinitionReader -> public void setValidating(boolean validating);1496837955;Set whether to use XML validation. Default is {@code true}._<p>This method switches namespace awareness on if validation is turned off,_in order to still process schema namespaces properly in such a scenario._@see #setValidationMode_@see #setNamespaceAware;public void setValidating(boolean validating) {_		this.validationMode = (validating ? VALIDATION_AUTO : VALIDATION_NONE)__		this.namespaceAware = !validating__	};set,whether,to,use,xml,validation,default,is,code,true,p,this,method,switches,namespace,awareness,on,if,validation,is,turned,off,in,order,to,still,process,schema,namespaces,properly,in,such,a,scenario,see,set,validation,mode,see,set,namespace,aware;public,void,set,validating,boolean,validating,this,validation,mode,validating,this,namespace,aware,validating
XmlBeanDefinitionReader -> public void setValidating(boolean validating);1498780456;Set whether to use XML validation. Default is {@code true}._<p>This method switches namespace awareness on if validation is turned off,_in order to still process schema namespaces properly in such a scenario._@see #setValidationMode_@see #setNamespaceAware;public void setValidating(boolean validating) {_		this.validationMode = (validating ? VALIDATION_AUTO : VALIDATION_NONE)__		this.namespaceAware = !validating__	};set,whether,to,use,xml,validation,default,is,code,true,p,this,method,switches,namespace,awareness,on,if,validation,is,turned,off,in,order,to,still,process,schema,namespaces,properly,in,such,a,scenario,see,set,validation,mode,see,set,namespace,aware;public,void,set,validating,boolean,validating,this,validation,mode,validating,this,namespace,aware,validating
XmlBeanDefinitionReader -> public void setValidating(boolean validating);1530174524;Set whether to use XML validation. Default is {@code true}._<p>This method switches namespace awareness on if validation is turned off,_in order to still process schema namespaces properly in such a scenario._@see #setValidationMode_@see #setNamespaceAware;public void setValidating(boolean validating) {_		this.validationMode = (validating ? VALIDATION_AUTO : VALIDATION_NONE)__		this.namespaceAware = !validating__	};set,whether,to,use,xml,validation,default,is,code,true,p,this,method,switches,namespace,awareness,on,if,validation,is,turned,off,in,order,to,still,process,schema,namespaces,properly,in,such,a,scenario,see,set,validation,mode,see,set,namespace,aware;public,void,set,validating,boolean,validating,this,validation,mode,validating,this,namespace,aware,validating
XmlBeanDefinitionReader -> public void setValidating(boolean validating);1532091916;Set whether to use XML validation. Default is {@code true}._<p>This method switches namespace awareness on if validation is turned off,_in order to still process schema namespaces properly in such a scenario._@see #setValidationMode_@see #setNamespaceAware;public void setValidating(boolean validating) {_		this.validationMode = (validating ? VALIDATION_AUTO : VALIDATION_NONE)__		this.namespaceAware = !validating__	};set,whether,to,use,xml,validation,default,is,code,true,p,this,method,switches,namespace,awareness,on,if,validation,is,turned,off,in,order,to,still,process,schema,namespaces,properly,in,such,a,scenario,see,set,validation,mode,see,set,namespace,aware;public,void,set,validating,boolean,validating,this,validation,mode,validating,this,namespace,aware,validating
XmlBeanDefinitionReader -> public void setValidating(boolean validating);1532706365;Set whether to use XML validation. Default is {@code true}._<p>This method switches namespace awareness on if validation is turned off,_in order to still process schema namespaces properly in such a scenario._@see #setValidationMode_@see #setNamespaceAware;public void setValidating(boolean validating) {_		this.validationMode = (validating ? VALIDATION_AUTO : VALIDATION_NONE)__		this.namespaceAware = !validating__	};set,whether,to,use,xml,validation,default,is,code,true,p,this,method,switches,namespace,awareness,on,if,validation,is,turned,off,in,order,to,still,process,schema,namespaces,properly,in,such,a,scenario,see,set,validation,mode,see,set,namespace,aware;public,void,set,validating,boolean,validating,this,validation,mode,validating,this,namespace,aware,validating
XmlBeanDefinitionReader -> public void setValidating(boolean validating);1532710698;Set whether to use XML validation. Default is {@code true}._<p>This method switches namespace awareness on if validation is turned off,_in order to still process schema namespaces properly in such a scenario._@see #setValidationMode_@see #setNamespaceAware;public void setValidating(boolean validating) {_		this.validationMode = (validating ? VALIDATION_AUTO : VALIDATION_NONE)__		this.namespaceAware = !validating__	};set,whether,to,use,xml,validation,default,is,code,true,p,this,method,switches,namespace,awareness,on,if,validation,is,turned,off,in,order,to,still,process,schema,namespaces,properly,in,such,a,scenario,see,set,validation,mode,see,set,namespace,aware;public,void,set,validating,boolean,validating,this,validation,mode,validating,this,namespace,aware,validating
XmlBeanDefinitionReader -> public void setProblemReporter(ProblemReporter problemReporter);1328020251;Specify which {@link org.springframework.beans.factory.parsing.ProblemReporter} to use._<p>The default implementation is {@link org.springframework.beans.factory.parsing.FailFastProblemReporter}_which exhibits fail fast behaviour. External tools can provide an alternative implementation_that collates errors and warnings for display in the tool UI.;public void setProblemReporter(ProblemReporter problemReporter) {_		this.problemReporter = (problemReporter != null ? problemReporter : new FailFastProblemReporter())__	};specify,which,link,org,springframework,beans,factory,parsing,problem,reporter,to,use,p,the,default,implementation,is,link,org,springframework,beans,factory,parsing,fail,fast,problem,reporter,which,exhibits,fail,fast,behaviour,external,tools,can,provide,an,alternative,implementation,that,collates,errors,and,warnings,for,display,in,the,tool,ui;public,void,set,problem,reporter,problem,reporter,problem,reporter,this,problem,reporter,problem,reporter,null,problem,reporter,new,fail,fast,problem,reporter
XmlBeanDefinitionReader -> public void setProblemReporter(ProblemReporter problemReporter);1356735495;Specify which {@link org.springframework.beans.factory.parsing.ProblemReporter} to use._<p>The default implementation is {@link org.springframework.beans.factory.parsing.FailFastProblemReporter}_which exhibits fail fast behaviour. External tools can provide an alternative implementation_that collates errors and warnings for display in the tool UI.;public void setProblemReporter(ProblemReporter problemReporter) {_		this.problemReporter = (problemReporter != null ? problemReporter : new FailFastProblemReporter())__	};specify,which,link,org,springframework,beans,factory,parsing,problem,reporter,to,use,p,the,default,implementation,is,link,org,springframework,beans,factory,parsing,fail,fast,problem,reporter,which,exhibits,fail,fast,behaviour,external,tools,can,provide,an,alternative,implementation,that,collates,errors,and,warnings,for,display,in,the,tool,ui;public,void,set,problem,reporter,problem,reporter,problem,reporter,this,problem,reporter,problem,reporter,null,problem,reporter,new,fail,fast,problem,reporter
XmlBeanDefinitionReader -> public void setProblemReporter(ProblemReporter problemReporter);1357119239;Specify which {@link org.springframework.beans.factory.parsing.ProblemReporter} to use._<p>The default implementation is {@link org.springframework.beans.factory.parsing.FailFastProblemReporter}_which exhibits fail fast behaviour. External tools can provide an alternative implementation_that collates errors and warnings for display in the tool UI.;public void setProblemReporter(ProblemReporter problemReporter) {_		this.problemReporter = (problemReporter != null ? problemReporter : new FailFastProblemReporter())__	};specify,which,link,org,springframework,beans,factory,parsing,problem,reporter,to,use,p,the,default,implementation,is,link,org,springframework,beans,factory,parsing,fail,fast,problem,reporter,which,exhibits,fail,fast,behaviour,external,tools,can,provide,an,alternative,implementation,that,collates,errors,and,warnings,for,display,in,the,tool,ui;public,void,set,problem,reporter,problem,reporter,problem,reporter,this,problem,reporter,problem,reporter,null,problem,reporter,new,fail,fast,problem,reporter
XmlBeanDefinitionReader -> public void setProblemReporter(ProblemReporter problemReporter);1368482696;Specify which {@link org.springframework.beans.factory.parsing.ProblemReporter} to use._<p>The default implementation is {@link org.springframework.beans.factory.parsing.FailFastProblemReporter}_which exhibits fail fast behaviour. External tools can provide an alternative implementation_that collates errors and warnings for display in the tool UI.;public void setProblemReporter(ProblemReporter problemReporter) {_		this.problemReporter = (problemReporter != null ? problemReporter : new FailFastProblemReporter())__	};specify,which,link,org,springframework,beans,factory,parsing,problem,reporter,to,use,p,the,default,implementation,is,link,org,springframework,beans,factory,parsing,fail,fast,problem,reporter,which,exhibits,fail,fast,behaviour,external,tools,can,provide,an,alternative,implementation,that,collates,errors,and,warnings,for,display,in,the,tool,ui;public,void,set,problem,reporter,problem,reporter,problem,reporter,this,problem,reporter,problem,reporter,null,problem,reporter,new,fail,fast,problem,reporter
XmlBeanDefinitionReader -> public void setProblemReporter(ProblemReporter problemReporter);1382030648;Specify which {@link org.springframework.beans.factory.parsing.ProblemReporter} to use._<p>The default implementation is {@link org.springframework.beans.factory.parsing.FailFastProblemReporter}_which exhibits fail fast behaviour. External tools can provide an alternative implementation_that collates errors and warnings for display in the tool UI.;public void setProblemReporter(ProblemReporter problemReporter) {_		this.problemReporter = (problemReporter != null ? problemReporter : new FailFastProblemReporter())__	};specify,which,link,org,springframework,beans,factory,parsing,problem,reporter,to,use,p,the,default,implementation,is,link,org,springframework,beans,factory,parsing,fail,fast,problem,reporter,which,exhibits,fail,fast,behaviour,external,tools,can,provide,an,alternative,implementation,that,collates,errors,and,warnings,for,display,in,the,tool,ui;public,void,set,problem,reporter,problem,reporter,problem,reporter,this,problem,reporter,problem,reporter,null,problem,reporter,new,fail,fast,problem,reporter
XmlBeanDefinitionReader -> public void setProblemReporter(ProblemReporter problemReporter);1411599760;Specify which {@link org.springframework.beans.factory.parsing.ProblemReporter} to use._<p>The default implementation is {@link org.springframework.beans.factory.parsing.FailFastProblemReporter}_which exhibits fail fast behaviour. External tools can provide an alternative implementation_that collates errors and warnings for display in the tool UI.;public void setProblemReporter(ProblemReporter problemReporter) {_		this.problemReporter = (problemReporter != null ? problemReporter : new FailFastProblemReporter())__	};specify,which,link,org,springframework,beans,factory,parsing,problem,reporter,to,use,p,the,default,implementation,is,link,org,springframework,beans,factory,parsing,fail,fast,problem,reporter,which,exhibits,fail,fast,behaviour,external,tools,can,provide,an,alternative,implementation,that,collates,errors,and,warnings,for,display,in,the,tool,ui;public,void,set,problem,reporter,problem,reporter,problem,reporter,this,problem,reporter,problem,reporter,null,problem,reporter,new,fail,fast,problem,reporter
XmlBeanDefinitionReader -> public void setProblemReporter(ProblemReporter problemReporter);1419966315;Specify which {@link org.springframework.beans.factory.parsing.ProblemReporter} to use._<p>The default implementation is {@link org.springframework.beans.factory.parsing.FailFastProblemReporter}_which exhibits fail fast behaviour. External tools can provide an alternative implementation_that collates errors and warnings for display in the tool UI.;public void setProblemReporter(ProblemReporter problemReporter) {_		this.problemReporter = (problemReporter != null ? problemReporter : new FailFastProblemReporter())__	};specify,which,link,org,springframework,beans,factory,parsing,problem,reporter,to,use,p,the,default,implementation,is,link,org,springframework,beans,factory,parsing,fail,fast,problem,reporter,which,exhibits,fail,fast,behaviour,external,tools,can,provide,an,alternative,implementation,that,collates,errors,and,warnings,for,display,in,the,tool,ui;public,void,set,problem,reporter,problem,reporter,problem,reporter,this,problem,reporter,problem,reporter,null,problem,reporter,new,fail,fast,problem,reporter
XmlBeanDefinitionReader -> public void setProblemReporter(ProblemReporter problemReporter);1467730834;Specify which {@link org.springframework.beans.factory.parsing.ProblemReporter} to use._<p>The default implementation is {@link org.springframework.beans.factory.parsing.FailFastProblemReporter}_which exhibits fail fast behaviour. External tools can provide an alternative implementation_that collates errors and warnings for display in the tool UI.;public void setProblemReporter(ProblemReporter problemReporter) {_		this.problemReporter = (problemReporter != null ? problemReporter : new FailFastProblemReporter())__	};specify,which,link,org,springframework,beans,factory,parsing,problem,reporter,to,use,p,the,default,implementation,is,link,org,springframework,beans,factory,parsing,fail,fast,problem,reporter,which,exhibits,fail,fast,behaviour,external,tools,can,provide,an,alternative,implementation,that,collates,errors,and,warnings,for,display,in,the,tool,ui;public,void,set,problem,reporter,problem,reporter,problem,reporter,this,problem,reporter,problem,reporter,null,problem,reporter,new,fail,fast,problem,reporter
XmlBeanDefinitionReader -> public void setProblemReporter(ProblemReporter problemReporter);1495868221;Specify which {@link org.springframework.beans.factory.parsing.ProblemReporter} to use._<p>The default implementation is {@link org.springframework.beans.factory.parsing.FailFastProblemReporter}_which exhibits fail fast behaviour. External tools can provide an alternative implementation_that collates errors and warnings for display in the tool UI.;public void setProblemReporter(ProblemReporter problemReporter) {_		this.problemReporter = (problemReporter != null ? problemReporter : new FailFastProblemReporter())__	};specify,which,link,org,springframework,beans,factory,parsing,problem,reporter,to,use,p,the,default,implementation,is,link,org,springframework,beans,factory,parsing,fail,fast,problem,reporter,which,exhibits,fail,fast,behaviour,external,tools,can,provide,an,alternative,implementation,that,collates,errors,and,warnings,for,display,in,the,tool,ui;public,void,set,problem,reporter,problem,reporter,problem,reporter,this,problem,reporter,problem,reporter,null,problem,reporter,new,fail,fast,problem,reporter
XmlBeanDefinitionReader -> protected int detectValidationMode(Resource resource);1328020251;Detects which kind of validation to perform on the XML file identified_by the supplied {@link Resource}. If the file has a <code>DOCTYPE</code>_definition then DTD validation is used otherwise XSD validation is assumed._<p>Override this method if you would like to customize resolution_of the {@link #VALIDATION_AUTO} mode.;protected int detectValidationMode(Resource resource) {_		if (resource.isOpen()) {_			throw new BeanDefinitionStoreException(_					"Passed-in Resource [" + resource + "] contains an open stream: " +_					"cannot determine validation mode automatically. Either pass in a Resource " +_					"that is able to create fresh streams, or explicitly specify the validationMode " +_					"on your XmlBeanDefinitionReader instance.")__		}__		InputStream inputStream__		try {_			inputStream = resource.getInputStream()__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"Unable to determine validation mode for [" + resource + "]: cannot open InputStream. " +_					"Did you attempt to load directly from a SAX InputSource without specifying the " +_					"validationMode on your XmlBeanDefinitionReader instance?", ex)__		}__		try {_			return this.validationModeDetector.detectValidationMode(inputStream)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException("Unable to determine validation mode for [" +_					resource + "]: an error occurred whilst reading from the InputStream.", ex)__		}_	};detects,which,kind,of,validation,to,perform,on,the,xml,file,identified,by,the,supplied,link,resource,if,the,file,has,a,code,doctype,code,definition,then,dtd,validation,is,used,otherwise,xsd,validation,is,assumed,p,override,this,method,if,you,would,like,to,customize,resolution,of,the,link,mode;protected,int,detect,validation,mode,resource,resource,if,resource,is,open,throw,new,bean,definition,store,exception,passed,in,resource,resource,contains,an,open,stream,cannot,determine,validation,mode,automatically,either,pass,in,a,resource,that,is,able,to,create,fresh,streams,or,explicitly,specify,the,validation,mode,on,your,xml,bean,definition,reader,instance,input,stream,input,stream,try,input,stream,resource,get,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,cannot,open,input,stream,did,you,attempt,to,load,directly,from,a,sax,input,source,without,specifying,the,validation,mode,on,your,xml,bean,definition,reader,instance,ex,try,return,this,validation,mode,detector,detect,validation,mode,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,an,error,occurred,whilst,reading,from,the,input,stream,ex
XmlBeanDefinitionReader -> protected int detectValidationMode(Resource resource);1356735495;Detects which kind of validation to perform on the XML file identified_by the supplied {@link Resource}. If the file has a {@code DOCTYPE}_definition then DTD validation is used otherwise XSD validation is assumed._<p>Override this method if you would like to customize resolution_of the {@link #VALIDATION_AUTO} mode.;protected int detectValidationMode(Resource resource) {_		if (resource.isOpen()) {_			throw new BeanDefinitionStoreException(_					"Passed-in Resource [" + resource + "] contains an open stream: " +_					"cannot determine validation mode automatically. Either pass in a Resource " +_					"that is able to create fresh streams, or explicitly specify the validationMode " +_					"on your XmlBeanDefinitionReader instance.")__		}__		InputStream inputStream__		try {_			inputStream = resource.getInputStream()__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"Unable to determine validation mode for [" + resource + "]: cannot open InputStream. " +_					"Did you attempt to load directly from a SAX InputSource without specifying the " +_					"validationMode on your XmlBeanDefinitionReader instance?", ex)__		}__		try {_			return this.validationModeDetector.detectValidationMode(inputStream)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException("Unable to determine validation mode for [" +_					resource + "]: an error occurred whilst reading from the InputStream.", ex)__		}_	};detects,which,kind,of,validation,to,perform,on,the,xml,file,identified,by,the,supplied,link,resource,if,the,file,has,a,code,doctype,definition,then,dtd,validation,is,used,otherwise,xsd,validation,is,assumed,p,override,this,method,if,you,would,like,to,customize,resolution,of,the,link,mode;protected,int,detect,validation,mode,resource,resource,if,resource,is,open,throw,new,bean,definition,store,exception,passed,in,resource,resource,contains,an,open,stream,cannot,determine,validation,mode,automatically,either,pass,in,a,resource,that,is,able,to,create,fresh,streams,or,explicitly,specify,the,validation,mode,on,your,xml,bean,definition,reader,instance,input,stream,input,stream,try,input,stream,resource,get,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,cannot,open,input,stream,did,you,attempt,to,load,directly,from,a,sax,input,source,without,specifying,the,validation,mode,on,your,xml,bean,definition,reader,instance,ex,try,return,this,validation,mode,detector,detect,validation,mode,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,an,error,occurred,whilst,reading,from,the,input,stream,ex
XmlBeanDefinitionReader -> protected int detectValidationMode(Resource resource);1357119239;Detects which kind of validation to perform on the XML file identified_by the supplied {@link Resource}. If the file has a {@code DOCTYPE}_definition then DTD validation is used otherwise XSD validation is assumed._<p>Override this method if you would like to customize resolution_of the {@link #VALIDATION_AUTO} mode.;protected int detectValidationMode(Resource resource) {_		if (resource.isOpen()) {_			throw new BeanDefinitionStoreException(_					"Passed-in Resource [" + resource + "] contains an open stream: " +_					"cannot determine validation mode automatically. Either pass in a Resource " +_					"that is able to create fresh streams, or explicitly specify the validationMode " +_					"on your XmlBeanDefinitionReader instance.")__		}__		InputStream inputStream__		try {_			inputStream = resource.getInputStream()__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"Unable to determine validation mode for [" + resource + "]: cannot open InputStream. " +_					"Did you attempt to load directly from a SAX InputSource without specifying the " +_					"validationMode on your XmlBeanDefinitionReader instance?", ex)__		}__		try {_			return this.validationModeDetector.detectValidationMode(inputStream)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException("Unable to determine validation mode for [" +_					resource + "]: an error occurred whilst reading from the InputStream.", ex)__		}_	};detects,which,kind,of,validation,to,perform,on,the,xml,file,identified,by,the,supplied,link,resource,if,the,file,has,a,code,doctype,definition,then,dtd,validation,is,used,otherwise,xsd,validation,is,assumed,p,override,this,method,if,you,would,like,to,customize,resolution,of,the,link,mode;protected,int,detect,validation,mode,resource,resource,if,resource,is,open,throw,new,bean,definition,store,exception,passed,in,resource,resource,contains,an,open,stream,cannot,determine,validation,mode,automatically,either,pass,in,a,resource,that,is,able,to,create,fresh,streams,or,explicitly,specify,the,validation,mode,on,your,xml,bean,definition,reader,instance,input,stream,input,stream,try,input,stream,resource,get,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,cannot,open,input,stream,did,you,attempt,to,load,directly,from,a,sax,input,source,without,specifying,the,validation,mode,on,your,xml,bean,definition,reader,instance,ex,try,return,this,validation,mode,detector,detect,validation,mode,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,an,error,occurred,whilst,reading,from,the,input,stream,ex
XmlBeanDefinitionReader -> protected int detectValidationMode(Resource resource);1368482696;Detects which kind of validation to perform on the XML file identified_by the supplied {@link Resource}. If the file has a {@code DOCTYPE}_definition then DTD validation is used otherwise XSD validation is assumed._<p>Override this method if you would like to customize resolution_of the {@link #VALIDATION_AUTO} mode.;protected int detectValidationMode(Resource resource) {_		if (resource.isOpen()) {_			throw new BeanDefinitionStoreException(_					"Passed-in Resource [" + resource + "] contains an open stream: " +_					"cannot determine validation mode automatically. Either pass in a Resource " +_					"that is able to create fresh streams, or explicitly specify the validationMode " +_					"on your XmlBeanDefinitionReader instance.")__		}__		InputStream inputStream__		try {_			inputStream = resource.getInputStream()__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"Unable to determine validation mode for [" + resource + "]: cannot open InputStream. " +_					"Did you attempt to load directly from a SAX InputSource without specifying the " +_					"validationMode on your XmlBeanDefinitionReader instance?", ex)__		}__		try {_			return this.validationModeDetector.detectValidationMode(inputStream)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException("Unable to determine validation mode for [" +_					resource + "]: an error occurred whilst reading from the InputStream.", ex)__		}_	};detects,which,kind,of,validation,to,perform,on,the,xml,file,identified,by,the,supplied,link,resource,if,the,file,has,a,code,doctype,definition,then,dtd,validation,is,used,otherwise,xsd,validation,is,assumed,p,override,this,method,if,you,would,like,to,customize,resolution,of,the,link,mode;protected,int,detect,validation,mode,resource,resource,if,resource,is,open,throw,new,bean,definition,store,exception,passed,in,resource,resource,contains,an,open,stream,cannot,determine,validation,mode,automatically,either,pass,in,a,resource,that,is,able,to,create,fresh,streams,or,explicitly,specify,the,validation,mode,on,your,xml,bean,definition,reader,instance,input,stream,input,stream,try,input,stream,resource,get,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,cannot,open,input,stream,did,you,attempt,to,load,directly,from,a,sax,input,source,without,specifying,the,validation,mode,on,your,xml,bean,definition,reader,instance,ex,try,return,this,validation,mode,detector,detect,validation,mode,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,an,error,occurred,whilst,reading,from,the,input,stream,ex
XmlBeanDefinitionReader -> protected int detectValidationMode(Resource resource);1382030648;Detects which kind of validation to perform on the XML file identified_by the supplied {@link Resource}. If the file has a {@code DOCTYPE}_definition then DTD validation is used otherwise XSD validation is assumed._<p>Override this method if you would like to customize resolution_of the {@link #VALIDATION_AUTO} mode.;protected int detectValidationMode(Resource resource) {_		if (resource.isOpen()) {_			throw new BeanDefinitionStoreException(_					"Passed-in Resource [" + resource + "] contains an open stream: " +_					"cannot determine validation mode automatically. Either pass in a Resource " +_					"that is able to create fresh streams, or explicitly specify the validationMode " +_					"on your XmlBeanDefinitionReader instance.")__		}__		InputStream inputStream__		try {_			inputStream = resource.getInputStream()__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"Unable to determine validation mode for [" + resource + "]: cannot open InputStream. " +_					"Did you attempt to load directly from a SAX InputSource without specifying the " +_					"validationMode on your XmlBeanDefinitionReader instance?", ex)__		}__		try {_			return this.validationModeDetector.detectValidationMode(inputStream)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException("Unable to determine validation mode for [" +_					resource + "]: an error occurred whilst reading from the InputStream.", ex)__		}_	};detects,which,kind,of,validation,to,perform,on,the,xml,file,identified,by,the,supplied,link,resource,if,the,file,has,a,code,doctype,definition,then,dtd,validation,is,used,otherwise,xsd,validation,is,assumed,p,override,this,method,if,you,would,like,to,customize,resolution,of,the,link,mode;protected,int,detect,validation,mode,resource,resource,if,resource,is,open,throw,new,bean,definition,store,exception,passed,in,resource,resource,contains,an,open,stream,cannot,determine,validation,mode,automatically,either,pass,in,a,resource,that,is,able,to,create,fresh,streams,or,explicitly,specify,the,validation,mode,on,your,xml,bean,definition,reader,instance,input,stream,input,stream,try,input,stream,resource,get,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,cannot,open,input,stream,did,you,attempt,to,load,directly,from,a,sax,input,source,without,specifying,the,validation,mode,on,your,xml,bean,definition,reader,instance,ex,try,return,this,validation,mode,detector,detect,validation,mode,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,an,error,occurred,whilst,reading,from,the,input,stream,ex
XmlBeanDefinitionReader -> protected int detectValidationMode(Resource resource);1411599760;Detects which kind of validation to perform on the XML file identified_by the supplied {@link Resource}. If the file has a {@code DOCTYPE}_definition then DTD validation is used otherwise XSD validation is assumed._<p>Override this method if you would like to customize resolution_of the {@link #VALIDATION_AUTO} mode.;protected int detectValidationMode(Resource resource) {_		if (resource.isOpen()) {_			throw new BeanDefinitionStoreException(_					"Passed-in Resource [" + resource + "] contains an open stream: " +_					"cannot determine validation mode automatically. Either pass in a Resource " +_					"that is able to create fresh streams, or explicitly specify the validationMode " +_					"on your XmlBeanDefinitionReader instance.")__		}__		InputStream inputStream__		try {_			inputStream = resource.getInputStream()__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"Unable to determine validation mode for [" + resource + "]: cannot open InputStream. " +_					"Did you attempt to load directly from a SAX InputSource without specifying the " +_					"validationMode on your XmlBeanDefinitionReader instance?", ex)__		}__		try {_			return this.validationModeDetector.detectValidationMode(inputStream)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException("Unable to determine validation mode for [" +_					resource + "]: an error occurred whilst reading from the InputStream.", ex)__		}_	};detects,which,kind,of,validation,to,perform,on,the,xml,file,identified,by,the,supplied,link,resource,if,the,file,has,a,code,doctype,definition,then,dtd,validation,is,used,otherwise,xsd,validation,is,assumed,p,override,this,method,if,you,would,like,to,customize,resolution,of,the,link,mode;protected,int,detect,validation,mode,resource,resource,if,resource,is,open,throw,new,bean,definition,store,exception,passed,in,resource,resource,contains,an,open,stream,cannot,determine,validation,mode,automatically,either,pass,in,a,resource,that,is,able,to,create,fresh,streams,or,explicitly,specify,the,validation,mode,on,your,xml,bean,definition,reader,instance,input,stream,input,stream,try,input,stream,resource,get,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,cannot,open,input,stream,did,you,attempt,to,load,directly,from,a,sax,input,source,without,specifying,the,validation,mode,on,your,xml,bean,definition,reader,instance,ex,try,return,this,validation,mode,detector,detect,validation,mode,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,an,error,occurred,whilst,reading,from,the,input,stream,ex
XmlBeanDefinitionReader -> protected int detectValidationMode(Resource resource);1419966315;Detects which kind of validation to perform on the XML file identified_by the supplied {@link Resource}. If the file has a {@code DOCTYPE}_definition then DTD validation is used otherwise XSD validation is assumed._<p>Override this method if you would like to customize resolution_of the {@link #VALIDATION_AUTO} mode.;protected int detectValidationMode(Resource resource) {_		if (resource.isOpen()) {_			throw new BeanDefinitionStoreException(_					"Passed-in Resource [" + resource + "] contains an open stream: " +_					"cannot determine validation mode automatically. Either pass in a Resource " +_					"that is able to create fresh streams, or explicitly specify the validationMode " +_					"on your XmlBeanDefinitionReader instance.")__		}__		InputStream inputStream__		try {_			inputStream = resource.getInputStream()__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"Unable to determine validation mode for [" + resource + "]: cannot open InputStream. " +_					"Did you attempt to load directly from a SAX InputSource without specifying the " +_					"validationMode on your XmlBeanDefinitionReader instance?", ex)__		}__		try {_			return this.validationModeDetector.detectValidationMode(inputStream)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException("Unable to determine validation mode for [" +_					resource + "]: an error occurred whilst reading from the InputStream.", ex)__		}_	};detects,which,kind,of,validation,to,perform,on,the,xml,file,identified,by,the,supplied,link,resource,if,the,file,has,a,code,doctype,definition,then,dtd,validation,is,used,otherwise,xsd,validation,is,assumed,p,override,this,method,if,you,would,like,to,customize,resolution,of,the,link,mode;protected,int,detect,validation,mode,resource,resource,if,resource,is,open,throw,new,bean,definition,store,exception,passed,in,resource,resource,contains,an,open,stream,cannot,determine,validation,mode,automatically,either,pass,in,a,resource,that,is,able,to,create,fresh,streams,or,explicitly,specify,the,validation,mode,on,your,xml,bean,definition,reader,instance,input,stream,input,stream,try,input,stream,resource,get,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,cannot,open,input,stream,did,you,attempt,to,load,directly,from,a,sax,input,source,without,specifying,the,validation,mode,on,your,xml,bean,definition,reader,instance,ex,try,return,this,validation,mode,detector,detect,validation,mode,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,an,error,occurred,whilst,reading,from,the,input,stream,ex
XmlBeanDefinitionReader -> protected int detectValidationMode(Resource resource);1467730834;Detects which kind of validation to perform on the XML file identified_by the supplied {@link Resource}. If the file has a {@code DOCTYPE}_definition then DTD validation is used otherwise XSD validation is assumed._<p>Override this method if you would like to customize resolution_of the {@link #VALIDATION_AUTO} mode.;protected int detectValidationMode(Resource resource) {_		if (resource.isOpen()) {_			throw new BeanDefinitionStoreException(_					"Passed-in Resource [" + resource + "] contains an open stream: " +_					"cannot determine validation mode automatically. Either pass in a Resource " +_					"that is able to create fresh streams, or explicitly specify the validationMode " +_					"on your XmlBeanDefinitionReader instance.")__		}__		InputStream inputStream__		try {_			inputStream = resource.getInputStream()__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"Unable to determine validation mode for [" + resource + "]: cannot open InputStream. " +_					"Did you attempt to load directly from a SAX InputSource without specifying the " +_					"validationMode on your XmlBeanDefinitionReader instance?", ex)__		}__		try {_			return this.validationModeDetector.detectValidationMode(inputStream)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException("Unable to determine validation mode for [" +_					resource + "]: an error occurred whilst reading from the InputStream.", ex)__		}_	};detects,which,kind,of,validation,to,perform,on,the,xml,file,identified,by,the,supplied,link,resource,if,the,file,has,a,code,doctype,definition,then,dtd,validation,is,used,otherwise,xsd,validation,is,assumed,p,override,this,method,if,you,would,like,to,customize,resolution,of,the,link,mode;protected,int,detect,validation,mode,resource,resource,if,resource,is,open,throw,new,bean,definition,store,exception,passed,in,resource,resource,contains,an,open,stream,cannot,determine,validation,mode,automatically,either,pass,in,a,resource,that,is,able,to,create,fresh,streams,or,explicitly,specify,the,validation,mode,on,your,xml,bean,definition,reader,instance,input,stream,input,stream,try,input,stream,resource,get,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,cannot,open,input,stream,did,you,attempt,to,load,directly,from,a,sax,input,source,without,specifying,the,validation,mode,on,your,xml,bean,definition,reader,instance,ex,try,return,this,validation,mode,detector,detect,validation,mode,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,an,error,occurred,whilst,reading,from,the,input,stream,ex
XmlBeanDefinitionReader -> protected int detectValidationMode(Resource resource);1495868221;Detects which kind of validation to perform on the XML file identified_by the supplied {@link Resource}. If the file has a {@code DOCTYPE}_definition then DTD validation is used otherwise XSD validation is assumed._<p>Override this method if you would like to customize resolution_of the {@link #VALIDATION_AUTO} mode.;protected int detectValidationMode(Resource resource) {_		if (resource.isOpen()) {_			throw new BeanDefinitionStoreException(_					"Passed-in Resource [" + resource + "] contains an open stream: " +_					"cannot determine validation mode automatically. Either pass in a Resource " +_					"that is able to create fresh streams, or explicitly specify the validationMode " +_					"on your XmlBeanDefinitionReader instance.")__		}__		InputStream inputStream__		try {_			inputStream = resource.getInputStream()__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"Unable to determine validation mode for [" + resource + "]: cannot open InputStream. " +_					"Did you attempt to load directly from a SAX InputSource without specifying the " +_					"validationMode on your XmlBeanDefinitionReader instance?", ex)__		}__		try {_			return this.validationModeDetector.detectValidationMode(inputStream)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException("Unable to determine validation mode for [" +_					resource + "]: an error occurred whilst reading from the InputStream.", ex)__		}_	};detects,which,kind,of,validation,to,perform,on,the,xml,file,identified,by,the,supplied,link,resource,if,the,file,has,a,code,doctype,definition,then,dtd,validation,is,used,otherwise,xsd,validation,is,assumed,p,override,this,method,if,you,would,like,to,customize,resolution,of,the,link,mode;protected,int,detect,validation,mode,resource,resource,if,resource,is,open,throw,new,bean,definition,store,exception,passed,in,resource,resource,contains,an,open,stream,cannot,determine,validation,mode,automatically,either,pass,in,a,resource,that,is,able,to,create,fresh,streams,or,explicitly,specify,the,validation,mode,on,your,xml,bean,definition,reader,instance,input,stream,input,stream,try,input,stream,resource,get,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,cannot,open,input,stream,did,you,attempt,to,load,directly,from,a,sax,input,source,without,specifying,the,validation,mode,on,your,xml,bean,definition,reader,instance,ex,try,return,this,validation,mode,detector,detect,validation,mode,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,an,error,occurred,whilst,reading,from,the,input,stream,ex
XmlBeanDefinitionReader -> protected int detectValidationMode(Resource resource);1496837955;Detects which kind of validation to perform on the XML file identified_by the supplied {@link Resource}. If the file has a {@code DOCTYPE}_definition then DTD validation is used otherwise XSD validation is assumed._<p>Override this method if you would like to customize resolution_of the {@link #VALIDATION_AUTO} mode.;protected int detectValidationMode(Resource resource) {_		if (resource.isOpen()) {_			throw new BeanDefinitionStoreException(_					"Passed-in Resource [" + resource + "] contains an open stream: " +_					"cannot determine validation mode automatically. Either pass in a Resource " +_					"that is able to create fresh streams, or explicitly specify the validationMode " +_					"on your XmlBeanDefinitionReader instance.")__		}__		InputStream inputStream__		try {_			inputStream = resource.getInputStream()__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"Unable to determine validation mode for [" + resource + "]: cannot open InputStream. " +_					"Did you attempt to load directly from a SAX InputSource without specifying the " +_					"validationMode on your XmlBeanDefinitionReader instance?", ex)__		}__		try {_			return this.validationModeDetector.detectValidationMode(inputStream)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException("Unable to determine validation mode for [" +_					resource + "]: an error occurred whilst reading from the InputStream.", ex)__		}_	};detects,which,kind,of,validation,to,perform,on,the,xml,file,identified,by,the,supplied,link,resource,if,the,file,has,a,code,doctype,definition,then,dtd,validation,is,used,otherwise,xsd,validation,is,assumed,p,override,this,method,if,you,would,like,to,customize,resolution,of,the,link,mode;protected,int,detect,validation,mode,resource,resource,if,resource,is,open,throw,new,bean,definition,store,exception,passed,in,resource,resource,contains,an,open,stream,cannot,determine,validation,mode,automatically,either,pass,in,a,resource,that,is,able,to,create,fresh,streams,or,explicitly,specify,the,validation,mode,on,your,xml,bean,definition,reader,instance,input,stream,input,stream,try,input,stream,resource,get,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,cannot,open,input,stream,did,you,attempt,to,load,directly,from,a,sax,input,source,without,specifying,the,validation,mode,on,your,xml,bean,definition,reader,instance,ex,try,return,this,validation,mode,detector,detect,validation,mode,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,an,error,occurred,whilst,reading,from,the,input,stream,ex
XmlBeanDefinitionReader -> protected int detectValidationMode(Resource resource);1498780456;Detects which kind of validation to perform on the XML file identified_by the supplied {@link Resource}. If the file has a {@code DOCTYPE}_definition then DTD validation is used otherwise XSD validation is assumed._<p>Override this method if you would like to customize resolution_of the {@link #VALIDATION_AUTO} mode.;protected int detectValidationMode(Resource resource) {_		if (resource.isOpen()) {_			throw new BeanDefinitionStoreException(_					"Passed-in Resource [" + resource + "] contains an open stream: " +_					"cannot determine validation mode automatically. Either pass in a Resource " +_					"that is able to create fresh streams, or explicitly specify the validationMode " +_					"on your XmlBeanDefinitionReader instance.")__		}__		InputStream inputStream__		try {_			inputStream = resource.getInputStream()__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"Unable to determine validation mode for [" + resource + "]: cannot open InputStream. " +_					"Did you attempt to load directly from a SAX InputSource without specifying the " +_					"validationMode on your XmlBeanDefinitionReader instance?", ex)__		}__		try {_			return this.validationModeDetector.detectValidationMode(inputStream)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException("Unable to determine validation mode for [" +_					resource + "]: an error occurred whilst reading from the InputStream.", ex)__		}_	};detects,which,kind,of,validation,to,perform,on,the,xml,file,identified,by,the,supplied,link,resource,if,the,file,has,a,code,doctype,definition,then,dtd,validation,is,used,otherwise,xsd,validation,is,assumed,p,override,this,method,if,you,would,like,to,customize,resolution,of,the,link,mode;protected,int,detect,validation,mode,resource,resource,if,resource,is,open,throw,new,bean,definition,store,exception,passed,in,resource,resource,contains,an,open,stream,cannot,determine,validation,mode,automatically,either,pass,in,a,resource,that,is,able,to,create,fresh,streams,or,explicitly,specify,the,validation,mode,on,your,xml,bean,definition,reader,instance,input,stream,input,stream,try,input,stream,resource,get,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,cannot,open,input,stream,did,you,attempt,to,load,directly,from,a,sax,input,source,without,specifying,the,validation,mode,on,your,xml,bean,definition,reader,instance,ex,try,return,this,validation,mode,detector,detect,validation,mode,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,an,error,occurred,whilst,reading,from,the,input,stream,ex
XmlBeanDefinitionReader -> protected int detectValidationMode(Resource resource);1530174524;Detects which kind of validation to perform on the XML file identified_by the supplied {@link Resource}. If the file has a {@code DOCTYPE}_definition then DTD validation is used otherwise XSD validation is assumed._<p>Override this method if you would like to customize resolution_of the {@link #VALIDATION_AUTO} mode.;protected int detectValidationMode(Resource resource) {_		if (resource.isOpen()) {_			throw new BeanDefinitionStoreException(_					"Passed-in Resource [" + resource + "] contains an open stream: " +_					"cannot determine validation mode automatically. Either pass in a Resource " +_					"that is able to create fresh streams, or explicitly specify the validationMode " +_					"on your XmlBeanDefinitionReader instance.")__		}__		InputStream inputStream__		try {_			inputStream = resource.getInputStream()__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"Unable to determine validation mode for [" + resource + "]: cannot open InputStream. " +_					"Did you attempt to load directly from a SAX InputSource without specifying the " +_					"validationMode on your XmlBeanDefinitionReader instance?", ex)__		}__		try {_			return this.validationModeDetector.detectValidationMode(inputStream)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException("Unable to determine validation mode for [" +_					resource + "]: an error occurred whilst reading from the InputStream.", ex)__		}_	};detects,which,kind,of,validation,to,perform,on,the,xml,file,identified,by,the,supplied,link,resource,if,the,file,has,a,code,doctype,definition,then,dtd,validation,is,used,otherwise,xsd,validation,is,assumed,p,override,this,method,if,you,would,like,to,customize,resolution,of,the,link,mode;protected,int,detect,validation,mode,resource,resource,if,resource,is,open,throw,new,bean,definition,store,exception,passed,in,resource,resource,contains,an,open,stream,cannot,determine,validation,mode,automatically,either,pass,in,a,resource,that,is,able,to,create,fresh,streams,or,explicitly,specify,the,validation,mode,on,your,xml,bean,definition,reader,instance,input,stream,input,stream,try,input,stream,resource,get,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,cannot,open,input,stream,did,you,attempt,to,load,directly,from,a,sax,input,source,without,specifying,the,validation,mode,on,your,xml,bean,definition,reader,instance,ex,try,return,this,validation,mode,detector,detect,validation,mode,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,an,error,occurred,whilst,reading,from,the,input,stream,ex
XmlBeanDefinitionReader -> protected int detectValidationMode(Resource resource);1532091916;Detects which kind of validation to perform on the XML file identified_by the supplied {@link Resource}. If the file has a {@code DOCTYPE}_definition then DTD validation is used otherwise XSD validation is assumed._<p>Override this method if you would like to customize resolution_of the {@link #VALIDATION_AUTO} mode.;protected int detectValidationMode(Resource resource) {_		if (resource.isOpen()) {_			throw new BeanDefinitionStoreException(_					"Passed-in Resource [" + resource + "] contains an open stream: " +_					"cannot determine validation mode automatically. Either pass in a Resource " +_					"that is able to create fresh streams, or explicitly specify the validationMode " +_					"on your XmlBeanDefinitionReader instance.")__		}__		InputStream inputStream__		try {_			inputStream = resource.getInputStream()__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"Unable to determine validation mode for [" + resource + "]: cannot open InputStream. " +_					"Did you attempt to load directly from a SAX InputSource without specifying the " +_					"validationMode on your XmlBeanDefinitionReader instance?", ex)__		}__		try {_			return this.validationModeDetector.detectValidationMode(inputStream)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException("Unable to determine validation mode for [" +_					resource + "]: an error occurred whilst reading from the InputStream.", ex)__		}_	};detects,which,kind,of,validation,to,perform,on,the,xml,file,identified,by,the,supplied,link,resource,if,the,file,has,a,code,doctype,definition,then,dtd,validation,is,used,otherwise,xsd,validation,is,assumed,p,override,this,method,if,you,would,like,to,customize,resolution,of,the,link,mode;protected,int,detect,validation,mode,resource,resource,if,resource,is,open,throw,new,bean,definition,store,exception,passed,in,resource,resource,contains,an,open,stream,cannot,determine,validation,mode,automatically,either,pass,in,a,resource,that,is,able,to,create,fresh,streams,or,explicitly,specify,the,validation,mode,on,your,xml,bean,definition,reader,instance,input,stream,input,stream,try,input,stream,resource,get,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,cannot,open,input,stream,did,you,attempt,to,load,directly,from,a,sax,input,source,without,specifying,the,validation,mode,on,your,xml,bean,definition,reader,instance,ex,try,return,this,validation,mode,detector,detect,validation,mode,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,an,error,occurred,whilst,reading,from,the,input,stream,ex
XmlBeanDefinitionReader -> protected int detectValidationMode(Resource resource);1532706365;Detects which kind of validation to perform on the XML file identified_by the supplied {@link Resource}. If the file has a {@code DOCTYPE}_definition then DTD validation is used otherwise XSD validation is assumed._<p>Override this method if you would like to customize resolution_of the {@link #VALIDATION_AUTO} mode.;protected int detectValidationMode(Resource resource) {_		if (resource.isOpen()) {_			throw new BeanDefinitionStoreException(_					"Passed-in Resource [" + resource + "] contains an open stream: " +_					"cannot determine validation mode automatically. Either pass in a Resource " +_					"that is able to create fresh streams, or explicitly specify the validationMode " +_					"on your XmlBeanDefinitionReader instance.")__		}__		InputStream inputStream__		try {_			inputStream = resource.getInputStream()__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"Unable to determine validation mode for [" + resource + "]: cannot open InputStream. " +_					"Did you attempt to load directly from a SAX InputSource without specifying the " +_					"validationMode on your XmlBeanDefinitionReader instance?", ex)__		}__		try {_			return this.validationModeDetector.detectValidationMode(inputStream)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException("Unable to determine validation mode for [" +_					resource + "]: an error occurred whilst reading from the InputStream.", ex)__		}_	};detects,which,kind,of,validation,to,perform,on,the,xml,file,identified,by,the,supplied,link,resource,if,the,file,has,a,code,doctype,definition,then,dtd,validation,is,used,otherwise,xsd,validation,is,assumed,p,override,this,method,if,you,would,like,to,customize,resolution,of,the,link,mode;protected,int,detect,validation,mode,resource,resource,if,resource,is,open,throw,new,bean,definition,store,exception,passed,in,resource,resource,contains,an,open,stream,cannot,determine,validation,mode,automatically,either,pass,in,a,resource,that,is,able,to,create,fresh,streams,or,explicitly,specify,the,validation,mode,on,your,xml,bean,definition,reader,instance,input,stream,input,stream,try,input,stream,resource,get,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,cannot,open,input,stream,did,you,attempt,to,load,directly,from,a,sax,input,source,without,specifying,the,validation,mode,on,your,xml,bean,definition,reader,instance,ex,try,return,this,validation,mode,detector,detect,validation,mode,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,an,error,occurred,whilst,reading,from,the,input,stream,ex
XmlBeanDefinitionReader -> protected int detectValidationMode(Resource resource);1532710698;Detect which kind of validation to perform on the XML file identified_by the supplied {@link Resource}. If the file has a {@code DOCTYPE}_definition then DTD validation is used otherwise XSD validation is assumed._<p>Override this method if you would like to customize resolution_of the {@link #VALIDATION_AUTO} mode.;protected int detectValidationMode(Resource resource) {_		if (resource.isOpen()) {_			throw new BeanDefinitionStoreException(_					"Passed-in Resource [" + resource + "] contains an open stream: " +_					"cannot determine validation mode automatically. Either pass in a Resource " +_					"that is able to create fresh streams, or explicitly specify the validationMode " +_					"on your XmlBeanDefinitionReader instance.")__		}__		InputStream inputStream__		try {_			inputStream = resource.getInputStream()__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"Unable to determine validation mode for [" + resource + "]: cannot open InputStream. " +_					"Did you attempt to load directly from a SAX InputSource without specifying the " +_					"validationMode on your XmlBeanDefinitionReader instance?", ex)__		}__		try {_			return this.validationModeDetector.detectValidationMode(inputStream)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException("Unable to determine validation mode for [" +_					resource + "]: an error occurred whilst reading from the InputStream.", ex)__		}_	};detect,which,kind,of,validation,to,perform,on,the,xml,file,identified,by,the,supplied,link,resource,if,the,file,has,a,code,doctype,definition,then,dtd,validation,is,used,otherwise,xsd,validation,is,assumed,p,override,this,method,if,you,would,like,to,customize,resolution,of,the,link,mode;protected,int,detect,validation,mode,resource,resource,if,resource,is,open,throw,new,bean,definition,store,exception,passed,in,resource,resource,contains,an,open,stream,cannot,determine,validation,mode,automatically,either,pass,in,a,resource,that,is,able,to,create,fresh,streams,or,explicitly,specify,the,validation,mode,on,your,xml,bean,definition,reader,instance,input,stream,input,stream,try,input,stream,resource,get,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,cannot,open,input,stream,did,you,attempt,to,load,directly,from,a,sax,input,source,without,specifying,the,validation,mode,on,your,xml,bean,definition,reader,instance,ex,try,return,this,validation,mode,detector,detect,validation,mode,input,stream,catch,ioexception,ex,throw,new,bean,definition,store,exception,unable,to,determine,validation,mode,for,resource,an,error,occurred,whilst,reading,from,the,input,stream,ex
XmlBeanDefinitionReader -> public void setProblemReporter(@Nullable ProblemReporter problemReporter);1496837955;Specify which {@link org.springframework.beans.factory.parsing.ProblemReporter} to use._<p>The default implementation is {@link org.springframework.beans.factory.parsing.FailFastProblemReporter}_which exhibits fail fast behaviour. External tools can provide an alternative implementation_that collates errors and warnings for display in the tool UI.;public void setProblemReporter(@Nullable ProblemReporter problemReporter) {_		this.problemReporter = (problemReporter != null ? problemReporter : new FailFastProblemReporter())__	};specify,which,link,org,springframework,beans,factory,parsing,problem,reporter,to,use,p,the,default,implementation,is,link,org,springframework,beans,factory,parsing,fail,fast,problem,reporter,which,exhibits,fail,fast,behaviour,external,tools,can,provide,an,alternative,implementation,that,collates,errors,and,warnings,for,display,in,the,tool,ui;public,void,set,problem,reporter,nullable,problem,reporter,problem,reporter,this,problem,reporter,problem,reporter,null,problem,reporter,new,fail,fast,problem,reporter
XmlBeanDefinitionReader -> public void setProblemReporter(@Nullable ProblemReporter problemReporter);1498780456;Specify which {@link org.springframework.beans.factory.parsing.ProblemReporter} to use._<p>The default implementation is {@link org.springframework.beans.factory.parsing.FailFastProblemReporter}_which exhibits fail fast behaviour. External tools can provide an alternative implementation_that collates errors and warnings for display in the tool UI.;public void setProblemReporter(@Nullable ProblemReporter problemReporter) {_		this.problemReporter = (problemReporter != null ? problemReporter : new FailFastProblemReporter())__	};specify,which,link,org,springframework,beans,factory,parsing,problem,reporter,to,use,p,the,default,implementation,is,link,org,springframework,beans,factory,parsing,fail,fast,problem,reporter,which,exhibits,fail,fast,behaviour,external,tools,can,provide,an,alternative,implementation,that,collates,errors,and,warnings,for,display,in,the,tool,ui;public,void,set,problem,reporter,nullable,problem,reporter,problem,reporter,this,problem,reporter,problem,reporter,null,problem,reporter,new,fail,fast,problem,reporter
XmlBeanDefinitionReader -> public void setProblemReporter(@Nullable ProblemReporter problemReporter);1530174524;Specify which {@link org.springframework.beans.factory.parsing.ProblemReporter} to use._<p>The default implementation is {@link org.springframework.beans.factory.parsing.FailFastProblemReporter}_which exhibits fail fast behaviour. External tools can provide an alternative implementation_that collates errors and warnings for display in the tool UI.;public void setProblemReporter(@Nullable ProblemReporter problemReporter) {_		this.problemReporter = (problemReporter != null ? problemReporter : new FailFastProblemReporter())__	};specify,which,link,org,springframework,beans,factory,parsing,problem,reporter,to,use,p,the,default,implementation,is,link,org,springframework,beans,factory,parsing,fail,fast,problem,reporter,which,exhibits,fail,fast,behaviour,external,tools,can,provide,an,alternative,implementation,that,collates,errors,and,warnings,for,display,in,the,tool,ui;public,void,set,problem,reporter,nullable,problem,reporter,problem,reporter,this,problem,reporter,problem,reporter,null,problem,reporter,new,fail,fast,problem,reporter
XmlBeanDefinitionReader -> public void setProblemReporter(@Nullable ProblemReporter problemReporter);1532091916;Specify which {@link org.springframework.beans.factory.parsing.ProblemReporter} to use._<p>The default implementation is {@link org.springframework.beans.factory.parsing.FailFastProblemReporter}_which exhibits fail fast behaviour. External tools can provide an alternative implementation_that collates errors and warnings for display in the tool UI.;public void setProblemReporter(@Nullable ProblemReporter problemReporter) {_		this.problemReporter = (problemReporter != null ? problemReporter : new FailFastProblemReporter())__	};specify,which,link,org,springframework,beans,factory,parsing,problem,reporter,to,use,p,the,default,implementation,is,link,org,springframework,beans,factory,parsing,fail,fast,problem,reporter,which,exhibits,fail,fast,behaviour,external,tools,can,provide,an,alternative,implementation,that,collates,errors,and,warnings,for,display,in,the,tool,ui;public,void,set,problem,reporter,nullable,problem,reporter,problem,reporter,this,problem,reporter,problem,reporter,null,problem,reporter,new,fail,fast,problem,reporter
XmlBeanDefinitionReader -> public void setProblemReporter(@Nullable ProblemReporter problemReporter);1532706365;Specify which {@link org.springframework.beans.factory.parsing.ProblemReporter} to use._<p>The default implementation is {@link org.springframework.beans.factory.parsing.FailFastProblemReporter}_which exhibits fail fast behaviour. External tools can provide an alternative implementation_that collates errors and warnings for display in the tool UI.;public void setProblemReporter(@Nullable ProblemReporter problemReporter) {_		this.problemReporter = (problemReporter != null ? problemReporter : new FailFastProblemReporter())__	};specify,which,link,org,springframework,beans,factory,parsing,problem,reporter,to,use,p,the,default,implementation,is,link,org,springframework,beans,factory,parsing,fail,fast,problem,reporter,which,exhibits,fail,fast,behaviour,external,tools,can,provide,an,alternative,implementation,that,collates,errors,and,warnings,for,display,in,the,tool,ui;public,void,set,problem,reporter,nullable,problem,reporter,problem,reporter,this,problem,reporter,problem,reporter,null,problem,reporter,new,fail,fast,problem,reporter
XmlBeanDefinitionReader -> public void setProblemReporter(@Nullable ProblemReporter problemReporter);1532710698;Specify which {@link org.springframework.beans.factory.parsing.ProblemReporter} to use._<p>The default implementation is {@link org.springframework.beans.factory.parsing.FailFastProblemReporter}_which exhibits fail fast behaviour. External tools can provide an alternative implementation_that collates errors and warnings for display in the tool UI.;public void setProblemReporter(@Nullable ProblemReporter problemReporter) {_		this.problemReporter = (problemReporter != null ? problemReporter : new FailFastProblemReporter())__	};specify,which,link,org,springframework,beans,factory,parsing,problem,reporter,to,use,p,the,default,implementation,is,link,org,springframework,beans,factory,parsing,fail,fast,problem,reporter,which,exhibits,fail,fast,behaviour,external,tools,can,provide,an,alternative,implementation,that,collates,errors,and,warnings,for,display,in,the,tool,ui;public,void,set,problem,reporter,nullable,problem,reporter,problem,reporter,this,problem,reporter,problem,reporter,null,problem,reporter,new,fail,fast,problem,reporter
XmlBeanDefinitionReader -> public void setEntityResolver(@Nullable EntityResolver entityResolver);1496837955;Set a SAX entity resolver to be used for parsing._<p>By default, {@link ResourceEntityResolver} will be used. Can be overridden_for custom entity resolution, for example relative to some specific base path.;public void setEntityResolver(@Nullable EntityResolver entityResolver) {_		this.entityResolver = entityResolver__	};set,a,sax,entity,resolver,to,be,used,for,parsing,p,by,default,link,resource,entity,resolver,will,be,used,can,be,overridden,for,custom,entity,resolution,for,example,relative,to,some,specific,base,path;public,void,set,entity,resolver,nullable,entity,resolver,entity,resolver,this,entity,resolver,entity,resolver
XmlBeanDefinitionReader -> public void setEntityResolver(@Nullable EntityResolver entityResolver);1498780456;Set a SAX entity resolver to be used for parsing._<p>By default, {@link ResourceEntityResolver} will be used. Can be overridden_for custom entity resolution, for example relative to some specific base path.;public void setEntityResolver(@Nullable EntityResolver entityResolver) {_		this.entityResolver = entityResolver__	};set,a,sax,entity,resolver,to,be,used,for,parsing,p,by,default,link,resource,entity,resolver,will,be,used,can,be,overridden,for,custom,entity,resolution,for,example,relative,to,some,specific,base,path;public,void,set,entity,resolver,nullable,entity,resolver,entity,resolver,this,entity,resolver,entity,resolver
XmlBeanDefinitionReader -> public void setEntityResolver(@Nullable EntityResolver entityResolver);1530174524;Set a SAX entity resolver to be used for parsing._<p>By default, {@link ResourceEntityResolver} will be used. Can be overridden_for custom entity resolution, for example relative to some specific base path.;public void setEntityResolver(@Nullable EntityResolver entityResolver) {_		this.entityResolver = entityResolver__	};set,a,sax,entity,resolver,to,be,used,for,parsing,p,by,default,link,resource,entity,resolver,will,be,used,can,be,overridden,for,custom,entity,resolution,for,example,relative,to,some,specific,base,path;public,void,set,entity,resolver,nullable,entity,resolver,entity,resolver,this,entity,resolver,entity,resolver
XmlBeanDefinitionReader -> public void setEntityResolver(@Nullable EntityResolver entityResolver);1532091916;Set a SAX entity resolver to be used for parsing._<p>By default, {@link ResourceEntityResolver} will be used. Can be overridden_for custom entity resolution, for example relative to some specific base path.;public void setEntityResolver(@Nullable EntityResolver entityResolver) {_		this.entityResolver = entityResolver__	};set,a,sax,entity,resolver,to,be,used,for,parsing,p,by,default,link,resource,entity,resolver,will,be,used,can,be,overridden,for,custom,entity,resolution,for,example,relative,to,some,specific,base,path;public,void,set,entity,resolver,nullable,entity,resolver,entity,resolver,this,entity,resolver,entity,resolver
XmlBeanDefinitionReader -> public void setEntityResolver(@Nullable EntityResolver entityResolver);1532706365;Set a SAX entity resolver to be used for parsing._<p>By default, {@link ResourceEntityResolver} will be used. Can be overridden_for custom entity resolution, for example relative to some specific base path.;public void setEntityResolver(@Nullable EntityResolver entityResolver) {_		this.entityResolver = entityResolver__	};set,a,sax,entity,resolver,to,be,used,for,parsing,p,by,default,link,resource,entity,resolver,will,be,used,can,be,overridden,for,custom,entity,resolution,for,example,relative,to,some,specific,base,path;public,void,set,entity,resolver,nullable,entity,resolver,entity,resolver,this,entity,resolver,entity,resolver
XmlBeanDefinitionReader -> public void setEntityResolver(@Nullable EntityResolver entityResolver);1532710698;Set a SAX entity resolver to be used for parsing._<p>By default, {@link ResourceEntityResolver} will be used. Can be overridden_for custom entity resolution, for example relative to some specific base path.;public void setEntityResolver(@Nullable EntityResolver entityResolver) {_		this.entityResolver = entityResolver__	};set,a,sax,entity,resolver,to,be,used,for,parsing,p,by,default,link,resource,entity,resolver,will,be,used,can,be,overridden,for,custom,entity,resolution,for,example,relative,to,some,specific,base,path;public,void,set,entity,resolver,nullable,entity,resolver,entity,resolver,this,entity,resolver,entity,resolver
XmlBeanDefinitionReader -> public int getValidationMode();1328020251;Return the validation mode to use.;public int getValidationMode() {_		return this.validationMode__	};return,the,validation,mode,to,use;public,int,get,validation,mode,return,this,validation,mode
XmlBeanDefinitionReader -> public int getValidationMode();1356735495;Return the validation mode to use.;public int getValidationMode() {_		return this.validationMode__	};return,the,validation,mode,to,use;public,int,get,validation,mode,return,this,validation,mode
XmlBeanDefinitionReader -> public int getValidationMode();1357119239;Return the validation mode to use.;public int getValidationMode() {_		return this.validationMode__	};return,the,validation,mode,to,use;public,int,get,validation,mode,return,this,validation,mode
XmlBeanDefinitionReader -> public int getValidationMode();1368482696;Return the validation mode to use.;public int getValidationMode() {_		return this.validationMode__	};return,the,validation,mode,to,use;public,int,get,validation,mode,return,this,validation,mode
XmlBeanDefinitionReader -> public int getValidationMode();1382030648;Return the validation mode to use.;public int getValidationMode() {_		return this.validationMode__	};return,the,validation,mode,to,use;public,int,get,validation,mode,return,this,validation,mode
XmlBeanDefinitionReader -> public int getValidationMode();1411599760;Return the validation mode to use.;public int getValidationMode() {_		return this.validationMode__	};return,the,validation,mode,to,use;public,int,get,validation,mode,return,this,validation,mode
XmlBeanDefinitionReader -> public int getValidationMode();1419966315;Return the validation mode to use.;public int getValidationMode() {_		return this.validationMode__	};return,the,validation,mode,to,use;public,int,get,validation,mode,return,this,validation,mode
XmlBeanDefinitionReader -> public int getValidationMode();1467730834;Return the validation mode to use.;public int getValidationMode() {_		return this.validationMode__	};return,the,validation,mode,to,use;public,int,get,validation,mode,return,this,validation,mode
XmlBeanDefinitionReader -> public int getValidationMode();1495868221;Return the validation mode to use.;public int getValidationMode() {_		return this.validationMode__	};return,the,validation,mode,to,use;public,int,get,validation,mode,return,this,validation,mode
XmlBeanDefinitionReader -> public int getValidationMode();1496837955;Return the validation mode to use.;public int getValidationMode() {_		return this.validationMode__	};return,the,validation,mode,to,use;public,int,get,validation,mode,return,this,validation,mode
XmlBeanDefinitionReader -> public int getValidationMode();1498780456;Return the validation mode to use.;public int getValidationMode() {_		return this.validationMode__	};return,the,validation,mode,to,use;public,int,get,validation,mode,return,this,validation,mode
XmlBeanDefinitionReader -> public int getValidationMode();1530174524;Return the validation mode to use.;public int getValidationMode() {_		return this.validationMode__	};return,the,validation,mode,to,use;public,int,get,validation,mode,return,this,validation,mode
XmlBeanDefinitionReader -> public int getValidationMode();1532091916;Return the validation mode to use.;public int getValidationMode() {_		return this.validationMode__	};return,the,validation,mode,to,use;public,int,get,validation,mode,return,this,validation,mode
XmlBeanDefinitionReader -> public int getValidationMode();1532706365;Return the validation mode to use.;public int getValidationMode() {_		return this.validationMode__	};return,the,validation,mode,to,use;public,int,get,validation,mode,return,this,validation,mode
XmlBeanDefinitionReader -> public int getValidationMode();1532710698;Return the validation mode to use.;public int getValidationMode() {_		return this.validationMode__	};return,the,validation,mode,to,use;public,int,get,validation,mode,return,this,validation,mode
XmlBeanDefinitionReader -> public void setSourceExtractor(SourceExtractor sourceExtractor);1328020251;Specify the {@link SourceExtractor} to use._<p>The default implementation is {@link NullSourceExtractor} which simply returns <code>null</code>_as the source object. This means that - during normal runtime execution -_no additional source metadata is attached to the bean configuration metadata.;public void setSourceExtractor(SourceExtractor sourceExtractor) {_		this.sourceExtractor = (sourceExtractor != null ? sourceExtractor : new NullSourceExtractor())__	};specify,the,link,source,extractor,to,use,p,the,default,implementation,is,link,null,source,extractor,which,simply,returns,code,null,code,as,the,source,object,this,means,that,during,normal,runtime,execution,no,additional,source,metadata,is,attached,to,the,bean,configuration,metadata;public,void,set,source,extractor,source,extractor,source,extractor,this,source,extractor,source,extractor,null,source,extractor,new,null,source,extractor
XmlBeanDefinitionReader -> public void setSourceExtractor(SourceExtractor sourceExtractor);1356735495;Specify the {@link SourceExtractor} to use._<p>The default implementation is {@link NullSourceExtractor} which simply returns {@code null}_as the source object. This means that - during normal runtime execution -_no additional source metadata is attached to the bean configuration metadata.;public void setSourceExtractor(SourceExtractor sourceExtractor) {_		this.sourceExtractor = (sourceExtractor != null ? sourceExtractor : new NullSourceExtractor())__	};specify,the,link,source,extractor,to,use,p,the,default,implementation,is,link,null,source,extractor,which,simply,returns,code,null,as,the,source,object,this,means,that,during,normal,runtime,execution,no,additional,source,metadata,is,attached,to,the,bean,configuration,metadata;public,void,set,source,extractor,source,extractor,source,extractor,this,source,extractor,source,extractor,null,source,extractor,new,null,source,extractor
XmlBeanDefinitionReader -> public void setSourceExtractor(SourceExtractor sourceExtractor);1357119239;Specify the {@link SourceExtractor} to use._<p>The default implementation is {@link NullSourceExtractor} which simply returns {@code null}_as the source object. This means that - during normal runtime execution -_no additional source metadata is attached to the bean configuration metadata.;public void setSourceExtractor(SourceExtractor sourceExtractor) {_		this.sourceExtractor = (sourceExtractor != null ? sourceExtractor : new NullSourceExtractor())__	};specify,the,link,source,extractor,to,use,p,the,default,implementation,is,link,null,source,extractor,which,simply,returns,code,null,as,the,source,object,this,means,that,during,normal,runtime,execution,no,additional,source,metadata,is,attached,to,the,bean,configuration,metadata;public,void,set,source,extractor,source,extractor,source,extractor,this,source,extractor,source,extractor,null,source,extractor,new,null,source,extractor
XmlBeanDefinitionReader -> public void setSourceExtractor(SourceExtractor sourceExtractor);1368482696;Specify the {@link SourceExtractor} to use._<p>The default implementation is {@link NullSourceExtractor} which simply returns {@code null}_as the source object. This means that - during normal runtime execution -_no additional source metadata is attached to the bean configuration metadata.;public void setSourceExtractor(SourceExtractor sourceExtractor) {_		this.sourceExtractor = (sourceExtractor != null ? sourceExtractor : new NullSourceExtractor())__	};specify,the,link,source,extractor,to,use,p,the,default,implementation,is,link,null,source,extractor,which,simply,returns,code,null,as,the,source,object,this,means,that,during,normal,runtime,execution,no,additional,source,metadata,is,attached,to,the,bean,configuration,metadata;public,void,set,source,extractor,source,extractor,source,extractor,this,source,extractor,source,extractor,null,source,extractor,new,null,source,extractor
XmlBeanDefinitionReader -> public void setSourceExtractor(SourceExtractor sourceExtractor);1382030648;Specify the {@link SourceExtractor} to use._<p>The default implementation is {@link NullSourceExtractor} which simply returns {@code null}_as the source object. This means that - during normal runtime execution -_no additional source metadata is attached to the bean configuration metadata.;public void setSourceExtractor(SourceExtractor sourceExtractor) {_		this.sourceExtractor = (sourceExtractor != null ? sourceExtractor : new NullSourceExtractor())__	};specify,the,link,source,extractor,to,use,p,the,default,implementation,is,link,null,source,extractor,which,simply,returns,code,null,as,the,source,object,this,means,that,during,normal,runtime,execution,no,additional,source,metadata,is,attached,to,the,bean,configuration,metadata;public,void,set,source,extractor,source,extractor,source,extractor,this,source,extractor,source,extractor,null,source,extractor,new,null,source,extractor
XmlBeanDefinitionReader -> public void setSourceExtractor(SourceExtractor sourceExtractor);1411599760;Specify the {@link SourceExtractor} to use._<p>The default implementation is {@link NullSourceExtractor} which simply returns {@code null}_as the source object. This means that - during normal runtime execution -_no additional source metadata is attached to the bean configuration metadata.;public void setSourceExtractor(SourceExtractor sourceExtractor) {_		this.sourceExtractor = (sourceExtractor != null ? sourceExtractor : new NullSourceExtractor())__	};specify,the,link,source,extractor,to,use,p,the,default,implementation,is,link,null,source,extractor,which,simply,returns,code,null,as,the,source,object,this,means,that,during,normal,runtime,execution,no,additional,source,metadata,is,attached,to,the,bean,configuration,metadata;public,void,set,source,extractor,source,extractor,source,extractor,this,source,extractor,source,extractor,null,source,extractor,new,null,source,extractor
XmlBeanDefinitionReader -> public void setSourceExtractor(SourceExtractor sourceExtractor);1419966315;Specify the {@link SourceExtractor} to use._<p>The default implementation is {@link NullSourceExtractor} which simply returns {@code null}_as the source object. This means that - during normal runtime execution -_no additional source metadata is attached to the bean configuration metadata.;public void setSourceExtractor(SourceExtractor sourceExtractor) {_		this.sourceExtractor = (sourceExtractor != null ? sourceExtractor : new NullSourceExtractor())__	};specify,the,link,source,extractor,to,use,p,the,default,implementation,is,link,null,source,extractor,which,simply,returns,code,null,as,the,source,object,this,means,that,during,normal,runtime,execution,no,additional,source,metadata,is,attached,to,the,bean,configuration,metadata;public,void,set,source,extractor,source,extractor,source,extractor,this,source,extractor,source,extractor,null,source,extractor,new,null,source,extractor
XmlBeanDefinitionReader -> public void setSourceExtractor(SourceExtractor sourceExtractor);1467730834;Specify the {@link SourceExtractor} to use._<p>The default implementation is {@link NullSourceExtractor} which simply returns {@code null}_as the source object. This means that - during normal runtime execution -_no additional source metadata is attached to the bean configuration metadata.;public void setSourceExtractor(SourceExtractor sourceExtractor) {_		this.sourceExtractor = (sourceExtractor != null ? sourceExtractor : new NullSourceExtractor())__	};specify,the,link,source,extractor,to,use,p,the,default,implementation,is,link,null,source,extractor,which,simply,returns,code,null,as,the,source,object,this,means,that,during,normal,runtime,execution,no,additional,source,metadata,is,attached,to,the,bean,configuration,metadata;public,void,set,source,extractor,source,extractor,source,extractor,this,source,extractor,source,extractor,null,source,extractor,new,null,source,extractor
XmlBeanDefinitionReader -> public void setSourceExtractor(SourceExtractor sourceExtractor);1495868221;Specify the {@link SourceExtractor} to use._<p>The default implementation is {@link NullSourceExtractor} which simply returns {@code null}_as the source object. This means that - during normal runtime execution -_no additional source metadata is attached to the bean configuration metadata.;public void setSourceExtractor(SourceExtractor sourceExtractor) {_		this.sourceExtractor = (sourceExtractor != null ? sourceExtractor : new NullSourceExtractor())__	};specify,the,link,source,extractor,to,use,p,the,default,implementation,is,link,null,source,extractor,which,simply,returns,code,null,as,the,source,object,this,means,that,during,normal,runtime,execution,no,additional,source,metadata,is,attached,to,the,bean,configuration,metadata;public,void,set,source,extractor,source,extractor,source,extractor,this,source,extractor,source,extractor,null,source,extractor,new,null,source,extractor
XmlBeanDefinitionReader -> public XmlBeanDefinitionReader(BeanDefinitionRegistry registry);1328020251;Create new XmlBeanDefinitionReader for the given bean factory._@param registry the BeanFactory to load bean definitions into,_in the form of a BeanDefinitionRegistry;public XmlBeanDefinitionReader(BeanDefinitionRegistry registry) {_		super(registry)__	};create,new,xml,bean,definition,reader,for,the,given,bean,factory,param,registry,the,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,bean,definition,registry;public,xml,bean,definition,reader,bean,definition,registry,registry,super,registry
XmlBeanDefinitionReader -> public XmlBeanDefinitionReader(BeanDefinitionRegistry registry);1356735495;Create new XmlBeanDefinitionReader for the given bean factory._@param registry the BeanFactory to load bean definitions into,_in the form of a BeanDefinitionRegistry;public XmlBeanDefinitionReader(BeanDefinitionRegistry registry) {_		super(registry)__	};create,new,xml,bean,definition,reader,for,the,given,bean,factory,param,registry,the,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,bean,definition,registry;public,xml,bean,definition,reader,bean,definition,registry,registry,super,registry
XmlBeanDefinitionReader -> public XmlBeanDefinitionReader(BeanDefinitionRegistry registry);1357119239;Create new XmlBeanDefinitionReader for the given bean factory._@param registry the BeanFactory to load bean definitions into,_in the form of a BeanDefinitionRegistry;public XmlBeanDefinitionReader(BeanDefinitionRegistry registry) {_		super(registry)__	};create,new,xml,bean,definition,reader,for,the,given,bean,factory,param,registry,the,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,bean,definition,registry;public,xml,bean,definition,reader,bean,definition,registry,registry,super,registry
XmlBeanDefinitionReader -> public XmlBeanDefinitionReader(BeanDefinitionRegistry registry);1368482696;Create new XmlBeanDefinitionReader for the given bean factory._@param registry the BeanFactory to load bean definitions into,_in the form of a BeanDefinitionRegistry;public XmlBeanDefinitionReader(BeanDefinitionRegistry registry) {_		super(registry)__	};create,new,xml,bean,definition,reader,for,the,given,bean,factory,param,registry,the,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,bean,definition,registry;public,xml,bean,definition,reader,bean,definition,registry,registry,super,registry
XmlBeanDefinitionReader -> public XmlBeanDefinitionReader(BeanDefinitionRegistry registry);1382030648;Create new XmlBeanDefinitionReader for the given bean factory._@param registry the BeanFactory to load bean definitions into,_in the form of a BeanDefinitionRegistry;public XmlBeanDefinitionReader(BeanDefinitionRegistry registry) {_		super(registry)__	};create,new,xml,bean,definition,reader,for,the,given,bean,factory,param,registry,the,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,bean,definition,registry;public,xml,bean,definition,reader,bean,definition,registry,registry,super,registry
XmlBeanDefinitionReader -> public XmlBeanDefinitionReader(BeanDefinitionRegistry registry);1411599760;Create new XmlBeanDefinitionReader for the given bean factory._@param registry the BeanFactory to load bean definitions into,_in the form of a BeanDefinitionRegistry;public XmlBeanDefinitionReader(BeanDefinitionRegistry registry) {_		super(registry)__	};create,new,xml,bean,definition,reader,for,the,given,bean,factory,param,registry,the,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,bean,definition,registry;public,xml,bean,definition,reader,bean,definition,registry,registry,super,registry
XmlBeanDefinitionReader -> public XmlBeanDefinitionReader(BeanDefinitionRegistry registry);1419966315;Create new XmlBeanDefinitionReader for the given bean factory._@param registry the BeanFactory to load bean definitions into,_in the form of a BeanDefinitionRegistry;public XmlBeanDefinitionReader(BeanDefinitionRegistry registry) {_		super(registry)__	};create,new,xml,bean,definition,reader,for,the,given,bean,factory,param,registry,the,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,bean,definition,registry;public,xml,bean,definition,reader,bean,definition,registry,registry,super,registry
XmlBeanDefinitionReader -> public XmlBeanDefinitionReader(BeanDefinitionRegistry registry);1467730834;Create new XmlBeanDefinitionReader for the given bean factory._@param registry the BeanFactory to load bean definitions into,_in the form of a BeanDefinitionRegistry;public XmlBeanDefinitionReader(BeanDefinitionRegistry registry) {_		super(registry)__	};create,new,xml,bean,definition,reader,for,the,given,bean,factory,param,registry,the,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,bean,definition,registry;public,xml,bean,definition,reader,bean,definition,registry,registry,super,registry
XmlBeanDefinitionReader -> public XmlBeanDefinitionReader(BeanDefinitionRegistry registry);1495868221;Create new XmlBeanDefinitionReader for the given bean factory._@param registry the BeanFactory to load bean definitions into,_in the form of a BeanDefinitionRegistry;public XmlBeanDefinitionReader(BeanDefinitionRegistry registry) {_		super(registry)__	};create,new,xml,bean,definition,reader,for,the,given,bean,factory,param,registry,the,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,bean,definition,registry;public,xml,bean,definition,reader,bean,definition,registry,registry,super,registry
XmlBeanDefinitionReader -> public XmlBeanDefinitionReader(BeanDefinitionRegistry registry);1496837955;Create new XmlBeanDefinitionReader for the given bean factory._@param registry the BeanFactory to load bean definitions into,_in the form of a BeanDefinitionRegistry;public XmlBeanDefinitionReader(BeanDefinitionRegistry registry) {_		super(registry)__	};create,new,xml,bean,definition,reader,for,the,given,bean,factory,param,registry,the,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,bean,definition,registry;public,xml,bean,definition,reader,bean,definition,registry,registry,super,registry
XmlBeanDefinitionReader -> public XmlBeanDefinitionReader(BeanDefinitionRegistry registry);1498780456;Create new XmlBeanDefinitionReader for the given bean factory._@param registry the BeanFactory to load bean definitions into,_in the form of a BeanDefinitionRegistry;public XmlBeanDefinitionReader(BeanDefinitionRegistry registry) {_		super(registry)__	};create,new,xml,bean,definition,reader,for,the,given,bean,factory,param,registry,the,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,bean,definition,registry;public,xml,bean,definition,reader,bean,definition,registry,registry,super,registry
XmlBeanDefinitionReader -> public XmlBeanDefinitionReader(BeanDefinitionRegistry registry);1530174524;Create new XmlBeanDefinitionReader for the given bean factory._@param registry the BeanFactory to load bean definitions into,_in the form of a BeanDefinitionRegistry;public XmlBeanDefinitionReader(BeanDefinitionRegistry registry) {_		super(registry)__	};create,new,xml,bean,definition,reader,for,the,given,bean,factory,param,registry,the,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,bean,definition,registry;public,xml,bean,definition,reader,bean,definition,registry,registry,super,registry
XmlBeanDefinitionReader -> public XmlBeanDefinitionReader(BeanDefinitionRegistry registry);1532091916;Create new XmlBeanDefinitionReader for the given bean factory._@param registry the BeanFactory to load bean definitions into,_in the form of a BeanDefinitionRegistry;public XmlBeanDefinitionReader(BeanDefinitionRegistry registry) {_		super(registry)__	};create,new,xml,bean,definition,reader,for,the,given,bean,factory,param,registry,the,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,bean,definition,registry;public,xml,bean,definition,reader,bean,definition,registry,registry,super,registry
XmlBeanDefinitionReader -> public XmlBeanDefinitionReader(BeanDefinitionRegistry registry);1532706365;Create new XmlBeanDefinitionReader for the given bean factory._@param registry the BeanFactory to load bean definitions into,_in the form of a BeanDefinitionRegistry;public XmlBeanDefinitionReader(BeanDefinitionRegistry registry) {_		super(registry)__	};create,new,xml,bean,definition,reader,for,the,given,bean,factory,param,registry,the,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,bean,definition,registry;public,xml,bean,definition,reader,bean,definition,registry,registry,super,registry
XmlBeanDefinitionReader -> public XmlBeanDefinitionReader(BeanDefinitionRegistry registry);1532710698;Create new XmlBeanDefinitionReader for the given bean factory._@param registry the BeanFactory to load bean definitions into,_in the form of a BeanDefinitionRegistry;public XmlBeanDefinitionReader(BeanDefinitionRegistry registry) {_		super(registry)__	};create,new,xml,bean,definition,reader,for,the,given,bean,factory,param,registry,the,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,bean,definition,registry;public,xml,bean,definition,reader,bean,definition,registry,registry,super,registry
XmlBeanDefinitionReader -> protected int getValidationModeForResource(Resource resource);1328020251;Gets the validation mode for the specified {@link Resource}. If no explicit_validation mode has been configured then the validation mode is_{@link #detectValidationMode detected}._<p>Override this method if you would like full control over the validation_mode, even when something other than {@link #VALIDATION_AUTO} was set.;protected int getValidationModeForResource(Resource resource) {_		int validationModeToUse = getValidationMode()__		if (validationModeToUse != VALIDATION_AUTO) {_			return validationModeToUse__		}_		int detectedMode = detectValidationMode(resource)__		if (detectedMode != VALIDATION_AUTO) {_			return detectedMode__		}_		_		_		_		return VALIDATION_XSD__	};gets,the,validation,mode,for,the,specified,link,resource,if,no,explicit,validation,mode,has,been,configured,then,the,validation,mode,is,link,detect,validation,mode,detected,p,override,this,method,if,you,would,like,full,control,over,the,validation,mode,even,when,something,other,than,link,was,set;protected,int,get,validation,mode,for,resource,resource,resource,int,validation,mode,to,use,get,validation,mode,if,validation,mode,to,use,return,validation,mode,to,use,int,detected,mode,detect,validation,mode,resource,if,detected,mode,return,detected,mode,return
XmlBeanDefinitionReader -> protected int getValidationModeForResource(Resource resource);1356735495;Gets the validation mode for the specified {@link Resource}. If no explicit_validation mode has been configured then the validation mode is_{@link #detectValidationMode detected}._<p>Override this method if you would like full control over the validation_mode, even when something other than {@link #VALIDATION_AUTO} was set.;protected int getValidationModeForResource(Resource resource) {_		int validationModeToUse = getValidationMode()__		if (validationModeToUse != VALIDATION_AUTO) {_			return validationModeToUse__		}_		int detectedMode = detectValidationMode(resource)__		if (detectedMode != VALIDATION_AUTO) {_			return detectedMode__		}_		_		_		_		return VALIDATION_XSD__	};gets,the,validation,mode,for,the,specified,link,resource,if,no,explicit,validation,mode,has,been,configured,then,the,validation,mode,is,link,detect,validation,mode,detected,p,override,this,method,if,you,would,like,full,control,over,the,validation,mode,even,when,something,other,than,link,was,set;protected,int,get,validation,mode,for,resource,resource,resource,int,validation,mode,to,use,get,validation,mode,if,validation,mode,to,use,return,validation,mode,to,use,int,detected,mode,detect,validation,mode,resource,if,detected,mode,return,detected,mode,return
XmlBeanDefinitionReader -> protected int getValidationModeForResource(Resource resource);1357119239;Gets the validation mode for the specified {@link Resource}. If no explicit_validation mode has been configured then the validation mode is_{@link #detectValidationMode detected}._<p>Override this method if you would like full control over the validation_mode, even when something other than {@link #VALIDATION_AUTO} was set.;protected int getValidationModeForResource(Resource resource) {_		int validationModeToUse = getValidationMode()__		if (validationModeToUse != VALIDATION_AUTO) {_			return validationModeToUse__		}_		int detectedMode = detectValidationMode(resource)__		if (detectedMode != VALIDATION_AUTO) {_			return detectedMode__		}_		_		_		_		return VALIDATION_XSD__	};gets,the,validation,mode,for,the,specified,link,resource,if,no,explicit,validation,mode,has,been,configured,then,the,validation,mode,is,link,detect,validation,mode,detected,p,override,this,method,if,you,would,like,full,control,over,the,validation,mode,even,when,something,other,than,link,was,set;protected,int,get,validation,mode,for,resource,resource,resource,int,validation,mode,to,use,get,validation,mode,if,validation,mode,to,use,return,validation,mode,to,use,int,detected,mode,detect,validation,mode,resource,if,detected,mode,return,detected,mode,return
XmlBeanDefinitionReader -> protected int getValidationModeForResource(Resource resource);1368482696;Gets the validation mode for the specified {@link Resource}. If no explicit_validation mode has been configured then the validation mode is_{@link #detectValidationMode detected}._<p>Override this method if you would like full control over the validation_mode, even when something other than {@link #VALIDATION_AUTO} was set.;protected int getValidationModeForResource(Resource resource) {_		int validationModeToUse = getValidationMode()__		if (validationModeToUse != VALIDATION_AUTO) {_			return validationModeToUse__		}_		int detectedMode = detectValidationMode(resource)__		if (detectedMode != VALIDATION_AUTO) {_			return detectedMode__		}_		_		_		_		return VALIDATION_XSD__	};gets,the,validation,mode,for,the,specified,link,resource,if,no,explicit,validation,mode,has,been,configured,then,the,validation,mode,is,link,detect,validation,mode,detected,p,override,this,method,if,you,would,like,full,control,over,the,validation,mode,even,when,something,other,than,link,was,set;protected,int,get,validation,mode,for,resource,resource,resource,int,validation,mode,to,use,get,validation,mode,if,validation,mode,to,use,return,validation,mode,to,use,int,detected,mode,detect,validation,mode,resource,if,detected,mode,return,detected,mode,return
XmlBeanDefinitionReader -> protected int getValidationModeForResource(Resource resource);1382030648;Gets the validation mode for the specified {@link Resource}. If no explicit_validation mode has been configured then the validation mode is_{@link #detectValidationMode detected}._<p>Override this method if you would like full control over the validation_mode, even when something other than {@link #VALIDATION_AUTO} was set.;protected int getValidationModeForResource(Resource resource) {_		int validationModeToUse = getValidationMode()__		if (validationModeToUse != VALIDATION_AUTO) {_			return validationModeToUse__		}_		int detectedMode = detectValidationMode(resource)__		if (detectedMode != VALIDATION_AUTO) {_			return detectedMode__		}_		_		_		_		return VALIDATION_XSD__	};gets,the,validation,mode,for,the,specified,link,resource,if,no,explicit,validation,mode,has,been,configured,then,the,validation,mode,is,link,detect,validation,mode,detected,p,override,this,method,if,you,would,like,full,control,over,the,validation,mode,even,when,something,other,than,link,was,set;protected,int,get,validation,mode,for,resource,resource,resource,int,validation,mode,to,use,get,validation,mode,if,validation,mode,to,use,return,validation,mode,to,use,int,detected,mode,detect,validation,mode,resource,if,detected,mode,return,detected,mode,return
XmlBeanDefinitionReader -> protected int getValidationModeForResource(Resource resource);1411599760;Gets the validation mode for the specified {@link Resource}. If no explicit_validation mode has been configured then the validation mode is_{@link #detectValidationMode detected}._<p>Override this method if you would like full control over the validation_mode, even when something other than {@link #VALIDATION_AUTO} was set.;protected int getValidationModeForResource(Resource resource) {_		int validationModeToUse = getValidationMode()__		if (validationModeToUse != VALIDATION_AUTO) {_			return validationModeToUse__		}_		int detectedMode = detectValidationMode(resource)__		if (detectedMode != VALIDATION_AUTO) {_			return detectedMode__		}_		_		_		_		return VALIDATION_XSD__	};gets,the,validation,mode,for,the,specified,link,resource,if,no,explicit,validation,mode,has,been,configured,then,the,validation,mode,is,link,detect,validation,mode,detected,p,override,this,method,if,you,would,like,full,control,over,the,validation,mode,even,when,something,other,than,link,was,set;protected,int,get,validation,mode,for,resource,resource,resource,int,validation,mode,to,use,get,validation,mode,if,validation,mode,to,use,return,validation,mode,to,use,int,detected,mode,detect,validation,mode,resource,if,detected,mode,return,detected,mode,return
XmlBeanDefinitionReader -> protected int getValidationModeForResource(Resource resource);1419966315;Gets the validation mode for the specified {@link Resource}. If no explicit_validation mode has been configured then the validation mode is_{@link #detectValidationMode detected}._<p>Override this method if you would like full control over the validation_mode, even when something other than {@link #VALIDATION_AUTO} was set.;protected int getValidationModeForResource(Resource resource) {_		int validationModeToUse = getValidationMode()__		if (validationModeToUse != VALIDATION_AUTO) {_			return validationModeToUse__		}_		int detectedMode = detectValidationMode(resource)__		if (detectedMode != VALIDATION_AUTO) {_			return detectedMode__		}_		_		_		_		return VALIDATION_XSD__	};gets,the,validation,mode,for,the,specified,link,resource,if,no,explicit,validation,mode,has,been,configured,then,the,validation,mode,is,link,detect,validation,mode,detected,p,override,this,method,if,you,would,like,full,control,over,the,validation,mode,even,when,something,other,than,link,was,set;protected,int,get,validation,mode,for,resource,resource,resource,int,validation,mode,to,use,get,validation,mode,if,validation,mode,to,use,return,validation,mode,to,use,int,detected,mode,detect,validation,mode,resource,if,detected,mode,return,detected,mode,return
XmlBeanDefinitionReader -> protected int getValidationModeForResource(Resource resource);1467730834;Gets the validation mode for the specified {@link Resource}. If no explicit_validation mode has been configured then the validation mode is_{@link #detectValidationMode detected}._<p>Override this method if you would like full control over the validation_mode, even when something other than {@link #VALIDATION_AUTO} was set.;protected int getValidationModeForResource(Resource resource) {_		int validationModeToUse = getValidationMode()__		if (validationModeToUse != VALIDATION_AUTO) {_			return validationModeToUse__		}_		int detectedMode = detectValidationMode(resource)__		if (detectedMode != VALIDATION_AUTO) {_			return detectedMode__		}_		_		_		_		return VALIDATION_XSD__	};gets,the,validation,mode,for,the,specified,link,resource,if,no,explicit,validation,mode,has,been,configured,then,the,validation,mode,is,link,detect,validation,mode,detected,p,override,this,method,if,you,would,like,full,control,over,the,validation,mode,even,when,something,other,than,link,was,set;protected,int,get,validation,mode,for,resource,resource,resource,int,validation,mode,to,use,get,validation,mode,if,validation,mode,to,use,return,validation,mode,to,use,int,detected,mode,detect,validation,mode,resource,if,detected,mode,return,detected,mode,return
XmlBeanDefinitionReader -> protected int getValidationModeForResource(Resource resource);1495868221;Gets the validation mode for the specified {@link Resource}. If no explicit_validation mode has been configured then the validation mode is_{@link #detectValidationMode detected}._<p>Override this method if you would like full control over the validation_mode, even when something other than {@link #VALIDATION_AUTO} was set.;protected int getValidationModeForResource(Resource resource) {_		int validationModeToUse = getValidationMode()__		if (validationModeToUse != VALIDATION_AUTO) {_			return validationModeToUse__		}_		int detectedMode = detectValidationMode(resource)__		if (detectedMode != VALIDATION_AUTO) {_			return detectedMode__		}_		_		_		_		return VALIDATION_XSD__	};gets,the,validation,mode,for,the,specified,link,resource,if,no,explicit,validation,mode,has,been,configured,then,the,validation,mode,is,link,detect,validation,mode,detected,p,override,this,method,if,you,would,like,full,control,over,the,validation,mode,even,when,something,other,than,link,was,set;protected,int,get,validation,mode,for,resource,resource,resource,int,validation,mode,to,use,get,validation,mode,if,validation,mode,to,use,return,validation,mode,to,use,int,detected,mode,detect,validation,mode,resource,if,detected,mode,return,detected,mode,return
XmlBeanDefinitionReader -> protected int getValidationModeForResource(Resource resource);1496837955;Gets the validation mode for the specified {@link Resource}. If no explicit_validation mode has been configured then the validation mode is_{@link #detectValidationMode detected}._<p>Override this method if you would like full control over the validation_mode, even when something other than {@link #VALIDATION_AUTO} was set.;protected int getValidationModeForResource(Resource resource) {_		int validationModeToUse = getValidationMode()__		if (validationModeToUse != VALIDATION_AUTO) {_			return validationModeToUse__		}_		int detectedMode = detectValidationMode(resource)__		if (detectedMode != VALIDATION_AUTO) {_			return detectedMode__		}_		_		_		_		return VALIDATION_XSD__	};gets,the,validation,mode,for,the,specified,link,resource,if,no,explicit,validation,mode,has,been,configured,then,the,validation,mode,is,link,detect,validation,mode,detected,p,override,this,method,if,you,would,like,full,control,over,the,validation,mode,even,when,something,other,than,link,was,set;protected,int,get,validation,mode,for,resource,resource,resource,int,validation,mode,to,use,get,validation,mode,if,validation,mode,to,use,return,validation,mode,to,use,int,detected,mode,detect,validation,mode,resource,if,detected,mode,return,detected,mode,return
XmlBeanDefinitionReader -> protected int getValidationModeForResource(Resource resource);1498780456;Gets the validation mode for the specified {@link Resource}. If no explicit_validation mode has been configured then the validation mode is_{@link #detectValidationMode detected}._<p>Override this method if you would like full control over the validation_mode, even when something other than {@link #VALIDATION_AUTO} was set.;protected int getValidationModeForResource(Resource resource) {_		int validationModeToUse = getValidationMode()__		if (validationModeToUse != VALIDATION_AUTO) {_			return validationModeToUse__		}_		int detectedMode = detectValidationMode(resource)__		if (detectedMode != VALIDATION_AUTO) {_			return detectedMode__		}_		_		_		_		return VALIDATION_XSD__	};gets,the,validation,mode,for,the,specified,link,resource,if,no,explicit,validation,mode,has,been,configured,then,the,validation,mode,is,link,detect,validation,mode,detected,p,override,this,method,if,you,would,like,full,control,over,the,validation,mode,even,when,something,other,than,link,was,set;protected,int,get,validation,mode,for,resource,resource,resource,int,validation,mode,to,use,get,validation,mode,if,validation,mode,to,use,return,validation,mode,to,use,int,detected,mode,detect,validation,mode,resource,if,detected,mode,return,detected,mode,return
XmlBeanDefinitionReader -> protected int getValidationModeForResource(Resource resource);1530174524;Gets the validation mode for the specified {@link Resource}. If no explicit_validation mode has been configured then the validation mode is_{@link #detectValidationMode detected}._<p>Override this method if you would like full control over the validation_mode, even when something other than {@link #VALIDATION_AUTO} was set.;protected int getValidationModeForResource(Resource resource) {_		int validationModeToUse = getValidationMode()__		if (validationModeToUse != VALIDATION_AUTO) {_			return validationModeToUse__		}_		int detectedMode = detectValidationMode(resource)__		if (detectedMode != VALIDATION_AUTO) {_			return detectedMode__		}_		_		_		_		return VALIDATION_XSD__	};gets,the,validation,mode,for,the,specified,link,resource,if,no,explicit,validation,mode,has,been,configured,then,the,validation,mode,is,link,detect,validation,mode,detected,p,override,this,method,if,you,would,like,full,control,over,the,validation,mode,even,when,something,other,than,link,was,set;protected,int,get,validation,mode,for,resource,resource,resource,int,validation,mode,to,use,get,validation,mode,if,validation,mode,to,use,return,validation,mode,to,use,int,detected,mode,detect,validation,mode,resource,if,detected,mode,return,detected,mode,return
XmlBeanDefinitionReader -> protected int getValidationModeForResource(Resource resource);1532091916;Gets the validation mode for the specified {@link Resource}. If no explicit_validation mode has been configured then the validation mode is_{@link #detectValidationMode detected}._<p>Override this method if you would like full control over the validation_mode, even when something other than {@link #VALIDATION_AUTO} was set.;protected int getValidationModeForResource(Resource resource) {_		int validationModeToUse = getValidationMode()__		if (validationModeToUse != VALIDATION_AUTO) {_			return validationModeToUse__		}_		int detectedMode = detectValidationMode(resource)__		if (detectedMode != VALIDATION_AUTO) {_			return detectedMode__		}_		_		_		_		return VALIDATION_XSD__	};gets,the,validation,mode,for,the,specified,link,resource,if,no,explicit,validation,mode,has,been,configured,then,the,validation,mode,is,link,detect,validation,mode,detected,p,override,this,method,if,you,would,like,full,control,over,the,validation,mode,even,when,something,other,than,link,was,set;protected,int,get,validation,mode,for,resource,resource,resource,int,validation,mode,to,use,get,validation,mode,if,validation,mode,to,use,return,validation,mode,to,use,int,detected,mode,detect,validation,mode,resource,if,detected,mode,return,detected,mode,return
XmlBeanDefinitionReader -> protected int getValidationModeForResource(Resource resource);1532706365;Gets the validation mode for the specified {@link Resource}. If no explicit_validation mode has been configured then the validation mode is_{@link #detectValidationMode detected}._<p>Override this method if you would like full control over the validation_mode, even when something other than {@link #VALIDATION_AUTO} was set.;protected int getValidationModeForResource(Resource resource) {_		int validationModeToUse = getValidationMode()__		if (validationModeToUse != VALIDATION_AUTO) {_			return validationModeToUse__		}_		int detectedMode = detectValidationMode(resource)__		if (detectedMode != VALIDATION_AUTO) {_			return detectedMode__		}_		_		_		_		return VALIDATION_XSD__	};gets,the,validation,mode,for,the,specified,link,resource,if,no,explicit,validation,mode,has,been,configured,then,the,validation,mode,is,link,detect,validation,mode,detected,p,override,this,method,if,you,would,like,full,control,over,the,validation,mode,even,when,something,other,than,link,was,set;protected,int,get,validation,mode,for,resource,resource,resource,int,validation,mode,to,use,get,validation,mode,if,validation,mode,to,use,return,validation,mode,to,use,int,detected,mode,detect,validation,mode,resource,if,detected,mode,return,detected,mode,return
XmlBeanDefinitionReader -> protected int getValidationModeForResource(Resource resource);1532710698;Determine the validation mode for the specified {@link Resource}._If no explicit validation mode has been configured, then the validation_mode gets {@link #detectValidationMode detected} from the given resource._<p>Override this method if you would like full control over the validation_mode, even when something other than {@link #VALIDATION_AUTO} was set._@see #detectValidationMode;protected int getValidationModeForResource(Resource resource) {_		int validationModeToUse = getValidationMode()__		if (validationModeToUse != VALIDATION_AUTO) {_			return validationModeToUse__		}_		int detectedMode = detectValidationMode(resource)__		if (detectedMode != VALIDATION_AUTO) {_			return detectedMode__		}_		_		_		_		return VALIDATION_XSD__	};determine,the,validation,mode,for,the,specified,link,resource,if,no,explicit,validation,mode,has,been,configured,then,the,validation,mode,gets,link,detect,validation,mode,detected,from,the,given,resource,p,override,this,method,if,you,would,like,full,control,over,the,validation,mode,even,when,something,other,than,link,was,set,see,detect,validation,mode;protected,int,get,validation,mode,for,resource,resource,resource,int,validation,mode,to,use,get,validation,mode,if,validation,mode,to,use,return,validation,mode,to,use,int,detected,mode,detect,validation,mode,resource,if,detected,mode,return,detected,mode,return
XmlBeanDefinitionReader -> public void setEventListener(ReaderEventListener eventListener);1328020251;Specify which {@link ReaderEventListener} to use._<p>The default implementation is EmptyReaderEventListener which discards every event notification._External tools can provide an alternative implementation to monitor the components being_registered in the BeanFactory.;public void setEventListener(ReaderEventListener eventListener) {_		this.eventListener = (eventListener != null ? eventListener : new EmptyReaderEventListener())__	};specify,which,link,reader,event,listener,to,use,p,the,default,implementation,is,empty,reader,event,listener,which,discards,every,event,notification,external,tools,can,provide,an,alternative,implementation,to,monitor,the,components,being,registered,in,the,bean,factory;public,void,set,event,listener,reader,event,listener,event,listener,this,event,listener,event,listener,null,event,listener,new,empty,reader,event,listener
XmlBeanDefinitionReader -> public void setEventListener(ReaderEventListener eventListener);1356735495;Specify which {@link ReaderEventListener} to use._<p>The default implementation is EmptyReaderEventListener which discards every event notification._External tools can provide an alternative implementation to monitor the components being_registered in the BeanFactory.;public void setEventListener(ReaderEventListener eventListener) {_		this.eventListener = (eventListener != null ? eventListener : new EmptyReaderEventListener())__	};specify,which,link,reader,event,listener,to,use,p,the,default,implementation,is,empty,reader,event,listener,which,discards,every,event,notification,external,tools,can,provide,an,alternative,implementation,to,monitor,the,components,being,registered,in,the,bean,factory;public,void,set,event,listener,reader,event,listener,event,listener,this,event,listener,event,listener,null,event,listener,new,empty,reader,event,listener
XmlBeanDefinitionReader -> public void setEventListener(ReaderEventListener eventListener);1357119239;Specify which {@link ReaderEventListener} to use._<p>The default implementation is EmptyReaderEventListener which discards every event notification._External tools can provide an alternative implementation to monitor the components being_registered in the BeanFactory.;public void setEventListener(ReaderEventListener eventListener) {_		this.eventListener = (eventListener != null ? eventListener : new EmptyReaderEventListener())__	};specify,which,link,reader,event,listener,to,use,p,the,default,implementation,is,empty,reader,event,listener,which,discards,every,event,notification,external,tools,can,provide,an,alternative,implementation,to,monitor,the,components,being,registered,in,the,bean,factory;public,void,set,event,listener,reader,event,listener,event,listener,this,event,listener,event,listener,null,event,listener,new,empty,reader,event,listener
XmlBeanDefinitionReader -> public void setEventListener(ReaderEventListener eventListener);1368482696;Specify which {@link ReaderEventListener} to use._<p>The default implementation is EmptyReaderEventListener which discards every event notification._External tools can provide an alternative implementation to monitor the components being_registered in the BeanFactory.;public void setEventListener(ReaderEventListener eventListener) {_		this.eventListener = (eventListener != null ? eventListener : new EmptyReaderEventListener())__	};specify,which,link,reader,event,listener,to,use,p,the,default,implementation,is,empty,reader,event,listener,which,discards,every,event,notification,external,tools,can,provide,an,alternative,implementation,to,monitor,the,components,being,registered,in,the,bean,factory;public,void,set,event,listener,reader,event,listener,event,listener,this,event,listener,event,listener,null,event,listener,new,empty,reader,event,listener
XmlBeanDefinitionReader -> public void setEventListener(ReaderEventListener eventListener);1382030648;Specify which {@link ReaderEventListener} to use._<p>The default implementation is EmptyReaderEventListener which discards every event notification._External tools can provide an alternative implementation to monitor the components being_registered in the BeanFactory.;public void setEventListener(ReaderEventListener eventListener) {_		this.eventListener = (eventListener != null ? eventListener : new EmptyReaderEventListener())__	};specify,which,link,reader,event,listener,to,use,p,the,default,implementation,is,empty,reader,event,listener,which,discards,every,event,notification,external,tools,can,provide,an,alternative,implementation,to,monitor,the,components,being,registered,in,the,bean,factory;public,void,set,event,listener,reader,event,listener,event,listener,this,event,listener,event,listener,null,event,listener,new,empty,reader,event,listener
XmlBeanDefinitionReader -> public void setEventListener(ReaderEventListener eventListener);1411599760;Specify which {@link ReaderEventListener} to use._<p>The default implementation is EmptyReaderEventListener which discards every event notification._External tools can provide an alternative implementation to monitor the components being_registered in the BeanFactory.;public void setEventListener(ReaderEventListener eventListener) {_		this.eventListener = (eventListener != null ? eventListener : new EmptyReaderEventListener())__	};specify,which,link,reader,event,listener,to,use,p,the,default,implementation,is,empty,reader,event,listener,which,discards,every,event,notification,external,tools,can,provide,an,alternative,implementation,to,monitor,the,components,being,registered,in,the,bean,factory;public,void,set,event,listener,reader,event,listener,event,listener,this,event,listener,event,listener,null,event,listener,new,empty,reader,event,listener
XmlBeanDefinitionReader -> public void setEventListener(ReaderEventListener eventListener);1419966315;Specify which {@link ReaderEventListener} to use._<p>The default implementation is EmptyReaderEventListener which discards every event notification._External tools can provide an alternative implementation to monitor the components being_registered in the BeanFactory.;public void setEventListener(ReaderEventListener eventListener) {_		this.eventListener = (eventListener != null ? eventListener : new EmptyReaderEventListener())__	};specify,which,link,reader,event,listener,to,use,p,the,default,implementation,is,empty,reader,event,listener,which,discards,every,event,notification,external,tools,can,provide,an,alternative,implementation,to,monitor,the,components,being,registered,in,the,bean,factory;public,void,set,event,listener,reader,event,listener,event,listener,this,event,listener,event,listener,null,event,listener,new,empty,reader,event,listener
XmlBeanDefinitionReader -> public void setEventListener(ReaderEventListener eventListener);1467730834;Specify which {@link ReaderEventListener} to use._<p>The default implementation is EmptyReaderEventListener which discards every event notification._External tools can provide an alternative implementation to monitor the components being_registered in the BeanFactory.;public void setEventListener(ReaderEventListener eventListener) {_		this.eventListener = (eventListener != null ? eventListener : new EmptyReaderEventListener())__	};specify,which,link,reader,event,listener,to,use,p,the,default,implementation,is,empty,reader,event,listener,which,discards,every,event,notification,external,tools,can,provide,an,alternative,implementation,to,monitor,the,components,being,registered,in,the,bean,factory;public,void,set,event,listener,reader,event,listener,event,listener,this,event,listener,event,listener,null,event,listener,new,empty,reader,event,listener
XmlBeanDefinitionReader -> public void setEventListener(ReaderEventListener eventListener);1495868221;Specify which {@link ReaderEventListener} to use._<p>The default implementation is EmptyReaderEventListener which discards every event notification._External tools can provide an alternative implementation to monitor the components being_registered in the BeanFactory.;public void setEventListener(ReaderEventListener eventListener) {_		this.eventListener = (eventListener != null ? eventListener : new EmptyReaderEventListener())__	};specify,which,link,reader,event,listener,to,use,p,the,default,implementation,is,empty,reader,event,listener,which,discards,every,event,notification,external,tools,can,provide,an,alternative,implementation,to,monitor,the,components,being,registered,in,the,bean,factory;public,void,set,event,listener,reader,event,listener,event,listener,this,event,listener,event,listener,null,event,listener,new,empty,reader,event,listener
XmlBeanDefinitionReader -> public void setErrorHandler(ErrorHandler errorHandler);1328020251;Set an implementation of the <code>org.xml.sax.ErrorHandler</code>_interface for custom handling of XML parsing errors and warnings._<p>If not set, a default SimpleSaxErrorHandler is used that simply_logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see SimpleSaxErrorHandler;public void setErrorHandler(ErrorHandler errorHandler) {_		this.errorHandler = errorHandler__	};set,an,implementation,of,the,code,org,xml,sax,error,handler,code,interface,for,custom,handling,of,xml,parsing,errors,and,warnings,p,if,not,set,a,default,simple,sax,error,handler,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,simple,sax,error,handler;public,void,set,error,handler,error,handler,error,handler,this,error,handler,error,handler
XmlBeanDefinitionReader -> public void setErrorHandler(ErrorHandler errorHandler);1356735495;Set an implementation of the {@code org.xml.sax.ErrorHandler}_interface for custom handling of XML parsing errors and warnings._<p>If not set, a default SimpleSaxErrorHandler is used that simply_logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see SimpleSaxErrorHandler;public void setErrorHandler(ErrorHandler errorHandler) {_		this.errorHandler = errorHandler__	};set,an,implementation,of,the,code,org,xml,sax,error,handler,interface,for,custom,handling,of,xml,parsing,errors,and,warnings,p,if,not,set,a,default,simple,sax,error,handler,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,simple,sax,error,handler;public,void,set,error,handler,error,handler,error,handler,this,error,handler,error,handler
XmlBeanDefinitionReader -> public void setErrorHandler(ErrorHandler errorHandler);1357119239;Set an implementation of the {@code org.xml.sax.ErrorHandler}_interface for custom handling of XML parsing errors and warnings._<p>If not set, a default SimpleSaxErrorHandler is used that simply_logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see SimpleSaxErrorHandler;public void setErrorHandler(ErrorHandler errorHandler) {_		this.errorHandler = errorHandler__	};set,an,implementation,of,the,code,org,xml,sax,error,handler,interface,for,custom,handling,of,xml,parsing,errors,and,warnings,p,if,not,set,a,default,simple,sax,error,handler,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,simple,sax,error,handler;public,void,set,error,handler,error,handler,error,handler,this,error,handler,error,handler
XmlBeanDefinitionReader -> public void setErrorHandler(ErrorHandler errorHandler);1368482696;Set an implementation of the {@code org.xml.sax.ErrorHandler}_interface for custom handling of XML parsing errors and warnings._<p>If not set, a default SimpleSaxErrorHandler is used that simply_logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see SimpleSaxErrorHandler;public void setErrorHandler(ErrorHandler errorHandler) {_		this.errorHandler = errorHandler__	};set,an,implementation,of,the,code,org,xml,sax,error,handler,interface,for,custom,handling,of,xml,parsing,errors,and,warnings,p,if,not,set,a,default,simple,sax,error,handler,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,simple,sax,error,handler;public,void,set,error,handler,error,handler,error,handler,this,error,handler,error,handler
XmlBeanDefinitionReader -> public void setErrorHandler(ErrorHandler errorHandler);1382030648;Set an implementation of the {@code org.xml.sax.ErrorHandler}_interface for custom handling of XML parsing errors and warnings._<p>If not set, a default SimpleSaxErrorHandler is used that simply_logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see SimpleSaxErrorHandler;public void setErrorHandler(ErrorHandler errorHandler) {_		this.errorHandler = errorHandler__	};set,an,implementation,of,the,code,org,xml,sax,error,handler,interface,for,custom,handling,of,xml,parsing,errors,and,warnings,p,if,not,set,a,default,simple,sax,error,handler,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,simple,sax,error,handler;public,void,set,error,handler,error,handler,error,handler,this,error,handler,error,handler
XmlBeanDefinitionReader -> public void setErrorHandler(ErrorHandler errorHandler);1411599760;Set an implementation of the {@code org.xml.sax.ErrorHandler}_interface for custom handling of XML parsing errors and warnings._<p>If not set, a default SimpleSaxErrorHandler is used that simply_logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see SimpleSaxErrorHandler;public void setErrorHandler(ErrorHandler errorHandler) {_		this.errorHandler = errorHandler__	};set,an,implementation,of,the,code,org,xml,sax,error,handler,interface,for,custom,handling,of,xml,parsing,errors,and,warnings,p,if,not,set,a,default,simple,sax,error,handler,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,simple,sax,error,handler;public,void,set,error,handler,error,handler,error,handler,this,error,handler,error,handler
XmlBeanDefinitionReader -> public void setErrorHandler(ErrorHandler errorHandler);1419966315;Set an implementation of the {@code org.xml.sax.ErrorHandler}_interface for custom handling of XML parsing errors and warnings._<p>If not set, a default SimpleSaxErrorHandler is used that simply_logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see SimpleSaxErrorHandler;public void setErrorHandler(ErrorHandler errorHandler) {_		this.errorHandler = errorHandler__	};set,an,implementation,of,the,code,org,xml,sax,error,handler,interface,for,custom,handling,of,xml,parsing,errors,and,warnings,p,if,not,set,a,default,simple,sax,error,handler,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,simple,sax,error,handler;public,void,set,error,handler,error,handler,error,handler,this,error,handler,error,handler
XmlBeanDefinitionReader -> public void setErrorHandler(ErrorHandler errorHandler);1467730834;Set an implementation of the {@code org.xml.sax.ErrorHandler}_interface for custom handling of XML parsing errors and warnings._<p>If not set, a default SimpleSaxErrorHandler is used that simply_logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see SimpleSaxErrorHandler;public void setErrorHandler(ErrorHandler errorHandler) {_		this.errorHandler = errorHandler__	};set,an,implementation,of,the,code,org,xml,sax,error,handler,interface,for,custom,handling,of,xml,parsing,errors,and,warnings,p,if,not,set,a,default,simple,sax,error,handler,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,simple,sax,error,handler;public,void,set,error,handler,error,handler,error,handler,this,error,handler,error,handler
XmlBeanDefinitionReader -> public void setErrorHandler(ErrorHandler errorHandler);1495868221;Set an implementation of the {@code org.xml.sax.ErrorHandler}_interface for custom handling of XML parsing errors and warnings._<p>If not set, a default SimpleSaxErrorHandler is used that simply_logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see SimpleSaxErrorHandler;public void setErrorHandler(ErrorHandler errorHandler) {_		this.errorHandler = errorHandler__	};set,an,implementation,of,the,code,org,xml,sax,error,handler,interface,for,custom,handling,of,xml,parsing,errors,and,warnings,p,if,not,set,a,default,simple,sax,error,handler,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,simple,sax,error,handler;public,void,set,error,handler,error,handler,error,handler,this,error,handler,error,handler
XmlBeanDefinitionReader -> public void setErrorHandler(ErrorHandler errorHandler);1496837955;Set an implementation of the {@code org.xml.sax.ErrorHandler}_interface for custom handling of XML parsing errors and warnings._<p>If not set, a default SimpleSaxErrorHandler is used that simply_logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see SimpleSaxErrorHandler;public void setErrorHandler(ErrorHandler errorHandler) {_		this.errorHandler = errorHandler__	};set,an,implementation,of,the,code,org,xml,sax,error,handler,interface,for,custom,handling,of,xml,parsing,errors,and,warnings,p,if,not,set,a,default,simple,sax,error,handler,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,simple,sax,error,handler;public,void,set,error,handler,error,handler,error,handler,this,error,handler,error,handler
XmlBeanDefinitionReader -> public void setErrorHandler(ErrorHandler errorHandler);1498780456;Set an implementation of the {@code org.xml.sax.ErrorHandler}_interface for custom handling of XML parsing errors and warnings._<p>If not set, a default SimpleSaxErrorHandler is used that simply_logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see SimpleSaxErrorHandler;public void setErrorHandler(ErrorHandler errorHandler) {_		this.errorHandler = errorHandler__	};set,an,implementation,of,the,code,org,xml,sax,error,handler,interface,for,custom,handling,of,xml,parsing,errors,and,warnings,p,if,not,set,a,default,simple,sax,error,handler,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,simple,sax,error,handler;public,void,set,error,handler,error,handler,error,handler,this,error,handler,error,handler
XmlBeanDefinitionReader -> public void setErrorHandler(ErrorHandler errorHandler);1530174524;Set an implementation of the {@code org.xml.sax.ErrorHandler}_interface for custom handling of XML parsing errors and warnings._<p>If not set, a default SimpleSaxErrorHandler is used that simply_logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see SimpleSaxErrorHandler;public void setErrorHandler(ErrorHandler errorHandler) {_		this.errorHandler = errorHandler__	};set,an,implementation,of,the,code,org,xml,sax,error,handler,interface,for,custom,handling,of,xml,parsing,errors,and,warnings,p,if,not,set,a,default,simple,sax,error,handler,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,simple,sax,error,handler;public,void,set,error,handler,error,handler,error,handler,this,error,handler,error,handler
XmlBeanDefinitionReader -> public void setErrorHandler(ErrorHandler errorHandler);1532091916;Set an implementation of the {@code org.xml.sax.ErrorHandler}_interface for custom handling of XML parsing errors and warnings._<p>If not set, a default SimpleSaxErrorHandler is used that simply_logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see SimpleSaxErrorHandler;public void setErrorHandler(ErrorHandler errorHandler) {_		this.errorHandler = errorHandler__	};set,an,implementation,of,the,code,org,xml,sax,error,handler,interface,for,custom,handling,of,xml,parsing,errors,and,warnings,p,if,not,set,a,default,simple,sax,error,handler,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,simple,sax,error,handler;public,void,set,error,handler,error,handler,error,handler,this,error,handler,error,handler
XmlBeanDefinitionReader -> public void setErrorHandler(ErrorHandler errorHandler);1532706365;Set an implementation of the {@code org.xml.sax.ErrorHandler}_interface for custom handling of XML parsing errors and warnings._<p>If not set, a default SimpleSaxErrorHandler is used that simply_logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see SimpleSaxErrorHandler;public void setErrorHandler(ErrorHandler errorHandler) {_		this.errorHandler = errorHandler__	};set,an,implementation,of,the,code,org,xml,sax,error,handler,interface,for,custom,handling,of,xml,parsing,errors,and,warnings,p,if,not,set,a,default,simple,sax,error,handler,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,simple,sax,error,handler;public,void,set,error,handler,error,handler,error,handler,this,error,handler,error,handler
XmlBeanDefinitionReader -> public void setErrorHandler(ErrorHandler errorHandler);1532710698;Set an implementation of the {@code org.xml.sax.ErrorHandler}_interface for custom handling of XML parsing errors and warnings._<p>If not set, a default SimpleSaxErrorHandler is used that simply_logs warnings using the logger instance of the view class,_and rethrows errors to discontinue the XML transformation._@see SimpleSaxErrorHandler;public void setErrorHandler(ErrorHandler errorHandler) {_		this.errorHandler = errorHandler__	};set,an,implementation,of,the,code,org,xml,sax,error,handler,interface,for,custom,handling,of,xml,parsing,errors,and,warnings,p,if,not,set,a,default,simple,sax,error,handler,is,used,that,simply,logs,warnings,using,the,logger,instance,of,the,view,class,and,rethrows,errors,to,discontinue,the,xml,transformation,see,simple,sax,error,handler;public,void,set,error,handler,error,handler,error,handler,this,error,handler,error,handler
XmlBeanDefinitionReader -> public void setNamespaceAware(boolean namespaceAware);1328020251;Set whether or not the XML parser should be XML namespace aware._Default is "false"._<p>This is typically not needed when schema validation is active._However, without validation, this has to be switched to "true"_in order to properly process schema namespaces.;public void setNamespaceAware(boolean namespaceAware) {_		this.namespaceAware = namespaceAware__	};set,whether,or,not,the,xml,parser,should,be,xml,namespace,aware,default,is,false,p,this,is,typically,not,needed,when,schema,validation,is,active,however,without,validation,this,has,to,be,switched,to,true,in,order,to,properly,process,schema,namespaces;public,void,set,namespace,aware,boolean,namespace,aware,this,namespace,aware,namespace,aware
XmlBeanDefinitionReader -> public void setNamespaceAware(boolean namespaceAware);1356735495;Set whether or not the XML parser should be XML namespace aware._Default is "false"._<p>This is typically not needed when schema validation is active._However, without validation, this has to be switched to "true"_in order to properly process schema namespaces.;public void setNamespaceAware(boolean namespaceAware) {_		this.namespaceAware = namespaceAware__	};set,whether,or,not,the,xml,parser,should,be,xml,namespace,aware,default,is,false,p,this,is,typically,not,needed,when,schema,validation,is,active,however,without,validation,this,has,to,be,switched,to,true,in,order,to,properly,process,schema,namespaces;public,void,set,namespace,aware,boolean,namespace,aware,this,namespace,aware,namespace,aware
XmlBeanDefinitionReader -> public void setNamespaceAware(boolean namespaceAware);1357119239;Set whether or not the XML parser should be XML namespace aware._Default is "false"._<p>This is typically not needed when schema validation is active._However, without validation, this has to be switched to "true"_in order to properly process schema namespaces.;public void setNamespaceAware(boolean namespaceAware) {_		this.namespaceAware = namespaceAware__	};set,whether,or,not,the,xml,parser,should,be,xml,namespace,aware,default,is,false,p,this,is,typically,not,needed,when,schema,validation,is,active,however,without,validation,this,has,to,be,switched,to,true,in,order,to,properly,process,schema,namespaces;public,void,set,namespace,aware,boolean,namespace,aware,this,namespace,aware,namespace,aware
XmlBeanDefinitionReader -> public void setNamespaceAware(boolean namespaceAware);1368482696;Set whether or not the XML parser should be XML namespace aware._Default is "false"._<p>This is typically not needed when schema validation is active._However, without validation, this has to be switched to "true"_in order to properly process schema namespaces.;public void setNamespaceAware(boolean namespaceAware) {_		this.namespaceAware = namespaceAware__	};set,whether,or,not,the,xml,parser,should,be,xml,namespace,aware,default,is,false,p,this,is,typically,not,needed,when,schema,validation,is,active,however,without,validation,this,has,to,be,switched,to,true,in,order,to,properly,process,schema,namespaces;public,void,set,namespace,aware,boolean,namespace,aware,this,namespace,aware,namespace,aware
XmlBeanDefinitionReader -> public void setNamespaceAware(boolean namespaceAware);1382030648;Set whether or not the XML parser should be XML namespace aware._Default is "false"._<p>This is typically not needed when schema validation is active._However, without validation, this has to be switched to "true"_in order to properly process schema namespaces.;public void setNamespaceAware(boolean namespaceAware) {_		this.namespaceAware = namespaceAware__	};set,whether,or,not,the,xml,parser,should,be,xml,namespace,aware,default,is,false,p,this,is,typically,not,needed,when,schema,validation,is,active,however,without,validation,this,has,to,be,switched,to,true,in,order,to,properly,process,schema,namespaces;public,void,set,namespace,aware,boolean,namespace,aware,this,namespace,aware,namespace,aware
XmlBeanDefinitionReader -> public void setNamespaceAware(boolean namespaceAware);1411599760;Set whether or not the XML parser should be XML namespace aware._Default is "false"._<p>This is typically not needed when schema validation is active._However, without validation, this has to be switched to "true"_in order to properly process schema namespaces.;public void setNamespaceAware(boolean namespaceAware) {_		this.namespaceAware = namespaceAware__	};set,whether,or,not,the,xml,parser,should,be,xml,namespace,aware,default,is,false,p,this,is,typically,not,needed,when,schema,validation,is,active,however,without,validation,this,has,to,be,switched,to,true,in,order,to,properly,process,schema,namespaces;public,void,set,namespace,aware,boolean,namespace,aware,this,namespace,aware,namespace,aware
XmlBeanDefinitionReader -> public void setNamespaceAware(boolean namespaceAware);1419966315;Set whether or not the XML parser should be XML namespace aware._Default is "false"._<p>This is typically not needed when schema validation is active._However, without validation, this has to be switched to "true"_in order to properly process schema namespaces.;public void setNamespaceAware(boolean namespaceAware) {_		this.namespaceAware = namespaceAware__	};set,whether,or,not,the,xml,parser,should,be,xml,namespace,aware,default,is,false,p,this,is,typically,not,needed,when,schema,validation,is,active,however,without,validation,this,has,to,be,switched,to,true,in,order,to,properly,process,schema,namespaces;public,void,set,namespace,aware,boolean,namespace,aware,this,namespace,aware,namespace,aware
XmlBeanDefinitionReader -> public void setNamespaceAware(boolean namespaceAware);1467730834;Set whether or not the XML parser should be XML namespace aware._Default is "false"._<p>This is typically not needed when schema validation is active._However, without validation, this has to be switched to "true"_in order to properly process schema namespaces.;public void setNamespaceAware(boolean namespaceAware) {_		this.namespaceAware = namespaceAware__	};set,whether,or,not,the,xml,parser,should,be,xml,namespace,aware,default,is,false,p,this,is,typically,not,needed,when,schema,validation,is,active,however,without,validation,this,has,to,be,switched,to,true,in,order,to,properly,process,schema,namespaces;public,void,set,namespace,aware,boolean,namespace,aware,this,namespace,aware,namespace,aware
XmlBeanDefinitionReader -> public void setNamespaceAware(boolean namespaceAware);1495868221;Set whether or not the XML parser should be XML namespace aware._Default is "false"._<p>This is typically not needed when schema validation is active._However, without validation, this has to be switched to "true"_in order to properly process schema namespaces.;public void setNamespaceAware(boolean namespaceAware) {_		this.namespaceAware = namespaceAware__	};set,whether,or,not,the,xml,parser,should,be,xml,namespace,aware,default,is,false,p,this,is,typically,not,needed,when,schema,validation,is,active,however,without,validation,this,has,to,be,switched,to,true,in,order,to,properly,process,schema,namespaces;public,void,set,namespace,aware,boolean,namespace,aware,this,namespace,aware,namespace,aware
XmlBeanDefinitionReader -> public void setNamespaceAware(boolean namespaceAware);1496837955;Set whether or not the XML parser should be XML namespace aware._Default is "false"._<p>This is typically not needed when schema validation is active._However, without validation, this has to be switched to "true"_in order to properly process schema namespaces.;public void setNamespaceAware(boolean namespaceAware) {_		this.namespaceAware = namespaceAware__	};set,whether,or,not,the,xml,parser,should,be,xml,namespace,aware,default,is,false,p,this,is,typically,not,needed,when,schema,validation,is,active,however,without,validation,this,has,to,be,switched,to,true,in,order,to,properly,process,schema,namespaces;public,void,set,namespace,aware,boolean,namespace,aware,this,namespace,aware,namespace,aware
XmlBeanDefinitionReader -> public void setNamespaceAware(boolean namespaceAware);1498780456;Set whether or not the XML parser should be XML namespace aware._Default is "false"._<p>This is typically not needed when schema validation is active._However, without validation, this has to be switched to "true"_in order to properly process schema namespaces.;public void setNamespaceAware(boolean namespaceAware) {_		this.namespaceAware = namespaceAware__	};set,whether,or,not,the,xml,parser,should,be,xml,namespace,aware,default,is,false,p,this,is,typically,not,needed,when,schema,validation,is,active,however,without,validation,this,has,to,be,switched,to,true,in,order,to,properly,process,schema,namespaces;public,void,set,namespace,aware,boolean,namespace,aware,this,namespace,aware,namespace,aware
XmlBeanDefinitionReader -> public void setNamespaceAware(boolean namespaceAware);1530174524;Set whether or not the XML parser should be XML namespace aware._Default is "false"._<p>This is typically not needed when schema validation is active._However, without validation, this has to be switched to "true"_in order to properly process schema namespaces.;public void setNamespaceAware(boolean namespaceAware) {_		this.namespaceAware = namespaceAware__	};set,whether,or,not,the,xml,parser,should,be,xml,namespace,aware,default,is,false,p,this,is,typically,not,needed,when,schema,validation,is,active,however,without,validation,this,has,to,be,switched,to,true,in,order,to,properly,process,schema,namespaces;public,void,set,namespace,aware,boolean,namespace,aware,this,namespace,aware,namespace,aware
XmlBeanDefinitionReader -> public void setNamespaceAware(boolean namespaceAware);1532091916;Set whether or not the XML parser should be XML namespace aware._Default is "false"._<p>This is typically not needed when schema validation is active._However, without validation, this has to be switched to "true"_in order to properly process schema namespaces.;public void setNamespaceAware(boolean namespaceAware) {_		this.namespaceAware = namespaceAware__	};set,whether,or,not,the,xml,parser,should,be,xml,namespace,aware,default,is,false,p,this,is,typically,not,needed,when,schema,validation,is,active,however,without,validation,this,has,to,be,switched,to,true,in,order,to,properly,process,schema,namespaces;public,void,set,namespace,aware,boolean,namespace,aware,this,namespace,aware,namespace,aware
XmlBeanDefinitionReader -> public void setNamespaceAware(boolean namespaceAware);1532706365;Set whether or not the XML parser should be XML namespace aware._Default is "false"._<p>This is typically not needed when schema validation is active._However, without validation, this has to be switched to "true"_in order to properly process schema namespaces.;public void setNamespaceAware(boolean namespaceAware) {_		this.namespaceAware = namespaceAware__	};set,whether,or,not,the,xml,parser,should,be,xml,namespace,aware,default,is,false,p,this,is,typically,not,needed,when,schema,validation,is,active,however,without,validation,this,has,to,be,switched,to,true,in,order,to,properly,process,schema,namespaces;public,void,set,namespace,aware,boolean,namespace,aware,this,namespace,aware,namespace,aware
XmlBeanDefinitionReader -> public void setNamespaceAware(boolean namespaceAware);1532710698;Set whether or not the XML parser should be XML namespace aware._Default is "false"._<p>This is typically not needed when schema validation is active._However, without validation, this has to be switched to "true"_in order to properly process schema namespaces.;public void setNamespaceAware(boolean namespaceAware) {_		this.namespaceAware = namespaceAware__	};set,whether,or,not,the,xml,parser,should,be,xml,namespace,aware,default,is,false,p,this,is,typically,not,needed,when,schema,validation,is,active,however,without,validation,this,has,to,be,switched,to,true,in,order,to,properly,process,schema,namespaces;public,void,set,namespace,aware,boolean,namespace,aware,this,namespace,aware,namespace,aware
XmlBeanDefinitionReader -> protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource) 			throws BeanDefinitionStoreException;1328020251;Actually load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource)_			throws BeanDefinitionStoreException {_		try {_			int validationMode = getValidationModeForResource(resource)__			Document doc = this.documentLoader.loadDocument(_					inputSource, getEntityResolver(), this.errorHandler, validationMode, isNamespaceAware())__			return registerBeanDefinitions(doc, resource)__		}_		catch (BeanDefinitionStoreException ex) {_			throw ex__		}_		catch (SAXParseException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"Line " + ex.getLineNumber() + " in XML document from " + resource + " is invalid", ex)__		}_		catch (SAXException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"XML document from " + resource + " is invalid", ex)__		}_		catch (ParserConfigurationException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Parser configuration exception parsing XML from " + resource, ex)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"IOException parsing XML document from " + resource, ex)__		}_		catch (Throwable ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Unexpected exception parsing XML document from " + resource, ex)__		}_	};actually,load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;protected,int,do,load,bean,definitions,input,source,input,source,resource,resource,throws,bean,definition,store,exception,try,int,validation,mode,get,validation,mode,for,resource,resource,document,doc,this,document,loader,load,document,input,source,get,entity,resolver,this,error,handler,validation,mode,is,namespace,aware,return,register,bean,definitions,doc,resource,catch,bean,definition,store,exception,ex,throw,ex,catch,saxparse,exception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,line,ex,get,line,number,in,xml,document,from,resource,is,invalid,ex,catch,saxexception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,xml,document,from,resource,is,invalid,ex,catch,parser,configuration,exception,ex,throw,new,bean,definition,store,exception,resource,get,description,parser,configuration,exception,parsing,xml,from,resource,ex,catch,ioexception,ex,throw,new,bean,definition,store,exception,resource,get,description,ioexception,parsing,xml,document,from,resource,ex,catch,throwable,ex,throw,new,bean,definition,store,exception,resource,get,description,unexpected,exception,parsing,xml,document,from,resource,ex
XmlBeanDefinitionReader -> protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource) 			throws BeanDefinitionStoreException;1356735495;Actually load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource)_			throws BeanDefinitionStoreException {_		try {_			int validationMode = getValidationModeForResource(resource)__			Document doc = this.documentLoader.loadDocument(_					inputSource, getEntityResolver(), this.errorHandler, validationMode, isNamespaceAware())__			return registerBeanDefinitions(doc, resource)__		}_		catch (BeanDefinitionStoreException ex) {_			throw ex__		}_		catch (SAXParseException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"Line " + ex.getLineNumber() + " in XML document from " + resource + " is invalid", ex)__		}_		catch (SAXException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"XML document from " + resource + " is invalid", ex)__		}_		catch (ParserConfigurationException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Parser configuration exception parsing XML from " + resource, ex)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"IOException parsing XML document from " + resource, ex)__		}_		catch (Throwable ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Unexpected exception parsing XML document from " + resource, ex)__		}_	};actually,load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;protected,int,do,load,bean,definitions,input,source,input,source,resource,resource,throws,bean,definition,store,exception,try,int,validation,mode,get,validation,mode,for,resource,resource,document,doc,this,document,loader,load,document,input,source,get,entity,resolver,this,error,handler,validation,mode,is,namespace,aware,return,register,bean,definitions,doc,resource,catch,bean,definition,store,exception,ex,throw,ex,catch,saxparse,exception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,line,ex,get,line,number,in,xml,document,from,resource,is,invalid,ex,catch,saxexception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,xml,document,from,resource,is,invalid,ex,catch,parser,configuration,exception,ex,throw,new,bean,definition,store,exception,resource,get,description,parser,configuration,exception,parsing,xml,from,resource,ex,catch,ioexception,ex,throw,new,bean,definition,store,exception,resource,get,description,ioexception,parsing,xml,document,from,resource,ex,catch,throwable,ex,throw,new,bean,definition,store,exception,resource,get,description,unexpected,exception,parsing,xml,document,from,resource,ex
XmlBeanDefinitionReader -> protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource) 			throws BeanDefinitionStoreException;1357119239;Actually load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource)_			throws BeanDefinitionStoreException {_		try {_			int validationMode = getValidationModeForResource(resource)__			Document doc = this.documentLoader.loadDocument(_					inputSource, getEntityResolver(), this.errorHandler, validationMode, isNamespaceAware())__			return registerBeanDefinitions(doc, resource)__		}_		catch (BeanDefinitionStoreException ex) {_			throw ex__		}_		catch (SAXParseException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"Line " + ex.getLineNumber() + " in XML document from " + resource + " is invalid", ex)__		}_		catch (SAXException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"XML document from " + resource + " is invalid", ex)__		}_		catch (ParserConfigurationException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Parser configuration exception parsing XML from " + resource, ex)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"IOException parsing XML document from " + resource, ex)__		}_		catch (Throwable ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Unexpected exception parsing XML document from " + resource, ex)__		}_	};actually,load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;protected,int,do,load,bean,definitions,input,source,input,source,resource,resource,throws,bean,definition,store,exception,try,int,validation,mode,get,validation,mode,for,resource,resource,document,doc,this,document,loader,load,document,input,source,get,entity,resolver,this,error,handler,validation,mode,is,namespace,aware,return,register,bean,definitions,doc,resource,catch,bean,definition,store,exception,ex,throw,ex,catch,saxparse,exception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,line,ex,get,line,number,in,xml,document,from,resource,is,invalid,ex,catch,saxexception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,xml,document,from,resource,is,invalid,ex,catch,parser,configuration,exception,ex,throw,new,bean,definition,store,exception,resource,get,description,parser,configuration,exception,parsing,xml,from,resource,ex,catch,ioexception,ex,throw,new,bean,definition,store,exception,resource,get,description,ioexception,parsing,xml,document,from,resource,ex,catch,throwable,ex,throw,new,bean,definition,store,exception,resource,get,description,unexpected,exception,parsing,xml,document,from,resource,ex
XmlBeanDefinitionReader -> protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource) 			throws BeanDefinitionStoreException;1368482696;Actually load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource)_			throws BeanDefinitionStoreException {_		try {_			int validationMode = getValidationModeForResource(resource)__			Document doc = this.documentLoader.loadDocument(_					inputSource, getEntityResolver(), this.errorHandler, validationMode, isNamespaceAware())__			return registerBeanDefinitions(doc, resource)__		}_		catch (BeanDefinitionStoreException ex) {_			throw ex__		}_		catch (SAXParseException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"Line " + ex.getLineNumber() + " in XML document from " + resource + " is invalid", ex)__		}_		catch (SAXException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"XML document from " + resource + " is invalid", ex)__		}_		catch (ParserConfigurationException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Parser configuration exception parsing XML from " + resource, ex)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"IOException parsing XML document from " + resource, ex)__		}_		catch (Throwable ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Unexpected exception parsing XML document from " + resource, ex)__		}_	};actually,load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;protected,int,do,load,bean,definitions,input,source,input,source,resource,resource,throws,bean,definition,store,exception,try,int,validation,mode,get,validation,mode,for,resource,resource,document,doc,this,document,loader,load,document,input,source,get,entity,resolver,this,error,handler,validation,mode,is,namespace,aware,return,register,bean,definitions,doc,resource,catch,bean,definition,store,exception,ex,throw,ex,catch,saxparse,exception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,line,ex,get,line,number,in,xml,document,from,resource,is,invalid,ex,catch,saxexception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,xml,document,from,resource,is,invalid,ex,catch,parser,configuration,exception,ex,throw,new,bean,definition,store,exception,resource,get,description,parser,configuration,exception,parsing,xml,from,resource,ex,catch,ioexception,ex,throw,new,bean,definition,store,exception,resource,get,description,ioexception,parsing,xml,document,from,resource,ex,catch,throwable,ex,throw,new,bean,definition,store,exception,resource,get,description,unexpected,exception,parsing,xml,document,from,resource,ex
XmlBeanDefinitionReader -> protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource) 			throws BeanDefinitionStoreException;1382030648;Actually load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors_@see #doLoadDocument_@see #registerBeanDefinitions;protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource)_			throws BeanDefinitionStoreException {_		try {_			Document doc = doLoadDocument(inputSource, resource)__			return registerBeanDefinitions(doc, resource)__		}_		catch (BeanDefinitionStoreException ex) {_			throw ex__		}_		catch (SAXParseException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"Line " + ex.getLineNumber() + " in XML document from " + resource + " is invalid", ex)__		}_		catch (SAXException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"XML document from " + resource + " is invalid", ex)__		}_		catch (ParserConfigurationException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Parser configuration exception parsing XML from " + resource, ex)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"IOException parsing XML document from " + resource, ex)__		}_		catch (Throwable ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Unexpected exception parsing XML document from " + resource, ex)__		}_	};actually,load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors,see,do,load,document,see,register,bean,definitions;protected,int,do,load,bean,definitions,input,source,input,source,resource,resource,throws,bean,definition,store,exception,try,document,doc,do,load,document,input,source,resource,return,register,bean,definitions,doc,resource,catch,bean,definition,store,exception,ex,throw,ex,catch,saxparse,exception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,line,ex,get,line,number,in,xml,document,from,resource,is,invalid,ex,catch,saxexception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,xml,document,from,resource,is,invalid,ex,catch,parser,configuration,exception,ex,throw,new,bean,definition,store,exception,resource,get,description,parser,configuration,exception,parsing,xml,from,resource,ex,catch,ioexception,ex,throw,new,bean,definition,store,exception,resource,get,description,ioexception,parsing,xml,document,from,resource,ex,catch,throwable,ex,throw,new,bean,definition,store,exception,resource,get,description,unexpected,exception,parsing,xml,document,from,resource,ex
XmlBeanDefinitionReader -> protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource) 			throws BeanDefinitionStoreException;1411599760;Actually load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors_@see #doLoadDocument_@see #registerBeanDefinitions;protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource)_			throws BeanDefinitionStoreException {_		try {_			Document doc = doLoadDocument(inputSource, resource)__			return registerBeanDefinitions(doc, resource)__		}_		catch (BeanDefinitionStoreException ex) {_			throw ex__		}_		catch (SAXParseException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"Line " + ex.getLineNumber() + " in XML document from " + resource + " is invalid", ex)__		}_		catch (SAXException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"XML document from " + resource + " is invalid", ex)__		}_		catch (ParserConfigurationException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Parser configuration exception parsing XML from " + resource, ex)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"IOException parsing XML document from " + resource, ex)__		}_		catch (Throwable ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Unexpected exception parsing XML document from " + resource, ex)__		}_	};actually,load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors,see,do,load,document,see,register,bean,definitions;protected,int,do,load,bean,definitions,input,source,input,source,resource,resource,throws,bean,definition,store,exception,try,document,doc,do,load,document,input,source,resource,return,register,bean,definitions,doc,resource,catch,bean,definition,store,exception,ex,throw,ex,catch,saxparse,exception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,line,ex,get,line,number,in,xml,document,from,resource,is,invalid,ex,catch,saxexception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,xml,document,from,resource,is,invalid,ex,catch,parser,configuration,exception,ex,throw,new,bean,definition,store,exception,resource,get,description,parser,configuration,exception,parsing,xml,from,resource,ex,catch,ioexception,ex,throw,new,bean,definition,store,exception,resource,get,description,ioexception,parsing,xml,document,from,resource,ex,catch,throwable,ex,throw,new,bean,definition,store,exception,resource,get,description,unexpected,exception,parsing,xml,document,from,resource,ex
XmlBeanDefinitionReader -> protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource) 			throws BeanDefinitionStoreException;1419966315;Actually load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors_@see #doLoadDocument_@see #registerBeanDefinitions;protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource)_			throws BeanDefinitionStoreException {_		try {_			Document doc = doLoadDocument(inputSource, resource)__			return registerBeanDefinitions(doc, resource)__		}_		catch (BeanDefinitionStoreException ex) {_			throw ex__		}_		catch (SAXParseException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"Line " + ex.getLineNumber() + " in XML document from " + resource + " is invalid", ex)__		}_		catch (SAXException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"XML document from " + resource + " is invalid", ex)__		}_		catch (ParserConfigurationException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Parser configuration exception parsing XML from " + resource, ex)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"IOException parsing XML document from " + resource, ex)__		}_		catch (Throwable ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Unexpected exception parsing XML document from " + resource, ex)__		}_	};actually,load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors,see,do,load,document,see,register,bean,definitions;protected,int,do,load,bean,definitions,input,source,input,source,resource,resource,throws,bean,definition,store,exception,try,document,doc,do,load,document,input,source,resource,return,register,bean,definitions,doc,resource,catch,bean,definition,store,exception,ex,throw,ex,catch,saxparse,exception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,line,ex,get,line,number,in,xml,document,from,resource,is,invalid,ex,catch,saxexception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,xml,document,from,resource,is,invalid,ex,catch,parser,configuration,exception,ex,throw,new,bean,definition,store,exception,resource,get,description,parser,configuration,exception,parsing,xml,from,resource,ex,catch,ioexception,ex,throw,new,bean,definition,store,exception,resource,get,description,ioexception,parsing,xml,document,from,resource,ex,catch,throwable,ex,throw,new,bean,definition,store,exception,resource,get,description,unexpected,exception,parsing,xml,document,from,resource,ex
XmlBeanDefinitionReader -> protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource) 			throws BeanDefinitionStoreException;1467730834;Actually load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors_@see #doLoadDocument_@see #registerBeanDefinitions;protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource)_			throws BeanDefinitionStoreException {_		try {_			Document doc = doLoadDocument(inputSource, resource)__			return registerBeanDefinitions(doc, resource)__		}_		catch (BeanDefinitionStoreException ex) {_			throw ex__		}_		catch (SAXParseException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"Line " + ex.getLineNumber() + " in XML document from " + resource + " is invalid", ex)__		}_		catch (SAXException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"XML document from " + resource + " is invalid", ex)__		}_		catch (ParserConfigurationException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Parser configuration exception parsing XML from " + resource, ex)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"IOException parsing XML document from " + resource, ex)__		}_		catch (Throwable ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Unexpected exception parsing XML document from " + resource, ex)__		}_	};actually,load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors,see,do,load,document,see,register,bean,definitions;protected,int,do,load,bean,definitions,input,source,input,source,resource,resource,throws,bean,definition,store,exception,try,document,doc,do,load,document,input,source,resource,return,register,bean,definitions,doc,resource,catch,bean,definition,store,exception,ex,throw,ex,catch,saxparse,exception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,line,ex,get,line,number,in,xml,document,from,resource,is,invalid,ex,catch,saxexception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,xml,document,from,resource,is,invalid,ex,catch,parser,configuration,exception,ex,throw,new,bean,definition,store,exception,resource,get,description,parser,configuration,exception,parsing,xml,from,resource,ex,catch,ioexception,ex,throw,new,bean,definition,store,exception,resource,get,description,ioexception,parsing,xml,document,from,resource,ex,catch,throwable,ex,throw,new,bean,definition,store,exception,resource,get,description,unexpected,exception,parsing,xml,document,from,resource,ex
XmlBeanDefinitionReader -> protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource) 			throws BeanDefinitionStoreException;1495868221;Actually load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors_@see #doLoadDocument_@see #registerBeanDefinitions;protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource)_			throws BeanDefinitionStoreException {_		try {_			Document doc = doLoadDocument(inputSource, resource)__			return registerBeanDefinitions(doc, resource)__		}_		catch (BeanDefinitionStoreException ex) {_			throw ex__		}_		catch (SAXParseException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"Line " + ex.getLineNumber() + " in XML document from " + resource + " is invalid", ex)__		}_		catch (SAXException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"XML document from " + resource + " is invalid", ex)__		}_		catch (ParserConfigurationException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Parser configuration exception parsing XML from " + resource, ex)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"IOException parsing XML document from " + resource, ex)__		}_		catch (Throwable ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Unexpected exception parsing XML document from " + resource, ex)__		}_	};actually,load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors,see,do,load,document,see,register,bean,definitions;protected,int,do,load,bean,definitions,input,source,input,source,resource,resource,throws,bean,definition,store,exception,try,document,doc,do,load,document,input,source,resource,return,register,bean,definitions,doc,resource,catch,bean,definition,store,exception,ex,throw,ex,catch,saxparse,exception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,line,ex,get,line,number,in,xml,document,from,resource,is,invalid,ex,catch,saxexception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,xml,document,from,resource,is,invalid,ex,catch,parser,configuration,exception,ex,throw,new,bean,definition,store,exception,resource,get,description,parser,configuration,exception,parsing,xml,from,resource,ex,catch,ioexception,ex,throw,new,bean,definition,store,exception,resource,get,description,ioexception,parsing,xml,document,from,resource,ex,catch,throwable,ex,throw,new,bean,definition,store,exception,resource,get,description,unexpected,exception,parsing,xml,document,from,resource,ex
XmlBeanDefinitionReader -> protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource) 			throws BeanDefinitionStoreException;1496837955;Actually load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors_@see #doLoadDocument_@see #registerBeanDefinitions;protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource)_			throws BeanDefinitionStoreException {_		try {_			Document doc = doLoadDocument(inputSource, resource)__			return registerBeanDefinitions(doc, resource)__		}_		catch (BeanDefinitionStoreException ex) {_			throw ex__		}_		catch (SAXParseException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"Line " + ex.getLineNumber() + " in XML document from " + resource + " is invalid", ex)__		}_		catch (SAXException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"XML document from " + resource + " is invalid", ex)__		}_		catch (ParserConfigurationException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Parser configuration exception parsing XML from " + resource, ex)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"IOException parsing XML document from " + resource, ex)__		}_		catch (Throwable ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Unexpected exception parsing XML document from " + resource, ex)__		}_	};actually,load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors,see,do,load,document,see,register,bean,definitions;protected,int,do,load,bean,definitions,input,source,input,source,resource,resource,throws,bean,definition,store,exception,try,document,doc,do,load,document,input,source,resource,return,register,bean,definitions,doc,resource,catch,bean,definition,store,exception,ex,throw,ex,catch,saxparse,exception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,line,ex,get,line,number,in,xml,document,from,resource,is,invalid,ex,catch,saxexception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,xml,document,from,resource,is,invalid,ex,catch,parser,configuration,exception,ex,throw,new,bean,definition,store,exception,resource,get,description,parser,configuration,exception,parsing,xml,from,resource,ex,catch,ioexception,ex,throw,new,bean,definition,store,exception,resource,get,description,ioexception,parsing,xml,document,from,resource,ex,catch,throwable,ex,throw,new,bean,definition,store,exception,resource,get,description,unexpected,exception,parsing,xml,document,from,resource,ex
XmlBeanDefinitionReader -> protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource) 			throws BeanDefinitionStoreException;1498780456;Actually load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors_@see #doLoadDocument_@see #registerBeanDefinitions;protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource)_			throws BeanDefinitionStoreException {_		try {_			Document doc = doLoadDocument(inputSource, resource)__			return registerBeanDefinitions(doc, resource)__		}_		catch (BeanDefinitionStoreException ex) {_			throw ex__		}_		catch (SAXParseException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"Line " + ex.getLineNumber() + " in XML document from " + resource + " is invalid", ex)__		}_		catch (SAXException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"XML document from " + resource + " is invalid", ex)__		}_		catch (ParserConfigurationException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Parser configuration exception parsing XML from " + resource, ex)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"IOException parsing XML document from " + resource, ex)__		}_		catch (Throwable ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Unexpected exception parsing XML document from " + resource, ex)__		}_	};actually,load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors,see,do,load,document,see,register,bean,definitions;protected,int,do,load,bean,definitions,input,source,input,source,resource,resource,throws,bean,definition,store,exception,try,document,doc,do,load,document,input,source,resource,return,register,bean,definitions,doc,resource,catch,bean,definition,store,exception,ex,throw,ex,catch,saxparse,exception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,line,ex,get,line,number,in,xml,document,from,resource,is,invalid,ex,catch,saxexception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,xml,document,from,resource,is,invalid,ex,catch,parser,configuration,exception,ex,throw,new,bean,definition,store,exception,resource,get,description,parser,configuration,exception,parsing,xml,from,resource,ex,catch,ioexception,ex,throw,new,bean,definition,store,exception,resource,get,description,ioexception,parsing,xml,document,from,resource,ex,catch,throwable,ex,throw,new,bean,definition,store,exception,resource,get,description,unexpected,exception,parsing,xml,document,from,resource,ex
XmlBeanDefinitionReader -> protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource) 			throws BeanDefinitionStoreException;1530174524;Actually load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors_@see #doLoadDocument_@see #registerBeanDefinitions;protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource)_			throws BeanDefinitionStoreException {_		try {_			Document doc = doLoadDocument(inputSource, resource)__			return registerBeanDefinitions(doc, resource)__		}_		catch (BeanDefinitionStoreException ex) {_			throw ex__		}_		catch (SAXParseException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"Line " + ex.getLineNumber() + " in XML document from " + resource + " is invalid", ex)__		}_		catch (SAXException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"XML document from " + resource + " is invalid", ex)__		}_		catch (ParserConfigurationException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Parser configuration exception parsing XML from " + resource, ex)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"IOException parsing XML document from " + resource, ex)__		}_		catch (Throwable ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Unexpected exception parsing XML document from " + resource, ex)__		}_	};actually,load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors,see,do,load,document,see,register,bean,definitions;protected,int,do,load,bean,definitions,input,source,input,source,resource,resource,throws,bean,definition,store,exception,try,document,doc,do,load,document,input,source,resource,return,register,bean,definitions,doc,resource,catch,bean,definition,store,exception,ex,throw,ex,catch,saxparse,exception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,line,ex,get,line,number,in,xml,document,from,resource,is,invalid,ex,catch,saxexception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,xml,document,from,resource,is,invalid,ex,catch,parser,configuration,exception,ex,throw,new,bean,definition,store,exception,resource,get,description,parser,configuration,exception,parsing,xml,from,resource,ex,catch,ioexception,ex,throw,new,bean,definition,store,exception,resource,get,description,ioexception,parsing,xml,document,from,resource,ex,catch,throwable,ex,throw,new,bean,definition,store,exception,resource,get,description,unexpected,exception,parsing,xml,document,from,resource,ex
XmlBeanDefinitionReader -> protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource) 			throws BeanDefinitionStoreException;1532091916;Actually load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors_@see #doLoadDocument_@see #registerBeanDefinitions;protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource)_			throws BeanDefinitionStoreException {_		try {_			Document doc = doLoadDocument(inputSource, resource)__			return registerBeanDefinitions(doc, resource)__		}_		catch (BeanDefinitionStoreException ex) {_			throw ex__		}_		catch (SAXParseException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"Line " + ex.getLineNumber() + " in XML document from " + resource + " is invalid", ex)__		}_		catch (SAXException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"XML document from " + resource + " is invalid", ex)__		}_		catch (ParserConfigurationException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Parser configuration exception parsing XML from " + resource, ex)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"IOException parsing XML document from " + resource, ex)__		}_		catch (Throwable ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Unexpected exception parsing XML document from " + resource, ex)__		}_	};actually,load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors,see,do,load,document,see,register,bean,definitions;protected,int,do,load,bean,definitions,input,source,input,source,resource,resource,throws,bean,definition,store,exception,try,document,doc,do,load,document,input,source,resource,return,register,bean,definitions,doc,resource,catch,bean,definition,store,exception,ex,throw,ex,catch,saxparse,exception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,line,ex,get,line,number,in,xml,document,from,resource,is,invalid,ex,catch,saxexception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,xml,document,from,resource,is,invalid,ex,catch,parser,configuration,exception,ex,throw,new,bean,definition,store,exception,resource,get,description,parser,configuration,exception,parsing,xml,from,resource,ex,catch,ioexception,ex,throw,new,bean,definition,store,exception,resource,get,description,ioexception,parsing,xml,document,from,resource,ex,catch,throwable,ex,throw,new,bean,definition,store,exception,resource,get,description,unexpected,exception,parsing,xml,document,from,resource,ex
XmlBeanDefinitionReader -> protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource) 			throws BeanDefinitionStoreException;1532706365;Actually load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors_@see #doLoadDocument_@see #registerBeanDefinitions;protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource)_			throws BeanDefinitionStoreException {__		try {_			Document doc = doLoadDocument(inputSource, resource)__			int count = registerBeanDefinitions(doc, resource)__			if (logger.isDebugEnabled()) {_				logger.debug("Loaded " + count + " bean definitions from " + resource)__			}_			return count__		}_		catch (BeanDefinitionStoreException ex) {_			throw ex__		}_		catch (SAXParseException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"Line " + ex.getLineNumber() + " in XML document from " + resource + " is invalid", ex)__		}_		catch (SAXException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"XML document from " + resource + " is invalid", ex)__		}_		catch (ParserConfigurationException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Parser configuration exception parsing XML from " + resource, ex)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"IOException parsing XML document from " + resource, ex)__		}_		catch (Throwable ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Unexpected exception parsing XML document from " + resource, ex)__		}_	};actually,load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors,see,do,load,document,see,register,bean,definitions;protected,int,do,load,bean,definitions,input,source,input,source,resource,resource,throws,bean,definition,store,exception,try,document,doc,do,load,document,input,source,resource,int,count,register,bean,definitions,doc,resource,if,logger,is,debug,enabled,logger,debug,loaded,count,bean,definitions,from,resource,return,count,catch,bean,definition,store,exception,ex,throw,ex,catch,saxparse,exception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,line,ex,get,line,number,in,xml,document,from,resource,is,invalid,ex,catch,saxexception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,xml,document,from,resource,is,invalid,ex,catch,parser,configuration,exception,ex,throw,new,bean,definition,store,exception,resource,get,description,parser,configuration,exception,parsing,xml,from,resource,ex,catch,ioexception,ex,throw,new,bean,definition,store,exception,resource,get,description,ioexception,parsing,xml,document,from,resource,ex,catch,throwable,ex,throw,new,bean,definition,store,exception,resource,get,description,unexpected,exception,parsing,xml,document,from,resource,ex
XmlBeanDefinitionReader -> protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource) 			throws BeanDefinitionStoreException;1532710698;Actually load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors_@see #doLoadDocument_@see #registerBeanDefinitions;protected int doLoadBeanDefinitions(InputSource inputSource, Resource resource)_			throws BeanDefinitionStoreException {__		try {_			Document doc = doLoadDocument(inputSource, resource)__			int count = registerBeanDefinitions(doc, resource)__			if (logger.isDebugEnabled()) {_				logger.debug("Loaded " + count + " bean definitions from " + resource)__			}_			return count__		}_		catch (BeanDefinitionStoreException ex) {_			throw ex__		}_		catch (SAXParseException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"Line " + ex.getLineNumber() + " in XML document from " + resource + " is invalid", ex)__		}_		catch (SAXException ex) {_			throw new XmlBeanDefinitionStoreException(resource.getDescription(),_					"XML document from " + resource + " is invalid", ex)__		}_		catch (ParserConfigurationException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Parser configuration exception parsing XML from " + resource, ex)__		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"IOException parsing XML document from " + resource, ex)__		}_		catch (Throwable ex) {_			throw new BeanDefinitionStoreException(resource.getDescription(),_					"Unexpected exception parsing XML document from " + resource, ex)__		}_	};actually,load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors,see,do,load,document,see,register,bean,definitions;protected,int,do,load,bean,definitions,input,source,input,source,resource,resource,throws,bean,definition,store,exception,try,document,doc,do,load,document,input,source,resource,int,count,register,bean,definitions,doc,resource,if,logger,is,debug,enabled,logger,debug,loaded,count,bean,definitions,from,resource,return,count,catch,bean,definition,store,exception,ex,throw,ex,catch,saxparse,exception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,line,ex,get,line,number,in,xml,document,from,resource,is,invalid,ex,catch,saxexception,ex,throw,new,xml,bean,definition,store,exception,resource,get,description,xml,document,from,resource,is,invalid,ex,catch,parser,configuration,exception,ex,throw,new,bean,definition,store,exception,resource,get,description,parser,configuration,exception,parsing,xml,from,resource,ex,catch,ioexception,ex,throw,new,bean,definition,store,exception,resource,get,description,ioexception,parsing,xml,document,from,resource,ex,catch,throwable,ex,throw,new,bean,definition,store,exception,resource,get,description,unexpected,exception,parsing,xml,document,from,resource,ex
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource, String resourceDescription) 			throws BeanDefinitionStoreException;1328020251;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resourceDescription a description of the resource_(can be <code>null</code> or empty)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource, String resourceDescription)_			throws BeanDefinitionStoreException {__		return doLoadBeanDefinitions(inputSource, new DescriptiveResource(resourceDescription))__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,description,a,description,of,the,resource,can,be,code,null,code,or,empty,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,string,resource,description,throws,bean,definition,store,exception,return,do,load,bean,definitions,input,source,new,descriptive,resource,resource,description
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource, String resourceDescription) 			throws BeanDefinitionStoreException;1356735495;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resourceDescription a description of the resource_(can be {@code null} or empty)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource, String resourceDescription)_			throws BeanDefinitionStoreException {__		return doLoadBeanDefinitions(inputSource, new DescriptiveResource(resourceDescription))__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,description,a,description,of,the,resource,can,be,code,null,or,empty,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,string,resource,description,throws,bean,definition,store,exception,return,do,load,bean,definitions,input,source,new,descriptive,resource,resource,description
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource, String resourceDescription) 			throws BeanDefinitionStoreException;1357119239;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resourceDescription a description of the resource_(can be {@code null} or empty)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource, String resourceDescription)_			throws BeanDefinitionStoreException {__		return doLoadBeanDefinitions(inputSource, new DescriptiveResource(resourceDescription))__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,description,a,description,of,the,resource,can,be,code,null,or,empty,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,string,resource,description,throws,bean,definition,store,exception,return,do,load,bean,definitions,input,source,new,descriptive,resource,resource,description
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource, String resourceDescription) 			throws BeanDefinitionStoreException;1368482696;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resourceDescription a description of the resource_(can be {@code null} or empty)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource, String resourceDescription)_			throws BeanDefinitionStoreException {__		return doLoadBeanDefinitions(inputSource, new DescriptiveResource(resourceDescription))__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,description,a,description,of,the,resource,can,be,code,null,or,empty,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,string,resource,description,throws,bean,definition,store,exception,return,do,load,bean,definitions,input,source,new,descriptive,resource,resource,description
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource, String resourceDescription) 			throws BeanDefinitionStoreException;1382030648;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resourceDescription a description of the resource_(can be {@code null} or empty)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource, String resourceDescription)_			throws BeanDefinitionStoreException {__		return doLoadBeanDefinitions(inputSource, new DescriptiveResource(resourceDescription))__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,description,a,description,of,the,resource,can,be,code,null,or,empty,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,string,resource,description,throws,bean,definition,store,exception,return,do,load,bean,definitions,input,source,new,descriptive,resource,resource,description
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource, String resourceDescription) 			throws BeanDefinitionStoreException;1411599760;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resourceDescription a description of the resource_(can be {@code null} or empty)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource, String resourceDescription)_			throws BeanDefinitionStoreException {__		return doLoadBeanDefinitions(inputSource, new DescriptiveResource(resourceDescription))__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,description,a,description,of,the,resource,can,be,code,null,or,empty,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,string,resource,description,throws,bean,definition,store,exception,return,do,load,bean,definitions,input,source,new,descriptive,resource,resource,description
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource, String resourceDescription) 			throws BeanDefinitionStoreException;1419966315;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resourceDescription a description of the resource_(can be {@code null} or empty)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource, String resourceDescription)_			throws BeanDefinitionStoreException {__		return doLoadBeanDefinitions(inputSource, new DescriptiveResource(resourceDescription))__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,description,a,description,of,the,resource,can,be,code,null,or,empty,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,string,resource,description,throws,bean,definition,store,exception,return,do,load,bean,definitions,input,source,new,descriptive,resource,resource,description
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource, String resourceDescription) 			throws BeanDefinitionStoreException;1467730834;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resourceDescription a description of the resource_(can be {@code null} or empty)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource, String resourceDescription)_			throws BeanDefinitionStoreException {__		return doLoadBeanDefinitions(inputSource, new DescriptiveResource(resourceDescription))__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,description,a,description,of,the,resource,can,be,code,null,or,empty,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,string,resource,description,throws,bean,definition,store,exception,return,do,load,bean,definitions,input,source,new,descriptive,resource,resource,description
XmlBeanDefinitionReader -> @Override 	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException;1356735495;Load bean definitions from the specified XML file._@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;@Override_	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(new EncodedResource(resource))__	};load,bean,definitions,from,the,specified,xml,file,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;override,public,int,load,bean,definitions,resource,resource,throws,bean,definition,store,exception,return,load,bean,definitions,new,encoded,resource,resource
XmlBeanDefinitionReader -> @Override 	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException;1368482696;Load bean definitions from the specified XML file._@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;@Override_	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(new EncodedResource(resource))__	};load,bean,definitions,from,the,specified,xml,file,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;override,public,int,load,bean,definitions,resource,resource,throws,bean,definition,store,exception,return,load,bean,definitions,new,encoded,resource,resource
XmlBeanDefinitionReader -> @Override 	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException;1382030648;Load bean definitions from the specified XML file._@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;@Override_	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(new EncodedResource(resource))__	};load,bean,definitions,from,the,specified,xml,file,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;override,public,int,load,bean,definitions,resource,resource,throws,bean,definition,store,exception,return,load,bean,definitions,new,encoded,resource,resource
XmlBeanDefinitionReader -> @Override 	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException;1411599760;Load bean definitions from the specified XML file._@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;@Override_	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(new EncodedResource(resource))__	};load,bean,definitions,from,the,specified,xml,file,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;override,public,int,load,bean,definitions,resource,resource,throws,bean,definition,store,exception,return,load,bean,definitions,new,encoded,resource,resource
XmlBeanDefinitionReader -> @Override 	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException;1419966315;Load bean definitions from the specified XML file._@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;@Override_	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(new EncodedResource(resource))__	};load,bean,definitions,from,the,specified,xml,file,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;override,public,int,load,bean,definitions,resource,resource,throws,bean,definition,store,exception,return,load,bean,definitions,new,encoded,resource,resource
XmlBeanDefinitionReader -> @Override 	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException;1467730834;Load bean definitions from the specified XML file._@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;@Override_	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(new EncodedResource(resource))__	};load,bean,definitions,from,the,specified,xml,file,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;override,public,int,load,bean,definitions,resource,resource,throws,bean,definition,store,exception,return,load,bean,definitions,new,encoded,resource,resource
XmlBeanDefinitionReader -> @Override 	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException;1495868221;Load bean definitions from the specified XML file._@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;@Override_	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(new EncodedResource(resource))__	};load,bean,definitions,from,the,specified,xml,file,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;override,public,int,load,bean,definitions,resource,resource,throws,bean,definition,store,exception,return,load,bean,definitions,new,encoded,resource,resource
XmlBeanDefinitionReader -> @Override 	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException;1496837955;Load bean definitions from the specified XML file._@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;@Override_	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(new EncodedResource(resource))__	};load,bean,definitions,from,the,specified,xml,file,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;override,public,int,load,bean,definitions,resource,resource,throws,bean,definition,store,exception,return,load,bean,definitions,new,encoded,resource,resource
XmlBeanDefinitionReader -> @Override 	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException;1498780456;Load bean definitions from the specified XML file._@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;@Override_	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(new EncodedResource(resource))__	};load,bean,definitions,from,the,specified,xml,file,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;override,public,int,load,bean,definitions,resource,resource,throws,bean,definition,store,exception,return,load,bean,definitions,new,encoded,resource,resource
XmlBeanDefinitionReader -> @Override 	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException;1530174524;Load bean definitions from the specified XML file._@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;@Override_	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(new EncodedResource(resource))__	};load,bean,definitions,from,the,specified,xml,file,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;override,public,int,load,bean,definitions,resource,resource,throws,bean,definition,store,exception,return,load,bean,definitions,new,encoded,resource,resource
XmlBeanDefinitionReader -> @Override 	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException;1532091916;Load bean definitions from the specified XML file._@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;@Override_	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(new EncodedResource(resource))__	};load,bean,definitions,from,the,specified,xml,file,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;override,public,int,load,bean,definitions,resource,resource,throws,bean,definition,store,exception,return,load,bean,definitions,new,encoded,resource,resource
XmlBeanDefinitionReader -> @Override 	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException;1532706365;Load bean definitions from the specified XML file._@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;@Override_	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(new EncodedResource(resource))__	};load,bean,definitions,from,the,specified,xml,file,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;override,public,int,load,bean,definitions,resource,resource,throws,bean,definition,store,exception,return,load,bean,definitions,new,encoded,resource,resource
XmlBeanDefinitionReader -> @Override 	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException;1532710698;Load bean definitions from the specified XML file._@param resource the resource descriptor for the XML file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;@Override_	public int loadBeanDefinitions(Resource resource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(new EncodedResource(resource))__	};load,bean,definitions,from,the,specified,xml,file,param,resource,the,resource,descriptor,for,the,xml,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;override,public,int,load,bean,definitions,resource,resource,throws,bean,definition,store,exception,return,load,bean,definitions,new,encoded,resource,resource
XmlBeanDefinitionReader -> public void setNamespaceHandlerResolver(NamespaceHandlerResolver namespaceHandlerResolver);1328020251;Specify the {@link NamespaceHandlerResolver} to use._<p>If none is specified, a default instance will be created through_{@link #createDefaultNamespaceHandlerResolver()}.;public void setNamespaceHandlerResolver(NamespaceHandlerResolver namespaceHandlerResolver) {_		this.namespaceHandlerResolver = namespaceHandlerResolver__	};specify,the,link,namespace,handler,resolver,to,use,p,if,none,is,specified,a,default,instance,will,be,created,through,link,create,default,namespace,handler,resolver;public,void,set,namespace,handler,resolver,namespace,handler,resolver,namespace,handler,resolver,this,namespace,handler,resolver,namespace,handler,resolver
XmlBeanDefinitionReader -> public void setNamespaceHandlerResolver(NamespaceHandlerResolver namespaceHandlerResolver);1356735495;Specify the {@link NamespaceHandlerResolver} to use._<p>If none is specified, a default instance will be created through_{@link #createDefaultNamespaceHandlerResolver()}.;public void setNamespaceHandlerResolver(NamespaceHandlerResolver namespaceHandlerResolver) {_		this.namespaceHandlerResolver = namespaceHandlerResolver__	};specify,the,link,namespace,handler,resolver,to,use,p,if,none,is,specified,a,default,instance,will,be,created,through,link,create,default,namespace,handler,resolver;public,void,set,namespace,handler,resolver,namespace,handler,resolver,namespace,handler,resolver,this,namespace,handler,resolver,namespace,handler,resolver
XmlBeanDefinitionReader -> public void setNamespaceHandlerResolver(NamespaceHandlerResolver namespaceHandlerResolver);1357119239;Specify the {@link NamespaceHandlerResolver} to use._<p>If none is specified, a default instance will be created through_{@link #createDefaultNamespaceHandlerResolver()}.;public void setNamespaceHandlerResolver(NamespaceHandlerResolver namespaceHandlerResolver) {_		this.namespaceHandlerResolver = namespaceHandlerResolver__	};specify,the,link,namespace,handler,resolver,to,use,p,if,none,is,specified,a,default,instance,will,be,created,through,link,create,default,namespace,handler,resolver;public,void,set,namespace,handler,resolver,namespace,handler,resolver,namespace,handler,resolver,this,namespace,handler,resolver,namespace,handler,resolver
XmlBeanDefinitionReader -> public void setNamespaceHandlerResolver(NamespaceHandlerResolver namespaceHandlerResolver);1368482696;Specify the {@link NamespaceHandlerResolver} to use._<p>If none is specified, a default instance will be created through_{@link #createDefaultNamespaceHandlerResolver()}.;public void setNamespaceHandlerResolver(NamespaceHandlerResolver namespaceHandlerResolver) {_		this.namespaceHandlerResolver = namespaceHandlerResolver__	};specify,the,link,namespace,handler,resolver,to,use,p,if,none,is,specified,a,default,instance,will,be,created,through,link,create,default,namespace,handler,resolver;public,void,set,namespace,handler,resolver,namespace,handler,resolver,namespace,handler,resolver,this,namespace,handler,resolver,namespace,handler,resolver
XmlBeanDefinitionReader -> public void setNamespaceHandlerResolver(NamespaceHandlerResolver namespaceHandlerResolver);1382030648;Specify the {@link NamespaceHandlerResolver} to use._<p>If none is specified, a default instance will be created through_{@link #createDefaultNamespaceHandlerResolver()}.;public void setNamespaceHandlerResolver(NamespaceHandlerResolver namespaceHandlerResolver) {_		this.namespaceHandlerResolver = namespaceHandlerResolver__	};specify,the,link,namespace,handler,resolver,to,use,p,if,none,is,specified,a,default,instance,will,be,created,through,link,create,default,namespace,handler,resolver;public,void,set,namespace,handler,resolver,namespace,handler,resolver,namespace,handler,resolver,this,namespace,handler,resolver,namespace,handler,resolver
XmlBeanDefinitionReader -> public void setNamespaceHandlerResolver(NamespaceHandlerResolver namespaceHandlerResolver);1411599760;Specify the {@link NamespaceHandlerResolver} to use._<p>If none is specified, a default instance will be created through_{@link #createDefaultNamespaceHandlerResolver()}.;public void setNamespaceHandlerResolver(NamespaceHandlerResolver namespaceHandlerResolver) {_		this.namespaceHandlerResolver = namespaceHandlerResolver__	};specify,the,link,namespace,handler,resolver,to,use,p,if,none,is,specified,a,default,instance,will,be,created,through,link,create,default,namespace,handler,resolver;public,void,set,namespace,handler,resolver,namespace,handler,resolver,namespace,handler,resolver,this,namespace,handler,resolver,namespace,handler,resolver
XmlBeanDefinitionReader -> public void setNamespaceHandlerResolver(NamespaceHandlerResolver namespaceHandlerResolver);1419966315;Specify the {@link NamespaceHandlerResolver} to use._<p>If none is specified, a default instance will be created through_{@link #createDefaultNamespaceHandlerResolver()}.;public void setNamespaceHandlerResolver(NamespaceHandlerResolver namespaceHandlerResolver) {_		this.namespaceHandlerResolver = namespaceHandlerResolver__	};specify,the,link,namespace,handler,resolver,to,use,p,if,none,is,specified,a,default,instance,will,be,created,through,link,create,default,namespace,handler,resolver;public,void,set,namespace,handler,resolver,namespace,handler,resolver,namespace,handler,resolver,this,namespace,handler,resolver,namespace,handler,resolver
XmlBeanDefinitionReader -> public void setNamespaceHandlerResolver(NamespaceHandlerResolver namespaceHandlerResolver);1467730834;Specify the {@link NamespaceHandlerResolver} to use._<p>If none is specified, a default instance will be created through_{@link #createDefaultNamespaceHandlerResolver()}.;public void setNamespaceHandlerResolver(NamespaceHandlerResolver namespaceHandlerResolver) {_		this.namespaceHandlerResolver = namespaceHandlerResolver__	};specify,the,link,namespace,handler,resolver,to,use,p,if,none,is,specified,a,default,instance,will,be,created,through,link,create,default,namespace,handler,resolver;public,void,set,namespace,handler,resolver,namespace,handler,resolver,namespace,handler,resolver,this,namespace,handler,resolver,namespace,handler,resolver
XmlBeanDefinitionReader -> public void setNamespaceHandlerResolver(NamespaceHandlerResolver namespaceHandlerResolver);1495868221;Specify the {@link NamespaceHandlerResolver} to use._<p>If none is specified, a default instance will be created through_{@link #createDefaultNamespaceHandlerResolver()}.;public void setNamespaceHandlerResolver(NamespaceHandlerResolver namespaceHandlerResolver) {_		this.namespaceHandlerResolver = namespaceHandlerResolver__	};specify,the,link,namespace,handler,resolver,to,use,p,if,none,is,specified,a,default,instance,will,be,created,through,link,create,default,namespace,handler,resolver;public,void,set,namespace,handler,resolver,namespace,handler,resolver,namespace,handler,resolver,this,namespace,handler,resolver,namespace,handler,resolver
XmlBeanDefinitionReader -> protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver();1328020251;Create the default implementation of {@link NamespaceHandlerResolver} used if none is specified._Default implementation returns an instance of {@link DefaultNamespaceHandlerResolver}.;protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver() {_		return new DefaultNamespaceHandlerResolver(getResourceLoader().getClassLoader())__	};create,the,default,implementation,of,link,namespace,handler,resolver,used,if,none,is,specified,default,implementation,returns,an,instance,of,link,default,namespace,handler,resolver;protected,namespace,handler,resolver,create,default,namespace,handler,resolver,return,new,default,namespace,handler,resolver,get,resource,loader,get,class,loader
XmlBeanDefinitionReader -> protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver();1356735495;Create the default implementation of {@link NamespaceHandlerResolver} used if none is specified._Default implementation returns an instance of {@link DefaultNamespaceHandlerResolver}.;protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver() {_		return new DefaultNamespaceHandlerResolver(getResourceLoader().getClassLoader())__	};create,the,default,implementation,of,link,namespace,handler,resolver,used,if,none,is,specified,default,implementation,returns,an,instance,of,link,default,namespace,handler,resolver;protected,namespace,handler,resolver,create,default,namespace,handler,resolver,return,new,default,namespace,handler,resolver,get,resource,loader,get,class,loader
XmlBeanDefinitionReader -> protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver();1357119239;Create the default implementation of {@link NamespaceHandlerResolver} used if none is specified._Default implementation returns an instance of {@link DefaultNamespaceHandlerResolver}.;protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver() {_		return new DefaultNamespaceHandlerResolver(getResourceLoader().getClassLoader())__	};create,the,default,implementation,of,link,namespace,handler,resolver,used,if,none,is,specified,default,implementation,returns,an,instance,of,link,default,namespace,handler,resolver;protected,namespace,handler,resolver,create,default,namespace,handler,resolver,return,new,default,namespace,handler,resolver,get,resource,loader,get,class,loader
XmlBeanDefinitionReader -> protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver();1368482696;Create the default implementation of {@link NamespaceHandlerResolver} used if none is specified._Default implementation returns an instance of {@link DefaultNamespaceHandlerResolver}.;protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver() {_		return new DefaultNamespaceHandlerResolver(getResourceLoader().getClassLoader())__	};create,the,default,implementation,of,link,namespace,handler,resolver,used,if,none,is,specified,default,implementation,returns,an,instance,of,link,default,namespace,handler,resolver;protected,namespace,handler,resolver,create,default,namespace,handler,resolver,return,new,default,namespace,handler,resolver,get,resource,loader,get,class,loader
XmlBeanDefinitionReader -> protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver();1382030648;Create the default implementation of {@link NamespaceHandlerResolver} used if none is specified._Default implementation returns an instance of {@link DefaultNamespaceHandlerResolver}.;protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver() {_		return new DefaultNamespaceHandlerResolver(getResourceLoader().getClassLoader())__	};create,the,default,implementation,of,link,namespace,handler,resolver,used,if,none,is,specified,default,implementation,returns,an,instance,of,link,default,namespace,handler,resolver;protected,namespace,handler,resolver,create,default,namespace,handler,resolver,return,new,default,namespace,handler,resolver,get,resource,loader,get,class,loader
XmlBeanDefinitionReader -> protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver();1411599760;Create the default implementation of {@link NamespaceHandlerResolver} used if none is specified._Default implementation returns an instance of {@link DefaultNamespaceHandlerResolver}.;protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver() {_		return new DefaultNamespaceHandlerResolver(getResourceLoader().getClassLoader())__	};create,the,default,implementation,of,link,namespace,handler,resolver,used,if,none,is,specified,default,implementation,returns,an,instance,of,link,default,namespace,handler,resolver;protected,namespace,handler,resolver,create,default,namespace,handler,resolver,return,new,default,namespace,handler,resolver,get,resource,loader,get,class,loader
XmlBeanDefinitionReader -> protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver();1419966315;Create the default implementation of {@link NamespaceHandlerResolver} used if none is specified._Default implementation returns an instance of {@link DefaultNamespaceHandlerResolver}.;protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver() {_		return new DefaultNamespaceHandlerResolver(getResourceLoader().getClassLoader())__	};create,the,default,implementation,of,link,namespace,handler,resolver,used,if,none,is,specified,default,implementation,returns,an,instance,of,link,default,namespace,handler,resolver;protected,namespace,handler,resolver,create,default,namespace,handler,resolver,return,new,default,namespace,handler,resolver,get,resource,loader,get,class,loader
XmlBeanDefinitionReader -> protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver();1467730834;Create the default implementation of {@link NamespaceHandlerResolver} used if none is specified._Default implementation returns an instance of {@link DefaultNamespaceHandlerResolver}.;protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver() {_		return new DefaultNamespaceHandlerResolver(getResourceLoader().getClassLoader())__	};create,the,default,implementation,of,link,namespace,handler,resolver,used,if,none,is,specified,default,implementation,returns,an,instance,of,link,default,namespace,handler,resolver;protected,namespace,handler,resolver,create,default,namespace,handler,resolver,return,new,default,namespace,handler,resolver,get,resource,loader,get,class,loader
XmlBeanDefinitionReader -> protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver();1495868221;Create the default implementation of {@link NamespaceHandlerResolver} used if none is specified._Default implementation returns an instance of {@link DefaultNamespaceHandlerResolver}.;protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver() {_		return new DefaultNamespaceHandlerResolver(getResourceLoader().getClassLoader())__	};create,the,default,implementation,of,link,namespace,handler,resolver,used,if,none,is,specified,default,implementation,returns,an,instance,of,link,default,namespace,handler,resolver;protected,namespace,handler,resolver,create,default,namespace,handler,resolver,return,new,default,namespace,handler,resolver,get,resource,loader,get,class,loader
XmlBeanDefinitionReader -> protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver();1496837955;Create the default implementation of {@link NamespaceHandlerResolver} used if none is specified._Default implementation returns an instance of {@link DefaultNamespaceHandlerResolver}.;protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver() {_		ClassLoader cl = (getResourceLoader() != null ? getResourceLoader().getClassLoader() : getBeanClassLoader())__		return new DefaultNamespaceHandlerResolver(cl)__	};create,the,default,implementation,of,link,namespace,handler,resolver,used,if,none,is,specified,default,implementation,returns,an,instance,of,link,default,namespace,handler,resolver;protected,namespace,handler,resolver,create,default,namespace,handler,resolver,class,loader,cl,get,resource,loader,null,get,resource,loader,get,class,loader,get,bean,class,loader,return,new,default,namespace,handler,resolver,cl
XmlBeanDefinitionReader -> protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver();1498780456;Create the default implementation of {@link NamespaceHandlerResolver} used if none is specified._Default implementation returns an instance of {@link DefaultNamespaceHandlerResolver}.;protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver() {_		ClassLoader cl = (getResourceLoader() != null ? getResourceLoader().getClassLoader() : getBeanClassLoader())__		return new DefaultNamespaceHandlerResolver(cl)__	};create,the,default,implementation,of,link,namespace,handler,resolver,used,if,none,is,specified,default,implementation,returns,an,instance,of,link,default,namespace,handler,resolver;protected,namespace,handler,resolver,create,default,namespace,handler,resolver,class,loader,cl,get,resource,loader,null,get,resource,loader,get,class,loader,get,bean,class,loader,return,new,default,namespace,handler,resolver,cl
XmlBeanDefinitionReader -> protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver();1530174524;Create the default implementation of {@link NamespaceHandlerResolver} used if none is specified._Default implementation returns an instance of {@link DefaultNamespaceHandlerResolver}.;protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver() {_		ClassLoader cl = (getResourceLoader() != null ? getResourceLoader().getClassLoader() : getBeanClassLoader())__		return new DefaultNamespaceHandlerResolver(cl)__	};create,the,default,implementation,of,link,namespace,handler,resolver,used,if,none,is,specified,default,implementation,returns,an,instance,of,link,default,namespace,handler,resolver;protected,namespace,handler,resolver,create,default,namespace,handler,resolver,class,loader,cl,get,resource,loader,null,get,resource,loader,get,class,loader,get,bean,class,loader,return,new,default,namespace,handler,resolver,cl
XmlBeanDefinitionReader -> protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver();1532091916;Create the default implementation of {@link NamespaceHandlerResolver} used if none is specified._Default implementation returns an instance of {@link DefaultNamespaceHandlerResolver}.;protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver() {_		ClassLoader cl = (getResourceLoader() != null ? getResourceLoader().getClassLoader() : getBeanClassLoader())__		return new DefaultNamespaceHandlerResolver(cl)__	};create,the,default,implementation,of,link,namespace,handler,resolver,used,if,none,is,specified,default,implementation,returns,an,instance,of,link,default,namespace,handler,resolver;protected,namespace,handler,resolver,create,default,namespace,handler,resolver,class,loader,cl,get,resource,loader,null,get,resource,loader,get,class,loader,get,bean,class,loader,return,new,default,namespace,handler,resolver,cl
XmlBeanDefinitionReader -> protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver();1532706365;Create the default implementation of {@link NamespaceHandlerResolver} used if none is specified._Default implementation returns an instance of {@link DefaultNamespaceHandlerResolver}.;protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver() {_		ClassLoader cl = (getResourceLoader() != null ? getResourceLoader().getClassLoader() : getBeanClassLoader())__		return new DefaultNamespaceHandlerResolver(cl)__	};create,the,default,implementation,of,link,namespace,handler,resolver,used,if,none,is,specified,default,implementation,returns,an,instance,of,link,default,namespace,handler,resolver;protected,namespace,handler,resolver,create,default,namespace,handler,resolver,class,loader,cl,get,resource,loader,null,get,resource,loader,get,class,loader,get,bean,class,loader,return,new,default,namespace,handler,resolver,cl
XmlBeanDefinitionReader -> protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver();1532710698;Create the default implementation of {@link NamespaceHandlerResolver} used if none is specified._<p>The default implementation returns an instance of {@link DefaultNamespaceHandlerResolver}._@see DefaultNamespaceHandlerResolver#DefaultNamespaceHandlerResolver(ClassLoader);protected NamespaceHandlerResolver createDefaultNamespaceHandlerResolver() {_		ClassLoader cl = (getResourceLoader() != null ? getResourceLoader().getClassLoader() : getBeanClassLoader())__		return new DefaultNamespaceHandlerResolver(cl)__	};create,the,default,implementation,of,link,namespace,handler,resolver,used,if,none,is,specified,p,the,default,implementation,returns,an,instance,of,link,default,namespace,handler,resolver,see,default,namespace,handler,resolver,default,namespace,handler,resolver,class,loader;protected,namespace,handler,resolver,create,default,namespace,handler,resolver,class,loader,cl,get,resource,loader,null,get,resource,loader,get,class,loader,get,bean,class,loader,return,new,default,namespace,handler,resolver,cl
XmlBeanDefinitionReader -> public void setSourceExtractor(@Nullable SourceExtractor sourceExtractor);1496837955;Specify the {@link SourceExtractor} to use._<p>The default implementation is {@link NullSourceExtractor} which simply returns {@code null}_as the source object. This means that - during normal runtime execution -_no additional source metadata is attached to the bean configuration metadata.;public void setSourceExtractor(@Nullable SourceExtractor sourceExtractor) {_		this.sourceExtractor = (sourceExtractor != null ? sourceExtractor : new NullSourceExtractor())__	};specify,the,link,source,extractor,to,use,p,the,default,implementation,is,link,null,source,extractor,which,simply,returns,code,null,as,the,source,object,this,means,that,during,normal,runtime,execution,no,additional,source,metadata,is,attached,to,the,bean,configuration,metadata;public,void,set,source,extractor,nullable,source,extractor,source,extractor,this,source,extractor,source,extractor,null,source,extractor,new,null,source,extractor
XmlBeanDefinitionReader -> public void setSourceExtractor(@Nullable SourceExtractor sourceExtractor);1498780456;Specify the {@link SourceExtractor} to use._<p>The default implementation is {@link NullSourceExtractor} which simply returns {@code null}_as the source object. This means that - during normal runtime execution -_no additional source metadata is attached to the bean configuration metadata.;public void setSourceExtractor(@Nullable SourceExtractor sourceExtractor) {_		this.sourceExtractor = (sourceExtractor != null ? sourceExtractor : new NullSourceExtractor())__	};specify,the,link,source,extractor,to,use,p,the,default,implementation,is,link,null,source,extractor,which,simply,returns,code,null,as,the,source,object,this,means,that,during,normal,runtime,execution,no,additional,source,metadata,is,attached,to,the,bean,configuration,metadata;public,void,set,source,extractor,nullable,source,extractor,source,extractor,this,source,extractor,source,extractor,null,source,extractor,new,null,source,extractor
XmlBeanDefinitionReader -> public void setSourceExtractor(@Nullable SourceExtractor sourceExtractor);1530174524;Specify the {@link SourceExtractor} to use._<p>The default implementation is {@link NullSourceExtractor} which simply returns {@code null}_as the source object. This means that - during normal runtime execution -_no additional source metadata is attached to the bean configuration metadata.;public void setSourceExtractor(@Nullable SourceExtractor sourceExtractor) {_		this.sourceExtractor = (sourceExtractor != null ? sourceExtractor : new NullSourceExtractor())__	};specify,the,link,source,extractor,to,use,p,the,default,implementation,is,link,null,source,extractor,which,simply,returns,code,null,as,the,source,object,this,means,that,during,normal,runtime,execution,no,additional,source,metadata,is,attached,to,the,bean,configuration,metadata;public,void,set,source,extractor,nullable,source,extractor,source,extractor,this,source,extractor,source,extractor,null,source,extractor,new,null,source,extractor
XmlBeanDefinitionReader -> public void setSourceExtractor(@Nullable SourceExtractor sourceExtractor);1532091916;Specify the {@link SourceExtractor} to use._<p>The default implementation is {@link NullSourceExtractor} which simply returns {@code null}_as the source object. This means that - during normal runtime execution -_no additional source metadata is attached to the bean configuration metadata.;public void setSourceExtractor(@Nullable SourceExtractor sourceExtractor) {_		this.sourceExtractor = (sourceExtractor != null ? sourceExtractor : new NullSourceExtractor())__	};specify,the,link,source,extractor,to,use,p,the,default,implementation,is,link,null,source,extractor,which,simply,returns,code,null,as,the,source,object,this,means,that,during,normal,runtime,execution,no,additional,source,metadata,is,attached,to,the,bean,configuration,metadata;public,void,set,source,extractor,nullable,source,extractor,source,extractor,this,source,extractor,source,extractor,null,source,extractor,new,null,source,extractor
XmlBeanDefinitionReader -> public void setSourceExtractor(@Nullable SourceExtractor sourceExtractor);1532706365;Specify the {@link SourceExtractor} to use._<p>The default implementation is {@link NullSourceExtractor} which simply returns {@code null}_as the source object. This means that - during normal runtime execution -_no additional source metadata is attached to the bean configuration metadata.;public void setSourceExtractor(@Nullable SourceExtractor sourceExtractor) {_		this.sourceExtractor = (sourceExtractor != null ? sourceExtractor : new NullSourceExtractor())__	};specify,the,link,source,extractor,to,use,p,the,default,implementation,is,link,null,source,extractor,which,simply,returns,code,null,as,the,source,object,this,means,that,during,normal,runtime,execution,no,additional,source,metadata,is,attached,to,the,bean,configuration,metadata;public,void,set,source,extractor,nullable,source,extractor,source,extractor,this,source,extractor,source,extractor,null,source,extractor,new,null,source,extractor
XmlBeanDefinitionReader -> public void setSourceExtractor(@Nullable SourceExtractor sourceExtractor);1532710698;Specify the {@link SourceExtractor} to use._<p>The default implementation is {@link NullSourceExtractor} which simply returns {@code null}_as the source object. This means that - during normal runtime execution -_no additional source metadata is attached to the bean configuration metadata.;public void setSourceExtractor(@Nullable SourceExtractor sourceExtractor) {_		this.sourceExtractor = (sourceExtractor != null ? sourceExtractor : new NullSourceExtractor())__	};specify,the,link,source,extractor,to,use,p,the,default,implementation,is,link,null,source,extractor,which,simply,returns,code,null,as,the,source,object,this,means,that,during,normal,runtime,execution,no,additional,source,metadata,is,attached,to,the,bean,configuration,metadata;public,void,set,source,extractor,nullable,source,extractor,source,extractor,this,source,extractor,source,extractor,null,source,extractor,new,null,source,extractor
XmlBeanDefinitionReader -> protected EntityResolver getEntityResolver();1328020251;Return the EntityResolver to use, building a default resolver_if none specified.;protected EntityResolver getEntityResolver() {_		if (this.entityResolver == null) {_			_			ResourceLoader resourceLoader = getResourceLoader()__			if (resourceLoader != null) {_				this.entityResolver = new ResourceEntityResolver(resourceLoader)__			}_			else {_				this.entityResolver = new DelegatingEntityResolver(getBeanClassLoader())__			}_		}_		return this.entityResolver__	};return,the,entity,resolver,to,use,building,a,default,resolver,if,none,specified;protected,entity,resolver,get,entity,resolver,if,this,entity,resolver,null,resource,loader,resource,loader,get,resource,loader,if,resource,loader,null,this,entity,resolver,new,resource,entity,resolver,resource,loader,else,this,entity,resolver,new,delegating,entity,resolver,get,bean,class,loader,return,this,entity,resolver
XmlBeanDefinitionReader -> protected EntityResolver getEntityResolver();1356735495;Return the EntityResolver to use, building a default resolver_if none specified.;protected EntityResolver getEntityResolver() {_		if (this.entityResolver == null) {_			_			ResourceLoader resourceLoader = getResourceLoader()__			if (resourceLoader != null) {_				this.entityResolver = new ResourceEntityResolver(resourceLoader)__			}_			else {_				this.entityResolver = new DelegatingEntityResolver(getBeanClassLoader())__			}_		}_		return this.entityResolver__	};return,the,entity,resolver,to,use,building,a,default,resolver,if,none,specified;protected,entity,resolver,get,entity,resolver,if,this,entity,resolver,null,resource,loader,resource,loader,get,resource,loader,if,resource,loader,null,this,entity,resolver,new,resource,entity,resolver,resource,loader,else,this,entity,resolver,new,delegating,entity,resolver,get,bean,class,loader,return,this,entity,resolver
XmlBeanDefinitionReader -> protected EntityResolver getEntityResolver();1357119239;Return the EntityResolver to use, building a default resolver_if none specified.;protected EntityResolver getEntityResolver() {_		if (this.entityResolver == null) {_			_			ResourceLoader resourceLoader = getResourceLoader()__			if (resourceLoader != null) {_				this.entityResolver = new ResourceEntityResolver(resourceLoader)__			}_			else {_				this.entityResolver = new DelegatingEntityResolver(getBeanClassLoader())__			}_		}_		return this.entityResolver__	};return,the,entity,resolver,to,use,building,a,default,resolver,if,none,specified;protected,entity,resolver,get,entity,resolver,if,this,entity,resolver,null,resource,loader,resource,loader,get,resource,loader,if,resource,loader,null,this,entity,resolver,new,resource,entity,resolver,resource,loader,else,this,entity,resolver,new,delegating,entity,resolver,get,bean,class,loader,return,this,entity,resolver
XmlBeanDefinitionReader -> protected EntityResolver getEntityResolver();1368482696;Return the EntityResolver to use, building a default resolver_if none specified.;protected EntityResolver getEntityResolver() {_		if (this.entityResolver == null) {_			_			ResourceLoader resourceLoader = getResourceLoader()__			if (resourceLoader != null) {_				this.entityResolver = new ResourceEntityResolver(resourceLoader)__			}_			else {_				this.entityResolver = new DelegatingEntityResolver(getBeanClassLoader())__			}_		}_		return this.entityResolver__	};return,the,entity,resolver,to,use,building,a,default,resolver,if,none,specified;protected,entity,resolver,get,entity,resolver,if,this,entity,resolver,null,resource,loader,resource,loader,get,resource,loader,if,resource,loader,null,this,entity,resolver,new,resource,entity,resolver,resource,loader,else,this,entity,resolver,new,delegating,entity,resolver,get,bean,class,loader,return,this,entity,resolver
XmlBeanDefinitionReader -> protected EntityResolver getEntityResolver();1382030648;Return the EntityResolver to use, building a default resolver_if none specified.;protected EntityResolver getEntityResolver() {_		if (this.entityResolver == null) {_			_			ResourceLoader resourceLoader = getResourceLoader()__			if (resourceLoader != null) {_				this.entityResolver = new ResourceEntityResolver(resourceLoader)__			}_			else {_				this.entityResolver = new DelegatingEntityResolver(getBeanClassLoader())__			}_		}_		return this.entityResolver__	};return,the,entity,resolver,to,use,building,a,default,resolver,if,none,specified;protected,entity,resolver,get,entity,resolver,if,this,entity,resolver,null,resource,loader,resource,loader,get,resource,loader,if,resource,loader,null,this,entity,resolver,new,resource,entity,resolver,resource,loader,else,this,entity,resolver,new,delegating,entity,resolver,get,bean,class,loader,return,this,entity,resolver
XmlBeanDefinitionReader -> protected EntityResolver getEntityResolver();1411599760;Return the EntityResolver to use, building a default resolver_if none specified.;protected EntityResolver getEntityResolver() {_		if (this.entityResolver == null) {_			_			ResourceLoader resourceLoader = getResourceLoader()__			if (resourceLoader != null) {_				this.entityResolver = new ResourceEntityResolver(resourceLoader)__			}_			else {_				this.entityResolver = new DelegatingEntityResolver(getBeanClassLoader())__			}_		}_		return this.entityResolver__	};return,the,entity,resolver,to,use,building,a,default,resolver,if,none,specified;protected,entity,resolver,get,entity,resolver,if,this,entity,resolver,null,resource,loader,resource,loader,get,resource,loader,if,resource,loader,null,this,entity,resolver,new,resource,entity,resolver,resource,loader,else,this,entity,resolver,new,delegating,entity,resolver,get,bean,class,loader,return,this,entity,resolver
XmlBeanDefinitionReader -> protected EntityResolver getEntityResolver();1419966315;Return the EntityResolver to use, building a default resolver_if none specified.;protected EntityResolver getEntityResolver() {_		if (this.entityResolver == null) {_			_			ResourceLoader resourceLoader = getResourceLoader()__			if (resourceLoader != null) {_				this.entityResolver = new ResourceEntityResolver(resourceLoader)__			}_			else {_				this.entityResolver = new DelegatingEntityResolver(getBeanClassLoader())__			}_		}_		return this.entityResolver__	};return,the,entity,resolver,to,use,building,a,default,resolver,if,none,specified;protected,entity,resolver,get,entity,resolver,if,this,entity,resolver,null,resource,loader,resource,loader,get,resource,loader,if,resource,loader,null,this,entity,resolver,new,resource,entity,resolver,resource,loader,else,this,entity,resolver,new,delegating,entity,resolver,get,bean,class,loader,return,this,entity,resolver
XmlBeanDefinitionReader -> protected EntityResolver getEntityResolver();1467730834;Return the EntityResolver to use, building a default resolver_if none specified.;protected EntityResolver getEntityResolver() {_		if (this.entityResolver == null) {_			_			ResourceLoader resourceLoader = getResourceLoader()__			if (resourceLoader != null) {_				this.entityResolver = new ResourceEntityResolver(resourceLoader)__			}_			else {_				this.entityResolver = new DelegatingEntityResolver(getBeanClassLoader())__			}_		}_		return this.entityResolver__	};return,the,entity,resolver,to,use,building,a,default,resolver,if,none,specified;protected,entity,resolver,get,entity,resolver,if,this,entity,resolver,null,resource,loader,resource,loader,get,resource,loader,if,resource,loader,null,this,entity,resolver,new,resource,entity,resolver,resource,loader,else,this,entity,resolver,new,delegating,entity,resolver,get,bean,class,loader,return,this,entity,resolver
XmlBeanDefinitionReader -> protected EntityResolver getEntityResolver();1495868221;Return the EntityResolver to use, building a default resolver_if none specified.;protected EntityResolver getEntityResolver() {_		if (this.entityResolver == null) {_			_			ResourceLoader resourceLoader = getResourceLoader()__			if (resourceLoader != null) {_				this.entityResolver = new ResourceEntityResolver(resourceLoader)__			}_			else {_				this.entityResolver = new DelegatingEntityResolver(getBeanClassLoader())__			}_		}_		return this.entityResolver__	};return,the,entity,resolver,to,use,building,a,default,resolver,if,none,specified;protected,entity,resolver,get,entity,resolver,if,this,entity,resolver,null,resource,loader,resource,loader,get,resource,loader,if,resource,loader,null,this,entity,resolver,new,resource,entity,resolver,resource,loader,else,this,entity,resolver,new,delegating,entity,resolver,get,bean,class,loader,return,this,entity,resolver
XmlBeanDefinitionReader -> protected EntityResolver getEntityResolver();1496837955;Return the EntityResolver to use, building a default resolver_if none specified.;protected EntityResolver getEntityResolver() {_		if (this.entityResolver == null) {_			_			ResourceLoader resourceLoader = getResourceLoader()__			if (resourceLoader != null) {_				this.entityResolver = new ResourceEntityResolver(resourceLoader)__			}_			else {_				this.entityResolver = new DelegatingEntityResolver(getBeanClassLoader())__			}_		}_		return this.entityResolver__	};return,the,entity,resolver,to,use,building,a,default,resolver,if,none,specified;protected,entity,resolver,get,entity,resolver,if,this,entity,resolver,null,resource,loader,resource,loader,get,resource,loader,if,resource,loader,null,this,entity,resolver,new,resource,entity,resolver,resource,loader,else,this,entity,resolver,new,delegating,entity,resolver,get,bean,class,loader,return,this,entity,resolver
XmlBeanDefinitionReader -> protected EntityResolver getEntityResolver();1498780456;Return the EntityResolver to use, building a default resolver_if none specified.;protected EntityResolver getEntityResolver() {_		if (this.entityResolver == null) {_			_			ResourceLoader resourceLoader = getResourceLoader()__			if (resourceLoader != null) {_				this.entityResolver = new ResourceEntityResolver(resourceLoader)__			}_			else {_				this.entityResolver = new DelegatingEntityResolver(getBeanClassLoader())__			}_		}_		return this.entityResolver__	};return,the,entity,resolver,to,use,building,a,default,resolver,if,none,specified;protected,entity,resolver,get,entity,resolver,if,this,entity,resolver,null,resource,loader,resource,loader,get,resource,loader,if,resource,loader,null,this,entity,resolver,new,resource,entity,resolver,resource,loader,else,this,entity,resolver,new,delegating,entity,resolver,get,bean,class,loader,return,this,entity,resolver
XmlBeanDefinitionReader -> protected EntityResolver getEntityResolver();1530174524;Return the EntityResolver to use, building a default resolver_if none specified.;protected EntityResolver getEntityResolver() {_		if (this.entityResolver == null) {_			_			ResourceLoader resourceLoader = getResourceLoader()__			if (resourceLoader != null) {_				this.entityResolver = new ResourceEntityResolver(resourceLoader)__			}_			else {_				this.entityResolver = new DelegatingEntityResolver(getBeanClassLoader())__			}_		}_		return this.entityResolver__	};return,the,entity,resolver,to,use,building,a,default,resolver,if,none,specified;protected,entity,resolver,get,entity,resolver,if,this,entity,resolver,null,resource,loader,resource,loader,get,resource,loader,if,resource,loader,null,this,entity,resolver,new,resource,entity,resolver,resource,loader,else,this,entity,resolver,new,delegating,entity,resolver,get,bean,class,loader,return,this,entity,resolver
XmlBeanDefinitionReader -> protected EntityResolver getEntityResolver();1532091916;Return the EntityResolver to use, building a default resolver_if none specified.;protected EntityResolver getEntityResolver() {_		if (this.entityResolver == null) {_			_			ResourceLoader resourceLoader = getResourceLoader()__			if (resourceLoader != null) {_				this.entityResolver = new ResourceEntityResolver(resourceLoader)__			}_			else {_				this.entityResolver = new DelegatingEntityResolver(getBeanClassLoader())__			}_		}_		return this.entityResolver__	};return,the,entity,resolver,to,use,building,a,default,resolver,if,none,specified;protected,entity,resolver,get,entity,resolver,if,this,entity,resolver,null,resource,loader,resource,loader,get,resource,loader,if,resource,loader,null,this,entity,resolver,new,resource,entity,resolver,resource,loader,else,this,entity,resolver,new,delegating,entity,resolver,get,bean,class,loader,return,this,entity,resolver
XmlBeanDefinitionReader -> protected EntityResolver getEntityResolver();1532706365;Return the EntityResolver to use, building a default resolver_if none specified.;protected EntityResolver getEntityResolver() {_		if (this.entityResolver == null) {_			_			ResourceLoader resourceLoader = getResourceLoader()__			if (resourceLoader != null) {_				this.entityResolver = new ResourceEntityResolver(resourceLoader)__			}_			else {_				this.entityResolver = new DelegatingEntityResolver(getBeanClassLoader())__			}_		}_		return this.entityResolver__	};return,the,entity,resolver,to,use,building,a,default,resolver,if,none,specified;protected,entity,resolver,get,entity,resolver,if,this,entity,resolver,null,resource,loader,resource,loader,get,resource,loader,if,resource,loader,null,this,entity,resolver,new,resource,entity,resolver,resource,loader,else,this,entity,resolver,new,delegating,entity,resolver,get,bean,class,loader,return,this,entity,resolver
XmlBeanDefinitionReader -> protected EntityResolver getEntityResolver();1532710698;Return the EntityResolver to use, building a default resolver_if none specified.;protected EntityResolver getEntityResolver() {_		if (this.entityResolver == null) {_			_			ResourceLoader resourceLoader = getResourceLoader()__			if (resourceLoader != null) {_				this.entityResolver = new ResourceEntityResolver(resourceLoader)__			}_			else {_				this.entityResolver = new DelegatingEntityResolver(getBeanClassLoader())__			}_		}_		return this.entityResolver__	};return,the,entity,resolver,to,use,building,a,default,resolver,if,none,specified;protected,entity,resolver,get,entity,resolver,if,this,entity,resolver,null,resource,loader,resource,loader,get,resource,loader,if,resource,loader,null,this,entity,resolver,new,resource,entity,resolver,resource,loader,else,this,entity,resolver,new,delegating,entity,resolver,get,bean,class,loader,return,this,entity,resolver
XmlBeanDefinitionReader -> public void setValidationMode(int validationMode);1328020251;Set the validation mode to use. Defaults to {@link #VALIDATION_AUTO}._<p>Note that this only activates or deactivates validation itself._If you are switching validation off for schema files, you might need to_activate schema namespace support explicitly: see {@link #setNamespaceAware}.;public void setValidationMode(int validationMode) {_		this.validationMode = validationMode__	};set,the,validation,mode,to,use,defaults,to,link,p,note,that,this,only,activates,or,deactivates,validation,itself,if,you,are,switching,validation,off,for,schema,files,you,might,need,to,activate,schema,namespace,support,explicitly,see,link,set,namespace,aware;public,void,set,validation,mode,int,validation,mode,this,validation,mode,validation,mode
XmlBeanDefinitionReader -> public void setValidationMode(int validationMode);1356735495;Set the validation mode to use. Defaults to {@link #VALIDATION_AUTO}._<p>Note that this only activates or deactivates validation itself._If you are switching validation off for schema files, you might need to_activate schema namespace support explicitly: see {@link #setNamespaceAware}.;public void setValidationMode(int validationMode) {_		this.validationMode = validationMode__	};set,the,validation,mode,to,use,defaults,to,link,p,note,that,this,only,activates,or,deactivates,validation,itself,if,you,are,switching,validation,off,for,schema,files,you,might,need,to,activate,schema,namespace,support,explicitly,see,link,set,namespace,aware;public,void,set,validation,mode,int,validation,mode,this,validation,mode,validation,mode
XmlBeanDefinitionReader -> public void setValidationMode(int validationMode);1357119239;Set the validation mode to use. Defaults to {@link #VALIDATION_AUTO}._<p>Note that this only activates or deactivates validation itself._If you are switching validation off for schema files, you might need to_activate schema namespace support explicitly: see {@link #setNamespaceAware}.;public void setValidationMode(int validationMode) {_		this.validationMode = validationMode__	};set,the,validation,mode,to,use,defaults,to,link,p,note,that,this,only,activates,or,deactivates,validation,itself,if,you,are,switching,validation,off,for,schema,files,you,might,need,to,activate,schema,namespace,support,explicitly,see,link,set,namespace,aware;public,void,set,validation,mode,int,validation,mode,this,validation,mode,validation,mode
XmlBeanDefinitionReader -> public void setValidationMode(int validationMode);1368482696;Set the validation mode to use. Defaults to {@link #VALIDATION_AUTO}._<p>Note that this only activates or deactivates validation itself._If you are switching validation off for schema files, you might need to_activate schema namespace support explicitly: see {@link #setNamespaceAware}.;public void setValidationMode(int validationMode) {_		this.validationMode = validationMode__	};set,the,validation,mode,to,use,defaults,to,link,p,note,that,this,only,activates,or,deactivates,validation,itself,if,you,are,switching,validation,off,for,schema,files,you,might,need,to,activate,schema,namespace,support,explicitly,see,link,set,namespace,aware;public,void,set,validation,mode,int,validation,mode,this,validation,mode,validation,mode
XmlBeanDefinitionReader -> public void setValidationMode(int validationMode);1382030648;Set the validation mode to use. Defaults to {@link #VALIDATION_AUTO}._<p>Note that this only activates or deactivates validation itself._If you are switching validation off for schema files, you might need to_activate schema namespace support explicitly: see {@link #setNamespaceAware}.;public void setValidationMode(int validationMode) {_		this.validationMode = validationMode__	};set,the,validation,mode,to,use,defaults,to,link,p,note,that,this,only,activates,or,deactivates,validation,itself,if,you,are,switching,validation,off,for,schema,files,you,might,need,to,activate,schema,namespace,support,explicitly,see,link,set,namespace,aware;public,void,set,validation,mode,int,validation,mode,this,validation,mode,validation,mode
XmlBeanDefinitionReader -> public void setValidationMode(int validationMode);1411599760;Set the validation mode to use. Defaults to {@link #VALIDATION_AUTO}._<p>Note that this only activates or deactivates validation itself._If you are switching validation off for schema files, you might need to_activate schema namespace support explicitly: see {@link #setNamespaceAware}.;public void setValidationMode(int validationMode) {_		this.validationMode = validationMode__	};set,the,validation,mode,to,use,defaults,to,link,p,note,that,this,only,activates,or,deactivates,validation,itself,if,you,are,switching,validation,off,for,schema,files,you,might,need,to,activate,schema,namespace,support,explicitly,see,link,set,namespace,aware;public,void,set,validation,mode,int,validation,mode,this,validation,mode,validation,mode
XmlBeanDefinitionReader -> public void setValidationMode(int validationMode);1419966315;Set the validation mode to use. Defaults to {@link #VALIDATION_AUTO}._<p>Note that this only activates or deactivates validation itself._If you are switching validation off for schema files, you might need to_activate schema namespace support explicitly: see {@link #setNamespaceAware}.;public void setValidationMode(int validationMode) {_		this.validationMode = validationMode__	};set,the,validation,mode,to,use,defaults,to,link,p,note,that,this,only,activates,or,deactivates,validation,itself,if,you,are,switching,validation,off,for,schema,files,you,might,need,to,activate,schema,namespace,support,explicitly,see,link,set,namespace,aware;public,void,set,validation,mode,int,validation,mode,this,validation,mode,validation,mode
XmlBeanDefinitionReader -> public void setValidationMode(int validationMode);1467730834;Set the validation mode to use. Defaults to {@link #VALIDATION_AUTO}._<p>Note that this only activates or deactivates validation itself._If you are switching validation off for schema files, you might need to_activate schema namespace support explicitly: see {@link #setNamespaceAware}.;public void setValidationMode(int validationMode) {_		this.validationMode = validationMode__	};set,the,validation,mode,to,use,defaults,to,link,p,note,that,this,only,activates,or,deactivates,validation,itself,if,you,are,switching,validation,off,for,schema,files,you,might,need,to,activate,schema,namespace,support,explicitly,see,link,set,namespace,aware;public,void,set,validation,mode,int,validation,mode,this,validation,mode,validation,mode
XmlBeanDefinitionReader -> public void setValidationMode(int validationMode);1495868221;Set the validation mode to use. Defaults to {@link #VALIDATION_AUTO}._<p>Note that this only activates or deactivates validation itself._If you are switching validation off for schema files, you might need to_activate schema namespace support explicitly: see {@link #setNamespaceAware}.;public void setValidationMode(int validationMode) {_		this.validationMode = validationMode__	};set,the,validation,mode,to,use,defaults,to,link,p,note,that,this,only,activates,or,deactivates,validation,itself,if,you,are,switching,validation,off,for,schema,files,you,might,need,to,activate,schema,namespace,support,explicitly,see,link,set,namespace,aware;public,void,set,validation,mode,int,validation,mode,this,validation,mode,validation,mode
XmlBeanDefinitionReader -> public void setValidationMode(int validationMode);1496837955;Set the validation mode to use. Defaults to {@link #VALIDATION_AUTO}._<p>Note that this only activates or deactivates validation itself._If you are switching validation off for schema files, you might need to_activate schema namespace support explicitly: see {@link #setNamespaceAware}.;public void setValidationMode(int validationMode) {_		this.validationMode = validationMode__	};set,the,validation,mode,to,use,defaults,to,link,p,note,that,this,only,activates,or,deactivates,validation,itself,if,you,are,switching,validation,off,for,schema,files,you,might,need,to,activate,schema,namespace,support,explicitly,see,link,set,namespace,aware;public,void,set,validation,mode,int,validation,mode,this,validation,mode,validation,mode
XmlBeanDefinitionReader -> public void setValidationMode(int validationMode);1498780456;Set the validation mode to use. Defaults to {@link #VALIDATION_AUTO}._<p>Note that this only activates or deactivates validation itself._If you are switching validation off for schema files, you might need to_activate schema namespace support explicitly: see {@link #setNamespaceAware}.;public void setValidationMode(int validationMode) {_		this.validationMode = validationMode__	};set,the,validation,mode,to,use,defaults,to,link,p,note,that,this,only,activates,or,deactivates,validation,itself,if,you,are,switching,validation,off,for,schema,files,you,might,need,to,activate,schema,namespace,support,explicitly,see,link,set,namespace,aware;public,void,set,validation,mode,int,validation,mode,this,validation,mode,validation,mode
XmlBeanDefinitionReader -> public void setValidationMode(int validationMode);1530174524;Set the validation mode to use. Defaults to {@link #VALIDATION_AUTO}._<p>Note that this only activates or deactivates validation itself._If you are switching validation off for schema files, you might need to_activate schema namespace support explicitly: see {@link #setNamespaceAware}.;public void setValidationMode(int validationMode) {_		this.validationMode = validationMode__	};set,the,validation,mode,to,use,defaults,to,link,p,note,that,this,only,activates,or,deactivates,validation,itself,if,you,are,switching,validation,off,for,schema,files,you,might,need,to,activate,schema,namespace,support,explicitly,see,link,set,namespace,aware;public,void,set,validation,mode,int,validation,mode,this,validation,mode,validation,mode
XmlBeanDefinitionReader -> public void setValidationMode(int validationMode);1532091916;Set the validation mode to use. Defaults to {@link #VALIDATION_AUTO}._<p>Note that this only activates or deactivates validation itself._If you are switching validation off for schema files, you might need to_activate schema namespace support explicitly: see {@link #setNamespaceAware}.;public void setValidationMode(int validationMode) {_		this.validationMode = validationMode__	};set,the,validation,mode,to,use,defaults,to,link,p,note,that,this,only,activates,or,deactivates,validation,itself,if,you,are,switching,validation,off,for,schema,files,you,might,need,to,activate,schema,namespace,support,explicitly,see,link,set,namespace,aware;public,void,set,validation,mode,int,validation,mode,this,validation,mode,validation,mode
XmlBeanDefinitionReader -> public void setValidationMode(int validationMode);1532706365;Set the validation mode to use. Defaults to {@link #VALIDATION_AUTO}._<p>Note that this only activates or deactivates validation itself._If you are switching validation off for schema files, you might need to_activate schema namespace support explicitly: see {@link #setNamespaceAware}.;public void setValidationMode(int validationMode) {_		this.validationMode = validationMode__	};set,the,validation,mode,to,use,defaults,to,link,p,note,that,this,only,activates,or,deactivates,validation,itself,if,you,are,switching,validation,off,for,schema,files,you,might,need,to,activate,schema,namespace,support,explicitly,see,link,set,namespace,aware;public,void,set,validation,mode,int,validation,mode,this,validation,mode,validation,mode
XmlBeanDefinitionReader -> public void setValidationMode(int validationMode);1532710698;Set the validation mode to use. Defaults to {@link #VALIDATION_AUTO}._<p>Note that this only activates or deactivates validation itself._If you are switching validation off for schema files, you might need to_activate schema namespace support explicitly: see {@link #setNamespaceAware}.;public void setValidationMode(int validationMode) {_		this.validationMode = validationMode__	};set,the,validation,mode,to,use,defaults,to,link,p,note,that,this,only,activates,or,deactivates,validation,itself,if,you,are,switching,validation,off,for,schema,files,you,might,need,to,activate,schema,namespace,support,explicitly,see,link,set,namespace,aware;public,void,set,validation,mode,int,validation,mode,this,validation,mode,validation,mode
XmlBeanDefinitionReader -> public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException;1328020251;Register the bean definitions contained in the given DOM document._Called by <code>loadBeanDefinitions</code>._<p>Creates a new instance of the parser class and invokes_<code>registerBeanDefinitions</code> on it._@param doc the DOM document_@param resource the resource descriptor (for context information)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of parsing errors_@see #loadBeanDefinitions_@see #setDocumentReaderClass_@see BeanDefinitionDocumentReader#registerBeanDefinitions;public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException {_		BeanDefinitionDocumentReader documentReader = createBeanDefinitionDocumentReader()__		documentReader.setEnvironment(this.getEnvironment())__		int countBefore = getRegistry().getBeanDefinitionCount()__		documentReader.registerBeanDefinitions(doc, createReaderContext(resource))__		return getRegistry().getBeanDefinitionCount() - countBefore__	};register,the,bean,definitions,contained,in,the,given,dom,document,called,by,code,load,bean,definitions,code,p,creates,a,new,instance,of,the,parser,class,and,invokes,code,register,bean,definitions,code,on,it,param,doc,the,dom,document,param,resource,the,resource,descriptor,for,context,information,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,parsing,errors,see,load,bean,definitions,see,set,document,reader,class,see,bean,definition,document,reader,register,bean,definitions;public,int,register,bean,definitions,document,doc,resource,resource,throws,bean,definition,store,exception,bean,definition,document,reader,document,reader,create,bean,definition,document,reader,document,reader,set,environment,this,get,environment,int,count,before,get,registry,get,bean,definition,count,document,reader,register,bean,definitions,doc,create,reader,context,resource,return,get,registry,get,bean,definition,count,count,before
XmlBeanDefinitionReader -> public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException;1356735495;Register the bean definitions contained in the given DOM document._Called by {@code loadBeanDefinitions}._<p>Creates a new instance of the parser class and invokes_{@code registerBeanDefinitions} on it._@param doc the DOM document_@param resource the resource descriptor (for context information)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of parsing errors_@see #loadBeanDefinitions_@see #setDocumentReaderClass_@see BeanDefinitionDocumentReader#registerBeanDefinitions;public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException {_		BeanDefinitionDocumentReader documentReader = createBeanDefinitionDocumentReader()__		documentReader.setEnvironment(this.getEnvironment())__		int countBefore = getRegistry().getBeanDefinitionCount()__		documentReader.registerBeanDefinitions(doc, createReaderContext(resource))__		return getRegistry().getBeanDefinitionCount() - countBefore__	};register,the,bean,definitions,contained,in,the,given,dom,document,called,by,code,load,bean,definitions,p,creates,a,new,instance,of,the,parser,class,and,invokes,code,register,bean,definitions,on,it,param,doc,the,dom,document,param,resource,the,resource,descriptor,for,context,information,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,parsing,errors,see,load,bean,definitions,see,set,document,reader,class,see,bean,definition,document,reader,register,bean,definitions;public,int,register,bean,definitions,document,doc,resource,resource,throws,bean,definition,store,exception,bean,definition,document,reader,document,reader,create,bean,definition,document,reader,document,reader,set,environment,this,get,environment,int,count,before,get,registry,get,bean,definition,count,document,reader,register,bean,definitions,doc,create,reader,context,resource,return,get,registry,get,bean,definition,count,count,before
XmlBeanDefinitionReader -> public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException;1357119239;Register the bean definitions contained in the given DOM document._Called by {@code loadBeanDefinitions}._<p>Creates a new instance of the parser class and invokes_{@code registerBeanDefinitions} on it._@param doc the DOM document_@param resource the resource descriptor (for context information)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of parsing errors_@see #loadBeanDefinitions_@see #setDocumentReaderClass_@see BeanDefinitionDocumentReader#registerBeanDefinitions;public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException {_		BeanDefinitionDocumentReader documentReader = createBeanDefinitionDocumentReader()__		documentReader.setEnvironment(this.getEnvironment())__		int countBefore = getRegistry().getBeanDefinitionCount()__		documentReader.registerBeanDefinitions(doc, createReaderContext(resource))__		return getRegistry().getBeanDefinitionCount() - countBefore__	};register,the,bean,definitions,contained,in,the,given,dom,document,called,by,code,load,bean,definitions,p,creates,a,new,instance,of,the,parser,class,and,invokes,code,register,bean,definitions,on,it,param,doc,the,dom,document,param,resource,the,resource,descriptor,for,context,information,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,parsing,errors,see,load,bean,definitions,see,set,document,reader,class,see,bean,definition,document,reader,register,bean,definitions;public,int,register,bean,definitions,document,doc,resource,resource,throws,bean,definition,store,exception,bean,definition,document,reader,document,reader,create,bean,definition,document,reader,document,reader,set,environment,this,get,environment,int,count,before,get,registry,get,bean,definition,count,document,reader,register,bean,definitions,doc,create,reader,context,resource,return,get,registry,get,bean,definition,count,count,before
XmlBeanDefinitionReader -> public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException;1368482696;Register the bean definitions contained in the given DOM document._Called by {@code loadBeanDefinitions}._<p>Creates a new instance of the parser class and invokes_{@code registerBeanDefinitions} on it._@param doc the DOM document_@param resource the resource descriptor (for context information)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of parsing errors_@see #loadBeanDefinitions_@see #setDocumentReaderClass_@see BeanDefinitionDocumentReader#registerBeanDefinitions;public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException {_		BeanDefinitionDocumentReader documentReader = createBeanDefinitionDocumentReader()__		documentReader.setEnvironment(this.getEnvironment())__		int countBefore = getRegistry().getBeanDefinitionCount()__		documentReader.registerBeanDefinitions(doc, createReaderContext(resource))__		return getRegistry().getBeanDefinitionCount() - countBefore__	};register,the,bean,definitions,contained,in,the,given,dom,document,called,by,code,load,bean,definitions,p,creates,a,new,instance,of,the,parser,class,and,invokes,code,register,bean,definitions,on,it,param,doc,the,dom,document,param,resource,the,resource,descriptor,for,context,information,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,parsing,errors,see,load,bean,definitions,see,set,document,reader,class,see,bean,definition,document,reader,register,bean,definitions;public,int,register,bean,definitions,document,doc,resource,resource,throws,bean,definition,store,exception,bean,definition,document,reader,document,reader,create,bean,definition,document,reader,document,reader,set,environment,this,get,environment,int,count,before,get,registry,get,bean,definition,count,document,reader,register,bean,definitions,doc,create,reader,context,resource,return,get,registry,get,bean,definition,count,count,before
XmlBeanDefinitionReader -> public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException;1382030648;Register the bean definitions contained in the given DOM document._Called by {@code loadBeanDefinitions}._<p>Creates a new instance of the parser class and invokes_{@code registerBeanDefinitions} on it._@param doc the DOM document_@param resource the resource descriptor (for context information)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of parsing errors_@see #loadBeanDefinitions_@see #setDocumentReaderClass_@see BeanDefinitionDocumentReader#registerBeanDefinitions;public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException {_		BeanDefinitionDocumentReader documentReader = createBeanDefinitionDocumentReader()__		documentReader.setEnvironment(this.getEnvironment())__		int countBefore = getRegistry().getBeanDefinitionCount()__		documentReader.registerBeanDefinitions(doc, createReaderContext(resource))__		return getRegistry().getBeanDefinitionCount() - countBefore__	};register,the,bean,definitions,contained,in,the,given,dom,document,called,by,code,load,bean,definitions,p,creates,a,new,instance,of,the,parser,class,and,invokes,code,register,bean,definitions,on,it,param,doc,the,dom,document,param,resource,the,resource,descriptor,for,context,information,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,parsing,errors,see,load,bean,definitions,see,set,document,reader,class,see,bean,definition,document,reader,register,bean,definitions;public,int,register,bean,definitions,document,doc,resource,resource,throws,bean,definition,store,exception,bean,definition,document,reader,document,reader,create,bean,definition,document,reader,document,reader,set,environment,this,get,environment,int,count,before,get,registry,get,bean,definition,count,document,reader,register,bean,definitions,doc,create,reader,context,resource,return,get,registry,get,bean,definition,count,count,before
XmlBeanDefinitionReader -> public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException;1419966315;Register the bean definitions contained in the given DOM document._Called by {@code loadBeanDefinitions}._<p>Creates a new instance of the parser class and invokes_{@code registerBeanDefinitions} on it._@param doc the DOM document_@param resource the resource descriptor (for context information)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of parsing errors_@see #loadBeanDefinitions_@see #setDocumentReaderClass_@see BeanDefinitionDocumentReader#registerBeanDefinitions;public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException {_		BeanDefinitionDocumentReader documentReader = createBeanDefinitionDocumentReader()__		int countBefore = getRegistry().getBeanDefinitionCount()__		documentReader.registerBeanDefinitions(doc, createReaderContext(resource))__		return getRegistry().getBeanDefinitionCount() - countBefore__	};register,the,bean,definitions,contained,in,the,given,dom,document,called,by,code,load,bean,definitions,p,creates,a,new,instance,of,the,parser,class,and,invokes,code,register,bean,definitions,on,it,param,doc,the,dom,document,param,resource,the,resource,descriptor,for,context,information,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,parsing,errors,see,load,bean,definitions,see,set,document,reader,class,see,bean,definition,document,reader,register,bean,definitions;public,int,register,bean,definitions,document,doc,resource,resource,throws,bean,definition,store,exception,bean,definition,document,reader,document,reader,create,bean,definition,document,reader,int,count,before,get,registry,get,bean,definition,count,document,reader,register,bean,definitions,doc,create,reader,context,resource,return,get,registry,get,bean,definition,count,count,before
XmlBeanDefinitionReader -> public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException;1467730834;Register the bean definitions contained in the given DOM document._Called by {@code loadBeanDefinitions}._<p>Creates a new instance of the parser class and invokes_{@code registerBeanDefinitions} on it._@param doc the DOM document_@param resource the resource descriptor (for context information)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of parsing errors_@see #loadBeanDefinitions_@see #setDocumentReaderClass_@see BeanDefinitionDocumentReader#registerBeanDefinitions;public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException {_		BeanDefinitionDocumentReader documentReader = createBeanDefinitionDocumentReader()__		int countBefore = getRegistry().getBeanDefinitionCount()__		documentReader.registerBeanDefinitions(doc, createReaderContext(resource))__		return getRegistry().getBeanDefinitionCount() - countBefore__	};register,the,bean,definitions,contained,in,the,given,dom,document,called,by,code,load,bean,definitions,p,creates,a,new,instance,of,the,parser,class,and,invokes,code,register,bean,definitions,on,it,param,doc,the,dom,document,param,resource,the,resource,descriptor,for,context,information,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,parsing,errors,see,load,bean,definitions,see,set,document,reader,class,see,bean,definition,document,reader,register,bean,definitions;public,int,register,bean,definitions,document,doc,resource,resource,throws,bean,definition,store,exception,bean,definition,document,reader,document,reader,create,bean,definition,document,reader,int,count,before,get,registry,get,bean,definition,count,document,reader,register,bean,definitions,doc,create,reader,context,resource,return,get,registry,get,bean,definition,count,count,before
XmlBeanDefinitionReader -> public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException;1495868221;Register the bean definitions contained in the given DOM document._Called by {@code loadBeanDefinitions}._<p>Creates a new instance of the parser class and invokes_{@code registerBeanDefinitions} on it._@param doc the DOM document_@param resource the resource descriptor (for context information)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of parsing errors_@see #loadBeanDefinitions_@see #setDocumentReaderClass_@see BeanDefinitionDocumentReader#registerBeanDefinitions;public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException {_		BeanDefinitionDocumentReader documentReader = createBeanDefinitionDocumentReader()__		int countBefore = getRegistry().getBeanDefinitionCount()__		documentReader.registerBeanDefinitions(doc, createReaderContext(resource))__		return getRegistry().getBeanDefinitionCount() - countBefore__	};register,the,bean,definitions,contained,in,the,given,dom,document,called,by,code,load,bean,definitions,p,creates,a,new,instance,of,the,parser,class,and,invokes,code,register,bean,definitions,on,it,param,doc,the,dom,document,param,resource,the,resource,descriptor,for,context,information,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,parsing,errors,see,load,bean,definitions,see,set,document,reader,class,see,bean,definition,document,reader,register,bean,definitions;public,int,register,bean,definitions,document,doc,resource,resource,throws,bean,definition,store,exception,bean,definition,document,reader,document,reader,create,bean,definition,document,reader,int,count,before,get,registry,get,bean,definition,count,document,reader,register,bean,definitions,doc,create,reader,context,resource,return,get,registry,get,bean,definition,count,count,before
XmlBeanDefinitionReader -> public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException;1496837955;Register the bean definitions contained in the given DOM document._Called by {@code loadBeanDefinitions}._<p>Creates a new instance of the parser class and invokes_{@code registerBeanDefinitions} on it._@param doc the DOM document_@param resource the resource descriptor (for context information)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of parsing errors_@see #loadBeanDefinitions_@see #setDocumentReaderClass_@see BeanDefinitionDocumentReader#registerBeanDefinitions;public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException {_		BeanDefinitionDocumentReader documentReader = createBeanDefinitionDocumentReader()__		int countBefore = getRegistry().getBeanDefinitionCount()__		documentReader.registerBeanDefinitions(doc, createReaderContext(resource))__		return getRegistry().getBeanDefinitionCount() - countBefore__	};register,the,bean,definitions,contained,in,the,given,dom,document,called,by,code,load,bean,definitions,p,creates,a,new,instance,of,the,parser,class,and,invokes,code,register,bean,definitions,on,it,param,doc,the,dom,document,param,resource,the,resource,descriptor,for,context,information,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,parsing,errors,see,load,bean,definitions,see,set,document,reader,class,see,bean,definition,document,reader,register,bean,definitions;public,int,register,bean,definitions,document,doc,resource,resource,throws,bean,definition,store,exception,bean,definition,document,reader,document,reader,create,bean,definition,document,reader,int,count,before,get,registry,get,bean,definition,count,document,reader,register,bean,definitions,doc,create,reader,context,resource,return,get,registry,get,bean,definition,count,count,before
XmlBeanDefinitionReader -> public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException;1498780456;Register the bean definitions contained in the given DOM document._Called by {@code loadBeanDefinitions}._<p>Creates a new instance of the parser class and invokes_{@code registerBeanDefinitions} on it._@param doc the DOM document_@param resource the resource descriptor (for context information)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of parsing errors_@see #loadBeanDefinitions_@see #setDocumentReaderClass_@see BeanDefinitionDocumentReader#registerBeanDefinitions;public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException {_		BeanDefinitionDocumentReader documentReader = createBeanDefinitionDocumentReader()__		int countBefore = getRegistry().getBeanDefinitionCount()__		documentReader.registerBeanDefinitions(doc, createReaderContext(resource))__		return getRegistry().getBeanDefinitionCount() - countBefore__	};register,the,bean,definitions,contained,in,the,given,dom,document,called,by,code,load,bean,definitions,p,creates,a,new,instance,of,the,parser,class,and,invokes,code,register,bean,definitions,on,it,param,doc,the,dom,document,param,resource,the,resource,descriptor,for,context,information,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,parsing,errors,see,load,bean,definitions,see,set,document,reader,class,see,bean,definition,document,reader,register,bean,definitions;public,int,register,bean,definitions,document,doc,resource,resource,throws,bean,definition,store,exception,bean,definition,document,reader,document,reader,create,bean,definition,document,reader,int,count,before,get,registry,get,bean,definition,count,document,reader,register,bean,definitions,doc,create,reader,context,resource,return,get,registry,get,bean,definition,count,count,before
XmlBeanDefinitionReader -> public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException;1530174524;Register the bean definitions contained in the given DOM document._Called by {@code loadBeanDefinitions}._<p>Creates a new instance of the parser class and invokes_{@code registerBeanDefinitions} on it._@param doc the DOM document_@param resource the resource descriptor (for context information)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of parsing errors_@see #loadBeanDefinitions_@see #setDocumentReaderClass_@see BeanDefinitionDocumentReader#registerBeanDefinitions;public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException {_		BeanDefinitionDocumentReader documentReader = createBeanDefinitionDocumentReader()__		int countBefore = getRegistry().getBeanDefinitionCount()__		documentReader.registerBeanDefinitions(doc, createReaderContext(resource))__		return getRegistry().getBeanDefinitionCount() - countBefore__	};register,the,bean,definitions,contained,in,the,given,dom,document,called,by,code,load,bean,definitions,p,creates,a,new,instance,of,the,parser,class,and,invokes,code,register,bean,definitions,on,it,param,doc,the,dom,document,param,resource,the,resource,descriptor,for,context,information,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,parsing,errors,see,load,bean,definitions,see,set,document,reader,class,see,bean,definition,document,reader,register,bean,definitions;public,int,register,bean,definitions,document,doc,resource,resource,throws,bean,definition,store,exception,bean,definition,document,reader,document,reader,create,bean,definition,document,reader,int,count,before,get,registry,get,bean,definition,count,document,reader,register,bean,definitions,doc,create,reader,context,resource,return,get,registry,get,bean,definition,count,count,before
XmlBeanDefinitionReader -> public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException;1532091916;Register the bean definitions contained in the given DOM document._Called by {@code loadBeanDefinitions}._<p>Creates a new instance of the parser class and invokes_{@code registerBeanDefinitions} on it._@param doc the DOM document_@param resource the resource descriptor (for context information)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of parsing errors_@see #loadBeanDefinitions_@see #setDocumentReaderClass_@see BeanDefinitionDocumentReader#registerBeanDefinitions;public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException {_		BeanDefinitionDocumentReader documentReader = createBeanDefinitionDocumentReader()__		int countBefore = getRegistry().getBeanDefinitionCount()__		documentReader.registerBeanDefinitions(doc, createReaderContext(resource))__		return getRegistry().getBeanDefinitionCount() - countBefore__	};register,the,bean,definitions,contained,in,the,given,dom,document,called,by,code,load,bean,definitions,p,creates,a,new,instance,of,the,parser,class,and,invokes,code,register,bean,definitions,on,it,param,doc,the,dom,document,param,resource,the,resource,descriptor,for,context,information,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,parsing,errors,see,load,bean,definitions,see,set,document,reader,class,see,bean,definition,document,reader,register,bean,definitions;public,int,register,bean,definitions,document,doc,resource,resource,throws,bean,definition,store,exception,bean,definition,document,reader,document,reader,create,bean,definition,document,reader,int,count,before,get,registry,get,bean,definition,count,document,reader,register,bean,definitions,doc,create,reader,context,resource,return,get,registry,get,bean,definition,count,count,before
XmlBeanDefinitionReader -> public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException;1532706365;Register the bean definitions contained in the given DOM document._Called by {@code loadBeanDefinitions}._<p>Creates a new instance of the parser class and invokes_{@code registerBeanDefinitions} on it._@param doc the DOM document_@param resource the resource descriptor (for context information)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of parsing errors_@see #loadBeanDefinitions_@see #setDocumentReaderClass_@see BeanDefinitionDocumentReader#registerBeanDefinitions;public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException {_		BeanDefinitionDocumentReader documentReader = createBeanDefinitionDocumentReader()__		int countBefore = getRegistry().getBeanDefinitionCount()__		documentReader.registerBeanDefinitions(doc, createReaderContext(resource))__		return getRegistry().getBeanDefinitionCount() - countBefore__	};register,the,bean,definitions,contained,in,the,given,dom,document,called,by,code,load,bean,definitions,p,creates,a,new,instance,of,the,parser,class,and,invokes,code,register,bean,definitions,on,it,param,doc,the,dom,document,param,resource,the,resource,descriptor,for,context,information,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,parsing,errors,see,load,bean,definitions,see,set,document,reader,class,see,bean,definition,document,reader,register,bean,definitions;public,int,register,bean,definitions,document,doc,resource,resource,throws,bean,definition,store,exception,bean,definition,document,reader,document,reader,create,bean,definition,document,reader,int,count,before,get,registry,get,bean,definition,count,document,reader,register,bean,definitions,doc,create,reader,context,resource,return,get,registry,get,bean,definition,count,count,before
XmlBeanDefinitionReader -> public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException;1532710698;Register the bean definitions contained in the given DOM document._Called by {@code loadBeanDefinitions}._<p>Creates a new instance of the parser class and invokes_{@code registerBeanDefinitions} on it._@param doc the DOM document_@param resource the resource descriptor (for context information)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of parsing errors_@see #loadBeanDefinitions_@see #setDocumentReaderClass_@see BeanDefinitionDocumentReader#registerBeanDefinitions;public int registerBeanDefinitions(Document doc, Resource resource) throws BeanDefinitionStoreException {_		BeanDefinitionDocumentReader documentReader = createBeanDefinitionDocumentReader()__		int countBefore = getRegistry().getBeanDefinitionCount()__		documentReader.registerBeanDefinitions(doc, createReaderContext(resource))__		return getRegistry().getBeanDefinitionCount() - countBefore__	};register,the,bean,definitions,contained,in,the,given,dom,document,called,by,code,load,bean,definitions,p,creates,a,new,instance,of,the,parser,class,and,invokes,code,register,bean,definitions,on,it,param,doc,the,dom,document,param,resource,the,resource,descriptor,for,context,information,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,parsing,errors,see,load,bean,definitions,see,set,document,reader,class,see,bean,definition,document,reader,register,bean,definitions;public,int,register,bean,definitions,document,doc,resource,resource,throws,bean,definition,store,exception,bean,definition,document,reader,document,reader,create,bean,definition,document,reader,int,count,before,get,registry,get,bean,definition,count,document,reader,register,bean,definitions,doc,create,reader,context,resource,return,get,registry,get,bean,definition,count,count,before
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource, @Nullable String resourceDescription) 			throws BeanDefinitionStoreException;1495868221;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resourceDescription a description of the resource_(can be {@code null} or empty)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource, @Nullable String resourceDescription)_			throws BeanDefinitionStoreException {__		return doLoadBeanDefinitions(inputSource, new DescriptiveResource(resourceDescription))__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,description,a,description,of,the,resource,can,be,code,null,or,empty,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,nullable,string,resource,description,throws,bean,definition,store,exception,return,do,load,bean,definitions,input,source,new,descriptive,resource,resource,description
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource, @Nullable String resourceDescription) 			throws BeanDefinitionStoreException;1496837955;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resourceDescription a description of the resource_(can be {@code null} or empty)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource, @Nullable String resourceDescription)_			throws BeanDefinitionStoreException {__		return doLoadBeanDefinitions(inputSource, new DescriptiveResource(resourceDescription))__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,description,a,description,of,the,resource,can,be,code,null,or,empty,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,nullable,string,resource,description,throws,bean,definition,store,exception,return,do,load,bean,definitions,input,source,new,descriptive,resource,resource,description
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource, @Nullable String resourceDescription) 			throws BeanDefinitionStoreException;1498780456;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resourceDescription a description of the resource_(can be {@code null} or empty)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource, @Nullable String resourceDescription)_			throws BeanDefinitionStoreException {__		return doLoadBeanDefinitions(inputSource, new DescriptiveResource(resourceDescription))__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,description,a,description,of,the,resource,can,be,code,null,or,empty,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,nullable,string,resource,description,throws,bean,definition,store,exception,return,do,load,bean,definitions,input,source,new,descriptive,resource,resource,description
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource, @Nullable String resourceDescription) 			throws BeanDefinitionStoreException;1530174524;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resourceDescription a description of the resource_(can be {@code null} or empty)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource, @Nullable String resourceDescription)_			throws BeanDefinitionStoreException {__		return doLoadBeanDefinitions(inputSource, new DescriptiveResource(resourceDescription))__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,description,a,description,of,the,resource,can,be,code,null,or,empty,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,nullable,string,resource,description,throws,bean,definition,store,exception,return,do,load,bean,definitions,input,source,new,descriptive,resource,resource,description
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource, @Nullable String resourceDescription) 			throws BeanDefinitionStoreException;1532091916;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resourceDescription a description of the resource_(can be {@code null} or empty)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource, @Nullable String resourceDescription)_			throws BeanDefinitionStoreException {__		return doLoadBeanDefinitions(inputSource, new DescriptiveResource(resourceDescription))__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,description,a,description,of,the,resource,can,be,code,null,or,empty,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,nullable,string,resource,description,throws,bean,definition,store,exception,return,do,load,bean,definitions,input,source,new,descriptive,resource,resource,description
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource, @Nullable String resourceDescription) 			throws BeanDefinitionStoreException;1532706365;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resourceDescription a description of the resource_(can be {@code null} or empty)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource, @Nullable String resourceDescription)_			throws BeanDefinitionStoreException {__		return doLoadBeanDefinitions(inputSource, new DescriptiveResource(resourceDescription))__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,description,a,description,of,the,resource,can,be,code,null,or,empty,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,nullable,string,resource,description,throws,bean,definition,store,exception,return,do,load,bean,definitions,input,source,new,descriptive,resource,resource,description
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource, @Nullable String resourceDescription) 			throws BeanDefinitionStoreException;1532710698;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@param resourceDescription a description of the resource_(can be {@code null} or empty)_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource, @Nullable String resourceDescription)_			throws BeanDefinitionStoreException {__		return doLoadBeanDefinitions(inputSource, new DescriptiveResource(resourceDescription))__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,param,resource,description,a,description,of,the,resource,can,be,code,null,or,empty,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,nullable,string,resource,description,throws,bean,definition,store,exception,return,do,load,bean,definitions,input,source,new,descriptive,resource,resource,description
XmlBeanDefinitionReader -> protected Document doLoadDocument(InputSource inputSource, Resource resource) throws Exception;1382030648;Actually load the specified document using the configured DocumentLoader._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the DOM Document_@throws Exception when thrown from the DocumentLoader_@see #setDocumentLoader_@see DocumentLoader#loadDocument;protected Document doLoadDocument(InputSource inputSource, Resource resource) throws Exception {_		return this.documentLoader.loadDocument(inputSource, getEntityResolver(), this.errorHandler,_				getValidationModeForResource(resource), isNamespaceAware())__	};actually,load,the,specified,document,using,the,configured,document,loader,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,dom,document,throws,exception,when,thrown,from,the,document,loader,see,set,document,loader,see,document,loader,load,document;protected,document,do,load,document,input,source,input,source,resource,resource,throws,exception,return,this,document,loader,load,document,input,source,get,entity,resolver,this,error,handler,get,validation,mode,for,resource,resource,is,namespace,aware
XmlBeanDefinitionReader -> protected Document doLoadDocument(InputSource inputSource, Resource resource) throws Exception;1411599760;Actually load the specified document using the configured DocumentLoader._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the DOM Document_@throws Exception when thrown from the DocumentLoader_@see #setDocumentLoader_@see DocumentLoader#loadDocument;protected Document doLoadDocument(InputSource inputSource, Resource resource) throws Exception {_		return this.documentLoader.loadDocument(inputSource, getEntityResolver(), this.errorHandler,_				getValidationModeForResource(resource), isNamespaceAware())__	};actually,load,the,specified,document,using,the,configured,document,loader,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,dom,document,throws,exception,when,thrown,from,the,document,loader,see,set,document,loader,see,document,loader,load,document;protected,document,do,load,document,input,source,input,source,resource,resource,throws,exception,return,this,document,loader,load,document,input,source,get,entity,resolver,this,error,handler,get,validation,mode,for,resource,resource,is,namespace,aware
XmlBeanDefinitionReader -> protected Document doLoadDocument(InputSource inputSource, Resource resource) throws Exception;1419966315;Actually load the specified document using the configured DocumentLoader._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the DOM Document_@throws Exception when thrown from the DocumentLoader_@see #setDocumentLoader_@see DocumentLoader#loadDocument;protected Document doLoadDocument(InputSource inputSource, Resource resource) throws Exception {_		return this.documentLoader.loadDocument(inputSource, getEntityResolver(), this.errorHandler,_				getValidationModeForResource(resource), isNamespaceAware())__	};actually,load,the,specified,document,using,the,configured,document,loader,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,dom,document,throws,exception,when,thrown,from,the,document,loader,see,set,document,loader,see,document,loader,load,document;protected,document,do,load,document,input,source,input,source,resource,resource,throws,exception,return,this,document,loader,load,document,input,source,get,entity,resolver,this,error,handler,get,validation,mode,for,resource,resource,is,namespace,aware
XmlBeanDefinitionReader -> protected Document doLoadDocument(InputSource inputSource, Resource resource) throws Exception;1467730834;Actually load the specified document using the configured DocumentLoader._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the DOM Document_@throws Exception when thrown from the DocumentLoader_@see #setDocumentLoader_@see DocumentLoader#loadDocument;protected Document doLoadDocument(InputSource inputSource, Resource resource) throws Exception {_		return this.documentLoader.loadDocument(inputSource, getEntityResolver(), this.errorHandler,_				getValidationModeForResource(resource), isNamespaceAware())__	};actually,load,the,specified,document,using,the,configured,document,loader,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,dom,document,throws,exception,when,thrown,from,the,document,loader,see,set,document,loader,see,document,loader,load,document;protected,document,do,load,document,input,source,input,source,resource,resource,throws,exception,return,this,document,loader,load,document,input,source,get,entity,resolver,this,error,handler,get,validation,mode,for,resource,resource,is,namespace,aware
XmlBeanDefinitionReader -> protected Document doLoadDocument(InputSource inputSource, Resource resource) throws Exception;1495868221;Actually load the specified document using the configured DocumentLoader._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the DOM Document_@throws Exception when thrown from the DocumentLoader_@see #setDocumentLoader_@see DocumentLoader#loadDocument;protected Document doLoadDocument(InputSource inputSource, Resource resource) throws Exception {_		return this.documentLoader.loadDocument(inputSource, getEntityResolver(), this.errorHandler,_				getValidationModeForResource(resource), isNamespaceAware())__	};actually,load,the,specified,document,using,the,configured,document,loader,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,dom,document,throws,exception,when,thrown,from,the,document,loader,see,set,document,loader,see,document,loader,load,document;protected,document,do,load,document,input,source,input,source,resource,resource,throws,exception,return,this,document,loader,load,document,input,source,get,entity,resolver,this,error,handler,get,validation,mode,for,resource,resource,is,namespace,aware
XmlBeanDefinitionReader -> protected Document doLoadDocument(InputSource inputSource, Resource resource) throws Exception;1496837955;Actually load the specified document using the configured DocumentLoader._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the DOM Document_@throws Exception when thrown from the DocumentLoader_@see #setDocumentLoader_@see DocumentLoader#loadDocument;protected Document doLoadDocument(InputSource inputSource, Resource resource) throws Exception {_		return this.documentLoader.loadDocument(inputSource, getEntityResolver(), this.errorHandler,_				getValidationModeForResource(resource), isNamespaceAware())__	};actually,load,the,specified,document,using,the,configured,document,loader,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,dom,document,throws,exception,when,thrown,from,the,document,loader,see,set,document,loader,see,document,loader,load,document;protected,document,do,load,document,input,source,input,source,resource,resource,throws,exception,return,this,document,loader,load,document,input,source,get,entity,resolver,this,error,handler,get,validation,mode,for,resource,resource,is,namespace,aware
XmlBeanDefinitionReader -> protected Document doLoadDocument(InputSource inputSource, Resource resource) throws Exception;1498780456;Actually load the specified document using the configured DocumentLoader._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the DOM Document_@throws Exception when thrown from the DocumentLoader_@see #setDocumentLoader_@see DocumentLoader#loadDocument;protected Document doLoadDocument(InputSource inputSource, Resource resource) throws Exception {_		return this.documentLoader.loadDocument(inputSource, getEntityResolver(), this.errorHandler,_				getValidationModeForResource(resource), isNamespaceAware())__	};actually,load,the,specified,document,using,the,configured,document,loader,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,dom,document,throws,exception,when,thrown,from,the,document,loader,see,set,document,loader,see,document,loader,load,document;protected,document,do,load,document,input,source,input,source,resource,resource,throws,exception,return,this,document,loader,load,document,input,source,get,entity,resolver,this,error,handler,get,validation,mode,for,resource,resource,is,namespace,aware
XmlBeanDefinitionReader -> protected Document doLoadDocument(InputSource inputSource, Resource resource) throws Exception;1530174524;Actually load the specified document using the configured DocumentLoader._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the DOM Document_@throws Exception when thrown from the DocumentLoader_@see #setDocumentLoader_@see DocumentLoader#loadDocument;protected Document doLoadDocument(InputSource inputSource, Resource resource) throws Exception {_		return this.documentLoader.loadDocument(inputSource, getEntityResolver(), this.errorHandler,_				getValidationModeForResource(resource), isNamespaceAware())__	};actually,load,the,specified,document,using,the,configured,document,loader,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,dom,document,throws,exception,when,thrown,from,the,document,loader,see,set,document,loader,see,document,loader,load,document;protected,document,do,load,document,input,source,input,source,resource,resource,throws,exception,return,this,document,loader,load,document,input,source,get,entity,resolver,this,error,handler,get,validation,mode,for,resource,resource,is,namespace,aware
XmlBeanDefinitionReader -> protected Document doLoadDocument(InputSource inputSource, Resource resource) throws Exception;1532091916;Actually load the specified document using the configured DocumentLoader._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the DOM Document_@throws Exception when thrown from the DocumentLoader_@see #setDocumentLoader_@see DocumentLoader#loadDocument;protected Document doLoadDocument(InputSource inputSource, Resource resource) throws Exception {_		return this.documentLoader.loadDocument(inputSource, getEntityResolver(), this.errorHandler,_				getValidationModeForResource(resource), isNamespaceAware())__	};actually,load,the,specified,document,using,the,configured,document,loader,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,dom,document,throws,exception,when,thrown,from,the,document,loader,see,set,document,loader,see,document,loader,load,document;protected,document,do,load,document,input,source,input,source,resource,resource,throws,exception,return,this,document,loader,load,document,input,source,get,entity,resolver,this,error,handler,get,validation,mode,for,resource,resource,is,namespace,aware
XmlBeanDefinitionReader -> protected Document doLoadDocument(InputSource inputSource, Resource resource) throws Exception;1532706365;Actually load the specified document using the configured DocumentLoader._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the DOM Document_@throws Exception when thrown from the DocumentLoader_@see #setDocumentLoader_@see DocumentLoader#loadDocument;protected Document doLoadDocument(InputSource inputSource, Resource resource) throws Exception {_		return this.documentLoader.loadDocument(inputSource, getEntityResolver(), this.errorHandler,_				getValidationModeForResource(resource), isNamespaceAware())__	};actually,load,the,specified,document,using,the,configured,document,loader,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,dom,document,throws,exception,when,thrown,from,the,document,loader,see,set,document,loader,see,document,loader,load,document;protected,document,do,load,document,input,source,input,source,resource,resource,throws,exception,return,this,document,loader,load,document,input,source,get,entity,resolver,this,error,handler,get,validation,mode,for,resource,resource,is,namespace,aware
XmlBeanDefinitionReader -> protected Document doLoadDocument(InputSource inputSource, Resource resource) throws Exception;1532710698;Actually load the specified document using the configured DocumentLoader._@param inputSource the SAX InputSource to read from_@param resource the resource descriptor for the XML file_@return the DOM Document_@throws Exception when thrown from the DocumentLoader_@see #setDocumentLoader_@see DocumentLoader#loadDocument;protected Document doLoadDocument(InputSource inputSource, Resource resource) throws Exception {_		return this.documentLoader.loadDocument(inputSource, getEntityResolver(), this.errorHandler,_				getValidationModeForResource(resource), isNamespaceAware())__	};actually,load,the,specified,document,using,the,configured,document,loader,param,input,source,the,sax,input,source,to,read,from,param,resource,the,resource,descriptor,for,the,xml,file,return,the,dom,document,throws,exception,when,thrown,from,the,document,loader,see,set,document,loader,see,document,loader,load,document;protected,document,do,load,document,input,source,input,source,resource,resource,throws,exception,return,this,document,loader,load,document,input,source,get,entity,resolver,this,error,handler,get,validation,mode,for,resource,resource,is,namespace,aware
XmlBeanDefinitionReader -> public void setDocumentReaderClass(Class<? extends BeanDefinitionDocumentReader> documentReaderClass);1496837955;Specify the {@link BeanDefinitionDocumentReader} implementation to use,_responsible for the actual reading of the XML bean definition document._<p>The default is {@link DefaultBeanDefinitionDocumentReader}._@param documentReaderClass the desired BeanDefinitionDocumentReader implementation class;public void setDocumentReaderClass(Class<? extends BeanDefinitionDocumentReader> documentReaderClass) {_		this.documentReaderClass = documentReaderClass__	};specify,the,link,bean,definition,document,reader,implementation,to,use,responsible,for,the,actual,reading,of,the,xml,bean,definition,document,p,the,default,is,link,default,bean,definition,document,reader,param,document,reader,class,the,desired,bean,definition,document,reader,implementation,class;public,void,set,document,reader,class,class,extends,bean,definition,document,reader,document,reader,class,this,document,reader,class,document,reader,class
XmlBeanDefinitionReader -> public void setDocumentReaderClass(Class<? extends BeanDefinitionDocumentReader> documentReaderClass);1498780456;Specify the {@link BeanDefinitionDocumentReader} implementation to use,_responsible for the actual reading of the XML bean definition document._<p>The default is {@link DefaultBeanDefinitionDocumentReader}._@param documentReaderClass the desired BeanDefinitionDocumentReader implementation class;public void setDocumentReaderClass(Class<? extends BeanDefinitionDocumentReader> documentReaderClass) {_		this.documentReaderClass = documentReaderClass__	};specify,the,link,bean,definition,document,reader,implementation,to,use,responsible,for,the,actual,reading,of,the,xml,bean,definition,document,p,the,default,is,link,default,bean,definition,document,reader,param,document,reader,class,the,desired,bean,definition,document,reader,implementation,class;public,void,set,document,reader,class,class,extends,bean,definition,document,reader,document,reader,class,this,document,reader,class,document,reader,class
XmlBeanDefinitionReader -> public void setDocumentReaderClass(Class<? extends BeanDefinitionDocumentReader> documentReaderClass);1530174524;Specify the {@link BeanDefinitionDocumentReader} implementation to use,_responsible for the actual reading of the XML bean definition document._<p>The default is {@link DefaultBeanDefinitionDocumentReader}._@param documentReaderClass the desired BeanDefinitionDocumentReader implementation class;public void setDocumentReaderClass(Class<? extends BeanDefinitionDocumentReader> documentReaderClass) {_		this.documentReaderClass = documentReaderClass__	};specify,the,link,bean,definition,document,reader,implementation,to,use,responsible,for,the,actual,reading,of,the,xml,bean,definition,document,p,the,default,is,link,default,bean,definition,document,reader,param,document,reader,class,the,desired,bean,definition,document,reader,implementation,class;public,void,set,document,reader,class,class,extends,bean,definition,document,reader,document,reader,class,this,document,reader,class,document,reader,class
XmlBeanDefinitionReader -> public void setDocumentReaderClass(Class<? extends BeanDefinitionDocumentReader> documentReaderClass);1532091916;Specify the {@link BeanDefinitionDocumentReader} implementation to use,_responsible for the actual reading of the XML bean definition document._<p>The default is {@link DefaultBeanDefinitionDocumentReader}._@param documentReaderClass the desired BeanDefinitionDocumentReader implementation class;public void setDocumentReaderClass(Class<? extends BeanDefinitionDocumentReader> documentReaderClass) {_		this.documentReaderClass = documentReaderClass__	};specify,the,link,bean,definition,document,reader,implementation,to,use,responsible,for,the,actual,reading,of,the,xml,bean,definition,document,p,the,default,is,link,default,bean,definition,document,reader,param,document,reader,class,the,desired,bean,definition,document,reader,implementation,class;public,void,set,document,reader,class,class,extends,bean,definition,document,reader,document,reader,class,this,document,reader,class,document,reader,class
XmlBeanDefinitionReader -> public void setDocumentReaderClass(Class<? extends BeanDefinitionDocumentReader> documentReaderClass);1532706365;Specify the {@link BeanDefinitionDocumentReader} implementation to use,_responsible for the actual reading of the XML bean definition document._<p>The default is {@link DefaultBeanDefinitionDocumentReader}._@param documentReaderClass the desired BeanDefinitionDocumentReader implementation class;public void setDocumentReaderClass(Class<? extends BeanDefinitionDocumentReader> documentReaderClass) {_		this.documentReaderClass = documentReaderClass__	};specify,the,link,bean,definition,document,reader,implementation,to,use,responsible,for,the,actual,reading,of,the,xml,bean,definition,document,p,the,default,is,link,default,bean,definition,document,reader,param,document,reader,class,the,desired,bean,definition,document,reader,implementation,class;public,void,set,document,reader,class,class,extends,bean,definition,document,reader,document,reader,class,this,document,reader,class,document,reader,class
XmlBeanDefinitionReader -> public void setDocumentReaderClass(Class<? extends BeanDefinitionDocumentReader> documentReaderClass);1532710698;Specify the {@link BeanDefinitionDocumentReader} implementation to use,_responsible for the actual reading of the XML bean definition document._<p>The default is {@link DefaultBeanDefinitionDocumentReader}._@param documentReaderClass the desired BeanDefinitionDocumentReader implementation class;public void setDocumentReaderClass(Class<? extends BeanDefinitionDocumentReader> documentReaderClass) {_		this.documentReaderClass = documentReaderClass__	};specify,the,link,bean,definition,document,reader,implementation,to,use,responsible,for,the,actual,reading,of,the,xml,bean,definition,document,p,the,default,is,link,default,bean,definition,document,reader,param,document,reader,class,the,desired,bean,definition,document,reader,implementation,class;public,void,set,document,reader,class,class,extends,bean,definition,document,reader,document,reader,class,this,document,reader,class,document,reader,class
XmlBeanDefinitionReader -> public void setEventListener(@Nullable ReaderEventListener eventListener);1496837955;Specify which {@link ReaderEventListener} to use._<p>The default implementation is EmptyReaderEventListener which discards every event notification._External tools can provide an alternative implementation to monitor the components being_registered in the BeanFactory.;public void setEventListener(@Nullable ReaderEventListener eventListener) {_		this.eventListener = (eventListener != null ? eventListener : new EmptyReaderEventListener())__	};specify,which,link,reader,event,listener,to,use,p,the,default,implementation,is,empty,reader,event,listener,which,discards,every,event,notification,external,tools,can,provide,an,alternative,implementation,to,monitor,the,components,being,registered,in,the,bean,factory;public,void,set,event,listener,nullable,reader,event,listener,event,listener,this,event,listener,event,listener,null,event,listener,new,empty,reader,event,listener
XmlBeanDefinitionReader -> public void setEventListener(@Nullable ReaderEventListener eventListener);1498780456;Specify which {@link ReaderEventListener} to use._<p>The default implementation is EmptyReaderEventListener which discards every event notification._External tools can provide an alternative implementation to monitor the components being_registered in the BeanFactory.;public void setEventListener(@Nullable ReaderEventListener eventListener) {_		this.eventListener = (eventListener != null ? eventListener : new EmptyReaderEventListener())__	};specify,which,link,reader,event,listener,to,use,p,the,default,implementation,is,empty,reader,event,listener,which,discards,every,event,notification,external,tools,can,provide,an,alternative,implementation,to,monitor,the,components,being,registered,in,the,bean,factory;public,void,set,event,listener,nullable,reader,event,listener,event,listener,this,event,listener,event,listener,null,event,listener,new,empty,reader,event,listener
XmlBeanDefinitionReader -> public void setEventListener(@Nullable ReaderEventListener eventListener);1530174524;Specify which {@link ReaderEventListener} to use._<p>The default implementation is EmptyReaderEventListener which discards every event notification._External tools can provide an alternative implementation to monitor the components being_registered in the BeanFactory.;public void setEventListener(@Nullable ReaderEventListener eventListener) {_		this.eventListener = (eventListener != null ? eventListener : new EmptyReaderEventListener())__	};specify,which,link,reader,event,listener,to,use,p,the,default,implementation,is,empty,reader,event,listener,which,discards,every,event,notification,external,tools,can,provide,an,alternative,implementation,to,monitor,the,components,being,registered,in,the,bean,factory;public,void,set,event,listener,nullable,reader,event,listener,event,listener,this,event,listener,event,listener,null,event,listener,new,empty,reader,event,listener
XmlBeanDefinitionReader -> public void setEventListener(@Nullable ReaderEventListener eventListener);1532091916;Specify which {@link ReaderEventListener} to use._<p>The default implementation is EmptyReaderEventListener which discards every event notification._External tools can provide an alternative implementation to monitor the components being_registered in the BeanFactory.;public void setEventListener(@Nullable ReaderEventListener eventListener) {_		this.eventListener = (eventListener != null ? eventListener : new EmptyReaderEventListener())__	};specify,which,link,reader,event,listener,to,use,p,the,default,implementation,is,empty,reader,event,listener,which,discards,every,event,notification,external,tools,can,provide,an,alternative,implementation,to,monitor,the,components,being,registered,in,the,bean,factory;public,void,set,event,listener,nullable,reader,event,listener,event,listener,this,event,listener,event,listener,null,event,listener,new,empty,reader,event,listener
XmlBeanDefinitionReader -> public void setEventListener(@Nullable ReaderEventListener eventListener);1532706365;Specify which {@link ReaderEventListener} to use._<p>The default implementation is EmptyReaderEventListener which discards every event notification._External tools can provide an alternative implementation to monitor the components being_registered in the BeanFactory.;public void setEventListener(@Nullable ReaderEventListener eventListener) {_		this.eventListener = (eventListener != null ? eventListener : new EmptyReaderEventListener())__	};specify,which,link,reader,event,listener,to,use,p,the,default,implementation,is,empty,reader,event,listener,which,discards,every,event,notification,external,tools,can,provide,an,alternative,implementation,to,monitor,the,components,being,registered,in,the,bean,factory;public,void,set,event,listener,nullable,reader,event,listener,event,listener,this,event,listener,event,listener,null,event,listener,new,empty,reader,event,listener
XmlBeanDefinitionReader -> public void setEventListener(@Nullable ReaderEventListener eventListener);1532710698;Specify which {@link ReaderEventListener} to use._<p>The default implementation is EmptyReaderEventListener which discards every event notification._External tools can provide an alternative implementation to monitor the components being_registered in the BeanFactory.;public void setEventListener(@Nullable ReaderEventListener eventListener) {_		this.eventListener = (eventListener != null ? eventListener : new EmptyReaderEventListener())__	};specify,which,link,reader,event,listener,to,use,p,the,default,implementation,is,empty,reader,event,listener,which,discards,every,event,notification,external,tools,can,provide,an,alternative,implementation,to,monitor,the,components,being,registered,in,the,bean,factory;public,void,set,event,listener,nullable,reader,event,listener,event,listener,this,event,listener,event,listener,null,event,listener,new,empty,reader,event,listener
XmlBeanDefinitionReader -> public boolean isNamespaceAware();1328020251;Return whether or not the XML parser should be XML namespace aware.;public boolean isNamespaceAware() {_		return this.namespaceAware__	};return,whether,or,not,the,xml,parser,should,be,xml,namespace,aware;public,boolean,is,namespace,aware,return,this,namespace,aware
XmlBeanDefinitionReader -> public boolean isNamespaceAware();1356735495;Return whether or not the XML parser should be XML namespace aware.;public boolean isNamespaceAware() {_		return this.namespaceAware__	};return,whether,or,not,the,xml,parser,should,be,xml,namespace,aware;public,boolean,is,namespace,aware,return,this,namespace,aware
XmlBeanDefinitionReader -> public boolean isNamespaceAware();1357119239;Return whether or not the XML parser should be XML namespace aware.;public boolean isNamespaceAware() {_		return this.namespaceAware__	};return,whether,or,not,the,xml,parser,should,be,xml,namespace,aware;public,boolean,is,namespace,aware,return,this,namespace,aware
XmlBeanDefinitionReader -> public boolean isNamespaceAware();1368482696;Return whether or not the XML parser should be XML namespace aware.;public boolean isNamespaceAware() {_		return this.namespaceAware__	};return,whether,or,not,the,xml,parser,should,be,xml,namespace,aware;public,boolean,is,namespace,aware,return,this,namespace,aware
XmlBeanDefinitionReader -> public boolean isNamespaceAware();1382030648;Return whether or not the XML parser should be XML namespace aware.;public boolean isNamespaceAware() {_		return this.namespaceAware__	};return,whether,or,not,the,xml,parser,should,be,xml,namespace,aware;public,boolean,is,namespace,aware,return,this,namespace,aware
XmlBeanDefinitionReader -> public boolean isNamespaceAware();1411599760;Return whether or not the XML parser should be XML namespace aware.;public boolean isNamespaceAware() {_		return this.namespaceAware__	};return,whether,or,not,the,xml,parser,should,be,xml,namespace,aware;public,boolean,is,namespace,aware,return,this,namespace,aware
XmlBeanDefinitionReader -> public boolean isNamespaceAware();1419966315;Return whether or not the XML parser should be XML namespace aware.;public boolean isNamespaceAware() {_		return this.namespaceAware__	};return,whether,or,not,the,xml,parser,should,be,xml,namespace,aware;public,boolean,is,namespace,aware,return,this,namespace,aware
XmlBeanDefinitionReader -> public boolean isNamespaceAware();1467730834;Return whether or not the XML parser should be XML namespace aware.;public boolean isNamespaceAware() {_		return this.namespaceAware__	};return,whether,or,not,the,xml,parser,should,be,xml,namespace,aware;public,boolean,is,namespace,aware,return,this,namespace,aware
XmlBeanDefinitionReader -> public boolean isNamespaceAware();1495868221;Return whether or not the XML parser should be XML namespace aware.;public boolean isNamespaceAware() {_		return this.namespaceAware__	};return,whether,or,not,the,xml,parser,should,be,xml,namespace,aware;public,boolean,is,namespace,aware,return,this,namespace,aware
XmlBeanDefinitionReader -> public boolean isNamespaceAware();1496837955;Return whether or not the XML parser should be XML namespace aware.;public boolean isNamespaceAware() {_		return this.namespaceAware__	};return,whether,or,not,the,xml,parser,should,be,xml,namespace,aware;public,boolean,is,namespace,aware,return,this,namespace,aware
XmlBeanDefinitionReader -> public boolean isNamespaceAware();1498780456;Return whether or not the XML parser should be XML namespace aware.;public boolean isNamespaceAware() {_		return this.namespaceAware__	};return,whether,or,not,the,xml,parser,should,be,xml,namespace,aware;public,boolean,is,namespace,aware,return,this,namespace,aware
XmlBeanDefinitionReader -> public boolean isNamespaceAware();1530174524;Return whether or not the XML parser should be XML namespace aware.;public boolean isNamespaceAware() {_		return this.namespaceAware__	};return,whether,or,not,the,xml,parser,should,be,xml,namespace,aware;public,boolean,is,namespace,aware,return,this,namespace,aware
XmlBeanDefinitionReader -> public boolean isNamespaceAware();1532091916;Return whether or not the XML parser should be XML namespace aware.;public boolean isNamespaceAware() {_		return this.namespaceAware__	};return,whether,or,not,the,xml,parser,should,be,xml,namespace,aware;public,boolean,is,namespace,aware,return,this,namespace,aware
XmlBeanDefinitionReader -> public boolean isNamespaceAware();1532706365;Return whether or not the XML parser should be XML namespace aware.;public boolean isNamespaceAware() {_		return this.namespaceAware__	};return,whether,or,not,the,xml,parser,should,be,xml,namespace,aware;public,boolean,is,namespace,aware,return,this,namespace,aware
XmlBeanDefinitionReader -> public boolean isNamespaceAware();1532710698;Return whether or not the XML parser should be XML namespace aware.;public boolean isNamespaceAware() {_		return this.namespaceAware__	};return,whether,or,not,the,xml,parser,should,be,xml,namespace,aware;public,boolean,is,namespace,aware,return,this,namespace,aware
XmlBeanDefinitionReader -> public void setEntityResolver(EntityResolver entityResolver);1328020251;Set a SAX entity resolver to be used for parsing._<p>By default, {@link ResourceEntityResolver} will be used. Can be overridden_for custom entity resolution, for example relative to some specific base path.;public void setEntityResolver(EntityResolver entityResolver) {_		this.entityResolver = entityResolver__	};set,a,sax,entity,resolver,to,be,used,for,parsing,p,by,default,link,resource,entity,resolver,will,be,used,can,be,overridden,for,custom,entity,resolution,for,example,relative,to,some,specific,base,path;public,void,set,entity,resolver,entity,resolver,entity,resolver,this,entity,resolver,entity,resolver
XmlBeanDefinitionReader -> public void setEntityResolver(EntityResolver entityResolver);1356735495;Set a SAX entity resolver to be used for parsing._<p>By default, {@link ResourceEntityResolver} will be used. Can be overridden_for custom entity resolution, for example relative to some specific base path.;public void setEntityResolver(EntityResolver entityResolver) {_		this.entityResolver = entityResolver__	};set,a,sax,entity,resolver,to,be,used,for,parsing,p,by,default,link,resource,entity,resolver,will,be,used,can,be,overridden,for,custom,entity,resolution,for,example,relative,to,some,specific,base,path;public,void,set,entity,resolver,entity,resolver,entity,resolver,this,entity,resolver,entity,resolver
XmlBeanDefinitionReader -> public void setEntityResolver(EntityResolver entityResolver);1357119239;Set a SAX entity resolver to be used for parsing._<p>By default, {@link ResourceEntityResolver} will be used. Can be overridden_for custom entity resolution, for example relative to some specific base path.;public void setEntityResolver(EntityResolver entityResolver) {_		this.entityResolver = entityResolver__	};set,a,sax,entity,resolver,to,be,used,for,parsing,p,by,default,link,resource,entity,resolver,will,be,used,can,be,overridden,for,custom,entity,resolution,for,example,relative,to,some,specific,base,path;public,void,set,entity,resolver,entity,resolver,entity,resolver,this,entity,resolver,entity,resolver
XmlBeanDefinitionReader -> public void setEntityResolver(EntityResolver entityResolver);1368482696;Set a SAX entity resolver to be used for parsing._<p>By default, {@link ResourceEntityResolver} will be used. Can be overridden_for custom entity resolution, for example relative to some specific base path.;public void setEntityResolver(EntityResolver entityResolver) {_		this.entityResolver = entityResolver__	};set,a,sax,entity,resolver,to,be,used,for,parsing,p,by,default,link,resource,entity,resolver,will,be,used,can,be,overridden,for,custom,entity,resolution,for,example,relative,to,some,specific,base,path;public,void,set,entity,resolver,entity,resolver,entity,resolver,this,entity,resolver,entity,resolver
XmlBeanDefinitionReader -> public void setEntityResolver(EntityResolver entityResolver);1382030648;Set a SAX entity resolver to be used for parsing._<p>By default, {@link ResourceEntityResolver} will be used. Can be overridden_for custom entity resolution, for example relative to some specific base path.;public void setEntityResolver(EntityResolver entityResolver) {_		this.entityResolver = entityResolver__	};set,a,sax,entity,resolver,to,be,used,for,parsing,p,by,default,link,resource,entity,resolver,will,be,used,can,be,overridden,for,custom,entity,resolution,for,example,relative,to,some,specific,base,path;public,void,set,entity,resolver,entity,resolver,entity,resolver,this,entity,resolver,entity,resolver
XmlBeanDefinitionReader -> public void setEntityResolver(EntityResolver entityResolver);1411599760;Set a SAX entity resolver to be used for parsing._<p>By default, {@link ResourceEntityResolver} will be used. Can be overridden_for custom entity resolution, for example relative to some specific base path.;public void setEntityResolver(EntityResolver entityResolver) {_		this.entityResolver = entityResolver__	};set,a,sax,entity,resolver,to,be,used,for,parsing,p,by,default,link,resource,entity,resolver,will,be,used,can,be,overridden,for,custom,entity,resolution,for,example,relative,to,some,specific,base,path;public,void,set,entity,resolver,entity,resolver,entity,resolver,this,entity,resolver,entity,resolver
XmlBeanDefinitionReader -> public void setEntityResolver(EntityResolver entityResolver);1419966315;Set a SAX entity resolver to be used for parsing._<p>By default, {@link ResourceEntityResolver} will be used. Can be overridden_for custom entity resolution, for example relative to some specific base path.;public void setEntityResolver(EntityResolver entityResolver) {_		this.entityResolver = entityResolver__	};set,a,sax,entity,resolver,to,be,used,for,parsing,p,by,default,link,resource,entity,resolver,will,be,used,can,be,overridden,for,custom,entity,resolution,for,example,relative,to,some,specific,base,path;public,void,set,entity,resolver,entity,resolver,entity,resolver,this,entity,resolver,entity,resolver
XmlBeanDefinitionReader -> public void setEntityResolver(EntityResolver entityResolver);1467730834;Set a SAX entity resolver to be used for parsing._<p>By default, {@link ResourceEntityResolver} will be used. Can be overridden_for custom entity resolution, for example relative to some specific base path.;public void setEntityResolver(EntityResolver entityResolver) {_		this.entityResolver = entityResolver__	};set,a,sax,entity,resolver,to,be,used,for,parsing,p,by,default,link,resource,entity,resolver,will,be,used,can,be,overridden,for,custom,entity,resolution,for,example,relative,to,some,specific,base,path;public,void,set,entity,resolver,entity,resolver,entity,resolver,this,entity,resolver,entity,resolver
XmlBeanDefinitionReader -> public void setEntityResolver(EntityResolver entityResolver);1495868221;Set a SAX entity resolver to be used for parsing._<p>By default, {@link ResourceEntityResolver} will be used. Can be overridden_for custom entity resolution, for example relative to some specific base path.;public void setEntityResolver(EntityResolver entityResolver) {_		this.entityResolver = entityResolver__	};set,a,sax,entity,resolver,to,be,used,for,parsing,p,by,default,link,resource,entity,resolver,will,be,used,can,be,overridden,for,custom,entity,resolution,for,example,relative,to,some,specific,base,path;public,void,set,entity,resolver,entity,resolver,entity,resolver,this,entity,resolver,entity,resolver
XmlBeanDefinitionReader -> protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader();1328020251;Create the {@link BeanDefinitionDocumentReader} to use for actually_reading bean definitions from an XML document._<p>The default implementation instantiates the specified "documentReaderClass"._@see #setDocumentReaderClass;protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader() {_		return BeanDefinitionDocumentReader.class.cast(BeanUtils.instantiateClass(this.documentReaderClass))__	};create,the,link,bean,definition,document,reader,to,use,for,actually,reading,bean,definitions,from,an,xml,document,p,the,default,implementation,instantiates,the,specified,document,reader,class,see,set,document,reader,class;protected,bean,definition,document,reader,create,bean,definition,document,reader,return,bean,definition,document,reader,class,cast,bean,utils,instantiate,class,this,document,reader,class
XmlBeanDefinitionReader -> protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader();1356735495;Create the {@link BeanDefinitionDocumentReader} to use for actually_reading bean definitions from an XML document._<p>The default implementation instantiates the specified "documentReaderClass"._@see #setDocumentReaderClass;protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader() {_		return BeanDefinitionDocumentReader.class.cast(BeanUtils.instantiateClass(this.documentReaderClass))__	};create,the,link,bean,definition,document,reader,to,use,for,actually,reading,bean,definitions,from,an,xml,document,p,the,default,implementation,instantiates,the,specified,document,reader,class,see,set,document,reader,class;protected,bean,definition,document,reader,create,bean,definition,document,reader,return,bean,definition,document,reader,class,cast,bean,utils,instantiate,class,this,document,reader,class
XmlBeanDefinitionReader -> protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader();1357119239;Create the {@link BeanDefinitionDocumentReader} to use for actually_reading bean definitions from an XML document._<p>The default implementation instantiates the specified "documentReaderClass"._@see #setDocumentReaderClass;protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader() {_		return BeanDefinitionDocumentReader.class.cast(BeanUtils.instantiateClass(this.documentReaderClass))__	};create,the,link,bean,definition,document,reader,to,use,for,actually,reading,bean,definitions,from,an,xml,document,p,the,default,implementation,instantiates,the,specified,document,reader,class,see,set,document,reader,class;protected,bean,definition,document,reader,create,bean,definition,document,reader,return,bean,definition,document,reader,class,cast,bean,utils,instantiate,class,this,document,reader,class
XmlBeanDefinitionReader -> protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader();1368482696;Create the {@link BeanDefinitionDocumentReader} to use for actually_reading bean definitions from an XML document._<p>The default implementation instantiates the specified "documentReaderClass"._@see #setDocumentReaderClass;protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader() {_		return BeanDefinitionDocumentReader.class.cast(BeanUtils.instantiateClass(this.documentReaderClass))__	};create,the,link,bean,definition,document,reader,to,use,for,actually,reading,bean,definitions,from,an,xml,document,p,the,default,implementation,instantiates,the,specified,document,reader,class,see,set,document,reader,class;protected,bean,definition,document,reader,create,bean,definition,document,reader,return,bean,definition,document,reader,class,cast,bean,utils,instantiate,class,this,document,reader,class
XmlBeanDefinitionReader -> protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader();1382030648;Create the {@link BeanDefinitionDocumentReader} to use for actually_reading bean definitions from an XML document._<p>The default implementation instantiates the specified "documentReaderClass"._@see #setDocumentReaderClass;protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader() {_		return BeanDefinitionDocumentReader.class.cast(BeanUtils.instantiateClass(this.documentReaderClass))__	};create,the,link,bean,definition,document,reader,to,use,for,actually,reading,bean,definitions,from,an,xml,document,p,the,default,implementation,instantiates,the,specified,document,reader,class,see,set,document,reader,class;protected,bean,definition,document,reader,create,bean,definition,document,reader,return,bean,definition,document,reader,class,cast,bean,utils,instantiate,class,this,document,reader,class
XmlBeanDefinitionReader -> protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader();1411599760;Create the {@link BeanDefinitionDocumentReader} to use for actually_reading bean definitions from an XML document._<p>The default implementation instantiates the specified "documentReaderClass"._@see #setDocumentReaderClass;protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader() {_		return BeanDefinitionDocumentReader.class.cast(BeanUtils.instantiateClass(this.documentReaderClass))__	};create,the,link,bean,definition,document,reader,to,use,for,actually,reading,bean,definitions,from,an,xml,document,p,the,default,implementation,instantiates,the,specified,document,reader,class,see,set,document,reader,class;protected,bean,definition,document,reader,create,bean,definition,document,reader,return,bean,definition,document,reader,class,cast,bean,utils,instantiate,class,this,document,reader,class
XmlBeanDefinitionReader -> protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader();1419966315;Create the {@link BeanDefinitionDocumentReader} to use for actually_reading bean definitions from an XML document._<p>The default implementation instantiates the specified "documentReaderClass"._@see #setDocumentReaderClass;protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader() {_		return BeanDefinitionDocumentReader.class.cast(BeanUtils.instantiateClass(this.documentReaderClass))__	};create,the,link,bean,definition,document,reader,to,use,for,actually,reading,bean,definitions,from,an,xml,document,p,the,default,implementation,instantiates,the,specified,document,reader,class,see,set,document,reader,class;protected,bean,definition,document,reader,create,bean,definition,document,reader,return,bean,definition,document,reader,class,cast,bean,utils,instantiate,class,this,document,reader,class
XmlBeanDefinitionReader -> protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader();1467730834;Create the {@link BeanDefinitionDocumentReader} to use for actually_reading bean definitions from an XML document._<p>The default implementation instantiates the specified "documentReaderClass"._@see #setDocumentReaderClass;protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader() {_		return BeanDefinitionDocumentReader.class.cast(BeanUtils.instantiateClass(this.documentReaderClass))__	};create,the,link,bean,definition,document,reader,to,use,for,actually,reading,bean,definitions,from,an,xml,document,p,the,default,implementation,instantiates,the,specified,document,reader,class,see,set,document,reader,class;protected,bean,definition,document,reader,create,bean,definition,document,reader,return,bean,definition,document,reader,class,cast,bean,utils,instantiate,class,this,document,reader,class
XmlBeanDefinitionReader -> protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader();1495868221;Create the {@link BeanDefinitionDocumentReader} to use for actually_reading bean definitions from an XML document._<p>The default implementation instantiates the specified "documentReaderClass"._@see #setDocumentReaderClass;protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader() {_		return BeanDefinitionDocumentReader.class.cast(BeanUtils.instantiateClass(this.documentReaderClass))__	};create,the,link,bean,definition,document,reader,to,use,for,actually,reading,bean,definitions,from,an,xml,document,p,the,default,implementation,instantiates,the,specified,document,reader,class,see,set,document,reader,class;protected,bean,definition,document,reader,create,bean,definition,document,reader,return,bean,definition,document,reader,class,cast,bean,utils,instantiate,class,this,document,reader,class
XmlBeanDefinitionReader -> protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader();1496837955;Create the {@link BeanDefinitionDocumentReader} to use for actually_reading bean definitions from an XML document._<p>The default implementation instantiates the specified "documentReaderClass"._@see #setDocumentReaderClass;protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader() {_		return BeanDefinitionDocumentReader.class.cast(BeanUtils.instantiateClass(this.documentReaderClass))__	};create,the,link,bean,definition,document,reader,to,use,for,actually,reading,bean,definitions,from,an,xml,document,p,the,default,implementation,instantiates,the,specified,document,reader,class,see,set,document,reader,class;protected,bean,definition,document,reader,create,bean,definition,document,reader,return,bean,definition,document,reader,class,cast,bean,utils,instantiate,class,this,document,reader,class
XmlBeanDefinitionReader -> protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader();1498780456;Create the {@link BeanDefinitionDocumentReader} to use for actually_reading bean definitions from an XML document._<p>The default implementation instantiates the specified "documentReaderClass"._@see #setDocumentReaderClass;protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader() {_		return BeanDefinitionDocumentReader.class.cast(BeanUtils.instantiateClass(this.documentReaderClass))__	};create,the,link,bean,definition,document,reader,to,use,for,actually,reading,bean,definitions,from,an,xml,document,p,the,default,implementation,instantiates,the,specified,document,reader,class,see,set,document,reader,class;protected,bean,definition,document,reader,create,bean,definition,document,reader,return,bean,definition,document,reader,class,cast,bean,utils,instantiate,class,this,document,reader,class
XmlBeanDefinitionReader -> protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader();1530174524;Create the {@link BeanDefinitionDocumentReader} to use for actually_reading bean definitions from an XML document._<p>The default implementation instantiates the specified "documentReaderClass"._@see #setDocumentReaderClass;protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader() {_		return BeanDefinitionDocumentReader.class.cast(BeanUtils.instantiateClass(this.documentReaderClass))__	};create,the,link,bean,definition,document,reader,to,use,for,actually,reading,bean,definitions,from,an,xml,document,p,the,default,implementation,instantiates,the,specified,document,reader,class,see,set,document,reader,class;protected,bean,definition,document,reader,create,bean,definition,document,reader,return,bean,definition,document,reader,class,cast,bean,utils,instantiate,class,this,document,reader,class
XmlBeanDefinitionReader -> protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader();1532091916;Create the {@link BeanDefinitionDocumentReader} to use for actually_reading bean definitions from an XML document._<p>The default implementation instantiates the specified "documentReaderClass"._@see #setDocumentReaderClass;protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader() {_		return BeanDefinitionDocumentReader.class.cast(BeanUtils.instantiateClass(this.documentReaderClass))__	};create,the,link,bean,definition,document,reader,to,use,for,actually,reading,bean,definitions,from,an,xml,document,p,the,default,implementation,instantiates,the,specified,document,reader,class,see,set,document,reader,class;protected,bean,definition,document,reader,create,bean,definition,document,reader,return,bean,definition,document,reader,class,cast,bean,utils,instantiate,class,this,document,reader,class
XmlBeanDefinitionReader -> protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader();1532706365;Create the {@link BeanDefinitionDocumentReader} to use for actually_reading bean definitions from an XML document._<p>The default implementation instantiates the specified "documentReaderClass"._@see #setDocumentReaderClass;protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader() {_		return BeanUtils.instantiateClass(this.documentReaderClass)__	};create,the,link,bean,definition,document,reader,to,use,for,actually,reading,bean,definitions,from,an,xml,document,p,the,default,implementation,instantiates,the,specified,document,reader,class,see,set,document,reader,class;protected,bean,definition,document,reader,create,bean,definition,document,reader,return,bean,utils,instantiate,class,this,document,reader,class
XmlBeanDefinitionReader -> protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader();1532710698;Create the {@link BeanDefinitionDocumentReader} to use for actually_reading bean definitions from an XML document._<p>The default implementation instantiates the specified "documentReaderClass"._@see #setDocumentReaderClass;protected BeanDefinitionDocumentReader createBeanDefinitionDocumentReader() {_		return BeanUtils.instantiateClass(this.documentReaderClass)__	};create,the,link,bean,definition,document,reader,to,use,for,actually,reading,bean,definitions,from,an,xml,document,p,the,default,implementation,instantiates,the,specified,document,reader,class,see,set,document,reader,class;protected,bean,definition,document,reader,create,bean,definition,document,reader,return,bean,utils,instantiate,class,this,document,reader,class
XmlBeanDefinitionReader -> public NamespaceHandlerResolver getNamespaceHandlerResolver();1382030648;Lazily create a default NamespaceHandlerResolver, if not set before._@see #createDefaultNamespaceHandlerResolver();public NamespaceHandlerResolver getNamespaceHandlerResolver() {_		if (this.namespaceHandlerResolver == null) {_			this.namespaceHandlerResolver = createDefaultNamespaceHandlerResolver()__		}_		return this.namespaceHandlerResolver__	};lazily,create,a,default,namespace,handler,resolver,if,not,set,before,see,create,default,namespace,handler,resolver;public,namespace,handler,resolver,get,namespace,handler,resolver,if,this,namespace,handler,resolver,null,this,namespace,handler,resolver,create,default,namespace,handler,resolver,return,this,namespace,handler,resolver
XmlBeanDefinitionReader -> public NamespaceHandlerResolver getNamespaceHandlerResolver();1411599760;Lazily create a default NamespaceHandlerResolver, if not set before._@see #createDefaultNamespaceHandlerResolver();public NamespaceHandlerResolver getNamespaceHandlerResolver() {_		if (this.namespaceHandlerResolver == null) {_			this.namespaceHandlerResolver = createDefaultNamespaceHandlerResolver()__		}_		return this.namespaceHandlerResolver__	};lazily,create,a,default,namespace,handler,resolver,if,not,set,before,see,create,default,namespace,handler,resolver;public,namespace,handler,resolver,get,namespace,handler,resolver,if,this,namespace,handler,resolver,null,this,namespace,handler,resolver,create,default,namespace,handler,resolver,return,this,namespace,handler,resolver
XmlBeanDefinitionReader -> public NamespaceHandlerResolver getNamespaceHandlerResolver();1419966315;Lazily create a default NamespaceHandlerResolver, if not set before._@see #createDefaultNamespaceHandlerResolver();public NamespaceHandlerResolver getNamespaceHandlerResolver() {_		if (this.namespaceHandlerResolver == null) {_			this.namespaceHandlerResolver = createDefaultNamespaceHandlerResolver()__		}_		return this.namespaceHandlerResolver__	};lazily,create,a,default,namespace,handler,resolver,if,not,set,before,see,create,default,namespace,handler,resolver;public,namespace,handler,resolver,get,namespace,handler,resolver,if,this,namespace,handler,resolver,null,this,namespace,handler,resolver,create,default,namespace,handler,resolver,return,this,namespace,handler,resolver
XmlBeanDefinitionReader -> public NamespaceHandlerResolver getNamespaceHandlerResolver();1467730834;Lazily create a default NamespaceHandlerResolver, if not set before._@see #createDefaultNamespaceHandlerResolver();public NamespaceHandlerResolver getNamespaceHandlerResolver() {_		if (this.namespaceHandlerResolver == null) {_			this.namespaceHandlerResolver = createDefaultNamespaceHandlerResolver()__		}_		return this.namespaceHandlerResolver__	};lazily,create,a,default,namespace,handler,resolver,if,not,set,before,see,create,default,namespace,handler,resolver;public,namespace,handler,resolver,get,namespace,handler,resolver,if,this,namespace,handler,resolver,null,this,namespace,handler,resolver,create,default,namespace,handler,resolver,return,this,namespace,handler,resolver
XmlBeanDefinitionReader -> public NamespaceHandlerResolver getNamespaceHandlerResolver();1495868221;Lazily create a default NamespaceHandlerResolver, if not set before._@see #createDefaultNamespaceHandlerResolver();public NamespaceHandlerResolver getNamespaceHandlerResolver() {_		if (this.namespaceHandlerResolver == null) {_			this.namespaceHandlerResolver = createDefaultNamespaceHandlerResolver()__		}_		return this.namespaceHandlerResolver__	};lazily,create,a,default,namespace,handler,resolver,if,not,set,before,see,create,default,namespace,handler,resolver;public,namespace,handler,resolver,get,namespace,handler,resolver,if,this,namespace,handler,resolver,null,this,namespace,handler,resolver,create,default,namespace,handler,resolver,return,this,namespace,handler,resolver
XmlBeanDefinitionReader -> public NamespaceHandlerResolver getNamespaceHandlerResolver();1496837955;Lazily create a default NamespaceHandlerResolver, if not set before._@see #createDefaultNamespaceHandlerResolver();public NamespaceHandlerResolver getNamespaceHandlerResolver() {_		if (this.namespaceHandlerResolver == null) {_			this.namespaceHandlerResolver = createDefaultNamespaceHandlerResolver()__		}_		return this.namespaceHandlerResolver__	};lazily,create,a,default,namespace,handler,resolver,if,not,set,before,see,create,default,namespace,handler,resolver;public,namespace,handler,resolver,get,namespace,handler,resolver,if,this,namespace,handler,resolver,null,this,namespace,handler,resolver,create,default,namespace,handler,resolver,return,this,namespace,handler,resolver
XmlBeanDefinitionReader -> public NamespaceHandlerResolver getNamespaceHandlerResolver();1498780456;Lazily create a default NamespaceHandlerResolver, if not set before._@see #createDefaultNamespaceHandlerResolver();public NamespaceHandlerResolver getNamespaceHandlerResolver() {_		if (this.namespaceHandlerResolver == null) {_			this.namespaceHandlerResolver = createDefaultNamespaceHandlerResolver()__		}_		return this.namespaceHandlerResolver__	};lazily,create,a,default,namespace,handler,resolver,if,not,set,before,see,create,default,namespace,handler,resolver;public,namespace,handler,resolver,get,namespace,handler,resolver,if,this,namespace,handler,resolver,null,this,namespace,handler,resolver,create,default,namespace,handler,resolver,return,this,namespace,handler,resolver
XmlBeanDefinitionReader -> public NamespaceHandlerResolver getNamespaceHandlerResolver();1530174524;Lazily create a default NamespaceHandlerResolver, if not set before._@see #createDefaultNamespaceHandlerResolver();public NamespaceHandlerResolver getNamespaceHandlerResolver() {_		if (this.namespaceHandlerResolver == null) {_			this.namespaceHandlerResolver = createDefaultNamespaceHandlerResolver()__		}_		return this.namespaceHandlerResolver__	};lazily,create,a,default,namespace,handler,resolver,if,not,set,before,see,create,default,namespace,handler,resolver;public,namespace,handler,resolver,get,namespace,handler,resolver,if,this,namespace,handler,resolver,null,this,namespace,handler,resolver,create,default,namespace,handler,resolver,return,this,namespace,handler,resolver
XmlBeanDefinitionReader -> public NamespaceHandlerResolver getNamespaceHandlerResolver();1532091916;Lazily create a default NamespaceHandlerResolver, if not set before._@see #createDefaultNamespaceHandlerResolver();public NamespaceHandlerResolver getNamespaceHandlerResolver() {_		if (this.namespaceHandlerResolver == null) {_			this.namespaceHandlerResolver = createDefaultNamespaceHandlerResolver()__		}_		return this.namespaceHandlerResolver__	};lazily,create,a,default,namespace,handler,resolver,if,not,set,before,see,create,default,namespace,handler,resolver;public,namespace,handler,resolver,get,namespace,handler,resolver,if,this,namespace,handler,resolver,null,this,namespace,handler,resolver,create,default,namespace,handler,resolver,return,this,namespace,handler,resolver
XmlBeanDefinitionReader -> public NamespaceHandlerResolver getNamespaceHandlerResolver();1532706365;Lazily create a default NamespaceHandlerResolver, if not set before._@see #createDefaultNamespaceHandlerResolver();public NamespaceHandlerResolver getNamespaceHandlerResolver() {_		if (this.namespaceHandlerResolver == null) {_			this.namespaceHandlerResolver = createDefaultNamespaceHandlerResolver()__		}_		return this.namespaceHandlerResolver__	};lazily,create,a,default,namespace,handler,resolver,if,not,set,before,see,create,default,namespace,handler,resolver;public,namespace,handler,resolver,get,namespace,handler,resolver,if,this,namespace,handler,resolver,null,this,namespace,handler,resolver,create,default,namespace,handler,resolver,return,this,namespace,handler,resolver
XmlBeanDefinitionReader -> public NamespaceHandlerResolver getNamespaceHandlerResolver();1532710698;Lazily create a default NamespaceHandlerResolver, if not set before._@see #createDefaultNamespaceHandlerResolver();public NamespaceHandlerResolver getNamespaceHandlerResolver() {_		if (this.namespaceHandlerResolver == null) {_			this.namespaceHandlerResolver = createDefaultNamespaceHandlerResolver()__		}_		return this.namespaceHandlerResolver__	};lazily,create,a,default,namespace,handler,resolver,if,not,set,before,see,create,default,namespace,handler,resolver;public,namespace,handler,resolver,get,namespace,handler,resolver,if,this,namespace,handler,resolver,null,this,namespace,handler,resolver,create,default,namespace,handler,resolver,return,this,namespace,handler,resolver
XmlBeanDefinitionReader -> public void setDocumentLoader(DocumentLoader documentLoader);1328020251;Specify the {@link DocumentLoader} to use._<p>The default implementation is {@link DefaultDocumentLoader}_which loads {@link Document} instances using JAXP.;public void setDocumentLoader(DocumentLoader documentLoader) {_		this.documentLoader = (documentLoader != null ? documentLoader : new DefaultDocumentLoader())__	};specify,the,link,document,loader,to,use,p,the,default,implementation,is,link,default,document,loader,which,loads,link,document,instances,using,jaxp;public,void,set,document,loader,document,loader,document,loader,this,document,loader,document,loader,null,document,loader,new,default,document,loader
XmlBeanDefinitionReader -> public void setDocumentLoader(DocumentLoader documentLoader);1356735495;Specify the {@link DocumentLoader} to use._<p>The default implementation is {@link DefaultDocumentLoader}_which loads {@link Document} instances using JAXP.;public void setDocumentLoader(DocumentLoader documentLoader) {_		this.documentLoader = (documentLoader != null ? documentLoader : new DefaultDocumentLoader())__	};specify,the,link,document,loader,to,use,p,the,default,implementation,is,link,default,document,loader,which,loads,link,document,instances,using,jaxp;public,void,set,document,loader,document,loader,document,loader,this,document,loader,document,loader,null,document,loader,new,default,document,loader
XmlBeanDefinitionReader -> public void setDocumentLoader(DocumentLoader documentLoader);1357119239;Specify the {@link DocumentLoader} to use._<p>The default implementation is {@link DefaultDocumentLoader}_which loads {@link Document} instances using JAXP.;public void setDocumentLoader(DocumentLoader documentLoader) {_		this.documentLoader = (documentLoader != null ? documentLoader : new DefaultDocumentLoader())__	};specify,the,link,document,loader,to,use,p,the,default,implementation,is,link,default,document,loader,which,loads,link,document,instances,using,jaxp;public,void,set,document,loader,document,loader,document,loader,this,document,loader,document,loader,null,document,loader,new,default,document,loader
XmlBeanDefinitionReader -> public void setDocumentLoader(DocumentLoader documentLoader);1368482696;Specify the {@link DocumentLoader} to use._<p>The default implementation is {@link DefaultDocumentLoader}_which loads {@link Document} instances using JAXP.;public void setDocumentLoader(DocumentLoader documentLoader) {_		this.documentLoader = (documentLoader != null ? documentLoader : new DefaultDocumentLoader())__	};specify,the,link,document,loader,to,use,p,the,default,implementation,is,link,default,document,loader,which,loads,link,document,instances,using,jaxp;public,void,set,document,loader,document,loader,document,loader,this,document,loader,document,loader,null,document,loader,new,default,document,loader
XmlBeanDefinitionReader -> public void setDocumentLoader(DocumentLoader documentLoader);1382030648;Specify the {@link DocumentLoader} to use._<p>The default implementation is {@link DefaultDocumentLoader}_which loads {@link Document} instances using JAXP.;public void setDocumentLoader(DocumentLoader documentLoader) {_		this.documentLoader = (documentLoader != null ? documentLoader : new DefaultDocumentLoader())__	};specify,the,link,document,loader,to,use,p,the,default,implementation,is,link,default,document,loader,which,loads,link,document,instances,using,jaxp;public,void,set,document,loader,document,loader,document,loader,this,document,loader,document,loader,null,document,loader,new,default,document,loader
XmlBeanDefinitionReader -> public void setDocumentLoader(DocumentLoader documentLoader);1411599760;Specify the {@link DocumentLoader} to use._<p>The default implementation is {@link DefaultDocumentLoader}_which loads {@link Document} instances using JAXP.;public void setDocumentLoader(DocumentLoader documentLoader) {_		this.documentLoader = (documentLoader != null ? documentLoader : new DefaultDocumentLoader())__	};specify,the,link,document,loader,to,use,p,the,default,implementation,is,link,default,document,loader,which,loads,link,document,instances,using,jaxp;public,void,set,document,loader,document,loader,document,loader,this,document,loader,document,loader,null,document,loader,new,default,document,loader
XmlBeanDefinitionReader -> public void setDocumentLoader(DocumentLoader documentLoader);1419966315;Specify the {@link DocumentLoader} to use._<p>The default implementation is {@link DefaultDocumentLoader}_which loads {@link Document} instances using JAXP.;public void setDocumentLoader(DocumentLoader documentLoader) {_		this.documentLoader = (documentLoader != null ? documentLoader : new DefaultDocumentLoader())__	};specify,the,link,document,loader,to,use,p,the,default,implementation,is,link,default,document,loader,which,loads,link,document,instances,using,jaxp;public,void,set,document,loader,document,loader,document,loader,this,document,loader,document,loader,null,document,loader,new,default,document,loader
XmlBeanDefinitionReader -> public void setDocumentLoader(DocumentLoader documentLoader);1467730834;Specify the {@link DocumentLoader} to use._<p>The default implementation is {@link DefaultDocumentLoader}_which loads {@link Document} instances using JAXP.;public void setDocumentLoader(DocumentLoader documentLoader) {_		this.documentLoader = (documentLoader != null ? documentLoader : new DefaultDocumentLoader())__	};specify,the,link,document,loader,to,use,p,the,default,implementation,is,link,default,document,loader,which,loads,link,document,instances,using,jaxp;public,void,set,document,loader,document,loader,document,loader,this,document,loader,document,loader,null,document,loader,new,default,document,loader
XmlBeanDefinitionReader -> public void setDocumentLoader(DocumentLoader documentLoader);1495868221;Specify the {@link DocumentLoader} to use._<p>The default implementation is {@link DefaultDocumentLoader}_which loads {@link Document} instances using JAXP.;public void setDocumentLoader(DocumentLoader documentLoader) {_		this.documentLoader = (documentLoader != null ? documentLoader : new DefaultDocumentLoader())__	};specify,the,link,document,loader,to,use,p,the,default,implementation,is,link,default,document,loader,which,loads,link,document,instances,using,jaxp;public,void,set,document,loader,document,loader,document,loader,this,document,loader,document,loader,null,document,loader,new,default,document,loader
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException;1328020251;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(inputSource, "resource loaded through SAX InputSource")__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,throws,bean,definition,store,exception,return,load,bean,definitions,input,source,resource,loaded,through,sax,input,source
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException;1356735495;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(inputSource, "resource loaded through SAX InputSource")__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,throws,bean,definition,store,exception,return,load,bean,definitions,input,source,resource,loaded,through,sax,input,source
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException;1357119239;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(inputSource, "resource loaded through SAX InputSource")__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,throws,bean,definition,store,exception,return,load,bean,definitions,input,source,resource,loaded,through,sax,input,source
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException;1368482696;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(inputSource, "resource loaded through SAX InputSource")__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,throws,bean,definition,store,exception,return,load,bean,definitions,input,source,resource,loaded,through,sax,input,source
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException;1382030648;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(inputSource, "resource loaded through SAX InputSource")__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,throws,bean,definition,store,exception,return,load,bean,definitions,input,source,resource,loaded,through,sax,input,source
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException;1411599760;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(inputSource, "resource loaded through SAX InputSource")__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,throws,bean,definition,store,exception,return,load,bean,definitions,input,source,resource,loaded,through,sax,input,source
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException;1419966315;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(inputSource, "resource loaded through SAX InputSource")__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,throws,bean,definition,store,exception,return,load,bean,definitions,input,source,resource,loaded,through,sax,input,source
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException;1467730834;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(inputSource, "resource loaded through SAX InputSource")__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,throws,bean,definition,store,exception,return,load,bean,definitions,input,source,resource,loaded,through,sax,input,source
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException;1495868221;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(inputSource, "resource loaded through SAX InputSource")__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,throws,bean,definition,store,exception,return,load,bean,definitions,input,source,resource,loaded,through,sax,input,source
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException;1496837955;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(inputSource, "resource loaded through SAX InputSource")__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,throws,bean,definition,store,exception,return,load,bean,definitions,input,source,resource,loaded,through,sax,input,source
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException;1498780456;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(inputSource, "resource loaded through SAX InputSource")__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,throws,bean,definition,store,exception,return,load,bean,definitions,input,source,resource,loaded,through,sax,input,source
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException;1530174524;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(inputSource, "resource loaded through SAX InputSource")__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,throws,bean,definition,store,exception,return,load,bean,definitions,input,source,resource,loaded,through,sax,input,source
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException;1532091916;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(inputSource, "resource loaded through SAX InputSource")__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,throws,bean,definition,store,exception,return,load,bean,definitions,input,source,resource,loaded,through,sax,input,source
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException;1532706365;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(inputSource, "resource loaded through SAX InputSource")__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,throws,bean,definition,store,exception,return,load,bean,definitions,input,source,resource,loaded,through,sax,input,source
XmlBeanDefinitionReader -> public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException;1532710698;Load bean definitions from the specified XML file._@param inputSource the SAX InputSource to read from_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(InputSource inputSource) throws BeanDefinitionStoreException {_		return loadBeanDefinitions(inputSource, "resource loaded through SAX InputSource")__	};load,bean,definitions,from,the,specified,xml,file,param,input,source,the,sax,input,source,to,read,from,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,input,source,input,source,throws,bean,definition,store,exception,return,load,bean,definitions,input,source,resource,loaded,through,sax,input,source
XmlBeanDefinitionReader -> public void setNamespaceHandlerResolver(@Nullable NamespaceHandlerResolver namespaceHandlerResolver);1496837955;Specify the {@link NamespaceHandlerResolver} to use._<p>If none is specified, a default instance will be created through_{@link #createDefaultNamespaceHandlerResolver()}.;public void setNamespaceHandlerResolver(@Nullable NamespaceHandlerResolver namespaceHandlerResolver) {_		this.namespaceHandlerResolver = namespaceHandlerResolver__	};specify,the,link,namespace,handler,resolver,to,use,p,if,none,is,specified,a,default,instance,will,be,created,through,link,create,default,namespace,handler,resolver;public,void,set,namespace,handler,resolver,nullable,namespace,handler,resolver,namespace,handler,resolver,this,namespace,handler,resolver,namespace,handler,resolver
XmlBeanDefinitionReader -> public void setNamespaceHandlerResolver(@Nullable NamespaceHandlerResolver namespaceHandlerResolver);1498780456;Specify the {@link NamespaceHandlerResolver} to use._<p>If none is specified, a default instance will be created through_{@link #createDefaultNamespaceHandlerResolver()}.;public void setNamespaceHandlerResolver(@Nullable NamespaceHandlerResolver namespaceHandlerResolver) {_		this.namespaceHandlerResolver = namespaceHandlerResolver__	};specify,the,link,namespace,handler,resolver,to,use,p,if,none,is,specified,a,default,instance,will,be,created,through,link,create,default,namespace,handler,resolver;public,void,set,namespace,handler,resolver,nullable,namespace,handler,resolver,namespace,handler,resolver,this,namespace,handler,resolver,namespace,handler,resolver
XmlBeanDefinitionReader -> public void setNamespaceHandlerResolver(@Nullable NamespaceHandlerResolver namespaceHandlerResolver);1530174524;Specify the {@link NamespaceHandlerResolver} to use._<p>If none is specified, a default instance will be created through_{@link #createDefaultNamespaceHandlerResolver()}.;public void setNamespaceHandlerResolver(@Nullable NamespaceHandlerResolver namespaceHandlerResolver) {_		this.namespaceHandlerResolver = namespaceHandlerResolver__	};specify,the,link,namespace,handler,resolver,to,use,p,if,none,is,specified,a,default,instance,will,be,created,through,link,create,default,namespace,handler,resolver;public,void,set,namespace,handler,resolver,nullable,namespace,handler,resolver,namespace,handler,resolver,this,namespace,handler,resolver,namespace,handler,resolver
XmlBeanDefinitionReader -> public void setNamespaceHandlerResolver(@Nullable NamespaceHandlerResolver namespaceHandlerResolver);1532091916;Specify the {@link NamespaceHandlerResolver} to use._<p>If none is specified, a default instance will be created through_{@link #createDefaultNamespaceHandlerResolver()}.;public void setNamespaceHandlerResolver(@Nullable NamespaceHandlerResolver namespaceHandlerResolver) {_		this.namespaceHandlerResolver = namespaceHandlerResolver__	};specify,the,link,namespace,handler,resolver,to,use,p,if,none,is,specified,a,default,instance,will,be,created,through,link,create,default,namespace,handler,resolver;public,void,set,namespace,handler,resolver,nullable,namespace,handler,resolver,namespace,handler,resolver,this,namespace,handler,resolver,namespace,handler,resolver
XmlBeanDefinitionReader -> public void setNamespaceHandlerResolver(@Nullable NamespaceHandlerResolver namespaceHandlerResolver);1532706365;Specify the {@link NamespaceHandlerResolver} to use._<p>If none is specified, a default instance will be created through_{@link #createDefaultNamespaceHandlerResolver()}.;public void setNamespaceHandlerResolver(@Nullable NamespaceHandlerResolver namespaceHandlerResolver) {_		this.namespaceHandlerResolver = namespaceHandlerResolver__	};specify,the,link,namespace,handler,resolver,to,use,p,if,none,is,specified,a,default,instance,will,be,created,through,link,create,default,namespace,handler,resolver;public,void,set,namespace,handler,resolver,nullable,namespace,handler,resolver,namespace,handler,resolver,this,namespace,handler,resolver,namespace,handler,resolver
XmlBeanDefinitionReader -> public void setNamespaceHandlerResolver(@Nullable NamespaceHandlerResolver namespaceHandlerResolver);1532710698;Specify the {@link NamespaceHandlerResolver} to use._<p>If none is specified, a default instance will be created through_{@link #createDefaultNamespaceHandlerResolver()}.;public void setNamespaceHandlerResolver(@Nullable NamespaceHandlerResolver namespaceHandlerResolver) {_		this.namespaceHandlerResolver = namespaceHandlerResolver__	};specify,the,link,namespace,handler,resolver,to,use,p,if,none,is,specified,a,default,instance,will,be,created,through,link,create,default,namespace,handler,resolver;public,void,set,namespace,handler,resolver,nullable,namespace,handler,resolver,namespace,handler,resolver,this,namespace,handler,resolver,namespace,handler,resolver
XmlBeanDefinitionReader -> protected XmlReaderContext createReaderContext(Resource resource);1328020251;Create the {@link XmlReaderContext} to pass over to the document reader.;protected XmlReaderContext createReaderContext(Resource resource) {_		if (this.namespaceHandlerResolver == null) {_			this.namespaceHandlerResolver = createDefaultNamespaceHandlerResolver()__		}_		return new XmlReaderContext(resource, this.problemReporter, this.eventListener,_				this.sourceExtractor, this, this.namespaceHandlerResolver)__	};create,the,link,xml,reader,context,to,pass,over,to,the,document,reader;protected,xml,reader,context,create,reader,context,resource,resource,if,this,namespace,handler,resolver,null,this,namespace,handler,resolver,create,default,namespace,handler,resolver,return,new,xml,reader,context,resource,this,problem,reporter,this,event,listener,this,source,extractor,this,this,namespace,handler,resolver
XmlBeanDefinitionReader -> protected XmlReaderContext createReaderContext(Resource resource);1356735495;Create the {@link XmlReaderContext} to pass over to the document reader.;protected XmlReaderContext createReaderContext(Resource resource) {_		if (this.namespaceHandlerResolver == null) {_			this.namespaceHandlerResolver = createDefaultNamespaceHandlerResolver()__		}_		return new XmlReaderContext(resource, this.problemReporter, this.eventListener,_				this.sourceExtractor, this, this.namespaceHandlerResolver)__	};create,the,link,xml,reader,context,to,pass,over,to,the,document,reader;protected,xml,reader,context,create,reader,context,resource,resource,if,this,namespace,handler,resolver,null,this,namespace,handler,resolver,create,default,namespace,handler,resolver,return,new,xml,reader,context,resource,this,problem,reporter,this,event,listener,this,source,extractor,this,this,namespace,handler,resolver
XmlBeanDefinitionReader -> protected XmlReaderContext createReaderContext(Resource resource);1357119239;Create the {@link XmlReaderContext} to pass over to the document reader.;protected XmlReaderContext createReaderContext(Resource resource) {_		if (this.namespaceHandlerResolver == null) {_			this.namespaceHandlerResolver = createDefaultNamespaceHandlerResolver()__		}_		return new XmlReaderContext(resource, this.problemReporter, this.eventListener,_				this.sourceExtractor, this, this.namespaceHandlerResolver)__	};create,the,link,xml,reader,context,to,pass,over,to,the,document,reader;protected,xml,reader,context,create,reader,context,resource,resource,if,this,namespace,handler,resolver,null,this,namespace,handler,resolver,create,default,namespace,handler,resolver,return,new,xml,reader,context,resource,this,problem,reporter,this,event,listener,this,source,extractor,this,this,namespace,handler,resolver
XmlBeanDefinitionReader -> protected XmlReaderContext createReaderContext(Resource resource);1368482696;Create the {@link XmlReaderContext} to pass over to the document reader.;protected XmlReaderContext createReaderContext(Resource resource) {_		if (this.namespaceHandlerResolver == null) {_			this.namespaceHandlerResolver = createDefaultNamespaceHandlerResolver()__		}_		return new XmlReaderContext(resource, this.problemReporter, this.eventListener,_				this.sourceExtractor, this, this.namespaceHandlerResolver)__	};create,the,link,xml,reader,context,to,pass,over,to,the,document,reader;protected,xml,reader,context,create,reader,context,resource,resource,if,this,namespace,handler,resolver,null,this,namespace,handler,resolver,create,default,namespace,handler,resolver,return,new,xml,reader,context,resource,this,problem,reporter,this,event,listener,this,source,extractor,this,this,namespace,handler,resolver
XmlBeanDefinitionReader -> public void setDocumentLoader(@Nullable DocumentLoader documentLoader);1496837955;Specify the {@link DocumentLoader} to use._<p>The default implementation is {@link DefaultDocumentLoader}_which loads {@link Document} instances using JAXP.;public void setDocumentLoader(@Nullable DocumentLoader documentLoader) {_		this.documentLoader = (documentLoader != null ? documentLoader : new DefaultDocumentLoader())__	};specify,the,link,document,loader,to,use,p,the,default,implementation,is,link,default,document,loader,which,loads,link,document,instances,using,jaxp;public,void,set,document,loader,nullable,document,loader,document,loader,this,document,loader,document,loader,null,document,loader,new,default,document,loader
XmlBeanDefinitionReader -> public void setDocumentLoader(@Nullable DocumentLoader documentLoader);1498780456;Specify the {@link DocumentLoader} to use._<p>The default implementation is {@link DefaultDocumentLoader}_which loads {@link Document} instances using JAXP.;public void setDocumentLoader(@Nullable DocumentLoader documentLoader) {_		this.documentLoader = (documentLoader != null ? documentLoader : new DefaultDocumentLoader())__	};specify,the,link,document,loader,to,use,p,the,default,implementation,is,link,default,document,loader,which,loads,link,document,instances,using,jaxp;public,void,set,document,loader,nullable,document,loader,document,loader,this,document,loader,document,loader,null,document,loader,new,default,document,loader
XmlBeanDefinitionReader -> public void setDocumentLoader(@Nullable DocumentLoader documentLoader);1530174524;Specify the {@link DocumentLoader} to use._<p>The default implementation is {@link DefaultDocumentLoader}_which loads {@link Document} instances using JAXP.;public void setDocumentLoader(@Nullable DocumentLoader documentLoader) {_		this.documentLoader = (documentLoader != null ? documentLoader : new DefaultDocumentLoader())__	};specify,the,link,document,loader,to,use,p,the,default,implementation,is,link,default,document,loader,which,loads,link,document,instances,using,jaxp;public,void,set,document,loader,nullable,document,loader,document,loader,this,document,loader,document,loader,null,document,loader,new,default,document,loader
XmlBeanDefinitionReader -> public void setDocumentLoader(@Nullable DocumentLoader documentLoader);1532091916;Specify the {@link DocumentLoader} to use._<p>The default implementation is {@link DefaultDocumentLoader}_which loads {@link Document} instances using JAXP.;public void setDocumentLoader(@Nullable DocumentLoader documentLoader) {_		this.documentLoader = (documentLoader != null ? documentLoader : new DefaultDocumentLoader())__	};specify,the,link,document,loader,to,use,p,the,default,implementation,is,link,default,document,loader,which,loads,link,document,instances,using,jaxp;public,void,set,document,loader,nullable,document,loader,document,loader,this,document,loader,document,loader,null,document,loader,new,default,document,loader
XmlBeanDefinitionReader -> public void setDocumentLoader(@Nullable DocumentLoader documentLoader);1532706365;Specify the {@link DocumentLoader} to use._<p>The default implementation is {@link DefaultDocumentLoader}_which loads {@link Document} instances using JAXP.;public void setDocumentLoader(@Nullable DocumentLoader documentLoader) {_		this.documentLoader = (documentLoader != null ? documentLoader : new DefaultDocumentLoader())__	};specify,the,link,document,loader,to,use,p,the,default,implementation,is,link,default,document,loader,which,loads,link,document,instances,using,jaxp;public,void,set,document,loader,nullable,document,loader,document,loader,this,document,loader,document,loader,null,document,loader,new,default,document,loader
XmlBeanDefinitionReader -> public void setDocumentLoader(@Nullable DocumentLoader documentLoader);1532710698;Specify the {@link DocumentLoader} to use._<p>The default implementation is {@link DefaultDocumentLoader}_which loads {@link Document} instances using JAXP.;public void setDocumentLoader(@Nullable DocumentLoader documentLoader) {_		this.documentLoader = (documentLoader != null ? documentLoader : new DefaultDocumentLoader())__	};specify,the,link,document,loader,to,use,p,the,default,implementation,is,link,default,document,loader,which,loads,link,document,instances,using,jaxp;public,void,set,document,loader,nullable,document,loader,document,loader,this,document,loader,document,loader,null,document,loader,new,default,document,loader
XmlBeanDefinitionReader -> public void setDocumentReaderClass(Class<?> documentReaderClass);1328020251;Specify the {@link BeanDefinitionDocumentReader} implementation to use,_responsible for the actual reading of the XML bean definition document._<p>The default is {@link DefaultBeanDefinitionDocumentReader}._@param documentReaderClass the desired BeanDefinitionDocumentReader implementation class;public void setDocumentReaderClass(Class<?> documentReaderClass) {_		if (documentReaderClass == null || !BeanDefinitionDocumentReader.class.isAssignableFrom(documentReaderClass)) {_			throw new IllegalArgumentException(_					"documentReaderClass must be an implementation of the BeanDefinitionDocumentReader interface")__		}_		this.documentReaderClass = documentReaderClass__	};specify,the,link,bean,definition,document,reader,implementation,to,use,responsible,for,the,actual,reading,of,the,xml,bean,definition,document,p,the,default,is,link,default,bean,definition,document,reader,param,document,reader,class,the,desired,bean,definition,document,reader,implementation,class;public,void,set,document,reader,class,class,document,reader,class,if,document,reader,class,null,bean,definition,document,reader,class,is,assignable,from,document,reader,class,throw,new,illegal,argument,exception,document,reader,class,must,be,an,implementation,of,the,bean,definition,document,reader,interface,this,document,reader,class,document,reader,class
XmlBeanDefinitionReader -> public void setDocumentReaderClass(Class<?> documentReaderClass);1356735495;Specify the {@link BeanDefinitionDocumentReader} implementation to use,_responsible for the actual reading of the XML bean definition document._<p>The default is {@link DefaultBeanDefinitionDocumentReader}._@param documentReaderClass the desired BeanDefinitionDocumentReader implementation class;public void setDocumentReaderClass(Class<?> documentReaderClass) {_		if (documentReaderClass == null || !BeanDefinitionDocumentReader.class.isAssignableFrom(documentReaderClass)) {_			throw new IllegalArgumentException(_					"documentReaderClass must be an implementation of the BeanDefinitionDocumentReader interface")__		}_		this.documentReaderClass = documentReaderClass__	};specify,the,link,bean,definition,document,reader,implementation,to,use,responsible,for,the,actual,reading,of,the,xml,bean,definition,document,p,the,default,is,link,default,bean,definition,document,reader,param,document,reader,class,the,desired,bean,definition,document,reader,implementation,class;public,void,set,document,reader,class,class,document,reader,class,if,document,reader,class,null,bean,definition,document,reader,class,is,assignable,from,document,reader,class,throw,new,illegal,argument,exception,document,reader,class,must,be,an,implementation,of,the,bean,definition,document,reader,interface,this,document,reader,class,document,reader,class
XmlBeanDefinitionReader -> public void setDocumentReaderClass(Class<?> documentReaderClass);1357119239;Specify the {@link BeanDefinitionDocumentReader} implementation to use,_responsible for the actual reading of the XML bean definition document._<p>The default is {@link DefaultBeanDefinitionDocumentReader}._@param documentReaderClass the desired BeanDefinitionDocumentReader implementation class;public void setDocumentReaderClass(Class<?> documentReaderClass) {_		if (documentReaderClass == null || !BeanDefinitionDocumentReader.class.isAssignableFrom(documentReaderClass)) {_			throw new IllegalArgumentException(_					"documentReaderClass must be an implementation of the BeanDefinitionDocumentReader interface")__		}_		this.documentReaderClass = documentReaderClass__	};specify,the,link,bean,definition,document,reader,implementation,to,use,responsible,for,the,actual,reading,of,the,xml,bean,definition,document,p,the,default,is,link,default,bean,definition,document,reader,param,document,reader,class,the,desired,bean,definition,document,reader,implementation,class;public,void,set,document,reader,class,class,document,reader,class,if,document,reader,class,null,bean,definition,document,reader,class,is,assignable,from,document,reader,class,throw,new,illegal,argument,exception,document,reader,class,must,be,an,implementation,of,the,bean,definition,document,reader,interface,this,document,reader,class,document,reader,class
XmlBeanDefinitionReader -> public void setDocumentReaderClass(Class<?> documentReaderClass);1368482696;Specify the {@link BeanDefinitionDocumentReader} implementation to use,_responsible for the actual reading of the XML bean definition document._<p>The default is {@link DefaultBeanDefinitionDocumentReader}._@param documentReaderClass the desired BeanDefinitionDocumentReader implementation class;public void setDocumentReaderClass(Class<?> documentReaderClass) {_		if (documentReaderClass == null || !BeanDefinitionDocumentReader.class.isAssignableFrom(documentReaderClass)) {_			throw new IllegalArgumentException(_					"documentReaderClass must be an implementation of the BeanDefinitionDocumentReader interface")__		}_		this.documentReaderClass = documentReaderClass__	};specify,the,link,bean,definition,document,reader,implementation,to,use,responsible,for,the,actual,reading,of,the,xml,bean,definition,document,p,the,default,is,link,default,bean,definition,document,reader,param,document,reader,class,the,desired,bean,definition,document,reader,implementation,class;public,void,set,document,reader,class,class,document,reader,class,if,document,reader,class,null,bean,definition,document,reader,class,is,assignable,from,document,reader,class,throw,new,illegal,argument,exception,document,reader,class,must,be,an,implementation,of,the,bean,definition,document,reader,interface,this,document,reader,class,document,reader,class
XmlBeanDefinitionReader -> public void setDocumentReaderClass(Class<?> documentReaderClass);1382030648;Specify the {@link BeanDefinitionDocumentReader} implementation to use,_responsible for the actual reading of the XML bean definition document._<p>The default is {@link DefaultBeanDefinitionDocumentReader}._@param documentReaderClass the desired BeanDefinitionDocumentReader implementation class;public void setDocumentReaderClass(Class<?> documentReaderClass) {_		if (documentReaderClass == null || !BeanDefinitionDocumentReader.class.isAssignableFrom(documentReaderClass)) {_			throw new IllegalArgumentException(_					"documentReaderClass must be an implementation of the BeanDefinitionDocumentReader interface")__		}_		this.documentReaderClass = documentReaderClass__	};specify,the,link,bean,definition,document,reader,implementation,to,use,responsible,for,the,actual,reading,of,the,xml,bean,definition,document,p,the,default,is,link,default,bean,definition,document,reader,param,document,reader,class,the,desired,bean,definition,document,reader,implementation,class;public,void,set,document,reader,class,class,document,reader,class,if,document,reader,class,null,bean,definition,document,reader,class,is,assignable,from,document,reader,class,throw,new,illegal,argument,exception,document,reader,class,must,be,an,implementation,of,the,bean,definition,document,reader,interface,this,document,reader,class,document,reader,class
XmlBeanDefinitionReader -> public void setDocumentReaderClass(Class<?> documentReaderClass);1411599760;Specify the {@link BeanDefinitionDocumentReader} implementation to use,_responsible for the actual reading of the XML bean definition document._<p>The default is {@link DefaultBeanDefinitionDocumentReader}._@param documentReaderClass the desired BeanDefinitionDocumentReader implementation class;public void setDocumentReaderClass(Class<?> documentReaderClass) {_		if (documentReaderClass == null || !BeanDefinitionDocumentReader.class.isAssignableFrom(documentReaderClass)) {_			throw new IllegalArgumentException(_					"documentReaderClass must be an implementation of the BeanDefinitionDocumentReader interface")__		}_		this.documentReaderClass = documentReaderClass__	};specify,the,link,bean,definition,document,reader,implementation,to,use,responsible,for,the,actual,reading,of,the,xml,bean,definition,document,p,the,default,is,link,default,bean,definition,document,reader,param,document,reader,class,the,desired,bean,definition,document,reader,implementation,class;public,void,set,document,reader,class,class,document,reader,class,if,document,reader,class,null,bean,definition,document,reader,class,is,assignable,from,document,reader,class,throw,new,illegal,argument,exception,document,reader,class,must,be,an,implementation,of,the,bean,definition,document,reader,interface,this,document,reader,class,document,reader,class
XmlBeanDefinitionReader -> public void setDocumentReaderClass(Class<?> documentReaderClass);1419966315;Specify the {@link BeanDefinitionDocumentReader} implementation to use,_responsible for the actual reading of the XML bean definition document._<p>The default is {@link DefaultBeanDefinitionDocumentReader}._@param documentReaderClass the desired BeanDefinitionDocumentReader implementation class;public void setDocumentReaderClass(Class<?> documentReaderClass) {_		if (documentReaderClass == null || !BeanDefinitionDocumentReader.class.isAssignableFrom(documentReaderClass)) {_			throw new IllegalArgumentException(_					"documentReaderClass must be an implementation of the BeanDefinitionDocumentReader interface")__		}_		this.documentReaderClass = documentReaderClass__	};specify,the,link,bean,definition,document,reader,implementation,to,use,responsible,for,the,actual,reading,of,the,xml,bean,definition,document,p,the,default,is,link,default,bean,definition,document,reader,param,document,reader,class,the,desired,bean,definition,document,reader,implementation,class;public,void,set,document,reader,class,class,document,reader,class,if,document,reader,class,null,bean,definition,document,reader,class,is,assignable,from,document,reader,class,throw,new,illegal,argument,exception,document,reader,class,must,be,an,implementation,of,the,bean,definition,document,reader,interface,this,document,reader,class,document,reader,class
XmlBeanDefinitionReader -> public void setDocumentReaderClass(Class<?> documentReaderClass);1467730834;Specify the {@link BeanDefinitionDocumentReader} implementation to use,_responsible for the actual reading of the XML bean definition document._<p>The default is {@link DefaultBeanDefinitionDocumentReader}._@param documentReaderClass the desired BeanDefinitionDocumentReader implementation class;public void setDocumentReaderClass(Class<?> documentReaderClass) {_		if (documentReaderClass == null || !BeanDefinitionDocumentReader.class.isAssignableFrom(documentReaderClass)) {_			throw new IllegalArgumentException(_					"documentReaderClass must be an implementation of the BeanDefinitionDocumentReader interface")__		}_		this.documentReaderClass = documentReaderClass__	};specify,the,link,bean,definition,document,reader,implementation,to,use,responsible,for,the,actual,reading,of,the,xml,bean,definition,document,p,the,default,is,link,default,bean,definition,document,reader,param,document,reader,class,the,desired,bean,definition,document,reader,implementation,class;public,void,set,document,reader,class,class,document,reader,class,if,document,reader,class,null,bean,definition,document,reader,class,is,assignable,from,document,reader,class,throw,new,illegal,argument,exception,document,reader,class,must,be,an,implementation,of,the,bean,definition,document,reader,interface,this,document,reader,class,document,reader,class
XmlBeanDefinitionReader -> public void setDocumentReaderClass(Class<?> documentReaderClass);1495868221;Specify the {@link BeanDefinitionDocumentReader} implementation to use,_responsible for the actual reading of the XML bean definition document._<p>The default is {@link DefaultBeanDefinitionDocumentReader}._@param documentReaderClass the desired BeanDefinitionDocumentReader implementation class;public void setDocumentReaderClass(Class<?> documentReaderClass) {_		if (documentReaderClass == null || !BeanDefinitionDocumentReader.class.isAssignableFrom(documentReaderClass)) {_			throw new IllegalArgumentException(_					"documentReaderClass must be an implementation of the BeanDefinitionDocumentReader interface")__		}_		this.documentReaderClass = documentReaderClass__	};specify,the,link,bean,definition,document,reader,implementation,to,use,responsible,for,the,actual,reading,of,the,xml,bean,definition,document,p,the,default,is,link,default,bean,definition,document,reader,param,document,reader,class,the,desired,bean,definition,document,reader,implementation,class;public,void,set,document,reader,class,class,document,reader,class,if,document,reader,class,null,bean,definition,document,reader,class,is,assignable,from,document,reader,class,throw,new,illegal,argument,exception,document,reader,class,must,be,an,implementation,of,the,bean,definition,document,reader,interface,this,document,reader,class,document,reader,class
XmlBeanDefinitionReader -> public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException;1328020251;Load bean definitions from the specified XML file._@param encodedResource the resource descriptor for the XML file,_allowing to specify an encoding to use for parsing the file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException {_		Assert.notNull(encodedResource, "EncodedResource must not be null")__		if (logger.isInfoEnabled()) {_			logger.info("Loading XML bean definitions from " + encodedResource.getResource())__		}__		Set<EncodedResource> currentResources = this.resourcesCurrentlyBeingLoaded.get()__		if (currentResources == null) {_			currentResources = new HashSet<EncodedResource>(4)__			this.resourcesCurrentlyBeingLoaded.set(currentResources)__		}_		if (!currentResources.add(encodedResource)) {_			throw new BeanDefinitionStoreException(_					"Detected cyclic loading of " + encodedResource + " - check your import definitions!")__		}_		try {_			InputStream inputStream = encodedResource.getResource().getInputStream()__			try {_				InputSource inputSource = new InputSource(inputStream)__				if (encodedResource.getEncoding() != null) {_					inputSource.setEncoding(encodedResource.getEncoding())__				}_				return doLoadBeanDefinitions(inputSource, encodedResource.getResource())__			}_			finally {_				inputStream.close()__			}_		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"IOException parsing XML document from " + encodedResource.getResource(), ex)__		}_		finally {_			currentResources.remove(encodedResource)__			if (currentResources.isEmpty()) {_				this.resourcesCurrentlyBeingLoaded.remove()__			}_		}_	};load,bean,definitions,from,the,specified,xml,file,param,encoded,resource,the,resource,descriptor,for,the,xml,file,allowing,to,specify,an,encoding,to,use,for,parsing,the,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,encoded,resource,encoded,resource,throws,bean,definition,store,exception,assert,not,null,encoded,resource,encoded,resource,must,not,be,null,if,logger,is,info,enabled,logger,info,loading,xml,bean,definitions,from,encoded,resource,get,resource,set,encoded,resource,current,resources,this,resources,currently,being,loaded,get,if,current,resources,null,current,resources,new,hash,set,encoded,resource,4,this,resources,currently,being,loaded,set,current,resources,if,current,resources,add,encoded,resource,throw,new,bean,definition,store,exception,detected,cyclic,loading,of,encoded,resource,check,your,import,definitions,try,input,stream,input,stream,encoded,resource,get,resource,get,input,stream,try,input,source,input,source,new,input,source,input,stream,if,encoded,resource,get,encoding,null,input,source,set,encoding,encoded,resource,get,encoding,return,do,load,bean,definitions,input,source,encoded,resource,get,resource,finally,input,stream,close,catch,ioexception,ex,throw,new,bean,definition,store,exception,ioexception,parsing,xml,document,from,encoded,resource,get,resource,ex,finally,current,resources,remove,encoded,resource,if,current,resources,is,empty,this,resources,currently,being,loaded,remove
XmlBeanDefinitionReader -> public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException;1356735495;Load bean definitions from the specified XML file._@param encodedResource the resource descriptor for the XML file,_allowing to specify an encoding to use for parsing the file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException {_		Assert.notNull(encodedResource, "EncodedResource must not be null")__		if (logger.isInfoEnabled()) {_			logger.info("Loading XML bean definitions from " + encodedResource.getResource())__		}__		Set<EncodedResource> currentResources = this.resourcesCurrentlyBeingLoaded.get()__		if (currentResources == null) {_			currentResources = new HashSet<EncodedResource>(4)__			this.resourcesCurrentlyBeingLoaded.set(currentResources)__		}_		if (!currentResources.add(encodedResource)) {_			throw new BeanDefinitionStoreException(_					"Detected cyclic loading of " + encodedResource + " - check your import definitions!")__		}_		try {_			InputStream inputStream = encodedResource.getResource().getInputStream()__			try {_				InputSource inputSource = new InputSource(inputStream)__				if (encodedResource.getEncoding() != null) {_					inputSource.setEncoding(encodedResource.getEncoding())__				}_				return doLoadBeanDefinitions(inputSource, encodedResource.getResource())__			}_			finally {_				inputStream.close()__			}_		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"IOException parsing XML document from " + encodedResource.getResource(), ex)__		}_		finally {_			currentResources.remove(encodedResource)__			if (currentResources.isEmpty()) {_				this.resourcesCurrentlyBeingLoaded.remove()__			}_		}_	};load,bean,definitions,from,the,specified,xml,file,param,encoded,resource,the,resource,descriptor,for,the,xml,file,allowing,to,specify,an,encoding,to,use,for,parsing,the,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,encoded,resource,encoded,resource,throws,bean,definition,store,exception,assert,not,null,encoded,resource,encoded,resource,must,not,be,null,if,logger,is,info,enabled,logger,info,loading,xml,bean,definitions,from,encoded,resource,get,resource,set,encoded,resource,current,resources,this,resources,currently,being,loaded,get,if,current,resources,null,current,resources,new,hash,set,encoded,resource,4,this,resources,currently,being,loaded,set,current,resources,if,current,resources,add,encoded,resource,throw,new,bean,definition,store,exception,detected,cyclic,loading,of,encoded,resource,check,your,import,definitions,try,input,stream,input,stream,encoded,resource,get,resource,get,input,stream,try,input,source,input,source,new,input,source,input,stream,if,encoded,resource,get,encoding,null,input,source,set,encoding,encoded,resource,get,encoding,return,do,load,bean,definitions,input,source,encoded,resource,get,resource,finally,input,stream,close,catch,ioexception,ex,throw,new,bean,definition,store,exception,ioexception,parsing,xml,document,from,encoded,resource,get,resource,ex,finally,current,resources,remove,encoded,resource,if,current,resources,is,empty,this,resources,currently,being,loaded,remove
XmlBeanDefinitionReader -> public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException;1357119239;Load bean definitions from the specified XML file._@param encodedResource the resource descriptor for the XML file,_allowing to specify an encoding to use for parsing the file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException {_		Assert.notNull(encodedResource, "EncodedResource must not be null")__		if (logger.isInfoEnabled()) {_			logger.info("Loading XML bean definitions from " + encodedResource.getResource())__		}__		Set<EncodedResource> currentResources = this.resourcesCurrentlyBeingLoaded.get()__		if (currentResources == null) {_			currentResources = new HashSet<EncodedResource>(4)__			this.resourcesCurrentlyBeingLoaded.set(currentResources)__		}_		if (!currentResources.add(encodedResource)) {_			throw new BeanDefinitionStoreException(_					"Detected cyclic loading of " + encodedResource + " - check your import definitions!")__		}_		try {_			InputStream inputStream = encodedResource.getResource().getInputStream()__			try {_				InputSource inputSource = new InputSource(inputStream)__				if (encodedResource.getEncoding() != null) {_					inputSource.setEncoding(encodedResource.getEncoding())__				}_				return doLoadBeanDefinitions(inputSource, encodedResource.getResource())__			}_			finally {_				inputStream.close()__			}_		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"IOException parsing XML document from " + encodedResource.getResource(), ex)__		}_		finally {_			currentResources.remove(encodedResource)__			if (currentResources.isEmpty()) {_				this.resourcesCurrentlyBeingLoaded.remove()__			}_		}_	};load,bean,definitions,from,the,specified,xml,file,param,encoded,resource,the,resource,descriptor,for,the,xml,file,allowing,to,specify,an,encoding,to,use,for,parsing,the,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,encoded,resource,encoded,resource,throws,bean,definition,store,exception,assert,not,null,encoded,resource,encoded,resource,must,not,be,null,if,logger,is,info,enabled,logger,info,loading,xml,bean,definitions,from,encoded,resource,get,resource,set,encoded,resource,current,resources,this,resources,currently,being,loaded,get,if,current,resources,null,current,resources,new,hash,set,encoded,resource,4,this,resources,currently,being,loaded,set,current,resources,if,current,resources,add,encoded,resource,throw,new,bean,definition,store,exception,detected,cyclic,loading,of,encoded,resource,check,your,import,definitions,try,input,stream,input,stream,encoded,resource,get,resource,get,input,stream,try,input,source,input,source,new,input,source,input,stream,if,encoded,resource,get,encoding,null,input,source,set,encoding,encoded,resource,get,encoding,return,do,load,bean,definitions,input,source,encoded,resource,get,resource,finally,input,stream,close,catch,ioexception,ex,throw,new,bean,definition,store,exception,ioexception,parsing,xml,document,from,encoded,resource,get,resource,ex,finally,current,resources,remove,encoded,resource,if,current,resources,is,empty,this,resources,currently,being,loaded,remove
XmlBeanDefinitionReader -> public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException;1368482696;Load bean definitions from the specified XML file._@param encodedResource the resource descriptor for the XML file,_allowing to specify an encoding to use for parsing the file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException {_		Assert.notNull(encodedResource, "EncodedResource must not be null")__		if (logger.isInfoEnabled()) {_			logger.info("Loading XML bean definitions from " + encodedResource.getResource())__		}__		Set<EncodedResource> currentResources = this.resourcesCurrentlyBeingLoaded.get()__		if (currentResources == null) {_			currentResources = new HashSet<EncodedResource>(4)__			this.resourcesCurrentlyBeingLoaded.set(currentResources)__		}_		if (!currentResources.add(encodedResource)) {_			throw new BeanDefinitionStoreException(_					"Detected cyclic loading of " + encodedResource + " - check your import definitions!")__		}_		try {_			InputStream inputStream = encodedResource.getResource().getInputStream()__			try {_				InputSource inputSource = new InputSource(inputStream)__				if (encodedResource.getEncoding() != null) {_					inputSource.setEncoding(encodedResource.getEncoding())__				}_				return doLoadBeanDefinitions(inputSource, encodedResource.getResource())__			}_			finally {_				inputStream.close()__			}_		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"IOException parsing XML document from " + encodedResource.getResource(), ex)__		}_		finally {_			currentResources.remove(encodedResource)__			if (currentResources.isEmpty()) {_				this.resourcesCurrentlyBeingLoaded.remove()__			}_		}_	};load,bean,definitions,from,the,specified,xml,file,param,encoded,resource,the,resource,descriptor,for,the,xml,file,allowing,to,specify,an,encoding,to,use,for,parsing,the,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,encoded,resource,encoded,resource,throws,bean,definition,store,exception,assert,not,null,encoded,resource,encoded,resource,must,not,be,null,if,logger,is,info,enabled,logger,info,loading,xml,bean,definitions,from,encoded,resource,get,resource,set,encoded,resource,current,resources,this,resources,currently,being,loaded,get,if,current,resources,null,current,resources,new,hash,set,encoded,resource,4,this,resources,currently,being,loaded,set,current,resources,if,current,resources,add,encoded,resource,throw,new,bean,definition,store,exception,detected,cyclic,loading,of,encoded,resource,check,your,import,definitions,try,input,stream,input,stream,encoded,resource,get,resource,get,input,stream,try,input,source,input,source,new,input,source,input,stream,if,encoded,resource,get,encoding,null,input,source,set,encoding,encoded,resource,get,encoding,return,do,load,bean,definitions,input,source,encoded,resource,get,resource,finally,input,stream,close,catch,ioexception,ex,throw,new,bean,definition,store,exception,ioexception,parsing,xml,document,from,encoded,resource,get,resource,ex,finally,current,resources,remove,encoded,resource,if,current,resources,is,empty,this,resources,currently,being,loaded,remove
XmlBeanDefinitionReader -> public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException;1382030648;Load bean definitions from the specified XML file._@param encodedResource the resource descriptor for the XML file,_allowing to specify an encoding to use for parsing the file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException {_		Assert.notNull(encodedResource, "EncodedResource must not be null")__		if (logger.isInfoEnabled()) {_			logger.info("Loading XML bean definitions from " + encodedResource.getResource())__		}__		Set<EncodedResource> currentResources = this.resourcesCurrentlyBeingLoaded.get()__		if (currentResources == null) {_			currentResources = new HashSet<EncodedResource>(4)__			this.resourcesCurrentlyBeingLoaded.set(currentResources)__		}_		if (!currentResources.add(encodedResource)) {_			throw new BeanDefinitionStoreException(_					"Detected cyclic loading of " + encodedResource + " - check your import definitions!")__		}_		try {_			InputStream inputStream = encodedResource.getResource().getInputStream()__			try {_				InputSource inputSource = new InputSource(inputStream)__				if (encodedResource.getEncoding() != null) {_					inputSource.setEncoding(encodedResource.getEncoding())__				}_				return doLoadBeanDefinitions(inputSource, encodedResource.getResource())__			}_			finally {_				inputStream.close()__			}_		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"IOException parsing XML document from " + encodedResource.getResource(), ex)__		}_		finally {_			currentResources.remove(encodedResource)__			if (currentResources.isEmpty()) {_				this.resourcesCurrentlyBeingLoaded.remove()__			}_		}_	};load,bean,definitions,from,the,specified,xml,file,param,encoded,resource,the,resource,descriptor,for,the,xml,file,allowing,to,specify,an,encoding,to,use,for,parsing,the,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,encoded,resource,encoded,resource,throws,bean,definition,store,exception,assert,not,null,encoded,resource,encoded,resource,must,not,be,null,if,logger,is,info,enabled,logger,info,loading,xml,bean,definitions,from,encoded,resource,get,resource,set,encoded,resource,current,resources,this,resources,currently,being,loaded,get,if,current,resources,null,current,resources,new,hash,set,encoded,resource,4,this,resources,currently,being,loaded,set,current,resources,if,current,resources,add,encoded,resource,throw,new,bean,definition,store,exception,detected,cyclic,loading,of,encoded,resource,check,your,import,definitions,try,input,stream,input,stream,encoded,resource,get,resource,get,input,stream,try,input,source,input,source,new,input,source,input,stream,if,encoded,resource,get,encoding,null,input,source,set,encoding,encoded,resource,get,encoding,return,do,load,bean,definitions,input,source,encoded,resource,get,resource,finally,input,stream,close,catch,ioexception,ex,throw,new,bean,definition,store,exception,ioexception,parsing,xml,document,from,encoded,resource,get,resource,ex,finally,current,resources,remove,encoded,resource,if,current,resources,is,empty,this,resources,currently,being,loaded,remove
XmlBeanDefinitionReader -> public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException;1411599760;Load bean definitions from the specified XML file._@param encodedResource the resource descriptor for the XML file,_allowing to specify an encoding to use for parsing the file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException {_		Assert.notNull(encodedResource, "EncodedResource must not be null")__		if (logger.isInfoEnabled()) {_			logger.info("Loading XML bean definitions from " + encodedResource.getResource())__		}__		Set<EncodedResource> currentResources = this.resourcesCurrentlyBeingLoaded.get()__		if (currentResources == null) {_			currentResources = new HashSet<EncodedResource>(4)__			this.resourcesCurrentlyBeingLoaded.set(currentResources)__		}_		if (!currentResources.add(encodedResource)) {_			throw new BeanDefinitionStoreException(_					"Detected cyclic loading of " + encodedResource + " - check your import definitions!")__		}_		try {_			InputStream inputStream = encodedResource.getResource().getInputStream()__			try {_				InputSource inputSource = new InputSource(inputStream)__				if (encodedResource.getEncoding() != null) {_					inputSource.setEncoding(encodedResource.getEncoding())__				}_				return doLoadBeanDefinitions(inputSource, encodedResource.getResource())__			}_			finally {_				inputStream.close()__			}_		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"IOException parsing XML document from " + encodedResource.getResource(), ex)__		}_		finally {_			currentResources.remove(encodedResource)__			if (currentResources.isEmpty()) {_				this.resourcesCurrentlyBeingLoaded.remove()__			}_		}_	};load,bean,definitions,from,the,specified,xml,file,param,encoded,resource,the,resource,descriptor,for,the,xml,file,allowing,to,specify,an,encoding,to,use,for,parsing,the,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,encoded,resource,encoded,resource,throws,bean,definition,store,exception,assert,not,null,encoded,resource,encoded,resource,must,not,be,null,if,logger,is,info,enabled,logger,info,loading,xml,bean,definitions,from,encoded,resource,get,resource,set,encoded,resource,current,resources,this,resources,currently,being,loaded,get,if,current,resources,null,current,resources,new,hash,set,encoded,resource,4,this,resources,currently,being,loaded,set,current,resources,if,current,resources,add,encoded,resource,throw,new,bean,definition,store,exception,detected,cyclic,loading,of,encoded,resource,check,your,import,definitions,try,input,stream,input,stream,encoded,resource,get,resource,get,input,stream,try,input,source,input,source,new,input,source,input,stream,if,encoded,resource,get,encoding,null,input,source,set,encoding,encoded,resource,get,encoding,return,do,load,bean,definitions,input,source,encoded,resource,get,resource,finally,input,stream,close,catch,ioexception,ex,throw,new,bean,definition,store,exception,ioexception,parsing,xml,document,from,encoded,resource,get,resource,ex,finally,current,resources,remove,encoded,resource,if,current,resources,is,empty,this,resources,currently,being,loaded,remove
XmlBeanDefinitionReader -> public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException;1419966315;Load bean definitions from the specified XML file._@param encodedResource the resource descriptor for the XML file,_allowing to specify an encoding to use for parsing the file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException {_		Assert.notNull(encodedResource, "EncodedResource must not be null")__		if (logger.isInfoEnabled()) {_			logger.info("Loading XML bean definitions from " + encodedResource.getResource())__		}__		Set<EncodedResource> currentResources = this.resourcesCurrentlyBeingLoaded.get()__		if (currentResources == null) {_			currentResources = new HashSet<EncodedResource>(4)__			this.resourcesCurrentlyBeingLoaded.set(currentResources)__		}_		if (!currentResources.add(encodedResource)) {_			throw new BeanDefinitionStoreException(_					"Detected cyclic loading of " + encodedResource + " - check your import definitions!")__		}_		try {_			InputStream inputStream = encodedResource.getResource().getInputStream()__			try {_				InputSource inputSource = new InputSource(inputStream)__				if (encodedResource.getEncoding() != null) {_					inputSource.setEncoding(encodedResource.getEncoding())__				}_				return doLoadBeanDefinitions(inputSource, encodedResource.getResource())__			}_			finally {_				inputStream.close()__			}_		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"IOException parsing XML document from " + encodedResource.getResource(), ex)__		}_		finally {_			currentResources.remove(encodedResource)__			if (currentResources.isEmpty()) {_				this.resourcesCurrentlyBeingLoaded.remove()__			}_		}_	};load,bean,definitions,from,the,specified,xml,file,param,encoded,resource,the,resource,descriptor,for,the,xml,file,allowing,to,specify,an,encoding,to,use,for,parsing,the,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,encoded,resource,encoded,resource,throws,bean,definition,store,exception,assert,not,null,encoded,resource,encoded,resource,must,not,be,null,if,logger,is,info,enabled,logger,info,loading,xml,bean,definitions,from,encoded,resource,get,resource,set,encoded,resource,current,resources,this,resources,currently,being,loaded,get,if,current,resources,null,current,resources,new,hash,set,encoded,resource,4,this,resources,currently,being,loaded,set,current,resources,if,current,resources,add,encoded,resource,throw,new,bean,definition,store,exception,detected,cyclic,loading,of,encoded,resource,check,your,import,definitions,try,input,stream,input,stream,encoded,resource,get,resource,get,input,stream,try,input,source,input,source,new,input,source,input,stream,if,encoded,resource,get,encoding,null,input,source,set,encoding,encoded,resource,get,encoding,return,do,load,bean,definitions,input,source,encoded,resource,get,resource,finally,input,stream,close,catch,ioexception,ex,throw,new,bean,definition,store,exception,ioexception,parsing,xml,document,from,encoded,resource,get,resource,ex,finally,current,resources,remove,encoded,resource,if,current,resources,is,empty,this,resources,currently,being,loaded,remove
XmlBeanDefinitionReader -> public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException;1467730834;Load bean definitions from the specified XML file._@param encodedResource the resource descriptor for the XML file,_allowing to specify an encoding to use for parsing the file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException {_		Assert.notNull(encodedResource, "EncodedResource must not be null")__		if (logger.isInfoEnabled()) {_			logger.info("Loading XML bean definitions from " + encodedResource.getResource())__		}__		Set<EncodedResource> currentResources = this.resourcesCurrentlyBeingLoaded.get()__		if (currentResources == null) {_			currentResources = new HashSet<>(4)__			this.resourcesCurrentlyBeingLoaded.set(currentResources)__		}_		if (!currentResources.add(encodedResource)) {_			throw new BeanDefinitionStoreException(_					"Detected cyclic loading of " + encodedResource + " - check your import definitions!")__		}_		try {_			InputStream inputStream = encodedResource.getResource().getInputStream()__			try {_				InputSource inputSource = new InputSource(inputStream)__				if (encodedResource.getEncoding() != null) {_					inputSource.setEncoding(encodedResource.getEncoding())__				}_				return doLoadBeanDefinitions(inputSource, encodedResource.getResource())__			}_			finally {_				inputStream.close()__			}_		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"IOException parsing XML document from " + encodedResource.getResource(), ex)__		}_		finally {_			currentResources.remove(encodedResource)__			if (currentResources.isEmpty()) {_				this.resourcesCurrentlyBeingLoaded.remove()__			}_		}_	};load,bean,definitions,from,the,specified,xml,file,param,encoded,resource,the,resource,descriptor,for,the,xml,file,allowing,to,specify,an,encoding,to,use,for,parsing,the,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,encoded,resource,encoded,resource,throws,bean,definition,store,exception,assert,not,null,encoded,resource,encoded,resource,must,not,be,null,if,logger,is,info,enabled,logger,info,loading,xml,bean,definitions,from,encoded,resource,get,resource,set,encoded,resource,current,resources,this,resources,currently,being,loaded,get,if,current,resources,null,current,resources,new,hash,set,4,this,resources,currently,being,loaded,set,current,resources,if,current,resources,add,encoded,resource,throw,new,bean,definition,store,exception,detected,cyclic,loading,of,encoded,resource,check,your,import,definitions,try,input,stream,input,stream,encoded,resource,get,resource,get,input,stream,try,input,source,input,source,new,input,source,input,stream,if,encoded,resource,get,encoding,null,input,source,set,encoding,encoded,resource,get,encoding,return,do,load,bean,definitions,input,source,encoded,resource,get,resource,finally,input,stream,close,catch,ioexception,ex,throw,new,bean,definition,store,exception,ioexception,parsing,xml,document,from,encoded,resource,get,resource,ex,finally,current,resources,remove,encoded,resource,if,current,resources,is,empty,this,resources,currently,being,loaded,remove
XmlBeanDefinitionReader -> public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException;1495868221;Load bean definitions from the specified XML file._@param encodedResource the resource descriptor for the XML file,_allowing to specify an encoding to use for parsing the file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException {_		Assert.notNull(encodedResource, "EncodedResource must not be null")__		if (logger.isInfoEnabled()) {_			logger.info("Loading XML bean definitions from " + encodedResource.getResource())__		}__		Set<EncodedResource> currentResources = this.resourcesCurrentlyBeingLoaded.get()__		if (currentResources == null) {_			currentResources = new HashSet<>(4)__			this.resourcesCurrentlyBeingLoaded.set(currentResources)__		}_		if (!currentResources.add(encodedResource)) {_			throw new BeanDefinitionStoreException(_					"Detected cyclic loading of " + encodedResource + " - check your import definitions!")__		}_		try {_			InputStream inputStream = encodedResource.getResource().getInputStream()__			try {_				InputSource inputSource = new InputSource(inputStream)__				if (encodedResource.getEncoding() != null) {_					inputSource.setEncoding(encodedResource.getEncoding())__				}_				return doLoadBeanDefinitions(inputSource, encodedResource.getResource())__			}_			finally {_				inputStream.close()__			}_		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"IOException parsing XML document from " + encodedResource.getResource(), ex)__		}_		finally {_			currentResources.remove(encodedResource)__			if (currentResources.isEmpty()) {_				this.resourcesCurrentlyBeingLoaded.remove()__			}_		}_	};load,bean,definitions,from,the,specified,xml,file,param,encoded,resource,the,resource,descriptor,for,the,xml,file,allowing,to,specify,an,encoding,to,use,for,parsing,the,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,encoded,resource,encoded,resource,throws,bean,definition,store,exception,assert,not,null,encoded,resource,encoded,resource,must,not,be,null,if,logger,is,info,enabled,logger,info,loading,xml,bean,definitions,from,encoded,resource,get,resource,set,encoded,resource,current,resources,this,resources,currently,being,loaded,get,if,current,resources,null,current,resources,new,hash,set,4,this,resources,currently,being,loaded,set,current,resources,if,current,resources,add,encoded,resource,throw,new,bean,definition,store,exception,detected,cyclic,loading,of,encoded,resource,check,your,import,definitions,try,input,stream,input,stream,encoded,resource,get,resource,get,input,stream,try,input,source,input,source,new,input,source,input,stream,if,encoded,resource,get,encoding,null,input,source,set,encoding,encoded,resource,get,encoding,return,do,load,bean,definitions,input,source,encoded,resource,get,resource,finally,input,stream,close,catch,ioexception,ex,throw,new,bean,definition,store,exception,ioexception,parsing,xml,document,from,encoded,resource,get,resource,ex,finally,current,resources,remove,encoded,resource,if,current,resources,is,empty,this,resources,currently,being,loaded,remove
XmlBeanDefinitionReader -> public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException;1496837955;Load bean definitions from the specified XML file._@param encodedResource the resource descriptor for the XML file,_allowing to specify an encoding to use for parsing the file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException {_		Assert.notNull(encodedResource, "EncodedResource must not be null")__		if (logger.isInfoEnabled()) {_			logger.info("Loading XML bean definitions from " + encodedResource.getResource())__		}__		Set<EncodedResource> currentResources = this.resourcesCurrentlyBeingLoaded.get()__		if (currentResources == null) {_			currentResources = new HashSet<>(4)__			this.resourcesCurrentlyBeingLoaded.set(currentResources)__		}_		if (!currentResources.add(encodedResource)) {_			throw new BeanDefinitionStoreException(_					"Detected cyclic loading of " + encodedResource + " - check your import definitions!")__		}_		try {_			InputStream inputStream = encodedResource.getResource().getInputStream()__			try {_				InputSource inputSource = new InputSource(inputStream)__				if (encodedResource.getEncoding() != null) {_					inputSource.setEncoding(encodedResource.getEncoding())__				}_				return doLoadBeanDefinitions(inputSource, encodedResource.getResource())__			}_			finally {_				inputStream.close()__			}_		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"IOException parsing XML document from " + encodedResource.getResource(), ex)__		}_		finally {_			currentResources.remove(encodedResource)__			if (currentResources.isEmpty()) {_				this.resourcesCurrentlyBeingLoaded.remove()__			}_		}_	};load,bean,definitions,from,the,specified,xml,file,param,encoded,resource,the,resource,descriptor,for,the,xml,file,allowing,to,specify,an,encoding,to,use,for,parsing,the,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,encoded,resource,encoded,resource,throws,bean,definition,store,exception,assert,not,null,encoded,resource,encoded,resource,must,not,be,null,if,logger,is,info,enabled,logger,info,loading,xml,bean,definitions,from,encoded,resource,get,resource,set,encoded,resource,current,resources,this,resources,currently,being,loaded,get,if,current,resources,null,current,resources,new,hash,set,4,this,resources,currently,being,loaded,set,current,resources,if,current,resources,add,encoded,resource,throw,new,bean,definition,store,exception,detected,cyclic,loading,of,encoded,resource,check,your,import,definitions,try,input,stream,input,stream,encoded,resource,get,resource,get,input,stream,try,input,source,input,source,new,input,source,input,stream,if,encoded,resource,get,encoding,null,input,source,set,encoding,encoded,resource,get,encoding,return,do,load,bean,definitions,input,source,encoded,resource,get,resource,finally,input,stream,close,catch,ioexception,ex,throw,new,bean,definition,store,exception,ioexception,parsing,xml,document,from,encoded,resource,get,resource,ex,finally,current,resources,remove,encoded,resource,if,current,resources,is,empty,this,resources,currently,being,loaded,remove
XmlBeanDefinitionReader -> public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException;1498780456;Load bean definitions from the specified XML file._@param encodedResource the resource descriptor for the XML file,_allowing to specify an encoding to use for parsing the file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException {_		Assert.notNull(encodedResource, "EncodedResource must not be null")__		if (logger.isInfoEnabled()) {_			logger.info("Loading XML bean definitions from " + encodedResource.getResource())__		}__		Set<EncodedResource> currentResources = this.resourcesCurrentlyBeingLoaded.get()__		if (currentResources == null) {_			currentResources = new HashSet<>(4)__			this.resourcesCurrentlyBeingLoaded.set(currentResources)__		}_		if (!currentResources.add(encodedResource)) {_			throw new BeanDefinitionStoreException(_					"Detected cyclic loading of " + encodedResource + " - check your import definitions!")__		}_		try {_			InputStream inputStream = encodedResource.getResource().getInputStream()__			try {_				InputSource inputSource = new InputSource(inputStream)__				if (encodedResource.getEncoding() != null) {_					inputSource.setEncoding(encodedResource.getEncoding())__				}_				return doLoadBeanDefinitions(inputSource, encodedResource.getResource())__			}_			finally {_				inputStream.close()__			}_		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"IOException parsing XML document from " + encodedResource.getResource(), ex)__		}_		finally {_			currentResources.remove(encodedResource)__			if (currentResources.isEmpty()) {_				this.resourcesCurrentlyBeingLoaded.remove()__			}_		}_	};load,bean,definitions,from,the,specified,xml,file,param,encoded,resource,the,resource,descriptor,for,the,xml,file,allowing,to,specify,an,encoding,to,use,for,parsing,the,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,encoded,resource,encoded,resource,throws,bean,definition,store,exception,assert,not,null,encoded,resource,encoded,resource,must,not,be,null,if,logger,is,info,enabled,logger,info,loading,xml,bean,definitions,from,encoded,resource,get,resource,set,encoded,resource,current,resources,this,resources,currently,being,loaded,get,if,current,resources,null,current,resources,new,hash,set,4,this,resources,currently,being,loaded,set,current,resources,if,current,resources,add,encoded,resource,throw,new,bean,definition,store,exception,detected,cyclic,loading,of,encoded,resource,check,your,import,definitions,try,input,stream,input,stream,encoded,resource,get,resource,get,input,stream,try,input,source,input,source,new,input,source,input,stream,if,encoded,resource,get,encoding,null,input,source,set,encoding,encoded,resource,get,encoding,return,do,load,bean,definitions,input,source,encoded,resource,get,resource,finally,input,stream,close,catch,ioexception,ex,throw,new,bean,definition,store,exception,ioexception,parsing,xml,document,from,encoded,resource,get,resource,ex,finally,current,resources,remove,encoded,resource,if,current,resources,is,empty,this,resources,currently,being,loaded,remove
XmlBeanDefinitionReader -> public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException;1530174524;Load bean definitions from the specified XML file._@param encodedResource the resource descriptor for the XML file,_allowing to specify an encoding to use for parsing the file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException {_		Assert.notNull(encodedResource, "EncodedResource must not be null")__		if (logger.isInfoEnabled()) {_			logger.info("Loading XML bean definitions from " + encodedResource.getResource())__		}__		Set<EncodedResource> currentResources = this.resourcesCurrentlyBeingLoaded.get()__		if (currentResources == null) {_			currentResources = new HashSet<>(4)__			this.resourcesCurrentlyBeingLoaded.set(currentResources)__		}_		if (!currentResources.add(encodedResource)) {_			throw new BeanDefinitionStoreException(_					"Detected cyclic loading of " + encodedResource + " - check your import definitions!")__		}_		try {_			InputStream inputStream = encodedResource.getResource().getInputStream()__			try {_				InputSource inputSource = new InputSource(inputStream)__				if (encodedResource.getEncoding() != null) {_					inputSource.setEncoding(encodedResource.getEncoding())__				}_				return doLoadBeanDefinitions(inputSource, encodedResource.getResource())__			}_			finally {_				inputStream.close()__			}_		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"IOException parsing XML document from " + encodedResource.getResource(), ex)__		}_		finally {_			currentResources.remove(encodedResource)__			if (currentResources.isEmpty()) {_				this.resourcesCurrentlyBeingLoaded.remove()__			}_		}_	};load,bean,definitions,from,the,specified,xml,file,param,encoded,resource,the,resource,descriptor,for,the,xml,file,allowing,to,specify,an,encoding,to,use,for,parsing,the,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,encoded,resource,encoded,resource,throws,bean,definition,store,exception,assert,not,null,encoded,resource,encoded,resource,must,not,be,null,if,logger,is,info,enabled,logger,info,loading,xml,bean,definitions,from,encoded,resource,get,resource,set,encoded,resource,current,resources,this,resources,currently,being,loaded,get,if,current,resources,null,current,resources,new,hash,set,4,this,resources,currently,being,loaded,set,current,resources,if,current,resources,add,encoded,resource,throw,new,bean,definition,store,exception,detected,cyclic,loading,of,encoded,resource,check,your,import,definitions,try,input,stream,input,stream,encoded,resource,get,resource,get,input,stream,try,input,source,input,source,new,input,source,input,stream,if,encoded,resource,get,encoding,null,input,source,set,encoding,encoded,resource,get,encoding,return,do,load,bean,definitions,input,source,encoded,resource,get,resource,finally,input,stream,close,catch,ioexception,ex,throw,new,bean,definition,store,exception,ioexception,parsing,xml,document,from,encoded,resource,get,resource,ex,finally,current,resources,remove,encoded,resource,if,current,resources,is,empty,this,resources,currently,being,loaded,remove
XmlBeanDefinitionReader -> public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException;1532091916;Load bean definitions from the specified XML file._@param encodedResource the resource descriptor for the XML file,_allowing to specify an encoding to use for parsing the file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException {_		Assert.notNull(encodedResource, "EncodedResource must not be null")__		if (logger.isDebugEnabled()) {_			logger.debug("Loading XML bean definitions from " + encodedResource.getResource())__		}__		Set<EncodedResource> currentResources = this.resourcesCurrentlyBeingLoaded.get()__		if (currentResources == null) {_			currentResources = new HashSet<>(4)__			this.resourcesCurrentlyBeingLoaded.set(currentResources)__		}_		if (!currentResources.add(encodedResource)) {_			throw new BeanDefinitionStoreException(_					"Detected cyclic loading of " + encodedResource + " - check your import definitions!")__		}_		try {_			InputStream inputStream = encodedResource.getResource().getInputStream()__			try {_				InputSource inputSource = new InputSource(inputStream)__				if (encodedResource.getEncoding() != null) {_					inputSource.setEncoding(encodedResource.getEncoding())__				}_				return doLoadBeanDefinitions(inputSource, encodedResource.getResource())__			}_			finally {_				inputStream.close()__			}_		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"IOException parsing XML document from " + encodedResource.getResource(), ex)__		}_		finally {_			currentResources.remove(encodedResource)__			if (currentResources.isEmpty()) {_				this.resourcesCurrentlyBeingLoaded.remove()__			}_		}_	};load,bean,definitions,from,the,specified,xml,file,param,encoded,resource,the,resource,descriptor,for,the,xml,file,allowing,to,specify,an,encoding,to,use,for,parsing,the,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,encoded,resource,encoded,resource,throws,bean,definition,store,exception,assert,not,null,encoded,resource,encoded,resource,must,not,be,null,if,logger,is,debug,enabled,logger,debug,loading,xml,bean,definitions,from,encoded,resource,get,resource,set,encoded,resource,current,resources,this,resources,currently,being,loaded,get,if,current,resources,null,current,resources,new,hash,set,4,this,resources,currently,being,loaded,set,current,resources,if,current,resources,add,encoded,resource,throw,new,bean,definition,store,exception,detected,cyclic,loading,of,encoded,resource,check,your,import,definitions,try,input,stream,input,stream,encoded,resource,get,resource,get,input,stream,try,input,source,input,source,new,input,source,input,stream,if,encoded,resource,get,encoding,null,input,source,set,encoding,encoded,resource,get,encoding,return,do,load,bean,definitions,input,source,encoded,resource,get,resource,finally,input,stream,close,catch,ioexception,ex,throw,new,bean,definition,store,exception,ioexception,parsing,xml,document,from,encoded,resource,get,resource,ex,finally,current,resources,remove,encoded,resource,if,current,resources,is,empty,this,resources,currently,being,loaded,remove
XmlBeanDefinitionReader -> public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException;1532706365;Load bean definitions from the specified XML file._@param encodedResource the resource descriptor for the XML file,_allowing to specify an encoding to use for parsing the file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException {_		Assert.notNull(encodedResource, "EncodedResource must not be null")__		if (logger.isTraceEnabled()) {_			logger.trace("Loading XML bean definitions from " + encodedResource)__		}__		Set<EncodedResource> currentResources = this.resourcesCurrentlyBeingLoaded.get()__		if (currentResources == null) {_			currentResources = new HashSet<>(4)__			this.resourcesCurrentlyBeingLoaded.set(currentResources)__		}_		if (!currentResources.add(encodedResource)) {_			throw new BeanDefinitionStoreException(_					"Detected cyclic loading of " + encodedResource + " - check your import definitions!")__		}_		try {_			InputStream inputStream = encodedResource.getResource().getInputStream()__			try {_				InputSource inputSource = new InputSource(inputStream)__				if (encodedResource.getEncoding() != null) {_					inputSource.setEncoding(encodedResource.getEncoding())__				}_				return doLoadBeanDefinitions(inputSource, encodedResource.getResource())__			}_			finally {_				inputStream.close()__			}_		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"IOException parsing XML document from " + encodedResource.getResource(), ex)__		}_		finally {_			currentResources.remove(encodedResource)__			if (currentResources.isEmpty()) {_				this.resourcesCurrentlyBeingLoaded.remove()__			}_		}_	};load,bean,definitions,from,the,specified,xml,file,param,encoded,resource,the,resource,descriptor,for,the,xml,file,allowing,to,specify,an,encoding,to,use,for,parsing,the,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,encoded,resource,encoded,resource,throws,bean,definition,store,exception,assert,not,null,encoded,resource,encoded,resource,must,not,be,null,if,logger,is,trace,enabled,logger,trace,loading,xml,bean,definitions,from,encoded,resource,set,encoded,resource,current,resources,this,resources,currently,being,loaded,get,if,current,resources,null,current,resources,new,hash,set,4,this,resources,currently,being,loaded,set,current,resources,if,current,resources,add,encoded,resource,throw,new,bean,definition,store,exception,detected,cyclic,loading,of,encoded,resource,check,your,import,definitions,try,input,stream,input,stream,encoded,resource,get,resource,get,input,stream,try,input,source,input,source,new,input,source,input,stream,if,encoded,resource,get,encoding,null,input,source,set,encoding,encoded,resource,get,encoding,return,do,load,bean,definitions,input,source,encoded,resource,get,resource,finally,input,stream,close,catch,ioexception,ex,throw,new,bean,definition,store,exception,ioexception,parsing,xml,document,from,encoded,resource,get,resource,ex,finally,current,resources,remove,encoded,resource,if,current,resources,is,empty,this,resources,currently,being,loaded,remove
XmlBeanDefinitionReader -> public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException;1532710698;Load bean definitions from the specified XML file._@param encodedResource the resource descriptor for the XML file,_allowing to specify an encoding to use for parsing the file_@return the number of bean definitions found_@throws BeanDefinitionStoreException in case of loading or parsing errors;public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException {_		Assert.notNull(encodedResource, "EncodedResource must not be null")__		if (logger.isTraceEnabled()) {_			logger.trace("Loading XML bean definitions from " + encodedResource)__		}__		Set<EncodedResource> currentResources = this.resourcesCurrentlyBeingLoaded.get()__		if (currentResources == null) {_			currentResources = new HashSet<>(4)__			this.resourcesCurrentlyBeingLoaded.set(currentResources)__		}_		if (!currentResources.add(encodedResource)) {_			throw new BeanDefinitionStoreException(_					"Detected cyclic loading of " + encodedResource + " - check your import definitions!")__		}_		try {_			InputStream inputStream = encodedResource.getResource().getInputStream()__			try {_				InputSource inputSource = new InputSource(inputStream)__				if (encodedResource.getEncoding() != null) {_					inputSource.setEncoding(encodedResource.getEncoding())__				}_				return doLoadBeanDefinitions(inputSource, encodedResource.getResource())__			}_			finally {_				inputStream.close()__			}_		}_		catch (IOException ex) {_			throw new BeanDefinitionStoreException(_					"IOException parsing XML document from " + encodedResource.getResource(), ex)__		}_		finally {_			currentResources.remove(encodedResource)__			if (currentResources.isEmpty()) {_				this.resourcesCurrentlyBeingLoaded.remove()__			}_		}_	};load,bean,definitions,from,the,specified,xml,file,param,encoded,resource,the,resource,descriptor,for,the,xml,file,allowing,to,specify,an,encoding,to,use,for,parsing,the,file,return,the,number,of,bean,definitions,found,throws,bean,definition,store,exception,in,case,of,loading,or,parsing,errors;public,int,load,bean,definitions,encoded,resource,encoded,resource,throws,bean,definition,store,exception,assert,not,null,encoded,resource,encoded,resource,must,not,be,null,if,logger,is,trace,enabled,logger,trace,loading,xml,bean,definitions,from,encoded,resource,set,encoded,resource,current,resources,this,resources,currently,being,loaded,get,if,current,resources,null,current,resources,new,hash,set,4,this,resources,currently,being,loaded,set,current,resources,if,current,resources,add,encoded,resource,throw,new,bean,definition,store,exception,detected,cyclic,loading,of,encoded,resource,check,your,import,definitions,try,input,stream,input,stream,encoded,resource,get,resource,get,input,stream,try,input,source,input,source,new,input,source,input,stream,if,encoded,resource,get,encoding,null,input,source,set,encoding,encoded,resource,get,encoding,return,do,load,bean,definitions,input,source,encoded,resource,get,resource,finally,input,stream,close,catch,ioexception,ex,throw,new,bean,definition,store,exception,ioexception,parsing,xml,document,from,encoded,resource,get,resource,ex,finally,current,resources,remove,encoded,resource,if,current,resources,is,empty,this,resources,currently,being,loaded,remove
