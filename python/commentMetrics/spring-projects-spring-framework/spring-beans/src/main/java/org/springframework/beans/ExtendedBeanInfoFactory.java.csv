# id;timestamp;commentText;codeText;commentWords;codeWords
ExtendedBeanInfoFactory -> public BeanInfo getBeanInfo(Class<?> beanClass) throws IntrospectionException;1347201928;Return a new {@link ExtendedBeanInfo} for the given bean class.;public BeanInfo getBeanInfo(Class<?> beanClass) throws IntrospectionException {_		return new ExtendedBeanInfo(Introspector.getBeanInfo(beanClass))__	};return,a,new,link,extended,bean,info,for,the,given,bean,class;public,bean,info,get,bean,info,class,bean,class,throws,introspection,exception,return,new,extended,bean,info,introspector,get,bean,info,bean,class
ExtendedBeanInfoFactory -> public BeanInfo getBeanInfo(Class<?> beanClass) throws IntrospectionException;1347220022;Return a new {@link ExtendedBeanInfo} for the given bean class.;public BeanInfo getBeanInfo(Class<?> beanClass) throws IntrospectionException {_		return new ExtendedBeanInfo(Introspector.getBeanInfo(beanClass))__	};return,a,new,link,extended,bean,info,for,the,given,bean,class;public,bean,info,get,bean,info,class,bean,class,throws,introspection,exception,return,new,extended,bean,info,introspector,get,bean,info,bean,class
ExtendedBeanInfoFactory -> public BeanInfo getBeanInfo(Class<?> beanClass) throws IntrospectionException;1347220671;Return a new {@link ExtendedBeanInfo} for the given bean class.;public BeanInfo getBeanInfo(Class<?> beanClass) throws IntrospectionException {_		return new ExtendedBeanInfo(Introspector.getBeanInfo(beanClass))__	};return,a,new,link,extended,bean,info,for,the,given,bean,class;public,bean,info,get,bean,info,class,bean,class,throws,introspection,exception,return,new,extended,bean,info,introspector,get,bean,info,bean,class
ExtendedBeanInfoFactory -> public BeanInfo getBeanInfo(Class<?> beanClass) throws IntrospectionException;1347280133;Return a new {@link ExtendedBeanInfo} for the given bean class.;public BeanInfo getBeanInfo(Class<?> beanClass) throws IntrospectionException {_		return supports(beanClass) ?_				new ExtendedBeanInfo(Introspector.getBeanInfo(beanClass)) : null__	};return,a,new,link,extended,bean,info,for,the,given,bean,class;public,bean,info,get,bean,info,class,bean,class,throws,introspection,exception,return,supports,bean,class,new,extended,bean,info,introspector,get,bean,info,bean,class,null
ExtendedBeanInfoFactory -> public BeanInfo getBeanInfo(Class<?> beanClass) throws IntrospectionException;1353842900;Return a new {@link ExtendedBeanInfo} for the given bean class.;public BeanInfo getBeanInfo(Class<?> beanClass) throws IntrospectionException {_		return supports(beanClass) ?_				new ExtendedBeanInfo(Introspector.getBeanInfo(beanClass)) : null__	};return,a,new,link,extended,bean,info,for,the,given,bean,class;public,bean,info,get,bean,info,class,bean,class,throws,introspection,exception,return,supports,bean,class,new,extended,bean,info,introspector,get,bean,info,bean,class,null
ExtendedBeanInfoFactory -> public BeanInfo getBeanInfo(Class<?> beanClass) throws IntrospectionException;1357119239;Return a new {@link ExtendedBeanInfo} for the given bean class.;public BeanInfo getBeanInfo(Class<?> beanClass) throws IntrospectionException {_		return supports(beanClass) ?_				new ExtendedBeanInfo(Introspector.getBeanInfo(beanClass)) : null__	};return,a,new,link,extended,bean,info,for,the,given,bean,class;public,bean,info,get,bean,info,class,bean,class,throws,introspection,exception,return,supports,bean,class,new,extended,bean,info,introspector,get,bean,info,bean,class,null
ExtendedBeanInfoFactory -> public BeanInfo getBeanInfo(Class<?> beanClass) throws IntrospectionException;1357119417;Return a new {@link ExtendedBeanInfo} for the given bean class.;public BeanInfo getBeanInfo(Class<?> beanClass) throws IntrospectionException {_		return supports(beanClass) ?_				new ExtendedBeanInfo(Introspector.getBeanInfo(beanClass)) : null__	};return,a,new,link,extended,bean,info,for,the,given,bean,class;public,bean,info,get,bean,info,class,bean,class,throws,introspection,exception,return,supports,bean,class,new,extended,bean,info,introspector,get,bean,info,bean,class,null
ExtendedBeanInfoFactory -> @Override 	public BeanInfo getBeanInfo(Class<?> beanClass) throws IntrospectionException;1356735495;Return a new {@link ExtendedBeanInfo} for the given bean class.;@Override_	public BeanInfo getBeanInfo(Class<?> beanClass) throws IntrospectionException {_		return supports(beanClass) ?_				new ExtendedBeanInfo(Introspector.getBeanInfo(beanClass)) : null__	};return,a,new,link,extended,bean,info,for,the,given,bean,class;override,public,bean,info,get,bean,info,class,bean,class,throws,introspection,exception,return,supports,bean,class,new,extended,bean,info,introspector,get,bean,info,bean,class,null
ExtendedBeanInfoFactory -> @Override 	public BeanInfo getBeanInfo(Class<?> beanClass) throws IntrospectionException;1368482696;Return a new {@link ExtendedBeanInfo} for the given bean class.;@Override_	public BeanInfo getBeanInfo(Class<?> beanClass) throws IntrospectionException {_		return supports(beanClass) ?_				new ExtendedBeanInfo(Introspector.getBeanInfo(beanClass)) : null__	};return,a,new,link,extended,bean,info,for,the,given,bean,class;override,public,bean,info,get,bean,info,class,bean,class,throws,introspection,exception,return,supports,bean,class,new,extended,bean,info,introspector,get,bean,info,bean,class,null
ExtendedBeanInfoFactory -> @Override 	public BeanInfo getBeanInfo(Class<?> beanClass) throws IntrospectionException;1387462227;Return an {@link ExtendedBeanInfo} for the given bean class, if applicable.;@Override_	public BeanInfo getBeanInfo(Class<?> beanClass) throws IntrospectionException {_		return (supports(beanClass) ? new ExtendedBeanInfo(Introspector.getBeanInfo(beanClass)) : null)__	};return,an,link,extended,bean,info,for,the,given,bean,class,if,applicable;override,public,bean,info,get,bean,info,class,bean,class,throws,introspection,exception,return,supports,bean,class,new,extended,bean,info,introspector,get,bean,info,bean,class,null
ExtendedBeanInfoFactory -> private boolean supports(Class<?> beanClass);1347280133;Return whether the given bean class declares or inherits any non-void returning_JavaBeans or <em>indexed property</em> setter methods.;private boolean supports(Class<?> beanClass) {_		for (Method method : beanClass.getMethods()) {_			String methodName = method.getName()__			Class<?>[] parameterTypes = method.getParameterTypes()__			if (Modifier.isPublic(method.getModifiers())_					&& methodName.length() > 3_					&& methodName.startsWith("set")_					&& (parameterTypes.length == 1_						|| (parameterTypes.length == 2 && parameterTypes[0].equals(int.class)))_					&& !void.class.isAssignableFrom(method.getReturnType())) {_				return true__			}_		}_		return false__	};return,whether,the,given,bean,class,declares,or,inherits,any,non,void,returning,java,beans,or,em,indexed,property,em,setter,methods;private,boolean,supports,class,bean,class,for,method,method,bean,class,get,methods,string,method,name,method,get,name,class,parameter,types,method,get,parameter,types,if,modifier,is,public,method,get,modifiers,method,name,length,3,method,name,starts,with,set,parameter,types,length,1,parameter,types,length,2,parameter,types,0,equals,int,class,void,class,is,assignable,from,method,get,return,type,return,true,return,false
ExtendedBeanInfoFactory -> private boolean supports(Class<?> beanClass);1353842900;Return whether the given bean class declares or inherits any non-void returning_JavaBeans or <em>indexed property</em> setter methods.;private boolean supports(Class<?> beanClass) {_		for (Method method : beanClass.getMethods()) {_			if (ExtendedBeanInfo.isNonVoidWriteMethod(method)) {_				return true__			}_		}_		return false__	};return,whether,the,given,bean,class,declares,or,inherits,any,non,void,returning,java,beans,or,em,indexed,property,em,setter,methods;private,boolean,supports,class,bean,class,for,method,method,bean,class,get,methods,if,extended,bean,info,is,non,void,write,method,method,return,true,return,false
ExtendedBeanInfoFactory -> private boolean supports(Class<?> beanClass);1356735495;Return whether the given bean class declares or inherits any non-void returning_JavaBeans or <em>indexed property</em> setter methods.;private boolean supports(Class<?> beanClass) {_		for (Method method : beanClass.getMethods()) {_			if (ExtendedBeanInfo.isNonVoidWriteMethod(method)) {_				return true__			}_		}_		return false__	};return,whether,the,given,bean,class,declares,or,inherits,any,non,void,returning,java,beans,or,em,indexed,property,em,setter,methods;private,boolean,supports,class,bean,class,for,method,method,bean,class,get,methods,if,extended,bean,info,is,non,void,write,method,method,return,true,return,false
ExtendedBeanInfoFactory -> private boolean supports(Class<?> beanClass);1357119239;Return whether the given bean class declares or inherits any non-void returning_JavaBeans or <em>indexed property</em> setter methods.;private boolean supports(Class<?> beanClass) {_		for (Method method : beanClass.getMethods()) {_			if (ExtendedBeanInfo.isNonVoidWriteMethod(method)) {_				return true__			}_		}_		return false__	};return,whether,the,given,bean,class,declares,or,inherits,any,non,void,returning,java,beans,or,em,indexed,property,em,setter,methods;private,boolean,supports,class,bean,class,for,method,method,bean,class,get,methods,if,extended,bean,info,is,non,void,write,method,method,return,true,return,false
ExtendedBeanInfoFactory -> private boolean supports(Class<?> beanClass);1357119417;Return whether the given bean class declares or inherits any non-void returning_JavaBeans or <em>indexed property</em> setter methods.;private boolean supports(Class<?> beanClass) {_		for (Method method : beanClass.getMethods()) {_			if (ExtendedBeanInfo.isCandidateWriteMethod(method)) {_				return true__			}_		}_		return false__	};return,whether,the,given,bean,class,declares,or,inherits,any,non,void,returning,java,beans,or,em,indexed,property,em,setter,methods;private,boolean,supports,class,bean,class,for,method,method,bean,class,get,methods,if,extended,bean,info,is,candidate,write,method,method,return,true,return,false
ExtendedBeanInfoFactory -> private boolean supports(Class<?> beanClass);1368482696;Return whether the given bean class declares or inherits any non-void returning_JavaBeans or <em>indexed property</em> setter methods.;private boolean supports(Class<?> beanClass) {_		for (Method method : beanClass.getMethods()) {_			if (ExtendedBeanInfo.isCandidateWriteMethod(method)) {_				return true__			}_		}_		return false__	};return,whether,the,given,bean,class,declares,or,inherits,any,non,void,returning,java,beans,or,em,indexed,property,em,setter,methods;private,boolean,supports,class,bean,class,for,method,method,bean,class,get,methods,if,extended,bean,info,is,candidate,write,method,method,return,true,return,false
ExtendedBeanInfoFactory -> private boolean supports(Class<?> beanClass);1387462227;Return whether the given bean class declares or inherits any non-void_returning bean property or indexed property setter methods.;private boolean supports(Class<?> beanClass) {_		for (Method method : beanClass.getMethods()) {_			if (ExtendedBeanInfo.isCandidateWriteMethod(method)) {_				return true__			}_		}_		return false__	};return,whether,the,given,bean,class,declares,or,inherits,any,non,void,returning,bean,property,or,indexed,property,setter,methods;private,boolean,supports,class,bean,class,for,method,method,bean,class,get,methods,if,extended,bean,info,is,candidate,write,method,method,return,true,return,false
ExtendedBeanInfoFactory -> private boolean supports(Class<?> beanClass);1502974979;Return whether the given bean class declares or inherits any non-void_returning bean property or indexed property setter methods.;private boolean supports(Class<?> beanClass) {_		for (Method method : beanClass.getMethods()) {_			if (ExtendedBeanInfo.isCandidateWriteMethod(method)) {_				return true__			}_		}_		return false__	};return,whether,the,given,bean,class,declares,or,inherits,any,non,void,returning,bean,property,or,indexed,property,setter,methods;private,boolean,supports,class,bean,class,for,method,method,bean,class,get,methods,if,extended,bean,info,is,candidate,write,method,method,return,true,return,false
ExtendedBeanInfoFactory -> public boolean supports(Class<?> beanClass);1347201928;Return whether the given bean class declares or inherits any non-void returning_JavaBeans setter methods.;public boolean supports(Class<?> beanClass) {_		for (Method method : beanClass.getMethods()) {_			String methodName = method.getName()__			Class<?>[] parameterTypes = method.getParameterTypes()__			if (Modifier.isPublic(method.getModifiers())_					&& methodName.length() > 3_					&& methodName.startsWith("set")_					&& (parameterTypes.length == 1_						|| (parameterTypes.length == 2 && parameterTypes[0].equals(int.class)))_					&& !void.class.isAssignableFrom(method.getReturnType())) {_				return true__			}_		}_		return false__	};return,whether,the,given,bean,class,declares,or,inherits,any,non,void,returning,java,beans,setter,methods;public,boolean,supports,class,bean,class,for,method,method,bean,class,get,methods,string,method,name,method,get,name,class,parameter,types,method,get,parameter,types,if,modifier,is,public,method,get,modifiers,method,name,length,3,method,name,starts,with,set,parameter,types,length,1,parameter,types,length,2,parameter,types,0,equals,int,class,void,class,is,assignable,from,method,get,return,type,return,true,return,false
ExtendedBeanInfoFactory -> public boolean supports(Class<?> beanClass);1347220022;Return whether the given bean class declares or inherits any non-void returning_JavaBeans or <em>indexed</em> setter methods.;public boolean supports(Class<?> beanClass) {_		for (Method method : beanClass.getMethods()) {_			String methodName = method.getName()__			Class<?>[] parameterTypes = method.getParameterTypes()__			if (Modifier.isPublic(method.getModifiers())_					&& methodName.length() > 3_					&& methodName.startsWith("set")_					&& (parameterTypes.length == 1_						|| (parameterTypes.length == 2 && parameterTypes[0].equals(int.class)))_					&& !void.class.isAssignableFrom(method.getReturnType())) {_				return true__			}_		}_		return false__	};return,whether,the,given,bean,class,declares,or,inherits,any,non,void,returning,java,beans,or,em,indexed,em,setter,methods;public,boolean,supports,class,bean,class,for,method,method,bean,class,get,methods,string,method,name,method,get,name,class,parameter,types,method,get,parameter,types,if,modifier,is,public,method,get,modifiers,method,name,length,3,method,name,starts,with,set,parameter,types,length,1,parameter,types,length,2,parameter,types,0,equals,int,class,void,class,is,assignable,from,method,get,return,type,return,true,return,false
ExtendedBeanInfoFactory -> public boolean supports(Class<?> beanClass);1347220671;Return whether the given bean class declares or inherits any non-void returning_JavaBeans or <em>indexed property</em> setter methods.;public boolean supports(Class<?> beanClass) {_		for (Method method : beanClass.getMethods()) {_			String methodName = method.getName()__			Class<?>[] parameterTypes = method.getParameterTypes()__			if (Modifier.isPublic(method.getModifiers())_					&& methodName.length() > 3_					&& methodName.startsWith("set")_					&& (parameterTypes.length == 1_						|| (parameterTypes.length == 2 && parameterTypes[0].equals(int.class)))_					&& !void.class.isAssignableFrom(method.getReturnType())) {_				return true__			}_		}_		return false__	};return,whether,the,given,bean,class,declares,or,inherits,any,non,void,returning,java,beans,or,em,indexed,property,em,setter,methods;public,boolean,supports,class,bean,class,for,method,method,bean,class,get,methods,string,method,name,method,get,name,class,parameter,types,method,get,parameter,types,if,modifier,is,public,method,get,modifiers,method,name,length,3,method,name,starts,with,set,parameter,types,length,1,parameter,types,length,2,parameter,types,0,equals,int,class,void,class,is,assignable,from,method,get,return,type,return,true,return,false
