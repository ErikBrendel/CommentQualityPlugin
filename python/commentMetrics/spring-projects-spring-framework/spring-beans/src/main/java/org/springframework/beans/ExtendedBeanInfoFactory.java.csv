commented;modifiers;parameterAmount;loc;comment;code
true;public;1;5;/**  * Return an {@link ExtendedBeanInfo} for the given bean class, if applicable.  */ ;/**  * Return an {@link ExtendedBeanInfo} for the given bean class, if applicable.  */ @Override @Nullable public BeanInfo getBeanInfo(Class<?> beanClass) throws IntrospectionException {     return (supports(beanClass) ? new ExtendedBeanInfo(Introspector.getBeanInfo(beanClass)) : null). }
true;private;1;8;/**  * Return whether the given bean class declares or inherits any non-void  * returning bean property or indexed property setter methods.  */ ;/**  * Return whether the given bean class declares or inherits any non-void  * returning bean property or indexed property setter methods.  */ private boolean supports(Class<?> beanClass) {     for (Method method : beanClass.getMethods()) {         if (ExtendedBeanInfo.isCandidateWriteMethod(method)) {             return true.         }     }     return false. }
false;public;0;4;;@Override public int getOrder() {     return Ordered.LOWEST_PRECEDENCE. }
