# id;timestamp;commentText;codeText;commentWords;codeWords
PropertyAccessor -> boolean isReadableProperty(String propertyName)_;1328020251;Determine whether the specified property is readable._<p>Returns <code>false</code> if the property doesn't exist._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return whether the property is readable;boolean isReadableProperty(String propertyName)_;determine,whether,the,specified,property,is,readable,p,returns,code,false,code,if,the,property,doesn,t,exist,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,whether,the,property,is,readable;boolean,is,readable,property,string,property,name
PropertyAccessor -> boolean isReadableProperty(String propertyName)_;1356735495;Determine whether the specified property is readable._<p>Returns {@code false} if the property doesn't exist._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return whether the property is readable;boolean isReadableProperty(String propertyName)_;determine,whether,the,specified,property,is,readable,p,returns,code,false,if,the,property,doesn,t,exist,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,whether,the,property,is,readable;boolean,is,readable,property,string,property,name
PropertyAccessor -> boolean isReadableProperty(String propertyName)_;1385412762;Determine whether the specified property is readable._<p>Returns {@code false} if the property doesn't exist._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return whether the property is readable;boolean isReadableProperty(String propertyName)_;determine,whether,the,specified,property,is,readable,p,returns,code,false,if,the,property,doesn,t,exist,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,whether,the,property,is,readable;boolean,is,readable,property,string,property,name
PropertyAccessor -> boolean isReadableProperty(String propertyName)_;1467983536;Determine whether the specified property is readable._<p>Returns {@code false} if the property doesn't exist._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return whether the property is readable;boolean isReadableProperty(String propertyName)_;determine,whether,the,specified,property,is,readable,p,returns,code,false,if,the,property,doesn,t,exist,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,whether,the,property,is,readable;boolean,is,readable,property,string,property,name
PropertyAccessor -> boolean isReadableProperty(String propertyName)_;1495868221;Determine whether the specified property is readable._<p>Returns {@code false} if the property doesn't exist._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return whether the property is readable;boolean isReadableProperty(String propertyName)_;determine,whether,the,specified,property,is,readable,p,returns,code,false,if,the,property,doesn,t,exist,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,whether,the,property,is,readable;boolean,is,readable,property,string,property,name
PropertyAccessor -> boolean isReadableProperty(String propertyName)_;1496837955;Determine whether the specified property is readable._<p>Returns {@code false} if the property doesn't exist._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return whether the property is readable;boolean isReadableProperty(String propertyName)_;determine,whether,the,specified,property,is,readable,p,returns,code,false,if,the,property,doesn,t,exist,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,whether,the,property,is,readable;boolean,is,readable,property,string,property,name
PropertyAccessor -> boolean isReadableProperty(String propertyName)_;1530174524;Determine whether the specified property is readable._<p>Returns {@code false} if the property doesn't exist._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return whether the property is readable;boolean isReadableProperty(String propertyName)_;determine,whether,the,specified,property,is,readable,p,returns,code,false,if,the,property,doesn,t,exist,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,whether,the,property,is,readable;boolean,is,readable,property,string,property,name
PropertyAccessor -> void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown) 			throws BeansException_;1356735495;Perform a batch update with more control over behavior._<p>Note that performing a batch update differs from performing a single update,_in that an implementation of this class will continue to update properties_if a <b>recoverable</b> error (such as a type mismatch, but <b>not</b> an_invalid field name or the like) is encountered, throwing a_{@link PropertyBatchUpdateException} containing all the individual errors._This exception can be examined later to see all binding errors._Properties that were successfully updated remain changed._@param pvs PropertyValues to set on the target object_@param ignoreUnknown should we ignore unknown properties (not found in the bean)_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occured for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated._@see #setPropertyValues(PropertyValues, boolean, boolean);void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown)_			throws BeansException_;perform,a,batch,update,with,more,control,over,behavior,p,note,that,performing,a,batch,update,differs,from,performing,a,single,update,in,that,an,implementation,of,this,class,will,continue,to,update,properties,if,a,b,recoverable,b,error,such,as,a,type,mismatch,but,b,not,b,an,invalid,field,name,or,the,like,is,encountered,throwing,a,link,property,batch,update,exception,containing,all,the,individual,errors,this,exception,can,be,examined,later,to,see,all,binding,errors,properties,that,were,successfully,updated,remain,changed,param,pvs,property,values,to,set,on,the,target,object,param,ignore,unknown,should,we,ignore,unknown,properties,not,found,in,the,bean,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occured,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated,see,set,property,values,property,values,boolean,boolean;void,set,property,values,property,values,pvs,boolean,ignore,unknown,throws,beans,exception
PropertyAccessor -> void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown) 			throws BeansException_;1385412762;Perform a batch update with more control over behavior._<p>Note that performing a batch update differs from performing a single update,_in that an implementation of this class will continue to update properties_if a <b>recoverable</b> error (such as a type mismatch, but <b>not</b> an_invalid field name or the like) is encountered, throwing a_{@link PropertyBatchUpdateException} containing all the individual errors._This exception can be examined later to see all binding errors._Properties that were successfully updated remain changed._@param pvs PropertyValues to set on the target object_@param ignoreUnknown should we ignore unknown properties (not found in the bean)_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occured for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated._@see #setPropertyValues(PropertyValues, boolean, boolean);void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown)_			throws BeansException_;perform,a,batch,update,with,more,control,over,behavior,p,note,that,performing,a,batch,update,differs,from,performing,a,single,update,in,that,an,implementation,of,this,class,will,continue,to,update,properties,if,a,b,recoverable,b,error,such,as,a,type,mismatch,but,b,not,b,an,invalid,field,name,or,the,like,is,encountered,throwing,a,link,property,batch,update,exception,containing,all,the,individual,errors,this,exception,can,be,examined,later,to,see,all,binding,errors,properties,that,were,successfully,updated,remain,changed,param,pvs,property,values,to,set,on,the,target,object,param,ignore,unknown,should,we,ignore,unknown,properties,not,found,in,the,bean,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occured,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated,see,set,property,values,property,values,boolean,boolean;void,set,property,values,property,values,pvs,boolean,ignore,unknown,throws,beans,exception
PropertyAccessor -> void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown) 			throws BeansException_;1467983536;Perform a batch update with more control over behavior._<p>Note that performing a batch update differs from performing a single update,_in that an implementation of this class will continue to update properties_if a <b>recoverable</b> error (such as a type mismatch, but <b>not</b> an_invalid field name or the like) is encountered, throwing a_{@link PropertyBatchUpdateException} containing all the individual errors._This exception can be examined later to see all binding errors._Properties that were successfully updated remain changed._@param pvs PropertyValues to set on the target object_@param ignoreUnknown should we ignore unknown properties (not found in the bean)_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occurred for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated._@see #setPropertyValues(PropertyValues, boolean, boolean);void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown)_			throws BeansException_;perform,a,batch,update,with,more,control,over,behavior,p,note,that,performing,a,batch,update,differs,from,performing,a,single,update,in,that,an,implementation,of,this,class,will,continue,to,update,properties,if,a,b,recoverable,b,error,such,as,a,type,mismatch,but,b,not,b,an,invalid,field,name,or,the,like,is,encountered,throwing,a,link,property,batch,update,exception,containing,all,the,individual,errors,this,exception,can,be,examined,later,to,see,all,binding,errors,properties,that,were,successfully,updated,remain,changed,param,pvs,property,values,to,set,on,the,target,object,param,ignore,unknown,should,we,ignore,unknown,properties,not,found,in,the,bean,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occurred,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated,see,set,property,values,property,values,boolean,boolean;void,set,property,values,property,values,pvs,boolean,ignore,unknown,throws,beans,exception
PropertyAccessor -> void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown) 			throws BeansException_;1495868221;Perform a batch update with more control over behavior._<p>Note that performing a batch update differs from performing a single update,_in that an implementation of this class will continue to update properties_if a <b>recoverable</b> error (such as a type mismatch, but <b>not</b> an_invalid field name or the like) is encountered, throwing a_{@link PropertyBatchUpdateException} containing all the individual errors._This exception can be examined later to see all binding errors._Properties that were successfully updated remain changed._@param pvs PropertyValues to set on the target object_@param ignoreUnknown should we ignore unknown properties (not found in the bean)_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occurred for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated._@see #setPropertyValues(PropertyValues, boolean, boolean);void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown)_			throws BeansException_;perform,a,batch,update,with,more,control,over,behavior,p,note,that,performing,a,batch,update,differs,from,performing,a,single,update,in,that,an,implementation,of,this,class,will,continue,to,update,properties,if,a,b,recoverable,b,error,such,as,a,type,mismatch,but,b,not,b,an,invalid,field,name,or,the,like,is,encountered,throwing,a,link,property,batch,update,exception,containing,all,the,individual,errors,this,exception,can,be,examined,later,to,see,all,binding,errors,properties,that,were,successfully,updated,remain,changed,param,pvs,property,values,to,set,on,the,target,object,param,ignore,unknown,should,we,ignore,unknown,properties,not,found,in,the,bean,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occurred,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated,see,set,property,values,property,values,boolean,boolean;void,set,property,values,property,values,pvs,boolean,ignore,unknown,throws,beans,exception
PropertyAccessor -> void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown) 			throws BeansException_;1496837955;Perform a batch update with more control over behavior._<p>Note that performing a batch update differs from performing a single update,_in that an implementation of this class will continue to update properties_if a <b>recoverable</b> error (such as a type mismatch, but <b>not</b> an_invalid field name or the like) is encountered, throwing a_{@link PropertyBatchUpdateException} containing all the individual errors._This exception can be examined later to see all binding errors._Properties that were successfully updated remain changed._@param pvs PropertyValues to set on the target object_@param ignoreUnknown should we ignore unknown properties (not found in the bean)_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occurred for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated._@see #setPropertyValues(PropertyValues, boolean, boolean);void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown)_			throws BeansException_;perform,a,batch,update,with,more,control,over,behavior,p,note,that,performing,a,batch,update,differs,from,performing,a,single,update,in,that,an,implementation,of,this,class,will,continue,to,update,properties,if,a,b,recoverable,b,error,such,as,a,type,mismatch,but,b,not,b,an,invalid,field,name,or,the,like,is,encountered,throwing,a,link,property,batch,update,exception,containing,all,the,individual,errors,this,exception,can,be,examined,later,to,see,all,binding,errors,properties,that,were,successfully,updated,remain,changed,param,pvs,property,values,to,set,on,the,target,object,param,ignore,unknown,should,we,ignore,unknown,properties,not,found,in,the,bean,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occurred,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated,see,set,property,values,property,values,boolean,boolean;void,set,property,values,property,values,pvs,boolean,ignore,unknown,throws,beans,exception
PropertyAccessor -> void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown) 			throws BeansException_;1530174524;Perform a batch update with more control over behavior._<p>Note that performing a batch update differs from performing a single update,_in that an implementation of this class will continue to update properties_if a <b>recoverable</b> error (such as a type mismatch, but <b>not</b> an_invalid field name or the like) is encountered, throwing a_{@link PropertyBatchUpdateException} containing all the individual errors._This exception can be examined later to see all binding errors._Properties that were successfully updated remain changed._@param pvs a PropertyValues to set on the target object_@param ignoreUnknown should we ignore unknown properties (not found in the bean)_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occurred for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated._@see #setPropertyValues(PropertyValues, boolean, boolean);void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown)_			throws BeansException_;perform,a,batch,update,with,more,control,over,behavior,p,note,that,performing,a,batch,update,differs,from,performing,a,single,update,in,that,an,implementation,of,this,class,will,continue,to,update,properties,if,a,b,recoverable,b,error,such,as,a,type,mismatch,but,b,not,b,an,invalid,field,name,or,the,like,is,encountered,throwing,a,link,property,batch,update,exception,containing,all,the,individual,errors,this,exception,can,be,examined,later,to,see,all,binding,errors,properties,that,were,successfully,updated,remain,changed,param,pvs,a,property,values,to,set,on,the,target,object,param,ignore,unknown,should,we,ignore,unknown,properties,not,found,in,the,bean,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occurred,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated,see,set,property,values,property,values,boolean,boolean;void,set,property,values,property,values,pvs,boolean,ignore,unknown,throws,beans,exception
PropertyAccessor -> TypeDescriptor getPropertyTypeDescriptor(String propertyName) throws BeansException_;1328020251;Return a type descriptor for the specified property:_preferably from the read method, falling back to the write method._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return the property type for the particular property,_or <code>null</code> if not determinable_@throws InvalidPropertyException if there is no such property or_if the property isn't readable;TypeDescriptor getPropertyTypeDescriptor(String propertyName) throws BeansException_;return,a,type,descriptor,for,the,specified,property,preferably,from,the,read,method,falling,back,to,the,write,method,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,the,property,type,for,the,particular,property,or,code,null,code,if,not,determinable,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,readable;type,descriptor,get,property,type,descriptor,string,property,name,throws,beans,exception
PropertyAccessor -> TypeDescriptor getPropertyTypeDescriptor(String propertyName) throws BeansException_;1356735495;Return a type descriptor for the specified property:_preferably from the read method, falling back to the write method._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return the property type for the particular property,_or {@code null} if not determinable_@throws InvalidPropertyException if there is no such property or_if the property isn't readable;TypeDescriptor getPropertyTypeDescriptor(String propertyName) throws BeansException_;return,a,type,descriptor,for,the,specified,property,preferably,from,the,read,method,falling,back,to,the,write,method,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,the,property,type,for,the,particular,property,or,code,null,if,not,determinable,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,readable;type,descriptor,get,property,type,descriptor,string,property,name,throws,beans,exception
PropertyAccessor -> TypeDescriptor getPropertyTypeDescriptor(String propertyName) throws BeansException_;1385412762;Return a type descriptor for the specified property:_preferably from the read method, falling back to the write method._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return the property type for the particular property,_or {@code null} if not determinable_@throws InvalidPropertyException if there is no such property or_if the property isn't readable;TypeDescriptor getPropertyTypeDescriptor(String propertyName) throws BeansException_;return,a,type,descriptor,for,the,specified,property,preferably,from,the,read,method,falling,back,to,the,write,method,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,the,property,type,for,the,particular,property,or,code,null,if,not,determinable,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,readable;type,descriptor,get,property,type,descriptor,string,property,name,throws,beans,exception
PropertyAccessor -> TypeDescriptor getPropertyTypeDescriptor(String propertyName) throws BeansException_;1467983536;Return a type descriptor for the specified property:_preferably from the read method, falling back to the write method._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return the property type for the particular property,_or {@code null} if not determinable_@throws InvalidPropertyException if there is no such property or_if the property isn't readable;TypeDescriptor getPropertyTypeDescriptor(String propertyName) throws BeansException_;return,a,type,descriptor,for,the,specified,property,preferably,from,the,read,method,falling,back,to,the,write,method,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,the,property,type,for,the,particular,property,or,code,null,if,not,determinable,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,readable;type,descriptor,get,property,type,descriptor,string,property,name,throws,beans,exception
PropertyAccessor -> void setPropertyValue(String propertyName, Object value) throws BeansException_;1328020251;Set the specified value as current property value._@param propertyName the name of the property to set the value of_(may be a nested path and/or an indexed/mapped property)_@param value the new value_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyAccessException if the property was valid but the_accessor method failed or a type mismatch occured;void setPropertyValue(String propertyName, Object value) throws BeansException_;set,the,specified,value,as,current,property,value,param,property,name,the,name,of,the,property,to,set,the,value,of,may,be,a,nested,path,and,or,an,indexed,mapped,property,param,value,the,new,value,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed,or,a,type,mismatch,occured;void,set,property,value,string,property,name,object,value,throws,beans,exception
PropertyAccessor -> void setPropertyValue(String propertyName, Object value) throws BeansException_;1356735495;Set the specified value as current property value._@param propertyName the name of the property to set the value of_(may be a nested path and/or an indexed/mapped property)_@param value the new value_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyAccessException if the property was valid but the_accessor method failed or a type mismatch occured;void setPropertyValue(String propertyName, Object value) throws BeansException_;set,the,specified,value,as,current,property,value,param,property,name,the,name,of,the,property,to,set,the,value,of,may,be,a,nested,path,and,or,an,indexed,mapped,property,param,value,the,new,value,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed,or,a,type,mismatch,occured;void,set,property,value,string,property,name,object,value,throws,beans,exception
PropertyAccessor -> void setPropertyValue(String propertyName, Object value) throws BeansException_;1385412762;Set the specified value as current property value._@param propertyName the name of the property to set the value of_(may be a nested path and/or an indexed/mapped property)_@param value the new value_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyAccessException if the property was valid but the_accessor method failed or a type mismatch occured;void setPropertyValue(String propertyName, Object value) throws BeansException_;set,the,specified,value,as,current,property,value,param,property,name,the,name,of,the,property,to,set,the,value,of,may,be,a,nested,path,and,or,an,indexed,mapped,property,param,value,the,new,value,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed,or,a,type,mismatch,occured;void,set,property,value,string,property,name,object,value,throws,beans,exception
PropertyAccessor -> void setPropertyValue(String propertyName, Object value) throws BeansException_;1467983536;Set the specified value as current property value._@param propertyName the name of the property to set the value of_(may be a nested path and/or an indexed/mapped property)_@param value the new value_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyAccessException if the property was valid but the_accessor method failed or a type mismatch occurred;void setPropertyValue(String propertyName, Object value) throws BeansException_;set,the,specified,value,as,current,property,value,param,property,name,the,name,of,the,property,to,set,the,value,of,may,be,a,nested,path,and,or,an,indexed,mapped,property,param,value,the,new,value,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed,or,a,type,mismatch,occurred;void,set,property,value,string,property,name,object,value,throws,beans,exception
PropertyAccessor -> void setPropertyValue(String propertyName, Object value) throws BeansException_;1495868221;Set the specified value as current property value._@param propertyName the name of the property to set the value of_(may be a nested path and/or an indexed/mapped property)_@param value the new value_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyAccessException if the property was valid but the_accessor method failed or a type mismatch occurred;void setPropertyValue(String propertyName, Object value) throws BeansException_;set,the,specified,value,as,current,property,value,param,property,name,the,name,of,the,property,to,set,the,value,of,may,be,a,nested,path,and,or,an,indexed,mapped,property,param,value,the,new,value,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed,or,a,type,mismatch,occurred;void,set,property,value,string,property,name,object,value,throws,beans,exception
PropertyAccessor -> void setPropertyValues(Map<?, ?> map) throws BeansException_;1328020251;Perform a batch update from a Map._<p>Bulk updates from PropertyValues are more powerful: This method is_provided for convenience. Behavior will be identical to that of_the {@link #setPropertyValues(PropertyValues)} method._@param map Map to take properties from. Contains property value objects,_keyed by property name_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occured for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated.;void setPropertyValues(Map<?, ?> map) throws BeansException_;perform,a,batch,update,from,a,map,p,bulk,updates,from,property,values,are,more,powerful,this,method,is,provided,for,convenience,behavior,will,be,identical,to,that,of,the,link,set,property,values,property,values,method,param,map,map,to,take,properties,from,contains,property,value,objects,keyed,by,property,name,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occured,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated;void,set,property,values,map,map,throws,beans,exception
PropertyAccessor -> void setPropertyValues(Map<?, ?> map) throws BeansException_;1356735495;Perform a batch update from a Map._<p>Bulk updates from PropertyValues are more powerful: This method is_provided for convenience. Behavior will be identical to that of_the {@link #setPropertyValues(PropertyValues)} method._@param map Map to take properties from. Contains property value objects,_keyed by property name_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occured for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated.;void setPropertyValues(Map<?, ?> map) throws BeansException_;perform,a,batch,update,from,a,map,p,bulk,updates,from,property,values,are,more,powerful,this,method,is,provided,for,convenience,behavior,will,be,identical,to,that,of,the,link,set,property,values,property,values,method,param,map,map,to,take,properties,from,contains,property,value,objects,keyed,by,property,name,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occured,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated;void,set,property,values,map,map,throws,beans,exception
PropertyAccessor -> void setPropertyValues(Map<?, ?> map) throws BeansException_;1385412762;Perform a batch update from a Map._<p>Bulk updates from PropertyValues are more powerful: This method is_provided for convenience. Behavior will be identical to that of_the {@link #setPropertyValues(PropertyValues)} method._@param map Map to take properties from. Contains property value objects,_keyed by property name_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occured for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated.;void setPropertyValues(Map<?, ?> map) throws BeansException_;perform,a,batch,update,from,a,map,p,bulk,updates,from,property,values,are,more,powerful,this,method,is,provided,for,convenience,behavior,will,be,identical,to,that,of,the,link,set,property,values,property,values,method,param,map,map,to,take,properties,from,contains,property,value,objects,keyed,by,property,name,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occured,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated;void,set,property,values,map,map,throws,beans,exception
PropertyAccessor -> void setPropertyValues(Map<?, ?> map) throws BeansException_;1467983536;Perform a batch update from a Map._<p>Bulk updates from PropertyValues are more powerful: This method is_provided for convenience. Behavior will be identical to that of_the {@link #setPropertyValues(PropertyValues)} method._@param map Map to take properties from. Contains property value objects,_keyed by property name_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occurred for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated.;void setPropertyValues(Map<?, ?> map) throws BeansException_;perform,a,batch,update,from,a,map,p,bulk,updates,from,property,values,are,more,powerful,this,method,is,provided,for,convenience,behavior,will,be,identical,to,that,of,the,link,set,property,values,property,values,method,param,map,map,to,take,properties,from,contains,property,value,objects,keyed,by,property,name,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occurred,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated;void,set,property,values,map,map,throws,beans,exception
PropertyAccessor -> void setPropertyValues(Map<?, ?> map) throws BeansException_;1495868221;Perform a batch update from a Map._<p>Bulk updates from PropertyValues are more powerful: This method is_provided for convenience. Behavior will be identical to that of_the {@link #setPropertyValues(PropertyValues)} method._@param map Map to take properties from. Contains property value objects,_keyed by property name_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occurred for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated.;void setPropertyValues(Map<?, ?> map) throws BeansException_;perform,a,batch,update,from,a,map,p,bulk,updates,from,property,values,are,more,powerful,this,method,is,provided,for,convenience,behavior,will,be,identical,to,that,of,the,link,set,property,values,property,values,method,param,map,map,to,take,properties,from,contains,property,value,objects,keyed,by,property,name,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occurred,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated;void,set,property,values,map,map,throws,beans,exception
PropertyAccessor -> void setPropertyValues(Map<?, ?> map) throws BeansException_;1496837955;Perform a batch update from a Map._<p>Bulk updates from PropertyValues are more powerful: This method is_provided for convenience. Behavior will be identical to that of_the {@link #setPropertyValues(PropertyValues)} method._@param map Map to take properties from. Contains property value objects,_keyed by property name_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occurred for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated.;void setPropertyValues(Map<?, ?> map) throws BeansException_;perform,a,batch,update,from,a,map,p,bulk,updates,from,property,values,are,more,powerful,this,method,is,provided,for,convenience,behavior,will,be,identical,to,that,of,the,link,set,property,values,property,values,method,param,map,map,to,take,properties,from,contains,property,value,objects,keyed,by,property,name,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occurred,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated;void,set,property,values,map,map,throws,beans,exception
PropertyAccessor -> void setPropertyValues(Map<?, ?> map) throws BeansException_;1530174524;Perform a batch update from a Map._<p>Bulk updates from PropertyValues are more powerful: This method is_provided for convenience. Behavior will be identical to that of_the {@link #setPropertyValues(PropertyValues)} method._@param map a Map to take properties from. Contains property value objects,_keyed by property name_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occurred for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated.;void setPropertyValues(Map<?, ?> map) throws BeansException_;perform,a,batch,update,from,a,map,p,bulk,updates,from,property,values,are,more,powerful,this,method,is,provided,for,convenience,behavior,will,be,identical,to,that,of,the,link,set,property,values,property,values,method,param,map,a,map,to,take,properties,from,contains,property,value,objects,keyed,by,property,name,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occurred,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated;void,set,property,values,map,map,throws,beans,exception
PropertyAccessor -> boolean isWritableProperty(String propertyName)_;1328020251;Determine whether the specified property is writable._<p>Returns <code>false</code> if the property doesn't exist._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return whether the property is writable;boolean isWritableProperty(String propertyName)_;determine,whether,the,specified,property,is,writable,p,returns,code,false,code,if,the,property,doesn,t,exist,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,whether,the,property,is,writable;boolean,is,writable,property,string,property,name
PropertyAccessor -> boolean isWritableProperty(String propertyName)_;1356735495;Determine whether the specified property is writable._<p>Returns {@code false} if the property doesn't exist._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return whether the property is writable;boolean isWritableProperty(String propertyName)_;determine,whether,the,specified,property,is,writable,p,returns,code,false,if,the,property,doesn,t,exist,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,whether,the,property,is,writable;boolean,is,writable,property,string,property,name
PropertyAccessor -> boolean isWritableProperty(String propertyName)_;1385412762;Determine whether the specified property is writable._<p>Returns {@code false} if the property doesn't exist._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return whether the property is writable;boolean isWritableProperty(String propertyName)_;determine,whether,the,specified,property,is,writable,p,returns,code,false,if,the,property,doesn,t,exist,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,whether,the,property,is,writable;boolean,is,writable,property,string,property,name
PropertyAccessor -> boolean isWritableProperty(String propertyName)_;1467983536;Determine whether the specified property is writable._<p>Returns {@code false} if the property doesn't exist._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return whether the property is writable;boolean isWritableProperty(String propertyName)_;determine,whether,the,specified,property,is,writable,p,returns,code,false,if,the,property,doesn,t,exist,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,whether,the,property,is,writable;boolean,is,writable,property,string,property,name
PropertyAccessor -> boolean isWritableProperty(String propertyName)_;1495868221;Determine whether the specified property is writable._<p>Returns {@code false} if the property doesn't exist._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return whether the property is writable;boolean isWritableProperty(String propertyName)_;determine,whether,the,specified,property,is,writable,p,returns,code,false,if,the,property,doesn,t,exist,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,whether,the,property,is,writable;boolean,is,writable,property,string,property,name
PropertyAccessor -> boolean isWritableProperty(String propertyName)_;1496837955;Determine whether the specified property is writable._<p>Returns {@code false} if the property doesn't exist._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return whether the property is writable;boolean isWritableProperty(String propertyName)_;determine,whether,the,specified,property,is,writable,p,returns,code,false,if,the,property,doesn,t,exist,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,whether,the,property,is,writable;boolean,is,writable,property,string,property,name
PropertyAccessor -> boolean isWritableProperty(String propertyName)_;1530174524;Determine whether the specified property is writable._<p>Returns {@code false} if the property doesn't exist._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return whether the property is writable;boolean isWritableProperty(String propertyName)_;determine,whether,the,specified,property,is,writable,p,returns,code,false,if,the,property,doesn,t,exist,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,whether,the,property,is,writable;boolean,is,writable,property,string,property,name
PropertyAccessor -> void setPropertyValues(PropertyValues pvs) throws BeansException_;1328020251;The preferred way to perform a batch update._<p>Note that performing a batch update differs from performing a single update,_in that an implementation of this class will continue to update properties_if a <b>recoverable</b> error (such as a type mismatch, but <b>not</b> an_invalid field name or the like) is encountered, throwing a_{@link PropertyBatchUpdateException} containing all the individual errors._This exception can be examined later to see all binding errors._Properties that were successfully updated remain changed._<p>Does not allow unknown fields or invalid fields._@param pvs PropertyValues to set on the target object_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occured for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated._@see #setPropertyValues(PropertyValues, boolean, boolean);void setPropertyValues(PropertyValues pvs) throws BeansException_;the,preferred,way,to,perform,a,batch,update,p,note,that,performing,a,batch,update,differs,from,performing,a,single,update,in,that,an,implementation,of,this,class,will,continue,to,update,properties,if,a,b,recoverable,b,error,such,as,a,type,mismatch,but,b,not,b,an,invalid,field,name,or,the,like,is,encountered,throwing,a,link,property,batch,update,exception,containing,all,the,individual,errors,this,exception,can,be,examined,later,to,see,all,binding,errors,properties,that,were,successfully,updated,remain,changed,p,does,not,allow,unknown,fields,or,invalid,fields,param,pvs,property,values,to,set,on,the,target,object,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occured,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated,see,set,property,values,property,values,boolean,boolean;void,set,property,values,property,values,pvs,throws,beans,exception
PropertyAccessor -> void setPropertyValues(PropertyValues pvs) throws BeansException_;1356735495;The preferred way to perform a batch update._<p>Note that performing a batch update differs from performing a single update,_in that an implementation of this class will continue to update properties_if a <b>recoverable</b> error (such as a type mismatch, but <b>not</b> an_invalid field name or the like) is encountered, throwing a_{@link PropertyBatchUpdateException} containing all the individual errors._This exception can be examined later to see all binding errors._Properties that were successfully updated remain changed._<p>Does not allow unknown fields or invalid fields._@param pvs PropertyValues to set on the target object_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occured for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated._@see #setPropertyValues(PropertyValues, boolean, boolean);void setPropertyValues(PropertyValues pvs) throws BeansException_;the,preferred,way,to,perform,a,batch,update,p,note,that,performing,a,batch,update,differs,from,performing,a,single,update,in,that,an,implementation,of,this,class,will,continue,to,update,properties,if,a,b,recoverable,b,error,such,as,a,type,mismatch,but,b,not,b,an,invalid,field,name,or,the,like,is,encountered,throwing,a,link,property,batch,update,exception,containing,all,the,individual,errors,this,exception,can,be,examined,later,to,see,all,binding,errors,properties,that,were,successfully,updated,remain,changed,p,does,not,allow,unknown,fields,or,invalid,fields,param,pvs,property,values,to,set,on,the,target,object,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occured,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated,see,set,property,values,property,values,boolean,boolean;void,set,property,values,property,values,pvs,throws,beans,exception
PropertyAccessor -> void setPropertyValues(PropertyValues pvs) throws BeansException_;1385412762;The preferred way to perform a batch update._<p>Note that performing a batch update differs from performing a single update,_in that an implementation of this class will continue to update properties_if a <b>recoverable</b> error (such as a type mismatch, but <b>not</b> an_invalid field name or the like) is encountered, throwing a_{@link PropertyBatchUpdateException} containing all the individual errors._This exception can be examined later to see all binding errors._Properties that were successfully updated remain changed._<p>Does not allow unknown fields or invalid fields._@param pvs PropertyValues to set on the target object_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occured for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated._@see #setPropertyValues(PropertyValues, boolean, boolean);void setPropertyValues(PropertyValues pvs) throws BeansException_;the,preferred,way,to,perform,a,batch,update,p,note,that,performing,a,batch,update,differs,from,performing,a,single,update,in,that,an,implementation,of,this,class,will,continue,to,update,properties,if,a,b,recoverable,b,error,such,as,a,type,mismatch,but,b,not,b,an,invalid,field,name,or,the,like,is,encountered,throwing,a,link,property,batch,update,exception,containing,all,the,individual,errors,this,exception,can,be,examined,later,to,see,all,binding,errors,properties,that,were,successfully,updated,remain,changed,p,does,not,allow,unknown,fields,or,invalid,fields,param,pvs,property,values,to,set,on,the,target,object,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occured,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated,see,set,property,values,property,values,boolean,boolean;void,set,property,values,property,values,pvs,throws,beans,exception
PropertyAccessor -> void setPropertyValues(PropertyValues pvs) throws BeansException_;1467983536;The preferred way to perform a batch update._<p>Note that performing a batch update differs from performing a single update,_in that an implementation of this class will continue to update properties_if a <b>recoverable</b> error (such as a type mismatch, but <b>not</b> an_invalid field name or the like) is encountered, throwing a_{@link PropertyBatchUpdateException} containing all the individual errors._This exception can be examined later to see all binding errors._Properties that were successfully updated remain changed._<p>Does not allow unknown fields or invalid fields._@param pvs PropertyValues to set on the target object_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occurred for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated._@see #setPropertyValues(PropertyValues, boolean, boolean);void setPropertyValues(PropertyValues pvs) throws BeansException_;the,preferred,way,to,perform,a,batch,update,p,note,that,performing,a,batch,update,differs,from,performing,a,single,update,in,that,an,implementation,of,this,class,will,continue,to,update,properties,if,a,b,recoverable,b,error,such,as,a,type,mismatch,but,b,not,b,an,invalid,field,name,or,the,like,is,encountered,throwing,a,link,property,batch,update,exception,containing,all,the,individual,errors,this,exception,can,be,examined,later,to,see,all,binding,errors,properties,that,were,successfully,updated,remain,changed,p,does,not,allow,unknown,fields,or,invalid,fields,param,pvs,property,values,to,set,on,the,target,object,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occurred,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated,see,set,property,values,property,values,boolean,boolean;void,set,property,values,property,values,pvs,throws,beans,exception
PropertyAccessor -> void setPropertyValues(PropertyValues pvs) throws BeansException_;1495868221;The preferred way to perform a batch update._<p>Note that performing a batch update differs from performing a single update,_in that an implementation of this class will continue to update properties_if a <b>recoverable</b> error (such as a type mismatch, but <b>not</b> an_invalid field name or the like) is encountered, throwing a_{@link PropertyBatchUpdateException} containing all the individual errors._This exception can be examined later to see all binding errors._Properties that were successfully updated remain changed._<p>Does not allow unknown fields or invalid fields._@param pvs PropertyValues to set on the target object_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occurred for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated._@see #setPropertyValues(PropertyValues, boolean, boolean);void setPropertyValues(PropertyValues pvs) throws BeansException_;the,preferred,way,to,perform,a,batch,update,p,note,that,performing,a,batch,update,differs,from,performing,a,single,update,in,that,an,implementation,of,this,class,will,continue,to,update,properties,if,a,b,recoverable,b,error,such,as,a,type,mismatch,but,b,not,b,an,invalid,field,name,or,the,like,is,encountered,throwing,a,link,property,batch,update,exception,containing,all,the,individual,errors,this,exception,can,be,examined,later,to,see,all,binding,errors,properties,that,were,successfully,updated,remain,changed,p,does,not,allow,unknown,fields,or,invalid,fields,param,pvs,property,values,to,set,on,the,target,object,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occurred,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated,see,set,property,values,property,values,boolean,boolean;void,set,property,values,property,values,pvs,throws,beans,exception
PropertyAccessor -> void setPropertyValues(PropertyValues pvs) throws BeansException_;1496837955;The preferred way to perform a batch update._<p>Note that performing a batch update differs from performing a single update,_in that an implementation of this class will continue to update properties_if a <b>recoverable</b> error (such as a type mismatch, but <b>not</b> an_invalid field name or the like) is encountered, throwing a_{@link PropertyBatchUpdateException} containing all the individual errors._This exception can be examined later to see all binding errors._Properties that were successfully updated remain changed._<p>Does not allow unknown fields or invalid fields._@param pvs PropertyValues to set on the target object_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occurred for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated._@see #setPropertyValues(PropertyValues, boolean, boolean);void setPropertyValues(PropertyValues pvs) throws BeansException_;the,preferred,way,to,perform,a,batch,update,p,note,that,performing,a,batch,update,differs,from,performing,a,single,update,in,that,an,implementation,of,this,class,will,continue,to,update,properties,if,a,b,recoverable,b,error,such,as,a,type,mismatch,but,b,not,b,an,invalid,field,name,or,the,like,is,encountered,throwing,a,link,property,batch,update,exception,containing,all,the,individual,errors,this,exception,can,be,examined,later,to,see,all,binding,errors,properties,that,were,successfully,updated,remain,changed,p,does,not,allow,unknown,fields,or,invalid,fields,param,pvs,property,values,to,set,on,the,target,object,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occurred,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated,see,set,property,values,property,values,boolean,boolean;void,set,property,values,property,values,pvs,throws,beans,exception
PropertyAccessor -> void setPropertyValues(PropertyValues pvs) throws BeansException_;1530174524;The preferred way to perform a batch update._<p>Note that performing a batch update differs from performing a single update,_in that an implementation of this class will continue to update properties_if a <b>recoverable</b> error (such as a type mismatch, but <b>not</b> an_invalid field name or the like) is encountered, throwing a_{@link PropertyBatchUpdateException} containing all the individual errors._This exception can be examined later to see all binding errors._Properties that were successfully updated remain changed._<p>Does not allow unknown fields or invalid fields._@param pvs a PropertyValues to set on the target object_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occurred for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated._@see #setPropertyValues(PropertyValues, boolean, boolean);void setPropertyValues(PropertyValues pvs) throws BeansException_;the,preferred,way,to,perform,a,batch,update,p,note,that,performing,a,batch,update,differs,from,performing,a,single,update,in,that,an,implementation,of,this,class,will,continue,to,update,properties,if,a,b,recoverable,b,error,such,as,a,type,mismatch,but,b,not,b,an,invalid,field,name,or,the,like,is,encountered,throwing,a,link,property,batch,update,exception,containing,all,the,individual,errors,this,exception,can,be,examined,later,to,see,all,binding,errors,properties,that,were,successfully,updated,remain,changed,p,does,not,allow,unknown,fields,or,invalid,fields,param,pvs,a,property,values,to,set,on,the,target,object,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occurred,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated,see,set,property,values,property,values,boolean,boolean;void,set,property,values,property,values,pvs,throws,beans,exception
PropertyAccessor -> void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown, boolean ignoreInvalid) 			throws BeansException_;1356735495;Perform a batch update with full control over behavior._<p>Note that performing a batch update differs from performing a single update,_in that an implementation of this class will continue to update properties_if a <b>recoverable</b> error (such as a type mismatch, but <b>not</b> an_invalid field name or the like) is encountered, throwing a_{@link PropertyBatchUpdateException} containing all the individual errors._This exception can be examined later to see all binding errors._Properties that were successfully updated remain changed._@param pvs PropertyValues to set on the target object_@param ignoreUnknown should we ignore unknown properties (not found in the bean)_@param ignoreInvalid should we ignore invalid properties (found but not accessible)_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occured for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated.;void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown, boolean ignoreInvalid)_			throws BeansException_;perform,a,batch,update,with,full,control,over,behavior,p,note,that,performing,a,batch,update,differs,from,performing,a,single,update,in,that,an,implementation,of,this,class,will,continue,to,update,properties,if,a,b,recoverable,b,error,such,as,a,type,mismatch,but,b,not,b,an,invalid,field,name,or,the,like,is,encountered,throwing,a,link,property,batch,update,exception,containing,all,the,individual,errors,this,exception,can,be,examined,later,to,see,all,binding,errors,properties,that,were,successfully,updated,remain,changed,param,pvs,property,values,to,set,on,the,target,object,param,ignore,unknown,should,we,ignore,unknown,properties,not,found,in,the,bean,param,ignore,invalid,should,we,ignore,invalid,properties,found,but,not,accessible,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occured,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated;void,set,property,values,property,values,pvs,boolean,ignore,unknown,boolean,ignore,invalid,throws,beans,exception
PropertyAccessor -> void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown, boolean ignoreInvalid) 			throws BeansException_;1385412762;Perform a batch update with full control over behavior._<p>Note that performing a batch update differs from performing a single update,_in that an implementation of this class will continue to update properties_if a <b>recoverable</b> error (such as a type mismatch, but <b>not</b> an_invalid field name or the like) is encountered, throwing a_{@link PropertyBatchUpdateException} containing all the individual errors._This exception can be examined later to see all binding errors._Properties that were successfully updated remain changed._@param pvs PropertyValues to set on the target object_@param ignoreUnknown should we ignore unknown properties (not found in the bean)_@param ignoreInvalid should we ignore invalid properties (found but not accessible)_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occured for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated.;void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown, boolean ignoreInvalid)_			throws BeansException_;perform,a,batch,update,with,full,control,over,behavior,p,note,that,performing,a,batch,update,differs,from,performing,a,single,update,in,that,an,implementation,of,this,class,will,continue,to,update,properties,if,a,b,recoverable,b,error,such,as,a,type,mismatch,but,b,not,b,an,invalid,field,name,or,the,like,is,encountered,throwing,a,link,property,batch,update,exception,containing,all,the,individual,errors,this,exception,can,be,examined,later,to,see,all,binding,errors,properties,that,were,successfully,updated,remain,changed,param,pvs,property,values,to,set,on,the,target,object,param,ignore,unknown,should,we,ignore,unknown,properties,not,found,in,the,bean,param,ignore,invalid,should,we,ignore,invalid,properties,found,but,not,accessible,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occured,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated;void,set,property,values,property,values,pvs,boolean,ignore,unknown,boolean,ignore,invalid,throws,beans,exception
PropertyAccessor -> void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown, boolean ignoreInvalid) 			throws BeansException_;1467983536;Perform a batch update with full control over behavior._<p>Note that performing a batch update differs from performing a single update,_in that an implementation of this class will continue to update properties_if a <b>recoverable</b> error (such as a type mismatch, but <b>not</b> an_invalid field name or the like) is encountered, throwing a_{@link PropertyBatchUpdateException} containing all the individual errors._This exception can be examined later to see all binding errors._Properties that were successfully updated remain changed._@param pvs PropertyValues to set on the target object_@param ignoreUnknown should we ignore unknown properties (not found in the bean)_@param ignoreInvalid should we ignore invalid properties (found but not accessible)_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occurred for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated.;void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown, boolean ignoreInvalid)_			throws BeansException_;perform,a,batch,update,with,full,control,over,behavior,p,note,that,performing,a,batch,update,differs,from,performing,a,single,update,in,that,an,implementation,of,this,class,will,continue,to,update,properties,if,a,b,recoverable,b,error,such,as,a,type,mismatch,but,b,not,b,an,invalid,field,name,or,the,like,is,encountered,throwing,a,link,property,batch,update,exception,containing,all,the,individual,errors,this,exception,can,be,examined,later,to,see,all,binding,errors,properties,that,were,successfully,updated,remain,changed,param,pvs,property,values,to,set,on,the,target,object,param,ignore,unknown,should,we,ignore,unknown,properties,not,found,in,the,bean,param,ignore,invalid,should,we,ignore,invalid,properties,found,but,not,accessible,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occurred,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated;void,set,property,values,property,values,pvs,boolean,ignore,unknown,boolean,ignore,invalid,throws,beans,exception
PropertyAccessor -> void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown, boolean ignoreInvalid) 			throws BeansException_;1495868221;Perform a batch update with full control over behavior._<p>Note that performing a batch update differs from performing a single update,_in that an implementation of this class will continue to update properties_if a <b>recoverable</b> error (such as a type mismatch, but <b>not</b> an_invalid field name or the like) is encountered, throwing a_{@link PropertyBatchUpdateException} containing all the individual errors._This exception can be examined later to see all binding errors._Properties that were successfully updated remain changed._@param pvs PropertyValues to set on the target object_@param ignoreUnknown should we ignore unknown properties (not found in the bean)_@param ignoreInvalid should we ignore invalid properties (found but not accessible)_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occurred for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated.;void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown, boolean ignoreInvalid)_			throws BeansException_;perform,a,batch,update,with,full,control,over,behavior,p,note,that,performing,a,batch,update,differs,from,performing,a,single,update,in,that,an,implementation,of,this,class,will,continue,to,update,properties,if,a,b,recoverable,b,error,such,as,a,type,mismatch,but,b,not,b,an,invalid,field,name,or,the,like,is,encountered,throwing,a,link,property,batch,update,exception,containing,all,the,individual,errors,this,exception,can,be,examined,later,to,see,all,binding,errors,properties,that,were,successfully,updated,remain,changed,param,pvs,property,values,to,set,on,the,target,object,param,ignore,unknown,should,we,ignore,unknown,properties,not,found,in,the,bean,param,ignore,invalid,should,we,ignore,invalid,properties,found,but,not,accessible,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occurred,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated;void,set,property,values,property,values,pvs,boolean,ignore,unknown,boolean,ignore,invalid,throws,beans,exception
PropertyAccessor -> void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown, boolean ignoreInvalid) 			throws BeansException_;1496837955;Perform a batch update with full control over behavior._<p>Note that performing a batch update differs from performing a single update,_in that an implementation of this class will continue to update properties_if a <b>recoverable</b> error (such as a type mismatch, but <b>not</b> an_invalid field name or the like) is encountered, throwing a_{@link PropertyBatchUpdateException} containing all the individual errors._This exception can be examined later to see all binding errors._Properties that were successfully updated remain changed._@param pvs PropertyValues to set on the target object_@param ignoreUnknown should we ignore unknown properties (not found in the bean)_@param ignoreInvalid should we ignore invalid properties (found but not accessible)_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occurred for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated.;void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown, boolean ignoreInvalid)_			throws BeansException_;perform,a,batch,update,with,full,control,over,behavior,p,note,that,performing,a,batch,update,differs,from,performing,a,single,update,in,that,an,implementation,of,this,class,will,continue,to,update,properties,if,a,b,recoverable,b,error,such,as,a,type,mismatch,but,b,not,b,an,invalid,field,name,or,the,like,is,encountered,throwing,a,link,property,batch,update,exception,containing,all,the,individual,errors,this,exception,can,be,examined,later,to,see,all,binding,errors,properties,that,were,successfully,updated,remain,changed,param,pvs,property,values,to,set,on,the,target,object,param,ignore,unknown,should,we,ignore,unknown,properties,not,found,in,the,bean,param,ignore,invalid,should,we,ignore,invalid,properties,found,but,not,accessible,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occurred,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated;void,set,property,values,property,values,pvs,boolean,ignore,unknown,boolean,ignore,invalid,throws,beans,exception
PropertyAccessor -> void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown, boolean ignoreInvalid) 			throws BeansException_;1530174524;Perform a batch update with full control over behavior._<p>Note that performing a batch update differs from performing a single update,_in that an implementation of this class will continue to update properties_if a <b>recoverable</b> error (such as a type mismatch, but <b>not</b> an_invalid field name or the like) is encountered, throwing a_{@link PropertyBatchUpdateException} containing all the individual errors._This exception can be examined later to see all binding errors._Properties that were successfully updated remain changed._@param pvs a PropertyValues to set on the target object_@param ignoreUnknown should we ignore unknown properties (not found in the bean)_@param ignoreInvalid should we ignore invalid properties (found but not accessible)_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyBatchUpdateException if one or more PropertyAccessExceptions_occurred for specific properties during the batch update. This exception bundles_all individual PropertyAccessExceptions. All other properties will have been_successfully updated.;void setPropertyValues(PropertyValues pvs, boolean ignoreUnknown, boolean ignoreInvalid)_			throws BeansException_;perform,a,batch,update,with,full,control,over,behavior,p,note,that,performing,a,batch,update,differs,from,performing,a,single,update,in,that,an,implementation,of,this,class,will,continue,to,update,properties,if,a,b,recoverable,b,error,such,as,a,type,mismatch,but,b,not,b,an,invalid,field,name,or,the,like,is,encountered,throwing,a,link,property,batch,update,exception,containing,all,the,individual,errors,this,exception,can,be,examined,later,to,see,all,binding,errors,properties,that,were,successfully,updated,remain,changed,param,pvs,a,property,values,to,set,on,the,target,object,param,ignore,unknown,should,we,ignore,unknown,properties,not,found,in,the,bean,param,ignore,invalid,should,we,ignore,invalid,properties,found,but,not,accessible,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,batch,update,exception,if,one,or,more,property,access,exceptions,occurred,for,specific,properties,during,the,batch,update,this,exception,bundles,all,individual,property,access,exceptions,all,other,properties,will,have,been,successfully,updated;void,set,property,values,property,values,pvs,boolean,ignore,unknown,boolean,ignore,invalid,throws,beans,exception
PropertyAccessor -> Class<?> getPropertyType(String propertyName) throws BeansException_;1385412762;Determine the property type for the specified property,_either checking the property descriptor or checking the value_in case of an indexed or mapped element._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return the property type for the particular property,_or {@code null} if not determinable_@throws InvalidPropertyException if there is no such property or_if the property isn't readable_@throws PropertyAccessException if the property was valid but the_accessor method failed;Class<?> getPropertyType(String propertyName) throws BeansException_;determine,the,property,type,for,the,specified,property,either,checking,the,property,descriptor,or,checking,the,value,in,case,of,an,indexed,or,mapped,element,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,the,property,type,for,the,particular,property,or,code,null,if,not,determinable,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,readable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed;class,get,property,type,string,property,name,throws,beans,exception
PropertyAccessor -> Class<?> getPropertyType(String propertyName) throws BeansException_;1467983536;Determine the property type for the specified property,_either checking the property descriptor or checking the value_in case of an indexed or mapped element._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return the property type for the particular property,_or {@code null} if not determinable_@throws InvalidPropertyException if there is no such property or_if the property isn't readable_@throws PropertyAccessException if the property was valid but the_accessor method failed;Class<?> getPropertyType(String propertyName) throws BeansException_;determine,the,property,type,for,the,specified,property,either,checking,the,property,descriptor,or,checking,the,value,in,case,of,an,indexed,or,mapped,element,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,the,property,type,for,the,particular,property,or,code,null,if,not,determinable,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,readable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed;class,get,property,type,string,property,name,throws,beans,exception
PropertyAccessor -> @Nullable 	Class<?> getPropertyType(String propertyName) throws BeansException_;1495868221;Determine the property type for the specified property,_either checking the property descriptor or checking the value_in case of an indexed or mapped element._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return the property type for the particular property,_or {@code null} if not determinable_@throws InvalidPropertyException if there is no such property or_if the property isn't readable_@throws PropertyAccessException if the property was valid but the_accessor method failed;@Nullable_	Class<?> getPropertyType(String propertyName) throws BeansException_;determine,the,property,type,for,the,specified,property,either,checking,the,property,descriptor,or,checking,the,value,in,case,of,an,indexed,or,mapped,element,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,the,property,type,for,the,particular,property,or,code,null,if,not,determinable,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,readable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed;nullable,class,get,property,type,string,property,name,throws,beans,exception
PropertyAccessor -> @Nullable 	Class<?> getPropertyType(String propertyName) throws BeansException_;1496837955;Determine the property type for the specified property,_either checking the property descriptor or checking the value_in case of an indexed or mapped element._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return the property type for the particular property,_or {@code null} if not determinable_@throws PropertyAccessException if the property was valid but the_accessor method failed;@Nullable_	Class<?> getPropertyType(String propertyName) throws BeansException_;determine,the,property,type,for,the,specified,property,either,checking,the,property,descriptor,or,checking,the,value,in,case,of,an,indexed,or,mapped,element,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,the,property,type,for,the,particular,property,or,code,null,if,not,determinable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed;nullable,class,get,property,type,string,property,name,throws,beans,exception
PropertyAccessor -> @Nullable 	Class<?> getPropertyType(String propertyName) throws BeansException_;1530174524;Determine the property type for the specified property,_either checking the property descriptor or checking the value_in case of an indexed or mapped element._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return the property type for the particular property,_or {@code null} if not determinable_@throws PropertyAccessException if the property was valid but the_accessor method failed;@Nullable_	Class<?> getPropertyType(String propertyName) throws BeansException_;determine,the,property,type,for,the,specified,property,either,checking,the,property,descriptor,or,checking,the,value,in,case,of,an,indexed,or,mapped,element,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,the,property,type,for,the,particular,property,or,code,null,if,not,determinable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed;nullable,class,get,property,type,string,property,name,throws,beans,exception
PropertyAccessor -> @Nullable 	TypeDescriptor getPropertyTypeDescriptor(String propertyName) throws BeansException_;1495868221;Return a type descriptor for the specified property:_preferably from the read method, falling back to the write method._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return the property type for the particular property,_or {@code null} if not determinable_@throws InvalidPropertyException if there is no such property or_if the property isn't readable;@Nullable_	TypeDescriptor getPropertyTypeDescriptor(String propertyName) throws BeansException_;return,a,type,descriptor,for,the,specified,property,preferably,from,the,read,method,falling,back,to,the,write,method,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,the,property,type,for,the,particular,property,or,code,null,if,not,determinable,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,readable;nullable,type,descriptor,get,property,type,descriptor,string,property,name,throws,beans,exception
PropertyAccessor -> @Nullable 	TypeDescriptor getPropertyTypeDescriptor(String propertyName) throws BeansException_;1496837955;Return a type descriptor for the specified property:_preferably from the read method, falling back to the write method._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return the property type for the particular property,_or {@code null} if not determinable_@throws PropertyAccessException if the property was valid but the_accessor method failed;@Nullable_	TypeDescriptor getPropertyTypeDescriptor(String propertyName) throws BeansException_;return,a,type,descriptor,for,the,specified,property,preferably,from,the,read,method,falling,back,to,the,write,method,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,the,property,type,for,the,particular,property,or,code,null,if,not,determinable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed;nullable,type,descriptor,get,property,type,descriptor,string,property,name,throws,beans,exception
PropertyAccessor -> @Nullable 	TypeDescriptor getPropertyTypeDescriptor(String propertyName) throws BeansException_;1530174524;Return a type descriptor for the specified property:_preferably from the read method, falling back to the write method._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return the property type for the particular property,_or {@code null} if not determinable_@throws PropertyAccessException if the property was valid but the_accessor method failed;@Nullable_	TypeDescriptor getPropertyTypeDescriptor(String propertyName) throws BeansException_;return,a,type,descriptor,for,the,specified,property,preferably,from,the,read,method,falling,back,to,the,write,method,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,the,property,type,for,the,particular,property,or,code,null,if,not,determinable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed;nullable,type,descriptor,get,property,type,descriptor,string,property,name,throws,beans,exception
PropertyAccessor -> Object getPropertyValue(String propertyName) throws BeansException_;1328020251;Get the current value of the specified property._@param propertyName the name of the property to get the value of_(may be a nested path and/or an indexed/mapped property)_@return the value of the property_@throws InvalidPropertyException if there is no such property or_if the property isn't readable_@throws PropertyAccessException if the property was valid but the_accessor method failed;Object getPropertyValue(String propertyName) throws BeansException_;get,the,current,value,of,the,specified,property,param,property,name,the,name,of,the,property,to,get,the,value,of,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,the,value,of,the,property,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,readable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed;object,get,property,value,string,property,name,throws,beans,exception
PropertyAccessor -> Object getPropertyValue(String propertyName) throws BeansException_;1356735495;Get the current value of the specified property._@param propertyName the name of the property to get the value of_(may be a nested path and/or an indexed/mapped property)_@return the value of the property_@throws InvalidPropertyException if there is no such property or_if the property isn't readable_@throws PropertyAccessException if the property was valid but the_accessor method failed;Object getPropertyValue(String propertyName) throws BeansException_;get,the,current,value,of,the,specified,property,param,property,name,the,name,of,the,property,to,get,the,value,of,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,the,value,of,the,property,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,readable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed;object,get,property,value,string,property,name,throws,beans,exception
PropertyAccessor -> Object getPropertyValue(String propertyName) throws BeansException_;1385412762;Get the current value of the specified property._@param propertyName the name of the property to get the value of_(may be a nested path and/or an indexed/mapped property)_@return the value of the property_@throws InvalidPropertyException if there is no such property or_if the property isn't readable_@throws PropertyAccessException if the property was valid but the_accessor method failed;Object getPropertyValue(String propertyName) throws BeansException_;get,the,current,value,of,the,specified,property,param,property,name,the,name,of,the,property,to,get,the,value,of,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,the,value,of,the,property,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,readable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed;object,get,property,value,string,property,name,throws,beans,exception
PropertyAccessor -> Object getPropertyValue(String propertyName) throws BeansException_;1467983536;Get the current value of the specified property._@param propertyName the name of the property to get the value of_(may be a nested path and/or an indexed/mapped property)_@return the value of the property_@throws InvalidPropertyException if there is no such property or_if the property isn't readable_@throws PropertyAccessException if the property was valid but the_accessor method failed;Object getPropertyValue(String propertyName) throws BeansException_;get,the,current,value,of,the,specified,property,param,property,name,the,name,of,the,property,to,get,the,value,of,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,the,value,of,the,property,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,readable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed;object,get,property,value,string,property,name,throws,beans,exception
PropertyAccessor -> Object getPropertyValue(String propertyName) throws BeansException_;1495868221;Get the current value of the specified property._@param propertyName the name of the property to get the value of_(may be a nested path and/or an indexed/mapped property)_@return the value of the property_@throws InvalidPropertyException if there is no such property or_if the property isn't readable_@throws PropertyAccessException if the property was valid but the_accessor method failed;Object getPropertyValue(String propertyName) throws BeansException_;get,the,current,value,of,the,specified,property,param,property,name,the,name,of,the,property,to,get,the,value,of,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,the,value,of,the,property,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,readable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed;object,get,property,value,string,property,name,throws,beans,exception
PropertyAccessor -> Class getPropertyType(String propertyName) throws BeansException_;1328020251;Determine the property type for the specified property,_either checking the property descriptor or checking the value_in case of an indexed or mapped element._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return the property type for the particular property,_or <code>null</code> if not determinable_@throws InvalidPropertyException if there is no such property or_if the property isn't readable_@throws PropertyAccessException if the property was valid but the_accessor method failed;Class getPropertyType(String propertyName) throws BeansException_;determine,the,property,type,for,the,specified,property,either,checking,the,property,descriptor,or,checking,the,value,in,case,of,an,indexed,or,mapped,element,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,the,property,type,for,the,particular,property,or,code,null,code,if,not,determinable,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,readable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed;class,get,property,type,string,property,name,throws,beans,exception
PropertyAccessor -> Class getPropertyType(String propertyName) throws BeansException_;1356735495;Determine the property type for the specified property,_either checking the property descriptor or checking the value_in case of an indexed or mapped element._@param propertyName the property to check_(may be a nested path and/or an indexed/mapped property)_@return the property type for the particular property,_or {@code null} if not determinable_@throws InvalidPropertyException if there is no such property or_if the property isn't readable_@throws PropertyAccessException if the property was valid but the_accessor method failed;Class getPropertyType(String propertyName) throws BeansException_;determine,the,property,type,for,the,specified,property,either,checking,the,property,descriptor,or,checking,the,value,in,case,of,an,indexed,or,mapped,element,param,property,name,the,property,to,check,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,the,property,type,for,the,particular,property,or,code,null,if,not,determinable,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,readable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed;class,get,property,type,string,property,name,throws,beans,exception
PropertyAccessor -> void setPropertyValue(String propertyName, @Nullable Object value) throws BeansException_;1496837955;Set the specified value as current property value._@param propertyName the name of the property to set the value of_(may be a nested path and/or an indexed/mapped property)_@param value the new value_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyAccessException if the property was valid but the_accessor method failed or a type mismatch occurred;void setPropertyValue(String propertyName, @Nullable Object value) throws BeansException_;set,the,specified,value,as,current,property,value,param,property,name,the,name,of,the,property,to,set,the,value,of,may,be,a,nested,path,and,or,an,indexed,mapped,property,param,value,the,new,value,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed,or,a,type,mismatch,occurred;void,set,property,value,string,property,name,nullable,object,value,throws,beans,exception
PropertyAccessor -> void setPropertyValue(String propertyName, @Nullable Object value) throws BeansException_;1530174524;Set the specified value as current property value._@param propertyName the name of the property to set the value of_(may be a nested path and/or an indexed/mapped property)_@param value the new value_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyAccessException if the property was valid but the_accessor method failed or a type mismatch occurred;void setPropertyValue(String propertyName, @Nullable Object value) throws BeansException_;set,the,specified,value,as,current,property,value,param,property,name,the,name,of,the,property,to,set,the,value,of,may,be,a,nested,path,and,or,an,indexed,mapped,property,param,value,the,new,value,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed,or,a,type,mismatch,occurred;void,set,property,value,string,property,name,nullable,object,value,throws,beans,exception
PropertyAccessor -> void setPropertyValue(PropertyValue pv) throws BeansException_;1328020251;Set the specified value as current property value._@param pv an object containing the new property value_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyAccessException if the property was valid but the_accessor method failed or a type mismatch occured;void setPropertyValue(PropertyValue pv) throws BeansException_;set,the,specified,value,as,current,property,value,param,pv,an,object,containing,the,new,property,value,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed,or,a,type,mismatch,occured;void,set,property,value,property,value,pv,throws,beans,exception
PropertyAccessor -> void setPropertyValue(PropertyValue pv) throws BeansException_;1356735495;Set the specified value as current property value._@param pv an object containing the new property value_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyAccessException if the property was valid but the_accessor method failed or a type mismatch occured;void setPropertyValue(PropertyValue pv) throws BeansException_;set,the,specified,value,as,current,property,value,param,pv,an,object,containing,the,new,property,value,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed,or,a,type,mismatch,occured;void,set,property,value,property,value,pv,throws,beans,exception
PropertyAccessor -> void setPropertyValue(PropertyValue pv) throws BeansException_;1385412762;Set the specified value as current property value._@param pv an object containing the new property value_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyAccessException if the property was valid but the_accessor method failed or a type mismatch occured;void setPropertyValue(PropertyValue pv) throws BeansException_;set,the,specified,value,as,current,property,value,param,pv,an,object,containing,the,new,property,value,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed,or,a,type,mismatch,occured;void,set,property,value,property,value,pv,throws,beans,exception
PropertyAccessor -> void setPropertyValue(PropertyValue pv) throws BeansException_;1467983536;Set the specified value as current property value._@param pv an object containing the new property value_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyAccessException if the property was valid but the_accessor method failed or a type mismatch occurred;void setPropertyValue(PropertyValue pv) throws BeansException_;set,the,specified,value,as,current,property,value,param,pv,an,object,containing,the,new,property,value,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed,or,a,type,mismatch,occurred;void,set,property,value,property,value,pv,throws,beans,exception
PropertyAccessor -> void setPropertyValue(PropertyValue pv) throws BeansException_;1495868221;Set the specified value as current property value._@param pv an object containing the new property value_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyAccessException if the property was valid but the_accessor method failed or a type mismatch occurred;void setPropertyValue(PropertyValue pv) throws BeansException_;set,the,specified,value,as,current,property,value,param,pv,an,object,containing,the,new,property,value,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed,or,a,type,mismatch,occurred;void,set,property,value,property,value,pv,throws,beans,exception
PropertyAccessor -> void setPropertyValue(PropertyValue pv) throws BeansException_;1496837955;Set the specified value as current property value._@param pv an object containing the new property value_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyAccessException if the property was valid but the_accessor method failed or a type mismatch occurred;void setPropertyValue(PropertyValue pv) throws BeansException_;set,the,specified,value,as,current,property,value,param,pv,an,object,containing,the,new,property,value,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed,or,a,type,mismatch,occurred;void,set,property,value,property,value,pv,throws,beans,exception
PropertyAccessor -> void setPropertyValue(PropertyValue pv) throws BeansException_;1530174524;Set the specified value as current property value._@param pv an object containing the new property value_@throws InvalidPropertyException if there is no such property or_if the property isn't writable_@throws PropertyAccessException if the property was valid but the_accessor method failed or a type mismatch occurred;void setPropertyValue(PropertyValue pv) throws BeansException_;set,the,specified,value,as,current,property,value,param,pv,an,object,containing,the,new,property,value,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,writable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed,or,a,type,mismatch,occurred;void,set,property,value,property,value,pv,throws,beans,exception
PropertyAccessor -> @Nullable 	Object getPropertyValue(String propertyName) throws BeansException_;1496837955;Get the current value of the specified property._@param propertyName the name of the property to get the value of_(may be a nested path and/or an indexed/mapped property)_@return the value of the property_@throws InvalidPropertyException if there is no such property or_if the property isn't readable_@throws PropertyAccessException if the property was valid but the_accessor method failed;@Nullable_	Object getPropertyValue(String propertyName) throws BeansException_;get,the,current,value,of,the,specified,property,param,property,name,the,name,of,the,property,to,get,the,value,of,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,the,value,of,the,property,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,readable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed;nullable,object,get,property,value,string,property,name,throws,beans,exception
PropertyAccessor -> @Nullable 	Object getPropertyValue(String propertyName) throws BeansException_;1530174524;Get the current value of the specified property._@param propertyName the name of the property to get the value of_(may be a nested path and/or an indexed/mapped property)_@return the value of the property_@throws InvalidPropertyException if there is no such property or_if the property isn't readable_@throws PropertyAccessException if the property was valid but the_accessor method failed;@Nullable_	Object getPropertyValue(String propertyName) throws BeansException_;get,the,current,value,of,the,specified,property,param,property,name,the,name,of,the,property,to,get,the,value,of,may,be,a,nested,path,and,or,an,indexed,mapped,property,return,the,value,of,the,property,throws,invalid,property,exception,if,there,is,no,such,property,or,if,the,property,isn,t,readable,throws,property,access,exception,if,the,property,was,valid,but,the,accessor,method,failed;nullable,object,get,property,value,string,property,name,throws,beans,exception
