# id;timestamp;commentText;codeText;commentWords;codeWords
AutowireCandidateQualifier -> public AutowireCandidateQualifier(String typeName);1328020251;Construct a qualifier to match against an annotation of the_given type name._<p>The type name may match the fully-qualified class name of_the annotation or the short class name (without the package)._@param typeName the name of the annotation type;public AutowireCandidateQualifier(String typeName) {_		Assert.notNull(typeName, "Type name must not be null")__		this.typeName = typeName__	};construct,a,qualifier,to,match,against,an,annotation,of,the,given,type,name,p,the,type,name,may,match,the,fully,qualified,class,name,of,the,annotation,or,the,short,class,name,without,the,package,param,type,name,the,name,of,the,annotation,type;public,autowire,candidate,qualifier,string,type,name,assert,not,null,type,name,type,name,must,not,be,null,this,type,name,type,name
AutowireCandidateQualifier -> public AutowireCandidateQualifier(String typeName);1356735495;Construct a qualifier to match against an annotation of the_given type name._<p>The type name may match the fully-qualified class name of_the annotation or the short class name (without the package)._@param typeName the name of the annotation type;public AutowireCandidateQualifier(String typeName) {_		Assert.notNull(typeName, "Type name must not be null")__		this.typeName = typeName__	};construct,a,qualifier,to,match,against,an,annotation,of,the,given,type,name,p,the,type,name,may,match,the,fully,qualified,class,name,of,the,annotation,or,the,short,class,name,without,the,package,param,type,name,the,name,of,the,annotation,type;public,autowire,candidate,qualifier,string,type,name,assert,not,null,type,name,type,name,must,not,be,null,this,type,name,type,name
AutowireCandidateQualifier -> public AutowireCandidateQualifier(String typeName);1385412762;Construct a qualifier to match against an annotation of the_given type name._<p>The type name may match the fully-qualified class name of_the annotation or the short class name (without the package)._@param typeName the name of the annotation type;public AutowireCandidateQualifier(String typeName) {_		Assert.notNull(typeName, "Type name must not be null")__		this.typeName = typeName__	};construct,a,qualifier,to,match,against,an,annotation,of,the,given,type,name,p,the,type,name,may,match,the,fully,qualified,class,name,of,the,annotation,or,the,short,class,name,without,the,package,param,type,name,the,name,of,the,annotation,type;public,autowire,candidate,qualifier,string,type,name,assert,not,null,type,name,type,name,must,not,be,null,this,type,name,type,name
AutowireCandidateQualifier -> public AutowireCandidateQualifier(String typeName);1518260959;Construct a qualifier to match against an annotation of the_given type name._<p>The type name may match the fully-qualified class name of_the annotation or the short class name (without the package)._@param typeName the name of the annotation type;public AutowireCandidateQualifier(String typeName) {_		Assert.notNull(typeName, "Type name must not be null")__		this.typeName = typeName__	};construct,a,qualifier,to,match,against,an,annotation,of,the,given,type,name,p,the,type,name,may,match,the,fully,qualified,class,name,of,the,annotation,or,the,short,class,name,without,the,package,param,type,name,the,name,of,the,annotation,type;public,autowire,candidate,qualifier,string,type,name,assert,not,null,type,name,type,name,must,not,be,null,this,type,name,type,name
AutowireCandidateQualifier -> public AutowireCandidateQualifier(String typeName);1530174524;Construct a qualifier to match against an annotation of the_given type name._<p>The type name may match the fully-qualified class name of_the annotation or the short class name (without the package)._@param typeName the name of the annotation type;public AutowireCandidateQualifier(String typeName) {_		Assert.notNull(typeName, "Type name must not be null")__		this.typeName = typeName__	};construct,a,qualifier,to,match,against,an,annotation,of,the,given,type,name,p,the,type,name,may,match,the,fully,qualified,class,name,of,the,annotation,or,the,short,class,name,without,the,package,param,type,name,the,name,of,the,annotation,type;public,autowire,candidate,qualifier,string,type,name,assert,not,null,type,name,type,name,must,not,be,null,this,type,name,type,name
AutowireCandidateQualifier -> public AutowireCandidateQualifier(Class<?> type);1385412762;Construct a qualifier to match against an annotation of the_given type._@param type the annotation type;public AutowireCandidateQualifier(Class<?> type) {_		this(type.getName())__	};construct,a,qualifier,to,match,against,an,annotation,of,the,given,type,param,type,the,annotation,type;public,autowire,candidate,qualifier,class,type,this,type,get,name
AutowireCandidateQualifier -> public AutowireCandidateQualifier(Class<?> type);1518260959;Construct a qualifier to match against an annotation of the_given type._@param type the annotation type;public AutowireCandidateQualifier(Class<?> type) {_		this(type.getName())__	};construct,a,qualifier,to,match,against,an,annotation,of,the,given,type,param,type,the,annotation,type;public,autowire,candidate,qualifier,class,type,this,type,get,name
AutowireCandidateQualifier -> public AutowireCandidateQualifier(Class<?> type);1530174524;Construct a qualifier to match against an annotation of the_given type._@param type the annotation type;public AutowireCandidateQualifier(Class<?> type) {_		this(type.getName())__	};construct,a,qualifier,to,match,against,an,annotation,of,the,given,type,param,type,the,annotation,type;public,autowire,candidate,qualifier,class,type,this,type,get,name
AutowireCandidateQualifier -> public AutowireCandidateQualifier(Class type, Object value);1328020251;Construct a qualifier to match against an annotation of the_given type whose <code>value</code> attribute also matches_the specified value._@param type the annotation type_@param value the annotation value to match;public AutowireCandidateQualifier(Class type, Object value) {_		this(type.getName(), value)__	};construct,a,qualifier,to,match,against,an,annotation,of,the,given,type,whose,code,value,code,attribute,also,matches,the,specified,value,param,type,the,annotation,type,param,value,the,annotation,value,to,match;public,autowire,candidate,qualifier,class,type,object,value,this,type,get,name,value
AutowireCandidateQualifier -> public AutowireCandidateQualifier(Class type, Object value);1356735495;Construct a qualifier to match against an annotation of the_given type whose {@code value} attribute also matches_the specified value._@param type the annotation type_@param value the annotation value to match;public AutowireCandidateQualifier(Class type, Object value) {_		this(type.getName(), value)__	};construct,a,qualifier,to,match,against,an,annotation,of,the,given,type,whose,code,value,attribute,also,matches,the,specified,value,param,type,the,annotation,type,param,value,the,annotation,value,to,match;public,autowire,candidate,qualifier,class,type,object,value,this,type,get,name,value
AutowireCandidateQualifier -> public AutowireCandidateQualifier(Class type);1328020251;Construct a qualifier to match against an annotation of the_given type._@param type the annotation type;public AutowireCandidateQualifier(Class type) {_		this(type.getName())__	};construct,a,qualifier,to,match,against,an,annotation,of,the,given,type,param,type,the,annotation,type;public,autowire,candidate,qualifier,class,type,this,type,get,name
AutowireCandidateQualifier -> public AutowireCandidateQualifier(Class type);1356735495;Construct a qualifier to match against an annotation of the_given type._@param type the annotation type;public AutowireCandidateQualifier(Class type) {_		this(type.getName())__	};construct,a,qualifier,to,match,against,an,annotation,of,the,given,type,param,type,the,annotation,type;public,autowire,candidate,qualifier,class,type,this,type,get,name
AutowireCandidateQualifier -> public String getTypeName();1328020251;Retrieve the type name. This value will be the same as the_type name provided to the constructor or the fully-qualified_class name if a Class instance was provided to the constructor.;public String getTypeName() {_		return this.typeName__	};retrieve,the,type,name,this,value,will,be,the,same,as,the,type,name,provided,to,the,constructor,or,the,fully,qualified,class,name,if,a,class,instance,was,provided,to,the,constructor;public,string,get,type,name,return,this,type,name
AutowireCandidateQualifier -> public String getTypeName();1356735495;Retrieve the type name. This value will be the same as the_type name provided to the constructor or the fully-qualified_class name if a Class instance was provided to the constructor.;public String getTypeName() {_		return this.typeName__	};retrieve,the,type,name,this,value,will,be,the,same,as,the,type,name,provided,to,the,constructor,or,the,fully,qualified,class,name,if,a,class,instance,was,provided,to,the,constructor;public,string,get,type,name,return,this,type,name
AutowireCandidateQualifier -> public String getTypeName();1385412762;Retrieve the type name. This value will be the same as the_type name provided to the constructor or the fully-qualified_class name if a Class instance was provided to the constructor.;public String getTypeName() {_		return this.typeName__	};retrieve,the,type,name,this,value,will,be,the,same,as,the,type,name,provided,to,the,constructor,or,the,fully,qualified,class,name,if,a,class,instance,was,provided,to,the,constructor;public,string,get,type,name,return,this,type,name
AutowireCandidateQualifier -> public String getTypeName();1518260959;Retrieve the type name. This value will be the same as the_type name provided to the constructor or the fully-qualified_class name if a Class instance was provided to the constructor.;public String getTypeName() {_		return this.typeName__	};retrieve,the,type,name,this,value,will,be,the,same,as,the,type,name,provided,to,the,constructor,or,the,fully,qualified,class,name,if,a,class,instance,was,provided,to,the,constructor;public,string,get,type,name,return,this,type,name
AutowireCandidateQualifier -> public String getTypeName();1530174524;Retrieve the type name. This value will be the same as the_type name provided to the constructor or the fully-qualified_class name if a Class instance was provided to the constructor.;public String getTypeName() {_		return this.typeName__	};retrieve,the,type,name,this,value,will,be,the,same,as,the,type,name,provided,to,the,constructor,or,the,fully,qualified,class,name,if,a,class,instance,was,provided,to,the,constructor;public,string,get,type,name,return,this,type,name
AutowireCandidateQualifier -> public AutowireCandidateQualifier(Class<?> type, Object value);1385412762;Construct a qualifier to match against an annotation of the_given type whose {@code value} attribute also matches_the specified value._@param type the annotation type_@param value the annotation value to match;public AutowireCandidateQualifier(Class<?> type, Object value) {_		this(type.getName(), value)__	};construct,a,qualifier,to,match,against,an,annotation,of,the,given,type,whose,code,value,attribute,also,matches,the,specified,value,param,type,the,annotation,type,param,value,the,annotation,value,to,match;public,autowire,candidate,qualifier,class,type,object,value,this,type,get,name,value
AutowireCandidateQualifier -> public AutowireCandidateQualifier(Class<?> type, Object value);1518260959;Construct a qualifier to match against an annotation of the_given type whose {@code value} attribute also matches_the specified value._@param type the annotation type_@param value the annotation value to match;public AutowireCandidateQualifier(Class<?> type, Object value) {_		this(type.getName(), value)__	};construct,a,qualifier,to,match,against,an,annotation,of,the,given,type,whose,code,value,attribute,also,matches,the,specified,value,param,type,the,annotation,type,param,value,the,annotation,value,to,match;public,autowire,candidate,qualifier,class,type,object,value,this,type,get,name,value
AutowireCandidateQualifier -> public AutowireCandidateQualifier(Class<?> type, Object value);1530174524;Construct a qualifier to match against an annotation of the_given type whose {@code value} attribute also matches_the specified value._@param type the annotation type_@param value the annotation value to match;public AutowireCandidateQualifier(Class<?> type, Object value) {_		this(type.getName(), value)__	};construct,a,qualifier,to,match,against,an,annotation,of,the,given,type,whose,code,value,attribute,also,matches,the,specified,value,param,type,the,annotation,type,param,value,the,annotation,value,to,match;public,autowire,candidate,qualifier,class,type,object,value,this,type,get,name,value
AutowireCandidateQualifier -> public AutowireCandidateQualifier(String typeName, Object value);1328020251;Construct a qualifier to match against an annotation of the_given type name whose <code>value</code> attribute also matches_the specified value._<p>The type name may match the fully-qualified class name of_the annotation or the short class name (without the package)._@param typeName the name of the annotation type_@param value the annotation value to match;public AutowireCandidateQualifier(String typeName, Object value) {_		Assert.notNull(typeName, "Type name must not be null")__		this.typeName = typeName__		setAttribute(VALUE_KEY, value)__	};construct,a,qualifier,to,match,against,an,annotation,of,the,given,type,name,whose,code,value,code,attribute,also,matches,the,specified,value,p,the,type,name,may,match,the,fully,qualified,class,name,of,the,annotation,or,the,short,class,name,without,the,package,param,type,name,the,name,of,the,annotation,type,param,value,the,annotation,value,to,match;public,autowire,candidate,qualifier,string,type,name,object,value,assert,not,null,type,name,type,name,must,not,be,null,this,type,name,type,name,set,attribute,value
AutowireCandidateQualifier -> public AutowireCandidateQualifier(String typeName, Object value);1356735495;Construct a qualifier to match against an annotation of the_given type name whose {@code value} attribute also matches_the specified value._<p>The type name may match the fully-qualified class name of_the annotation or the short class name (without the package)._@param typeName the name of the annotation type_@param value the annotation value to match;public AutowireCandidateQualifier(String typeName, Object value) {_		Assert.notNull(typeName, "Type name must not be null")__		this.typeName = typeName__		setAttribute(VALUE_KEY, value)__	};construct,a,qualifier,to,match,against,an,annotation,of,the,given,type,name,whose,code,value,attribute,also,matches,the,specified,value,p,the,type,name,may,match,the,fully,qualified,class,name,of,the,annotation,or,the,short,class,name,without,the,package,param,type,name,the,name,of,the,annotation,type,param,value,the,annotation,value,to,match;public,autowire,candidate,qualifier,string,type,name,object,value,assert,not,null,type,name,type,name,must,not,be,null,this,type,name,type,name,set,attribute,value
AutowireCandidateQualifier -> public AutowireCandidateQualifier(String typeName, Object value);1385412762;Construct a qualifier to match against an annotation of the_given type name whose {@code value} attribute also matches_the specified value._<p>The type name may match the fully-qualified class name of_the annotation or the short class name (without the package)._@param typeName the name of the annotation type_@param value the annotation value to match;public AutowireCandidateQualifier(String typeName, Object value) {_		Assert.notNull(typeName, "Type name must not be null")__		this.typeName = typeName__		setAttribute(VALUE_KEY, value)__	};construct,a,qualifier,to,match,against,an,annotation,of,the,given,type,name,whose,code,value,attribute,also,matches,the,specified,value,p,the,type,name,may,match,the,fully,qualified,class,name,of,the,annotation,or,the,short,class,name,without,the,package,param,type,name,the,name,of,the,annotation,type,param,value,the,annotation,value,to,match;public,autowire,candidate,qualifier,string,type,name,object,value,assert,not,null,type,name,type,name,must,not,be,null,this,type,name,type,name,set,attribute,value
AutowireCandidateQualifier -> public AutowireCandidateQualifier(String typeName, Object value);1518260959;Construct a qualifier to match against an annotation of the_given type name whose {@code value} attribute also matches_the specified value._<p>The type name may match the fully-qualified class name of_the annotation or the short class name (without the package)._@param typeName the name of the annotation type_@param value the annotation value to match;public AutowireCandidateQualifier(String typeName, Object value) {_		Assert.notNull(typeName, "Type name must not be null")__		this.typeName = typeName__		setAttribute(VALUE_KEY, value)__	};construct,a,qualifier,to,match,against,an,annotation,of,the,given,type,name,whose,code,value,attribute,also,matches,the,specified,value,p,the,type,name,may,match,the,fully,qualified,class,name,of,the,annotation,or,the,short,class,name,without,the,package,param,type,name,the,name,of,the,annotation,type,param,value,the,annotation,value,to,match;public,autowire,candidate,qualifier,string,type,name,object,value,assert,not,null,type,name,type,name,must,not,be,null,this,type,name,type,name,set,attribute,value
AutowireCandidateQualifier -> public AutowireCandidateQualifier(String typeName, Object value);1530174524;Construct a qualifier to match against an annotation of the_given type name whose {@code value} attribute also matches_the specified value._<p>The type name may match the fully-qualified class name of_the annotation or the short class name (without the package)._@param typeName the name of the annotation type_@param value the annotation value to match;public AutowireCandidateQualifier(String typeName, Object value) {_		Assert.notNull(typeName, "Type name must not be null")__		this.typeName = typeName__		setAttribute(VALUE_KEY, value)__	};construct,a,qualifier,to,match,against,an,annotation,of,the,given,type,name,whose,code,value,attribute,also,matches,the,specified,value,p,the,type,name,may,match,the,fully,qualified,class,name,of,the,annotation,or,the,short,class,name,without,the,package,param,type,name,the,name,of,the,annotation,type,param,value,the,annotation,value,to,match;public,autowire,candidate,qualifier,string,type,name,object,value,assert,not,null,type,name,type,name,must,not,be,null,this,type,name,type,name,set,attribute,value
