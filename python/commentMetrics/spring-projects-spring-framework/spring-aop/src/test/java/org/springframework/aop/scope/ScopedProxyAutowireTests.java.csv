commented;modifiers;parameterAmount;loc;comment;code
false;public;0;11;;@Test public void testScopedProxyInheritsAutowireCandidateFalse() {     DefaultListableBeanFactory bf = new DefaultListableBeanFactory().     new XmlBeanDefinitionReader(bf).loadBeanDefinitions(SCOPED_AUTOWIRE_FALSE_CONTEXT).     assertTrue(Arrays.asList(bf.getBeanNamesForType(TestBean.class, false, false)).contains("scoped")).     assertTrue(Arrays.asList(bf.getBeanNamesForType(TestBean.class, true, false)).contains("scoped")).     assertFalse(bf.containsSingleton("scoped")).     TestBean autowired = (TestBean) bf.getBean("autowired").     TestBean unscoped = (TestBean) bf.getBean("unscoped").     assertSame(unscoped, autowired.getChild()). }
false;public;0;11;;@Test public void testScopedProxyReplacesAutowireCandidateTrue() {     DefaultListableBeanFactory bf = new DefaultListableBeanFactory().     new XmlBeanDefinitionReader(bf).loadBeanDefinitions(SCOPED_AUTOWIRE_TRUE_CONTEXT).     assertTrue(Arrays.asList(bf.getBeanNamesForType(TestBean.class, true, false)).contains("scoped")).     assertTrue(Arrays.asList(bf.getBeanNamesForType(TestBean.class, false, false)).contains("scoped")).     assertFalse(bf.containsSingleton("scoped")).     TestBean autowired = (TestBean) bf.getBean("autowired").     TestBean scoped = (TestBean) bf.getBean("scoped").     assertSame(scoped, autowired.getChild()). }
false;public;1;3;;public void setChild(TestBean child) {     this.child = child. }
false;public;0;3;;public TestBean getChild() {     return this.child. }
