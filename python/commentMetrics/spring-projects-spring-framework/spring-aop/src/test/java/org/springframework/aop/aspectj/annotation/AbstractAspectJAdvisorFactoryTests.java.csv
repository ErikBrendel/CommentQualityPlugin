# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractAspectJAdvisorFactoryTests -> protected abstract AspectJAdvisorFactory getFixture()_;1328020251;To be overridden by concrete test subclasses._@return the fixture;protected abstract AspectJAdvisorFactory getFixture()_;to,be,overridden,by,concrete,test,subclasses,return,the,fixture;protected,abstract,aspect,jadvisor,factory,get,fixture
AbstractAspectJAdvisorFactoryTests -> protected abstract AspectJAdvisorFactory getFixture()_;1346940376;To be overridden by concrete test subclasses._@return the fixture;protected abstract AspectJAdvisorFactory getFixture()_;to,be,overridden,by,concrete,test,subclasses,return,the,fixture;protected,abstract,aspect,jadvisor,factory,get,fixture
AbstractAspectJAdvisorFactoryTests -> protected abstract AspectJAdvisorFactory getFixture()_;1347368696;To be overridden by concrete test subclasses._@return the fixture;protected abstract AspectJAdvisorFactory getFixture()_;to,be,overridden,by,concrete,test,subclasses,return,the,fixture;protected,abstract,aspect,jadvisor,factory,get,fixture
AbstractAspectJAdvisorFactoryTests -> protected abstract AspectJAdvisorFactory getFixture()_;1356735495;To be overridden by concrete test subclasses._@return the fixture;protected abstract AspectJAdvisorFactory getFixture()_;to,be,overridden,by,concrete,test,subclasses,return,the,fixture;protected,abstract,aspect,jadvisor,factory,get,fixture
AbstractAspectJAdvisorFactoryTests -> protected abstract AspectJAdvisorFactory getFixture()_;1362408075;To be overridden by concrete test subclasses._@return the fixture;protected abstract AspectJAdvisorFactory getFixture()_;to,be,overridden,by,concrete,test,subclasses,return,the,fixture;protected,abstract,aspect,jadvisor,factory,get,fixture
AbstractAspectJAdvisorFactoryTests -> protected abstract AspectJAdvisorFactory getFixture()_;1391876651;To be overridden by concrete test subclasses._@return the fixture;protected abstract AspectJAdvisorFactory getFixture()_;to,be,overridden,by,concrete,test,subclasses,return,the,fixture;protected,abstract,aspect,jadvisor,factory,get,fixture
AbstractAspectJAdvisorFactoryTests -> protected abstract AspectJAdvisorFactory getFixture()_;1398144473;To be overridden by concrete test subclasses._@return the fixture;protected abstract AspectJAdvisorFactory getFixture()_;to,be,overridden,by,concrete,test,subclasses,return,the,fixture;protected,abstract,aspect,jadvisor,factory,get,fixture
AbstractAspectJAdvisorFactoryTests -> protected abstract AspectJAdvisorFactory getFixture()_;1413848647;To be overridden by concrete test subclasses._@return the fixture;protected abstract AspectJAdvisorFactory getFixture()_;to,be,overridden,by,concrete,test,subclasses,return,the,fixture;protected,abstract,aspect,jadvisor,factory,get,fixture
AbstractAspectJAdvisorFactoryTests -> protected abstract AspectJAdvisorFactory getFixture()_;1450827071;To be overridden by concrete test subclasses._@return the fixture;protected abstract AspectJAdvisorFactory getFixture()_;to,be,overridden,by,concrete,test,subclasses,return,the,fixture;protected,abstract,aspect,jadvisor,factory,get,fixture
AbstractAspectJAdvisorFactoryTests -> protected abstract AspectJAdvisorFactory getFixture()_;1462345408;To be overridden by concrete test subclasses._@return the fixture;protected abstract AspectJAdvisorFactory getFixture()_;to,be,overridden,by,concrete,test,subclasses,return,the,fixture;protected,abstract,aspect,jadvisor,factory,get,fixture
AbstractAspectJAdvisorFactoryTests -> protected abstract AspectJAdvisorFactory getFixture()_;1467730834;To be overridden by concrete test subclasses._@return the fixture;protected abstract AspectJAdvisorFactory getFixture()_;to,be,overridden,by,concrete,test,subclasses,return,the,fixture;protected,abstract,aspect,jadvisor,factory,get,fixture
AbstractAspectJAdvisorFactoryTests -> protected abstract AspectJAdvisorFactory getFixture()_;1469546119;To be overridden by concrete test subclasses._@return the fixture;protected abstract AspectJAdvisorFactory getFixture()_;to,be,overridden,by,concrete,test,subclasses,return,the,fixture;protected,abstract,aspect,jadvisor,factory,get,fixture
AbstractAspectJAdvisorFactoryTests -> protected abstract AspectJAdvisorFactory getFixture()_;1523443675;To be overridden by concrete test subclasses._@return the fixture;protected abstract AspectJAdvisorFactory getFixture()_;to,be,overridden,by,concrete,test,subclasses,return,the,fixture;protected,abstract,aspect,jadvisor,factory,get,fixture
AbstractAspectJAdvisorFactoryTests -> protected abstract AspectJAdvisorFactory getFixture()_;1523455535;To be overridden by concrete test subclasses._@return the fixture;protected abstract AspectJAdvisorFactory getFixture()_;to,be,overridden,by,concrete,test,subclasses,return,the,fixture;protected,abstract,aspect,jadvisor,factory,get,fixture
AbstractAspectJAdvisorFactoryTests -> protected abstract AspectJAdvisorFactory getFixture()_;1542613849;To be overridden by concrete test subclasses._@return the fixture;protected abstract AspectJAdvisorFactory getFixture()_;to,be,overridden,by,concrete,test,subclasses,return,the,fixture;protected,abstract,aspect,jadvisor,factory,get,fixture
AbstractAspectJAdvisorFactoryTests -> @Test 	public void testIntroductionOnTargetNotImplementingInterface();1328020251;In this case the introduction will be made.;@Test_	public void testIntroductionOnTargetNotImplementingInterface() {_		NotLockable notLockableTarget = new NotLockable()__		assertFalse(notLockableTarget instanceof Lockable)__		NotLockable notLockable1 = (NotLockable) createProxy(notLockableTarget,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(),"someBean")),_				NotLockable.class)__		assertTrue(notLockable1 instanceof Lockable)__		Lockable lockable = (Lockable) notLockable1__		assertFalse(lockable.locked())__		lockable.lock()__		assertTrue(lockable.locked())__		_		NotLockable notLockable2Target = new NotLockable()__		NotLockable notLockable2 = (NotLockable) createProxy(notLockable2Target,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(),"someBean")),_				NotLockable.class)__		assertTrue(notLockable2 instanceof Lockable)__		Lockable lockable2 = (Lockable) notLockable2__		assertFalse(lockable2.locked())__		notLockable2.setIntValue(1)__		lockable2.lock()__		try {_			notLockable2.setIntValue(32)__			fail()__		}_		catch (IllegalStateException ex) {_		}_		assertTrue(lockable2.locked())__	};in,this,case,the,introduction,will,be,made;test,public,void,test,introduction,on,target,not,implementing,interface,not,lockable,not,lockable,target,new,not,lockable,assert,false,not,lockable,target,instanceof,lockable,not,lockable,not,lockable1,not,lockable,create,proxy,not,lockable,target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable1,instanceof,lockable,lockable,lockable,lockable,not,lockable1,assert,false,lockable,locked,lockable,lock,assert,true,lockable,locked,not,lockable,not,lockable2target,new,not,lockable,not,lockable,not,lockable2,not,lockable,create,proxy,not,lockable2target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable2,instanceof,lockable,lockable,lockable2,lockable,not,lockable2,assert,false,lockable2,locked,not,lockable2,set,int,value,1,lockable2,lock,try,not,lockable2,set,int,value,32,fail,catch,illegal,state,exception,ex,assert,true,lockable2,locked
AbstractAspectJAdvisorFactoryTests -> @Test 	public void testIntroductionOnTargetNotImplementingInterface();1346940376;In this case the introduction will be made.;@Test_	public void testIntroductionOnTargetNotImplementingInterface() {_		NotLockable notLockableTarget = new NotLockable()__		assertFalse(notLockableTarget instanceof Lockable)__		NotLockable notLockable1 = (NotLockable) createProxy(notLockableTarget,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(),"someBean")),_				NotLockable.class)__		assertTrue(notLockable1 instanceof Lockable)__		Lockable lockable = (Lockable) notLockable1__		assertFalse(lockable.locked())__		lockable.lock()__		assertTrue(lockable.locked())__		_		NotLockable notLockable2Target = new NotLockable()__		NotLockable notLockable2 = (NotLockable) createProxy(notLockable2Target,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(),"someBean")),_				NotLockable.class)__		assertTrue(notLockable2 instanceof Lockable)__		Lockable lockable2 = (Lockable) notLockable2__		assertFalse(lockable2.locked())__		notLockable2.setIntValue(1)__		lockable2.lock()__		try {_			notLockable2.setIntValue(32)__			fail()__		}_		catch (IllegalStateException ex) {_		}_		assertTrue(lockable2.locked())__	};in,this,case,the,introduction,will,be,made;test,public,void,test,introduction,on,target,not,implementing,interface,not,lockable,not,lockable,target,new,not,lockable,assert,false,not,lockable,target,instanceof,lockable,not,lockable,not,lockable1,not,lockable,create,proxy,not,lockable,target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable1,instanceof,lockable,lockable,lockable,lockable,not,lockable1,assert,false,lockable,locked,lockable,lock,assert,true,lockable,locked,not,lockable,not,lockable2target,new,not,lockable,not,lockable,not,lockable2,not,lockable,create,proxy,not,lockable2target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable2,instanceof,lockable,lockable,lockable2,lockable,not,lockable2,assert,false,lockable2,locked,not,lockable2,set,int,value,1,lockable2,lock,try,not,lockable2,set,int,value,32,fail,catch,illegal,state,exception,ex,assert,true,lockable2,locked
AbstractAspectJAdvisorFactoryTests -> @Test 	public void testIntroductionOnTargetNotImplementingInterface();1347368696;In this case the introduction will be made.;@Test_	public void testIntroductionOnTargetNotImplementingInterface() {_		NotLockable notLockableTarget = new NotLockable()__		assertFalse(notLockableTarget instanceof Lockable)__		NotLockable notLockable1 = (NotLockable) createProxy(notLockableTarget,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(),"someBean")),_				NotLockable.class)__		assertTrue(notLockable1 instanceof Lockable)__		Lockable lockable = (Lockable) notLockable1__		assertFalse(lockable.locked())__		lockable.lock()__		assertTrue(lockable.locked())__		_		NotLockable notLockable2Target = new NotLockable()__		NotLockable notLockable2 = (NotLockable) createProxy(notLockable2Target,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(),"someBean")),_				NotLockable.class)__		assertTrue(notLockable2 instanceof Lockable)__		Lockable lockable2 = (Lockable) notLockable2__		assertFalse(lockable2.locked())__		notLockable2.setIntValue(1)__		lockable2.lock()__		try {_			notLockable2.setIntValue(32)__			fail()__		}_		catch (IllegalStateException ex) {_		}_		assertTrue(lockable2.locked())__	};in,this,case,the,introduction,will,be,made;test,public,void,test,introduction,on,target,not,implementing,interface,not,lockable,not,lockable,target,new,not,lockable,assert,false,not,lockable,target,instanceof,lockable,not,lockable,not,lockable1,not,lockable,create,proxy,not,lockable,target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable1,instanceof,lockable,lockable,lockable,lockable,not,lockable1,assert,false,lockable,locked,lockable,lock,assert,true,lockable,locked,not,lockable,not,lockable2target,new,not,lockable,not,lockable,not,lockable2,not,lockable,create,proxy,not,lockable2target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable2,instanceof,lockable,lockable,lockable2,lockable,not,lockable2,assert,false,lockable2,locked,not,lockable2,set,int,value,1,lockable2,lock,try,not,lockable2,set,int,value,32,fail,catch,illegal,state,exception,ex,assert,true,lockable2,locked
AbstractAspectJAdvisorFactoryTests -> @Test 	public void testIntroductionOnTargetNotImplementingInterface();1356735495;In this case the introduction will be made.;@Test_	public void testIntroductionOnTargetNotImplementingInterface() {_		NotLockable notLockableTarget = new NotLockable()__		assertFalse(notLockableTarget instanceof Lockable)__		NotLockable notLockable1 = (NotLockable) createProxy(notLockableTarget,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(),"someBean")),_				NotLockable.class)__		assertTrue(notLockable1 instanceof Lockable)__		Lockable lockable = (Lockable) notLockable1__		assertFalse(lockable.locked())__		lockable.lock()__		assertTrue(lockable.locked())___		NotLockable notLockable2Target = new NotLockable()__		NotLockable notLockable2 = (NotLockable) createProxy(notLockable2Target,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(),"someBean")),_				NotLockable.class)__		assertTrue(notLockable2 instanceof Lockable)__		Lockable lockable2 = (Lockable) notLockable2__		assertFalse(lockable2.locked())__		notLockable2.setIntValue(1)__		lockable2.lock()__		try {_			notLockable2.setIntValue(32)__			fail()__		}_		catch (IllegalStateException ex) {_		}_		assertTrue(lockable2.locked())__	};in,this,case,the,introduction,will,be,made;test,public,void,test,introduction,on,target,not,implementing,interface,not,lockable,not,lockable,target,new,not,lockable,assert,false,not,lockable,target,instanceof,lockable,not,lockable,not,lockable1,not,lockable,create,proxy,not,lockable,target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable1,instanceof,lockable,lockable,lockable,lockable,not,lockable1,assert,false,lockable,locked,lockable,lock,assert,true,lockable,locked,not,lockable,not,lockable2target,new,not,lockable,not,lockable,not,lockable2,not,lockable,create,proxy,not,lockable2target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable2,instanceof,lockable,lockable,lockable2,lockable,not,lockable2,assert,false,lockable2,locked,not,lockable2,set,int,value,1,lockable2,lock,try,not,lockable2,set,int,value,32,fail,catch,illegal,state,exception,ex,assert,true,lockable2,locked
AbstractAspectJAdvisorFactoryTests -> @Test 	public void testIntroductionOnTargetNotImplementingInterface();1362408075;In this case the introduction will be made.;@Test_	public void testIntroductionOnTargetNotImplementingInterface() {_		NotLockable notLockableTarget = new NotLockable()__		assertFalse(notLockableTarget instanceof Lockable)__		NotLockable notLockable1 = (NotLockable) createProxy(notLockableTarget,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(),"someBean")),_				NotLockable.class)__		assertTrue(notLockable1 instanceof Lockable)__		Lockable lockable = (Lockable) notLockable1__		assertFalse(lockable.locked())__		lockable.lock()__		assertTrue(lockable.locked())___		NotLockable notLockable2Target = new NotLockable()__		NotLockable notLockable2 = (NotLockable) createProxy(notLockable2Target,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(),"someBean")),_				NotLockable.class)__		assertTrue(notLockable2 instanceof Lockable)__		Lockable lockable2 = (Lockable) notLockable2__		assertFalse(lockable2.locked())__		notLockable2.setIntValue(1)__		lockable2.lock()__		try {_			notLockable2.setIntValue(32)__			fail()__		}_		catch (IllegalStateException ex) {_		}_		assertTrue(lockable2.locked())__	};in,this,case,the,introduction,will,be,made;test,public,void,test,introduction,on,target,not,implementing,interface,not,lockable,not,lockable,target,new,not,lockable,assert,false,not,lockable,target,instanceof,lockable,not,lockable,not,lockable1,not,lockable,create,proxy,not,lockable,target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable1,instanceof,lockable,lockable,lockable,lockable,not,lockable1,assert,false,lockable,locked,lockable,lock,assert,true,lockable,locked,not,lockable,not,lockable2target,new,not,lockable,not,lockable,not,lockable2,not,lockable,create,proxy,not,lockable2target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable2,instanceof,lockable,lockable,lockable2,lockable,not,lockable2,assert,false,lockable2,locked,not,lockable2,set,int,value,1,lockable2,lock,try,not,lockable2,set,int,value,32,fail,catch,illegal,state,exception,ex,assert,true,lockable2,locked
AbstractAspectJAdvisorFactoryTests -> @Test 	public void testIntroductionOnTargetNotImplementingInterface();1391876651;In this case the introduction will be made.;@Test_	public void testIntroductionOnTargetNotImplementingInterface() {_		NotLockable notLockableTarget = new NotLockable()__		assertFalse(notLockableTarget instanceof Lockable)__		NotLockable notLockable1 = (NotLockable) createProxy(notLockableTarget,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(),"someBean")),_				NotLockable.class)__		assertTrue(notLockable1 instanceof Lockable)__		Lockable lockable = (Lockable) notLockable1__		assertFalse(lockable.locked())__		lockable.lock()__		assertTrue(lockable.locked())___		NotLockable notLockable2Target = new NotLockable()__		NotLockable notLockable2 = (NotLockable) createProxy(notLockable2Target,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(),"someBean")),_				NotLockable.class)__		assertTrue(notLockable2 instanceof Lockable)__		Lockable lockable2 = (Lockable) notLockable2__		assertFalse(lockable2.locked())__		notLockable2.setIntValue(1)__		lockable2.lock()__		try {_			notLockable2.setIntValue(32)__			fail()__		}_		catch (IllegalStateException ex) {_		}_		assertTrue(lockable2.locked())__	};in,this,case,the,introduction,will,be,made;test,public,void,test,introduction,on,target,not,implementing,interface,not,lockable,not,lockable,target,new,not,lockable,assert,false,not,lockable,target,instanceof,lockable,not,lockable,not,lockable1,not,lockable,create,proxy,not,lockable,target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable1,instanceof,lockable,lockable,lockable,lockable,not,lockable1,assert,false,lockable,locked,lockable,lock,assert,true,lockable,locked,not,lockable,not,lockable2target,new,not,lockable,not,lockable,not,lockable2,not,lockable,create,proxy,not,lockable2target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable2,instanceof,lockable,lockable,lockable2,lockable,not,lockable2,assert,false,lockable2,locked,not,lockable2,set,int,value,1,lockable2,lock,try,not,lockable2,set,int,value,32,fail,catch,illegal,state,exception,ex,assert,true,lockable2,locked
AbstractAspectJAdvisorFactoryTests -> @Test 	public void testIntroductionOnTargetNotImplementingInterface();1398144473;In this case the introduction will be made.;@Test_	public void testIntroductionOnTargetNotImplementingInterface() {_		NotLockable notLockableTarget = new NotLockable()__		assertFalse(notLockableTarget instanceof Lockable)__		NotLockable notLockable1 = (NotLockable) createProxy(notLockableTarget,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(),"someBean")),_				NotLockable.class)__		assertTrue(notLockable1 instanceof Lockable)__		Lockable lockable = (Lockable) notLockable1__		assertFalse(lockable.locked())__		lockable.lock()__		assertTrue(lockable.locked())___		NotLockable notLockable2Target = new NotLockable()__		NotLockable notLockable2 = (NotLockable) createProxy(notLockable2Target,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(),"someBean")),_				NotLockable.class)__		assertTrue(notLockable2 instanceof Lockable)__		Lockable lockable2 = (Lockable) notLockable2__		assertFalse(lockable2.locked())__		notLockable2.setIntValue(1)__		lockable2.lock()__		try {_			notLockable2.setIntValue(32)__			fail()__		}_		catch (IllegalStateException ex) {_		}_		assertTrue(lockable2.locked())__	};in,this,case,the,introduction,will,be,made;test,public,void,test,introduction,on,target,not,implementing,interface,not,lockable,not,lockable,target,new,not,lockable,assert,false,not,lockable,target,instanceof,lockable,not,lockable,not,lockable1,not,lockable,create,proxy,not,lockable,target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable1,instanceof,lockable,lockable,lockable,lockable,not,lockable1,assert,false,lockable,locked,lockable,lock,assert,true,lockable,locked,not,lockable,not,lockable2target,new,not,lockable,not,lockable,not,lockable2,not,lockable,create,proxy,not,lockable2target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable2,instanceof,lockable,lockable,lockable2,lockable,not,lockable2,assert,false,lockable2,locked,not,lockable2,set,int,value,1,lockable2,lock,try,not,lockable2,set,int,value,32,fail,catch,illegal,state,exception,ex,assert,true,lockable2,locked
AbstractAspectJAdvisorFactoryTests -> @Test 	public void testIntroductionOnTargetNotImplementingInterface();1413848647;In this case the introduction will be made.;@Test_	public void testIntroductionOnTargetNotImplementingInterface() {_		NotLockable notLockableTarget = new NotLockable()__		assertFalse(notLockableTarget instanceof Lockable)__		NotLockable notLockable1 = (NotLockable) createProxy(notLockableTarget,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(),"someBean")),_				NotLockable.class)__		assertTrue(notLockable1 instanceof Lockable)__		Lockable lockable = (Lockable) notLockable1__		assertFalse(lockable.locked())__		lockable.lock()__		assertTrue(lockable.locked())___		NotLockable notLockable2Target = new NotLockable()__		NotLockable notLockable2 = (NotLockable) createProxy(notLockable2Target,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(),"someBean")),_				NotLockable.class)__		assertTrue(notLockable2 instanceof Lockable)__		Lockable lockable2 = (Lockable) notLockable2__		assertFalse(lockable2.locked())__		notLockable2.setIntValue(1)__		lockable2.lock()__		try {_			notLockable2.setIntValue(32)__			fail()__		}_		catch (IllegalStateException ex) {_		}_		assertTrue(lockable2.locked())__	};in,this,case,the,introduction,will,be,made;test,public,void,test,introduction,on,target,not,implementing,interface,not,lockable,not,lockable,target,new,not,lockable,assert,false,not,lockable,target,instanceof,lockable,not,lockable,not,lockable1,not,lockable,create,proxy,not,lockable,target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable1,instanceof,lockable,lockable,lockable,lockable,not,lockable1,assert,false,lockable,locked,lockable,lock,assert,true,lockable,locked,not,lockable,not,lockable2target,new,not,lockable,not,lockable,not,lockable2,not,lockable,create,proxy,not,lockable2target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable2,instanceof,lockable,lockable,lockable2,lockable,not,lockable2,assert,false,lockable2,locked,not,lockable2,set,int,value,1,lockable2,lock,try,not,lockable2,set,int,value,32,fail,catch,illegal,state,exception,ex,assert,true,lockable2,locked
AbstractAspectJAdvisorFactoryTests -> @Test 	public void testIntroductionOnTargetNotImplementingInterface();1450827071;In this case the introduction will be made.;@Test_	public void testIntroductionOnTargetNotImplementingInterface() {_		NotLockable notLockableTarget = new NotLockable()__		assertFalse(notLockableTarget instanceof Lockable)__		NotLockable notLockable1 = (NotLockable) createProxy(notLockableTarget,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(),"someBean")),_				NotLockable.class)__		assertTrue(notLockable1 instanceof Lockable)__		Lockable lockable = (Lockable) notLockable1__		assertFalse(lockable.locked())__		lockable.lock()__		assertTrue(lockable.locked())___		NotLockable notLockable2Target = new NotLockable()__		NotLockable notLockable2 = (NotLockable) createProxy(notLockable2Target,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(),"someBean")),_				NotLockable.class)__		assertTrue(notLockable2 instanceof Lockable)__		Lockable lockable2 = (Lockable) notLockable2__		assertFalse(lockable2.locked())__		notLockable2.setIntValue(1)__		lockable2.lock()__		try {_			notLockable2.setIntValue(32)__			fail()__		}_		catch (IllegalStateException ex) {_		}_		assertTrue(lockable2.locked())__	};in,this,case,the,introduction,will,be,made;test,public,void,test,introduction,on,target,not,implementing,interface,not,lockable,not,lockable,target,new,not,lockable,assert,false,not,lockable,target,instanceof,lockable,not,lockable,not,lockable1,not,lockable,create,proxy,not,lockable,target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable1,instanceof,lockable,lockable,lockable,lockable,not,lockable1,assert,false,lockable,locked,lockable,lock,assert,true,lockable,locked,not,lockable,not,lockable2target,new,not,lockable,not,lockable,not,lockable2,not,lockable,create,proxy,not,lockable2target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable2,instanceof,lockable,lockable,lockable2,lockable,not,lockable2,assert,false,lockable2,locked,not,lockable2,set,int,value,1,lockable2,lock,try,not,lockable2,set,int,value,32,fail,catch,illegal,state,exception,ex,assert,true,lockable2,locked
AbstractAspectJAdvisorFactoryTests -> @Test 	public void testIntroductionOnTargetNotImplementingInterface();1462345408;In this case the introduction will be made.;@Test_	public void testIntroductionOnTargetNotImplementingInterface() {_		NotLockable notLockableTarget = new NotLockable()__		assertFalse(notLockableTarget instanceof Lockable)__		NotLockable notLockable1 = (NotLockable) createProxy(notLockableTarget,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(),"someBean")),_				NotLockable.class)__		assertTrue(notLockable1 instanceof Lockable)__		Lockable lockable = (Lockable) notLockable1__		assertFalse(lockable.locked())__		lockable.lock()__		assertTrue(lockable.locked())___		NotLockable notLockable2Target = new NotLockable()__		NotLockable notLockable2 = (NotLockable) createProxy(notLockable2Target,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(),"someBean")),_				NotLockable.class)__		assertTrue(notLockable2 instanceof Lockable)__		Lockable lockable2 = (Lockable) notLockable2__		assertFalse(lockable2.locked())__		notLockable2.setIntValue(1)__		lockable2.lock()__		try {_			notLockable2.setIntValue(32)__			fail()__		}_		catch (IllegalStateException ex) {_		}_		assertTrue(lockable2.locked())__	};in,this,case,the,introduction,will,be,made;test,public,void,test,introduction,on,target,not,implementing,interface,not,lockable,not,lockable,target,new,not,lockable,assert,false,not,lockable,target,instanceof,lockable,not,lockable,not,lockable1,not,lockable,create,proxy,not,lockable,target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable1,instanceof,lockable,lockable,lockable,lockable,not,lockable1,assert,false,lockable,locked,lockable,lock,assert,true,lockable,locked,not,lockable,not,lockable2target,new,not,lockable,not,lockable,not,lockable2,not,lockable,create,proxy,not,lockable2target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable2,instanceof,lockable,lockable,lockable2,lockable,not,lockable2,assert,false,lockable2,locked,not,lockable2,set,int,value,1,lockable2,lock,try,not,lockable2,set,int,value,32,fail,catch,illegal,state,exception,ex,assert,true,lockable2,locked
AbstractAspectJAdvisorFactoryTests -> @Test 	public void testIntroductionOnTargetNotImplementingInterface();1467730834;In this case the introduction will be made.;@Test_	public void testIntroductionOnTargetNotImplementingInterface() {_		NotLockable notLockableTarget = new NotLockable()__		assertFalse(notLockableTarget instanceof Lockable)__		NotLockable notLockable1 = (NotLockable) createProxy(notLockableTarget,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(),"someBean")),_				NotLockable.class)__		assertTrue(notLockable1 instanceof Lockable)__		Lockable lockable = (Lockable) notLockable1__		assertFalse(lockable.locked())__		lockable.lock()__		assertTrue(lockable.locked())___		NotLockable notLockable2Target = new NotLockable()__		NotLockable notLockable2 = (NotLockable) createProxy(notLockable2Target,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(),"someBean")),_				NotLockable.class)__		assertTrue(notLockable2 instanceof Lockable)__		Lockable lockable2 = (Lockable) notLockable2__		assertFalse(lockable2.locked())__		notLockable2.setIntValue(1)__		lockable2.lock()__		try {_			notLockable2.setIntValue(32)__			fail()__		}_		catch (IllegalStateException ex) {_		}_		assertTrue(lockable2.locked())__	};in,this,case,the,introduction,will,be,made;test,public,void,test,introduction,on,target,not,implementing,interface,not,lockable,not,lockable,target,new,not,lockable,assert,false,not,lockable,target,instanceof,lockable,not,lockable,not,lockable1,not,lockable,create,proxy,not,lockable,target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable1,instanceof,lockable,lockable,lockable,lockable,not,lockable1,assert,false,lockable,locked,lockable,lock,assert,true,lockable,locked,not,lockable,not,lockable2target,new,not,lockable,not,lockable,not,lockable2,not,lockable,create,proxy,not,lockable2target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable2,instanceof,lockable,lockable,lockable2,lockable,not,lockable2,assert,false,lockable2,locked,not,lockable2,set,int,value,1,lockable2,lock,try,not,lockable2,set,int,value,32,fail,catch,illegal,state,exception,ex,assert,true,lockable2,locked
AbstractAspectJAdvisorFactoryTests -> @Test 	public void testIntroductionOnTargetNotImplementingInterface();1469546119;In this case the introduction will be made.;@Test_	public void testIntroductionOnTargetNotImplementingInterface() {_		NotLockable notLockableTarget = new NotLockable()__		assertFalse(notLockableTarget instanceof Lockable)__		NotLockable notLockable1 = (NotLockable) createProxy(notLockableTarget,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(),"someBean")),_				NotLockable.class)__		assertTrue(notLockable1 instanceof Lockable)__		Lockable lockable = (Lockable) notLockable1__		assertFalse(lockable.locked())__		lockable.lock()__		assertTrue(lockable.locked())___		NotLockable notLockable2Target = new NotLockable()__		NotLockable notLockable2 = (NotLockable) createProxy(notLockable2Target,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(),"someBean")),_				NotLockable.class)__		assertTrue(notLockable2 instanceof Lockable)__		Lockable lockable2 = (Lockable) notLockable2__		assertFalse(lockable2.locked())__		notLockable2.setIntValue(1)__		lockable2.lock()__		try {_			notLockable2.setIntValue(32)__			fail()__		}_		catch (IllegalStateException ex) {_		}_		assertTrue(lockable2.locked())__	};in,this,case,the,introduction,will,be,made;test,public,void,test,introduction,on,target,not,implementing,interface,not,lockable,not,lockable,target,new,not,lockable,assert,false,not,lockable,target,instanceof,lockable,not,lockable,not,lockable1,not,lockable,create,proxy,not,lockable,target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable1,instanceof,lockable,lockable,lockable,lockable,not,lockable1,assert,false,lockable,locked,lockable,lock,assert,true,lockable,locked,not,lockable,not,lockable2target,new,not,lockable,not,lockable,not,lockable2,not,lockable,create,proxy,not,lockable2target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable2,instanceof,lockable,lockable,lockable2,lockable,not,lockable2,assert,false,lockable2,locked,not,lockable2,set,int,value,1,lockable2,lock,try,not,lockable2,set,int,value,32,fail,catch,illegal,state,exception,ex,assert,true,lockable2,locked
AbstractAspectJAdvisorFactoryTests -> @Test 	public void testIntroductionOnTargetNotImplementingInterface();1523443675;In this case the introduction will be made.;@Test_	public void testIntroductionOnTargetNotImplementingInterface() {_		NotLockable notLockableTarget = new NotLockable()__		assertFalse(notLockableTarget instanceof Lockable)__		NotLockable notLockable1 = (NotLockable) createProxy(notLockableTarget,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(), "someBean")),_				NotLockable.class)__		assertTrue(notLockable1 instanceof Lockable)__		Lockable lockable = (Lockable) notLockable1__		assertFalse(lockable.locked())__		lockable.lock()__		assertTrue(lockable.locked())___		NotLockable notLockable2Target = new NotLockable()__		NotLockable notLockable2 = (NotLockable) createProxy(notLockable2Target,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(), "someBean")),_				NotLockable.class)__		assertTrue(notLockable2 instanceof Lockable)__		Lockable lockable2 = (Lockable) notLockable2__		assertFalse(lockable2.locked())__		notLockable2.setIntValue(1)__		lockable2.lock()__		try {_			notLockable2.setIntValue(32)__			fail()__		}_		catch (IllegalStateException ex) {_		}_		assertTrue(lockable2.locked())__	};in,this,case,the,introduction,will,be,made;test,public,void,test,introduction,on,target,not,implementing,interface,not,lockable,not,lockable,target,new,not,lockable,assert,false,not,lockable,target,instanceof,lockable,not,lockable,not,lockable1,not,lockable,create,proxy,not,lockable,target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable1,instanceof,lockable,lockable,lockable,lockable,not,lockable1,assert,false,lockable,locked,lockable,lock,assert,true,lockable,locked,not,lockable,not,lockable2target,new,not,lockable,not,lockable,not,lockable2,not,lockable,create,proxy,not,lockable2target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable2,instanceof,lockable,lockable,lockable2,lockable,not,lockable2,assert,false,lockable2,locked,not,lockable2,set,int,value,1,lockable2,lock,try,not,lockable2,set,int,value,32,fail,catch,illegal,state,exception,ex,assert,true,lockable2,locked
AbstractAspectJAdvisorFactoryTests -> @Test 	public void testIntroductionOnTargetNotImplementingInterface();1523455535;In this case the introduction will be made.;@Test_	public void testIntroductionOnTargetNotImplementingInterface() {_		NotLockable notLockableTarget = new NotLockable()__		assertFalse(notLockableTarget instanceof Lockable)__		NotLockable notLockable1 = (NotLockable) createProxy(notLockableTarget,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(), "someBean")),_				NotLockable.class)__		assertTrue(notLockable1 instanceof Lockable)__		Lockable lockable = (Lockable) notLockable1__		assertFalse(lockable.locked())__		lockable.lock()__		assertTrue(lockable.locked())___		NotLockable notLockable2Target = new NotLockable()__		NotLockable notLockable2 = (NotLockable) createProxy(notLockable2Target,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(), "someBean")),_				NotLockable.class)__		assertTrue(notLockable2 instanceof Lockable)__		Lockable lockable2 = (Lockable) notLockable2__		assertFalse(lockable2.locked())__		notLockable2.setIntValue(1)__		lockable2.lock()__		try {_			notLockable2.setIntValue(32)__			fail()__		}_		catch (IllegalStateException ex) {_		}_		assertTrue(lockable2.locked())__	};in,this,case,the,introduction,will,be,made;test,public,void,test,introduction,on,target,not,implementing,interface,not,lockable,not,lockable,target,new,not,lockable,assert,false,not,lockable,target,instanceof,lockable,not,lockable,not,lockable1,not,lockable,create,proxy,not,lockable,target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable1,instanceof,lockable,lockable,lockable,lockable,not,lockable1,assert,false,lockable,locked,lockable,lock,assert,true,lockable,locked,not,lockable,not,lockable2target,new,not,lockable,not,lockable,not,lockable2,not,lockable,create,proxy,not,lockable2target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable2,instanceof,lockable,lockable,lockable2,lockable,not,lockable2,assert,false,lockable2,locked,not,lockable2,set,int,value,1,lockable2,lock,try,not,lockable2,set,int,value,32,fail,catch,illegal,state,exception,ex,assert,true,lockable2,locked
AbstractAspectJAdvisorFactoryTests -> @Test 	public void testIntroductionOnTargetNotImplementingInterface();1542613849;In this case the introduction will be made.;@Test_	public void testIntroductionOnTargetNotImplementingInterface() {_		NotLockable notLockableTarget = new NotLockable()__		assertFalse(notLockableTarget instanceof Lockable)__		NotLockable notLockable1 = (NotLockable) createProxy(notLockableTarget,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(), "someBean")),_				NotLockable.class)__		assertTrue(notLockable1 instanceof Lockable)__		Lockable lockable = (Lockable) notLockable1__		assertFalse(lockable.locked())__		lockable.lock()__		assertTrue(lockable.locked())___		NotLockable notLockable2Target = new NotLockable()__		NotLockable notLockable2 = (NotLockable) createProxy(notLockable2Target,_				getFixture().getAdvisors(_						new SingletonMetadataAwareAspectInstanceFactory(new MakeLockable(), "someBean")),_				NotLockable.class)__		assertTrue(notLockable2 instanceof Lockable)__		Lockable lockable2 = (Lockable) notLockable2__		assertFalse(lockable2.locked())__		notLockable2.setIntValue(1)__		lockable2.lock()__		try {_			notLockable2.setIntValue(32)__			fail()__		}_		catch (IllegalStateException ex) {_		}_		assertTrue(lockable2.locked())__	};in,this,case,the,introduction,will,be,made;test,public,void,test,introduction,on,target,not,implementing,interface,not,lockable,not,lockable,target,new,not,lockable,assert,false,not,lockable,target,instanceof,lockable,not,lockable,not,lockable1,not,lockable,create,proxy,not,lockable,target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable1,instanceof,lockable,lockable,lockable,lockable,not,lockable1,assert,false,lockable,locked,lockable,lock,assert,true,lockable,locked,not,lockable,not,lockable2target,new,not,lockable,not,lockable,not,lockable2,not,lockable,create,proxy,not,lockable2target,get,fixture,get,advisors,new,singleton,metadata,aware,aspect,instance,factory,new,make,lockable,some,bean,not,lockable,class,assert,true,not,lockable2,instanceof,lockable,lockable,lockable2,lockable,not,lockable2,assert,false,lockable2,locked,not,lockable2,set,int,value,1,lockable2,lock,try,not,lockable2,set,int,value,32,fail,catch,illegal,state,exception,ex,assert,true,lockable2,locked
