# id;timestamp;commentText;codeText;commentWords;codeWords
MethodInvocationTests -> @Test 	public void testToStringDoesntHitTarget() throws Throwable;1328020251;toString on target can cause failure.;@Test_	public void testToStringDoesntHitTarget() throws Throwable {_		Object target = new TestBean() {_			public String toString() {_				throw new UnsupportedOperationException("toString")__			}_		}__		List<Object> is = new LinkedList<Object>()___		Method m = Object.class.getMethod("hashCode", (Class[]) null)__		Object proxy = new Object()__		ReflectiveMethodInvocation invocation =_		    new ReflectiveMethodInvocation(proxy, target, m, null, null, is)___		_		_		invocation.toString()__	};to,string,on,target,can,cause,failure;test,public,void,test,to,string,doesnt,hit,target,throws,throwable,object,target,new,test,bean,public,string,to,string,throw,new,unsupported,operation,exception,to,string,list,object,is,new,linked,list,object,method,m,object,class,get,method,hash,code,class,null,object,proxy,new,object,reflective,method,invocation,invocation,new,reflective,method,invocation,proxy,target,m,null,null,is,invocation,to,string
MethodInvocationTests -> @Test 	public void testToStringDoesntHitTarget() throws Throwable;1356735495;toString on target can cause failure.;@Test_	public void testToStringDoesntHitTarget() throws Throwable {_		Object target = new TestBean() {_			public String toString() {_				throw new UnsupportedOperationException("toString")__			}_		}__		List<Object> is = new LinkedList<Object>()___		Method m = Object.class.getMethod("hashCode", (Class[]) null)__		Object proxy = new Object()__		ReflectiveMethodInvocation invocation =_			new ReflectiveMethodInvocation(proxy, target, m, null, null, is)___		_		_		invocation.toString()__	};to,string,on,target,can,cause,failure;test,public,void,test,to,string,doesnt,hit,target,throws,throwable,object,target,new,test,bean,public,string,to,string,throw,new,unsupported,operation,exception,to,string,list,object,is,new,linked,list,object,method,m,object,class,get,method,hash,code,class,null,object,proxy,new,object,reflective,method,invocation,invocation,new,reflective,method,invocation,proxy,target,m,null,null,is,invocation,to,string
MethodInvocationTests -> @Test 	public void testToStringDoesntHitTarget() throws Throwable;1362408075;toString on target can cause failure.;@Test_	public void testToStringDoesntHitTarget() throws Throwable {_		Object target = new TestBean() {_			public String toString() {_				throw new UnsupportedOperationException("toString")__			}_		}__		List<Object> is = new LinkedList<Object>()___		Method m = Object.class.getMethod("hashCode", (Class[]) null)__		Object proxy = new Object()__		ReflectiveMethodInvocation invocation =_			new ReflectiveMethodInvocation(proxy, target, m, null, null, is)___		_		_		invocation.toString()__	};to,string,on,target,can,cause,failure;test,public,void,test,to,string,doesnt,hit,target,throws,throwable,object,target,new,test,bean,public,string,to,string,throw,new,unsupported,operation,exception,to,string,list,object,is,new,linked,list,object,method,m,object,class,get,method,hash,code,class,null,object,proxy,new,object,reflective,method,invocation,invocation,new,reflective,method,invocation,proxy,target,m,null,null,is,invocation,to,string
MethodInvocationTests -> @Test 	public void testToStringDoesntHitTarget() throws Throwable;1368482696;toString on target can cause failure.;@Test_	public void testToStringDoesntHitTarget() throws Throwable {_		Object target = new TestBean() {_			@Override_			public String toString() {_				throw new UnsupportedOperationException("toString")__			}_		}__		List<Object> is = new LinkedList<Object>()___		Method m = Object.class.getMethod("hashCode", (Class[]) null)__		Object proxy = new Object()__		ReflectiveMethodInvocation invocation =_			new ReflectiveMethodInvocation(proxy, target, m, null, null, is)___		_		_		invocation.toString()__	};to,string,on,target,can,cause,failure;test,public,void,test,to,string,doesnt,hit,target,throws,throwable,object,target,new,test,bean,override,public,string,to,string,throw,new,unsupported,operation,exception,to,string,list,object,is,new,linked,list,object,method,m,object,class,get,method,hash,code,class,null,object,proxy,new,object,reflective,method,invocation,invocation,new,reflective,method,invocation,proxy,target,m,null,null,is,invocation,to,string
MethodInvocationTests -> @Test 	public void testToStringDoesntHitTarget() throws Throwable;1413848647;toString on target can cause failure.;@Test_	public void testToStringDoesntHitTarget() throws Throwable {_		Object target = new TestBean() {_			@Override_			public String toString() {_				throw new UnsupportedOperationException("toString")__			}_		}__		List<Object> is = new LinkedList<Object>()___		Method m = Object.class.getMethod("hashCode", (Class[]) null)__		Object proxy = new Object()__		ReflectiveMethodInvocation invocation =_			new ReflectiveMethodInvocation(proxy, target, m, null, null, is)___		_		_		invocation.toString()__	};to,string,on,target,can,cause,failure;test,public,void,test,to,string,doesnt,hit,target,throws,throwable,object,target,new,test,bean,override,public,string,to,string,throw,new,unsupported,operation,exception,to,string,list,object,is,new,linked,list,object,method,m,object,class,get,method,hash,code,class,null,object,proxy,new,object,reflective,method,invocation,invocation,new,reflective,method,invocation,proxy,target,m,null,null,is,invocation,to,string
MethodInvocationTests -> @Test 	public void testToStringDoesntHitTarget() throws Throwable;1450827071;toString on target can cause failure.;@Test_	public void testToStringDoesntHitTarget() throws Throwable {_		Object target = new TestBean() {_			@Override_			public String toString() {_				throw new UnsupportedOperationException("toString")__			}_		}__		List<Object> is = new LinkedList<Object>()___		Method m = Object.class.getMethod("hashCode")__		Object proxy = new Object()__		ReflectiveMethodInvocation invocation =_			new ReflectiveMethodInvocation(proxy, target, m, null, null, is)___		_		_		invocation.toString()__	};to,string,on,target,can,cause,failure;test,public,void,test,to,string,doesnt,hit,target,throws,throwable,object,target,new,test,bean,override,public,string,to,string,throw,new,unsupported,operation,exception,to,string,list,object,is,new,linked,list,object,method,m,object,class,get,method,hash,code,object,proxy,new,object,reflective,method,invocation,invocation,new,reflective,method,invocation,proxy,target,m,null,null,is,invocation,to,string
MethodInvocationTests -> @Test 	public void testToStringDoesntHitTarget() throws Throwable;1467730834;toString on target can cause failure.;@Test_	public void testToStringDoesntHitTarget() throws Throwable {_		Object target = new TestBean() {_			@Override_			public String toString() {_				throw new UnsupportedOperationException("toString")__			}_		}__		List<Object> is = new LinkedList<>()___		Method m = Object.class.getMethod("hashCode")__		Object proxy = new Object()__		ReflectiveMethodInvocation invocation =_			new ReflectiveMethodInvocation(proxy, target, m, null, null, is)___		_		_		invocation.toString()__	};to,string,on,target,can,cause,failure;test,public,void,test,to,string,doesnt,hit,target,throws,throwable,object,target,new,test,bean,override,public,string,to,string,throw,new,unsupported,operation,exception,to,string,list,object,is,new,linked,list,method,m,object,class,get,method,hash,code,object,proxy,new,object,reflective,method,invocation,invocation,new,reflective,method,invocation,proxy,target,m,null,null,is,invocation,to,string
MethodInvocationTests -> @Test 	public void testToStringDoesntHitTarget() throws Throwable;1469546119;toString on target can cause failure.;@Test_	public void testToStringDoesntHitTarget() throws Throwable {_		Object target = new TestBean() {_			@Override_			public String toString() {_				throw new UnsupportedOperationException("toString")__			}_		}__		List<Object> is = new LinkedList<>()___		Method m = Object.class.getMethod("hashCode")__		Object proxy = new Object()__		ReflectiveMethodInvocation invocation =_			new ReflectiveMethodInvocation(proxy, target, m, null, null, is)___		_		_		invocation.toString()__	};to,string,on,target,can,cause,failure;test,public,void,test,to,string,doesnt,hit,target,throws,throwable,object,target,new,test,bean,override,public,string,to,string,throw,new,unsupported,operation,exception,to,string,list,object,is,new,linked,list,method,m,object,class,get,method,hash,code,object,proxy,new,object,reflective,method,invocation,invocation,new,reflective,method,invocation,proxy,target,m,null,null,is,invocation,to,string
