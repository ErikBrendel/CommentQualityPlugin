commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Test(expected = IllegalArgumentException.class) public void testNotAnAspect() {     new AspectMetadata(String.class, "someBean"). }
false;public;0;7;;@Test public void testSingletonAspect() {     AspectMetadata am = new AspectMetadata(ExceptionAspect.class, "someBean").     assertFalse(am.isPerThisOrPerTarget()).     assertSame(Pointcut.TRUE, am.getPerClausePointcut()).     assertEquals(PerClauseKind.SINGLETON, am.getAjType().getPerClause().getKind()). }
false;public;0;7;;@Test public void testPerTargetAspect() {     AspectMetadata am = new AspectMetadata(PerTargetAspect.class, "someBean").     assertTrue(am.isPerThisOrPerTarget()).     assertNotSame(Pointcut.TRUE, am.getPerClausePointcut()).     assertEquals(PerClauseKind.PERTARGET, am.getAjType().getPerClause().getKind()). }
false;public;0;7;;@Test public void testPerThisAspect() {     AspectMetadata am = new AspectMetadata(PerThisAspect.class, "someBean").     assertTrue(am.isPerThisOrPerTarget()).     assertNotSame(Pointcut.TRUE, am.getPerClausePointcut()).     assertEquals(PerClauseKind.PERTHIS, am.getAjType().getPerClause().getKind()). }
