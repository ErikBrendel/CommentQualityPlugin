# id;timestamp;commentText;codeText;commentWords;codeWords
MethodCounter -> @Override 	public boolean equals(Object other);1368482696;A bit simplistic: just wants the same class._Doesn't worry about counts._@see java.lang.Object#equals(java.lang.Object);@Override_	public boolean equals(Object other) {_		return (other != null && other.getClass() == this.getClass())__	};a,bit,simplistic,just,wants,the,same,class,doesn,t,worry,about,counts,see,java,lang,object,equals,java,lang,object;override,public,boolean,equals,object,other,return,other,null,other,get,class,this,get,class
MethodCounter -> @Override 	public boolean equals(Object other);1467730834;A bit simplistic: just wants the same class._Doesn't worry about counts._@see java.lang.Object#equals(java.lang.Object);@Override_	public boolean equals(Object other) {_		return (other != null && other.getClass() == this.getClass())__	};a,bit,simplistic,just,wants,the,same,class,doesn,t,worry,about,counts,see,java,lang,object,equals,java,lang,object;override,public,boolean,equals,object,other,return,other,null,other,get,class,this,get,class
