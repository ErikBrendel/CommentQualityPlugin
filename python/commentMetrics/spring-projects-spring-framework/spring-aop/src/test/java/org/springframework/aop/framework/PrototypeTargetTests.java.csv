commented;modifiers;parameterAmount;loc;comment;code
false;public;0;13;;@Test public void testPrototypeProxyWithPrototypeTarget() {     TestBeanImpl.constructionCount = 0.     DefaultListableBeanFactory bf = new DefaultListableBeanFactory().     new XmlBeanDefinitionReader(bf).loadBeanDefinitions(CONTEXT).     for (int i = 0. i < 10. i++) {         TestBean tb = (TestBean) bf.getBean("testBeanPrototype").         tb.doSomething().     }     TestInterceptor interceptor = (TestInterceptor) bf.getBean("testInterceptor").     assertEquals(10, TestBeanImpl.constructionCount).     assertEquals(10, interceptor.invocationCount). }
false;public;0;13;;@Test public void testSingletonProxyWithPrototypeTarget() {     TestBeanImpl.constructionCount = 0.     DefaultListableBeanFactory bf = new DefaultListableBeanFactory().     new XmlBeanDefinitionReader(bf).loadBeanDefinitions(CONTEXT).     for (int i = 0. i < 10. i++) {         TestBean tb = (TestBean) bf.getBean("testBeanSingleton").         tb.doSomething().     }     TestInterceptor interceptor = (TestInterceptor) bf.getBean("testInterceptor").     assertEquals(1, TestBeanImpl.constructionCount).     assertEquals(10, interceptor.invocationCount). }
false;public;0;1;;public void doSomething().
false;public;0;3;;@Override public void doSomething() { }
false;public;1;5;;@Override public Object invoke(MethodInvocation methodInvocation) throws Throwable {     invocationCount++.     return methodInvocation.proceed(). }
