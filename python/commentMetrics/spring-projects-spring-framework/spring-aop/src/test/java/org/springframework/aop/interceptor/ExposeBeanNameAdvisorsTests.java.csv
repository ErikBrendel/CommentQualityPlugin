commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Override public int getAge() {     assertEquals(beanName, ExposeBeanNameAdvisors.getBeanName()).     return super.getAge(). }
false;public;0;13;;@Test public void testNoIntroduction() {     String beanName = "foo".     TestBean target = new RequiresBeanNameBoundTestBean(beanName).     ProxyFactory pf = new ProxyFactory(target).     pf.addAdvisor(ExposeInvocationInterceptor.ADVISOR).     pf.addAdvisor(ExposeBeanNameAdvisors.createAdvisorWithoutIntroduction(beanName)).     ITestBean proxy = (ITestBean) pf.getProxy().     assertFalse("No introduction", proxy instanceof NamedBean).     // Requires binding     proxy.getAge(). }
false;public;0;16;;@Test public void testWithIntroduction() {     String beanName = "foo".     TestBean target = new RequiresBeanNameBoundTestBean(beanName).     ProxyFactory pf = new ProxyFactory(target).     pf.addAdvisor(ExposeInvocationInterceptor.ADVISOR).     pf.addAdvisor(ExposeBeanNameAdvisors.createAdvisorIntroducingNamedBean(beanName)).     ITestBean proxy = (ITestBean) pf.getProxy().     assertTrue("Introduction was made", proxy instanceof NamedBean).     // Requires binding     proxy.getAge().     NamedBean nb = (NamedBean) proxy.     assertEquals("Name returned correctly", beanName, nb.getBeanName()). }
