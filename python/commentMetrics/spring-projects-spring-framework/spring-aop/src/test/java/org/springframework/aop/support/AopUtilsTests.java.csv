commented;modifiers;parameterAmount;loc;comment;code
false;public;2;4;;@Override public boolean matches(Method method, @Nullable Class<?> clazzy) {     return false. }
false;public;0;12;;@Test public void testPointcutCanNeverApply() {     class TestPointcut extends StaticMethodMatcherPointcut {          @Override         public boolean matches(Method method, @Nullable Class<?> clazzy) {             return false.         }     }     Pointcut no = new TestPointcut().     assertFalse(AopUtils.canApply(no, Object.class)). }
false;public;0;5;;@Test public void testPointcutAlwaysApplies() {     assertTrue(AopUtils.canApply(new DefaultPointcutAdvisor(new NopInterceptor()), Object.class)).     assertTrue(AopUtils.canApply(new DefaultPointcutAdvisor(new NopInterceptor()), TestBean.class)). }
false;public;2;4;;@Override public boolean matches(Method method, @Nullable Class<?> clazz) {     return method.getName().equals("hashCode"). }
false;public;0;14;;@Test public void testPointcutAppliesToOneMethodOnObject() {     class TestPointcut extends StaticMethodMatcherPointcut {          @Override         public boolean matches(Method method, @Nullable Class<?> clazz) {             return method.getName().equals("hashCode").         }     }     Pointcut pc = new TestPointcut().     // will return true if we're not proxying interfaces     assertTrue(AopUtils.canApply(pc, Object.class)). }
true;public;0;11;/**  * Test that when we serialize and deserialize various canonical instances  * of AOP classes, they return the same instance, not a new instance  * that's subverted the singleton construction limitation.  */ ;/**  * Test that when we serialize and deserialize various canonical instances  * of AOP classes, they return the same instance, not a new instance  * that's subverted the singleton construction limitation.  */ @Test public void testCanonicalFrameworkClassesStillCanonicalOnDeserialization() throws Exception {     assertSame(MethodMatcher.TRUE, SerializationTestUtils.serializeAndDeserialize(MethodMatcher.TRUE)).     assertSame(ClassFilter.TRUE, SerializationTestUtils.serializeAndDeserialize(ClassFilter.TRUE)).     assertSame(Pointcut.TRUE, SerializationTestUtils.serializeAndDeserialize(Pointcut.TRUE)).     assertSame(EmptyTargetSource.INSTANCE, SerializationTestUtils.serializeAndDeserialize(EmptyTargetSource.INSTANCE)).     assertSame(Pointcuts.SETTERS, SerializationTestUtils.serializeAndDeserialize(Pointcuts.SETTERS)).     assertSame(Pointcuts.GETTERS, SerializationTestUtils.serializeAndDeserialize(Pointcuts.GETTERS)).     assertSame(ExposeInvocationInterceptor.INSTANCE, SerializationTestUtils.serializeAndDeserialize(ExposeInvocationInterceptor.INSTANCE)). }
