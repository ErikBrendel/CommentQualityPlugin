commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void testUnion() {     assertTrue(exceptionFilter.matches(RuntimeException.class)).     assertFalse(exceptionFilter.matches(TestBean.class)).     assertFalse(itbFilter.matches(Exception.class)).     assertTrue(itbFilter.matches(TestBean.class)).     ClassFilter union = ClassFilters.union(exceptionFilter, itbFilter).     assertTrue(union.matches(RuntimeException.class)).     assertTrue(union.matches(TestBean.class)). }
false;public;0;9;;@Test public void testIntersection() {     assertTrue(exceptionFilter.matches(RuntimeException.class)).     assertTrue(hasRootCauseFilter.matches(NestedRuntimeException.class)).     ClassFilter intersection = ClassFilters.intersection(exceptionFilter, hasRootCauseFilter).     assertFalse(intersection.matches(RuntimeException.class)).     assertFalse(intersection.matches(TestBean.class)).     assertTrue(intersection.matches(NestedRuntimeException.class)). }
