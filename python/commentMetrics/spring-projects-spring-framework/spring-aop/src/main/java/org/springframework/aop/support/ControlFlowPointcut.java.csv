# id;timestamp;commentText;codeText;commentWords;codeWords
ControlFlowPointcut -> @Override 	public boolean matches(Method method, @Nullable Class<?> targetClass);1496242568;Subclasses can override this if it's possible to filter out_some candidate classes.;@Override_	public boolean matches(Method method, @Nullable Class<?> targetClass) {_		return true__	};subclasses,can,override,this,if,it,s,possible,to,filter,out,some,candidate,classes;override,public,boolean,matches,method,method,nullable,class,target,class,return,true
ControlFlowPointcut -> @Override 	public boolean matches(Method method, @Nullable Class<?> targetClass);1498780456;Subclasses can override this if it's possible to filter out_some candidate classes.;@Override_	public boolean matches(Method method, @Nullable Class<?> targetClass) {_		return true__	};subclasses,can,override,this,if,it,s,possible,to,filter,out,some,candidate,classes;override,public,boolean,matches,method,method,nullable,class,target,class,return,true
ControlFlowPointcut -> @Override 	public boolean matches(Method method, @Nullable Class<?> targetClass);1530190293;Subclasses can override this if it's possible to filter out_some candidate classes.;@Override_	public boolean matches(Method method, @Nullable Class<?> targetClass) {_		return true__	};subclasses,can,override,this,if,it,s,possible,to,filter,out,some,candidate,classes;override,public,boolean,matches,method,method,nullable,class,target,class,return,true
ControlFlowPointcut -> public ControlFlowPointcut(Class clazz);1328020251;Construct a new pointcut that matches all control flows below that class._@param clazz the clazz;public ControlFlowPointcut(Class clazz) {_		this(clazz, null)__	};construct,a,new,pointcut,that,matches,all,control,flows,below,that,class,param,clazz,the,clazz;public,control,flow,pointcut,class,clazz,this,clazz,null
ControlFlowPointcut -> public ControlFlowPointcut(Class clazz);1356735495;Construct a new pointcut that matches all control flows below that class._@param clazz the clazz;public ControlFlowPointcut(Class clazz) {_		this(clazz, null)__	};construct,a,new,pointcut,that,matches,all,control,flows,below,that,class,param,clazz,the,clazz;public,control,flow,pointcut,class,clazz,this,clazz,null
ControlFlowPointcut -> public ControlFlowPointcut(Class clazz);1357119239;Construct a new pointcut that matches all control flows below that class._@param clazz the clazz;public ControlFlowPointcut(Class clazz) {_		this(clazz, null)__	};construct,a,new,pointcut,that,matches,all,control,flows,below,that,class,param,clazz,the,clazz;public,control,flow,pointcut,class,clazz,this,clazz,null
ControlFlowPointcut -> public ControlFlowPointcut(Class clazz);1368482696;Construct a new pointcut that matches all control flows below that class._@param clazz the clazz;public ControlFlowPointcut(Class clazz) {_		this(clazz, null)__	};construct,a,new,pointcut,that,matches,all,control,flows,below,that,class,param,clazz,the,clazz;public,control,flow,pointcut,class,clazz,this,clazz,null
ControlFlowPointcut -> @Override 	public boolean matches(Method method, Class targetClass);1356735495;Subclasses can override this if it's possible to filter out_some candidate classes.;@Override_	public boolean matches(Method method, Class targetClass) {_		return true__	};subclasses,can,override,this,if,it,s,possible,to,filter,out,some,candidate,classes;override,public,boolean,matches,method,method,class,target,class,return,true
ControlFlowPointcut -> @Override 	public boolean matches(Method method, Class targetClass);1368482696;Subclasses can override this if it's possible to filter out_some candidate classes.;@Override_	public boolean matches(Method method, Class targetClass) {_		return true__	};subclasses,can,override,this,if,it,s,possible,to,filter,out,some,candidate,classes;override,public,boolean,matches,method,method,class,target,class,return,true
ControlFlowPointcut -> public boolean matches(Method method, Class targetClass);1328020251;Subclasses can override this if it's possible to filter out_some candidate classes.;public boolean matches(Method method, Class targetClass) {_		return true__	};subclasses,can,override,this,if,it,s,possible,to,filter,out,some,candidate,classes;public,boolean,matches,method,method,class,target,class,return,true
ControlFlowPointcut -> public boolean matches(Method method, Class targetClass);1357119239;Subclasses can override this if it's possible to filter out_some candidate classes.;public boolean matches(Method method, Class targetClass) {_		return true__	};subclasses,can,override,this,if,it,s,possible,to,filter,out,some,candidate,classes;public,boolean,matches,method,method,class,target,class,return,true
ControlFlowPointcut -> @Override 	public boolean matches(Method method, Class<?> targetClass);1385412762;Subclasses can override this if it's possible to filter out_some candidate classes.;@Override_	public boolean matches(Method method, Class<?> targetClass) {_		return true__	};subclasses,can,override,this,if,it,s,possible,to,filter,out,some,candidate,classes;override,public,boolean,matches,method,method,class,target,class,return,true
ControlFlowPointcut -> @Override 	public boolean matches(Method method, Class<?> targetClass);1450827071;Subclasses can override this if it's possible to filter out_some candidate classes.;@Override_	public boolean matches(Method method, Class<?> targetClass) {_		return true__	};subclasses,can,override,this,if,it,s,possible,to,filter,out,some,candidate,classes;override,public,boolean,matches,method,method,class,target,class,return,true
ControlFlowPointcut -> @Override 	public boolean matches(Method method, Class<?> targetClass);1485175315;Subclasses can override this if it's possible to filter out_some candidate classes.;@Override_	public boolean matches(Method method, Class<?> targetClass) {_		return true__	};subclasses,can,override,this,if,it,s,possible,to,filter,out,some,candidate,classes;override,public,boolean,matches,method,method,class,target,class,return,true
ControlFlowPointcut -> @Override 	public boolean matches(Method method, Class<?> targetClass);1495868221;Subclasses can override this if it's possible to filter out_some candidate classes.;@Override_	public boolean matches(Method method, Class<?> targetClass) {_		return true__	};subclasses,can,override,this,if,it,s,possible,to,filter,out,some,candidate,classes;override,public,boolean,matches,method,method,class,target,class,return,true
ControlFlowPointcut -> @Override 	public boolean matches(Method method, Class<?> targetClass);1532038651;Subclasses can override this if it's possible to filter out_some candidate classes.;@Override_	public boolean matches(Method method, Class<?> targetClass) {_		return true__	};subclasses,can,override,this,if,it,s,possible,to,filter,out,some,candidate,classes;override,public,boolean,matches,method,method,class,target,class,return,true
ControlFlowPointcut -> @Override 	public boolean matches(Method method, Class<?> targetClass);1549318940;Subclasses can override this if it's possible to filter out_some candidate classes.;@Override_	public boolean matches(Method method, Class<?> targetClass) {_		return true__	};subclasses,can,override,this,if,it,s,possible,to,filter,out,some,candidate,classes;override,public,boolean,matches,method,method,class,target,class,return,true
ControlFlowPointcut -> @Override 	public boolean matches(Method method, Class<?> targetClass);1549321822;Subclasses can override this if it's possible to filter out some candidate classes.;@Override_	public boolean matches(Method method, Class<?> targetClass) {_		return true__	};subclasses,can,override,this,if,it,s,possible,to,filter,out,some,candidate,classes;override,public,boolean,matches,method,method,class,target,class,return,true
ControlFlowPointcut -> public boolean matches(Class clazz);1328020251;Subclasses can override this for greater filtering (and performance).;public boolean matches(Class clazz) {_		return true__	};subclasses,can,override,this,for,greater,filtering,and,performance;public,boolean,matches,class,clazz,return,true
ControlFlowPointcut -> public boolean matches(Class clazz);1357119239;Subclasses can override this for greater filtering (and performance).;public boolean matches(Class clazz) {_		return true__	};subclasses,can,override,this,for,greater,filtering,and,performance;public,boolean,matches,class,clazz,return,true
ControlFlowPointcut -> public ControlFlowPointcut(Class<?> clazz, String methodName);1385412762;Construct a new pointcut that matches all calls below the_given method in the given class. If the method name is null,_matches all control flows below that class._@param clazz the clazz_@param methodName the name of the method;public ControlFlowPointcut(Class<?> clazz, String methodName) {_		Assert.notNull(clazz, "Class must not be null")__		this.clazz = clazz__		this.methodName = methodName__	};construct,a,new,pointcut,that,matches,all,calls,below,the,given,method,in,the,given,class,if,the,method,name,is,null,matches,all,control,flows,below,that,class,param,clazz,the,clazz,param,method,name,the,name,of,the,method;public,control,flow,pointcut,class,clazz,string,method,name,assert,not,null,clazz,class,must,not,be,null,this,clazz,clazz,this,method,name,method,name
ControlFlowPointcut -> public ControlFlowPointcut(Class<?> clazz, String methodName);1450827071;Construct a new pointcut that matches all calls below the_given method in the given class. If the method name is null,_matches all control flows below that class._@param clazz the clazz_@param methodName the name of the method;public ControlFlowPointcut(Class<?> clazz, String methodName) {_		Assert.notNull(clazz, "Class must not be null")__		this.clazz = clazz__		this.methodName = methodName__	};construct,a,new,pointcut,that,matches,all,calls,below,the,given,method,in,the,given,class,if,the,method,name,is,null,matches,all,control,flows,below,that,class,param,clazz,the,clazz,param,method,name,the,name,of,the,method;public,control,flow,pointcut,class,clazz,string,method,name,assert,not,null,clazz,class,must,not,be,null,this,clazz,clazz,this,method,name,method,name
ControlFlowPointcut -> public ControlFlowPointcut(Class<?> clazz, String methodName);1485175315;Construct a new pointcut that matches all calls below the given method_in the given class. If no method name is given, matches all control flows_below the given class._@param clazz the clazz_@param methodName the name of the method (may be {@code null});public ControlFlowPointcut(Class<?> clazz, String methodName) {_		Assert.notNull(clazz, "Class must not be null")__		this.clazz = clazz__		this.methodName = methodName__	};construct,a,new,pointcut,that,matches,all,calls,below,the,given,method,in,the,given,class,if,no,method,name,is,given,matches,all,control,flows,below,the,given,class,param,clazz,the,clazz,param,method,name,the,name,of,the,method,may,be,code,null;public,control,flow,pointcut,class,clazz,string,method,name,assert,not,null,clazz,class,must,not,be,null,this,clazz,clazz,this,method,name,method,name
ControlFlowPointcut -> @Override 	public boolean matches(Class<?> clazz);1385412762;Subclasses can override this for greater filtering (and performance).;@Override_	public boolean matches(Class<?> clazz) {_		return true__	};subclasses,can,override,this,for,greater,filtering,and,performance;override,public,boolean,matches,class,clazz,return,true
ControlFlowPointcut -> @Override 	public boolean matches(Class<?> clazz);1450827071;Subclasses can override this for greater filtering (and performance).;@Override_	public boolean matches(Class<?> clazz) {_		return true__	};subclasses,can,override,this,for,greater,filtering,and,performance;override,public,boolean,matches,class,clazz,return,true
ControlFlowPointcut -> @Override 	public boolean matches(Class<?> clazz);1485175315;Subclasses can override this for greater filtering (and performance).;@Override_	public boolean matches(Class<?> clazz) {_		return true__	};subclasses,can,override,this,for,greater,filtering,and,performance;override,public,boolean,matches,class,clazz,return,true
ControlFlowPointcut -> @Override 	public boolean matches(Class<?> clazz);1495868221;Subclasses can override this for greater filtering (and performance).;@Override_	public boolean matches(Class<?> clazz) {_		return true__	};subclasses,can,override,this,for,greater,filtering,and,performance;override,public,boolean,matches,class,clazz,return,true
ControlFlowPointcut -> @Override 	public boolean matches(Class<?> clazz);1496242568;Subclasses can override this for greater filtering (and performance).;@Override_	public boolean matches(Class<?> clazz) {_		return true__	};subclasses,can,override,this,for,greater,filtering,and,performance;override,public,boolean,matches,class,clazz,return,true
ControlFlowPointcut -> @Override 	public boolean matches(Class<?> clazz);1498780456;Subclasses can override this for greater filtering (and performance).;@Override_	public boolean matches(Class<?> clazz) {_		return true__	};subclasses,can,override,this,for,greater,filtering,and,performance;override,public,boolean,matches,class,clazz,return,true
ControlFlowPointcut -> @Override 	public boolean matches(Class<?> clazz);1530190293;Subclasses can override this for greater filtering (and performance).;@Override_	public boolean matches(Class<?> clazz) {_		return true__	};subclasses,can,override,this,for,greater,filtering,and,performance;override,public,boolean,matches,class,clazz,return,true
ControlFlowPointcut -> @Override 	public boolean matches(Class<?> clazz);1532038651;Subclasses can override this for greater filtering (and performance).;@Override_	public boolean matches(Class<?> clazz) {_		return true__	};subclasses,can,override,this,for,greater,filtering,and,performance;override,public,boolean,matches,class,clazz,return,true
ControlFlowPointcut -> @Override 	public boolean matches(Class<?> clazz);1549318940;Subclasses can override this for greater filtering (and performance).;@Override_	public boolean matches(Class<?> clazz) {_		return true__	};subclasses,can,override,this,for,greater,filtering,and,performance;override,public,boolean,matches,class,clazz,return,true
ControlFlowPointcut -> @Override 	public boolean matches(Class<?> clazz);1549321822;Subclasses can override this for greater filtering (and performance).;@Override_	public boolean matches(Class<?> clazz) {_		return true__	};subclasses,can,override,this,for,greater,filtering,and,performance;override,public,boolean,matches,class,clazz,return,true
ControlFlowPointcut -> public int getEvaluations();1328020251;It's useful to know how many times we've fired, for optimization.;public int getEvaluations() {_		return evaluations__	};it,s,useful,to,know,how,many,times,we,ve,fired,for,optimization;public,int,get,evaluations,return,evaluations
ControlFlowPointcut -> public int getEvaluations();1356735495;It's useful to know how many times we've fired, for optimization.;public int getEvaluations() {_		return evaluations__	};it,s,useful,to,know,how,many,times,we,ve,fired,for,optimization;public,int,get,evaluations,return,evaluations
ControlFlowPointcut -> public int getEvaluations();1357119239;It's useful to know how many times we've fired, for optimization.;public int getEvaluations() {_		return evaluations__	};it,s,useful,to,know,how,many,times,we,ve,fired,for,optimization;public,int,get,evaluations,return,evaluations
ControlFlowPointcut -> public int getEvaluations();1368482696;It's useful to know how many times we've fired, for optimization.;public int getEvaluations() {_		return evaluations__	};it,s,useful,to,know,how,many,times,we,ve,fired,for,optimization;public,int,get,evaluations,return,evaluations
ControlFlowPointcut -> public int getEvaluations();1385412762;It's useful to know how many times we've fired, for optimization.;public int getEvaluations() {_		return evaluations__	};it,s,useful,to,know,how,many,times,we,ve,fired,for,optimization;public,int,get,evaluations,return,evaluations
ControlFlowPointcut -> public int getEvaluations();1450827071;It's useful to know how many times we've fired, for optimization.;public int getEvaluations() {_		return this.evaluations__	};it,s,useful,to,know,how,many,times,we,ve,fired,for,optimization;public,int,get,evaluations,return,this,evaluations
ControlFlowPointcut -> public int getEvaluations();1485175315;It's useful to know how many times we've fired, for optimization.;public int getEvaluations() {_		return this.evaluations__	};it,s,useful,to,know,how,many,times,we,ve,fired,for,optimization;public,int,get,evaluations,return,this,evaluations
ControlFlowPointcut -> public int getEvaluations();1495868221;It's useful to know how many times we've fired, for optimization.;public int getEvaluations() {_		return this.evaluations__	};it,s,useful,to,know,how,many,times,we,ve,fired,for,optimization;public,int,get,evaluations,return,this,evaluations
ControlFlowPointcut -> public int getEvaluations();1496242568;It's useful to know how many times we've fired, for optimization.;public int getEvaluations() {_		return this.evaluations__	};it,s,useful,to,know,how,many,times,we,ve,fired,for,optimization;public,int,get,evaluations,return,this,evaluations
ControlFlowPointcut -> public int getEvaluations();1498780456;It's useful to know how many times we've fired, for optimization.;public int getEvaluations() {_		return this.evaluations__	};it,s,useful,to,know,how,many,times,we,ve,fired,for,optimization;public,int,get,evaluations,return,this,evaluations
ControlFlowPointcut -> public int getEvaluations();1530190293;It's useful to know how many times we've fired, for optimization.;public int getEvaluations() {_		return this.evaluations__	};it,s,useful,to,know,how,many,times,we,ve,fired,for,optimization;public,int,get,evaluations,return,this,evaluations
ControlFlowPointcut -> public int getEvaluations();1532038651;It's useful to know how many times we've fired, for optimization.;public int getEvaluations() {_		return this.evaluations__	};it,s,useful,to,know,how,many,times,we,ve,fired,for,optimization;public,int,get,evaluations,return,this,evaluations
ControlFlowPointcut -> public int getEvaluations();1549318940;It's useful to know how many times we've fired, for optimization.;public int getEvaluations() {_		return this.evaluations.get()__	};it,s,useful,to,know,how,many,times,we,ve,fired,for,optimization;public,int,get,evaluations,return,this,evaluations,get
ControlFlowPointcut -> public int getEvaluations();1549321822;It's useful to know how many times we've fired, for optimization.;public int getEvaluations() {_		return this.evaluations.get()__	};it,s,useful,to,know,how,many,times,we,ve,fired,for,optimization;public,int,get,evaluations,return,this,evaluations,get
ControlFlowPointcut -> public ControlFlowPointcut(Class<?> clazz);1385412762;Construct a new pointcut that matches all control flows below that class._@param clazz the clazz;public ControlFlowPointcut(Class<?> clazz) {_		this(clazz, null)__	};construct,a,new,pointcut,that,matches,all,control,flows,below,that,class,param,clazz,the,clazz;public,control,flow,pointcut,class,clazz,this,clazz,null
ControlFlowPointcut -> public ControlFlowPointcut(Class<?> clazz);1450827071;Construct a new pointcut that matches all control flows below that class._@param clazz the clazz;public ControlFlowPointcut(Class<?> clazz) {_		this(clazz, null)__	};construct,a,new,pointcut,that,matches,all,control,flows,below,that,class,param,clazz,the,clazz;public,control,flow,pointcut,class,clazz,this,clazz,null
ControlFlowPointcut -> public ControlFlowPointcut(Class<?> clazz);1485175315;Construct a new pointcut that matches all control flows below that class._@param clazz the clazz;public ControlFlowPointcut(Class<?> clazz) {_		this(clazz, null)__	};construct,a,new,pointcut,that,matches,all,control,flows,below,that,class,param,clazz,the,clazz;public,control,flow,pointcut,class,clazz,this,clazz,null
ControlFlowPointcut -> public ControlFlowPointcut(Class<?> clazz);1495868221;Construct a new pointcut that matches all control flows below that class._@param clazz the clazz;public ControlFlowPointcut(Class<?> clazz) {_		this(clazz, null)__	};construct,a,new,pointcut,that,matches,all,control,flows,below,that,class,param,clazz,the,clazz;public,control,flow,pointcut,class,clazz,this,clazz,null
ControlFlowPointcut -> public ControlFlowPointcut(Class<?> clazz);1496242568;Construct a new pointcut that matches all control flows below that class._@param clazz the clazz;public ControlFlowPointcut(Class<?> clazz) {_		this(clazz, null)__	};construct,a,new,pointcut,that,matches,all,control,flows,below,that,class,param,clazz,the,clazz;public,control,flow,pointcut,class,clazz,this,clazz,null
ControlFlowPointcut -> public ControlFlowPointcut(Class<?> clazz);1498780456;Construct a new pointcut that matches all control flows below that class._@param clazz the clazz;public ControlFlowPointcut(Class<?> clazz) {_		this(clazz, null)__	};construct,a,new,pointcut,that,matches,all,control,flows,below,that,class,param,clazz,the,clazz;public,control,flow,pointcut,class,clazz,this,clazz,null
ControlFlowPointcut -> public ControlFlowPointcut(Class<?> clazz);1530190293;Construct a new pointcut that matches all control flows below that class._@param clazz the clazz;public ControlFlowPointcut(Class<?> clazz) {_		this(clazz, null)__	};construct,a,new,pointcut,that,matches,all,control,flows,below,that,class,param,clazz,the,clazz;public,control,flow,pointcut,class,clazz,this,clazz,null
ControlFlowPointcut -> public ControlFlowPointcut(Class<?> clazz);1532038651;Construct a new pointcut that matches all control flows below that class._@param clazz the clazz;public ControlFlowPointcut(Class<?> clazz) {_		this(clazz, null)__	};construct,a,new,pointcut,that,matches,all,control,flows,below,that,class,param,clazz,the,clazz;public,control,flow,pointcut,class,clazz,this,clazz,null
ControlFlowPointcut -> public ControlFlowPointcut(Class<?> clazz);1549318940;Construct a new pointcut that matches all control flows below that class._@param clazz the clazz;public ControlFlowPointcut(Class<?> clazz) {_		this(clazz, null)__	};construct,a,new,pointcut,that,matches,all,control,flows,below,that,class,param,clazz,the,clazz;public,control,flow,pointcut,class,clazz,this,clazz,null
ControlFlowPointcut -> public ControlFlowPointcut(Class<?> clazz);1549321822;Construct a new pointcut that matches all control flows below that class._@param clazz the clazz;public ControlFlowPointcut(Class<?> clazz) {_		this(clazz, null)__	};construct,a,new,pointcut,that,matches,all,control,flows,below,that,class,param,clazz,the,clazz;public,control,flow,pointcut,class,clazz,this,clazz,null
ControlFlowPointcut -> @Override 	public boolean matches(Class clazz);1356735495;Subclasses can override this for greater filtering (and performance).;@Override_	public boolean matches(Class clazz) {_		return true__	};subclasses,can,override,this,for,greater,filtering,and,performance;override,public,boolean,matches,class,clazz,return,true
ControlFlowPointcut -> @Override 	public boolean matches(Class clazz);1368482696;Subclasses can override this for greater filtering (and performance).;@Override_	public boolean matches(Class clazz) {_		return true__	};subclasses,can,override,this,for,greater,filtering,and,performance;override,public,boolean,matches,class,clazz,return,true
ControlFlowPointcut -> public ControlFlowPointcut(Class clazz, String methodName);1328020251;Construct a new pointcut that matches all calls below the_given method in the given class. If the method name is null,_matches all control flows below that class._@param clazz the clazz_@param methodName the name of the method;public ControlFlowPointcut(Class clazz, String methodName) {_		Assert.notNull(clazz, "Class must not be null")__		this.clazz = clazz__		this.methodName = methodName__	};construct,a,new,pointcut,that,matches,all,calls,below,the,given,method,in,the,given,class,if,the,method,name,is,null,matches,all,control,flows,below,that,class,param,clazz,the,clazz,param,method,name,the,name,of,the,method;public,control,flow,pointcut,class,clazz,string,method,name,assert,not,null,clazz,class,must,not,be,null,this,clazz,clazz,this,method,name,method,name
ControlFlowPointcut -> public ControlFlowPointcut(Class clazz, String methodName);1356735495;Construct a new pointcut that matches all calls below the_given method in the given class. If the method name is null,_matches all control flows below that class._@param clazz the clazz_@param methodName the name of the method;public ControlFlowPointcut(Class clazz, String methodName) {_		Assert.notNull(clazz, "Class must not be null")__		this.clazz = clazz__		this.methodName = methodName__	};construct,a,new,pointcut,that,matches,all,calls,below,the,given,method,in,the,given,class,if,the,method,name,is,null,matches,all,control,flows,below,that,class,param,clazz,the,clazz,param,method,name,the,name,of,the,method;public,control,flow,pointcut,class,clazz,string,method,name,assert,not,null,clazz,class,must,not,be,null,this,clazz,clazz,this,method,name,method,name
ControlFlowPointcut -> public ControlFlowPointcut(Class clazz, String methodName);1357119239;Construct a new pointcut that matches all calls below the_given method in the given class. If the method name is null,_matches all control flows below that class._@param clazz the clazz_@param methodName the name of the method;public ControlFlowPointcut(Class clazz, String methodName) {_		Assert.notNull(clazz, "Class must not be null")__		this.clazz = clazz__		this.methodName = methodName__	};construct,a,new,pointcut,that,matches,all,calls,below,the,given,method,in,the,given,class,if,the,method,name,is,null,matches,all,control,flows,below,that,class,param,clazz,the,clazz,param,method,name,the,name,of,the,method;public,control,flow,pointcut,class,clazz,string,method,name,assert,not,null,clazz,class,must,not,be,null,this,clazz,clazz,this,method,name,method,name
ControlFlowPointcut -> public ControlFlowPointcut(Class clazz, String methodName);1368482696;Construct a new pointcut that matches all calls below the_given method in the given class. If the method name is null,_matches all control flows below that class._@param clazz the clazz_@param methodName the name of the method;public ControlFlowPointcut(Class clazz, String methodName) {_		Assert.notNull(clazz, "Class must not be null")__		this.clazz = clazz__		this.methodName = methodName__	};construct,a,new,pointcut,that,matches,all,calls,below,the,given,method,in,the,given,class,if,the,method,name,is,null,matches,all,control,flows,below,that,class,param,clazz,the,clazz,param,method,name,the,name,of,the,method;public,control,flow,pointcut,class,clazz,string,method,name,assert,not,null,clazz,class,must,not,be,null,this,clazz,clazz,this,method,name,method,name
ControlFlowPointcut -> public ControlFlowPointcut(Class<?> clazz, @Nullable String methodName);1495868221;Construct a new pointcut that matches all calls below the given method_in the given class. If no method name is given, matches all control flows_below the given class._@param clazz the clazz_@param methodName the name of the method (may be {@code null});public ControlFlowPointcut(Class<?> clazz, @Nullable String methodName) {_		Assert.notNull(clazz, "Class must not be null")__		this.clazz = clazz__		this.methodName = methodName__	};construct,a,new,pointcut,that,matches,all,calls,below,the,given,method,in,the,given,class,if,no,method,name,is,given,matches,all,control,flows,below,the,given,class,param,clazz,the,clazz,param,method,name,the,name,of,the,method,may,be,code,null;public,control,flow,pointcut,class,clazz,nullable,string,method,name,assert,not,null,clazz,class,must,not,be,null,this,clazz,clazz,this,method,name,method,name
ControlFlowPointcut -> public ControlFlowPointcut(Class<?> clazz, @Nullable String methodName);1496242568;Construct a new pointcut that matches all calls below the given method_in the given class. If no method name is given, matches all control flows_below the given class._@param clazz the clazz_@param methodName the name of the method (may be {@code null});public ControlFlowPointcut(Class<?> clazz, @Nullable String methodName) {_		Assert.notNull(clazz, "Class must not be null")__		this.clazz = clazz__		this.methodName = methodName__	};construct,a,new,pointcut,that,matches,all,calls,below,the,given,method,in,the,given,class,if,no,method,name,is,given,matches,all,control,flows,below,the,given,class,param,clazz,the,clazz,param,method,name,the,name,of,the,method,may,be,code,null;public,control,flow,pointcut,class,clazz,nullable,string,method,name,assert,not,null,clazz,class,must,not,be,null,this,clazz,clazz,this,method,name,method,name
ControlFlowPointcut -> public ControlFlowPointcut(Class<?> clazz, @Nullable String methodName);1498780456;Construct a new pointcut that matches all calls below the given method_in the given class. If no method name is given, matches all control flows_below the given class._@param clazz the clazz_@param methodName the name of the method (may be {@code null});public ControlFlowPointcut(Class<?> clazz, @Nullable String methodName) {_		Assert.notNull(clazz, "Class must not be null")__		this.clazz = clazz__		this.methodName = methodName__	};construct,a,new,pointcut,that,matches,all,calls,below,the,given,method,in,the,given,class,if,no,method,name,is,given,matches,all,control,flows,below,the,given,class,param,clazz,the,clazz,param,method,name,the,name,of,the,method,may,be,code,null;public,control,flow,pointcut,class,clazz,nullable,string,method,name,assert,not,null,clazz,class,must,not,be,null,this,clazz,clazz,this,method,name,method,name
ControlFlowPointcut -> public ControlFlowPointcut(Class<?> clazz, @Nullable String methodName);1530190293;Construct a new pointcut that matches all calls below the given method_in the given class. If no method name is given, matches all control flows_below the given class._@param clazz the clazz_@param methodName the name of the method (may be {@code null});public ControlFlowPointcut(Class<?> clazz, @Nullable String methodName) {_		Assert.notNull(clazz, "Class must not be null")__		this.clazz = clazz__		this.methodName = methodName__	};construct,a,new,pointcut,that,matches,all,calls,below,the,given,method,in,the,given,class,if,no,method,name,is,given,matches,all,control,flows,below,the,given,class,param,clazz,the,clazz,param,method,name,the,name,of,the,method,may,be,code,null;public,control,flow,pointcut,class,clazz,nullable,string,method,name,assert,not,null,clazz,class,must,not,be,null,this,clazz,clazz,this,method,name,method,name
ControlFlowPointcut -> public ControlFlowPointcut(Class<?> clazz, @Nullable String methodName);1532038651;Construct a new pointcut that matches all calls below the given method_in the given class. If no method name is given, matches all control flows_below the given class._@param clazz the clazz_@param methodName the name of the method (may be {@code null});public ControlFlowPointcut(Class<?> clazz, @Nullable String methodName) {_		Assert.notNull(clazz, "Class must not be null")__		this.clazz = clazz__		this.methodName = methodName__	};construct,a,new,pointcut,that,matches,all,calls,below,the,given,method,in,the,given,class,if,no,method,name,is,given,matches,all,control,flows,below,the,given,class,param,clazz,the,clazz,param,method,name,the,name,of,the,method,may,be,code,null;public,control,flow,pointcut,class,clazz,nullable,string,method,name,assert,not,null,clazz,class,must,not,be,null,this,clazz,clazz,this,method,name,method,name
ControlFlowPointcut -> public ControlFlowPointcut(Class<?> clazz, @Nullable String methodName);1549318940;Construct a new pointcut that matches all calls below the given method_in the given class. If no method name is given, matches all control flows_below the given class._@param clazz the clazz_@param methodName the name of the method (may be {@code null});public ControlFlowPointcut(Class<?> clazz, @Nullable String methodName) {_		Assert.notNull(clazz, "Class must not be null")__		this.clazz = clazz__		this.methodName = methodName__	};construct,a,new,pointcut,that,matches,all,calls,below,the,given,method,in,the,given,class,if,no,method,name,is,given,matches,all,control,flows,below,the,given,class,param,clazz,the,clazz,param,method,name,the,name,of,the,method,may,be,code,null;public,control,flow,pointcut,class,clazz,nullable,string,method,name,assert,not,null,clazz,class,must,not,be,null,this,clazz,clazz,this,method,name,method,name
ControlFlowPointcut -> public ControlFlowPointcut(Class<?> clazz, @Nullable String methodName);1549321822;Construct a new pointcut that matches all calls below the given method_in the given class. If no method name is given, matches all control flows_below the given class._@param clazz the clazz_@param methodName the name of the method (may be {@code null});public ControlFlowPointcut(Class<?> clazz, @Nullable String methodName) {_		Assert.notNull(clazz, "Class must not be null")__		this.clazz = clazz__		this.methodName = methodName__	};construct,a,new,pointcut,that,matches,all,calls,below,the,given,method,in,the,given,class,if,no,method,name,is,given,matches,all,control,flows,below,the,given,class,param,clazz,the,clazz,param,method,name,the,name,of,the,method,may,be,code,null;public,control,flow,pointcut,class,clazz,nullable,string,method,name,assert,not,null,clazz,class,must,not,be,null,this,clazz,clazz,this,method,name,method,name
