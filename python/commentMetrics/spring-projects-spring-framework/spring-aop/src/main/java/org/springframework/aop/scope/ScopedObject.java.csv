commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Return the current target object behind this scoped object proxy,  * in its raw form (as stored in the target scope).  * <p>The raw target object can for example be passed to persistence  * providers which would not be able to handle the scoped proxy object.  * @return the current target object behind this scoped object proxy  */ ;/**  * Return the current target object behind this scoped object proxy,  * in its raw form (as stored in the target scope).  * <p>The raw target object can for example be passed to persistence  * providers which would not be able to handle the scoped proxy object.  * @return the current target object behind this scoped object proxy  */ Object getTargetObject().
true;;0;1;/**  * Remove this object from its target scope, for example from  * the backing session.  * <p>Note that no further calls may be made to the scoped object  * afterwards (at least within the current thread, that is, with  * the exact same target object in the target scope).  */ ;/**  * Remove this object from its target scope, for example from  * the backing session.  * <p>Note that no further calls may be made to the scoped object  * afterwards (at least within the current thread, that is, with  * the exact same target object in the target scope).  */ void removeFromScope().
