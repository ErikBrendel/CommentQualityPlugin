# id;timestamp;commentText;codeText;commentWords;codeWords
ProxyConfig -> public void setProxyTargetClass(boolean proxyTargetClass);1328020251;Set whether to proxy the target class directly, instead of just proxying_specific interfaces. Default is "false"._<p>Set this to "true" to force proxying for the TargetSource's exposed_target class. If that target class is an interface, a JDK proxy will be_created for the given interface. If that target class is any other class,_a CGLIB proxy will be created for the given class._<p>Note: Depending on the configuration of the concrete proxy factory,_the proxy-target-class behavior will also be applied if no interfaces_have been specified (and no interface autodetection is activated)._@see org.springframework.aop.TargetSource#getTargetClass();public void setProxyTargetClass(boolean proxyTargetClass) {_		this.proxyTargetClass = proxyTargetClass__	};set,whether,to,proxy,the,target,class,directly,instead,of,just,proxying,specific,interfaces,default,is,false,p,set,this,to,true,to,force,proxying,for,the,target,source,s,exposed,target,class,if,that,target,class,is,an,interface,a,jdk,proxy,will,be,created,for,the,given,interface,if,that,target,class,is,any,other,class,a,cglib,proxy,will,be,created,for,the,given,class,p,note,depending,on,the,configuration,of,the,concrete,proxy,factory,the,proxy,target,class,behavior,will,also,be,applied,if,no,interfaces,have,been,specified,and,no,interface,autodetection,is,activated,see,org,springframework,aop,target,source,get,target,class;public,void,set,proxy,target,class,boolean,proxy,target,class,this,proxy,target,class,proxy,target,class
ProxyConfig -> public void setProxyTargetClass(boolean proxyTargetClass);1356735495;Set whether to proxy the target class directly, instead of just proxying_specific interfaces. Default is "false"._<p>Set this to "true" to force proxying for the TargetSource's exposed_target class. If that target class is an interface, a JDK proxy will be_created for the given interface. If that target class is any other class,_a CGLIB proxy will be created for the given class._<p>Note: Depending on the configuration of the concrete proxy factory,_the proxy-target-class behavior will also be applied if no interfaces_have been specified (and no interface autodetection is activated)._@see org.springframework.aop.TargetSource#getTargetClass();public void setProxyTargetClass(boolean proxyTargetClass) {_		this.proxyTargetClass = proxyTargetClass__	};set,whether,to,proxy,the,target,class,directly,instead,of,just,proxying,specific,interfaces,default,is,false,p,set,this,to,true,to,force,proxying,for,the,target,source,s,exposed,target,class,if,that,target,class,is,an,interface,a,jdk,proxy,will,be,created,for,the,given,interface,if,that,target,class,is,any,other,class,a,cglib,proxy,will,be,created,for,the,given,class,p,note,depending,on,the,configuration,of,the,concrete,proxy,factory,the,proxy,target,class,behavior,will,also,be,applied,if,no,interfaces,have,been,specified,and,no,interface,autodetection,is,activated,see,org,springframework,aop,target,source,get,target,class;public,void,set,proxy,target,class,boolean,proxy,target,class,this,proxy,target,class,proxy,target,class
ProxyConfig -> public void setProxyTargetClass(boolean proxyTargetClass);1530174524;Set whether to proxy the target class directly, instead of just proxying_specific interfaces. Default is "false"._<p>Set this to "true" to force proxying for the TargetSource's exposed_target class. If that target class is an interface, a JDK proxy will be_created for the given interface. If that target class is any other class,_a CGLIB proxy will be created for the given class._<p>Note: Depending on the configuration of the concrete proxy factory,_the proxy-target-class behavior will also be applied if no interfaces_have been specified (and no interface autodetection is activated)._@see org.springframework.aop.TargetSource#getTargetClass();public void setProxyTargetClass(boolean proxyTargetClass) {_		this.proxyTargetClass = proxyTargetClass__	};set,whether,to,proxy,the,target,class,directly,instead,of,just,proxying,specific,interfaces,default,is,false,p,set,this,to,true,to,force,proxying,for,the,target,source,s,exposed,target,class,if,that,target,class,is,an,interface,a,jdk,proxy,will,be,created,for,the,given,interface,if,that,target,class,is,any,other,class,a,cglib,proxy,will,be,created,for,the,given,class,p,note,depending,on,the,configuration,of,the,concrete,proxy,factory,the,proxy,target,class,behavior,will,also,be,applied,if,no,interfaces,have,been,specified,and,no,interface,autodetection,is,activated,see,org,springframework,aop,target,source,get,target,class;public,void,set,proxy,target,class,boolean,proxy,target,class,this,proxy,target,class,proxy,target,class
ProxyConfig -> public void setOptimize(boolean optimize);1328020251;Set whether proxies should perform aggressive optimizations._The exact meaning of "aggressive optimizations" will differ_between proxies, but there is usually some tradeoff._Default is "false"._<p>For example, optimization will usually mean that advice changes won't_take effect after a proxy has been created. For this reason, optimization_is disabled by default. An optimize value of "true" may be ignored_if other settings preclude optimization: for example, if "exposeProxy"_is set to "true" and that's not compatible with the optimization.;public void setOptimize(boolean optimize) {_		this.optimize = optimize__	};set,whether,proxies,should,perform,aggressive,optimizations,the,exact,meaning,of,aggressive,optimizations,will,differ,between,proxies,but,there,is,usually,some,tradeoff,default,is,false,p,for,example,optimization,will,usually,mean,that,advice,changes,won,t,take,effect,after,a,proxy,has,been,created,for,this,reason,optimization,is,disabled,by,default,an,optimize,value,of,true,may,be,ignored,if,other,settings,preclude,optimization,for,example,if,expose,proxy,is,set,to,true,and,that,s,not,compatible,with,the,optimization;public,void,set,optimize,boolean,optimize,this,optimize,optimize
ProxyConfig -> public void setOptimize(boolean optimize);1356735495;Set whether proxies should perform aggressive optimizations._The exact meaning of "aggressive optimizations" will differ_between proxies, but there is usually some tradeoff._Default is "false"._<p>For example, optimization will usually mean that advice changes won't_take effect after a proxy has been created. For this reason, optimization_is disabled by default. An optimize value of "true" may be ignored_if other settings preclude optimization: for example, if "exposeProxy"_is set to "true" and that's not compatible with the optimization.;public void setOptimize(boolean optimize) {_		this.optimize = optimize__	};set,whether,proxies,should,perform,aggressive,optimizations,the,exact,meaning,of,aggressive,optimizations,will,differ,between,proxies,but,there,is,usually,some,tradeoff,default,is,false,p,for,example,optimization,will,usually,mean,that,advice,changes,won,t,take,effect,after,a,proxy,has,been,created,for,this,reason,optimization,is,disabled,by,default,an,optimize,value,of,true,may,be,ignored,if,other,settings,preclude,optimization,for,example,if,expose,proxy,is,set,to,true,and,that,s,not,compatible,with,the,optimization;public,void,set,optimize,boolean,optimize,this,optimize,optimize
ProxyConfig -> public void setOptimize(boolean optimize);1530174524;Set whether proxies should perform aggressive optimizations._The exact meaning of "aggressive optimizations" will differ_between proxies, but there is usually some tradeoff._Default is "false"._<p>For example, optimization will usually mean that advice changes won't_take effect after a proxy has been created. For this reason, optimization_is disabled by default. An optimize value of "true" may be ignored_if other settings preclude optimization: for example, if "exposeProxy"_is set to "true" and that's not compatible with the optimization.;public void setOptimize(boolean optimize) {_		this.optimize = optimize__	};set,whether,proxies,should,perform,aggressive,optimizations,the,exact,meaning,of,aggressive,optimizations,will,differ,between,proxies,but,there,is,usually,some,tradeoff,default,is,false,p,for,example,optimization,will,usually,mean,that,advice,changes,won,t,take,effect,after,a,proxy,has,been,created,for,this,reason,optimization,is,disabled,by,default,an,optimize,value,of,true,may,be,ignored,if,other,settings,preclude,optimization,for,example,if,expose,proxy,is,set,to,true,and,that,s,not,compatible,with,the,optimization;public,void,set,optimize,boolean,optimize,this,optimize,optimize
ProxyConfig -> public boolean isProxyTargetClass();1328020251;Return whether to proxy the target class directly as well as any interfaces.;public boolean isProxyTargetClass() {_		return this.proxyTargetClass__	};return,whether,to,proxy,the,target,class,directly,as,well,as,any,interfaces;public,boolean,is,proxy,target,class,return,this,proxy,target,class
ProxyConfig -> public boolean isProxyTargetClass();1356735495;Return whether to proxy the target class directly as well as any interfaces.;public boolean isProxyTargetClass() {_		return this.proxyTargetClass__	};return,whether,to,proxy,the,target,class,directly,as,well,as,any,interfaces;public,boolean,is,proxy,target,class,return,this,proxy,target,class
ProxyConfig -> public boolean isProxyTargetClass();1530174524;Return whether to proxy the target class directly as well as any interfaces.;public boolean isProxyTargetClass() {_		return this.proxyTargetClass__	};return,whether,to,proxy,the,target,class,directly,as,well,as,any,interfaces;public,boolean,is,proxy,target,class,return,this,proxy,target,class
ProxyConfig -> public void setOpaque(boolean opaque);1328020251;Set whether proxies created by this configuration should be prevented_from being cast to {@link Advised} to query proxy status._<p>Default is "false", meaning that any AOP proxy can be cast to_{@link Advised}.;public void setOpaque(boolean opaque) {_		this.opaque = opaque__	};set,whether,proxies,created,by,this,configuration,should,be,prevented,from,being,cast,to,link,advised,to,query,proxy,status,p,default,is,false,meaning,that,any,aop,proxy,can,be,cast,to,link,advised;public,void,set,opaque,boolean,opaque,this,opaque,opaque
ProxyConfig -> public void setOpaque(boolean opaque);1356735495;Set whether proxies created by this configuration should be prevented_from being cast to {@link Advised} to query proxy status._<p>Default is "false", meaning that any AOP proxy can be cast to_{@link Advised}.;public void setOpaque(boolean opaque) {_		this.opaque = opaque__	};set,whether,proxies,created,by,this,configuration,should,be,prevented,from,being,cast,to,link,advised,to,query,proxy,status,p,default,is,false,meaning,that,any,aop,proxy,can,be,cast,to,link,advised;public,void,set,opaque,boolean,opaque,this,opaque,opaque
ProxyConfig -> public void setOpaque(boolean opaque);1530174524;Set whether proxies created by this configuration should be prevented_from being cast to {@link Advised} to query proxy status._<p>Default is "false", meaning that any AOP proxy can be cast to_{@link Advised}.;public void setOpaque(boolean opaque) {_		this.opaque = opaque__	};set,whether,proxies,created,by,this,configuration,should,be,prevented,from,being,cast,to,link,advised,to,query,proxy,status,p,default,is,false,meaning,that,any,aop,proxy,can,be,cast,to,link,advised;public,void,set,opaque,boolean,opaque,this,opaque,opaque
ProxyConfig -> public void setExposeProxy(boolean exposeProxy);1328020251;Set whether the proxy should be exposed by the AOP framework as a_ThreadLocal for retrieval via the AopContext class. This is useful_if an advised object needs to call another advised method on itself._(If it uses <code>this</code>, the invocation will not be advised)._<p>Default is "false", in order to avoid unnecessary extra interception._This means that no guarantees are provided that AopContext access will_work consistently within any method of the advised object.;public void setExposeProxy(boolean exposeProxy) {_		this.exposeProxy = exposeProxy__	};set,whether,the,proxy,should,be,exposed,by,the,aop,framework,as,a,thread,local,for,retrieval,via,the,aop,context,class,this,is,useful,if,an,advised,object,needs,to,call,another,advised,method,on,itself,if,it,uses,code,this,code,the,invocation,will,not,be,advised,p,default,is,false,in,order,to,avoid,unnecessary,extra,interception,this,means,that,no,guarantees,are,provided,that,aop,context,access,will,work,consistently,within,any,method,of,the,advised,object;public,void,set,expose,proxy,boolean,expose,proxy,this,expose,proxy,expose,proxy
ProxyConfig -> public void setExposeProxy(boolean exposeProxy);1356735495;Set whether the proxy should be exposed by the AOP framework as a_ThreadLocal for retrieval via the AopContext class. This is useful_if an advised object needs to call another advised method on itself._(If it uses {@code this}, the invocation will not be advised)._<p>Default is "false", in order to avoid unnecessary extra interception._This means that no guarantees are provided that AopContext access will_work consistently within any method of the advised object.;public void setExposeProxy(boolean exposeProxy) {_		this.exposeProxy = exposeProxy__	};set,whether,the,proxy,should,be,exposed,by,the,aop,framework,as,a,thread,local,for,retrieval,via,the,aop,context,class,this,is,useful,if,an,advised,object,needs,to,call,another,advised,method,on,itself,if,it,uses,code,this,the,invocation,will,not,be,advised,p,default,is,false,in,order,to,avoid,unnecessary,extra,interception,this,means,that,no,guarantees,are,provided,that,aop,context,access,will,work,consistently,within,any,method,of,the,advised,object;public,void,set,expose,proxy,boolean,expose,proxy,this,expose,proxy,expose,proxy
ProxyConfig -> public void setExposeProxy(boolean exposeProxy);1530174524;Set whether the proxy should be exposed by the AOP framework as a_ThreadLocal for retrieval via the AopContext class. This is useful_if an advised object needs to call another advised method on itself._(If it uses {@code this}, the invocation will not be advised)._<p>Default is "false", in order to avoid unnecessary extra interception._This means that no guarantees are provided that AopContext access will_work consistently within any method of the advised object.;public void setExposeProxy(boolean exposeProxy) {_		this.exposeProxy = exposeProxy__	};set,whether,the,proxy,should,be,exposed,by,the,aop,framework,as,a,thread,local,for,retrieval,via,the,aop,context,class,this,is,useful,if,an,advised,object,needs,to,call,another,advised,method,on,itself,if,it,uses,code,this,the,invocation,will,not,be,advised,p,default,is,false,in,order,to,avoid,unnecessary,extra,interception,this,means,that,no,guarantees,are,provided,that,aop,context,access,will,work,consistently,within,any,method,of,the,advised,object;public,void,set,expose,proxy,boolean,expose,proxy,this,expose,proxy,expose,proxy
ProxyConfig -> public void copyFrom(ProxyConfig other);1328020251;Copy configuration from the other config object._@param other object to copy configuration from;public void copyFrom(ProxyConfig other) {_		Assert.notNull(other, "Other ProxyConfig object must not be null")__		this.proxyTargetClass = other.proxyTargetClass__		this.optimize = other.optimize__		this.exposeProxy = other.exposeProxy__		this.frozen = other.frozen__		this.opaque = other.opaque__	};copy,configuration,from,the,other,config,object,param,other,object,to,copy,configuration,from;public,void,copy,from,proxy,config,other,assert,not,null,other,other,proxy,config,object,must,not,be,null,this,proxy,target,class,other,proxy,target,class,this,optimize,other,optimize,this,expose,proxy,other,expose,proxy,this,frozen,other,frozen,this,opaque,other,opaque
ProxyConfig -> public void copyFrom(ProxyConfig other);1356735495;Copy configuration from the other config object._@param other object to copy configuration from;public void copyFrom(ProxyConfig other) {_		Assert.notNull(other, "Other ProxyConfig object must not be null")__		this.proxyTargetClass = other.proxyTargetClass__		this.optimize = other.optimize__		this.exposeProxy = other.exposeProxy__		this.frozen = other.frozen__		this.opaque = other.opaque__	};copy,configuration,from,the,other,config,object,param,other,object,to,copy,configuration,from;public,void,copy,from,proxy,config,other,assert,not,null,other,other,proxy,config,object,must,not,be,null,this,proxy,target,class,other,proxy,target,class,this,optimize,other,optimize,this,expose,proxy,other,expose,proxy,this,frozen,other,frozen,this,opaque,other,opaque
ProxyConfig -> public void copyFrom(ProxyConfig other);1530174524;Copy configuration from the other config object._@param other object to copy configuration from;public void copyFrom(ProxyConfig other) {_		Assert.notNull(other, "Other ProxyConfig object must not be null")__		this.proxyTargetClass = other.proxyTargetClass__		this.optimize = other.optimize__		this.exposeProxy = other.exposeProxy__		this.frozen = other.frozen__		this.opaque = other.opaque__	};copy,configuration,from,the,other,config,object,param,other,object,to,copy,configuration,from;public,void,copy,from,proxy,config,other,assert,not,null,other,other,proxy,config,object,must,not,be,null,this,proxy,target,class,other,proxy,target,class,this,optimize,other,optimize,this,expose,proxy,other,expose,proxy,this,frozen,other,frozen,this,opaque,other,opaque
ProxyConfig -> public boolean isOpaque();1328020251;Return whether proxies created by this configuration should be_prevented from being cast to {@link Advised}.;public boolean isOpaque() {_		return this.opaque__	};return,whether,proxies,created,by,this,configuration,should,be,prevented,from,being,cast,to,link,advised;public,boolean,is,opaque,return,this,opaque
ProxyConfig -> public boolean isOpaque();1356735495;Return whether proxies created by this configuration should be_prevented from being cast to {@link Advised}.;public boolean isOpaque() {_		return this.opaque__	};return,whether,proxies,created,by,this,configuration,should,be,prevented,from,being,cast,to,link,advised;public,boolean,is,opaque,return,this,opaque
ProxyConfig -> public boolean isOpaque();1530174524;Return whether proxies created by this configuration should be_prevented from being cast to {@link Advised}.;public boolean isOpaque() {_		return this.opaque__	};return,whether,proxies,created,by,this,configuration,should,be,prevented,from,being,cast,to,link,advised;public,boolean,is,opaque,return,this,opaque
ProxyConfig -> public boolean isExposeProxy();1328020251;Return whether the AOP proxy will expose the AOP proxy for_each invocation.;public boolean isExposeProxy() {_		return this.exposeProxy__	};return,whether,the,aop,proxy,will,expose,the,aop,proxy,for,each,invocation;public,boolean,is,expose,proxy,return,this,expose,proxy
ProxyConfig -> public boolean isExposeProxy();1356735495;Return whether the AOP proxy will expose the AOP proxy for_each invocation.;public boolean isExposeProxy() {_		return this.exposeProxy__	};return,whether,the,aop,proxy,will,expose,the,aop,proxy,for,each,invocation;public,boolean,is,expose,proxy,return,this,expose,proxy
ProxyConfig -> public boolean isExposeProxy();1530174524;Return whether the AOP proxy will expose the AOP proxy for_each invocation.;public boolean isExposeProxy() {_		return this.exposeProxy__	};return,whether,the,aop,proxy,will,expose,the,aop,proxy,for,each,invocation;public,boolean,is,expose,proxy,return,this,expose,proxy
ProxyConfig -> public void setFrozen(boolean frozen);1328020251;Set whether this config should be frozen._<p>When a config is frozen, no advice changes can be made. This is_useful for optimization, and useful when we don't want callers to_be able to manipulate configuration after casting to Advised.;public void setFrozen(boolean frozen) {_		this.frozen = frozen__	};set,whether,this,config,should,be,frozen,p,when,a,config,is,frozen,no,advice,changes,can,be,made,this,is,useful,for,optimization,and,useful,when,we,don,t,want,callers,to,be,able,to,manipulate,configuration,after,casting,to,advised;public,void,set,frozen,boolean,frozen,this,frozen,frozen
ProxyConfig -> public void setFrozen(boolean frozen);1356735495;Set whether this config should be frozen._<p>When a config is frozen, no advice changes can be made. This is_useful for optimization, and useful when we don't want callers to_be able to manipulate configuration after casting to Advised.;public void setFrozen(boolean frozen) {_		this.frozen = frozen__	};set,whether,this,config,should,be,frozen,p,when,a,config,is,frozen,no,advice,changes,can,be,made,this,is,useful,for,optimization,and,useful,when,we,don,t,want,callers,to,be,able,to,manipulate,configuration,after,casting,to,advised;public,void,set,frozen,boolean,frozen,this,frozen,frozen
ProxyConfig -> public void setFrozen(boolean frozen);1530174524;Set whether this config should be frozen._<p>When a config is frozen, no advice changes can be made. This is_useful for optimization, and useful when we don't want callers to_be able to manipulate configuration after casting to Advised.;public void setFrozen(boolean frozen) {_		this.frozen = frozen__	};set,whether,this,config,should,be,frozen,p,when,a,config,is,frozen,no,advice,changes,can,be,made,this,is,useful,for,optimization,and,useful,when,we,don,t,want,callers,to,be,able,to,manipulate,configuration,after,casting,to,advised;public,void,set,frozen,boolean,frozen,this,frozen,frozen
ProxyConfig -> public boolean isFrozen();1328020251;Return whether the config is frozen, and no advice changes can be made.;public boolean isFrozen() {_		return this.frozen__	};return,whether,the,config,is,frozen,and,no,advice,changes,can,be,made;public,boolean,is,frozen,return,this,frozen
ProxyConfig -> public boolean isFrozen();1356735495;Return whether the config is frozen, and no advice changes can be made.;public boolean isFrozen() {_		return this.frozen__	};return,whether,the,config,is,frozen,and,no,advice,changes,can,be,made;public,boolean,is,frozen,return,this,frozen
ProxyConfig -> public boolean isFrozen();1530174524;Return whether the config is frozen, and no advice changes can be made.;public boolean isFrozen() {_		return this.frozen__	};return,whether,the,config,is,frozen,and,no,advice,changes,can,be,made;public,boolean,is,frozen,return,this,frozen
ProxyConfig -> public boolean isOptimize();1328020251;Return whether proxies should perform aggressive optimizations.;public boolean isOptimize() {_		return this.optimize__	};return,whether,proxies,should,perform,aggressive,optimizations;public,boolean,is,optimize,return,this,optimize
ProxyConfig -> public boolean isOptimize();1356735495;Return whether proxies should perform aggressive optimizations.;public boolean isOptimize() {_		return this.optimize__	};return,whether,proxies,should,perform,aggressive,optimizations;public,boolean,is,optimize,return,this,optimize
ProxyConfig -> public boolean isOptimize();1530174524;Return whether proxies should perform aggressive optimizations.;public boolean isOptimize() {_		return this.optimize__	};return,whether,proxies,should,perform,aggressive,optimizations;public,boolean,is,optimize,return,this,optimize
