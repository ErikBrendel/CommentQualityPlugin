commented;modifiers;parameterAmount;loc;comment;code
false;protected;2;14;;@Override protected Object invokeUnderTrace(MethodInvocation invocation, Log logger) throws Throwable {     String invocationDescription = getInvocationDescription(invocation).     writeToLog(logger, "Entering " + invocationDescription).     try {         Object rval = invocation.proceed().         writeToLog(logger, "Exiting " + invocationDescription).         return rval.     } catch (Throwable ex) {         writeToLog(logger, "Exception thrown in " + invocationDescription, ex).         throw ex.     } }
true;protected;1;4;/**  * Return a description for the given method invocation.  * @param invocation the invocation to describe  * @return the description  */ ;/**  * Return a description for the given method invocation.  * @param invocation the invocation to describe  * @return the description  */ protected String getInvocationDescription(MethodInvocation invocation) {     return "method '" + invocation.getMethod().getName() + "' of class [" + invocation.getThis().getClass().getName() + "]". }
