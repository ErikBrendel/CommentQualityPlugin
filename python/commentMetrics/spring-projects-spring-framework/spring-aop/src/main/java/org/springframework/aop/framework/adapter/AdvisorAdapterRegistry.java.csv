# id;timestamp;commentText;codeText;commentWords;codeWords
AdvisorAdapterRegistry -> MethodInterceptor[] getInterceptors(Advisor advisor) throws UnknownAdviceTypeException_;1328020251;Return an array of AOP Alliance MethodInterceptors to allow use of the_given Advisor in an interception-based framework._<p>Don't worry about the pointcut associated with the Advisor,_if it's a PointcutAdvisor: just return an interceptor._@param advisor Advisor to find an interceptor for_@return an array of MethodInterceptors to expose this Advisor's behavior_@throws UnknownAdviceTypeException if the Advisor type is_not understood by any registered AdvisorAdapter.;MethodInterceptor[] getInterceptors(Advisor advisor) throws UnknownAdviceTypeException_;return,an,array,of,aop,alliance,method,interceptors,to,allow,use,of,the,given,advisor,in,an,interception,based,framework,p,don,t,worry,about,the,pointcut,associated,with,the,advisor,if,it,s,a,pointcut,advisor,just,return,an,interceptor,param,advisor,advisor,to,find,an,interceptor,for,return,an,array,of,method,interceptors,to,expose,this,advisor,s,behavior,throws,unknown,advice,type,exception,if,the,advisor,type,is,not,understood,by,any,registered,advisor,adapter;method,interceptor,get,interceptors,advisor,advisor,throws,unknown,advice,type,exception
AdvisorAdapterRegistry -> MethodInterceptor[] getInterceptors(Advisor advisor) throws UnknownAdviceTypeException_;1356735495;Return an array of AOP Alliance MethodInterceptors to allow use of the_given Advisor in an interception-based framework._<p>Don't worry about the pointcut associated with the Advisor,_if it's a PointcutAdvisor: just return an interceptor._@param advisor Advisor to find an interceptor for_@return an array of MethodInterceptors to expose this Advisor's behavior_@throws UnknownAdviceTypeException if the Advisor type is_not understood by any registered AdvisorAdapter.;MethodInterceptor[] getInterceptors(Advisor advisor) throws UnknownAdviceTypeException_;return,an,array,of,aop,alliance,method,interceptors,to,allow,use,of,the,given,advisor,in,an,interception,based,framework,p,don,t,worry,about,the,pointcut,associated,with,the,advisor,if,it,s,a,pointcut,advisor,just,return,an,interceptor,param,advisor,advisor,to,find,an,interceptor,for,return,an,array,of,method,interceptors,to,expose,this,advisor,s,behavior,throws,unknown,advice,type,exception,if,the,advisor,type,is,not,understood,by,any,registered,advisor,adapter;method,interceptor,get,interceptors,advisor,advisor,throws,unknown,advice,type,exception
AdvisorAdapterRegistry -> MethodInterceptor[] getInterceptors(Advisor advisor) throws UnknownAdviceTypeException_;1530174524;Return an array of AOP Alliance MethodInterceptors to allow use of the_given Advisor in an interception-based framework._<p>Don't worry about the pointcut associated with the Advisor,_if it's a PointcutAdvisor: just return an interceptor._@param advisor the Advisor to find an interceptor for_@return an array of MethodInterceptors to expose this Advisor's behavior_@throws UnknownAdviceTypeException if the Advisor type is_not understood by any registered AdvisorAdapter.;MethodInterceptor[] getInterceptors(Advisor advisor) throws UnknownAdviceTypeException_;return,an,array,of,aop,alliance,method,interceptors,to,allow,use,of,the,given,advisor,in,an,interception,based,framework,p,don,t,worry,about,the,pointcut,associated,with,the,advisor,if,it,s,a,pointcut,advisor,just,return,an,interceptor,param,advisor,the,advisor,to,find,an,interceptor,for,return,an,array,of,method,interceptors,to,expose,this,advisor,s,behavior,throws,unknown,advice,type,exception,if,the,advisor,type,is,not,understood,by,any,registered,advisor,adapter;method,interceptor,get,interceptors,advisor,advisor,throws,unknown,advice,type,exception
AdvisorAdapterRegistry -> MethodInterceptor[] getInterceptors(Advisor advisor) throws UnknownAdviceTypeException_;1531916836;Return an array of AOP Alliance MethodInterceptors to allow use of the_given Advisor in an interception-based framework._<p>Don't worry about the pointcut associated with the {@link Advisor}, if it is_a {@link org.springframework.aop.PointcutAdvisor}: just return an interceptor._@param advisor the Advisor to find an interceptor for_@return an array of MethodInterceptors to expose this Advisor's behavior_@throws UnknownAdviceTypeException if the Advisor type is_not understood by any registered AdvisorAdapter;MethodInterceptor[] getInterceptors(Advisor advisor) throws UnknownAdviceTypeException_;return,an,array,of,aop,alliance,method,interceptors,to,allow,use,of,the,given,advisor,in,an,interception,based,framework,p,don,t,worry,about,the,pointcut,associated,with,the,link,advisor,if,it,is,a,link,org,springframework,aop,pointcut,advisor,just,return,an,interceptor,param,advisor,the,advisor,to,find,an,interceptor,for,return,an,array,of,method,interceptors,to,expose,this,advisor,s,behavior,throws,unknown,advice,type,exception,if,the,advisor,type,is,not,understood,by,any,registered,advisor,adapter;method,interceptor,get,interceptors,advisor,advisor,throws,unknown,advice,type,exception
AdvisorAdapterRegistry -> Advisor wrap(Object advice) throws UnknownAdviceTypeException_;1328020251;Return an Advisor wrapping the given advice._<p>Should by default at least support_{@link org.aopalliance.intercept.MethodInterceptor},_{@link org.springframework.aop.MethodBeforeAdvice},_{@link org.springframework.aop.AfterReturningAdvice},_{@link org.springframework.aop.ThrowsAdvice}._@param advice object that should be an advice_@return an Advisor wrapping the given advice. Never returns <code>null</code>._If the advice parameter is an Advisor, return it._@throws UnknownAdviceTypeException if no registered advisor adapter_can wrap the supposed advice;Advisor wrap(Object advice) throws UnknownAdviceTypeException_;return,an,advisor,wrapping,the,given,advice,p,should,by,default,at,least,support,link,org,aopalliance,intercept,method,interceptor,link,org,springframework,aop,method,before,advice,link,org,springframework,aop,after,returning,advice,link,org,springframework,aop,throws,advice,param,advice,object,that,should,be,an,advice,return,an,advisor,wrapping,the,given,advice,never,returns,code,null,code,if,the,advice,parameter,is,an,advisor,return,it,throws,unknown,advice,type,exception,if,no,registered,advisor,adapter,can,wrap,the,supposed,advice;advisor,wrap,object,advice,throws,unknown,advice,type,exception
AdvisorAdapterRegistry -> Advisor wrap(Object advice) throws UnknownAdviceTypeException_;1356735495;Return an Advisor wrapping the given advice._<p>Should by default at least support_{@link org.aopalliance.intercept.MethodInterceptor},_{@link org.springframework.aop.MethodBeforeAdvice},_{@link org.springframework.aop.AfterReturningAdvice},_{@link org.springframework.aop.ThrowsAdvice}._@param advice object that should be an advice_@return an Advisor wrapping the given advice. Never returns {@code null}._If the advice parameter is an Advisor, return it._@throws UnknownAdviceTypeException if no registered advisor adapter_can wrap the supposed advice;Advisor wrap(Object advice) throws UnknownAdviceTypeException_;return,an,advisor,wrapping,the,given,advice,p,should,by,default,at,least,support,link,org,aopalliance,intercept,method,interceptor,link,org,springframework,aop,method,before,advice,link,org,springframework,aop,after,returning,advice,link,org,springframework,aop,throws,advice,param,advice,object,that,should,be,an,advice,return,an,advisor,wrapping,the,given,advice,never,returns,code,null,if,the,advice,parameter,is,an,advisor,return,it,throws,unknown,advice,type,exception,if,no,registered,advisor,adapter,can,wrap,the,supposed,advice;advisor,wrap,object,advice,throws,unknown,advice,type,exception
AdvisorAdapterRegistry -> Advisor wrap(Object advice) throws UnknownAdviceTypeException_;1530174524;Return an Advisor wrapping the given advice._<p>Should by default at least support_{@link org.aopalliance.intercept.MethodInterceptor},_{@link org.springframework.aop.MethodBeforeAdvice},_{@link org.springframework.aop.AfterReturningAdvice},_{@link org.springframework.aop.ThrowsAdvice}._@param advice object that should be an advice_@return an Advisor wrapping the given advice. Never returns {@code null}._If the advice parameter is an Advisor, return it._@throws UnknownAdviceTypeException if no registered advisor adapter_can wrap the supposed advice;Advisor wrap(Object advice) throws UnknownAdviceTypeException_;return,an,advisor,wrapping,the,given,advice,p,should,by,default,at,least,support,link,org,aopalliance,intercept,method,interceptor,link,org,springframework,aop,method,before,advice,link,org,springframework,aop,after,returning,advice,link,org,springframework,aop,throws,advice,param,advice,object,that,should,be,an,advice,return,an,advisor,wrapping,the,given,advice,never,returns,code,null,if,the,advice,parameter,is,an,advisor,return,it,throws,unknown,advice,type,exception,if,no,registered,advisor,adapter,can,wrap,the,supposed,advice;advisor,wrap,object,advice,throws,unknown,advice,type,exception
AdvisorAdapterRegistry -> Advisor wrap(Object advice) throws UnknownAdviceTypeException_;1531916836;Return an {@link Advisor} wrapping the given advice._<p>Should by default at least support_{@link org.aopalliance.intercept.MethodInterceptor},_{@link org.springframework.aop.MethodBeforeAdvice},_{@link org.springframework.aop.AfterReturningAdvice},_{@link org.springframework.aop.ThrowsAdvice}._@param advice an object that should be an advice_@return an Advisor wrapping the given advice (never {@code null}__if the advice parameter is an Advisor, it is to be returned as-is)_@throws UnknownAdviceTypeException if no registered advisor adapter_can wrap the supposed advice;Advisor wrap(Object advice) throws UnknownAdviceTypeException_;return,an,link,advisor,wrapping,the,given,advice,p,should,by,default,at,least,support,link,org,aopalliance,intercept,method,interceptor,link,org,springframework,aop,method,before,advice,link,org,springframework,aop,after,returning,advice,link,org,springframework,aop,throws,advice,param,advice,an,object,that,should,be,an,advice,return,an,advisor,wrapping,the,given,advice,never,code,null,if,the,advice,parameter,is,an,advisor,it,is,to,be,returned,as,is,throws,unknown,advice,type,exception,if,no,registered,advisor,adapter,can,wrap,the,supposed,advice;advisor,wrap,object,advice,throws,unknown,advice,type,exception
AdvisorAdapterRegistry -> void registerAdvisorAdapter(AdvisorAdapter adapter)_;1328020251;Register the given AdvisorAdapter. Note that it is not necessary to register_adapters for an AOP Alliance Interceptors or Spring Advices: these must be_automatically recognized by an AdvisorAdapterRegistry implementation._@param adapter AdvisorAdapter that understands a particular Advisor_or Advice types;void registerAdvisorAdapter(AdvisorAdapter adapter)_;register,the,given,advisor,adapter,note,that,it,is,not,necessary,to,register,adapters,for,an,aop,alliance,interceptors,or,spring,advices,these,must,be,automatically,recognized,by,an,advisor,adapter,registry,implementation,param,adapter,advisor,adapter,that,understands,a,particular,advisor,or,advice,types;void,register,advisor,adapter,advisor,adapter,adapter
AdvisorAdapterRegistry -> void registerAdvisorAdapter(AdvisorAdapter adapter)_;1356735495;Register the given AdvisorAdapter. Note that it is not necessary to register_adapters for an AOP Alliance Interceptors or Spring Advices: these must be_automatically recognized by an AdvisorAdapterRegistry implementation._@param adapter AdvisorAdapter that understands a particular Advisor_or Advice types;void registerAdvisorAdapter(AdvisorAdapter adapter)_;register,the,given,advisor,adapter,note,that,it,is,not,necessary,to,register,adapters,for,an,aop,alliance,interceptors,or,spring,advices,these,must,be,automatically,recognized,by,an,advisor,adapter,registry,implementation,param,adapter,advisor,adapter,that,understands,a,particular,advisor,or,advice,types;void,register,advisor,adapter,advisor,adapter,adapter
AdvisorAdapterRegistry -> void registerAdvisorAdapter(AdvisorAdapter adapter)_;1530174524;Register the given AdvisorAdapter. Note that it is not necessary to register_adapters for an AOP Alliance Interceptors or Spring Advices: these must be_automatically recognized by an AdvisorAdapterRegistry implementation._@param adapter the AdvisorAdapter that understands a particular Advisor_or Advice types;void registerAdvisorAdapter(AdvisorAdapter adapter)_;register,the,given,advisor,adapter,note,that,it,is,not,necessary,to,register,adapters,for,an,aop,alliance,interceptors,or,spring,advices,these,must,be,automatically,recognized,by,an,advisor,adapter,registry,implementation,param,adapter,the,advisor,adapter,that,understands,a,particular,advisor,or,advice,types;void,register,advisor,adapter,advisor,adapter,adapter
AdvisorAdapterRegistry -> void registerAdvisorAdapter(AdvisorAdapter adapter)_;1531916836;Register the given {@link AdvisorAdapter}. Note that it is not necessary to register_adapters for an AOP Alliance Interceptors or Spring Advices: these must be_automatically recognized by an {@code AdvisorAdapterRegistry} implementation._@param adapter an AdvisorAdapter that understands particular Advisor or Advice types;void registerAdvisorAdapter(AdvisorAdapter adapter)_;register,the,given,link,advisor,adapter,note,that,it,is,not,necessary,to,register,adapters,for,an,aop,alliance,interceptors,or,spring,advices,these,must,be,automatically,recognized,by,an,code,advisor,adapter,registry,implementation,param,adapter,an,advisor,adapter,that,understands,particular,advisor,or,advice,types;void,register,advisor,adapter,advisor,adapter,adapter
