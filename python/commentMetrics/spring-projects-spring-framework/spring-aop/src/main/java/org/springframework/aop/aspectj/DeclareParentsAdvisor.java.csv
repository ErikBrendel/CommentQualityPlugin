# id;timestamp;commentText;codeText;commentWords;codeWords
DeclareParentsAdvisor -> private DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Class<?> implementationClass, Advice advice);1385412762;Private constructor to share common code between impl-based delegate and reference-based delegate_(cannot use method such as init() to share common code, due the the use of final fields)_@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param implementationClass implementation class_@param advice delegation advice;private DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Class<?> implementationClass, Advice advice) {_		this.introducedInterface = interfaceType__		ClassFilter typePatternFilter = new TypePatternClassFilter(typePattern)___		_		ClassFilter exclusion = new ClassFilter() {_			@Override_			public boolean matches(Class<?> clazz) {_				return !(introducedInterface.isAssignableFrom(clazz))__			}_		}___		this.typePatternClassFilter = ClassFilters.intersection(typePatternFilter, exclusion)__		this.advice = advice__	};private,constructor,to,share,common,code,between,impl,based,delegate,and,reference,based,delegate,cannot,use,method,such,as,init,to,share,common,code,due,the,the,use,of,final,fields,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,implementation,class,implementation,class,param,advice,delegation,advice;private,declare,parents,advisor,class,interface,type,string,type,pattern,class,implementation,class,advice,advice,this,introduced,interface,interface,type,class,filter,type,pattern,filter,new,type,pattern,class,filter,type,pattern,class,filter,exclusion,new,class,filter,override,public,boolean,matches,class,clazz,return,introduced,interface,is,assignable,from,clazz,this,type,pattern,class,filter,class,filters,intersection,type,pattern,filter,exclusion,this,advice,advice
DeclareParentsAdvisor -> private DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Class<?> implementationClass, Advice advice);1461047077;Private constructor to share common code between impl-based delegate and reference-based delegate_(cannot use method such as init() to share common code, due the use of final fields)_@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param implementationClass implementation class_@param advice delegation advice;private DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Class<?> implementationClass, Advice advice) {_		this.introducedInterface = interfaceType__		ClassFilter typePatternFilter = new TypePatternClassFilter(typePattern)___		_		ClassFilter exclusion = new ClassFilter() {_			@Override_			public boolean matches(Class<?> clazz) {_				return !(introducedInterface.isAssignableFrom(clazz))__			}_		}___		this.typePatternClassFilter = ClassFilters.intersection(typePatternFilter, exclusion)__		this.advice = advice__	};private,constructor,to,share,common,code,between,impl,based,delegate,and,reference,based,delegate,cannot,use,method,such,as,init,to,share,common,code,due,the,use,of,final,fields,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,implementation,class,implementation,class,param,advice,delegation,advice;private,declare,parents,advisor,class,interface,type,string,type,pattern,class,implementation,class,advice,advice,this,introduced,interface,interface,type,class,filter,type,pattern,filter,new,type,pattern,class,filter,type,pattern,class,filter,exclusion,new,class,filter,override,public,boolean,matches,class,clazz,return,introduced,interface,is,assignable,from,clazz,this,type,pattern,class,filter,class,filters,intersection,type,pattern,filter,exclusion,this,advice,advice
DeclareParentsAdvisor -> private DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Class<?> implementationClass, Advice advice);1497341397;Private constructor to share common code between impl-based delegate and reference-based delegate_(cannot use method such as init() to share common code, due the use of final fields)_@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param implementationClass implementation class_@param advice delegation advice;private DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Class<?> implementationClass, Advice advice) {_		this.introducedInterface = interfaceType__		ClassFilter typePatternFilter = new TypePatternClassFilter(typePattern)___		_		ClassFilter exclusion = clazz -> !(introducedInterface.isAssignableFrom(clazz))___		this.typePatternClassFilter = ClassFilters.intersection(typePatternFilter, exclusion)__		this.advice = advice__	};private,constructor,to,share,common,code,between,impl,based,delegate,and,reference,based,delegate,cannot,use,method,such,as,init,to,share,common,code,due,the,use,of,final,fields,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,implementation,class,implementation,class,param,advice,delegation,advice;private,declare,parents,advisor,class,interface,type,string,type,pattern,class,implementation,class,advice,advice,this,introduced,interface,interface,type,class,filter,type,pattern,filter,new,type,pattern,class,filter,type,pattern,class,filter,exclusion,clazz,introduced,interface,is,assignable,from,clazz,this,type,pattern,class,filter,class,filters,intersection,type,pattern,filter,exclusion,this,advice,advice
DeclareParentsAdvisor -> private DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, IntroductionInterceptor interceptor);1518518428;Private constructor to share common code between impl-based delegate and reference-based delegate_(cannot use method such as init() to share common code, due the use of final fields)_@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param interceptor the delegation advice as {@link IntroductionInterceptor};private DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, IntroductionInterceptor interceptor) {_		this.advice = interceptor__		this.introducedInterface = interfaceType___		_		ClassFilter typePatternFilter = new TypePatternClassFilter(typePattern)__		ClassFilter exclusion = (clazz -> !introducedInterface.isAssignableFrom(clazz))__		this.typePatternClassFilter = ClassFilters.intersection(typePatternFilter, exclusion)__	};private,constructor,to,share,common,code,between,impl,based,delegate,and,reference,based,delegate,cannot,use,method,such,as,init,to,share,common,code,due,the,use,of,final,fields,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,interceptor,the,delegation,advice,as,link,introduction,interceptor;private,declare,parents,advisor,class,interface,type,string,type,pattern,introduction,interceptor,interceptor,this,advice,interceptor,this,introduced,interface,interface,type,class,filter,type,pattern,filter,new,type,pattern,class,filter,type,pattern,class,filter,exclusion,clazz,introduced,interface,is,assignable,from,clazz,this,type,pattern,class,filter,class,filters,intersection,type,pattern,filter,exclusion
DeclareParentsAdvisor -> private DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, IntroductionInterceptor interceptor);1530174524;Private constructor to share common code between impl-based delegate and reference-based delegate_(cannot use method such as init() to share common code, due the use of final fields)._@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param interceptor the delegation advice as {@link IntroductionInterceptor};private DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, IntroductionInterceptor interceptor) {_		this.advice = interceptor__		this.introducedInterface = interfaceType___		_		ClassFilter typePatternFilter = new TypePatternClassFilter(typePattern)__		ClassFilter exclusion = (clazz -> !introducedInterface.isAssignableFrom(clazz))__		this.typePatternClassFilter = ClassFilters.intersection(typePatternFilter, exclusion)__	};private,constructor,to,share,common,code,between,impl,based,delegate,and,reference,based,delegate,cannot,use,method,such,as,init,to,share,common,code,due,the,use,of,final,fields,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,interceptor,the,delegation,advice,as,link,introduction,interceptor;private,declare,parents,advisor,class,interface,type,string,type,pattern,introduction,interceptor,interceptor,this,advice,interceptor,this,introduced,interface,interface,type,class,filter,type,pattern,filter,new,type,pattern,class,filter,type,pattern,class,filter,exclusion,clazz,introduced,interface,is,assignable,from,clazz,this,type,pattern,class,filter,class,filters,intersection,type,pattern,filter,exclusion
DeclareParentsAdvisor -> private DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, IntroductionInterceptor interceptor);1530174524;Private constructor to share common code between impl-based delegate and reference-based delegate_(cannot use method such as init() to share common code, due the use of final fields)._@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param interceptor the delegation advice as {@link IntroductionInterceptor};private DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, IntroductionInterceptor interceptor) {_		this.advice = interceptor__		this.introducedInterface = interfaceType___		_		ClassFilter typePatternFilter = new TypePatternClassFilter(typePattern)__		ClassFilter exclusion = (clazz -> !this.introducedInterface.isAssignableFrom(clazz))__		this.typePatternClassFilter = ClassFilters.intersection(typePatternFilter, exclusion)__	};private,constructor,to,share,common,code,between,impl,based,delegate,and,reference,based,delegate,cannot,use,method,such,as,init,to,share,common,code,due,the,use,of,final,fields,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,interceptor,the,delegation,advice,as,link,introduction,interceptor;private,declare,parents,advisor,class,interface,type,string,type,pattern,introduction,interceptor,interceptor,this,advice,interceptor,this,introduced,interface,interface,type,class,filter,type,pattern,filter,new,type,pattern,class,filter,type,pattern,class,filter,exclusion,clazz,this,introduced,interface,is,assignable,from,clazz,this,type,pattern,class,filter,class,filters,intersection,type,pattern,filter,exclusion
DeclareParentsAdvisor -> public DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Class<?> defaultImpl);1385412762;Create a new advisor for this DeclareParents field._@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param defaultImpl the default implementation class;public DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Class<?> defaultImpl) {_		this(interfaceType, typePattern, defaultImpl,_			 new DelegatePerTargetObjectIntroductionInterceptor(defaultImpl, interfaceType))__	};create,a,new,advisor,for,this,declare,parents,field,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,default,impl,the,default,implementation,class;public,declare,parents,advisor,class,interface,type,string,type,pattern,class,default,impl,this,interface,type,type,pattern,default,impl,new,delegate,per,target,object,introduction,interceptor,default,impl,interface,type
DeclareParentsAdvisor -> public DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Class<?> defaultImpl);1461047077;Create a new advisor for this DeclareParents field._@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param defaultImpl the default implementation class;public DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Class<?> defaultImpl) {_		this(interfaceType, typePattern, defaultImpl,_			 new DelegatePerTargetObjectIntroductionInterceptor(defaultImpl, interfaceType))__	};create,a,new,advisor,for,this,declare,parents,field,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,default,impl,the,default,implementation,class;public,declare,parents,advisor,class,interface,type,string,type,pattern,class,default,impl,this,interface,type,type,pattern,default,impl,new,delegate,per,target,object,introduction,interceptor,default,impl,interface,type
DeclareParentsAdvisor -> public DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Class<?> defaultImpl);1497341397;Create a new advisor for this DeclareParents field._@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param defaultImpl the default implementation class;public DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Class<?> defaultImpl) {_		this(interfaceType, typePattern, defaultImpl,_			 new DelegatePerTargetObjectIntroductionInterceptor(defaultImpl, interfaceType))__	};create,a,new,advisor,for,this,declare,parents,field,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,default,impl,the,default,implementation,class;public,declare,parents,advisor,class,interface,type,string,type,pattern,class,default,impl,this,interface,type,type,pattern,default,impl,new,delegate,per,target,object,introduction,interceptor,default,impl,interface,type
DeclareParentsAdvisor -> public DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Class<?> defaultImpl);1518518428;Create a new advisor for this DeclareParents field._@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param defaultImpl the default implementation class;public DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Class<?> defaultImpl) {_		this(interfaceType, typePattern,_				new DelegatePerTargetObjectIntroductionInterceptor(defaultImpl, interfaceType))__	};create,a,new,advisor,for,this,declare,parents,field,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,default,impl,the,default,implementation,class;public,declare,parents,advisor,class,interface,type,string,type,pattern,class,default,impl,this,interface,type,type,pattern,new,delegate,per,target,object,introduction,interceptor,default,impl,interface,type
DeclareParentsAdvisor -> public DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Class<?> defaultImpl);1530174524;Create a new advisor for this DeclareParents field._@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param defaultImpl the default implementation class;public DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Class<?> defaultImpl) {_		this(interfaceType, typePattern,_				new DelegatePerTargetObjectIntroductionInterceptor(defaultImpl, interfaceType))__	};create,a,new,advisor,for,this,declare,parents,field,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,default,impl,the,default,implementation,class;public,declare,parents,advisor,class,interface,type,string,type,pattern,class,default,impl,this,interface,type,type,pattern,new,delegate,per,target,object,introduction,interceptor,default,impl,interface,type
DeclareParentsAdvisor -> public DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Class<?> defaultImpl);1530174524;Create a new advisor for this DeclareParents field._@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param defaultImpl the default implementation class;public DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Class<?> defaultImpl) {_		this(interfaceType, typePattern,_				new DelegatePerTargetObjectIntroductionInterceptor(defaultImpl, interfaceType))__	};create,a,new,advisor,for,this,declare,parents,field,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,default,impl,the,default,implementation,class;public,declare,parents,advisor,class,interface,type,string,type,pattern,class,default,impl,this,interface,type,type,pattern,new,delegate,per,target,object,introduction,interceptor,default,impl,interface,type
DeclareParentsAdvisor -> public DeclareParentsAdvisor(Class interfaceType, String typePattern, Class defaultImpl);1328020251;Create a new advisor for this DeclareParents field._@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param defaultImpl the default implementation class;public DeclareParentsAdvisor(Class interfaceType, String typePattern, Class defaultImpl) {_		this(interfaceType, typePattern, defaultImpl, _			 new DelegatePerTargetObjectIntroductionInterceptor(defaultImpl, interfaceType))__	};create,a,new,advisor,for,this,declare,parents,field,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,default,impl,the,default,implementation,class;public,declare,parents,advisor,class,interface,type,string,type,pattern,class,default,impl,this,interface,type,type,pattern,default,impl,new,delegate,per,target,object,introduction,interceptor,default,impl,interface,type
DeclareParentsAdvisor -> public DeclareParentsAdvisor(Class interfaceType, String typePattern, Class defaultImpl);1356735495;Create a new advisor for this DeclareParents field._@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param defaultImpl the default implementation class;public DeclareParentsAdvisor(Class interfaceType, String typePattern, Class defaultImpl) {_		this(interfaceType, typePattern, defaultImpl,_			 new DelegatePerTargetObjectIntroductionInterceptor(defaultImpl, interfaceType))__	};create,a,new,advisor,for,this,declare,parents,field,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,default,impl,the,default,implementation,class;public,declare,parents,advisor,class,interface,type,string,type,pattern,class,default,impl,this,interface,type,type,pattern,default,impl,new,delegate,per,target,object,introduction,interceptor,default,impl,interface,type
DeclareParentsAdvisor -> public DeclareParentsAdvisor(Class interfaceType, String typePattern, Class defaultImpl);1357119239;Create a new advisor for this DeclareParents field._@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param defaultImpl the default implementation class;public DeclareParentsAdvisor(Class interfaceType, String typePattern, Class defaultImpl) {_		this(interfaceType, typePattern, defaultImpl,_			 new DelegatePerTargetObjectIntroductionInterceptor(defaultImpl, interfaceType))__	};create,a,new,advisor,for,this,declare,parents,field,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,default,impl,the,default,implementation,class;public,declare,parents,advisor,class,interface,type,string,type,pattern,class,default,impl,this,interface,type,type,pattern,default,impl,new,delegate,per,target,object,introduction,interceptor,default,impl,interface,type
DeclareParentsAdvisor -> public DeclareParentsAdvisor(Class interfaceType, String typePattern, Class defaultImpl);1368482696;Create a new advisor for this DeclareParents field._@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param defaultImpl the default implementation class;public DeclareParentsAdvisor(Class interfaceType, String typePattern, Class defaultImpl) {_		this(interfaceType, typePattern, defaultImpl,_			 new DelegatePerTargetObjectIntroductionInterceptor(defaultImpl, interfaceType))__	};create,a,new,advisor,for,this,declare,parents,field,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,default,impl,the,default,implementation,class;public,declare,parents,advisor,class,interface,type,string,type,pattern,class,default,impl,this,interface,type,type,pattern,default,impl,new,delegate,per,target,object,introduction,interceptor,default,impl,interface,type
DeclareParentsAdvisor -> public DeclareParentsAdvisor(Class interfaceType, String typePattern, Object delegateRef);1328020251;Create a new advisor for this DeclareParents field._@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param delegateRef the delegate implementation object;public DeclareParentsAdvisor(Class interfaceType, String typePattern, Object delegateRef) {_		this(interfaceType, typePattern, delegateRef.getClass(), _			 new DelegatingIntroductionInterceptor(delegateRef))__	};create,a,new,advisor,for,this,declare,parents,field,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,delegate,ref,the,delegate,implementation,object;public,declare,parents,advisor,class,interface,type,string,type,pattern,object,delegate,ref,this,interface,type,type,pattern,delegate,ref,get,class,new,delegating,introduction,interceptor,delegate,ref
DeclareParentsAdvisor -> public DeclareParentsAdvisor(Class interfaceType, String typePattern, Object delegateRef);1356735495;Create a new advisor for this DeclareParents field._@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param delegateRef the delegate implementation object;public DeclareParentsAdvisor(Class interfaceType, String typePattern, Object delegateRef) {_		this(interfaceType, typePattern, delegateRef.getClass(),_			 new DelegatingIntroductionInterceptor(delegateRef))__	};create,a,new,advisor,for,this,declare,parents,field,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,delegate,ref,the,delegate,implementation,object;public,declare,parents,advisor,class,interface,type,string,type,pattern,object,delegate,ref,this,interface,type,type,pattern,delegate,ref,get,class,new,delegating,introduction,interceptor,delegate,ref
DeclareParentsAdvisor -> public DeclareParentsAdvisor(Class interfaceType, String typePattern, Object delegateRef);1357119239;Create a new advisor for this DeclareParents field._@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param delegateRef the delegate implementation object;public DeclareParentsAdvisor(Class interfaceType, String typePattern, Object delegateRef) {_		this(interfaceType, typePattern, delegateRef.getClass(),_			 new DelegatingIntroductionInterceptor(delegateRef))__	};create,a,new,advisor,for,this,declare,parents,field,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,delegate,ref,the,delegate,implementation,object;public,declare,parents,advisor,class,interface,type,string,type,pattern,object,delegate,ref,this,interface,type,type,pattern,delegate,ref,get,class,new,delegating,introduction,interceptor,delegate,ref
DeclareParentsAdvisor -> public DeclareParentsAdvisor(Class interfaceType, String typePattern, Object delegateRef);1368482696;Create a new advisor for this DeclareParents field._@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param delegateRef the delegate implementation object;public DeclareParentsAdvisor(Class interfaceType, String typePattern, Object delegateRef) {_		this(interfaceType, typePattern, delegateRef.getClass(),_			 new DelegatingIntroductionInterceptor(delegateRef))__	};create,a,new,advisor,for,this,declare,parents,field,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,delegate,ref,the,delegate,implementation,object;public,declare,parents,advisor,class,interface,type,string,type,pattern,object,delegate,ref,this,interface,type,type,pattern,delegate,ref,get,class,new,delegating,introduction,interceptor,delegate,ref
DeclareParentsAdvisor -> public DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Object delegateRef);1385412762;Create a new advisor for this DeclareParents field._@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param delegateRef the delegate implementation object;public DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Object delegateRef) {_		this(interfaceType, typePattern, delegateRef.getClass(),_			 new DelegatingIntroductionInterceptor(delegateRef))__	};create,a,new,advisor,for,this,declare,parents,field,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,delegate,ref,the,delegate,implementation,object;public,declare,parents,advisor,class,interface,type,string,type,pattern,object,delegate,ref,this,interface,type,type,pattern,delegate,ref,get,class,new,delegating,introduction,interceptor,delegate,ref
DeclareParentsAdvisor -> public DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Object delegateRef);1461047077;Create a new advisor for this DeclareParents field._@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param delegateRef the delegate implementation object;public DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Object delegateRef) {_		this(interfaceType, typePattern, delegateRef.getClass(),_			 new DelegatingIntroductionInterceptor(delegateRef))__	};create,a,new,advisor,for,this,declare,parents,field,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,delegate,ref,the,delegate,implementation,object;public,declare,parents,advisor,class,interface,type,string,type,pattern,object,delegate,ref,this,interface,type,type,pattern,delegate,ref,get,class,new,delegating,introduction,interceptor,delegate,ref
DeclareParentsAdvisor -> public DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Object delegateRef);1497341397;Create a new advisor for this DeclareParents field._@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param delegateRef the delegate implementation object;public DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Object delegateRef) {_		this(interfaceType, typePattern, delegateRef.getClass(),_			 new DelegatingIntroductionInterceptor(delegateRef))__	};create,a,new,advisor,for,this,declare,parents,field,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,delegate,ref,the,delegate,implementation,object;public,declare,parents,advisor,class,interface,type,string,type,pattern,object,delegate,ref,this,interface,type,type,pattern,delegate,ref,get,class,new,delegating,introduction,interceptor,delegate,ref
DeclareParentsAdvisor -> public DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Object delegateRef);1518518428;Create a new advisor for this DeclareParents field._@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param delegateRef the delegate implementation object;public DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Object delegateRef) {_		this(interfaceType, typePattern, new DelegatingIntroductionInterceptor(delegateRef))__	};create,a,new,advisor,for,this,declare,parents,field,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,delegate,ref,the,delegate,implementation,object;public,declare,parents,advisor,class,interface,type,string,type,pattern,object,delegate,ref,this,interface,type,type,pattern,new,delegating,introduction,interceptor,delegate,ref
DeclareParentsAdvisor -> public DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Object delegateRef);1530174524;Create a new advisor for this DeclareParents field._@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param delegateRef the delegate implementation object;public DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Object delegateRef) {_		this(interfaceType, typePattern, new DelegatingIntroductionInterceptor(delegateRef))__	};create,a,new,advisor,for,this,declare,parents,field,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,delegate,ref,the,delegate,implementation,object;public,declare,parents,advisor,class,interface,type,string,type,pattern,object,delegate,ref,this,interface,type,type,pattern,new,delegating,introduction,interceptor,delegate,ref
DeclareParentsAdvisor -> public DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Object delegateRef);1530174524;Create a new advisor for this DeclareParents field._@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param delegateRef the delegate implementation object;public DeclareParentsAdvisor(Class<?> interfaceType, String typePattern, Object delegateRef) {_		this(interfaceType, typePattern, new DelegatingIntroductionInterceptor(delegateRef))__	};create,a,new,advisor,for,this,declare,parents,field,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,delegate,ref,the,delegate,implementation,object;public,declare,parents,advisor,class,interface,type,string,type,pattern,object,delegate,ref,this,interface,type,type,pattern,new,delegating,introduction,interceptor,delegate,ref
DeclareParentsAdvisor -> private DeclareParentsAdvisor(Class interfaceType, String typePattern, Class implementationClass, Advice advice);1328020251;Private constructor to share common code between impl-based delegate and reference-based delegate_(cannot use method such as init() to share common code, due the the use of final fields)_@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param implementationClass implementation class_@param advice delegation advice;private DeclareParentsAdvisor(Class interfaceType, String typePattern, Class implementationClass, Advice advice) {_		this.introducedInterface = interfaceType__		ClassFilter typePatternFilter = new TypePatternClassFilter(typePattern)___		_		ClassFilter exclusion = new ClassFilter() {_			public boolean matches(Class clazz) {_				return !(introducedInterface.isAssignableFrom(clazz))__			}_		}___		this.typePatternClassFilter = ClassFilters.intersection(typePatternFilter, exclusion)__		this.advice = advice__	};private,constructor,to,share,common,code,between,impl,based,delegate,and,reference,based,delegate,cannot,use,method,such,as,init,to,share,common,code,due,the,the,use,of,final,fields,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,implementation,class,implementation,class,param,advice,delegation,advice;private,declare,parents,advisor,class,interface,type,string,type,pattern,class,implementation,class,advice,advice,this,introduced,interface,interface,type,class,filter,type,pattern,filter,new,type,pattern,class,filter,type,pattern,class,filter,exclusion,new,class,filter,public,boolean,matches,class,clazz,return,introduced,interface,is,assignable,from,clazz,this,type,pattern,class,filter,class,filters,intersection,type,pattern,filter,exclusion,this,advice,advice
DeclareParentsAdvisor -> private DeclareParentsAdvisor(Class interfaceType, String typePattern, Class implementationClass, Advice advice);1356735495;Private constructor to share common code between impl-based delegate and reference-based delegate_(cannot use method such as init() to share common code, due the the use of final fields)_@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param implementationClass implementation class_@param advice delegation advice;private DeclareParentsAdvisor(Class interfaceType, String typePattern, Class implementationClass, Advice advice) {_		this.introducedInterface = interfaceType__		ClassFilter typePatternFilter = new TypePatternClassFilter(typePattern)___		_		ClassFilter exclusion = new ClassFilter() {_			@Override_			public boolean matches(Class clazz) {_				return !(introducedInterface.isAssignableFrom(clazz))__			}_		}___		this.typePatternClassFilter = ClassFilters.intersection(typePatternFilter, exclusion)__		this.advice = advice__	};private,constructor,to,share,common,code,between,impl,based,delegate,and,reference,based,delegate,cannot,use,method,such,as,init,to,share,common,code,due,the,the,use,of,final,fields,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,implementation,class,implementation,class,param,advice,delegation,advice;private,declare,parents,advisor,class,interface,type,string,type,pattern,class,implementation,class,advice,advice,this,introduced,interface,interface,type,class,filter,type,pattern,filter,new,type,pattern,class,filter,type,pattern,class,filter,exclusion,new,class,filter,override,public,boolean,matches,class,clazz,return,introduced,interface,is,assignable,from,clazz,this,type,pattern,class,filter,class,filters,intersection,type,pattern,filter,exclusion,this,advice,advice
DeclareParentsAdvisor -> private DeclareParentsAdvisor(Class interfaceType, String typePattern, Class implementationClass, Advice advice);1357119239;Private constructor to share common code between impl-based delegate and reference-based delegate_(cannot use method such as init() to share common code, due the the use of final fields)_@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param implementationClass implementation class_@param advice delegation advice;private DeclareParentsAdvisor(Class interfaceType, String typePattern, Class implementationClass, Advice advice) {_		this.introducedInterface = interfaceType__		ClassFilter typePatternFilter = new TypePatternClassFilter(typePattern)___		_		ClassFilter exclusion = new ClassFilter() {_			public boolean matches(Class clazz) {_				return !(introducedInterface.isAssignableFrom(clazz))__			}_		}___		this.typePatternClassFilter = ClassFilters.intersection(typePatternFilter, exclusion)__		this.advice = advice__	};private,constructor,to,share,common,code,between,impl,based,delegate,and,reference,based,delegate,cannot,use,method,such,as,init,to,share,common,code,due,the,the,use,of,final,fields,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,implementation,class,implementation,class,param,advice,delegation,advice;private,declare,parents,advisor,class,interface,type,string,type,pattern,class,implementation,class,advice,advice,this,introduced,interface,interface,type,class,filter,type,pattern,filter,new,type,pattern,class,filter,type,pattern,class,filter,exclusion,new,class,filter,public,boolean,matches,class,clazz,return,introduced,interface,is,assignable,from,clazz,this,type,pattern,class,filter,class,filters,intersection,type,pattern,filter,exclusion,this,advice,advice
DeclareParentsAdvisor -> private DeclareParentsAdvisor(Class interfaceType, String typePattern, Class implementationClass, Advice advice);1368482696;Private constructor to share common code between impl-based delegate and reference-based delegate_(cannot use method such as init() to share common code, due the the use of final fields)_@param interfaceType static field defining the introduction_@param typePattern type pattern the introduction is restricted to_@param implementationClass implementation class_@param advice delegation advice;private DeclareParentsAdvisor(Class interfaceType, String typePattern, Class implementationClass, Advice advice) {_		this.introducedInterface = interfaceType__		ClassFilter typePatternFilter = new TypePatternClassFilter(typePattern)___		_		ClassFilter exclusion = new ClassFilter() {_			@Override_			public boolean matches(Class clazz) {_				return !(introducedInterface.isAssignableFrom(clazz))__			}_		}___		this.typePatternClassFilter = ClassFilters.intersection(typePatternFilter, exclusion)__		this.advice = advice__	};private,constructor,to,share,common,code,between,impl,based,delegate,and,reference,based,delegate,cannot,use,method,such,as,init,to,share,common,code,due,the,the,use,of,final,fields,param,interface,type,static,field,defining,the,introduction,param,type,pattern,type,pattern,the,introduction,is,restricted,to,param,implementation,class,implementation,class,param,advice,delegation,advice;private,declare,parents,advisor,class,interface,type,string,type,pattern,class,implementation,class,advice,advice,this,introduced,interface,interface,type,class,filter,type,pattern,filter,new,type,pattern,class,filter,type,pattern,class,filter,exclusion,new,class,filter,override,public,boolean,matches,class,clazz,return,introduced,interface,is,assignable,from,clazz,this,type,pattern,class,filter,class,filters,intersection,type,pattern,filter,exclusion,this,advice,advice
