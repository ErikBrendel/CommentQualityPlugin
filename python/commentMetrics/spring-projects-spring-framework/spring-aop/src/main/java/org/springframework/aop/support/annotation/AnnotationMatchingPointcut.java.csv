# id;timestamp;commentText;codeText;commentWords;codeWords
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut(@Nullable Class<? extends Annotation> classAnnotationType, 			@Nullable Class<? extends Annotation> methodAnnotationType);1496837955;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level_(can be {@code null})_@param methodAnnotationType the annotation type to look for at the method level_(can be {@code null});public AnnotationMatchingPointcut(@Nullable Class<? extends Annotation> classAnnotationType,_			@Nullable Class<? extends Annotation> methodAnnotationType) {__		this(classAnnotationType, methodAnnotationType, false)__	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level,can,be,code,null,param,method,annotation,type,the,annotation,type,to,look,for,at,the,method,level,can,be,code,null;public,annotation,matching,pointcut,nullable,class,extends,annotation,class,annotation,type,nullable,class,extends,annotation,method,annotation,type,this,class,annotation,type,method,annotation,type,false
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut(@Nullable Class<? extends Annotation> classAnnotationType, 			@Nullable Class<? extends Annotation> methodAnnotationType);1498780456;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level_(can be {@code null})_@param methodAnnotationType the annotation type to look for at the method level_(can be {@code null});public AnnotationMatchingPointcut(@Nullable Class<? extends Annotation> classAnnotationType,_			@Nullable Class<? extends Annotation> methodAnnotationType) {__		this(classAnnotationType, methodAnnotationType, false)__	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level,can,be,code,null,param,method,annotation,type,the,annotation,type,to,look,for,at,the,method,level,can,be,code,null;public,annotation,matching,pointcut,nullable,class,extends,annotation,class,annotation,type,nullable,class,extends,annotation,method,annotation,type,this,class,annotation,type,method,annotation,type,false
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut(@Nullable Class<? extends Annotation> classAnnotationType, 			@Nullable Class<? extends Annotation> methodAnnotationType, boolean checkInherited);1496837955;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level_(can be {@code null})_@param methodAnnotationType the annotation type to look for at the method level_(can be {@code null})_@param checkInherited whether to also check the superclasses and interfaces_as well as meta-annotations for the annotation type_@since 5.0_@see AnnotationClassFilter#AnnotationClassFilter(Class, boolean)_@see AnnotationMethodMatcher#AnnotationMethodMatcher(Class, boolean);public AnnotationMatchingPointcut(@Nullable Class<? extends Annotation> classAnnotationType,_			@Nullable Class<? extends Annotation> methodAnnotationType, boolean checkInherited) {__		Assert.isTrue((classAnnotationType != null || methodAnnotationType != null),_				"Either Class annotation type or Method annotation type needs to be specified (or both)")___		if (classAnnotationType != null) {_			this.classFilter = new AnnotationClassFilter(classAnnotationType, checkInherited)__		}_		else {_			this.classFilter = ClassFilter.TRUE__		}__		if (methodAnnotationType != null) {_			this.methodMatcher = new AnnotationMethodMatcher(methodAnnotationType, checkInherited)__		}_		else {_			this.methodMatcher = MethodMatcher.TRUE__		}_	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level,can,be,code,null,param,method,annotation,type,the,annotation,type,to,look,for,at,the,method,level,can,be,code,null,param,check,inherited,whether,to,also,check,the,superclasses,and,interfaces,as,well,as,meta,annotations,for,the,annotation,type,since,5,0,see,annotation,class,filter,annotation,class,filter,class,boolean,see,annotation,method,matcher,annotation,method,matcher,class,boolean;public,annotation,matching,pointcut,nullable,class,extends,annotation,class,annotation,type,nullable,class,extends,annotation,method,annotation,type,boolean,check,inherited,assert,is,true,class,annotation,type,null,method,annotation,type,null,either,class,annotation,type,or,method,annotation,type,needs,to,be,specified,or,both,if,class,annotation,type,null,this,class,filter,new,annotation,class,filter,class,annotation,type,check,inherited,else,this,class,filter,class,filter,true,if,method,annotation,type,null,this,method,matcher,new,annotation,method,matcher,method,annotation,type,check,inherited,else,this,method,matcher,method,matcher,true
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut(@Nullable Class<? extends Annotation> classAnnotationType, 			@Nullable Class<? extends Annotation> methodAnnotationType, boolean checkInherited);1498780456;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level_(can be {@code null})_@param methodAnnotationType the annotation type to look for at the method level_(can be {@code null})_@param checkInherited whether to also check the superclasses and interfaces_as well as meta-annotations for the annotation type_@since 5.0_@see AnnotationClassFilter#AnnotationClassFilter(Class, boolean)_@see AnnotationMethodMatcher#AnnotationMethodMatcher(Class, boolean);public AnnotationMatchingPointcut(@Nullable Class<? extends Annotation> classAnnotationType,_			@Nullable Class<? extends Annotation> methodAnnotationType, boolean checkInherited) {__		Assert.isTrue((classAnnotationType != null || methodAnnotationType != null),_				"Either Class annotation type or Method annotation type needs to be specified (or both)")___		if (classAnnotationType != null) {_			this.classFilter = new AnnotationClassFilter(classAnnotationType, checkInherited)__		}_		else {_			this.classFilter = ClassFilter.TRUE__		}__		if (methodAnnotationType != null) {_			this.methodMatcher = new AnnotationMethodMatcher(methodAnnotationType, checkInherited)__		}_		else {_			this.methodMatcher = MethodMatcher.TRUE__		}_	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level,can,be,code,null,param,method,annotation,type,the,annotation,type,to,look,for,at,the,method,level,can,be,code,null,param,check,inherited,whether,to,also,check,the,superclasses,and,interfaces,as,well,as,meta,annotations,for,the,annotation,type,since,5,0,see,annotation,class,filter,annotation,class,filter,class,boolean,see,annotation,method,matcher,annotation,method,matcher,class,boolean;public,annotation,matching,pointcut,nullable,class,extends,annotation,class,annotation,type,nullable,class,extends,annotation,method,annotation,type,boolean,check,inherited,assert,is,true,class,annotation,type,null,method,annotation,type,null,either,class,annotation,type,or,method,annotation,type,needs,to,be,specified,or,both,if,class,annotation,type,null,this,class,filter,new,annotation,class,filter,class,annotation,type,check,inherited,else,this,class,filter,class,filter,true,if,method,annotation,type,null,this,method,matcher,new,annotation,method,matcher,method,annotation,type,check,inherited,else,this,method,matcher,method,matcher,true
AnnotationMatchingPointcut -> public static AnnotationMatchingPointcut forMethodAnnotation(Class<? extends Annotation> annotationType);1328020251;Factory method for an AnnotationMatchingPointcut that matches_for the specified annotation at the method level._@param annotationType the annotation type to look for at the method level_@return the corresponding AnnotationMatchingPointcut;public static AnnotationMatchingPointcut forMethodAnnotation(Class<? extends Annotation> annotationType) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		return new AnnotationMatchingPointcut(null, annotationType)__	};factory,method,for,an,annotation,matching,pointcut,that,matches,for,the,specified,annotation,at,the,method,level,param,annotation,type,the,annotation,type,to,look,for,at,the,method,level,return,the,corresponding,annotation,matching,pointcut;public,static,annotation,matching,pointcut,for,method,annotation,class,extends,annotation,annotation,type,assert,not,null,annotation,type,annotation,type,must,not,be,null,return,new,annotation,matching,pointcut,null,annotation,type
AnnotationMatchingPointcut -> public static AnnotationMatchingPointcut forMethodAnnotation(Class<? extends Annotation> annotationType);1356735495;Factory method for an AnnotationMatchingPointcut that matches_for the specified annotation at the method level._@param annotationType the annotation type to look for at the method level_@return the corresponding AnnotationMatchingPointcut;public static AnnotationMatchingPointcut forMethodAnnotation(Class<? extends Annotation> annotationType) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		return new AnnotationMatchingPointcut(null, annotationType)__	};factory,method,for,an,annotation,matching,pointcut,that,matches,for,the,specified,annotation,at,the,method,level,param,annotation,type,the,annotation,type,to,look,for,at,the,method,level,return,the,corresponding,annotation,matching,pointcut;public,static,annotation,matching,pointcut,for,method,annotation,class,extends,annotation,annotation,type,assert,not,null,annotation,type,annotation,type,must,not,be,null,return,new,annotation,matching,pointcut,null,annotation,type
AnnotationMatchingPointcut -> public static AnnotationMatchingPointcut forMethodAnnotation(Class<? extends Annotation> annotationType);1357119239;Factory method for an AnnotationMatchingPointcut that matches_for the specified annotation at the method level._@param annotationType the annotation type to look for at the method level_@return the corresponding AnnotationMatchingPointcut;public static AnnotationMatchingPointcut forMethodAnnotation(Class<? extends Annotation> annotationType) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		return new AnnotationMatchingPointcut(null, annotationType)__	};factory,method,for,an,annotation,matching,pointcut,that,matches,for,the,specified,annotation,at,the,method,level,param,annotation,type,the,annotation,type,to,look,for,at,the,method,level,return,the,corresponding,annotation,matching,pointcut;public,static,annotation,matching,pointcut,for,method,annotation,class,extends,annotation,annotation,type,assert,not,null,annotation,type,annotation,type,must,not,be,null,return,new,annotation,matching,pointcut,null,annotation,type
AnnotationMatchingPointcut -> public static AnnotationMatchingPointcut forMethodAnnotation(Class<? extends Annotation> annotationType);1368482696;Factory method for an AnnotationMatchingPointcut that matches_for the specified annotation at the method level._@param annotationType the annotation type to look for at the method level_@return the corresponding AnnotationMatchingPointcut;public static AnnotationMatchingPointcut forMethodAnnotation(Class<? extends Annotation> annotationType) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		return new AnnotationMatchingPointcut(null, annotationType)__	};factory,method,for,an,annotation,matching,pointcut,that,matches,for,the,specified,annotation,at,the,method,level,param,annotation,type,the,annotation,type,to,look,for,at,the,method,level,return,the,corresponding,annotation,matching,pointcut;public,static,annotation,matching,pointcut,for,method,annotation,class,extends,annotation,annotation,type,assert,not,null,annotation,type,annotation,type,must,not,be,null,return,new,annotation,matching,pointcut,null,annotation,type
AnnotationMatchingPointcut -> public static AnnotationMatchingPointcut forMethodAnnotation(Class<? extends Annotation> annotationType);1388872053;Factory method for an AnnotationMatchingPointcut that matches_for the specified annotation at the method level._@param annotationType the annotation type to look for at the method level_@return the corresponding AnnotationMatchingPointcut;public static AnnotationMatchingPointcut forMethodAnnotation(Class<? extends Annotation> annotationType) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		return new AnnotationMatchingPointcut(null, annotationType)__	};factory,method,for,an,annotation,matching,pointcut,that,matches,for,the,specified,annotation,at,the,method,level,param,annotation,type,the,annotation,type,to,look,for,at,the,method,level,return,the,corresponding,annotation,matching,pointcut;public,static,annotation,matching,pointcut,for,method,annotation,class,extends,annotation,annotation,type,assert,not,null,annotation,type,annotation,type,must,not,be,null,return,new,annotation,matching,pointcut,null,annotation,type
AnnotationMatchingPointcut -> public static AnnotationMatchingPointcut forMethodAnnotation(Class<? extends Annotation> annotationType);1493223400;Factory method for an AnnotationMatchingPointcut that matches_for the specified annotation at the method level._@param annotationType the annotation type to look for at the method level_@return the corresponding AnnotationMatchingPointcut;public static AnnotationMatchingPointcut forMethodAnnotation(Class<? extends Annotation> annotationType) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		return new AnnotationMatchingPointcut(null, annotationType)__	};factory,method,for,an,annotation,matching,pointcut,that,matches,for,the,specified,annotation,at,the,method,level,param,annotation,type,the,annotation,type,to,look,for,at,the,method,level,return,the,corresponding,annotation,matching,pointcut;public,static,annotation,matching,pointcut,for,method,annotation,class,extends,annotation,annotation,type,assert,not,null,annotation,type,annotation,type,must,not,be,null,return,new,annotation,matching,pointcut,null,annotation,type
AnnotationMatchingPointcut -> public static AnnotationMatchingPointcut forMethodAnnotation(Class<? extends Annotation> annotationType);1495868221;Factory method for an AnnotationMatchingPointcut that matches_for the specified annotation at the method level._@param annotationType the annotation type to look for at the method level_@return the corresponding AnnotationMatchingPointcut;public static AnnotationMatchingPointcut forMethodAnnotation(Class<? extends Annotation> annotationType) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		return new AnnotationMatchingPointcut(null, annotationType)__	};factory,method,for,an,annotation,matching,pointcut,that,matches,for,the,specified,annotation,at,the,method,level,param,annotation,type,the,annotation,type,to,look,for,at,the,method,level,return,the,corresponding,annotation,matching,pointcut;public,static,annotation,matching,pointcut,for,method,annotation,class,extends,annotation,annotation,type,assert,not,null,annotation,type,annotation,type,must,not,be,null,return,new,annotation,matching,pointcut,null,annotation,type
AnnotationMatchingPointcut -> public static AnnotationMatchingPointcut forMethodAnnotation(Class<? extends Annotation> annotationType);1496837955;Factory method for an AnnotationMatchingPointcut that matches_for the specified annotation at the method level._@param annotationType the annotation type to look for at the method level_@return the corresponding AnnotationMatchingPointcut;public static AnnotationMatchingPointcut forMethodAnnotation(Class<? extends Annotation> annotationType) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		return new AnnotationMatchingPointcut(null, annotationType)__	};factory,method,for,an,annotation,matching,pointcut,that,matches,for,the,specified,annotation,at,the,method,level,param,annotation,type,the,annotation,type,to,look,for,at,the,method,level,return,the,corresponding,annotation,matching,pointcut;public,static,annotation,matching,pointcut,for,method,annotation,class,extends,annotation,annotation,type,assert,not,null,annotation,type,annotation,type,must,not,be,null,return,new,annotation,matching,pointcut,null,annotation,type
AnnotationMatchingPointcut -> public static AnnotationMatchingPointcut forMethodAnnotation(Class<? extends Annotation> annotationType);1498780456;Factory method for an AnnotationMatchingPointcut that matches_for the specified annotation at the method level._@param annotationType the annotation type to look for at the method level_@return the corresponding AnnotationMatchingPointcut;public static AnnotationMatchingPointcut forMethodAnnotation(Class<? extends Annotation> annotationType) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		return new AnnotationMatchingPointcut(null, annotationType)__	};factory,method,for,an,annotation,matching,pointcut,that,matches,for,the,specified,annotation,at,the,method,level,param,annotation,type,the,annotation,type,to,look,for,at,the,method,level,return,the,corresponding,annotation,matching,pointcut;public,static,annotation,matching,pointcut,for,method,annotation,class,extends,annotation,annotation,type,assert,not,null,annotation,type,annotation,type,must,not,be,null,return,new,annotation,matching,pointcut,null,annotation,type
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType);1328020251;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level;public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType) {_		this.classFilter = new AnnotationClassFilter(classAnnotationType)__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,this,class,filter,new,annotation,class,filter,class,annotation,type,this,method,matcher,method,matcher,true
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType);1356735495;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level;public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType) {_		this.classFilter = new AnnotationClassFilter(classAnnotationType)__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,this,class,filter,new,annotation,class,filter,class,annotation,type,this,method,matcher,method,matcher,true
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType);1357119239;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level;public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType) {_		this.classFilter = new AnnotationClassFilter(classAnnotationType)__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,this,class,filter,new,annotation,class,filter,class,annotation,type,this,method,matcher,method,matcher,true
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType);1368482696;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level;public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType) {_		this.classFilter = new AnnotationClassFilter(classAnnotationType)__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,this,class,filter,new,annotation,class,filter,class,annotation,type,this,method,matcher,method,matcher,true
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType);1388872053;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level;public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType) {_		this.classFilter = new AnnotationClassFilter(classAnnotationType)__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,this,class,filter,new,annotation,class,filter,class,annotation,type,this,method,matcher,method,matcher,true
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType);1493223400;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level;public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType) {_		this(classAnnotationType, false)__	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,this,class,annotation,type,false
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType);1495868221;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level;public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType) {_		this(classAnnotationType, false)__	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,this,class,annotation,type,false
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType);1496837955;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level;public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType) {_		this(classAnnotationType, false)__	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,this,class,annotation,type,false
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType);1498780456;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level;public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType) {_		this(classAnnotationType, false)__	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,this,class,annotation,type,false
AnnotationMatchingPointcut -> public static AnnotationMatchingPointcut forClassAnnotation(Class<? extends Annotation> annotationType);1328020251;Factory method for an AnnotationMatchingPointcut that matches_for the specified annotation at the class level._@param annotationType the annotation type to look for at the class level_@return the corresponding AnnotationMatchingPointcut;public static AnnotationMatchingPointcut forClassAnnotation(Class<? extends Annotation> annotationType) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		return new AnnotationMatchingPointcut(annotationType)__	};factory,method,for,an,annotation,matching,pointcut,that,matches,for,the,specified,annotation,at,the,class,level,param,annotation,type,the,annotation,type,to,look,for,at,the,class,level,return,the,corresponding,annotation,matching,pointcut;public,static,annotation,matching,pointcut,for,class,annotation,class,extends,annotation,annotation,type,assert,not,null,annotation,type,annotation,type,must,not,be,null,return,new,annotation,matching,pointcut,annotation,type
AnnotationMatchingPointcut -> public static AnnotationMatchingPointcut forClassAnnotation(Class<? extends Annotation> annotationType);1356735495;Factory method for an AnnotationMatchingPointcut that matches_for the specified annotation at the class level._@param annotationType the annotation type to look for at the class level_@return the corresponding AnnotationMatchingPointcut;public static AnnotationMatchingPointcut forClassAnnotation(Class<? extends Annotation> annotationType) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		return new AnnotationMatchingPointcut(annotationType)__	};factory,method,for,an,annotation,matching,pointcut,that,matches,for,the,specified,annotation,at,the,class,level,param,annotation,type,the,annotation,type,to,look,for,at,the,class,level,return,the,corresponding,annotation,matching,pointcut;public,static,annotation,matching,pointcut,for,class,annotation,class,extends,annotation,annotation,type,assert,not,null,annotation,type,annotation,type,must,not,be,null,return,new,annotation,matching,pointcut,annotation,type
AnnotationMatchingPointcut -> public static AnnotationMatchingPointcut forClassAnnotation(Class<? extends Annotation> annotationType);1357119239;Factory method for an AnnotationMatchingPointcut that matches_for the specified annotation at the class level._@param annotationType the annotation type to look for at the class level_@return the corresponding AnnotationMatchingPointcut;public static AnnotationMatchingPointcut forClassAnnotation(Class<? extends Annotation> annotationType) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		return new AnnotationMatchingPointcut(annotationType)__	};factory,method,for,an,annotation,matching,pointcut,that,matches,for,the,specified,annotation,at,the,class,level,param,annotation,type,the,annotation,type,to,look,for,at,the,class,level,return,the,corresponding,annotation,matching,pointcut;public,static,annotation,matching,pointcut,for,class,annotation,class,extends,annotation,annotation,type,assert,not,null,annotation,type,annotation,type,must,not,be,null,return,new,annotation,matching,pointcut,annotation,type
AnnotationMatchingPointcut -> public static AnnotationMatchingPointcut forClassAnnotation(Class<? extends Annotation> annotationType);1368482696;Factory method for an AnnotationMatchingPointcut that matches_for the specified annotation at the class level._@param annotationType the annotation type to look for at the class level_@return the corresponding AnnotationMatchingPointcut;public static AnnotationMatchingPointcut forClassAnnotation(Class<? extends Annotation> annotationType) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		return new AnnotationMatchingPointcut(annotationType)__	};factory,method,for,an,annotation,matching,pointcut,that,matches,for,the,specified,annotation,at,the,class,level,param,annotation,type,the,annotation,type,to,look,for,at,the,class,level,return,the,corresponding,annotation,matching,pointcut;public,static,annotation,matching,pointcut,for,class,annotation,class,extends,annotation,annotation,type,assert,not,null,annotation,type,annotation,type,must,not,be,null,return,new,annotation,matching,pointcut,annotation,type
AnnotationMatchingPointcut -> public static AnnotationMatchingPointcut forClassAnnotation(Class<? extends Annotation> annotationType);1388872053;Factory method for an AnnotationMatchingPointcut that matches_for the specified annotation at the class level._@param annotationType the annotation type to look for at the class level_@return the corresponding AnnotationMatchingPointcut;public static AnnotationMatchingPointcut forClassAnnotation(Class<? extends Annotation> annotationType) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		return new AnnotationMatchingPointcut(annotationType)__	};factory,method,for,an,annotation,matching,pointcut,that,matches,for,the,specified,annotation,at,the,class,level,param,annotation,type,the,annotation,type,to,look,for,at,the,class,level,return,the,corresponding,annotation,matching,pointcut;public,static,annotation,matching,pointcut,for,class,annotation,class,extends,annotation,annotation,type,assert,not,null,annotation,type,annotation,type,must,not,be,null,return,new,annotation,matching,pointcut,annotation,type
AnnotationMatchingPointcut -> public static AnnotationMatchingPointcut forClassAnnotation(Class<? extends Annotation> annotationType);1493223400;Factory method for an AnnotationMatchingPointcut that matches_for the specified annotation at the class level._@param annotationType the annotation type to look for at the class level_@return the corresponding AnnotationMatchingPointcut;public static AnnotationMatchingPointcut forClassAnnotation(Class<? extends Annotation> annotationType) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		return new AnnotationMatchingPointcut(annotationType)__	};factory,method,for,an,annotation,matching,pointcut,that,matches,for,the,specified,annotation,at,the,class,level,param,annotation,type,the,annotation,type,to,look,for,at,the,class,level,return,the,corresponding,annotation,matching,pointcut;public,static,annotation,matching,pointcut,for,class,annotation,class,extends,annotation,annotation,type,assert,not,null,annotation,type,annotation,type,must,not,be,null,return,new,annotation,matching,pointcut,annotation,type
AnnotationMatchingPointcut -> public static AnnotationMatchingPointcut forClassAnnotation(Class<? extends Annotation> annotationType);1495868221;Factory method for an AnnotationMatchingPointcut that matches_for the specified annotation at the class level._@param annotationType the annotation type to look for at the class level_@return the corresponding AnnotationMatchingPointcut;public static AnnotationMatchingPointcut forClassAnnotation(Class<? extends Annotation> annotationType) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		return new AnnotationMatchingPointcut(annotationType)__	};factory,method,for,an,annotation,matching,pointcut,that,matches,for,the,specified,annotation,at,the,class,level,param,annotation,type,the,annotation,type,to,look,for,at,the,class,level,return,the,corresponding,annotation,matching,pointcut;public,static,annotation,matching,pointcut,for,class,annotation,class,extends,annotation,annotation,type,assert,not,null,annotation,type,annotation,type,must,not,be,null,return,new,annotation,matching,pointcut,annotation,type
AnnotationMatchingPointcut -> public static AnnotationMatchingPointcut forClassAnnotation(Class<? extends Annotation> annotationType);1496837955;Factory method for an AnnotationMatchingPointcut that matches_for the specified annotation at the class level._@param annotationType the annotation type to look for at the class level_@return the corresponding AnnotationMatchingPointcut;public static AnnotationMatchingPointcut forClassAnnotation(Class<? extends Annotation> annotationType) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		return new AnnotationMatchingPointcut(annotationType)__	};factory,method,for,an,annotation,matching,pointcut,that,matches,for,the,specified,annotation,at,the,class,level,param,annotation,type,the,annotation,type,to,look,for,at,the,class,level,return,the,corresponding,annotation,matching,pointcut;public,static,annotation,matching,pointcut,for,class,annotation,class,extends,annotation,annotation,type,assert,not,null,annotation,type,annotation,type,must,not,be,null,return,new,annotation,matching,pointcut,annotation,type
AnnotationMatchingPointcut -> public static AnnotationMatchingPointcut forClassAnnotation(Class<? extends Annotation> annotationType);1498780456;Factory method for an AnnotationMatchingPointcut that matches_for the specified annotation at the class level._@param annotationType the annotation type to look for at the class level_@return the corresponding AnnotationMatchingPointcut;public static AnnotationMatchingPointcut forClassAnnotation(Class<? extends Annotation> annotationType) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		return new AnnotationMatchingPointcut(annotationType)__	};factory,method,for,an,annotation,matching,pointcut,that,matches,for,the,specified,annotation,at,the,class,level,param,annotation,type,the,annotation,type,to,look,for,at,the,class,level,return,the,corresponding,annotation,matching,pointcut;public,static,annotation,matching,pointcut,for,class,annotation,class,extends,annotation,annotation,type,assert,not,null,annotation,type,annotation,type,must,not,be,null,return,new,annotation,matching,pointcut,annotation,type
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType, boolean checkInherited);1328020251;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level_@param checkInherited whether to explicitly check the superclasses and_interfaces for the annotation type as well (even if the annotation type_is not marked as inherited itself);public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType, boolean checkInherited) {_		this.classFilter = new AnnotationClassFilter(classAnnotationType, checkInherited)__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level,param,check,inherited,whether,to,explicitly,check,the,superclasses,and,interfaces,for,the,annotation,type,as,well,even,if,the,annotation,type,is,not,marked,as,inherited,itself;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,boolean,check,inherited,this,class,filter,new,annotation,class,filter,class,annotation,type,check,inherited,this,method,matcher,method,matcher,true
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType, boolean checkInherited);1356735495;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level_@param checkInherited whether to explicitly check the superclasses and_interfaces for the annotation type as well (even if the annotation type_is not marked as inherited itself);public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType, boolean checkInherited) {_		this.classFilter = new AnnotationClassFilter(classAnnotationType, checkInherited)__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level,param,check,inherited,whether,to,explicitly,check,the,superclasses,and,interfaces,for,the,annotation,type,as,well,even,if,the,annotation,type,is,not,marked,as,inherited,itself;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,boolean,check,inherited,this,class,filter,new,annotation,class,filter,class,annotation,type,check,inherited,this,method,matcher,method,matcher,true
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType, boolean checkInherited);1357119239;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level_@param checkInherited whether to explicitly check the superclasses and_interfaces for the annotation type as well (even if the annotation type_is not marked as inherited itself);public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType, boolean checkInherited) {_		this.classFilter = new AnnotationClassFilter(classAnnotationType, checkInherited)__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level,param,check,inherited,whether,to,explicitly,check,the,superclasses,and,interfaces,for,the,annotation,type,as,well,even,if,the,annotation,type,is,not,marked,as,inherited,itself;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,boolean,check,inherited,this,class,filter,new,annotation,class,filter,class,annotation,type,check,inherited,this,method,matcher,method,matcher,true
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType, boolean checkInherited);1368482696;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level_@param checkInherited whether to explicitly check the superclasses and_interfaces for the annotation type as well (even if the annotation type_is not marked as inherited itself);public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType, boolean checkInherited) {_		this.classFilter = new AnnotationClassFilter(classAnnotationType, checkInherited)__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level,param,check,inherited,whether,to,explicitly,check,the,superclasses,and,interfaces,for,the,annotation,type,as,well,even,if,the,annotation,type,is,not,marked,as,inherited,itself;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,boolean,check,inherited,this,class,filter,new,annotation,class,filter,class,annotation,type,check,inherited,this,method,matcher,method,matcher,true
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType, boolean checkInherited);1388872053;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level_@param checkInherited whether to explicitly check the superclasses and_interfaces for the annotation type as well (even if the annotation type_is not marked as inherited itself);public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType, boolean checkInherited) {_		this.classFilter = new AnnotationClassFilter(classAnnotationType, checkInherited)__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level,param,check,inherited,whether,to,explicitly,check,the,superclasses,and,interfaces,for,the,annotation,type,as,well,even,if,the,annotation,type,is,not,marked,as,inherited,itself;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,boolean,check,inherited,this,class,filter,new,annotation,class,filter,class,annotation,type,check,inherited,this,method,matcher,method,matcher,true
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType, boolean checkInherited);1493223400;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level_@param checkInherited whether to also check the superclasses and interfaces_as well as meta-annotations for the annotation type_@see AnnotationClassFilter#AnnotationClassFilter(Class, boolean);public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType, boolean checkInherited) {_		this.classFilter = new AnnotationClassFilter(classAnnotationType, checkInherited)__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level,param,check,inherited,whether,to,also,check,the,superclasses,and,interfaces,as,well,as,meta,annotations,for,the,annotation,type,see,annotation,class,filter,annotation,class,filter,class,boolean;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,boolean,check,inherited,this,class,filter,new,annotation,class,filter,class,annotation,type,check,inherited,this,method,matcher,method,matcher,true
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType, boolean checkInherited);1495868221;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level_@param checkInherited whether to also check the superclasses and interfaces_as well as meta-annotations for the annotation type_@see AnnotationClassFilter#AnnotationClassFilter(Class, boolean);public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType, boolean checkInherited) {_		this.classFilter = new AnnotationClassFilter(classAnnotationType, checkInherited)__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level,param,check,inherited,whether,to,also,check,the,superclasses,and,interfaces,as,well,as,meta,annotations,for,the,annotation,type,see,annotation,class,filter,annotation,class,filter,class,boolean;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,boolean,check,inherited,this,class,filter,new,annotation,class,filter,class,annotation,type,check,inherited,this,method,matcher,method,matcher,true
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType, boolean checkInherited);1496837955;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level_@param checkInherited whether to also check the superclasses and interfaces_as well as meta-annotations for the annotation type_@see AnnotationClassFilter#AnnotationClassFilter(Class, boolean);public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType, boolean checkInherited) {_		this.classFilter = new AnnotationClassFilter(classAnnotationType, checkInherited)__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level,param,check,inherited,whether,to,also,check,the,superclasses,and,interfaces,as,well,as,meta,annotations,for,the,annotation,type,see,annotation,class,filter,annotation,class,filter,class,boolean;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,boolean,check,inherited,this,class,filter,new,annotation,class,filter,class,annotation,type,check,inherited,this,method,matcher,method,matcher,true
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType, boolean checkInherited);1498780456;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level_@param checkInherited whether to also check the superclasses and interfaces_as well as meta-annotations for the annotation type_@see AnnotationClassFilter#AnnotationClassFilter(Class, boolean);public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType, boolean checkInherited) {_		this.classFilter = new AnnotationClassFilter(classAnnotationType, checkInherited)__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level,param,check,inherited,whether,to,also,check,the,superclasses,and,interfaces,as,well,as,meta,annotations,for,the,annotation,type,see,annotation,class,filter,annotation,class,filter,class,boolean;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,boolean,check,inherited,this,class,filter,new,annotation,class,filter,class,annotation,type,check,inherited,this,method,matcher,method,matcher,true
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut( 			Class<? extends Annotation> classAnnotationType, Class<? extends Annotation> methodAnnotationType);1328020251;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level_(can be <code>null</code>)_@param methodAnnotationType the annotation type to look for at the method level_(can be <code>null</code>);public AnnotationMatchingPointcut(_			Class<? extends Annotation> classAnnotationType, Class<? extends Annotation> methodAnnotationType) {__		Assert.isTrue((classAnnotationType != null || methodAnnotationType != null),_				"Either Class annotation type or Method annotation type needs to be specified (or both)")___		if (classAnnotationType != null) {_			this.classFilter = new AnnotationClassFilter(classAnnotationType)__		}_		else {_			this.classFilter = ClassFilter.TRUE__		}__		if (methodAnnotationType != null) {_			this.methodMatcher = new AnnotationMethodMatcher(methodAnnotationType)__		}_		else {_			this.methodMatcher = MethodMatcher.TRUE__		}_	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level,can,be,code,null,code,param,method,annotation,type,the,annotation,type,to,look,for,at,the,method,level,can,be,code,null,code;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,class,extends,annotation,method,annotation,type,assert,is,true,class,annotation,type,null,method,annotation,type,null,either,class,annotation,type,or,method,annotation,type,needs,to,be,specified,or,both,if,class,annotation,type,null,this,class,filter,new,annotation,class,filter,class,annotation,type,else,this,class,filter,class,filter,true,if,method,annotation,type,null,this,method,matcher,new,annotation,method,matcher,method,annotation,type,else,this,method,matcher,method,matcher,true
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut( 			Class<? extends Annotation> classAnnotationType, Class<? extends Annotation> methodAnnotationType);1356735495;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level_(can be {@code null})_@param methodAnnotationType the annotation type to look for at the method level_(can be {@code null});public AnnotationMatchingPointcut(_			Class<? extends Annotation> classAnnotationType, Class<? extends Annotation> methodAnnotationType) {__		Assert.isTrue((classAnnotationType != null || methodAnnotationType != null),_				"Either Class annotation type or Method annotation type needs to be specified (or both)")___		if (classAnnotationType != null) {_			this.classFilter = new AnnotationClassFilter(classAnnotationType)__		}_		else {_			this.classFilter = ClassFilter.TRUE__		}__		if (methodAnnotationType != null) {_			this.methodMatcher = new AnnotationMethodMatcher(methodAnnotationType)__		}_		else {_			this.methodMatcher = MethodMatcher.TRUE__		}_	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level,can,be,code,null,param,method,annotation,type,the,annotation,type,to,look,for,at,the,method,level,can,be,code,null;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,class,extends,annotation,method,annotation,type,assert,is,true,class,annotation,type,null,method,annotation,type,null,either,class,annotation,type,or,method,annotation,type,needs,to,be,specified,or,both,if,class,annotation,type,null,this,class,filter,new,annotation,class,filter,class,annotation,type,else,this,class,filter,class,filter,true,if,method,annotation,type,null,this,method,matcher,new,annotation,method,matcher,method,annotation,type,else,this,method,matcher,method,matcher,true
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut( 			Class<? extends Annotation> classAnnotationType, Class<? extends Annotation> methodAnnotationType);1357119239;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level_(can be {@code null})_@param methodAnnotationType the annotation type to look for at the method level_(can be {@code null});public AnnotationMatchingPointcut(_			Class<? extends Annotation> classAnnotationType, Class<? extends Annotation> methodAnnotationType) {__		Assert.isTrue((classAnnotationType != null || methodAnnotationType != null),_				"Either Class annotation type or Method annotation type needs to be specified (or both)")___		if (classAnnotationType != null) {_			this.classFilter = new AnnotationClassFilter(classAnnotationType)__		}_		else {_			this.classFilter = ClassFilter.TRUE__		}__		if (methodAnnotationType != null) {_			this.methodMatcher = new AnnotationMethodMatcher(methodAnnotationType)__		}_		else {_			this.methodMatcher = MethodMatcher.TRUE__		}_	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level,can,be,code,null,param,method,annotation,type,the,annotation,type,to,look,for,at,the,method,level,can,be,code,null;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,class,extends,annotation,method,annotation,type,assert,is,true,class,annotation,type,null,method,annotation,type,null,either,class,annotation,type,or,method,annotation,type,needs,to,be,specified,or,both,if,class,annotation,type,null,this,class,filter,new,annotation,class,filter,class,annotation,type,else,this,class,filter,class,filter,true,if,method,annotation,type,null,this,method,matcher,new,annotation,method,matcher,method,annotation,type,else,this,method,matcher,method,matcher,true
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut( 			Class<? extends Annotation> classAnnotationType, Class<? extends Annotation> methodAnnotationType);1368482696;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level_(can be {@code null})_@param methodAnnotationType the annotation type to look for at the method level_(can be {@code null});public AnnotationMatchingPointcut(_			Class<? extends Annotation> classAnnotationType, Class<? extends Annotation> methodAnnotationType) {__		Assert.isTrue((classAnnotationType != null || methodAnnotationType != null),_				"Either Class annotation type or Method annotation type needs to be specified (or both)")___		if (classAnnotationType != null) {_			this.classFilter = new AnnotationClassFilter(classAnnotationType)__		}_		else {_			this.classFilter = ClassFilter.TRUE__		}__		if (methodAnnotationType != null) {_			this.methodMatcher = new AnnotationMethodMatcher(methodAnnotationType)__		}_		else {_			this.methodMatcher = MethodMatcher.TRUE__		}_	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level,can,be,code,null,param,method,annotation,type,the,annotation,type,to,look,for,at,the,method,level,can,be,code,null;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,class,extends,annotation,method,annotation,type,assert,is,true,class,annotation,type,null,method,annotation,type,null,either,class,annotation,type,or,method,annotation,type,needs,to,be,specified,or,both,if,class,annotation,type,null,this,class,filter,new,annotation,class,filter,class,annotation,type,else,this,class,filter,class,filter,true,if,method,annotation,type,null,this,method,matcher,new,annotation,method,matcher,method,annotation,type,else,this,method,matcher,method,matcher,true
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut( 			Class<? extends Annotation> classAnnotationType, Class<? extends Annotation> methodAnnotationType);1388872053;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level_(can be {@code null})_@param methodAnnotationType the annotation type to look for at the method level_(can be {@code null});public AnnotationMatchingPointcut(_			Class<? extends Annotation> classAnnotationType, Class<? extends Annotation> methodAnnotationType) {__		Assert.isTrue((classAnnotationType != null || methodAnnotationType != null),_				"Either Class annotation type or Method annotation type needs to be specified (or both)")___		if (classAnnotationType != null) {_			this.classFilter = new AnnotationClassFilter(classAnnotationType)__		}_		else {_			this.classFilter = ClassFilter.TRUE__		}__		if (methodAnnotationType != null) {_			this.methodMatcher = new AnnotationMethodMatcher(methodAnnotationType)__		}_		else {_			this.methodMatcher = MethodMatcher.TRUE__		}_	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level,can,be,code,null,param,method,annotation,type,the,annotation,type,to,look,for,at,the,method,level,can,be,code,null;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,class,extends,annotation,method,annotation,type,assert,is,true,class,annotation,type,null,method,annotation,type,null,either,class,annotation,type,or,method,annotation,type,needs,to,be,specified,or,both,if,class,annotation,type,null,this,class,filter,new,annotation,class,filter,class,annotation,type,else,this,class,filter,class,filter,true,if,method,annotation,type,null,this,method,matcher,new,annotation,method,matcher,method,annotation,type,else,this,method,matcher,method,matcher,true
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut( 			Class<? extends Annotation> classAnnotationType, Class<? extends Annotation> methodAnnotationType);1493223400;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level_(can be {@code null})_@param methodAnnotationType the annotation type to look for at the method level_(can be {@code null});public AnnotationMatchingPointcut(_			Class<? extends Annotation> classAnnotationType, Class<? extends Annotation> methodAnnotationType) {__		this(classAnnotationType, methodAnnotationType, false)__	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level,can,be,code,null,param,method,annotation,type,the,annotation,type,to,look,for,at,the,method,level,can,be,code,null;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,class,extends,annotation,method,annotation,type,this,class,annotation,type,method,annotation,type,false
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType, 			Class<? extends Annotation> methodAnnotationType, boolean checkInherited);1493223400;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level_(can be {@code null})_@param methodAnnotationType the annotation type to look for at the method level_(can be {@code null})_@param checkInherited whether to also check the superclasses and interfaces_as well as meta-annotations for the annotation type_@since 5.0_@see AnnotationClassFilter#AnnotationClassFilter(Class, boolean)_@see AnnotationMethodMatcher#AnnotationMethodMatcher(Class, boolean);public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType,_			Class<? extends Annotation> methodAnnotationType, boolean checkInherited) {__		Assert.isTrue((classAnnotationType != null || methodAnnotationType != null),_				"Either Class annotation type or Method annotation type needs to be specified (or both)")___		if (classAnnotationType != null) {_			this.classFilter = new AnnotationClassFilter(classAnnotationType, checkInherited)__		}_		else {_			this.classFilter = ClassFilter.TRUE__		}__		if (methodAnnotationType != null) {_			this.methodMatcher = new AnnotationMethodMatcher(methodAnnotationType, checkInherited)__		}_		else {_			this.methodMatcher = MethodMatcher.TRUE__		}_	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level,can,be,code,null,param,method,annotation,type,the,annotation,type,to,look,for,at,the,method,level,can,be,code,null,param,check,inherited,whether,to,also,check,the,superclasses,and,interfaces,as,well,as,meta,annotations,for,the,annotation,type,since,5,0,see,annotation,class,filter,annotation,class,filter,class,boolean,see,annotation,method,matcher,annotation,method,matcher,class,boolean;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,class,extends,annotation,method,annotation,type,boolean,check,inherited,assert,is,true,class,annotation,type,null,method,annotation,type,null,either,class,annotation,type,or,method,annotation,type,needs,to,be,specified,or,both,if,class,annotation,type,null,this,class,filter,new,annotation,class,filter,class,annotation,type,check,inherited,else,this,class,filter,class,filter,true,if,method,annotation,type,null,this,method,matcher,new,annotation,method,matcher,method,annotation,type,check,inherited,else,this,method,matcher,method,matcher,true
AnnotationMatchingPointcut -> public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType, 			Class<? extends Annotation> methodAnnotationType, boolean checkInherited);1495868221;Create a new AnnotationMatchingPointcut for the given annotation type._@param classAnnotationType the annotation type to look for at the class level_(can be {@code null})_@param methodAnnotationType the annotation type to look for at the method level_(can be {@code null})_@param checkInherited whether to also check the superclasses and interfaces_as well as meta-annotations for the annotation type_@since 5.0_@see AnnotationClassFilter#AnnotationClassFilter(Class, boolean)_@see AnnotationMethodMatcher#AnnotationMethodMatcher(Class, boolean);public AnnotationMatchingPointcut(Class<? extends Annotation> classAnnotationType,_			Class<? extends Annotation> methodAnnotationType, boolean checkInherited) {__		Assert.isTrue((classAnnotationType != null || methodAnnotationType != null),_				"Either Class annotation type or Method annotation type needs to be specified (or both)")___		if (classAnnotationType != null) {_			this.classFilter = new AnnotationClassFilter(classAnnotationType, checkInherited)__		}_		else {_			this.classFilter = ClassFilter.TRUE__		}__		if (methodAnnotationType != null) {_			this.methodMatcher = new AnnotationMethodMatcher(methodAnnotationType, checkInherited)__		}_		else {_			this.methodMatcher = MethodMatcher.TRUE__		}_	};create,a,new,annotation,matching,pointcut,for,the,given,annotation,type,param,class,annotation,type,the,annotation,type,to,look,for,at,the,class,level,can,be,code,null,param,method,annotation,type,the,annotation,type,to,look,for,at,the,method,level,can,be,code,null,param,check,inherited,whether,to,also,check,the,superclasses,and,interfaces,as,well,as,meta,annotations,for,the,annotation,type,since,5,0,see,annotation,class,filter,annotation,class,filter,class,boolean,see,annotation,method,matcher,annotation,method,matcher,class,boolean;public,annotation,matching,pointcut,class,extends,annotation,class,annotation,type,class,extends,annotation,method,annotation,type,boolean,check,inherited,assert,is,true,class,annotation,type,null,method,annotation,type,null,either,class,annotation,type,or,method,annotation,type,needs,to,be,specified,or,both,if,class,annotation,type,null,this,class,filter,new,annotation,class,filter,class,annotation,type,check,inherited,else,this,class,filter,class,filter,true,if,method,annotation,type,null,this,method,matcher,new,annotation,method,matcher,method,annotation,type,check,inherited,else,this,method,matcher,method,matcher,true
