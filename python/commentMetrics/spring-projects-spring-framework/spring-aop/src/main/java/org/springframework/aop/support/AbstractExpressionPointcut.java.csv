# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractExpressionPointcut -> public String getLocation();1328020251;Return location information about the pointcut expression_if available. This is useful in debugging._@return location information as a human-readable String,_or <code>null</code> if none is available;public String getLocation() {_		return this.location__	};return,location,information,about,the,pointcut,expression,if,available,this,is,useful,in,debugging,return,location,information,as,a,human,readable,string,or,code,null,code,if,none,is,available;public,string,get,location,return,this,location
AbstractExpressionPointcut -> public String getLocation();1356735495;Return location information about the pointcut expression_if available. This is useful in debugging._@return location information as a human-readable String,_or {@code null} if none is available;public String getLocation() {_		return this.location__	};return,location,information,about,the,pointcut,expression,if,available,this,is,useful,in,debugging,return,location,information,as,a,human,readable,string,or,code,null,if,none,is,available;public,string,get,location,return,this,location
AbstractExpressionPointcut -> public String getLocation();1357119239;Return location information about the pointcut expression_if available. This is useful in debugging._@return location information as a human-readable String,_or {@code null} if none is available;public String getLocation() {_		return this.location__	};return,location,information,about,the,pointcut,expression,if,available,this,is,useful,in,debugging,return,location,information,as,a,human,readable,string,or,code,null,if,none,is,available;public,string,get,location,return,this,location
AbstractExpressionPointcut -> public String getLocation();1368482696;Return location information about the pointcut expression_if available. This is useful in debugging._@return location information as a human-readable String,_or {@code null} if none is available;public String getLocation() {_		return this.location__	};return,location,information,about,the,pointcut,expression,if,available,this,is,useful,in,debugging,return,location,information,as,a,human,readable,string,or,code,null,if,none,is,available;public,string,get,location,return,this,location
AbstractExpressionPointcut -> protected void onSetExpression(@Nullable String expression) throws IllegalArgumentException;1500448076;Called when a new pointcut expression is set._The expression should be parsed at this point if possible._<p>This implementation is empty._@param expression expression to set_@throws IllegalArgumentException if the expression is invalid_@see #setExpression;protected void onSetExpression(@Nullable String expression) throws IllegalArgumentException {_	};called,when,a,new,pointcut,expression,is,set,the,expression,should,be,parsed,at,this,point,if,possible,p,this,implementation,is,empty,param,expression,expression,to,set,throws,illegal,argument,exception,if,the,expression,is,invalid,see,set,expression;protected,void,on,set,expression,nullable,string,expression,throws,illegal,argument,exception
AbstractExpressionPointcut -> protected void onSetExpression(@Nullable String expression) throws IllegalArgumentException;1500495740;Called when a new pointcut expression is set._The expression should be parsed at this point if possible._<p>This implementation is empty._@param expression expression to set_@throws IllegalArgumentException if the expression is invalid_@see #setExpression;protected void onSetExpression(@Nullable String expression) throws IllegalArgumentException {_	};called,when,a,new,pointcut,expression,is,set,the,expression,should,be,parsed,at,this,point,if,possible,p,this,implementation,is,empty,param,expression,expression,to,set,throws,illegal,argument,exception,if,the,expression,is,invalid,see,set,expression;protected,void,on,set,expression,nullable,string,expression,throws,illegal,argument,exception
AbstractExpressionPointcut -> public String getExpression();1328020251;Return this pointcut's expression.;public String getExpression() {_		return this.expression__	};return,this,pointcut,s,expression;public,string,get,expression,return,this,expression
AbstractExpressionPointcut -> public String getExpression();1357119239;Return this pointcut's expression.;public String getExpression() {_		return this.expression__	};return,this,pointcut,s,expression;public,string,get,expression,return,this,expression
AbstractExpressionPointcut -> @Override 	public String getExpression();1356735495;Return this pointcut's expression.;@Override_	public String getExpression() {_		return this.expression__	};return,this,pointcut,s,expression;override,public,string,get,expression,return,this,expression
AbstractExpressionPointcut -> @Override 	public String getExpression();1368482696;Return this pointcut's expression.;@Override_	public String getExpression() {_		return this.expression__	};return,this,pointcut,s,expression;override,public,string,get,expression,return,this,expression
AbstractExpressionPointcut -> @Override 	public String getExpression();1495868221;Return this pointcut's expression.;@Override_	public String getExpression() {_		return this.expression__	};return,this,pointcut,s,expression;override,public,string,get,expression,return,this,expression
AbstractExpressionPointcut -> @Override 	public String getExpression();1498780456;Return this pointcut's expression.;@Override_	public String getExpression() {_		return this.expression__	};return,this,pointcut,s,expression;override,public,string,get,expression,return,this,expression
AbstractExpressionPointcut -> @Override 	public String getExpression();1500448076;Return this pointcut's expression.;@Override_	public String getExpression() {_		return this.expression__	};return,this,pointcut,s,expression;override,public,string,get,expression,return,this,expression
AbstractExpressionPointcut -> public void setLocation(String location);1328020251;Set the location for debugging.;public void setLocation(String location) {_		this.location = location__	};set,the,location,for,debugging;public,void,set,location,string,location,this,location,location
AbstractExpressionPointcut -> public void setLocation(String location);1356735495;Set the location for debugging.;public void setLocation(String location) {_		this.location = location__	};set,the,location,for,debugging;public,void,set,location,string,location,this,location,location
AbstractExpressionPointcut -> public void setLocation(String location);1357119239;Set the location for debugging.;public void setLocation(String location) {_		this.location = location__	};set,the,location,for,debugging;public,void,set,location,string,location,this,location,location
AbstractExpressionPointcut -> public void setLocation(String location);1368482696;Set the location for debugging.;public void setLocation(String location) {_		this.location = location__	};set,the,location,for,debugging;public,void,set,location,string,location,this,location,location
AbstractExpressionPointcut -> public void setLocation(String location);1495868221;Set the location for debugging.;public void setLocation(String location) {_		this.location = location__	};set,the,location,for,debugging;public,void,set,location,string,location,this,location,location
AbstractExpressionPointcut -> public void setLocation(String location);1498780456;Set the location for debugging.;public void setLocation(String location) {_		this.location = location__	};set,the,location,for,debugging;public,void,set,location,string,location,this,location,location
AbstractExpressionPointcut -> protected void onSetExpression(String expression) throws IllegalArgumentException;1328020251;Called when a new pointcut expression is set._The expression should be parsed at this point if possible._<p>This implementation is empty._@param expression expression to set_@throws IllegalArgumentException if the expression is invalid_@see #setExpression;protected void onSetExpression(String expression) throws IllegalArgumentException {_	};called,when,a,new,pointcut,expression,is,set,the,expression,should,be,parsed,at,this,point,if,possible,p,this,implementation,is,empty,param,expression,expression,to,set,throws,illegal,argument,exception,if,the,expression,is,invalid,see,set,expression;protected,void,on,set,expression,string,expression,throws,illegal,argument,exception
AbstractExpressionPointcut -> protected void onSetExpression(String expression) throws IllegalArgumentException;1356735495;Called when a new pointcut expression is set._The expression should be parsed at this point if possible._<p>This implementation is empty._@param expression expression to set_@throws IllegalArgumentException if the expression is invalid_@see #setExpression;protected void onSetExpression(String expression) throws IllegalArgumentException {_	};called,when,a,new,pointcut,expression,is,set,the,expression,should,be,parsed,at,this,point,if,possible,p,this,implementation,is,empty,param,expression,expression,to,set,throws,illegal,argument,exception,if,the,expression,is,invalid,see,set,expression;protected,void,on,set,expression,string,expression,throws,illegal,argument,exception
AbstractExpressionPointcut -> protected void onSetExpression(String expression) throws IllegalArgumentException;1357119239;Called when a new pointcut expression is set._The expression should be parsed at this point if possible._<p>This implementation is empty._@param expression expression to set_@throws IllegalArgumentException if the expression is invalid_@see #setExpression;protected void onSetExpression(String expression) throws IllegalArgumentException {_	};called,when,a,new,pointcut,expression,is,set,the,expression,should,be,parsed,at,this,point,if,possible,p,this,implementation,is,empty,param,expression,expression,to,set,throws,illegal,argument,exception,if,the,expression,is,invalid,see,set,expression;protected,void,on,set,expression,string,expression,throws,illegal,argument,exception
AbstractExpressionPointcut -> protected void onSetExpression(String expression) throws IllegalArgumentException;1368482696;Called when a new pointcut expression is set._The expression should be parsed at this point if possible._<p>This implementation is empty._@param expression expression to set_@throws IllegalArgumentException if the expression is invalid_@see #setExpression;protected void onSetExpression(String expression) throws IllegalArgumentException {_	};called,when,a,new,pointcut,expression,is,set,the,expression,should,be,parsed,at,this,point,if,possible,p,this,implementation,is,empty,param,expression,expression,to,set,throws,illegal,argument,exception,if,the,expression,is,invalid,see,set,expression;protected,void,on,set,expression,string,expression,throws,illegal,argument,exception
AbstractExpressionPointcut -> protected void onSetExpression(String expression) throws IllegalArgumentException;1495868221;Called when a new pointcut expression is set._The expression should be parsed at this point if possible._<p>This implementation is empty._@param expression expression to set_@throws IllegalArgumentException if the expression is invalid_@see #setExpression;protected void onSetExpression(String expression) throws IllegalArgumentException {_	};called,when,a,new,pointcut,expression,is,set,the,expression,should,be,parsed,at,this,point,if,possible,p,this,implementation,is,empty,param,expression,expression,to,set,throws,illegal,argument,exception,if,the,expression,is,invalid,see,set,expression;protected,void,on,set,expression,string,expression,throws,illegal,argument,exception
AbstractExpressionPointcut -> protected void onSetExpression(String expression) throws IllegalArgumentException;1498780456;Called when a new pointcut expression is set._The expression should be parsed at this point if possible._<p>This implementation is empty._@param expression expression to set_@throws IllegalArgumentException if the expression is invalid_@see #setExpression;protected void onSetExpression(String expression) throws IllegalArgumentException {_	};called,when,a,new,pointcut,expression,is,set,the,expression,should,be,parsed,at,this,point,if,possible,p,this,implementation,is,empty,param,expression,expression,to,set,throws,illegal,argument,exception,if,the,expression,is,invalid,see,set,expression;protected,void,on,set,expression,string,expression,throws,illegal,argument,exception
AbstractExpressionPointcut -> @Nullable 	public String getLocation();1495868221;Return location information about the pointcut expression_if available. This is useful in debugging._@return location information as a human-readable String,_or {@code null} if none is available;@Nullable_	public String getLocation() {_		return this.location__	};return,location,information,about,the,pointcut,expression,if,available,this,is,useful,in,debugging,return,location,information,as,a,human,readable,string,or,code,null,if,none,is,available;nullable,public,string,get,location,return,this,location
AbstractExpressionPointcut -> @Nullable 	public String getLocation();1498780456;Return location information about the pointcut expression_if available. This is useful in debugging._@return location information as a human-readable String,_or {@code null} if none is available;@Nullable_	public String getLocation() {_		return this.location__	};return,location,information,about,the,pointcut,expression,if,available,this,is,useful,in,debugging,return,location,information,as,a,human,readable,string,or,code,null,if,none,is,available;nullable,public,string,get,location,return,this,location
AbstractExpressionPointcut -> @Nullable 	public String getLocation();1500448076;Return location information about the pointcut expression_if available. This is useful in debugging._@return location information as a human-readable String,_or {@code null} if none is available;@Nullable_	public String getLocation() {_		return this.location__	};return,location,information,about,the,pointcut,expression,if,available,this,is,useful,in,debugging,return,location,information,as,a,human,readable,string,or,code,null,if,none,is,available;nullable,public,string,get,location,return,this,location
AbstractExpressionPointcut -> @Nullable 	public String getLocation();1500495740;Return location information about the pointcut expression_if available. This is useful in debugging._@return location information as a human-readable String,_or {@code null} if none is available;@Nullable_	public String getLocation() {_		return this.location__	};return,location,information,about,the,pointcut,expression,if,available,this,is,useful,in,debugging,return,location,information,as,a,human,readable,string,or,code,null,if,none,is,available;nullable,public,string,get,location,return,this,location
AbstractExpressionPointcut -> public void setLocation(@Nullable String location);1500448076;Set the location for debugging.;public void setLocation(@Nullable String location) {_		this.location = location__	};set,the,location,for,debugging;public,void,set,location,nullable,string,location,this,location,location
AbstractExpressionPointcut -> public void setLocation(@Nullable String location);1500495740;Set the location for debugging.;public void setLocation(@Nullable String location) {_		this.location = location__	};set,the,location,for,debugging;public,void,set,location,nullable,string,location,this,location,location
