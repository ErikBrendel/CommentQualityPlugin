# id;timestamp;commentText;codeText;commentWords;codeWords
ComposablePointcut -> public ComposablePointcut intersection(ClassFilter other);1328020251;Apply an intersection with the given ClassFilter._@param other the ClassFilter to apply an intersection with_@return this composable pointcut (for call chaining);public ComposablePointcut intersection(ClassFilter other) {_		this.classFilter = ClassFilters.intersection(this.classFilter, other)__		return this__	};apply,an,intersection,with,the,given,class,filter,param,other,the,class,filter,to,apply,an,intersection,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,intersection,class,filter,other,this,class,filter,class,filters,intersection,this,class,filter,other,return,this
ComposablePointcut -> public ComposablePointcut intersection(ClassFilter other);1356735495;Apply an intersection with the given ClassFilter._@param other the ClassFilter to apply an intersection with_@return this composable pointcut (for call chaining);public ComposablePointcut intersection(ClassFilter other) {_		this.classFilter = ClassFilters.intersection(this.classFilter, other)__		return this__	};apply,an,intersection,with,the,given,class,filter,param,other,the,class,filter,to,apply,an,intersection,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,intersection,class,filter,other,this,class,filter,class,filters,intersection,this,class,filter,other,return,this
ComposablePointcut -> public ComposablePointcut intersection(ClassFilter other);1357119239;Apply an intersection with the given ClassFilter._@param other the ClassFilter to apply an intersection with_@return this composable pointcut (for call chaining);public ComposablePointcut intersection(ClassFilter other) {_		this.classFilter = ClassFilters.intersection(this.classFilter, other)__		return this__	};apply,an,intersection,with,the,given,class,filter,param,other,the,class,filter,to,apply,an,intersection,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,intersection,class,filter,other,this,class,filter,class,filters,intersection,this,class,filter,other,return,this
ComposablePointcut -> public ComposablePointcut intersection(ClassFilter other);1368482696;Apply an intersection with the given ClassFilter._@param other the ClassFilter to apply an intersection with_@return this composable pointcut (for call chaining);public ComposablePointcut intersection(ClassFilter other) {_		this.classFilter = ClassFilters.intersection(this.classFilter, other)__		return this__	};apply,an,intersection,with,the,given,class,filter,param,other,the,class,filter,to,apply,an,intersection,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,intersection,class,filter,other,this,class,filter,class,filters,intersection,this,class,filter,other,return,this
ComposablePointcut -> public ComposablePointcut intersection(ClassFilter other);1388872086;Apply an intersection with the given ClassFilter._@param other the ClassFilter to apply an intersection with_@return this composable pointcut (for call chaining);public ComposablePointcut intersection(ClassFilter other) {_		this.classFilter = ClassFilters.intersection(this.classFilter, other)__		return this__	};apply,an,intersection,with,the,given,class,filter,param,other,the,class,filter,to,apply,an,intersection,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,intersection,class,filter,other,this,class,filter,class,filters,intersection,this,class,filter,other,return,this
ComposablePointcut -> public ComposablePointcut intersection(ClassFilter other);1498780456;Apply an intersection with the given ClassFilter._@param other the ClassFilter to apply an intersection with_@return this composable pointcut (for call chaining);public ComposablePointcut intersection(ClassFilter other) {_		this.classFilter = ClassFilters.intersection(this.classFilter, other)__		return this__	};apply,an,intersection,with,the,given,class,filter,param,other,the,class,filter,to,apply,an,intersection,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,intersection,class,filter,other,this,class,filter,class,filters,intersection,this,class,filter,other,return,this
ComposablePointcut -> public ComposablePointcut intersection(ClassFilter other);1530174524;Apply an intersection with the given ClassFilter._@param other the ClassFilter to apply an intersection with_@return this composable pointcut (for call chaining);public ComposablePointcut intersection(ClassFilter other) {_		this.classFilter = ClassFilters.intersection(this.classFilter, other)__		return this__	};apply,an,intersection,with,the,given,class,filter,param,other,the,class,filter,to,apply,an,intersection,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,intersection,class,filter,other,this,class,filter,class,filters,intersection,this,class,filter,other,return,this
ComposablePointcut -> public ComposablePointcut intersection(Pointcut other);1328020251;Apply an intersection with the given Pointcut._@param other the Pointcut to apply an intersection with_@return this composable pointcut (for call chaining);public ComposablePointcut intersection(Pointcut other) {_		this.classFilter = ClassFilters.intersection(this.classFilter, other.getClassFilter())__		this.methodMatcher = MethodMatchers.intersection(this.methodMatcher, other.getMethodMatcher())__		return this__	};apply,an,intersection,with,the,given,pointcut,param,other,the,pointcut,to,apply,an,intersection,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,intersection,pointcut,other,this,class,filter,class,filters,intersection,this,class,filter,other,get,class,filter,this,method,matcher,method,matchers,intersection,this,method,matcher,other,get,method,matcher,return,this
ComposablePointcut -> public ComposablePointcut intersection(Pointcut other);1356735495;Apply an intersection with the given Pointcut._@param other the Pointcut to apply an intersection with_@return this composable pointcut (for call chaining);public ComposablePointcut intersection(Pointcut other) {_		this.classFilter = ClassFilters.intersection(this.classFilter, other.getClassFilter())__		this.methodMatcher = MethodMatchers.intersection(this.methodMatcher, other.getMethodMatcher())__		return this__	};apply,an,intersection,with,the,given,pointcut,param,other,the,pointcut,to,apply,an,intersection,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,intersection,pointcut,other,this,class,filter,class,filters,intersection,this,class,filter,other,get,class,filter,this,method,matcher,method,matchers,intersection,this,method,matcher,other,get,method,matcher,return,this
ComposablePointcut -> public ComposablePointcut intersection(Pointcut other);1357119239;Apply an intersection with the given Pointcut._@param other the Pointcut to apply an intersection with_@return this composable pointcut (for call chaining);public ComposablePointcut intersection(Pointcut other) {_		this.classFilter = ClassFilters.intersection(this.classFilter, other.getClassFilter())__		this.methodMatcher = MethodMatchers.intersection(this.methodMatcher, other.getMethodMatcher())__		return this__	};apply,an,intersection,with,the,given,pointcut,param,other,the,pointcut,to,apply,an,intersection,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,intersection,pointcut,other,this,class,filter,class,filters,intersection,this,class,filter,other,get,class,filter,this,method,matcher,method,matchers,intersection,this,method,matcher,other,get,method,matcher,return,this
ComposablePointcut -> public ComposablePointcut intersection(Pointcut other);1368482696;Apply an intersection with the given Pointcut._@param other the Pointcut to apply an intersection with_@return this composable pointcut (for call chaining);public ComposablePointcut intersection(Pointcut other) {_		this.classFilter = ClassFilters.intersection(this.classFilter, other.getClassFilter())__		this.methodMatcher = MethodMatchers.intersection(this.methodMatcher, other.getMethodMatcher())__		return this__	};apply,an,intersection,with,the,given,pointcut,param,other,the,pointcut,to,apply,an,intersection,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,intersection,pointcut,other,this,class,filter,class,filters,intersection,this,class,filter,other,get,class,filter,this,method,matcher,method,matchers,intersection,this,method,matcher,other,get,method,matcher,return,this
ComposablePointcut -> public ComposablePointcut intersection(Pointcut other);1388872086;Apply an intersection with the given Pointcut._@param other the Pointcut to apply an intersection with_@return this composable pointcut (for call chaining);public ComposablePointcut intersection(Pointcut other) {_		this.classFilter = ClassFilters.intersection(this.classFilter, other.getClassFilter())__		this.methodMatcher = MethodMatchers.intersection(this.methodMatcher, other.getMethodMatcher())__		return this__	};apply,an,intersection,with,the,given,pointcut,param,other,the,pointcut,to,apply,an,intersection,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,intersection,pointcut,other,this,class,filter,class,filters,intersection,this,class,filter,other,get,class,filter,this,method,matcher,method,matchers,intersection,this,method,matcher,other,get,method,matcher,return,this
ComposablePointcut -> public ComposablePointcut intersection(Pointcut other);1498780456;Apply an intersection with the given Pointcut._@param other the Pointcut to apply an intersection with_@return this composable pointcut (for call chaining);public ComposablePointcut intersection(Pointcut other) {_		this.classFilter = ClassFilters.intersection(this.classFilter, other.getClassFilter())__		this.methodMatcher = MethodMatchers.intersection(this.methodMatcher, other.getMethodMatcher())__		return this__	};apply,an,intersection,with,the,given,pointcut,param,other,the,pointcut,to,apply,an,intersection,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,intersection,pointcut,other,this,class,filter,class,filters,intersection,this,class,filter,other,get,class,filter,this,method,matcher,method,matchers,intersection,this,method,matcher,other,get,method,matcher,return,this
ComposablePointcut -> public ComposablePointcut intersection(Pointcut other);1530174524;Apply an intersection with the given Pointcut._@param other the Pointcut to apply an intersection with_@return this composable pointcut (for call chaining);public ComposablePointcut intersection(Pointcut other) {_		this.classFilter = ClassFilters.intersection(this.classFilter, other.getClassFilter())__		this.methodMatcher = MethodMatchers.intersection(this.methodMatcher, other.getMethodMatcher())__		return this__	};apply,an,intersection,with,the,given,pointcut,param,other,the,pointcut,to,apply,an,intersection,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,intersection,pointcut,other,this,class,filter,class,filters,intersection,this,class,filter,other,get,class,filter,this,method,matcher,method,matchers,intersection,this,method,matcher,other,get,method,matcher,return,this
ComposablePointcut -> public ComposablePointcut union(MethodMatcher other);1328020251;Apply a union with the given MethodMatcher._@param other the MethodMatcher to apply a union with_@return this composable pointcut (for call chaining);public ComposablePointcut union(MethodMatcher other) {_		this.methodMatcher = MethodMatchers.union(this.methodMatcher, other)__		return this__	};apply,a,union,with,the,given,method,matcher,param,other,the,method,matcher,to,apply,a,union,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,union,method,matcher,other,this,method,matcher,method,matchers,union,this,method,matcher,other,return,this
ComposablePointcut -> public ComposablePointcut union(MethodMatcher other);1356735495;Apply a union with the given MethodMatcher._@param other the MethodMatcher to apply a union with_@return this composable pointcut (for call chaining);public ComposablePointcut union(MethodMatcher other) {_		this.methodMatcher = MethodMatchers.union(this.methodMatcher, other)__		return this__	};apply,a,union,with,the,given,method,matcher,param,other,the,method,matcher,to,apply,a,union,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,union,method,matcher,other,this,method,matcher,method,matchers,union,this,method,matcher,other,return,this
ComposablePointcut -> public ComposablePointcut union(MethodMatcher other);1357119239;Apply a union with the given MethodMatcher._@param other the MethodMatcher to apply a union with_@return this composable pointcut (for call chaining);public ComposablePointcut union(MethodMatcher other) {_		this.methodMatcher = MethodMatchers.union(this.methodMatcher, other)__		return this__	};apply,a,union,with,the,given,method,matcher,param,other,the,method,matcher,to,apply,a,union,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,union,method,matcher,other,this,method,matcher,method,matchers,union,this,method,matcher,other,return,this
ComposablePointcut -> public ComposablePointcut union(MethodMatcher other);1368482696;Apply a union with the given MethodMatcher._@param other the MethodMatcher to apply a union with_@return this composable pointcut (for call chaining);public ComposablePointcut union(MethodMatcher other) {_		this.methodMatcher = MethodMatchers.union(this.methodMatcher, other)__		return this__	};apply,a,union,with,the,given,method,matcher,param,other,the,method,matcher,to,apply,a,union,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,union,method,matcher,other,this,method,matcher,method,matchers,union,this,method,matcher,other,return,this
ComposablePointcut -> public ComposablePointcut union(MethodMatcher other);1388872086;Apply a union with the given MethodMatcher._@param other the MethodMatcher to apply a union with_@return this composable pointcut (for call chaining);public ComposablePointcut union(MethodMatcher other) {_		this.methodMatcher = MethodMatchers.union(this.methodMatcher, other)__		return this__	};apply,a,union,with,the,given,method,matcher,param,other,the,method,matcher,to,apply,a,union,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,union,method,matcher,other,this,method,matcher,method,matchers,union,this,method,matcher,other,return,this
ComposablePointcut -> public ComposablePointcut union(MethodMatcher other);1498780456;Apply a union with the given MethodMatcher._@param other the MethodMatcher to apply a union with_@return this composable pointcut (for call chaining);public ComposablePointcut union(MethodMatcher other) {_		this.methodMatcher = MethodMatchers.union(this.methodMatcher, other)__		return this__	};apply,a,union,with,the,given,method,matcher,param,other,the,method,matcher,to,apply,a,union,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,union,method,matcher,other,this,method,matcher,method,matchers,union,this,method,matcher,other,return,this
ComposablePointcut -> public ComposablePointcut union(MethodMatcher other);1530174524;Apply a union with the given MethodMatcher._@param other the MethodMatcher to apply a union with_@return this composable pointcut (for call chaining);public ComposablePointcut union(MethodMatcher other) {_		this.methodMatcher = MethodMatchers.union(this.methodMatcher, other)__		return this__	};apply,a,union,with,the,given,method,matcher,param,other,the,method,matcher,to,apply,a,union,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,union,method,matcher,other,this,method,matcher,method,matchers,union,this,method,matcher,other,return,this
ComposablePointcut -> public ComposablePointcut(MethodMatcher methodMatcher);1328020251;Create a ComposablePointcut for the given MethodMatcher,_with <code>ClassFilter.TRUE</code>._@param methodMatcher the MethodMatcher to use;public ComposablePointcut(MethodMatcher methodMatcher) {_		Assert.notNull(methodMatcher, "MethodMatcher must not be null")__		this.classFilter = ClassFilter.TRUE__		this.methodMatcher = methodMatcher__	};create,a,composable,pointcut,for,the,given,method,matcher,with,code,class,filter,true,code,param,method,matcher,the,method,matcher,to,use;public,composable,pointcut,method,matcher,method,matcher,assert,not,null,method,matcher,method,matcher,must,not,be,null,this,class,filter,class,filter,true,this,method,matcher,method,matcher
ComposablePointcut -> public ComposablePointcut(MethodMatcher methodMatcher);1356735495;Create a ComposablePointcut for the given MethodMatcher,_with {@code ClassFilter.TRUE}._@param methodMatcher the MethodMatcher to use;public ComposablePointcut(MethodMatcher methodMatcher) {_		Assert.notNull(methodMatcher, "MethodMatcher must not be null")__		this.classFilter = ClassFilter.TRUE__		this.methodMatcher = methodMatcher__	};create,a,composable,pointcut,for,the,given,method,matcher,with,code,class,filter,true,param,method,matcher,the,method,matcher,to,use;public,composable,pointcut,method,matcher,method,matcher,assert,not,null,method,matcher,method,matcher,must,not,be,null,this,class,filter,class,filter,true,this,method,matcher,method,matcher
ComposablePointcut -> public ComposablePointcut(MethodMatcher methodMatcher);1357119239;Create a ComposablePointcut for the given MethodMatcher,_with {@code ClassFilter.TRUE}._@param methodMatcher the MethodMatcher to use;public ComposablePointcut(MethodMatcher methodMatcher) {_		Assert.notNull(methodMatcher, "MethodMatcher must not be null")__		this.classFilter = ClassFilter.TRUE__		this.methodMatcher = methodMatcher__	};create,a,composable,pointcut,for,the,given,method,matcher,with,code,class,filter,true,param,method,matcher,the,method,matcher,to,use;public,composable,pointcut,method,matcher,method,matcher,assert,not,null,method,matcher,method,matcher,must,not,be,null,this,class,filter,class,filter,true,this,method,matcher,method,matcher
ComposablePointcut -> public ComposablePointcut(MethodMatcher methodMatcher);1368482696;Create a ComposablePointcut for the given MethodMatcher,_with {@code ClassFilter.TRUE}._@param methodMatcher the MethodMatcher to use;public ComposablePointcut(MethodMatcher methodMatcher) {_		Assert.notNull(methodMatcher, "MethodMatcher must not be null")__		this.classFilter = ClassFilter.TRUE__		this.methodMatcher = methodMatcher__	};create,a,composable,pointcut,for,the,given,method,matcher,with,code,class,filter,true,param,method,matcher,the,method,matcher,to,use;public,composable,pointcut,method,matcher,method,matcher,assert,not,null,method,matcher,method,matcher,must,not,be,null,this,class,filter,class,filter,true,this,method,matcher,method,matcher
ComposablePointcut -> public ComposablePointcut(MethodMatcher methodMatcher);1388872086;Create a ComposablePointcut for the given MethodMatcher,_with {@code ClassFilter.TRUE}._@param methodMatcher the MethodMatcher to use;public ComposablePointcut(MethodMatcher methodMatcher) {_		Assert.notNull(methodMatcher, "MethodMatcher must not be null")__		this.classFilter = ClassFilter.TRUE__		this.methodMatcher = methodMatcher__	};create,a,composable,pointcut,for,the,given,method,matcher,with,code,class,filter,true,param,method,matcher,the,method,matcher,to,use;public,composable,pointcut,method,matcher,method,matcher,assert,not,null,method,matcher,method,matcher,must,not,be,null,this,class,filter,class,filter,true,this,method,matcher,method,matcher
ComposablePointcut -> public ComposablePointcut(MethodMatcher methodMatcher);1498780456;Create a ComposablePointcut for the given MethodMatcher,_with {@code ClassFilter.TRUE}._@param methodMatcher the MethodMatcher to use;public ComposablePointcut(MethodMatcher methodMatcher) {_		Assert.notNull(methodMatcher, "MethodMatcher must not be null")__		this.classFilter = ClassFilter.TRUE__		this.methodMatcher = methodMatcher__	};create,a,composable,pointcut,for,the,given,method,matcher,with,code,class,filter,true,param,method,matcher,the,method,matcher,to,use;public,composable,pointcut,method,matcher,method,matcher,assert,not,null,method,matcher,method,matcher,must,not,be,null,this,class,filter,class,filter,true,this,method,matcher,method,matcher
ComposablePointcut -> public ComposablePointcut(MethodMatcher methodMatcher);1530174524;Create a ComposablePointcut for the given MethodMatcher,_with {@code ClassFilter.TRUE}._@param methodMatcher the MethodMatcher to use;public ComposablePointcut(MethodMatcher methodMatcher) {_		Assert.notNull(methodMatcher, "MethodMatcher must not be null")__		this.classFilter = ClassFilter.TRUE__		this.methodMatcher = methodMatcher__	};create,a,composable,pointcut,for,the,given,method,matcher,with,code,class,filter,true,param,method,matcher,the,method,matcher,to,use;public,composable,pointcut,method,matcher,method,matcher,assert,not,null,method,matcher,method,matcher,must,not,be,null,this,class,filter,class,filter,true,this,method,matcher,method,matcher
ComposablePointcut -> public ComposablePointcut();1328020251;Create a default ComposablePointcut, with <code>ClassFilter.TRUE</code>_and <code>MethodMatcher.TRUE</code>.;public ComposablePointcut() {_		this.classFilter = ClassFilter.TRUE__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,default,composable,pointcut,with,code,class,filter,true,code,and,code,method,matcher,true,code;public,composable,pointcut,this,class,filter,class,filter,true,this,method,matcher,method,matcher,true
ComposablePointcut -> public ComposablePointcut();1356735495;Create a default ComposablePointcut, with {@code ClassFilter.TRUE}_and {@code MethodMatcher.TRUE}.;public ComposablePointcut() {_		this.classFilter = ClassFilter.TRUE__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,default,composable,pointcut,with,code,class,filter,true,and,code,method,matcher,true;public,composable,pointcut,this,class,filter,class,filter,true,this,method,matcher,method,matcher,true
ComposablePointcut -> public ComposablePointcut();1357119239;Create a default ComposablePointcut, with {@code ClassFilter.TRUE}_and {@code MethodMatcher.TRUE}.;public ComposablePointcut() {_		this.classFilter = ClassFilter.TRUE__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,default,composable,pointcut,with,code,class,filter,true,and,code,method,matcher,true;public,composable,pointcut,this,class,filter,class,filter,true,this,method,matcher,method,matcher,true
ComposablePointcut -> public ComposablePointcut();1368482696;Create a default ComposablePointcut, with {@code ClassFilter.TRUE}_and {@code MethodMatcher.TRUE}.;public ComposablePointcut() {_		this.classFilter = ClassFilter.TRUE__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,default,composable,pointcut,with,code,class,filter,true,and,code,method,matcher,true;public,composable,pointcut,this,class,filter,class,filter,true,this,method,matcher,method,matcher,true
ComposablePointcut -> public ComposablePointcut();1388872086;Create a default ComposablePointcut, with {@code ClassFilter.TRUE}_and {@code MethodMatcher.TRUE}.;public ComposablePointcut() {_		this.classFilter = ClassFilter.TRUE__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,default,composable,pointcut,with,code,class,filter,true,and,code,method,matcher,true;public,composable,pointcut,this,class,filter,class,filter,true,this,method,matcher,method,matcher,true
ComposablePointcut -> public ComposablePointcut();1498780456;Create a default ComposablePointcut, with {@code ClassFilter.TRUE}_and {@code MethodMatcher.TRUE}.;public ComposablePointcut() {_		this.classFilter = ClassFilter.TRUE__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,default,composable,pointcut,with,code,class,filter,true,and,code,method,matcher,true;public,composable,pointcut,this,class,filter,class,filter,true,this,method,matcher,method,matcher,true
ComposablePointcut -> public ComposablePointcut();1530174524;Create a default ComposablePointcut, with {@code ClassFilter.TRUE}_and {@code MethodMatcher.TRUE}.;public ComposablePointcut() {_		this.classFilter = ClassFilter.TRUE__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,default,composable,pointcut,with,code,class,filter,true,and,code,method,matcher,true;public,composable,pointcut,this,class,filter,class,filter,true,this,method,matcher,method,matcher,true
ComposablePointcut -> public ComposablePointcut(ClassFilter classFilter);1328020251;Create a ComposablePointcut for the given ClassFilter,_with <code>MethodMatcher.TRUE</code>._@param classFilter the ClassFilter to use;public ComposablePointcut(ClassFilter classFilter) {_		Assert.notNull(classFilter, "ClassFilter must not be null")__		this.classFilter = classFilter__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,composable,pointcut,for,the,given,class,filter,with,code,method,matcher,true,code,param,class,filter,the,class,filter,to,use;public,composable,pointcut,class,filter,class,filter,assert,not,null,class,filter,class,filter,must,not,be,null,this,class,filter,class,filter,this,method,matcher,method,matcher,true
ComposablePointcut -> public ComposablePointcut(ClassFilter classFilter);1356735495;Create a ComposablePointcut for the given ClassFilter,_with {@code MethodMatcher.TRUE}._@param classFilter the ClassFilter to use;public ComposablePointcut(ClassFilter classFilter) {_		Assert.notNull(classFilter, "ClassFilter must not be null")__		this.classFilter = classFilter__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,composable,pointcut,for,the,given,class,filter,with,code,method,matcher,true,param,class,filter,the,class,filter,to,use;public,composable,pointcut,class,filter,class,filter,assert,not,null,class,filter,class,filter,must,not,be,null,this,class,filter,class,filter,this,method,matcher,method,matcher,true
ComposablePointcut -> public ComposablePointcut(ClassFilter classFilter);1357119239;Create a ComposablePointcut for the given ClassFilter,_with {@code MethodMatcher.TRUE}._@param classFilter the ClassFilter to use;public ComposablePointcut(ClassFilter classFilter) {_		Assert.notNull(classFilter, "ClassFilter must not be null")__		this.classFilter = classFilter__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,composable,pointcut,for,the,given,class,filter,with,code,method,matcher,true,param,class,filter,the,class,filter,to,use;public,composable,pointcut,class,filter,class,filter,assert,not,null,class,filter,class,filter,must,not,be,null,this,class,filter,class,filter,this,method,matcher,method,matcher,true
ComposablePointcut -> public ComposablePointcut(ClassFilter classFilter);1368482696;Create a ComposablePointcut for the given ClassFilter,_with {@code MethodMatcher.TRUE}._@param classFilter the ClassFilter to use;public ComposablePointcut(ClassFilter classFilter) {_		Assert.notNull(classFilter, "ClassFilter must not be null")__		this.classFilter = classFilter__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,composable,pointcut,for,the,given,class,filter,with,code,method,matcher,true,param,class,filter,the,class,filter,to,use;public,composable,pointcut,class,filter,class,filter,assert,not,null,class,filter,class,filter,must,not,be,null,this,class,filter,class,filter,this,method,matcher,method,matcher,true
ComposablePointcut -> public ComposablePointcut(ClassFilter classFilter);1388872086;Create a ComposablePointcut for the given ClassFilter,_with {@code MethodMatcher.TRUE}._@param classFilter the ClassFilter to use;public ComposablePointcut(ClassFilter classFilter) {_		Assert.notNull(classFilter, "ClassFilter must not be null")__		this.classFilter = classFilter__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,composable,pointcut,for,the,given,class,filter,with,code,method,matcher,true,param,class,filter,the,class,filter,to,use;public,composable,pointcut,class,filter,class,filter,assert,not,null,class,filter,class,filter,must,not,be,null,this,class,filter,class,filter,this,method,matcher,method,matcher,true
ComposablePointcut -> public ComposablePointcut(ClassFilter classFilter);1498780456;Create a ComposablePointcut for the given ClassFilter,_with {@code MethodMatcher.TRUE}._@param classFilter the ClassFilter to use;public ComposablePointcut(ClassFilter classFilter) {_		Assert.notNull(classFilter, "ClassFilter must not be null")__		this.classFilter = classFilter__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,composable,pointcut,for,the,given,class,filter,with,code,method,matcher,true,param,class,filter,the,class,filter,to,use;public,composable,pointcut,class,filter,class,filter,assert,not,null,class,filter,class,filter,must,not,be,null,this,class,filter,class,filter,this,method,matcher,method,matcher,true
ComposablePointcut -> public ComposablePointcut(ClassFilter classFilter);1530174524;Create a ComposablePointcut for the given ClassFilter,_with {@code MethodMatcher.TRUE}._@param classFilter the ClassFilter to use;public ComposablePointcut(ClassFilter classFilter) {_		Assert.notNull(classFilter, "ClassFilter must not be null")__		this.classFilter = classFilter__		this.methodMatcher = MethodMatcher.TRUE__	};create,a,composable,pointcut,for,the,given,class,filter,with,code,method,matcher,true,param,class,filter,the,class,filter,to,use;public,composable,pointcut,class,filter,class,filter,assert,not,null,class,filter,class,filter,must,not,be,null,this,class,filter,class,filter,this,method,matcher,method,matcher,true
ComposablePointcut -> public ComposablePointcut intersection(MethodMatcher other);1328020251;Apply an intersection with the given MethodMatcher._@param other the MethodMatcher to apply an intersection with_@return this composable pointcut (for call chaining);public ComposablePointcut intersection(MethodMatcher other) {_		this.methodMatcher = MethodMatchers.intersection(this.methodMatcher, other)__		return this__	};apply,an,intersection,with,the,given,method,matcher,param,other,the,method,matcher,to,apply,an,intersection,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,intersection,method,matcher,other,this,method,matcher,method,matchers,intersection,this,method,matcher,other,return,this
ComposablePointcut -> public ComposablePointcut intersection(MethodMatcher other);1356735495;Apply an intersection with the given MethodMatcher._@param other the MethodMatcher to apply an intersection with_@return this composable pointcut (for call chaining);public ComposablePointcut intersection(MethodMatcher other) {_		this.methodMatcher = MethodMatchers.intersection(this.methodMatcher, other)__		return this__	};apply,an,intersection,with,the,given,method,matcher,param,other,the,method,matcher,to,apply,an,intersection,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,intersection,method,matcher,other,this,method,matcher,method,matchers,intersection,this,method,matcher,other,return,this
ComposablePointcut -> public ComposablePointcut intersection(MethodMatcher other);1357119239;Apply an intersection with the given MethodMatcher._@param other the MethodMatcher to apply an intersection with_@return this composable pointcut (for call chaining);public ComposablePointcut intersection(MethodMatcher other) {_		this.methodMatcher = MethodMatchers.intersection(this.methodMatcher, other)__		return this__	};apply,an,intersection,with,the,given,method,matcher,param,other,the,method,matcher,to,apply,an,intersection,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,intersection,method,matcher,other,this,method,matcher,method,matchers,intersection,this,method,matcher,other,return,this
ComposablePointcut -> public ComposablePointcut intersection(MethodMatcher other);1368482696;Apply an intersection with the given MethodMatcher._@param other the MethodMatcher to apply an intersection with_@return this composable pointcut (for call chaining);public ComposablePointcut intersection(MethodMatcher other) {_		this.methodMatcher = MethodMatchers.intersection(this.methodMatcher, other)__		return this__	};apply,an,intersection,with,the,given,method,matcher,param,other,the,method,matcher,to,apply,an,intersection,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,intersection,method,matcher,other,this,method,matcher,method,matchers,intersection,this,method,matcher,other,return,this
ComposablePointcut -> public ComposablePointcut intersection(MethodMatcher other);1388872086;Apply an intersection with the given MethodMatcher._@param other the MethodMatcher to apply an intersection with_@return this composable pointcut (for call chaining);public ComposablePointcut intersection(MethodMatcher other) {_		this.methodMatcher = MethodMatchers.intersection(this.methodMatcher, other)__		return this__	};apply,an,intersection,with,the,given,method,matcher,param,other,the,method,matcher,to,apply,an,intersection,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,intersection,method,matcher,other,this,method,matcher,method,matchers,intersection,this,method,matcher,other,return,this
ComposablePointcut -> public ComposablePointcut intersection(MethodMatcher other);1498780456;Apply an intersection with the given MethodMatcher._@param other the MethodMatcher to apply an intersection with_@return this composable pointcut (for call chaining);public ComposablePointcut intersection(MethodMatcher other) {_		this.methodMatcher = MethodMatchers.intersection(this.methodMatcher, other)__		return this__	};apply,an,intersection,with,the,given,method,matcher,param,other,the,method,matcher,to,apply,an,intersection,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,intersection,method,matcher,other,this,method,matcher,method,matchers,intersection,this,method,matcher,other,return,this
ComposablePointcut -> public ComposablePointcut intersection(MethodMatcher other);1530174524;Apply an intersection with the given MethodMatcher._@param other the MethodMatcher to apply an intersection with_@return this composable pointcut (for call chaining);public ComposablePointcut intersection(MethodMatcher other) {_		this.methodMatcher = MethodMatchers.intersection(this.methodMatcher, other)__		return this__	};apply,an,intersection,with,the,given,method,matcher,param,other,the,method,matcher,to,apply,an,intersection,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,intersection,method,matcher,other,this,method,matcher,method,matchers,intersection,this,method,matcher,other,return,this
ComposablePointcut -> public ComposablePointcut union(Pointcut other);1328020251;Apply a union with the given Pointcut._<p>Note that for a Pointcut union, methods will only match if their_original ClassFilter (from the originating Pointcut) matches as well._MethodMatchers and ClassFilters from different Pointcuts will never_get interleaved with each other._@param other the Pointcut to apply a union with_@return this composable pointcut (for call chaining);public ComposablePointcut union(Pointcut other) {_		this.methodMatcher = MethodMatchers.union(_				this.methodMatcher, this.classFilter, other.getMethodMatcher(), other.getClassFilter())__		this.classFilter = ClassFilters.union(this.classFilter, other.getClassFilter())__		return this__	};apply,a,union,with,the,given,pointcut,p,note,that,for,a,pointcut,union,methods,will,only,match,if,their,original,class,filter,from,the,originating,pointcut,matches,as,well,method,matchers,and,class,filters,from,different,pointcuts,will,never,get,interleaved,with,each,other,param,other,the,pointcut,to,apply,a,union,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,union,pointcut,other,this,method,matcher,method,matchers,union,this,method,matcher,this,class,filter,other,get,method,matcher,other,get,class,filter,this,class,filter,class,filters,union,this,class,filter,other,get,class,filter,return,this
ComposablePointcut -> public ComposablePointcut union(Pointcut other);1356735495;Apply a union with the given Pointcut._<p>Note that for a Pointcut union, methods will only match if their_original ClassFilter (from the originating Pointcut) matches as well._MethodMatchers and ClassFilters from different Pointcuts will never_get interleaved with each other._@param other the Pointcut to apply a union with_@return this composable pointcut (for call chaining);public ComposablePointcut union(Pointcut other) {_		this.methodMatcher = MethodMatchers.union(_				this.methodMatcher, this.classFilter, other.getMethodMatcher(), other.getClassFilter())__		this.classFilter = ClassFilters.union(this.classFilter, other.getClassFilter())__		return this__	};apply,a,union,with,the,given,pointcut,p,note,that,for,a,pointcut,union,methods,will,only,match,if,their,original,class,filter,from,the,originating,pointcut,matches,as,well,method,matchers,and,class,filters,from,different,pointcuts,will,never,get,interleaved,with,each,other,param,other,the,pointcut,to,apply,a,union,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,union,pointcut,other,this,method,matcher,method,matchers,union,this,method,matcher,this,class,filter,other,get,method,matcher,other,get,class,filter,this,class,filter,class,filters,union,this,class,filter,other,get,class,filter,return,this
ComposablePointcut -> public ComposablePointcut union(Pointcut other);1357119239;Apply a union with the given Pointcut._<p>Note that for a Pointcut union, methods will only match if their_original ClassFilter (from the originating Pointcut) matches as well._MethodMatchers and ClassFilters from different Pointcuts will never_get interleaved with each other._@param other the Pointcut to apply a union with_@return this composable pointcut (for call chaining);public ComposablePointcut union(Pointcut other) {_		this.methodMatcher = MethodMatchers.union(_				this.methodMatcher, this.classFilter, other.getMethodMatcher(), other.getClassFilter())__		this.classFilter = ClassFilters.union(this.classFilter, other.getClassFilter())__		return this__	};apply,a,union,with,the,given,pointcut,p,note,that,for,a,pointcut,union,methods,will,only,match,if,their,original,class,filter,from,the,originating,pointcut,matches,as,well,method,matchers,and,class,filters,from,different,pointcuts,will,never,get,interleaved,with,each,other,param,other,the,pointcut,to,apply,a,union,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,union,pointcut,other,this,method,matcher,method,matchers,union,this,method,matcher,this,class,filter,other,get,method,matcher,other,get,class,filter,this,class,filter,class,filters,union,this,class,filter,other,get,class,filter,return,this
ComposablePointcut -> public ComposablePointcut union(Pointcut other);1368482696;Apply a union with the given Pointcut._<p>Note that for a Pointcut union, methods will only match if their_original ClassFilter (from the originating Pointcut) matches as well._MethodMatchers and ClassFilters from different Pointcuts will never_get interleaved with each other._@param other the Pointcut to apply a union with_@return this composable pointcut (for call chaining);public ComposablePointcut union(Pointcut other) {_		this.methodMatcher = MethodMatchers.union(_				this.methodMatcher, this.classFilter, other.getMethodMatcher(), other.getClassFilter())__		this.classFilter = ClassFilters.union(this.classFilter, other.getClassFilter())__		return this__	};apply,a,union,with,the,given,pointcut,p,note,that,for,a,pointcut,union,methods,will,only,match,if,their,original,class,filter,from,the,originating,pointcut,matches,as,well,method,matchers,and,class,filters,from,different,pointcuts,will,never,get,interleaved,with,each,other,param,other,the,pointcut,to,apply,a,union,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,union,pointcut,other,this,method,matcher,method,matchers,union,this,method,matcher,this,class,filter,other,get,method,matcher,other,get,class,filter,this,class,filter,class,filters,union,this,class,filter,other,get,class,filter,return,this
ComposablePointcut -> public ComposablePointcut union(Pointcut other);1388872086;Apply a union with the given Pointcut._<p>Note that for a Pointcut union, methods will only match if their_original ClassFilter (from the originating Pointcut) matches as well._MethodMatchers and ClassFilters from different Pointcuts will never_get interleaved with each other._@param other the Pointcut to apply a union with_@return this composable pointcut (for call chaining);public ComposablePointcut union(Pointcut other) {_		this.methodMatcher = MethodMatchers.union(_				this.methodMatcher, this.classFilter, other.getMethodMatcher(), other.getClassFilter())__		this.classFilter = ClassFilters.union(this.classFilter, other.getClassFilter())__		return this__	};apply,a,union,with,the,given,pointcut,p,note,that,for,a,pointcut,union,methods,will,only,match,if,their,original,class,filter,from,the,originating,pointcut,matches,as,well,method,matchers,and,class,filters,from,different,pointcuts,will,never,get,interleaved,with,each,other,param,other,the,pointcut,to,apply,a,union,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,union,pointcut,other,this,method,matcher,method,matchers,union,this,method,matcher,this,class,filter,other,get,method,matcher,other,get,class,filter,this,class,filter,class,filters,union,this,class,filter,other,get,class,filter,return,this
ComposablePointcut -> public ComposablePointcut union(Pointcut other);1498780456;Apply a union with the given Pointcut._<p>Note that for a Pointcut union, methods will only match if their_original ClassFilter (from the originating Pointcut) matches as well._MethodMatchers and ClassFilters from different Pointcuts will never_get interleaved with each other._@param other the Pointcut to apply a union with_@return this composable pointcut (for call chaining);public ComposablePointcut union(Pointcut other) {_		this.methodMatcher = MethodMatchers.union(_				this.methodMatcher, this.classFilter, other.getMethodMatcher(), other.getClassFilter())__		this.classFilter = ClassFilters.union(this.classFilter, other.getClassFilter())__		return this__	};apply,a,union,with,the,given,pointcut,p,note,that,for,a,pointcut,union,methods,will,only,match,if,their,original,class,filter,from,the,originating,pointcut,matches,as,well,method,matchers,and,class,filters,from,different,pointcuts,will,never,get,interleaved,with,each,other,param,other,the,pointcut,to,apply,a,union,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,union,pointcut,other,this,method,matcher,method,matchers,union,this,method,matcher,this,class,filter,other,get,method,matcher,other,get,class,filter,this,class,filter,class,filters,union,this,class,filter,other,get,class,filter,return,this
ComposablePointcut -> public ComposablePointcut union(Pointcut other);1530174524;Apply a union with the given Pointcut._<p>Note that for a Pointcut union, methods will only match if their_original ClassFilter (from the originating Pointcut) matches as well._MethodMatchers and ClassFilters from different Pointcuts will never_get interleaved with each other._@param other the Pointcut to apply a union with_@return this composable pointcut (for call chaining);public ComposablePointcut union(Pointcut other) {_		this.methodMatcher = MethodMatchers.union(_				this.methodMatcher, this.classFilter, other.getMethodMatcher(), other.getClassFilter())__		this.classFilter = ClassFilters.union(this.classFilter, other.getClassFilter())__		return this__	};apply,a,union,with,the,given,pointcut,p,note,that,for,a,pointcut,union,methods,will,only,match,if,their,original,class,filter,from,the,originating,pointcut,matches,as,well,method,matchers,and,class,filters,from,different,pointcuts,will,never,get,interleaved,with,each,other,param,other,the,pointcut,to,apply,a,union,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,union,pointcut,other,this,method,matcher,method,matchers,union,this,method,matcher,this,class,filter,other,get,method,matcher,other,get,class,filter,this,class,filter,class,filters,union,this,class,filter,other,get,class,filter,return,this
ComposablePointcut -> public ComposablePointcut(Pointcut pointcut);1328020251;Create a ComposablePointcut based on the given Pointcut._@param pointcut the original Pointcut;public ComposablePointcut(Pointcut pointcut) {_		Assert.notNull(pointcut, "Pointcut must not be null")__		this.classFilter = pointcut.getClassFilter()__		this.methodMatcher = pointcut.getMethodMatcher()__	};create,a,composable,pointcut,based,on,the,given,pointcut,param,pointcut,the,original,pointcut;public,composable,pointcut,pointcut,pointcut,assert,not,null,pointcut,pointcut,must,not,be,null,this,class,filter,pointcut,get,class,filter,this,method,matcher,pointcut,get,method,matcher
ComposablePointcut -> public ComposablePointcut(Pointcut pointcut);1356735495;Create a ComposablePointcut based on the given Pointcut._@param pointcut the original Pointcut;public ComposablePointcut(Pointcut pointcut) {_		Assert.notNull(pointcut, "Pointcut must not be null")__		this.classFilter = pointcut.getClassFilter()__		this.methodMatcher = pointcut.getMethodMatcher()__	};create,a,composable,pointcut,based,on,the,given,pointcut,param,pointcut,the,original,pointcut;public,composable,pointcut,pointcut,pointcut,assert,not,null,pointcut,pointcut,must,not,be,null,this,class,filter,pointcut,get,class,filter,this,method,matcher,pointcut,get,method,matcher
ComposablePointcut -> public ComposablePointcut(Pointcut pointcut);1357119239;Create a ComposablePointcut based on the given Pointcut._@param pointcut the original Pointcut;public ComposablePointcut(Pointcut pointcut) {_		Assert.notNull(pointcut, "Pointcut must not be null")__		this.classFilter = pointcut.getClassFilter()__		this.methodMatcher = pointcut.getMethodMatcher()__	};create,a,composable,pointcut,based,on,the,given,pointcut,param,pointcut,the,original,pointcut;public,composable,pointcut,pointcut,pointcut,assert,not,null,pointcut,pointcut,must,not,be,null,this,class,filter,pointcut,get,class,filter,this,method,matcher,pointcut,get,method,matcher
ComposablePointcut -> public ComposablePointcut(Pointcut pointcut);1368482696;Create a ComposablePointcut based on the given Pointcut._@param pointcut the original Pointcut;public ComposablePointcut(Pointcut pointcut) {_		Assert.notNull(pointcut, "Pointcut must not be null")__		this.classFilter = pointcut.getClassFilter()__		this.methodMatcher = pointcut.getMethodMatcher()__	};create,a,composable,pointcut,based,on,the,given,pointcut,param,pointcut,the,original,pointcut;public,composable,pointcut,pointcut,pointcut,assert,not,null,pointcut,pointcut,must,not,be,null,this,class,filter,pointcut,get,class,filter,this,method,matcher,pointcut,get,method,matcher
ComposablePointcut -> public ComposablePointcut(Pointcut pointcut);1388872086;Create a ComposablePointcut based on the given Pointcut._@param pointcut the original Pointcut;public ComposablePointcut(Pointcut pointcut) {_		Assert.notNull(pointcut, "Pointcut must not be null")__		this.classFilter = pointcut.getClassFilter()__		this.methodMatcher = pointcut.getMethodMatcher()__	};create,a,composable,pointcut,based,on,the,given,pointcut,param,pointcut,the,original,pointcut;public,composable,pointcut,pointcut,pointcut,assert,not,null,pointcut,pointcut,must,not,be,null,this,class,filter,pointcut,get,class,filter,this,method,matcher,pointcut,get,method,matcher
ComposablePointcut -> public ComposablePointcut(Pointcut pointcut);1498780456;Create a ComposablePointcut based on the given Pointcut._@param pointcut the original Pointcut;public ComposablePointcut(Pointcut pointcut) {_		Assert.notNull(pointcut, "Pointcut must not be null")__		this.classFilter = pointcut.getClassFilter()__		this.methodMatcher = pointcut.getMethodMatcher()__	};create,a,composable,pointcut,based,on,the,given,pointcut,param,pointcut,the,original,pointcut;public,composable,pointcut,pointcut,pointcut,assert,not,null,pointcut,pointcut,must,not,be,null,this,class,filter,pointcut,get,class,filter,this,method,matcher,pointcut,get,method,matcher
ComposablePointcut -> public ComposablePointcut(Pointcut pointcut);1530174524;Create a ComposablePointcut based on the given Pointcut._@param pointcut the original Pointcut;public ComposablePointcut(Pointcut pointcut) {_		Assert.notNull(pointcut, "Pointcut must not be null")__		this.classFilter = pointcut.getClassFilter()__		this.methodMatcher = pointcut.getMethodMatcher()__	};create,a,composable,pointcut,based,on,the,given,pointcut,param,pointcut,the,original,pointcut;public,composable,pointcut,pointcut,pointcut,assert,not,null,pointcut,pointcut,must,not,be,null,this,class,filter,pointcut,get,class,filter,this,method,matcher,pointcut,get,method,matcher
ComposablePointcut -> public ComposablePointcut(ClassFilter classFilter, MethodMatcher methodMatcher);1328020251;Create a ComposablePointcut for the given ClassFilter and MethodMatcher._@param classFilter the ClassFilter to use_@param methodMatcher the MethodMatcher to use;public ComposablePointcut(ClassFilter classFilter, MethodMatcher methodMatcher) {_		Assert.notNull(classFilter, "ClassFilter must not be null")__		Assert.notNull(methodMatcher, "MethodMatcher must not be null")__		this.classFilter = classFilter__		this.methodMatcher = methodMatcher__	};create,a,composable,pointcut,for,the,given,class,filter,and,method,matcher,param,class,filter,the,class,filter,to,use,param,method,matcher,the,method,matcher,to,use;public,composable,pointcut,class,filter,class,filter,method,matcher,method,matcher,assert,not,null,class,filter,class,filter,must,not,be,null,assert,not,null,method,matcher,method,matcher,must,not,be,null,this,class,filter,class,filter,this,method,matcher,method,matcher
ComposablePointcut -> public ComposablePointcut(ClassFilter classFilter, MethodMatcher methodMatcher);1356735495;Create a ComposablePointcut for the given ClassFilter and MethodMatcher._@param classFilter the ClassFilter to use_@param methodMatcher the MethodMatcher to use;public ComposablePointcut(ClassFilter classFilter, MethodMatcher methodMatcher) {_		Assert.notNull(classFilter, "ClassFilter must not be null")__		Assert.notNull(methodMatcher, "MethodMatcher must not be null")__		this.classFilter = classFilter__		this.methodMatcher = methodMatcher__	};create,a,composable,pointcut,for,the,given,class,filter,and,method,matcher,param,class,filter,the,class,filter,to,use,param,method,matcher,the,method,matcher,to,use;public,composable,pointcut,class,filter,class,filter,method,matcher,method,matcher,assert,not,null,class,filter,class,filter,must,not,be,null,assert,not,null,method,matcher,method,matcher,must,not,be,null,this,class,filter,class,filter,this,method,matcher,method,matcher
ComposablePointcut -> public ComposablePointcut(ClassFilter classFilter, MethodMatcher methodMatcher);1357119239;Create a ComposablePointcut for the given ClassFilter and MethodMatcher._@param classFilter the ClassFilter to use_@param methodMatcher the MethodMatcher to use;public ComposablePointcut(ClassFilter classFilter, MethodMatcher methodMatcher) {_		Assert.notNull(classFilter, "ClassFilter must not be null")__		Assert.notNull(methodMatcher, "MethodMatcher must not be null")__		this.classFilter = classFilter__		this.methodMatcher = methodMatcher__	};create,a,composable,pointcut,for,the,given,class,filter,and,method,matcher,param,class,filter,the,class,filter,to,use,param,method,matcher,the,method,matcher,to,use;public,composable,pointcut,class,filter,class,filter,method,matcher,method,matcher,assert,not,null,class,filter,class,filter,must,not,be,null,assert,not,null,method,matcher,method,matcher,must,not,be,null,this,class,filter,class,filter,this,method,matcher,method,matcher
ComposablePointcut -> public ComposablePointcut(ClassFilter classFilter, MethodMatcher methodMatcher);1368482696;Create a ComposablePointcut for the given ClassFilter and MethodMatcher._@param classFilter the ClassFilter to use_@param methodMatcher the MethodMatcher to use;public ComposablePointcut(ClassFilter classFilter, MethodMatcher methodMatcher) {_		Assert.notNull(classFilter, "ClassFilter must not be null")__		Assert.notNull(methodMatcher, "MethodMatcher must not be null")__		this.classFilter = classFilter__		this.methodMatcher = methodMatcher__	};create,a,composable,pointcut,for,the,given,class,filter,and,method,matcher,param,class,filter,the,class,filter,to,use,param,method,matcher,the,method,matcher,to,use;public,composable,pointcut,class,filter,class,filter,method,matcher,method,matcher,assert,not,null,class,filter,class,filter,must,not,be,null,assert,not,null,method,matcher,method,matcher,must,not,be,null,this,class,filter,class,filter,this,method,matcher,method,matcher
ComposablePointcut -> public ComposablePointcut(ClassFilter classFilter, MethodMatcher methodMatcher);1388872086;Create a ComposablePointcut for the given ClassFilter and MethodMatcher._@param classFilter the ClassFilter to use_@param methodMatcher the MethodMatcher to use;public ComposablePointcut(ClassFilter classFilter, MethodMatcher methodMatcher) {_		Assert.notNull(classFilter, "ClassFilter must not be null")__		Assert.notNull(methodMatcher, "MethodMatcher must not be null")__		this.classFilter = classFilter__		this.methodMatcher = methodMatcher__	};create,a,composable,pointcut,for,the,given,class,filter,and,method,matcher,param,class,filter,the,class,filter,to,use,param,method,matcher,the,method,matcher,to,use;public,composable,pointcut,class,filter,class,filter,method,matcher,method,matcher,assert,not,null,class,filter,class,filter,must,not,be,null,assert,not,null,method,matcher,method,matcher,must,not,be,null,this,class,filter,class,filter,this,method,matcher,method,matcher
ComposablePointcut -> public ComposablePointcut(ClassFilter classFilter, MethodMatcher methodMatcher);1498780456;Create a ComposablePointcut for the given ClassFilter and MethodMatcher._@param classFilter the ClassFilter to use_@param methodMatcher the MethodMatcher to use;public ComposablePointcut(ClassFilter classFilter, MethodMatcher methodMatcher) {_		Assert.notNull(classFilter, "ClassFilter must not be null")__		Assert.notNull(methodMatcher, "MethodMatcher must not be null")__		this.classFilter = classFilter__		this.methodMatcher = methodMatcher__	};create,a,composable,pointcut,for,the,given,class,filter,and,method,matcher,param,class,filter,the,class,filter,to,use,param,method,matcher,the,method,matcher,to,use;public,composable,pointcut,class,filter,class,filter,method,matcher,method,matcher,assert,not,null,class,filter,class,filter,must,not,be,null,assert,not,null,method,matcher,method,matcher,must,not,be,null,this,class,filter,class,filter,this,method,matcher,method,matcher
ComposablePointcut -> public ComposablePointcut(ClassFilter classFilter, MethodMatcher methodMatcher);1530174524;Create a ComposablePointcut for the given ClassFilter and MethodMatcher._@param classFilter the ClassFilter to use_@param methodMatcher the MethodMatcher to use;public ComposablePointcut(ClassFilter classFilter, MethodMatcher methodMatcher) {_		Assert.notNull(classFilter, "ClassFilter must not be null")__		Assert.notNull(methodMatcher, "MethodMatcher must not be null")__		this.classFilter = classFilter__		this.methodMatcher = methodMatcher__	};create,a,composable,pointcut,for,the,given,class,filter,and,method,matcher,param,class,filter,the,class,filter,to,use,param,method,matcher,the,method,matcher,to,use;public,composable,pointcut,class,filter,class,filter,method,matcher,method,matcher,assert,not,null,class,filter,class,filter,must,not,be,null,assert,not,null,method,matcher,method,matcher,must,not,be,null,this,class,filter,class,filter,this,method,matcher,method,matcher
ComposablePointcut -> public ComposablePointcut union(ClassFilter other);1328020251;Apply a union with the given ClassFilter._@param other the ClassFilter to apply a union with_@return this composable pointcut (for call chaining);public ComposablePointcut union(ClassFilter other) {_		this.classFilter = ClassFilters.union(this.classFilter, other)__		return this__	};apply,a,union,with,the,given,class,filter,param,other,the,class,filter,to,apply,a,union,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,union,class,filter,other,this,class,filter,class,filters,union,this,class,filter,other,return,this
ComposablePointcut -> public ComposablePointcut union(ClassFilter other);1356735495;Apply a union with the given ClassFilter._@param other the ClassFilter to apply a union with_@return this composable pointcut (for call chaining);public ComposablePointcut union(ClassFilter other) {_		this.classFilter = ClassFilters.union(this.classFilter, other)__		return this__	};apply,a,union,with,the,given,class,filter,param,other,the,class,filter,to,apply,a,union,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,union,class,filter,other,this,class,filter,class,filters,union,this,class,filter,other,return,this
ComposablePointcut -> public ComposablePointcut union(ClassFilter other);1357119239;Apply a union with the given ClassFilter._@param other the ClassFilter to apply a union with_@return this composable pointcut (for call chaining);public ComposablePointcut union(ClassFilter other) {_		this.classFilter = ClassFilters.union(this.classFilter, other)__		return this__	};apply,a,union,with,the,given,class,filter,param,other,the,class,filter,to,apply,a,union,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,union,class,filter,other,this,class,filter,class,filters,union,this,class,filter,other,return,this
ComposablePointcut -> public ComposablePointcut union(ClassFilter other);1368482696;Apply a union with the given ClassFilter._@param other the ClassFilter to apply a union with_@return this composable pointcut (for call chaining);public ComposablePointcut union(ClassFilter other) {_		this.classFilter = ClassFilters.union(this.classFilter, other)__		return this__	};apply,a,union,with,the,given,class,filter,param,other,the,class,filter,to,apply,a,union,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,union,class,filter,other,this,class,filter,class,filters,union,this,class,filter,other,return,this
ComposablePointcut -> public ComposablePointcut union(ClassFilter other);1388872086;Apply a union with the given ClassFilter._@param other the ClassFilter to apply a union with_@return this composable pointcut (for call chaining);public ComposablePointcut union(ClassFilter other) {_		this.classFilter = ClassFilters.union(this.classFilter, other)__		return this__	};apply,a,union,with,the,given,class,filter,param,other,the,class,filter,to,apply,a,union,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,union,class,filter,other,this,class,filter,class,filters,union,this,class,filter,other,return,this
ComposablePointcut -> public ComposablePointcut union(ClassFilter other);1498780456;Apply a union with the given ClassFilter._@param other the ClassFilter to apply a union with_@return this composable pointcut (for call chaining);public ComposablePointcut union(ClassFilter other) {_		this.classFilter = ClassFilters.union(this.classFilter, other)__		return this__	};apply,a,union,with,the,given,class,filter,param,other,the,class,filter,to,apply,a,union,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,union,class,filter,other,this,class,filter,class,filters,union,this,class,filter,other,return,this
ComposablePointcut -> public ComposablePointcut union(ClassFilter other);1530174524;Apply a union with the given ClassFilter._@param other the ClassFilter to apply a union with_@return this composable pointcut (for call chaining);public ComposablePointcut union(ClassFilter other) {_		this.classFilter = ClassFilters.union(this.classFilter, other)__		return this__	};apply,a,union,with,the,given,class,filter,param,other,the,class,filter,to,apply,a,union,with,return,this,composable,pointcut,for,call,chaining;public,composable,pointcut,union,class,filter,other,this,class,filter,class,filters,union,this,class,filter,other,return,this
