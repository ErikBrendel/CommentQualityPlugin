# id;timestamp;commentText;codeText;commentWords;codeWords
AspectJAfterThrowingAdvice -> private boolean shouldInvokeOnThrowing(Throwable t);1328020251;In AspectJ semantics, after throwing advice that specifies a throwing clause_is only invoked if the thrown exception is a subtype of the given throwing type.;private boolean shouldInvokeOnThrowing(Throwable t) {_		Class throwingType = getDiscoveredThrowingType()__		return throwingType.isAssignableFrom(t.getClass())__	};in,aspect,j,semantics,after,throwing,advice,that,specifies,a,throwing,clause,is,only,invoked,if,the,thrown,exception,is,a,subtype,of,the,given,throwing,type;private,boolean,should,invoke,on,throwing,throwable,t,class,throwing,type,get,discovered,throwing,type,return,throwing,type,is,assignable,from,t,get,class
AspectJAfterThrowingAdvice -> private boolean shouldInvokeOnThrowing(Throwable t);1356735495;In AspectJ semantics, after throwing advice that specifies a throwing clause_is only invoked if the thrown exception is a subtype of the given throwing type.;private boolean shouldInvokeOnThrowing(Throwable t) {_		Class throwingType = getDiscoveredThrowingType()__		return throwingType.isAssignableFrom(t.getClass())__	};in,aspect,j,semantics,after,throwing,advice,that,specifies,a,throwing,clause,is,only,invoked,if,the,thrown,exception,is,a,subtype,of,the,given,throwing,type;private,boolean,should,invoke,on,throwing,throwable,t,class,throwing,type,get,discovered,throwing,type,return,throwing,type,is,assignable,from,t,get,class
AspectJAfterThrowingAdvice -> private boolean shouldInvokeOnThrowing(Throwable t);1357119239;In AspectJ semantics, after throwing advice that specifies a throwing clause_is only invoked if the thrown exception is a subtype of the given throwing type.;private boolean shouldInvokeOnThrowing(Throwable t) {_		Class throwingType = getDiscoveredThrowingType()__		return throwingType.isAssignableFrom(t.getClass())__	};in,aspect,j,semantics,after,throwing,advice,that,specifies,a,throwing,clause,is,only,invoked,if,the,thrown,exception,is,a,subtype,of,the,given,throwing,type;private,boolean,should,invoke,on,throwing,throwable,t,class,throwing,type,get,discovered,throwing,type,return,throwing,type,is,assignable,from,t,get,class
AspectJAfterThrowingAdvice -> private boolean shouldInvokeOnThrowing(Throwable t);1368482696;In AspectJ semantics, after throwing advice that specifies a throwing clause_is only invoked if the thrown exception is a subtype of the given throwing type.;private boolean shouldInvokeOnThrowing(Throwable t) {_		Class throwingType = getDiscoveredThrowingType()__		return throwingType.isAssignableFrom(t.getClass())__	};in,aspect,j,semantics,after,throwing,advice,that,specifies,a,throwing,clause,is,only,invoked,if,the,thrown,exception,is,a,subtype,of,the,given,throwing,type;private,boolean,should,invoke,on,throwing,throwable,t,class,throwing,type,get,discovered,throwing,type,return,throwing,type,is,assignable,from,t,get,class
AspectJAfterThrowingAdvice -> private boolean shouldInvokeOnThrowing(Throwable t);1385412762;In AspectJ semantics, after throwing advice that specifies a throwing clause_is only invoked if the thrown exception is a subtype of the given throwing type.;private boolean shouldInvokeOnThrowing(Throwable t) {_		return getDiscoveredThrowingType().isAssignableFrom(t.getClass())__	};in,aspect,j,semantics,after,throwing,advice,that,specifies,a,throwing,clause,is,only,invoked,if,the,thrown,exception,is,a,subtype,of,the,given,throwing,type;private,boolean,should,invoke,on,throwing,throwable,t,return,get,discovered,throwing,type,is,assignable,from,t,get,class
