# id;timestamp;commentText;codeText;commentWords;codeWords
Advisor -> boolean isPerInstance()_;1328020251;Return whether this advice is associated with a particular instance_(for example, creating a mixin) or shared with all instances of_the advised class obtained from the same Spring bean factory._<p><b>Note that this method is not currently used by the framework.</b>_Typical Advisor implementations always return <code>true</code>._Use singleton/prototype bean definitions or appropriate programmatic_proxy creation to ensure that Advisors have the correct lifecycle model._@return whether this advice is associated with a particular target instance;boolean isPerInstance()_;return,whether,this,advice,is,associated,with,a,particular,instance,for,example,creating,a,mixin,or,shared,with,all,instances,of,the,advised,class,obtained,from,the,same,spring,bean,factory,p,b,note,that,this,method,is,not,currently,used,by,the,framework,b,typical,advisor,implementations,always,return,code,true,code,use,singleton,prototype,bean,definitions,or,appropriate,programmatic,proxy,creation,to,ensure,that,advisors,have,the,correct,lifecycle,model,return,whether,this,advice,is,associated,with,a,particular,target,instance;boolean,is,per,instance
Advisor -> boolean isPerInstance()_;1356735495;Return whether this advice is associated with a particular instance_(for example, creating a mixin) or shared with all instances of_the advised class obtained from the same Spring bean factory._<p><b>Note that this method is not currently used by the framework.</b>_Typical Advisor implementations always return {@code true}._Use singleton/prototype bean definitions or appropriate programmatic_proxy creation to ensure that Advisors have the correct lifecycle model._@return whether this advice is associated with a particular target instance;boolean isPerInstance()_;return,whether,this,advice,is,associated,with,a,particular,instance,for,example,creating,a,mixin,or,shared,with,all,instances,of,the,advised,class,obtained,from,the,same,spring,bean,factory,p,b,note,that,this,method,is,not,currently,used,by,the,framework,b,typical,advisor,implementations,always,return,code,true,use,singleton,prototype,bean,definitions,or,appropriate,programmatic,proxy,creation,to,ensure,that,advisors,have,the,correct,lifecycle,model,return,whether,this,advice,is,associated,with,a,particular,target,instance;boolean,is,per,instance
Advisor -> boolean isPerInstance()_;1496837955;Return whether this advice is associated with a particular instance_(for example, creating a mixin) or shared with all instances of_the advised class obtained from the same Spring bean factory._<p><b>Note that this method is not currently used by the framework.</b>_Typical Advisor implementations always return {@code true}._Use singleton/prototype bean definitions or appropriate programmatic_proxy creation to ensure that Advisors have the correct lifecycle model._@return whether this advice is associated with a particular target instance;boolean isPerInstance()_;return,whether,this,advice,is,associated,with,a,particular,instance,for,example,creating,a,mixin,or,shared,with,all,instances,of,the,advised,class,obtained,from,the,same,spring,bean,factory,p,b,note,that,this,method,is,not,currently,used,by,the,framework,b,typical,advisor,implementations,always,return,code,true,use,singleton,prototype,bean,definitions,or,appropriate,programmatic,proxy,creation,to,ensure,that,advisors,have,the,correct,lifecycle,model,return,whether,this,advice,is,associated,with,a,particular,target,instance;boolean,is,per,instance
Advisor -> boolean isPerInstance()_;1500495740;Return whether this advice is associated with a particular instance_(for example, creating a mixin) or shared with all instances of_the advised class obtained from the same Spring bean factory._<p><b>Note that this method is not currently used by the framework.</b>_Typical Advisor implementations always return {@code true}._Use singleton/prototype bean definitions or appropriate programmatic_proxy creation to ensure that Advisors have the correct lifecycle model._@return whether this advice is associated with a particular target instance;boolean isPerInstance()_;return,whether,this,advice,is,associated,with,a,particular,instance,for,example,creating,a,mixin,or,shared,with,all,instances,of,the,advised,class,obtained,from,the,same,spring,bean,factory,p,b,note,that,this,method,is,not,currently,used,by,the,framework,b,typical,advisor,implementations,always,return,code,true,use,singleton,prototype,bean,definitions,or,appropriate,programmatic,proxy,creation,to,ensure,that,advisors,have,the,correct,lifecycle,model,return,whether,this,advice,is,associated,with,a,particular,target,instance;boolean,is,per,instance
Advisor -> Advice getAdvice()_;1328020251;Return the advice part of this aspect. An advice may be an_interceptor, a before advice, a throws advice, etc._@return the advice that should apply if the pointcut matches_@see org.aopalliance.intercept.MethodInterceptor_@see BeforeAdvice_@see ThrowsAdvice_@see AfterReturningAdvice;Advice getAdvice()_;return,the,advice,part,of,this,aspect,an,advice,may,be,an,interceptor,a,before,advice,a,throws,advice,etc,return,the,advice,that,should,apply,if,the,pointcut,matches,see,org,aopalliance,intercept,method,interceptor,see,before,advice,see,throws,advice,see,after,returning,advice;advice,get,advice
Advisor -> Advice getAdvice()_;1356735495;Return the advice part of this aspect. An advice may be an_interceptor, a before advice, a throws advice, etc._@return the advice that should apply if the pointcut matches_@see org.aopalliance.intercept.MethodInterceptor_@see BeforeAdvice_@see ThrowsAdvice_@see AfterReturningAdvice;Advice getAdvice()_;return,the,advice,part,of,this,aspect,an,advice,may,be,an,interceptor,a,before,advice,a,throws,advice,etc,return,the,advice,that,should,apply,if,the,pointcut,matches,see,org,aopalliance,intercept,method,interceptor,see,before,advice,see,throws,advice,see,after,returning,advice;advice,get,advice
Advisor -> Advice getAdvice()_;1496837955;Return the advice part of this aspect. An advice may be an_interceptor, a before advice, a throws advice, etc._@return the advice that should apply if the pointcut matches_@see org.aopalliance.intercept.MethodInterceptor_@see BeforeAdvice_@see ThrowsAdvice_@see AfterReturningAdvice;Advice getAdvice()_;return,the,advice,part,of,this,aspect,an,advice,may,be,an,interceptor,a,before,advice,a,throws,advice,etc,return,the,advice,that,should,apply,if,the,pointcut,matches,see,org,aopalliance,intercept,method,interceptor,see,before,advice,see,throws,advice,see,after,returning,advice;advice,get,advice
Advisor -> Advice getAdvice()_;1500495740;Return the advice part of this aspect. An advice may be an_interceptor, a before advice, a throws advice, etc._@return the advice that should apply if the pointcut matches_@see org.aopalliance.intercept.MethodInterceptor_@see BeforeAdvice_@see ThrowsAdvice_@see AfterReturningAdvice;Advice getAdvice()_;return,the,advice,part,of,this,aspect,an,advice,may,be,an,interceptor,a,before,advice,a,throws,advice,etc,return,the,advice,that,should,apply,if,the,pointcut,matches,see,org,aopalliance,intercept,method,interceptor,see,before,advice,see,throws,advice,see,after,returning,advice;advice,get,advice
