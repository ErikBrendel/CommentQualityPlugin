# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractSingletonProxyFactoryBean -> public void setTarget(Object target);1328020251;Set the target object, that is, the bean to be wrapped with a transactional proxy._<p>The target may be any object, in which case a SingletonTargetSource will_be created. If it is a TargetSource, no wrapper TargetSource is created:_This enables the use of a pooling or prototype TargetSource etc._@see org.springframework.aop.TargetSource_@see org.springframework.aop.target.SingletonTargetSource_@see org.springframework.aop.target.LazyInitTargetSource_@see org.springframework.aop.target.PrototypeTargetSource_@see org.springframework.aop.target.CommonsPoolTargetSource;public void setTarget(Object target) {_		this.target = target__	};set,the,target,object,that,is,the,bean,to,be,wrapped,with,a,transactional,proxy,p,the,target,may,be,any,object,in,which,case,a,singleton,target,source,will,be,created,if,it,is,a,target,source,no,wrapper,target,source,is,created,this,enables,the,use,of,a,pooling,or,prototype,target,source,etc,see,org,springframework,aop,target,source,see,org,springframework,aop,target,singleton,target,source,see,org,springframework,aop,target,lazy,init,target,source,see,org,springframework,aop,target,prototype,target,source,see,org,springframework,aop,target,commons,pool,target,source;public,void,set,target,object,target,this,target,target
AbstractSingletonProxyFactoryBean -> public void setTarget(Object target);1356735495;Set the target object, that is, the bean to be wrapped with a transactional proxy._<p>The target may be any object, in which case a SingletonTargetSource will_be created. If it is a TargetSource, no wrapper TargetSource is created:_This enables the use of a pooling or prototype TargetSource etc._@see org.springframework.aop.TargetSource_@see org.springframework.aop.target.SingletonTargetSource_@see org.springframework.aop.target.LazyInitTargetSource_@see org.springframework.aop.target.PrototypeTargetSource_@see org.springframework.aop.target.CommonsPoolTargetSource;public void setTarget(Object target) {_		this.target = target__	};set,the,target,object,that,is,the,bean,to,be,wrapped,with,a,transactional,proxy,p,the,target,may,be,any,object,in,which,case,a,singleton,target,source,will,be,created,if,it,is,a,target,source,no,wrapper,target,source,is,created,this,enables,the,use,of,a,pooling,or,prototype,target,source,etc,see,org,springframework,aop,target,source,see,org,springframework,aop,target,singleton,target,source,see,org,springframework,aop,target,lazy,init,target,source,see,org,springframework,aop,target,prototype,target,source,see,org,springframework,aop,target,commons,pool,target,source;public,void,set,target,object,target,this,target,target
AbstractSingletonProxyFactoryBean -> public void setTarget(Object target);1357119239;Set the target object, that is, the bean to be wrapped with a transactional proxy._<p>The target may be any object, in which case a SingletonTargetSource will_be created. If it is a TargetSource, no wrapper TargetSource is created:_This enables the use of a pooling or prototype TargetSource etc._@see org.springframework.aop.TargetSource_@see org.springframework.aop.target.SingletonTargetSource_@see org.springframework.aop.target.LazyInitTargetSource_@see org.springframework.aop.target.PrototypeTargetSource_@see org.springframework.aop.target.CommonsPoolTargetSource;public void setTarget(Object target) {_		this.target = target__	};set,the,target,object,that,is,the,bean,to,be,wrapped,with,a,transactional,proxy,p,the,target,may,be,any,object,in,which,case,a,singleton,target,source,will,be,created,if,it,is,a,target,source,no,wrapper,target,source,is,created,this,enables,the,use,of,a,pooling,or,prototype,target,source,etc,see,org,springframework,aop,target,source,see,org,springframework,aop,target,singleton,target,source,see,org,springframework,aop,target,lazy,init,target,source,see,org,springframework,aop,target,prototype,target,source,see,org,springframework,aop,target,commons,pool,target,source;public,void,set,target,object,target,this,target,target
AbstractSingletonProxyFactoryBean -> public void setTarget(Object target);1368482696;Set the target object, that is, the bean to be wrapped with a transactional proxy._<p>The target may be any object, in which case a SingletonTargetSource will_be created. If it is a TargetSource, no wrapper TargetSource is created:_This enables the use of a pooling or prototype TargetSource etc._@see org.springframework.aop.TargetSource_@see org.springframework.aop.target.SingletonTargetSource_@see org.springframework.aop.target.LazyInitTargetSource_@see org.springframework.aop.target.PrototypeTargetSource_@see org.springframework.aop.target.CommonsPoolTargetSource;public void setTarget(Object target) {_		this.target = target__	};set,the,target,object,that,is,the,bean,to,be,wrapped,with,a,transactional,proxy,p,the,target,may,be,any,object,in,which,case,a,singleton,target,source,will,be,created,if,it,is,a,target,source,no,wrapper,target,source,is,created,this,enables,the,use,of,a,pooling,or,prototype,target,source,etc,see,org,springframework,aop,target,source,see,org,springframework,aop,target,singleton,target,source,see,org,springframework,aop,target,lazy,init,target,source,see,org,springframework,aop,target,prototype,target,source,see,org,springframework,aop,target,commons,pool,target,source;public,void,set,target,object,target,this,target,target
AbstractSingletonProxyFactoryBean -> public void setTarget(Object target);1424347624;Set the target object, that is, the bean to be wrapped with a transactional proxy._<p>The target may be any object, in which case a SingletonTargetSource will_be created. If it is a TargetSource, no wrapper TargetSource is created:_This enables the use of a pooling or prototype TargetSource etc._@see org.springframework.aop.TargetSource_@see org.springframework.aop.target.SingletonTargetSource_@see org.springframework.aop.target.LazyInitTargetSource_@see org.springframework.aop.target.PrototypeTargetSource_@see org.springframework.aop.target.CommonsPool2TargetSource;public void setTarget(Object target) {_		this.target = target__	};set,the,target,object,that,is,the,bean,to,be,wrapped,with,a,transactional,proxy,p,the,target,may,be,any,object,in,which,case,a,singleton,target,source,will,be,created,if,it,is,a,target,source,no,wrapper,target,source,is,created,this,enables,the,use,of,a,pooling,or,prototype,target,source,etc,see,org,springframework,aop,target,source,see,org,springframework,aop,target,singleton,target,source,see,org,springframework,aop,target,lazy,init,target,source,see,org,springframework,aop,target,prototype,target,source,see,org,springframework,aop,target,commons,pool2target,source;public,void,set,target,object,target,this,target,target
AbstractSingletonProxyFactoryBean -> public void setTarget(Object target);1434538946;Set the target object, that is, the bean to be wrapped with a transactional proxy._<p>The target may be any object, in which case a SingletonTargetSource will_be created. If it is a TargetSource, no wrapper TargetSource is created:_This enables the use of a pooling or prototype TargetSource etc._@see org.springframework.aop.TargetSource_@see org.springframework.aop.target.SingletonTargetSource_@see org.springframework.aop.target.LazyInitTargetSource_@see org.springframework.aop.target.PrototypeTargetSource_@see org.springframework.aop.target.CommonsPool2TargetSource;public void setTarget(Object target) {_		this.target = target__	};set,the,target,object,that,is,the,bean,to,be,wrapped,with,a,transactional,proxy,p,the,target,may,be,any,object,in,which,case,a,singleton,target,source,will,be,created,if,it,is,a,target,source,no,wrapper,target,source,is,created,this,enables,the,use,of,a,pooling,or,prototype,target,source,etc,see,org,springframework,aop,target,source,see,org,springframework,aop,target,singleton,target,source,see,org,springframework,aop,target,lazy,init,target,source,see,org,springframework,aop,target,prototype,target,source,see,org,springframework,aop,target,commons,pool2target,source;public,void,set,target,object,target,this,target,target
AbstractSingletonProxyFactoryBean -> public void setTarget(Object target);1496242568;Set the target object, that is, the bean to be wrapped with a transactional proxy._<p>The target may be any object, in which case a SingletonTargetSource will_be created. If it is a TargetSource, no wrapper TargetSource is created:_This enables the use of a pooling or prototype TargetSource etc._@see org.springframework.aop.TargetSource_@see org.springframework.aop.target.SingletonTargetSource_@see org.springframework.aop.target.LazyInitTargetSource_@see org.springframework.aop.target.PrototypeTargetSource_@see org.springframework.aop.target.CommonsPool2TargetSource;public void setTarget(Object target) {_		this.target = target__	};set,the,target,object,that,is,the,bean,to,be,wrapped,with,a,transactional,proxy,p,the,target,may,be,any,object,in,which,case,a,singleton,target,source,will,be,created,if,it,is,a,target,source,no,wrapper,target,source,is,created,this,enables,the,use,of,a,pooling,or,prototype,target,source,etc,see,org,springframework,aop,target,source,see,org,springframework,aop,target,singleton,target,source,see,org,springframework,aop,target,lazy,init,target,source,see,org,springframework,aop,target,prototype,target,source,see,org,springframework,aop,target,commons,pool2target,source;public,void,set,target,object,target,this,target,target
AbstractSingletonProxyFactoryBean -> public void setTarget(Object target);1496837955;Set the target object, that is, the bean to be wrapped with a transactional proxy._<p>The target may be any object, in which case a SingletonTargetSource will_be created. If it is a TargetSource, no wrapper TargetSource is created:_This enables the use of a pooling or prototype TargetSource etc._@see org.springframework.aop.TargetSource_@see org.springframework.aop.target.SingletonTargetSource_@see org.springframework.aop.target.LazyInitTargetSource_@see org.springframework.aop.target.PrototypeTargetSource_@see org.springframework.aop.target.CommonsPool2TargetSource;public void setTarget(Object target) {_		this.target = target__	};set,the,target,object,that,is,the,bean,to,be,wrapped,with,a,transactional,proxy,p,the,target,may,be,any,object,in,which,case,a,singleton,target,source,will,be,created,if,it,is,a,target,source,no,wrapper,target,source,is,created,this,enables,the,use,of,a,pooling,or,prototype,target,source,etc,see,org,springframework,aop,target,source,see,org,springframework,aop,target,singleton,target,source,see,org,springframework,aop,target,lazy,init,target,source,see,org,springframework,aop,target,prototype,target,source,see,org,springframework,aop,target,commons,pool2target,source;public,void,set,target,object,target,this,target,target
AbstractSingletonProxyFactoryBean -> public void setTarget(Object target);1497341594;Set the target object, that is, the bean to be wrapped with a transactional proxy._<p>The target may be any object, in which case a SingletonTargetSource will_be created. If it is a TargetSource, no wrapper TargetSource is created:_This enables the use of a pooling or prototype TargetSource etc._@see org.springframework.aop.TargetSource_@see org.springframework.aop.target.SingletonTargetSource_@see org.springframework.aop.target.LazyInitTargetSource_@see org.springframework.aop.target.PrototypeTargetSource_@see org.springframework.aop.target.CommonsPool2TargetSource;public void setTarget(Object target) {_		this.target = target__	};set,the,target,object,that,is,the,bean,to,be,wrapped,with,a,transactional,proxy,p,the,target,may,be,any,object,in,which,case,a,singleton,target,source,will,be,created,if,it,is,a,target,source,no,wrapper,target,source,is,created,this,enables,the,use,of,a,pooling,or,prototype,target,source,etc,see,org,springframework,aop,target,source,see,org,springframework,aop,target,singleton,target,source,see,org,springframework,aop,target,lazy,init,target,source,see,org,springframework,aop,target,prototype,target,source,see,org,springframework,aop,target,commons,pool2target,source;public,void,set,target,object,target,this,target,target
AbstractSingletonProxyFactoryBean -> public void setTarget(Object target);1498780456;Set the target object, that is, the bean to be wrapped with a transactional proxy._<p>The target may be any object, in which case a SingletonTargetSource will_be created. If it is a TargetSource, no wrapper TargetSource is created:_This enables the use of a pooling or prototype TargetSource etc._@see org.springframework.aop.TargetSource_@see org.springframework.aop.target.SingletonTargetSource_@see org.springframework.aop.target.LazyInitTargetSource_@see org.springframework.aop.target.PrototypeTargetSource_@see org.springframework.aop.target.CommonsPool2TargetSource;public void setTarget(Object target) {_		this.target = target__	};set,the,target,object,that,is,the,bean,to,be,wrapped,with,a,transactional,proxy,p,the,target,may,be,any,object,in,which,case,a,singleton,target,source,will,be,created,if,it,is,a,target,source,no,wrapper,target,source,is,created,this,enables,the,use,of,a,pooling,or,prototype,target,source,etc,see,org,springframework,aop,target,source,see,org,springframework,aop,target,singleton,target,source,see,org,springframework,aop,target,lazy,init,target,source,see,org,springframework,aop,target,prototype,target,source,see,org,springframework,aop,target,commons,pool2target,source;public,void,set,target,object,target,this,target,target
AbstractSingletonProxyFactoryBean -> public void setTarget(Object target);1502974979;Set the target object, that is, the bean to be wrapped with a transactional proxy._<p>The target may be any object, in which case a SingletonTargetSource will_be created. If it is a TargetSource, no wrapper TargetSource is created:_This enables the use of a pooling or prototype TargetSource etc._@see org.springframework.aop.TargetSource_@see org.springframework.aop.target.SingletonTargetSource_@see org.springframework.aop.target.LazyInitTargetSource_@see org.springframework.aop.target.PrototypeTargetSource_@see org.springframework.aop.target.CommonsPool2TargetSource;public void setTarget(Object target) {_		this.target = target__	};set,the,target,object,that,is,the,bean,to,be,wrapped,with,a,transactional,proxy,p,the,target,may,be,any,object,in,which,case,a,singleton,target,source,will,be,created,if,it,is,a,target,source,no,wrapper,target,source,is,created,this,enables,the,use,of,a,pooling,or,prototype,target,source,etc,see,org,springframework,aop,target,source,see,org,springframework,aop,target,singleton,target,source,see,org,springframework,aop,target,lazy,init,target,source,see,org,springframework,aop,target,prototype,target,source,see,org,springframework,aop,target,commons,pool2target,source;public,void,set,target,object,target,this,target,target
AbstractSingletonProxyFactoryBean -> public void setTarget(Object target);1530174524;Set the target object, that is, the bean to be wrapped with a transactional proxy._<p>The target may be any object, in which case a SingletonTargetSource will_be created. If it is a TargetSource, no wrapper TargetSource is created:_This enables the use of a pooling or prototype TargetSource etc._@see org.springframework.aop.TargetSource_@see org.springframework.aop.target.SingletonTargetSource_@see org.springframework.aop.target.LazyInitTargetSource_@see org.springframework.aop.target.PrototypeTargetSource_@see org.springframework.aop.target.CommonsPool2TargetSource;public void setTarget(Object target) {_		this.target = target__	};set,the,target,object,that,is,the,bean,to,be,wrapped,with,a,transactional,proxy,p,the,target,may,be,any,object,in,which,case,a,singleton,target,source,will,be,created,if,it,is,a,target,source,no,wrapper,target,source,is,created,this,enables,the,use,of,a,pooling,or,prototype,target,source,etc,see,org,springframework,aop,target,source,see,org,springframework,aop,target,singleton,target,source,see,org,springframework,aop,target,lazy,init,target,source,see,org,springframework,aop,target,prototype,target,source,see,org,springframework,aop,target,commons,pool2target,source;public,void,set,target,object,target,this,target,target
AbstractSingletonProxyFactoryBean -> protected abstract Object createMainInterceptor()_;1328020251;Create the "main" interceptor for this proxy factory bean._Typically an Advisor, but can also be any type of Advice._<p>Pre-interceptors will be applied before, post-interceptors_will be applied after this interceptor.;protected abstract Object createMainInterceptor()_;create,the,main,interceptor,for,this,proxy,factory,bean,typically,an,advisor,but,can,also,be,any,type,of,advice,p,pre,interceptors,will,be,applied,before,post,interceptors,will,be,applied,after,this,interceptor;protected,abstract,object,create,main,interceptor
AbstractSingletonProxyFactoryBean -> protected abstract Object createMainInterceptor()_;1356735495;Create the "main" interceptor for this proxy factory bean._Typically an Advisor, but can also be any type of Advice._<p>Pre-interceptors will be applied before, post-interceptors_will be applied after this interceptor.;protected abstract Object createMainInterceptor()_;create,the,main,interceptor,for,this,proxy,factory,bean,typically,an,advisor,but,can,also,be,any,type,of,advice,p,pre,interceptors,will,be,applied,before,post,interceptors,will,be,applied,after,this,interceptor;protected,abstract,object,create,main,interceptor
AbstractSingletonProxyFactoryBean -> protected abstract Object createMainInterceptor()_;1357119239;Create the "main" interceptor for this proxy factory bean._Typically an Advisor, but can also be any type of Advice._<p>Pre-interceptors will be applied before, post-interceptors_will be applied after this interceptor.;protected abstract Object createMainInterceptor()_;create,the,main,interceptor,for,this,proxy,factory,bean,typically,an,advisor,but,can,also,be,any,type,of,advice,p,pre,interceptors,will,be,applied,before,post,interceptors,will,be,applied,after,this,interceptor;protected,abstract,object,create,main,interceptor
AbstractSingletonProxyFactoryBean -> protected abstract Object createMainInterceptor()_;1368482696;Create the "main" interceptor for this proxy factory bean._Typically an Advisor, but can also be any type of Advice._<p>Pre-interceptors will be applied before, post-interceptors_will be applied after this interceptor.;protected abstract Object createMainInterceptor()_;create,the,main,interceptor,for,this,proxy,factory,bean,typically,an,advisor,but,can,also,be,any,type,of,advice,p,pre,interceptors,will,be,applied,before,post,interceptors,will,be,applied,after,this,interceptor;protected,abstract,object,create,main,interceptor
AbstractSingletonProxyFactoryBean -> protected abstract Object createMainInterceptor()_;1424347624;Create the "main" interceptor for this proxy factory bean._Typically an Advisor, but can also be any type of Advice._<p>Pre-interceptors will be applied before, post-interceptors_will be applied after this interceptor.;protected abstract Object createMainInterceptor()_;create,the,main,interceptor,for,this,proxy,factory,bean,typically,an,advisor,but,can,also,be,any,type,of,advice,p,pre,interceptors,will,be,applied,before,post,interceptors,will,be,applied,after,this,interceptor;protected,abstract,object,create,main,interceptor
AbstractSingletonProxyFactoryBean -> protected abstract Object createMainInterceptor()_;1434538946;Create the "main" interceptor for this proxy factory bean._Typically an Advisor, but can also be any type of Advice._<p>Pre-interceptors will be applied before, post-interceptors_will be applied after this interceptor.;protected abstract Object createMainInterceptor()_;create,the,main,interceptor,for,this,proxy,factory,bean,typically,an,advisor,but,can,also,be,any,type,of,advice,p,pre,interceptors,will,be,applied,before,post,interceptors,will,be,applied,after,this,interceptor;protected,abstract,object,create,main,interceptor
AbstractSingletonProxyFactoryBean -> protected abstract Object createMainInterceptor()_;1496242568;Create the "main" interceptor for this proxy factory bean._Typically an Advisor, but can also be any type of Advice._<p>Pre-interceptors will be applied before, post-interceptors_will be applied after this interceptor.;protected abstract Object createMainInterceptor()_;create,the,main,interceptor,for,this,proxy,factory,bean,typically,an,advisor,but,can,also,be,any,type,of,advice,p,pre,interceptors,will,be,applied,before,post,interceptors,will,be,applied,after,this,interceptor;protected,abstract,object,create,main,interceptor
AbstractSingletonProxyFactoryBean -> protected abstract Object createMainInterceptor()_;1496837955;Create the "main" interceptor for this proxy factory bean._Typically an Advisor, but can also be any type of Advice._<p>Pre-interceptors will be applied before, post-interceptors_will be applied after this interceptor.;protected abstract Object createMainInterceptor()_;create,the,main,interceptor,for,this,proxy,factory,bean,typically,an,advisor,but,can,also,be,any,type,of,advice,p,pre,interceptors,will,be,applied,before,post,interceptors,will,be,applied,after,this,interceptor;protected,abstract,object,create,main,interceptor
AbstractSingletonProxyFactoryBean -> protected abstract Object createMainInterceptor()_;1497341594;Create the "main" interceptor for this proxy factory bean._Typically an Advisor, but can also be any type of Advice._<p>Pre-interceptors will be applied before, post-interceptors_will be applied after this interceptor.;protected abstract Object createMainInterceptor()_;create,the,main,interceptor,for,this,proxy,factory,bean,typically,an,advisor,but,can,also,be,any,type,of,advice,p,pre,interceptors,will,be,applied,before,post,interceptors,will,be,applied,after,this,interceptor;protected,abstract,object,create,main,interceptor
AbstractSingletonProxyFactoryBean -> protected abstract Object createMainInterceptor()_;1498780456;Create the "main" interceptor for this proxy factory bean._Typically an Advisor, but can also be any type of Advice._<p>Pre-interceptors will be applied before, post-interceptors_will be applied after this interceptor.;protected abstract Object createMainInterceptor()_;create,the,main,interceptor,for,this,proxy,factory,bean,typically,an,advisor,but,can,also,be,any,type,of,advice,p,pre,interceptors,will,be,applied,before,post,interceptors,will,be,applied,after,this,interceptor;protected,abstract,object,create,main,interceptor
AbstractSingletonProxyFactoryBean -> protected abstract Object createMainInterceptor()_;1502974979;Create the "main" interceptor for this proxy factory bean._Typically an Advisor, but can also be any type of Advice._<p>Pre-interceptors will be applied before, post-interceptors_will be applied after this interceptor.;protected abstract Object createMainInterceptor()_;create,the,main,interceptor,for,this,proxy,factory,bean,typically,an,advisor,but,can,also,be,any,type,of,advice,p,pre,interceptors,will,be,applied,before,post,interceptors,will,be,applied,after,this,interceptor;protected,abstract,object,create,main,interceptor
AbstractSingletonProxyFactoryBean -> protected abstract Object createMainInterceptor()_;1530174524;Create the "main" interceptor for this proxy factory bean._Typically an Advisor, but can also be any type of Advice._<p>Pre-interceptors will be applied before, post-interceptors_will be applied after this interceptor.;protected abstract Object createMainInterceptor()_;create,the,main,interceptor,for,this,proxy,factory,bean,typically,an,advisor,but,can,also,be,any,type,of,advice,p,pre,interceptors,will,be,applied,before,post,interceptors,will,be,applied,after,this,interceptor;protected,abstract,object,create,main,interceptor
AbstractSingletonProxyFactoryBean -> protected void postProcessProxyFactory(ProxyFactory proxyFactory);1434538946;A hook for subclasses to post-process the {@link ProxyFactory}_before creating the proxy instance with it._@param proxyFactory the AOP ProxyFactory about to be used_@since 4.2;protected void postProcessProxyFactory(ProxyFactory proxyFactory) {_	};a,hook,for,subclasses,to,post,process,the,link,proxy,factory,before,creating,the,proxy,instance,with,it,param,proxy,factory,the,aop,proxy,factory,about,to,be,used,since,4,2;protected,void,post,process,proxy,factory,proxy,factory,proxy,factory
AbstractSingletonProxyFactoryBean -> protected void postProcessProxyFactory(ProxyFactory proxyFactory);1496242568;A hook for subclasses to post-process the {@link ProxyFactory}_before creating the proxy instance with it._@param proxyFactory the AOP ProxyFactory about to be used_@since 4.2;protected void postProcessProxyFactory(ProxyFactory proxyFactory) {_	};a,hook,for,subclasses,to,post,process,the,link,proxy,factory,before,creating,the,proxy,instance,with,it,param,proxy,factory,the,aop,proxy,factory,about,to,be,used,since,4,2;protected,void,post,process,proxy,factory,proxy,factory,proxy,factory
AbstractSingletonProxyFactoryBean -> protected void postProcessProxyFactory(ProxyFactory proxyFactory);1496837955;A hook for subclasses to post-process the {@link ProxyFactory}_before creating the proxy instance with it._@param proxyFactory the AOP ProxyFactory about to be used_@since 4.2;protected void postProcessProxyFactory(ProxyFactory proxyFactory) {_	};a,hook,for,subclasses,to,post,process,the,link,proxy,factory,before,creating,the,proxy,instance,with,it,param,proxy,factory,the,aop,proxy,factory,about,to,be,used,since,4,2;protected,void,post,process,proxy,factory,proxy,factory,proxy,factory
AbstractSingletonProxyFactoryBean -> protected void postProcessProxyFactory(ProxyFactory proxyFactory);1497341594;A hook for subclasses to post-process the {@link ProxyFactory}_before creating the proxy instance with it._@param proxyFactory the AOP ProxyFactory about to be used_@since 4.2;protected void postProcessProxyFactory(ProxyFactory proxyFactory) {_	};a,hook,for,subclasses,to,post,process,the,link,proxy,factory,before,creating,the,proxy,instance,with,it,param,proxy,factory,the,aop,proxy,factory,about,to,be,used,since,4,2;protected,void,post,process,proxy,factory,proxy,factory,proxy,factory
AbstractSingletonProxyFactoryBean -> protected void postProcessProxyFactory(ProxyFactory proxyFactory);1498780456;A hook for subclasses to post-process the {@link ProxyFactory}_before creating the proxy instance with it._@param proxyFactory the AOP ProxyFactory about to be used_@since 4.2;protected void postProcessProxyFactory(ProxyFactory proxyFactory) {_	};a,hook,for,subclasses,to,post,process,the,link,proxy,factory,before,creating,the,proxy,instance,with,it,param,proxy,factory,the,aop,proxy,factory,about,to,be,used,since,4,2;protected,void,post,process,proxy,factory,proxy,factory,proxy,factory
AbstractSingletonProxyFactoryBean -> protected void postProcessProxyFactory(ProxyFactory proxyFactory);1502974979;A hook for subclasses to post-process the {@link ProxyFactory}_before creating the proxy instance with it._@param proxyFactory the AOP ProxyFactory about to be used_@since 4.2;protected void postProcessProxyFactory(ProxyFactory proxyFactory) {_	};a,hook,for,subclasses,to,post,process,the,link,proxy,factory,before,creating,the,proxy,instance,with,it,param,proxy,factory,the,aop,proxy,factory,about,to,be,used,since,4,2;protected,void,post,process,proxy,factory,proxy,factory,proxy,factory
AbstractSingletonProxyFactoryBean -> protected void postProcessProxyFactory(ProxyFactory proxyFactory);1530174524;A hook for subclasses to post-process the {@link ProxyFactory}_before creating the proxy instance with it._@param proxyFactory the AOP ProxyFactory about to be used_@since 4.2;protected void postProcessProxyFactory(ProxyFactory proxyFactory) {_	};a,hook,for,subclasses,to,post,process,the,link,proxy,factory,before,creating,the,proxy,instance,with,it,param,proxy,factory,the,aop,proxy,factory,about,to,be,used,since,4,2;protected,void,post,process,proxy,factory,proxy,factory,proxy,factory
AbstractSingletonProxyFactoryBean -> protected TargetSource createTargetSource(Object target);1328020251;Determine a TargetSource for the given target (or TargetSource)._@param target target. If this is an implementation of TargetSource it is_used as our TargetSource_ otherwise it is wrapped in a SingletonTargetSource._@return a TargetSource for this object;protected TargetSource createTargetSource(Object target) {_		if (target instanceof TargetSource) {_			return (TargetSource) target__		}_		else {_			return new SingletonTargetSource(target)__		}_	};determine,a,target,source,for,the,given,target,or,target,source,param,target,target,if,this,is,an,implementation,of,target,source,it,is,used,as,our,target,source,otherwise,it,is,wrapped,in,a,singleton,target,source,return,a,target,source,for,this,object;protected,target,source,create,target,source,object,target,if,target,instanceof,target,source,return,target,source,target,else,return,new,singleton,target,source,target
AbstractSingletonProxyFactoryBean -> protected TargetSource createTargetSource(Object target);1356735495;Determine a TargetSource for the given target (or TargetSource)._@param target target. If this is an implementation of TargetSource it is_used as our TargetSource_ otherwise it is wrapped in a SingletonTargetSource._@return a TargetSource for this object;protected TargetSource createTargetSource(Object target) {_		if (target instanceof TargetSource) {_			return (TargetSource) target__		}_		else {_			return new SingletonTargetSource(target)__		}_	};determine,a,target,source,for,the,given,target,or,target,source,param,target,target,if,this,is,an,implementation,of,target,source,it,is,used,as,our,target,source,otherwise,it,is,wrapped,in,a,singleton,target,source,return,a,target,source,for,this,object;protected,target,source,create,target,source,object,target,if,target,instanceof,target,source,return,target,source,target,else,return,new,singleton,target,source,target
AbstractSingletonProxyFactoryBean -> protected TargetSource createTargetSource(Object target);1357119239;Determine a TargetSource for the given target (or TargetSource)._@param target target. If this is an implementation of TargetSource it is_used as our TargetSource_ otherwise it is wrapped in a SingletonTargetSource._@return a TargetSource for this object;protected TargetSource createTargetSource(Object target) {_		if (target instanceof TargetSource) {_			return (TargetSource) target__		}_		else {_			return new SingletonTargetSource(target)__		}_	};determine,a,target,source,for,the,given,target,or,target,source,param,target,target,if,this,is,an,implementation,of,target,source,it,is,used,as,our,target,source,otherwise,it,is,wrapped,in,a,singleton,target,source,return,a,target,source,for,this,object;protected,target,source,create,target,source,object,target,if,target,instanceof,target,source,return,target,source,target,else,return,new,singleton,target,source,target
AbstractSingletonProxyFactoryBean -> protected TargetSource createTargetSource(Object target);1368482696;Determine a TargetSource for the given target (or TargetSource)._@param target target. If this is an implementation of TargetSource it is_used as our TargetSource_ otherwise it is wrapped in a SingletonTargetSource._@return a TargetSource for this object;protected TargetSource createTargetSource(Object target) {_		if (target instanceof TargetSource) {_			return (TargetSource) target__		}_		else {_			return new SingletonTargetSource(target)__		}_	};determine,a,target,source,for,the,given,target,or,target,source,param,target,target,if,this,is,an,implementation,of,target,source,it,is,used,as,our,target,source,otherwise,it,is,wrapped,in,a,singleton,target,source,return,a,target,source,for,this,object;protected,target,source,create,target,source,object,target,if,target,instanceof,target,source,return,target,source,target,else,return,new,singleton,target,source,target
AbstractSingletonProxyFactoryBean -> protected TargetSource createTargetSource(Object target);1424347624;Determine a TargetSource for the given target (or TargetSource)._@param target target. If this is an implementation of TargetSource it is_used as our TargetSource_ otherwise it is wrapped in a SingletonTargetSource._@return a TargetSource for this object;protected TargetSource createTargetSource(Object target) {_		if (target instanceof TargetSource) {_			return (TargetSource) target__		}_		else {_			return new SingletonTargetSource(target)__		}_	};determine,a,target,source,for,the,given,target,or,target,source,param,target,target,if,this,is,an,implementation,of,target,source,it,is,used,as,our,target,source,otherwise,it,is,wrapped,in,a,singleton,target,source,return,a,target,source,for,this,object;protected,target,source,create,target,source,object,target,if,target,instanceof,target,source,return,target,source,target,else,return,new,singleton,target,source,target
AbstractSingletonProxyFactoryBean -> protected TargetSource createTargetSource(Object target);1434538946;Determine a TargetSource for the given target (or TargetSource)._@param target target. If this is an implementation of TargetSource it is_used as our TargetSource_ otherwise it is wrapped in a SingletonTargetSource._@return a TargetSource for this object;protected TargetSource createTargetSource(Object target) {_		if (target instanceof TargetSource) {_			return (TargetSource) target__		}_		else {_			return new SingletonTargetSource(target)__		}_	};determine,a,target,source,for,the,given,target,or,target,source,param,target,target,if,this,is,an,implementation,of,target,source,it,is,used,as,our,target,source,otherwise,it,is,wrapped,in,a,singleton,target,source,return,a,target,source,for,this,object;protected,target,source,create,target,source,object,target,if,target,instanceof,target,source,return,target,source,target,else,return,new,singleton,target,source,target
AbstractSingletonProxyFactoryBean -> protected TargetSource createTargetSource(Object target);1496242568;Determine a TargetSource for the given target (or TargetSource)._@param target target. If this is an implementation of TargetSource it is_used as our TargetSource_ otherwise it is wrapped in a SingletonTargetSource._@return a TargetSource for this object;protected TargetSource createTargetSource(Object target) {_		if (target instanceof TargetSource) {_			return (TargetSource) target__		}_		else {_			return new SingletonTargetSource(target)__		}_	};determine,a,target,source,for,the,given,target,or,target,source,param,target,target,if,this,is,an,implementation,of,target,source,it,is,used,as,our,target,source,otherwise,it,is,wrapped,in,a,singleton,target,source,return,a,target,source,for,this,object;protected,target,source,create,target,source,object,target,if,target,instanceof,target,source,return,target,source,target,else,return,new,singleton,target,source,target
AbstractSingletonProxyFactoryBean -> protected TargetSource createTargetSource(Object target);1496837955;Determine a TargetSource for the given target (or TargetSource)._@param target target. If this is an implementation of TargetSource it is_used as our TargetSource_ otherwise it is wrapped in a SingletonTargetSource._@return a TargetSource for this object;protected TargetSource createTargetSource(Object target) {_		if (target instanceof TargetSource) {_			return (TargetSource) target__		}_		else {_			return new SingletonTargetSource(target)__		}_	};determine,a,target,source,for,the,given,target,or,target,source,param,target,target,if,this,is,an,implementation,of,target,source,it,is,used,as,our,target,source,otherwise,it,is,wrapped,in,a,singleton,target,source,return,a,target,source,for,this,object;protected,target,source,create,target,source,object,target,if,target,instanceof,target,source,return,target,source,target,else,return,new,singleton,target,source,target
AbstractSingletonProxyFactoryBean -> protected TargetSource createTargetSource(Object target);1497341594;Determine a TargetSource for the given target (or TargetSource)._@param target target. If this is an implementation of TargetSource it is_used as our TargetSource_ otherwise it is wrapped in a SingletonTargetSource._@return a TargetSource for this object;protected TargetSource createTargetSource(Object target) {_		if (target instanceof TargetSource) {_			return (TargetSource) target__		}_		else {_			return new SingletonTargetSource(target)__		}_	};determine,a,target,source,for,the,given,target,or,target,source,param,target,target,if,this,is,an,implementation,of,target,source,it,is,used,as,our,target,source,otherwise,it,is,wrapped,in,a,singleton,target,source,return,a,target,source,for,this,object;protected,target,source,create,target,source,object,target,if,target,instanceof,target,source,return,target,source,target,else,return,new,singleton,target,source,target
AbstractSingletonProxyFactoryBean -> protected TargetSource createTargetSource(Object target);1498780456;Determine a TargetSource for the given target (or TargetSource)._@param target target. If this is an implementation of TargetSource it is_used as our TargetSource_ otherwise it is wrapped in a SingletonTargetSource._@return a TargetSource for this object;protected TargetSource createTargetSource(Object target) {_		if (target instanceof TargetSource) {_			return (TargetSource) target__		}_		else {_			return new SingletonTargetSource(target)__		}_	};determine,a,target,source,for,the,given,target,or,target,source,param,target,target,if,this,is,an,implementation,of,target,source,it,is,used,as,our,target,source,otherwise,it,is,wrapped,in,a,singleton,target,source,return,a,target,source,for,this,object;protected,target,source,create,target,source,object,target,if,target,instanceof,target,source,return,target,source,target,else,return,new,singleton,target,source,target
AbstractSingletonProxyFactoryBean -> protected TargetSource createTargetSource(Object target);1502974979;Determine a TargetSource for the given target (or TargetSource)._@param target target. If this is an implementation of TargetSource it is_used as our TargetSource_ otherwise it is wrapped in a SingletonTargetSource._@return a TargetSource for this object;protected TargetSource createTargetSource(Object target) {_		if (target instanceof TargetSource) {_			return (TargetSource) target__		}_		else {_			return new SingletonTargetSource(target)__		}_	};determine,a,target,source,for,the,given,target,or,target,source,param,target,target,if,this,is,an,implementation,of,target,source,it,is,used,as,our,target,source,otherwise,it,is,wrapped,in,a,singleton,target,source,return,a,target,source,for,this,object;protected,target,source,create,target,source,object,target,if,target,instanceof,target,source,return,target,source,target,else,return,new,singleton,target,source,target
AbstractSingletonProxyFactoryBean -> protected TargetSource createTargetSource(Object target);1530174524;Determine a TargetSource for the given target (or TargetSource)._@param target target. If this is an implementation of TargetSource it is_used as our TargetSource_ otherwise it is wrapped in a SingletonTargetSource._@return a TargetSource for this object;protected TargetSource createTargetSource(Object target) {_		if (target instanceof TargetSource) {_			return (TargetSource) target__		}_		else {_			return new SingletonTargetSource(target)__		}_	};determine,a,target,source,for,the,given,target,or,target,source,param,target,target,if,this,is,an,implementation,of,target,source,it,is,used,as,our,target,source,otherwise,it,is,wrapped,in,a,singleton,target,source,return,a,target,source,for,this,object;protected,target,source,create,target,source,object,target,if,target,instanceof,target,source,return,target,source,target,else,return,new,singleton,target,source,target
AbstractSingletonProxyFactoryBean -> public void setProxyClassLoader(ClassLoader classLoader);1328020251;Set the ClassLoader to generate the proxy class in._<p>Default is the bean ClassLoader, i.e. the ClassLoader used by the_containing BeanFactory for loading all bean classes. This can be_overridden here for specific proxies.;public void setProxyClassLoader(ClassLoader classLoader) {_		this.proxyClassLoader = classLoader__	};set,the,class,loader,to,generate,the,proxy,class,in,p,default,is,the,bean,class,loader,i,e,the,class,loader,used,by,the,containing,bean,factory,for,loading,all,bean,classes,this,can,be,overridden,here,for,specific,proxies;public,void,set,proxy,class,loader,class,loader,class,loader,this,proxy,class,loader,class,loader
AbstractSingletonProxyFactoryBean -> public void setProxyClassLoader(ClassLoader classLoader);1356735495;Set the ClassLoader to generate the proxy class in._<p>Default is the bean ClassLoader, i.e. the ClassLoader used by the_containing BeanFactory for loading all bean classes. This can be_overridden here for specific proxies.;public void setProxyClassLoader(ClassLoader classLoader) {_		this.proxyClassLoader = classLoader__	};set,the,class,loader,to,generate,the,proxy,class,in,p,default,is,the,bean,class,loader,i,e,the,class,loader,used,by,the,containing,bean,factory,for,loading,all,bean,classes,this,can,be,overridden,here,for,specific,proxies;public,void,set,proxy,class,loader,class,loader,class,loader,this,proxy,class,loader,class,loader
AbstractSingletonProxyFactoryBean -> public void setProxyClassLoader(ClassLoader classLoader);1357119239;Set the ClassLoader to generate the proxy class in._<p>Default is the bean ClassLoader, i.e. the ClassLoader used by the_containing BeanFactory for loading all bean classes. This can be_overridden here for specific proxies.;public void setProxyClassLoader(ClassLoader classLoader) {_		this.proxyClassLoader = classLoader__	};set,the,class,loader,to,generate,the,proxy,class,in,p,default,is,the,bean,class,loader,i,e,the,class,loader,used,by,the,containing,bean,factory,for,loading,all,bean,classes,this,can,be,overridden,here,for,specific,proxies;public,void,set,proxy,class,loader,class,loader,class,loader,this,proxy,class,loader,class,loader
AbstractSingletonProxyFactoryBean -> public void setProxyClassLoader(ClassLoader classLoader);1368482696;Set the ClassLoader to generate the proxy class in._<p>Default is the bean ClassLoader, i.e. the ClassLoader used by the_containing BeanFactory for loading all bean classes. This can be_overridden here for specific proxies.;public void setProxyClassLoader(ClassLoader classLoader) {_		this.proxyClassLoader = classLoader__	};set,the,class,loader,to,generate,the,proxy,class,in,p,default,is,the,bean,class,loader,i,e,the,class,loader,used,by,the,containing,bean,factory,for,loading,all,bean,classes,this,can,be,overridden,here,for,specific,proxies;public,void,set,proxy,class,loader,class,loader,class,loader,this,proxy,class,loader,class,loader
AbstractSingletonProxyFactoryBean -> public void setProxyClassLoader(ClassLoader classLoader);1424347624;Set the ClassLoader to generate the proxy class in._<p>Default is the bean ClassLoader, i.e. the ClassLoader used by the_containing BeanFactory for loading all bean classes. This can be_overridden here for specific proxies.;public void setProxyClassLoader(ClassLoader classLoader) {_		this.proxyClassLoader = classLoader__	};set,the,class,loader,to,generate,the,proxy,class,in,p,default,is,the,bean,class,loader,i,e,the,class,loader,used,by,the,containing,bean,factory,for,loading,all,bean,classes,this,can,be,overridden,here,for,specific,proxies;public,void,set,proxy,class,loader,class,loader,class,loader,this,proxy,class,loader,class,loader
AbstractSingletonProxyFactoryBean -> public void setProxyClassLoader(ClassLoader classLoader);1434538946;Set the ClassLoader to generate the proxy class in._<p>Default is the bean ClassLoader, i.e. the ClassLoader used by the_containing BeanFactory for loading all bean classes. This can be_overridden here for specific proxies.;public void setProxyClassLoader(ClassLoader classLoader) {_		this.proxyClassLoader = classLoader__	};set,the,class,loader,to,generate,the,proxy,class,in,p,default,is,the,bean,class,loader,i,e,the,class,loader,used,by,the,containing,bean,factory,for,loading,all,bean,classes,this,can,be,overridden,here,for,specific,proxies;public,void,set,proxy,class,loader,class,loader,class,loader,this,proxy,class,loader,class,loader
AbstractSingletonProxyFactoryBean -> public void setProxyClassLoader(ClassLoader classLoader);1496242568;Set the ClassLoader to generate the proxy class in._<p>Default is the bean ClassLoader, i.e. the ClassLoader used by the_containing BeanFactory for loading all bean classes. This can be_overridden here for specific proxies.;public void setProxyClassLoader(ClassLoader classLoader) {_		this.proxyClassLoader = classLoader__	};set,the,class,loader,to,generate,the,proxy,class,in,p,default,is,the,bean,class,loader,i,e,the,class,loader,used,by,the,containing,bean,factory,for,loading,all,bean,classes,this,can,be,overridden,here,for,specific,proxies;public,void,set,proxy,class,loader,class,loader,class,loader,this,proxy,class,loader,class,loader
AbstractSingletonProxyFactoryBean -> public void setProxyClassLoader(ClassLoader classLoader);1496837955;Set the ClassLoader to generate the proxy class in._<p>Default is the bean ClassLoader, i.e. the ClassLoader used by the_containing BeanFactory for loading all bean classes. This can be_overridden here for specific proxies.;public void setProxyClassLoader(ClassLoader classLoader) {_		this.proxyClassLoader = classLoader__	};set,the,class,loader,to,generate,the,proxy,class,in,p,default,is,the,bean,class,loader,i,e,the,class,loader,used,by,the,containing,bean,factory,for,loading,all,bean,classes,this,can,be,overridden,here,for,specific,proxies;public,void,set,proxy,class,loader,class,loader,class,loader,this,proxy,class,loader,class,loader
AbstractSingletonProxyFactoryBean -> public void setProxyClassLoader(ClassLoader classLoader);1497341594;Set the ClassLoader to generate the proxy class in._<p>Default is the bean ClassLoader, i.e. the ClassLoader used by the_containing BeanFactory for loading all bean classes. This can be_overridden here for specific proxies.;public void setProxyClassLoader(ClassLoader classLoader) {_		this.proxyClassLoader = classLoader__	};set,the,class,loader,to,generate,the,proxy,class,in,p,default,is,the,bean,class,loader,i,e,the,class,loader,used,by,the,containing,bean,factory,for,loading,all,bean,classes,this,can,be,overridden,here,for,specific,proxies;public,void,set,proxy,class,loader,class,loader,class,loader,this,proxy,class,loader,class,loader
AbstractSingletonProxyFactoryBean -> public void setProxyClassLoader(ClassLoader classLoader);1498780456;Set the ClassLoader to generate the proxy class in._<p>Default is the bean ClassLoader, i.e. the ClassLoader used by the_containing BeanFactory for loading all bean classes. This can be_overridden here for specific proxies.;public void setProxyClassLoader(ClassLoader classLoader) {_		this.proxyClassLoader = classLoader__	};set,the,class,loader,to,generate,the,proxy,class,in,p,default,is,the,bean,class,loader,i,e,the,class,loader,used,by,the,containing,bean,factory,for,loading,all,bean,classes,this,can,be,overridden,here,for,specific,proxies;public,void,set,proxy,class,loader,class,loader,class,loader,this,proxy,class,loader,class,loader
AbstractSingletonProxyFactoryBean -> public void setProxyClassLoader(ClassLoader classLoader);1502974979;Set the ClassLoader to generate the proxy class in._<p>Default is the bean ClassLoader, i.e. the ClassLoader used by the_containing BeanFactory for loading all bean classes. This can be_overridden here for specific proxies.;public void setProxyClassLoader(ClassLoader classLoader) {_		this.proxyClassLoader = classLoader__	};set,the,class,loader,to,generate,the,proxy,class,in,p,default,is,the,bean,class,loader,i,e,the,class,loader,used,by,the,containing,bean,factory,for,loading,all,bean,classes,this,can,be,overridden,here,for,specific,proxies;public,void,set,proxy,class,loader,class,loader,class,loader,this,proxy,class,loader,class,loader
AbstractSingletonProxyFactoryBean -> public void setProxyClassLoader(ClassLoader classLoader);1530174524;Set the ClassLoader to generate the proxy class in._<p>Default is the bean ClassLoader, i.e. the ClassLoader used by the_containing BeanFactory for loading all bean classes. This can be_overridden here for specific proxies.;public void setProxyClassLoader(ClassLoader classLoader) {_		this.proxyClassLoader = classLoader__	};set,the,class,loader,to,generate,the,proxy,class,in,p,default,is,the,bean,class,loader,i,e,the,class,loader,used,by,the,containing,bean,factory,for,loading,all,bean,classes,this,can,be,overridden,here,for,specific,proxies;public,void,set,proxy,class,loader,class,loader,class,loader,this,proxy,class,loader,class,loader
AbstractSingletonProxyFactoryBean -> public void setPreInterceptors(Object[] preInterceptors);1328020251;Set additional interceptors (or advisors) to be applied before the_implicit transaction interceptor, e.g. a PerformanceMonitorInterceptor._<p>You may specify any AOP Alliance MethodInterceptors or other_Spring AOP Advices, as well as Spring AOP Advisors._@see org.springframework.aop.interceptor.PerformanceMonitorInterceptor;public void setPreInterceptors(Object[] preInterceptors) {_		this.preInterceptors = preInterceptors__	};set,additional,interceptors,or,advisors,to,be,applied,before,the,implicit,transaction,interceptor,e,g,a,performance,monitor,interceptor,p,you,may,specify,any,aop,alliance,method,interceptors,or,other,spring,aop,advices,as,well,as,spring,aop,advisors,see,org,springframework,aop,interceptor,performance,monitor,interceptor;public,void,set,pre,interceptors,object,pre,interceptors,this,pre,interceptors,pre,interceptors
AbstractSingletonProxyFactoryBean -> public void setPreInterceptors(Object[] preInterceptors);1356735495;Set additional interceptors (or advisors) to be applied before the_implicit transaction interceptor, e.g. a PerformanceMonitorInterceptor._<p>You may specify any AOP Alliance MethodInterceptors or other_Spring AOP Advices, as well as Spring AOP Advisors._@see org.springframework.aop.interceptor.PerformanceMonitorInterceptor;public void setPreInterceptors(Object[] preInterceptors) {_		this.preInterceptors = preInterceptors__	};set,additional,interceptors,or,advisors,to,be,applied,before,the,implicit,transaction,interceptor,e,g,a,performance,monitor,interceptor,p,you,may,specify,any,aop,alliance,method,interceptors,or,other,spring,aop,advices,as,well,as,spring,aop,advisors,see,org,springframework,aop,interceptor,performance,monitor,interceptor;public,void,set,pre,interceptors,object,pre,interceptors,this,pre,interceptors,pre,interceptors
AbstractSingletonProxyFactoryBean -> public void setPreInterceptors(Object[] preInterceptors);1357119239;Set additional interceptors (or advisors) to be applied before the_implicit transaction interceptor, e.g. a PerformanceMonitorInterceptor._<p>You may specify any AOP Alliance MethodInterceptors or other_Spring AOP Advices, as well as Spring AOP Advisors._@see org.springframework.aop.interceptor.PerformanceMonitorInterceptor;public void setPreInterceptors(Object[] preInterceptors) {_		this.preInterceptors = preInterceptors__	};set,additional,interceptors,or,advisors,to,be,applied,before,the,implicit,transaction,interceptor,e,g,a,performance,monitor,interceptor,p,you,may,specify,any,aop,alliance,method,interceptors,or,other,spring,aop,advices,as,well,as,spring,aop,advisors,see,org,springframework,aop,interceptor,performance,monitor,interceptor;public,void,set,pre,interceptors,object,pre,interceptors,this,pre,interceptors,pre,interceptors
AbstractSingletonProxyFactoryBean -> public void setPreInterceptors(Object[] preInterceptors);1368482696;Set additional interceptors (or advisors) to be applied before the_implicit transaction interceptor, e.g. a PerformanceMonitorInterceptor._<p>You may specify any AOP Alliance MethodInterceptors or other_Spring AOP Advices, as well as Spring AOP Advisors._@see org.springframework.aop.interceptor.PerformanceMonitorInterceptor;public void setPreInterceptors(Object[] preInterceptors) {_		this.preInterceptors = preInterceptors__	};set,additional,interceptors,or,advisors,to,be,applied,before,the,implicit,transaction,interceptor,e,g,a,performance,monitor,interceptor,p,you,may,specify,any,aop,alliance,method,interceptors,or,other,spring,aop,advices,as,well,as,spring,aop,advisors,see,org,springframework,aop,interceptor,performance,monitor,interceptor;public,void,set,pre,interceptors,object,pre,interceptors,this,pre,interceptors,pre,interceptors
AbstractSingletonProxyFactoryBean -> public void setPreInterceptors(Object[] preInterceptors);1424347624;Set additional interceptors (or advisors) to be applied before the_implicit transaction interceptor, e.g. a PerformanceMonitorInterceptor._<p>You may specify any AOP Alliance MethodInterceptors or other_Spring AOP Advices, as well as Spring AOP Advisors._@see org.springframework.aop.interceptor.PerformanceMonitorInterceptor;public void setPreInterceptors(Object[] preInterceptors) {_		this.preInterceptors = preInterceptors__	};set,additional,interceptors,or,advisors,to,be,applied,before,the,implicit,transaction,interceptor,e,g,a,performance,monitor,interceptor,p,you,may,specify,any,aop,alliance,method,interceptors,or,other,spring,aop,advices,as,well,as,spring,aop,advisors,see,org,springframework,aop,interceptor,performance,monitor,interceptor;public,void,set,pre,interceptors,object,pre,interceptors,this,pre,interceptors,pre,interceptors
AbstractSingletonProxyFactoryBean -> public void setPreInterceptors(Object[] preInterceptors);1434538946;Set additional interceptors (or advisors) to be applied before the_implicit transaction interceptor, e.g. a PerformanceMonitorInterceptor._<p>You may specify any AOP Alliance MethodInterceptors or other_Spring AOP Advices, as well as Spring AOP Advisors._@see org.springframework.aop.interceptor.PerformanceMonitorInterceptor;public void setPreInterceptors(Object[] preInterceptors) {_		this.preInterceptors = preInterceptors__	};set,additional,interceptors,or,advisors,to,be,applied,before,the,implicit,transaction,interceptor,e,g,a,performance,monitor,interceptor,p,you,may,specify,any,aop,alliance,method,interceptors,or,other,spring,aop,advices,as,well,as,spring,aop,advisors,see,org,springframework,aop,interceptor,performance,monitor,interceptor;public,void,set,pre,interceptors,object,pre,interceptors,this,pre,interceptors,pre,interceptors
AbstractSingletonProxyFactoryBean -> public void setPreInterceptors(Object[] preInterceptors);1496242568;Set additional interceptors (or advisors) to be applied before the_implicit transaction interceptor, e.g. a PerformanceMonitorInterceptor._<p>You may specify any AOP Alliance MethodInterceptors or other_Spring AOP Advices, as well as Spring AOP Advisors._@see org.springframework.aop.interceptor.PerformanceMonitorInterceptor;public void setPreInterceptors(Object[] preInterceptors) {_		this.preInterceptors = preInterceptors__	};set,additional,interceptors,or,advisors,to,be,applied,before,the,implicit,transaction,interceptor,e,g,a,performance,monitor,interceptor,p,you,may,specify,any,aop,alliance,method,interceptors,or,other,spring,aop,advices,as,well,as,spring,aop,advisors,see,org,springframework,aop,interceptor,performance,monitor,interceptor;public,void,set,pre,interceptors,object,pre,interceptors,this,pre,interceptors,pre,interceptors
AbstractSingletonProxyFactoryBean -> public void setPreInterceptors(Object[] preInterceptors);1496837955;Set additional interceptors (or advisors) to be applied before the_implicit transaction interceptor, e.g. a PerformanceMonitorInterceptor._<p>You may specify any AOP Alliance MethodInterceptors or other_Spring AOP Advices, as well as Spring AOP Advisors._@see org.springframework.aop.interceptor.PerformanceMonitorInterceptor;public void setPreInterceptors(Object[] preInterceptors) {_		this.preInterceptors = preInterceptors__	};set,additional,interceptors,or,advisors,to,be,applied,before,the,implicit,transaction,interceptor,e,g,a,performance,monitor,interceptor,p,you,may,specify,any,aop,alliance,method,interceptors,or,other,spring,aop,advices,as,well,as,spring,aop,advisors,see,org,springframework,aop,interceptor,performance,monitor,interceptor;public,void,set,pre,interceptors,object,pre,interceptors,this,pre,interceptors,pre,interceptors
AbstractSingletonProxyFactoryBean -> public void setPreInterceptors(Object[] preInterceptors);1497341594;Set additional interceptors (or advisors) to be applied before the_implicit transaction interceptor, e.g. a PerformanceMonitorInterceptor._<p>You may specify any AOP Alliance MethodInterceptors or other_Spring AOP Advices, as well as Spring AOP Advisors._@see org.springframework.aop.interceptor.PerformanceMonitorInterceptor;public void setPreInterceptors(Object[] preInterceptors) {_		this.preInterceptors = preInterceptors__	};set,additional,interceptors,or,advisors,to,be,applied,before,the,implicit,transaction,interceptor,e,g,a,performance,monitor,interceptor,p,you,may,specify,any,aop,alliance,method,interceptors,or,other,spring,aop,advices,as,well,as,spring,aop,advisors,see,org,springframework,aop,interceptor,performance,monitor,interceptor;public,void,set,pre,interceptors,object,pre,interceptors,this,pre,interceptors,pre,interceptors
AbstractSingletonProxyFactoryBean -> public void setPreInterceptors(Object[] preInterceptors);1498780456;Set additional interceptors (or advisors) to be applied before the_implicit transaction interceptor, e.g. a PerformanceMonitorInterceptor._<p>You may specify any AOP Alliance MethodInterceptors or other_Spring AOP Advices, as well as Spring AOP Advisors._@see org.springframework.aop.interceptor.PerformanceMonitorInterceptor;public void setPreInterceptors(Object[] preInterceptors) {_		this.preInterceptors = preInterceptors__	};set,additional,interceptors,or,advisors,to,be,applied,before,the,implicit,transaction,interceptor,e,g,a,performance,monitor,interceptor,p,you,may,specify,any,aop,alliance,method,interceptors,or,other,spring,aop,advices,as,well,as,spring,aop,advisors,see,org,springframework,aop,interceptor,performance,monitor,interceptor;public,void,set,pre,interceptors,object,pre,interceptors,this,pre,interceptors,pre,interceptors
AbstractSingletonProxyFactoryBean -> public void setPreInterceptors(Object[] preInterceptors);1502974979;Set additional interceptors (or advisors) to be applied before the_implicit transaction interceptor, e.g. a PerformanceMonitorInterceptor._<p>You may specify any AOP Alliance MethodInterceptors or other_Spring AOP Advices, as well as Spring AOP Advisors._@see org.springframework.aop.interceptor.PerformanceMonitorInterceptor;public void setPreInterceptors(Object[] preInterceptors) {_		this.preInterceptors = preInterceptors__	};set,additional,interceptors,or,advisors,to,be,applied,before,the,implicit,transaction,interceptor,e,g,a,performance,monitor,interceptor,p,you,may,specify,any,aop,alliance,method,interceptors,or,other,spring,aop,advices,as,well,as,spring,aop,advisors,see,org,springframework,aop,interceptor,performance,monitor,interceptor;public,void,set,pre,interceptors,object,pre,interceptors,this,pre,interceptors,pre,interceptors
AbstractSingletonProxyFactoryBean -> public void setPreInterceptors(Object[] preInterceptors);1530174524;Set additional interceptors (or advisors) to be applied before the_implicit transaction interceptor, e.g. a PerformanceMonitorInterceptor._<p>You may specify any AOP Alliance MethodInterceptors or other_Spring AOP Advices, as well as Spring AOP Advisors._@see org.springframework.aop.interceptor.PerformanceMonitorInterceptor;public void setPreInterceptors(Object[] preInterceptors) {_		this.preInterceptors = preInterceptors__	};set,additional,interceptors,or,advisors,to,be,applied,before,the,implicit,transaction,interceptor,e,g,a,performance,monitor,interceptor,p,you,may,specify,any,aop,alliance,method,interceptors,or,other,spring,aop,advices,as,well,as,spring,aop,advisors,see,org,springframework,aop,interceptor,performance,monitor,interceptor;public,void,set,pre,interceptors,object,pre,interceptors,this,pre,interceptors,pre,interceptors
AbstractSingletonProxyFactoryBean -> public void setProxyInterfaces(Class<?>[] proxyInterfaces);1328020251;Specify the set of interfaces being proxied._<p>If not specified (the default), the AOP infrastructure works_out which interfaces need proxying by analyzing the target,_proxying all the interfaces that the target object implements.;public void setProxyInterfaces(Class<?>[] proxyInterfaces) {_		this.proxyInterfaces = proxyInterfaces__	};specify,the,set,of,interfaces,being,proxied,p,if,not,specified,the,default,the,aop,infrastructure,works,out,which,interfaces,need,proxying,by,analyzing,the,target,proxying,all,the,interfaces,that,the,target,object,implements;public,void,set,proxy,interfaces,class,proxy,interfaces,this,proxy,interfaces,proxy,interfaces
AbstractSingletonProxyFactoryBean -> public void setProxyInterfaces(Class<?>[] proxyInterfaces);1356735495;Specify the set of interfaces being proxied._<p>If not specified (the default), the AOP infrastructure works_out which interfaces need proxying by analyzing the target,_proxying all the interfaces that the target object implements.;public void setProxyInterfaces(Class<?>[] proxyInterfaces) {_		this.proxyInterfaces = proxyInterfaces__	};specify,the,set,of,interfaces,being,proxied,p,if,not,specified,the,default,the,aop,infrastructure,works,out,which,interfaces,need,proxying,by,analyzing,the,target,proxying,all,the,interfaces,that,the,target,object,implements;public,void,set,proxy,interfaces,class,proxy,interfaces,this,proxy,interfaces,proxy,interfaces
AbstractSingletonProxyFactoryBean -> public void setProxyInterfaces(Class<?>[] proxyInterfaces);1357119239;Specify the set of interfaces being proxied._<p>If not specified (the default), the AOP infrastructure works_out which interfaces need proxying by analyzing the target,_proxying all the interfaces that the target object implements.;public void setProxyInterfaces(Class<?>[] proxyInterfaces) {_		this.proxyInterfaces = proxyInterfaces__	};specify,the,set,of,interfaces,being,proxied,p,if,not,specified,the,default,the,aop,infrastructure,works,out,which,interfaces,need,proxying,by,analyzing,the,target,proxying,all,the,interfaces,that,the,target,object,implements;public,void,set,proxy,interfaces,class,proxy,interfaces,this,proxy,interfaces,proxy,interfaces
AbstractSingletonProxyFactoryBean -> public void setProxyInterfaces(Class<?>[] proxyInterfaces);1368482696;Specify the set of interfaces being proxied._<p>If not specified (the default), the AOP infrastructure works_out which interfaces need proxying by analyzing the target,_proxying all the interfaces that the target object implements.;public void setProxyInterfaces(Class<?>[] proxyInterfaces) {_		this.proxyInterfaces = proxyInterfaces__	};specify,the,set,of,interfaces,being,proxied,p,if,not,specified,the,default,the,aop,infrastructure,works,out,which,interfaces,need,proxying,by,analyzing,the,target,proxying,all,the,interfaces,that,the,target,object,implements;public,void,set,proxy,interfaces,class,proxy,interfaces,this,proxy,interfaces,proxy,interfaces
AbstractSingletonProxyFactoryBean -> public void setProxyInterfaces(Class<?>[] proxyInterfaces);1424347624;Specify the set of interfaces being proxied._<p>If not specified (the default), the AOP infrastructure works_out which interfaces need proxying by analyzing the target,_proxying all the interfaces that the target object implements.;public void setProxyInterfaces(Class<?>[] proxyInterfaces) {_		this.proxyInterfaces = proxyInterfaces__	};specify,the,set,of,interfaces,being,proxied,p,if,not,specified,the,default,the,aop,infrastructure,works,out,which,interfaces,need,proxying,by,analyzing,the,target,proxying,all,the,interfaces,that,the,target,object,implements;public,void,set,proxy,interfaces,class,proxy,interfaces,this,proxy,interfaces,proxy,interfaces
AbstractSingletonProxyFactoryBean -> public void setProxyInterfaces(Class<?>[] proxyInterfaces);1434538946;Specify the set of interfaces being proxied._<p>If not specified (the default), the AOP infrastructure works_out which interfaces need proxying by analyzing the target,_proxying all the interfaces that the target object implements.;public void setProxyInterfaces(Class<?>[] proxyInterfaces) {_		this.proxyInterfaces = proxyInterfaces__	};specify,the,set,of,interfaces,being,proxied,p,if,not,specified,the,default,the,aop,infrastructure,works,out,which,interfaces,need,proxying,by,analyzing,the,target,proxying,all,the,interfaces,that,the,target,object,implements;public,void,set,proxy,interfaces,class,proxy,interfaces,this,proxy,interfaces,proxy,interfaces
AbstractSingletonProxyFactoryBean -> public void setProxyInterfaces(Class<?>[] proxyInterfaces);1496242568;Specify the set of interfaces being proxied._<p>If not specified (the default), the AOP infrastructure works_out which interfaces need proxying by analyzing the target,_proxying all the interfaces that the target object implements.;public void setProxyInterfaces(Class<?>[] proxyInterfaces) {_		this.proxyInterfaces = proxyInterfaces__	};specify,the,set,of,interfaces,being,proxied,p,if,not,specified,the,default,the,aop,infrastructure,works,out,which,interfaces,need,proxying,by,analyzing,the,target,proxying,all,the,interfaces,that,the,target,object,implements;public,void,set,proxy,interfaces,class,proxy,interfaces,this,proxy,interfaces,proxy,interfaces
AbstractSingletonProxyFactoryBean -> public void setProxyInterfaces(Class<?>[] proxyInterfaces);1496837955;Specify the set of interfaces being proxied._<p>If not specified (the default), the AOP infrastructure works_out which interfaces need proxying by analyzing the target,_proxying all the interfaces that the target object implements.;public void setProxyInterfaces(Class<?>[] proxyInterfaces) {_		this.proxyInterfaces = proxyInterfaces__	};specify,the,set,of,interfaces,being,proxied,p,if,not,specified,the,default,the,aop,infrastructure,works,out,which,interfaces,need,proxying,by,analyzing,the,target,proxying,all,the,interfaces,that,the,target,object,implements;public,void,set,proxy,interfaces,class,proxy,interfaces,this,proxy,interfaces,proxy,interfaces
AbstractSingletonProxyFactoryBean -> public void setProxyInterfaces(Class<?>[] proxyInterfaces);1497341594;Specify the set of interfaces being proxied._<p>If not specified (the default), the AOP infrastructure works_out which interfaces need proxying by analyzing the target,_proxying all the interfaces that the target object implements.;public void setProxyInterfaces(Class<?>[] proxyInterfaces) {_		this.proxyInterfaces = proxyInterfaces__	};specify,the,set,of,interfaces,being,proxied,p,if,not,specified,the,default,the,aop,infrastructure,works,out,which,interfaces,need,proxying,by,analyzing,the,target,proxying,all,the,interfaces,that,the,target,object,implements;public,void,set,proxy,interfaces,class,proxy,interfaces,this,proxy,interfaces,proxy,interfaces
AbstractSingletonProxyFactoryBean -> public void setProxyInterfaces(Class<?>[] proxyInterfaces);1498780456;Specify the set of interfaces being proxied._<p>If not specified (the default), the AOP infrastructure works_out which interfaces need proxying by analyzing the target,_proxying all the interfaces that the target object implements.;public void setProxyInterfaces(Class<?>[] proxyInterfaces) {_		this.proxyInterfaces = proxyInterfaces__	};specify,the,set,of,interfaces,being,proxied,p,if,not,specified,the,default,the,aop,infrastructure,works,out,which,interfaces,need,proxying,by,analyzing,the,target,proxying,all,the,interfaces,that,the,target,object,implements;public,void,set,proxy,interfaces,class,proxy,interfaces,this,proxy,interfaces,proxy,interfaces
AbstractSingletonProxyFactoryBean -> public void setProxyInterfaces(Class<?>[] proxyInterfaces);1502974979;Specify the set of interfaces being proxied._<p>If not specified (the default), the AOP infrastructure works_out which interfaces need proxying by analyzing the target,_proxying all the interfaces that the target object implements.;public void setProxyInterfaces(Class<?>[] proxyInterfaces) {_		this.proxyInterfaces = proxyInterfaces__	};specify,the,set,of,interfaces,being,proxied,p,if,not,specified,the,default,the,aop,infrastructure,works,out,which,interfaces,need,proxying,by,analyzing,the,target,proxying,all,the,interfaces,that,the,target,object,implements;public,void,set,proxy,interfaces,class,proxy,interfaces,this,proxy,interfaces,proxy,interfaces
AbstractSingletonProxyFactoryBean -> public void setProxyInterfaces(Class<?>[] proxyInterfaces);1530174524;Specify the set of interfaces being proxied._<p>If not specified (the default), the AOP infrastructure works_out which interfaces need proxying by analyzing the target,_proxying all the interfaces that the target object implements.;public void setProxyInterfaces(Class<?>[] proxyInterfaces) {_		this.proxyInterfaces = proxyInterfaces__	};specify,the,set,of,interfaces,being,proxied,p,if,not,specified,the,default,the,aop,infrastructure,works,out,which,interfaces,need,proxying,by,analyzing,the,target,proxying,all,the,interfaces,that,the,target,object,implements;public,void,set,proxy,interfaces,class,proxy,interfaces,this,proxy,interfaces,proxy,interfaces
AbstractSingletonProxyFactoryBean -> public void setAdvisorAdapterRegistry(AdvisorAdapterRegistry advisorAdapterRegistry);1328020251;Specify the AdvisorAdapterRegistry to use._Default is the global AdvisorAdapterRegistry._@see org.springframework.aop.framework.adapter.GlobalAdvisorAdapterRegistry;public void setAdvisorAdapterRegistry(AdvisorAdapterRegistry advisorAdapterRegistry) {_		this.advisorAdapterRegistry = advisorAdapterRegistry__	};specify,the,advisor,adapter,registry,to,use,default,is,the,global,advisor,adapter,registry,see,org,springframework,aop,framework,adapter,global,advisor,adapter,registry;public,void,set,advisor,adapter,registry,advisor,adapter,registry,advisor,adapter,registry,this,advisor,adapter,registry,advisor,adapter,registry
AbstractSingletonProxyFactoryBean -> public void setAdvisorAdapterRegistry(AdvisorAdapterRegistry advisorAdapterRegistry);1356735495;Specify the AdvisorAdapterRegistry to use._Default is the global AdvisorAdapterRegistry._@see org.springframework.aop.framework.adapter.GlobalAdvisorAdapterRegistry;public void setAdvisorAdapterRegistry(AdvisorAdapterRegistry advisorAdapterRegistry) {_		this.advisorAdapterRegistry = advisorAdapterRegistry__	};specify,the,advisor,adapter,registry,to,use,default,is,the,global,advisor,adapter,registry,see,org,springframework,aop,framework,adapter,global,advisor,adapter,registry;public,void,set,advisor,adapter,registry,advisor,adapter,registry,advisor,adapter,registry,this,advisor,adapter,registry,advisor,adapter,registry
AbstractSingletonProxyFactoryBean -> public void setAdvisorAdapterRegistry(AdvisorAdapterRegistry advisorAdapterRegistry);1357119239;Specify the AdvisorAdapterRegistry to use._Default is the global AdvisorAdapterRegistry._@see org.springframework.aop.framework.adapter.GlobalAdvisorAdapterRegistry;public void setAdvisorAdapterRegistry(AdvisorAdapterRegistry advisorAdapterRegistry) {_		this.advisorAdapterRegistry = advisorAdapterRegistry__	};specify,the,advisor,adapter,registry,to,use,default,is,the,global,advisor,adapter,registry,see,org,springframework,aop,framework,adapter,global,advisor,adapter,registry;public,void,set,advisor,adapter,registry,advisor,adapter,registry,advisor,adapter,registry,this,advisor,adapter,registry,advisor,adapter,registry
AbstractSingletonProxyFactoryBean -> public void setAdvisorAdapterRegistry(AdvisorAdapterRegistry advisorAdapterRegistry);1368482696;Specify the AdvisorAdapterRegistry to use._Default is the global AdvisorAdapterRegistry._@see org.springframework.aop.framework.adapter.GlobalAdvisorAdapterRegistry;public void setAdvisorAdapterRegistry(AdvisorAdapterRegistry advisorAdapterRegistry) {_		this.advisorAdapterRegistry = advisorAdapterRegistry__	};specify,the,advisor,adapter,registry,to,use,default,is,the,global,advisor,adapter,registry,see,org,springframework,aop,framework,adapter,global,advisor,adapter,registry;public,void,set,advisor,adapter,registry,advisor,adapter,registry,advisor,adapter,registry,this,advisor,adapter,registry,advisor,adapter,registry
AbstractSingletonProxyFactoryBean -> public void setAdvisorAdapterRegistry(AdvisorAdapterRegistry advisorAdapterRegistry);1424347624;Specify the AdvisorAdapterRegistry to use._Default is the global AdvisorAdapterRegistry._@see org.springframework.aop.framework.adapter.GlobalAdvisorAdapterRegistry;public void setAdvisorAdapterRegistry(AdvisorAdapterRegistry advisorAdapterRegistry) {_		this.advisorAdapterRegistry = advisorAdapterRegistry__	};specify,the,advisor,adapter,registry,to,use,default,is,the,global,advisor,adapter,registry,see,org,springframework,aop,framework,adapter,global,advisor,adapter,registry;public,void,set,advisor,adapter,registry,advisor,adapter,registry,advisor,adapter,registry,this,advisor,adapter,registry,advisor,adapter,registry
AbstractSingletonProxyFactoryBean -> public void setAdvisorAdapterRegistry(AdvisorAdapterRegistry advisorAdapterRegistry);1434538946;Specify the AdvisorAdapterRegistry to use._Default is the global AdvisorAdapterRegistry._@see org.springframework.aop.framework.adapter.GlobalAdvisorAdapterRegistry;public void setAdvisorAdapterRegistry(AdvisorAdapterRegistry advisorAdapterRegistry) {_		this.advisorAdapterRegistry = advisorAdapterRegistry__	};specify,the,advisor,adapter,registry,to,use,default,is,the,global,advisor,adapter,registry,see,org,springframework,aop,framework,adapter,global,advisor,adapter,registry;public,void,set,advisor,adapter,registry,advisor,adapter,registry,advisor,adapter,registry,this,advisor,adapter,registry,advisor,adapter,registry
AbstractSingletonProxyFactoryBean -> public void setAdvisorAdapterRegistry(AdvisorAdapterRegistry advisorAdapterRegistry);1496242568;Specify the AdvisorAdapterRegistry to use._Default is the global AdvisorAdapterRegistry._@see org.springframework.aop.framework.adapter.GlobalAdvisorAdapterRegistry;public void setAdvisorAdapterRegistry(AdvisorAdapterRegistry advisorAdapterRegistry) {_		this.advisorAdapterRegistry = advisorAdapterRegistry__	};specify,the,advisor,adapter,registry,to,use,default,is,the,global,advisor,adapter,registry,see,org,springframework,aop,framework,adapter,global,advisor,adapter,registry;public,void,set,advisor,adapter,registry,advisor,adapter,registry,advisor,adapter,registry,this,advisor,adapter,registry,advisor,adapter,registry
AbstractSingletonProxyFactoryBean -> public void setAdvisorAdapterRegistry(AdvisorAdapterRegistry advisorAdapterRegistry);1496837955;Specify the AdvisorAdapterRegistry to use._Default is the global AdvisorAdapterRegistry._@see org.springframework.aop.framework.adapter.GlobalAdvisorAdapterRegistry;public void setAdvisorAdapterRegistry(AdvisorAdapterRegistry advisorAdapterRegistry) {_		this.advisorAdapterRegistry = advisorAdapterRegistry__	};specify,the,advisor,adapter,registry,to,use,default,is,the,global,advisor,adapter,registry,see,org,springframework,aop,framework,adapter,global,advisor,adapter,registry;public,void,set,advisor,adapter,registry,advisor,adapter,registry,advisor,adapter,registry,this,advisor,adapter,registry,advisor,adapter,registry
AbstractSingletonProxyFactoryBean -> public void setAdvisorAdapterRegistry(AdvisorAdapterRegistry advisorAdapterRegistry);1497341594;Specify the AdvisorAdapterRegistry to use._Default is the global AdvisorAdapterRegistry._@see org.springframework.aop.framework.adapter.GlobalAdvisorAdapterRegistry;public void setAdvisorAdapterRegistry(AdvisorAdapterRegistry advisorAdapterRegistry) {_		this.advisorAdapterRegistry = advisorAdapterRegistry__	};specify,the,advisor,adapter,registry,to,use,default,is,the,global,advisor,adapter,registry,see,org,springframework,aop,framework,adapter,global,advisor,adapter,registry;public,void,set,advisor,adapter,registry,advisor,adapter,registry,advisor,adapter,registry,this,advisor,adapter,registry,advisor,adapter,registry
AbstractSingletonProxyFactoryBean -> public void setAdvisorAdapterRegistry(AdvisorAdapterRegistry advisorAdapterRegistry);1498780456;Specify the AdvisorAdapterRegistry to use._Default is the global AdvisorAdapterRegistry._@see org.springframework.aop.framework.adapter.GlobalAdvisorAdapterRegistry;public void setAdvisorAdapterRegistry(AdvisorAdapterRegistry advisorAdapterRegistry) {_		this.advisorAdapterRegistry = advisorAdapterRegistry__	};specify,the,advisor,adapter,registry,to,use,default,is,the,global,advisor,adapter,registry,see,org,springframework,aop,framework,adapter,global,advisor,adapter,registry;public,void,set,advisor,adapter,registry,advisor,adapter,registry,advisor,adapter,registry,this,advisor,adapter,registry,advisor,adapter,registry
AbstractSingletonProxyFactoryBean -> public void setAdvisorAdapterRegistry(AdvisorAdapterRegistry advisorAdapterRegistry);1502974979;Specify the AdvisorAdapterRegistry to use._Default is the global AdvisorAdapterRegistry._@see org.springframework.aop.framework.adapter.GlobalAdvisorAdapterRegistry;public void setAdvisorAdapterRegistry(AdvisorAdapterRegistry advisorAdapterRegistry) {_		this.advisorAdapterRegistry = advisorAdapterRegistry__	};specify,the,advisor,adapter,registry,to,use,default,is,the,global,advisor,adapter,registry,see,org,springframework,aop,framework,adapter,global,advisor,adapter,registry;public,void,set,advisor,adapter,registry,advisor,adapter,registry,advisor,adapter,registry,this,advisor,adapter,registry,advisor,adapter,registry
AbstractSingletonProxyFactoryBean -> public void setAdvisorAdapterRegistry(AdvisorAdapterRegistry advisorAdapterRegistry);1530174524;Specify the AdvisorAdapterRegistry to use._Default is the global AdvisorAdapterRegistry._@see org.springframework.aop.framework.adapter.GlobalAdvisorAdapterRegistry;public void setAdvisorAdapterRegistry(AdvisorAdapterRegistry advisorAdapterRegistry) {_		this.advisorAdapterRegistry = advisorAdapterRegistry__	};specify,the,advisor,adapter,registry,to,use,default,is,the,global,advisor,adapter,registry,see,org,springframework,aop,framework,adapter,global,advisor,adapter,registry;public,void,set,advisor,adapter,registry,advisor,adapter,registry,advisor,adapter,registry,this,advisor,adapter,registry,advisor,adapter,registry
AbstractSingletonProxyFactoryBean -> public void setPostInterceptors(Object[] postInterceptors);1328020251;Set additional interceptors (or advisors) to be applied after the_implicit transaction interceptor._<p>You may specify any AOP Alliance MethodInterceptors or other_Spring AOP Advices, as well as Spring AOP Advisors.;public void setPostInterceptors(Object[] postInterceptors) {_		this.postInterceptors = postInterceptors__	};set,additional,interceptors,or,advisors,to,be,applied,after,the,implicit,transaction,interceptor,p,you,may,specify,any,aop,alliance,method,interceptors,or,other,spring,aop,advices,as,well,as,spring,aop,advisors;public,void,set,post,interceptors,object,post,interceptors,this,post,interceptors,post,interceptors
AbstractSingletonProxyFactoryBean -> public void setPostInterceptors(Object[] postInterceptors);1356735495;Set additional interceptors (or advisors) to be applied after the_implicit transaction interceptor._<p>You may specify any AOP Alliance MethodInterceptors or other_Spring AOP Advices, as well as Spring AOP Advisors.;public void setPostInterceptors(Object[] postInterceptors) {_		this.postInterceptors = postInterceptors__	};set,additional,interceptors,or,advisors,to,be,applied,after,the,implicit,transaction,interceptor,p,you,may,specify,any,aop,alliance,method,interceptors,or,other,spring,aop,advices,as,well,as,spring,aop,advisors;public,void,set,post,interceptors,object,post,interceptors,this,post,interceptors,post,interceptors
AbstractSingletonProxyFactoryBean -> public void setPostInterceptors(Object[] postInterceptors);1357119239;Set additional interceptors (or advisors) to be applied after the_implicit transaction interceptor._<p>You may specify any AOP Alliance MethodInterceptors or other_Spring AOP Advices, as well as Spring AOP Advisors.;public void setPostInterceptors(Object[] postInterceptors) {_		this.postInterceptors = postInterceptors__	};set,additional,interceptors,or,advisors,to,be,applied,after,the,implicit,transaction,interceptor,p,you,may,specify,any,aop,alliance,method,interceptors,or,other,spring,aop,advices,as,well,as,spring,aop,advisors;public,void,set,post,interceptors,object,post,interceptors,this,post,interceptors,post,interceptors
AbstractSingletonProxyFactoryBean -> public void setPostInterceptors(Object[] postInterceptors);1368482696;Set additional interceptors (or advisors) to be applied after the_implicit transaction interceptor._<p>You may specify any AOP Alliance MethodInterceptors or other_Spring AOP Advices, as well as Spring AOP Advisors.;public void setPostInterceptors(Object[] postInterceptors) {_		this.postInterceptors = postInterceptors__	};set,additional,interceptors,or,advisors,to,be,applied,after,the,implicit,transaction,interceptor,p,you,may,specify,any,aop,alliance,method,interceptors,or,other,spring,aop,advices,as,well,as,spring,aop,advisors;public,void,set,post,interceptors,object,post,interceptors,this,post,interceptors,post,interceptors
AbstractSingletonProxyFactoryBean -> public void setPostInterceptors(Object[] postInterceptors);1424347624;Set additional interceptors (or advisors) to be applied after the_implicit transaction interceptor._<p>You may specify any AOP Alliance MethodInterceptors or other_Spring AOP Advices, as well as Spring AOP Advisors.;public void setPostInterceptors(Object[] postInterceptors) {_		this.postInterceptors = postInterceptors__	};set,additional,interceptors,or,advisors,to,be,applied,after,the,implicit,transaction,interceptor,p,you,may,specify,any,aop,alliance,method,interceptors,or,other,spring,aop,advices,as,well,as,spring,aop,advisors;public,void,set,post,interceptors,object,post,interceptors,this,post,interceptors,post,interceptors
AbstractSingletonProxyFactoryBean -> public void setPostInterceptors(Object[] postInterceptors);1434538946;Set additional interceptors (or advisors) to be applied after the_implicit transaction interceptor._<p>You may specify any AOP Alliance MethodInterceptors or other_Spring AOP Advices, as well as Spring AOP Advisors.;public void setPostInterceptors(Object[] postInterceptors) {_		this.postInterceptors = postInterceptors__	};set,additional,interceptors,or,advisors,to,be,applied,after,the,implicit,transaction,interceptor,p,you,may,specify,any,aop,alliance,method,interceptors,or,other,spring,aop,advices,as,well,as,spring,aop,advisors;public,void,set,post,interceptors,object,post,interceptors,this,post,interceptors,post,interceptors
AbstractSingletonProxyFactoryBean -> public void setPostInterceptors(Object[] postInterceptors);1496242568;Set additional interceptors (or advisors) to be applied after the_implicit transaction interceptor._<p>You may specify any AOP Alliance MethodInterceptors or other_Spring AOP Advices, as well as Spring AOP Advisors.;public void setPostInterceptors(Object[] postInterceptors) {_		this.postInterceptors = postInterceptors__	};set,additional,interceptors,or,advisors,to,be,applied,after,the,implicit,transaction,interceptor,p,you,may,specify,any,aop,alliance,method,interceptors,or,other,spring,aop,advices,as,well,as,spring,aop,advisors;public,void,set,post,interceptors,object,post,interceptors,this,post,interceptors,post,interceptors
AbstractSingletonProxyFactoryBean -> public void setPostInterceptors(Object[] postInterceptors);1496837955;Set additional interceptors (or advisors) to be applied after the_implicit transaction interceptor._<p>You may specify any AOP Alliance MethodInterceptors or other_Spring AOP Advices, as well as Spring AOP Advisors.;public void setPostInterceptors(Object[] postInterceptors) {_		this.postInterceptors = postInterceptors__	};set,additional,interceptors,or,advisors,to,be,applied,after,the,implicit,transaction,interceptor,p,you,may,specify,any,aop,alliance,method,interceptors,or,other,spring,aop,advices,as,well,as,spring,aop,advisors;public,void,set,post,interceptors,object,post,interceptors,this,post,interceptors,post,interceptors
AbstractSingletonProxyFactoryBean -> public void setPostInterceptors(Object[] postInterceptors);1497341594;Set additional interceptors (or advisors) to be applied after the_implicit transaction interceptor._<p>You may specify any AOP Alliance MethodInterceptors or other_Spring AOP Advices, as well as Spring AOP Advisors.;public void setPostInterceptors(Object[] postInterceptors) {_		this.postInterceptors = postInterceptors__	};set,additional,interceptors,or,advisors,to,be,applied,after,the,implicit,transaction,interceptor,p,you,may,specify,any,aop,alliance,method,interceptors,or,other,spring,aop,advices,as,well,as,spring,aop,advisors;public,void,set,post,interceptors,object,post,interceptors,this,post,interceptors,post,interceptors
AbstractSingletonProxyFactoryBean -> public void setPostInterceptors(Object[] postInterceptors);1498780456;Set additional interceptors (or advisors) to be applied after the_implicit transaction interceptor._<p>You may specify any AOP Alliance MethodInterceptors or other_Spring AOP Advices, as well as Spring AOP Advisors.;public void setPostInterceptors(Object[] postInterceptors) {_		this.postInterceptors = postInterceptors__	};set,additional,interceptors,or,advisors,to,be,applied,after,the,implicit,transaction,interceptor,p,you,may,specify,any,aop,alliance,method,interceptors,or,other,spring,aop,advices,as,well,as,spring,aop,advisors;public,void,set,post,interceptors,object,post,interceptors,this,post,interceptors,post,interceptors
AbstractSingletonProxyFactoryBean -> public void setPostInterceptors(Object[] postInterceptors);1502974979;Set additional interceptors (or advisors) to be applied after the_implicit transaction interceptor._<p>You may specify any AOP Alliance MethodInterceptors or other_Spring AOP Advices, as well as Spring AOP Advisors.;public void setPostInterceptors(Object[] postInterceptors) {_		this.postInterceptors = postInterceptors__	};set,additional,interceptors,or,advisors,to,be,applied,after,the,implicit,transaction,interceptor,p,you,may,specify,any,aop,alliance,method,interceptors,or,other,spring,aop,advices,as,well,as,spring,aop,advisors;public,void,set,post,interceptors,object,post,interceptors,this,post,interceptors,post,interceptors
AbstractSingletonProxyFactoryBean -> public void setPostInterceptors(Object[] postInterceptors);1530174524;Set additional interceptors (or advisors) to be applied after the_implicit transaction interceptor._<p>You may specify any AOP Alliance MethodInterceptors or other_Spring AOP Advices, as well as Spring AOP Advisors.;public void setPostInterceptors(Object[] postInterceptors) {_		this.postInterceptors = postInterceptors__	};set,additional,interceptors,or,advisors,to,be,applied,after,the,implicit,transaction,interceptor,p,you,may,specify,any,aop,alliance,method,interceptors,or,other,spring,aop,advices,as,well,as,spring,aop,advisors;public,void,set,post,interceptors,object,post,interceptors,this,post,interceptors,post,interceptors
