commented;modifiers;parameterAmount;loc;comment;code
false;public;2;7;;@Override @Nullable public BeanDefinition parse(Element element, ParserContext parserContext) {     AopNamespaceUtils.registerAspectJAnnotationAutoProxyCreatorIfNecessary(parserContext, element).     extendBeanDefinition(element, parserContext).     return null. }
false;private;2;7;;private void extendBeanDefinition(Element element, ParserContext parserContext) {     BeanDefinition beanDef = parserContext.getRegistry().getBeanDefinition(AopConfigUtils.AUTO_PROXY_CREATOR_BEAN_NAME).     if (element.hasChildNodes()) {         addIncludePatterns(element, parserContext, beanDef).     } }
false;private;3;17;;private void addIncludePatterns(Element element, ParserContext parserContext, BeanDefinition beanDef) {     ManagedList<TypedStringValue> includePatterns = new ManagedList<>().     NodeList childNodes = element.getChildNodes().     for (int i = 0. i < childNodes.getLength(). i++) {         Node node = childNodes.item(i).         if (node instanceof Element) {             Element includeElement = (Element) node.             TypedStringValue valueHolder = new TypedStringValue(includeElement.getAttribute("name")).             valueHolder.setSource(parserContext.extractSource(includeElement)).             includePatterns.add(valueHolder).         }     }     if (!includePatterns.isEmpty()) {         includePatterns.setSource(parserContext.extractSource(element)).         beanDef.getPropertyValues().add("includePatterns", includePatterns).     } }
