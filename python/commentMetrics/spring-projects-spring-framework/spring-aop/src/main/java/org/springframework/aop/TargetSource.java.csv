# id;timestamp;commentText;codeText;commentWords;codeWords
TargetSource -> @Override 	Class<?> getTargetClass()_;1356735495;Return the type of targets returned by this {@link TargetSource}._<p>Can return {@code null}, although certain usages of a_{@code TargetSource} might just work with a predetermined_target class._@return the type of targets returned by this {@link TargetSource};@Override_	Class<?> getTargetClass()_;return,the,type,of,targets,returned,by,this,link,target,source,p,can,return,code,null,although,certain,usages,of,a,code,target,source,might,just,work,with,a,predetermined,target,class,return,the,type,of,targets,returned,by,this,link,target,source;override,class,get,target,class
TargetSource -> @Override 	Class<?> getTargetClass()_;1368482696;Return the type of targets returned by this {@link TargetSource}._<p>Can return {@code null}, although certain usages of a_{@code TargetSource} might just work with a predetermined_target class._@return the type of targets returned by this {@link TargetSource};@Override_	Class<?> getTargetClass()_;return,the,type,of,targets,returned,by,this,link,target,source,p,can,return,code,null,although,certain,usages,of,a,code,target,source,might,just,work,with,a,predetermined,target,class,return,the,type,of,targets,returned,by,this,link,target,source;override,class,get,target,class
TargetSource -> @Override 	Class<?> getTargetClass()_;1495868221;Return the type of targets returned by this {@link TargetSource}._<p>Can return {@code null}, although certain usages of a_{@code TargetSource} might just work with a predetermined_target class._@return the type of targets returned by this {@link TargetSource};@Override_	Class<?> getTargetClass()_;return,the,type,of,targets,returned,by,this,link,target,source,p,can,return,code,null,although,certain,usages,of,a,code,target,source,might,just,work,with,a,predetermined,target,class,return,the,type,of,targets,returned,by,this,link,target,source;override,class,get,target,class
TargetSource -> @Override 	Class<?> getTargetClass()_;1496837955;Return the type of targets returned by this {@link TargetSource}._<p>Can return {@code null}, although certain usages of a {@code TargetSource}_might just work with a predetermined target class._@return the type of targets returned by this {@link TargetSource};@Override_	Class<?> getTargetClass()_;return,the,type,of,targets,returned,by,this,link,target,source,p,can,return,code,null,although,certain,usages,of,a,code,target,source,might,just,work,with,a,predetermined,target,class,return,the,type,of,targets,returned,by,this,link,target,source;override,class,get,target,class
TargetSource -> @Override 	Class<?> getTargetClass()_;1496955179;Return the type of targets returned by this {@link TargetSource}._<p>Can return {@code null}, although certain usages of a {@code TargetSource}_might just work with a predetermined target class._@return the type of targets returned by this {@link TargetSource};@Override_	Class<?> getTargetClass()_;return,the,type,of,targets,returned,by,this,link,target,source,p,can,return,code,null,although,certain,usages,of,a,code,target,source,might,just,work,with,a,predetermined,target,class,return,the,type,of,targets,returned,by,this,link,target,source;override,class,get,target,class
TargetSource -> @Override 	Class<?> getTargetClass()_;1497300858;Return the type of targets returned by this {@link TargetSource}._<p>Can return {@code null}, although certain usages of a {@code TargetSource}_might just work with a predetermined target class._@return the type of targets returned by this {@link TargetSource};@Override_	Class<?> getTargetClass()_;return,the,type,of,targets,returned,by,this,link,target,source,p,can,return,code,null,although,certain,usages,of,a,code,target,source,might,just,work,with,a,predetermined,target,class,return,the,type,of,targets,returned,by,this,link,target,source;override,class,get,target,class
TargetSource -> @Override 	@Nullable 	Class<?> getTargetClass()_;1502974979;Return the type of targets returned by this {@link TargetSource}._<p>Can return {@code null}, although certain usages of a {@code TargetSource}_might just work with a predetermined target class._@return the type of targets returned by this {@link TargetSource};@Override_	@Nullable_	Class<?> getTargetClass()_;return,the,type,of,targets,returned,by,this,link,target,source,p,can,return,code,null,although,certain,usages,of,a,code,target,source,might,just,work,with,a,predetermined,target,class,return,the,type,of,targets,returned,by,this,link,target,source;override,nullable,class,get,target,class
TargetSource -> @Override 	@Nullable 	Class<?> getTargetClass()_;1530174524;Return the type of targets returned by this {@link TargetSource}._<p>Can return {@code null}, although certain usages of a {@code TargetSource}_might just work with a predetermined target class._@return the type of targets returned by this {@link TargetSource};@Override_	@Nullable_	Class<?> getTargetClass()_;return,the,type,of,targets,returned,by,this,link,target,source,p,can,return,code,null,although,certain,usages,of,a,code,target,source,might,just,work,with,a,predetermined,target,class,return,the,type,of,targets,returned,by,this,link,target,source;override,nullable,class,get,target,class
TargetSource -> Object getTarget() throws Exception_;1328020251;Return a target instance. Invoked immediately before the_AOP framework calls the "target" of an AOP method invocation._@return the target object, which contains the joinpoint_@throws Exception if the target object can't be resolved;Object getTarget() throws Exception_;return,a,target,instance,invoked,immediately,before,the,aop,framework,calls,the,target,of,an,aop,method,invocation,return,the,target,object,which,contains,the,joinpoint,throws,exception,if,the,target,object,can,t,be,resolved;object,get,target,throws,exception
TargetSource -> Object getTarget() throws Exception_;1356735495;Return a target instance. Invoked immediately before the_AOP framework calls the "target" of an AOP method invocation._@return the target object, which contains the joinpoint_@throws Exception if the target object can't be resolved;Object getTarget() throws Exception_;return,a,target,instance,invoked,immediately,before,the,aop,framework,calls,the,target,of,an,aop,method,invocation,return,the,target,object,which,contains,the,joinpoint,throws,exception,if,the,target,object,can,t,be,resolved;object,get,target,throws,exception
TargetSource -> Object getTarget() throws Exception_;1357119239;Return a target instance. Invoked immediately before the_AOP framework calls the "target" of an AOP method invocation._@return the target object, which contains the joinpoint_@throws Exception if the target object can't be resolved;Object getTarget() throws Exception_;return,a,target,instance,invoked,immediately,before,the,aop,framework,calls,the,target,of,an,aop,method,invocation,return,the,target,object,which,contains,the,joinpoint,throws,exception,if,the,target,object,can,t,be,resolved;object,get,target,throws,exception
TargetSource -> Object getTarget() throws Exception_;1368482696;Return a target instance. Invoked immediately before the_AOP framework calls the "target" of an AOP method invocation._@return the target object, which contains the joinpoint_@throws Exception if the target object can't be resolved;Object getTarget() throws Exception_;return,a,target,instance,invoked,immediately,before,the,aop,framework,calls,the,target,of,an,aop,method,invocation,return,the,target,object,which,contains,the,joinpoint,throws,exception,if,the,target,object,can,t,be,resolved;object,get,target,throws,exception
TargetSource -> Object getTarget() throws Exception_;1496955179;Return a target instance. Invoked immediately before the_AOP framework calls the "target" of an AOP method invocation._@return the target object, which contains the joinpoint_@throws Exception if the target object can't be resolved;Object getTarget() throws Exception_;return,a,target,instance,invoked,immediately,before,the,aop,framework,calls,the,target,of,an,aop,method,invocation,return,the,target,object,which,contains,the,joinpoint,throws,exception,if,the,target,object,can,t,be,resolved;object,get,target,throws,exception
TargetSource -> boolean isStatic()_;1328020251;Will all calls to {@link #getTarget()} return the same object?_<p>In that case, there will be no need to invoke_{@link #releaseTarget(Object)}, and the AOP framework can cache_the return value of {@link #getTarget()}._@return <code>true</code> if the target is immutable_@see #getTarget;boolean isStatic()_;will,all,calls,to,link,get,target,return,the,same,object,p,in,that,case,there,will,be,no,need,to,invoke,link,release,target,object,and,the,aop,framework,can,cache,the,return,value,of,link,get,target,return,code,true,code,if,the,target,is,immutable,see,get,target;boolean,is,static
TargetSource -> boolean isStatic()_;1356735495;Will all calls to {@link #getTarget()} return the same object?_<p>In that case, there will be no need to invoke_{@link #releaseTarget(Object)}, and the AOP framework can cache_the return value of {@link #getTarget()}._@return {@code true} if the target is immutable_@see #getTarget;boolean isStatic()_;will,all,calls,to,link,get,target,return,the,same,object,p,in,that,case,there,will,be,no,need,to,invoke,link,release,target,object,and,the,aop,framework,can,cache,the,return,value,of,link,get,target,return,code,true,if,the,target,is,immutable,see,get,target;boolean,is,static
TargetSource -> boolean isStatic()_;1357119239;Will all calls to {@link #getTarget()} return the same object?_<p>In that case, there will be no need to invoke_{@link #releaseTarget(Object)}, and the AOP framework can cache_the return value of {@link #getTarget()}._@return {@code true} if the target is immutable_@see #getTarget;boolean isStatic()_;will,all,calls,to,link,get,target,return,the,same,object,p,in,that,case,there,will,be,no,need,to,invoke,link,release,target,object,and,the,aop,framework,can,cache,the,return,value,of,link,get,target,return,code,true,if,the,target,is,immutable,see,get,target;boolean,is,static
TargetSource -> boolean isStatic()_;1368482696;Will all calls to {@link #getTarget()} return the same object?_<p>In that case, there will be no need to invoke_{@link #releaseTarget(Object)}, and the AOP framework can cache_the return value of {@link #getTarget()}._@return {@code true} if the target is immutable_@see #getTarget;boolean isStatic()_;will,all,calls,to,link,get,target,return,the,same,object,p,in,that,case,there,will,be,no,need,to,invoke,link,release,target,object,and,the,aop,framework,can,cache,the,return,value,of,link,get,target,return,code,true,if,the,target,is,immutable,see,get,target;boolean,is,static
TargetSource -> boolean isStatic()_;1495868221;Will all calls to {@link #getTarget()} return the same object?_<p>In that case, there will be no need to invoke_{@link #releaseTarget(Object)}, and the AOP framework can cache_the return value of {@link #getTarget()}._@return {@code true} if the target is immutable_@see #getTarget;boolean isStatic()_;will,all,calls,to,link,get,target,return,the,same,object,p,in,that,case,there,will,be,no,need,to,invoke,link,release,target,object,and,the,aop,framework,can,cache,the,return,value,of,link,get,target,return,code,true,if,the,target,is,immutable,see,get,target;boolean,is,static
TargetSource -> boolean isStatic()_;1496837955;Will all calls to {@link #getTarget()} return the same object?_<p>In that case, there will be no need to invoke {@link #releaseTarget(Object)},_and the AOP framework can cache the return value of {@link #getTarget()}._@return {@code true} if the target is immutable_@see #getTarget;boolean isStatic()_;will,all,calls,to,link,get,target,return,the,same,object,p,in,that,case,there,will,be,no,need,to,invoke,link,release,target,object,and,the,aop,framework,can,cache,the,return,value,of,link,get,target,return,code,true,if,the,target,is,immutable,see,get,target;boolean,is,static
TargetSource -> boolean isStatic()_;1496955179;Will all calls to {@link #getTarget()} return the same object?_<p>In that case, there will be no need to invoke {@link #releaseTarget(Object)},_and the AOP framework can cache the return value of {@link #getTarget()}._@return {@code true} if the target is immutable_@see #getTarget;boolean isStatic()_;will,all,calls,to,link,get,target,return,the,same,object,p,in,that,case,there,will,be,no,need,to,invoke,link,release,target,object,and,the,aop,framework,can,cache,the,return,value,of,link,get,target,return,code,true,if,the,target,is,immutable,see,get,target;boolean,is,static
TargetSource -> boolean isStatic()_;1497300858;Will all calls to {@link #getTarget()} return the same object?_<p>In that case, there will be no need to invoke {@link #releaseTarget(Object)},_and the AOP framework can cache the return value of {@link #getTarget()}._@return {@code true} if the target is immutable_@see #getTarget;boolean isStatic()_;will,all,calls,to,link,get,target,return,the,same,object,p,in,that,case,there,will,be,no,need,to,invoke,link,release,target,object,and,the,aop,framework,can,cache,the,return,value,of,link,get,target,return,code,true,if,the,target,is,immutable,see,get,target;boolean,is,static
TargetSource -> boolean isStatic()_;1502974979;Will all calls to {@link #getTarget()} return the same object?_<p>In that case, there will be no need to invoke {@link #releaseTarget(Object)},_and the AOP framework can cache the return value of {@link #getTarget()}._@return {@code true} if the target is immutable_@see #getTarget;boolean isStatic()_;will,all,calls,to,link,get,target,return,the,same,object,p,in,that,case,there,will,be,no,need,to,invoke,link,release,target,object,and,the,aop,framework,can,cache,the,return,value,of,link,get,target,return,code,true,if,the,target,is,immutable,see,get,target;boolean,is,static
TargetSource -> boolean isStatic()_;1530174524;Will all calls to {@link #getTarget()} return the same object?_<p>In that case, there will be no need to invoke {@link #releaseTarget(Object)},_and the AOP framework can cache the return value of {@link #getTarget()}._@return {@code true} if the target is immutable_@see #getTarget;boolean isStatic()_;will,all,calls,to,link,get,target,return,the,same,object,p,in,that,case,there,will,be,no,need,to,invoke,link,release,target,object,and,the,aop,framework,can,cache,the,return,value,of,link,get,target,return,code,true,if,the,target,is,immutable,see,get,target;boolean,is,static
TargetSource -> @Nullable 	Object getTarget() throws Exception_;1495868221;Return a target instance. Invoked immediately before the_AOP framework calls the "target" of an AOP method invocation._@return the target object, which contains the joinpoint_@throws Exception if the target object can't be resolved;@Nullable_	Object getTarget() throws Exception_;return,a,target,instance,invoked,immediately,before,the,aop,framework,calls,the,target,of,an,aop,method,invocation,return,the,target,object,which,contains,the,joinpoint,throws,exception,if,the,target,object,can,t,be,resolved;nullable,object,get,target,throws,exception
TargetSource -> @Nullable 	Object getTarget() throws Exception_;1496837955;Return a target instance. Invoked immediately before the_AOP framework calls the "target" of an AOP method invocation._@return the target object, which contains the joinpoint_@throws Exception if the target object can't be resolved;@Nullable_	Object getTarget() throws Exception_;return,a,target,instance,invoked,immediately,before,the,aop,framework,calls,the,target,of,an,aop,method,invocation,return,the,target,object,which,contains,the,joinpoint,throws,exception,if,the,target,object,can,t,be,resolved;nullable,object,get,target,throws,exception
TargetSource -> @Nullable 	Object getTarget() throws Exception_;1497300858;Return a target instance. Invoked immediately before the_AOP framework calls the "target" of an AOP method invocation._@return the target object which contains the joinpoint,_or {@code null} if there is no actual target instance_@throws Exception if the target object can't be resolved;@Nullable_	Object getTarget() throws Exception_;return,a,target,instance,invoked,immediately,before,the,aop,framework,calls,the,target,of,an,aop,method,invocation,return,the,target,object,which,contains,the,joinpoint,or,code,null,if,there,is,no,actual,target,instance,throws,exception,if,the,target,object,can,t,be,resolved;nullable,object,get,target,throws,exception
TargetSource -> @Nullable 	Object getTarget() throws Exception_;1502974979;Return a target instance. Invoked immediately before the_AOP framework calls the "target" of an AOP method invocation._@return the target object which contains the joinpoint,_or {@code null} if there is no actual target instance_@throws Exception if the target object can't be resolved;@Nullable_	Object getTarget() throws Exception_;return,a,target,instance,invoked,immediately,before,the,aop,framework,calls,the,target,of,an,aop,method,invocation,return,the,target,object,which,contains,the,joinpoint,or,code,null,if,there,is,no,actual,target,instance,throws,exception,if,the,target,object,can,t,be,resolved;nullable,object,get,target,throws,exception
TargetSource -> @Nullable 	Object getTarget() throws Exception_;1530174524;Return a target instance. Invoked immediately before the_AOP framework calls the "target" of an AOP method invocation._@return the target object which contains the joinpoint,_or {@code null} if there is no actual target instance_@throws Exception if the target object can't be resolved;@Nullable_	Object getTarget() throws Exception_;return,a,target,instance,invoked,immediately,before,the,aop,framework,calls,the,target,of,an,aop,method,invocation,return,the,target,object,which,contains,the,joinpoint,or,code,null,if,there,is,no,actual,target,instance,throws,exception,if,the,target,object,can,t,be,resolved;nullable,object,get,target,throws,exception
TargetSource -> Class<?> getTargetClass()_;1328020251;Return the type of targets returned by this {@link TargetSource}._<p>Can return <code>null</code>, although certain usages of a_<code>TargetSource</code> might just work with a predetermined_target class._@return the type of targets returned by this {@link TargetSource};Class<?> getTargetClass()_;return,the,type,of,targets,returned,by,this,link,target,source,p,can,return,code,null,code,although,certain,usages,of,a,code,target,source,code,might,just,work,with,a,predetermined,target,class,return,the,type,of,targets,returned,by,this,link,target,source;class,get,target,class
TargetSource -> Class<?> getTargetClass()_;1357119239;Return the type of targets returned by this {@link TargetSource}._<p>Can return {@code null}, although certain usages of a_{@code TargetSource} might just work with a predetermined_target class._@return the type of targets returned by this {@link TargetSource};Class<?> getTargetClass()_;return,the,type,of,targets,returned,by,this,link,target,source,p,can,return,code,null,although,certain,usages,of,a,code,target,source,might,just,work,with,a,predetermined,target,class,return,the,type,of,targets,returned,by,this,link,target,source;class,get,target,class
TargetSource -> void releaseTarget(Object target) throws Exception_;1328020251;Release the given target object obtained from the_{@link #getTarget()} method._@param target object obtained from a call to {@link #getTarget()}_@throws Exception if the object can't be released;void releaseTarget(Object target) throws Exception_;release,the,given,target,object,obtained,from,the,link,get,target,method,param,target,object,obtained,from,a,call,to,link,get,target,throws,exception,if,the,object,can,t,be,released;void,release,target,object,target,throws,exception
TargetSource -> void releaseTarget(Object target) throws Exception_;1356735495;Release the given target object obtained from the_{@link #getTarget()} method._@param target object obtained from a call to {@link #getTarget()}_@throws Exception if the object can't be released;void releaseTarget(Object target) throws Exception_;release,the,given,target,object,obtained,from,the,link,get,target,method,param,target,object,obtained,from,a,call,to,link,get,target,throws,exception,if,the,object,can,t,be,released;void,release,target,object,target,throws,exception
TargetSource -> void releaseTarget(Object target) throws Exception_;1357119239;Release the given target object obtained from the_{@link #getTarget()} method._@param target object obtained from a call to {@link #getTarget()}_@throws Exception if the object can't be released;void releaseTarget(Object target) throws Exception_;release,the,given,target,object,obtained,from,the,link,get,target,method,param,target,object,obtained,from,a,call,to,link,get,target,throws,exception,if,the,object,can,t,be,released;void,release,target,object,target,throws,exception
TargetSource -> void releaseTarget(Object target) throws Exception_;1368482696;Release the given target object obtained from the_{@link #getTarget()} method._@param target object obtained from a call to {@link #getTarget()}_@throws Exception if the object can't be released;void releaseTarget(Object target) throws Exception_;release,the,given,target,object,obtained,from,the,link,get,target,method,param,target,object,obtained,from,a,call,to,link,get,target,throws,exception,if,the,object,can,t,be,released;void,release,target,object,target,throws,exception
TargetSource -> void releaseTarget(Object target) throws Exception_;1495868221;Release the given target object obtained from the_{@link #getTarget()} method._@param target object obtained from a call to {@link #getTarget()}_@throws Exception if the object can't be released;void releaseTarget(Object target) throws Exception_;release,the,given,target,object,obtained,from,the,link,get,target,method,param,target,object,obtained,from,a,call,to,link,get,target,throws,exception,if,the,object,can,t,be,released;void,release,target,object,target,throws,exception
TargetSource -> void releaseTarget(Object target) throws Exception_;1496837955;Release the given target object obtained from the_{@link #getTarget()} method._@param target object obtained from a call to {@link #getTarget()}_@throws Exception if the object can't be released;void releaseTarget(Object target) throws Exception_;release,the,given,target,object,obtained,from,the,link,get,target,method,param,target,object,obtained,from,a,call,to,link,get,target,throws,exception,if,the,object,can,t,be,released;void,release,target,object,target,throws,exception
TargetSource -> void releaseTarget(Object target) throws Exception_;1496955179;Release the given target object obtained from the_{@link #getTarget()} method._@param target object obtained from a call to {@link #getTarget()}_@throws Exception if the object can't be released;void releaseTarget(Object target) throws Exception_;release,the,given,target,object,obtained,from,the,link,get,target,method,param,target,object,obtained,from,a,call,to,link,get,target,throws,exception,if,the,object,can,t,be,released;void,release,target,object,target,throws,exception
TargetSource -> void releaseTarget(Object target) throws Exception_;1497300858;Release the given target object obtained from the_{@link #getTarget()} method, if any._@param target object obtained from a call to {@link #getTarget()}_@throws Exception if the object can't be released;void releaseTarget(Object target) throws Exception_;release,the,given,target,object,obtained,from,the,link,get,target,method,if,any,param,target,object,obtained,from,a,call,to,link,get,target,throws,exception,if,the,object,can,t,be,released;void,release,target,object,target,throws,exception
TargetSource -> void releaseTarget(Object target) throws Exception_;1502974979;Release the given target object obtained from the_{@link #getTarget()} method, if any._@param target object obtained from a call to {@link #getTarget()}_@throws Exception if the object can't be released;void releaseTarget(Object target) throws Exception_;release,the,given,target,object,obtained,from,the,link,get,target,method,if,any,param,target,object,obtained,from,a,call,to,link,get,target,throws,exception,if,the,object,can,t,be,released;void,release,target,object,target,throws,exception
TargetSource -> void releaseTarget(Object target) throws Exception_;1530174524;Release the given target object obtained from the_{@link #getTarget()} method, if any._@param target object obtained from a call to {@link #getTarget()}_@throws Exception if the object can't be released;void releaseTarget(Object target) throws Exception_;release,the,given,target,object,obtained,from,the,link,get,target,method,if,any,param,target,object,obtained,from,a,call,to,link,get,target,throws,exception,if,the,object,can,t,be,released;void,release,target,object,target,throws,exception
