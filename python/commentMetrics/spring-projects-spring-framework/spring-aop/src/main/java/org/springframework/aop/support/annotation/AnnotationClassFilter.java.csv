# id;timestamp;commentText;codeText;commentWords;codeWords
AnnotationClassFilter -> public AnnotationClassFilter(Class<? extends Annotation> annotationType);1328020251;Create a new AnnotationClassFilter for the given annotation type._@param annotationType the annotation type to look for;public AnnotationClassFilter(Class<? extends Annotation> annotationType) {_		this(annotationType, false)__	};create,a,new,annotation,class,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,look,for;public,annotation,class,filter,class,extends,annotation,annotation,type,this,annotation,type,false
AnnotationClassFilter -> public AnnotationClassFilter(Class<? extends Annotation> annotationType);1356735495;Create a new AnnotationClassFilter for the given annotation type._@param annotationType the annotation type to look for;public AnnotationClassFilter(Class<? extends Annotation> annotationType) {_		this(annotationType, false)__	};create,a,new,annotation,class,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,look,for;public,annotation,class,filter,class,extends,annotation,annotation,type,this,annotation,type,false
AnnotationClassFilter -> public AnnotationClassFilter(Class<? extends Annotation> annotationType);1357119239;Create a new AnnotationClassFilter for the given annotation type._@param annotationType the annotation type to look for;public AnnotationClassFilter(Class<? extends Annotation> annotationType) {_		this(annotationType, false)__	};create,a,new,annotation,class,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,look,for;public,annotation,class,filter,class,extends,annotation,annotation,type,this,annotation,type,false
AnnotationClassFilter -> public AnnotationClassFilter(Class<? extends Annotation> annotationType);1368482696;Create a new AnnotationClassFilter for the given annotation type._@param annotationType the annotation type to look for;public AnnotationClassFilter(Class<? extends Annotation> annotationType) {_		this(annotationType, false)__	};create,a,new,annotation,class,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,look,for;public,annotation,class,filter,class,extends,annotation,annotation,type,this,annotation,type,false
AnnotationClassFilter -> public AnnotationClassFilter(Class<? extends Annotation> annotationType);1385412762;Create a new AnnotationClassFilter for the given annotation type._@param annotationType the annotation type to look for;public AnnotationClassFilter(Class<? extends Annotation> annotationType) {_		this(annotationType, false)__	};create,a,new,annotation,class,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,look,for;public,annotation,class,filter,class,extends,annotation,annotation,type,this,annotation,type,false
AnnotationClassFilter -> public AnnotationClassFilter(Class<? extends Annotation> annotationType);1388872053;Create a new AnnotationClassFilter for the given annotation type._@param annotationType the annotation type to look for;public AnnotationClassFilter(Class<? extends Annotation> annotationType) {_		this(annotationType, false)__	};create,a,new,annotation,class,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,look,for;public,annotation,class,filter,class,extends,annotation,annotation,type,this,annotation,type,false
AnnotationClassFilter -> public AnnotationClassFilter(Class<? extends Annotation> annotationType);1493223400;Create a new AnnotationClassFilter for the given annotation type._@param annotationType the annotation type to look for;public AnnotationClassFilter(Class<? extends Annotation> annotationType) {_		this(annotationType, false)__	};create,a,new,annotation,class,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,look,for;public,annotation,class,filter,class,extends,annotation,annotation,type,this,annotation,type,false
AnnotationClassFilter -> public AnnotationClassFilter(Class<? extends Annotation> annotationType);1533808737;Create a new AnnotationClassFilter for the given annotation type._@param annotationType the annotation type to look for;public AnnotationClassFilter(Class<? extends Annotation> annotationType) {_		this(annotationType, false)__	};create,a,new,annotation,class,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,look,for;public,annotation,class,filter,class,extends,annotation,annotation,type,this,annotation,type,false
AnnotationClassFilter -> public AnnotationClassFilter(Class<? extends Annotation> annotationType, boolean checkInherited);1328020251;Create a new AnnotationClassFilter for the given annotation type._@param annotationType the annotation type to look for_@param checkInherited whether to explicitly check the superclasses and_interfaces for the annotation type as well (even if the annotation type_is not marked as inherited itself);public AnnotationClassFilter(Class<? extends Annotation> annotationType, boolean checkInherited) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		this.annotationType = annotationType__		this.checkInherited = checkInherited__	};create,a,new,annotation,class,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,look,for,param,check,inherited,whether,to,explicitly,check,the,superclasses,and,interfaces,for,the,annotation,type,as,well,even,if,the,annotation,type,is,not,marked,as,inherited,itself;public,annotation,class,filter,class,extends,annotation,annotation,type,boolean,check,inherited,assert,not,null,annotation,type,annotation,type,must,not,be,null,this,annotation,type,annotation,type,this,check,inherited,check,inherited
AnnotationClassFilter -> public AnnotationClassFilter(Class<? extends Annotation> annotationType, boolean checkInherited);1356735495;Create a new AnnotationClassFilter for the given annotation type._@param annotationType the annotation type to look for_@param checkInherited whether to explicitly check the superclasses and_interfaces for the annotation type as well (even if the annotation type_is not marked as inherited itself);public AnnotationClassFilter(Class<? extends Annotation> annotationType, boolean checkInherited) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		this.annotationType = annotationType__		this.checkInherited = checkInherited__	};create,a,new,annotation,class,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,look,for,param,check,inherited,whether,to,explicitly,check,the,superclasses,and,interfaces,for,the,annotation,type,as,well,even,if,the,annotation,type,is,not,marked,as,inherited,itself;public,annotation,class,filter,class,extends,annotation,annotation,type,boolean,check,inherited,assert,not,null,annotation,type,annotation,type,must,not,be,null,this,annotation,type,annotation,type,this,check,inherited,check,inherited
AnnotationClassFilter -> public AnnotationClassFilter(Class<? extends Annotation> annotationType, boolean checkInherited);1357119239;Create a new AnnotationClassFilter for the given annotation type._@param annotationType the annotation type to look for_@param checkInherited whether to explicitly check the superclasses and_interfaces for the annotation type as well (even if the annotation type_is not marked as inherited itself);public AnnotationClassFilter(Class<? extends Annotation> annotationType, boolean checkInherited) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		this.annotationType = annotationType__		this.checkInherited = checkInherited__	};create,a,new,annotation,class,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,look,for,param,check,inherited,whether,to,explicitly,check,the,superclasses,and,interfaces,for,the,annotation,type,as,well,even,if,the,annotation,type,is,not,marked,as,inherited,itself;public,annotation,class,filter,class,extends,annotation,annotation,type,boolean,check,inherited,assert,not,null,annotation,type,annotation,type,must,not,be,null,this,annotation,type,annotation,type,this,check,inherited,check,inherited
AnnotationClassFilter -> public AnnotationClassFilter(Class<? extends Annotation> annotationType, boolean checkInherited);1368482696;Create a new AnnotationClassFilter for the given annotation type._@param annotationType the annotation type to look for_@param checkInherited whether to explicitly check the superclasses and_interfaces for the annotation type as well (even if the annotation type_is not marked as inherited itself);public AnnotationClassFilter(Class<? extends Annotation> annotationType, boolean checkInherited) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		this.annotationType = annotationType__		this.checkInherited = checkInherited__	};create,a,new,annotation,class,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,look,for,param,check,inherited,whether,to,explicitly,check,the,superclasses,and,interfaces,for,the,annotation,type,as,well,even,if,the,annotation,type,is,not,marked,as,inherited,itself;public,annotation,class,filter,class,extends,annotation,annotation,type,boolean,check,inherited,assert,not,null,annotation,type,annotation,type,must,not,be,null,this,annotation,type,annotation,type,this,check,inherited,check,inherited
AnnotationClassFilter -> public AnnotationClassFilter(Class<? extends Annotation> annotationType, boolean checkInherited);1385412762;Create a new AnnotationClassFilter for the given annotation type._@param annotationType the annotation type to look for_@param checkInherited whether to explicitly check the superclasses and_interfaces for the annotation type as well (even if the annotation type_is not marked as inherited itself);public AnnotationClassFilter(Class<? extends Annotation> annotationType, boolean checkInherited) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		this.annotationType = annotationType__		this.checkInherited = checkInherited__	};create,a,new,annotation,class,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,look,for,param,check,inherited,whether,to,explicitly,check,the,superclasses,and,interfaces,for,the,annotation,type,as,well,even,if,the,annotation,type,is,not,marked,as,inherited,itself;public,annotation,class,filter,class,extends,annotation,annotation,type,boolean,check,inherited,assert,not,null,annotation,type,annotation,type,must,not,be,null,this,annotation,type,annotation,type,this,check,inherited,check,inherited
AnnotationClassFilter -> public AnnotationClassFilter(Class<? extends Annotation> annotationType, boolean checkInherited);1388872053;Create a new AnnotationClassFilter for the given annotation type._@param annotationType the annotation type to look for_@param checkInherited whether to explicitly check the superclasses and_interfaces for the annotation type as well (even if the annotation type_is not marked as inherited itself);public AnnotationClassFilter(Class<? extends Annotation> annotationType, boolean checkInherited) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		this.annotationType = annotationType__		this.checkInherited = checkInherited__	};create,a,new,annotation,class,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,look,for,param,check,inherited,whether,to,explicitly,check,the,superclasses,and,interfaces,for,the,annotation,type,as,well,even,if,the,annotation,type,is,not,marked,as,inherited,itself;public,annotation,class,filter,class,extends,annotation,annotation,type,boolean,check,inherited,assert,not,null,annotation,type,annotation,type,must,not,be,null,this,annotation,type,annotation,type,this,check,inherited,check,inherited
AnnotationClassFilter -> public AnnotationClassFilter(Class<? extends Annotation> annotationType, boolean checkInherited);1493223400;Create a new AnnotationClassFilter for the given annotation type._@param annotationType the annotation type to look for_@param checkInherited whether to also check the superclasses and_interfaces as well as meta-annotations for the annotation type_(i.e. whether to use {@link AnnotationUtils#findAnnotation(Class, Class)}_semantics instead of standard Java {@link Class#isAnnotationPresent});public AnnotationClassFilter(Class<? extends Annotation> annotationType, boolean checkInherited) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		this.annotationType = annotationType__		this.checkInherited = checkInherited__	};create,a,new,annotation,class,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,look,for,param,check,inherited,whether,to,also,check,the,superclasses,and,interfaces,as,well,as,meta,annotations,for,the,annotation,type,i,e,whether,to,use,link,annotation,utils,find,annotation,class,class,semantics,instead,of,standard,java,link,class,is,annotation,present;public,annotation,class,filter,class,extends,annotation,annotation,type,boolean,check,inherited,assert,not,null,annotation,type,annotation,type,must,not,be,null,this,annotation,type,annotation,type,this,check,inherited,check,inherited
AnnotationClassFilter -> public AnnotationClassFilter(Class<? extends Annotation> annotationType, boolean checkInherited);1533808737;Create a new AnnotationClassFilter for the given annotation type._@param annotationType the annotation type to look for_@param checkInherited whether to also check the superclasses and_interfaces as well as meta-annotations for the annotation type_(i.e. whether to use {@link AnnotatedElementUtils#hasAnnotation}_semantics instead of standard Java {@link Class#isAnnotationPresent});public AnnotationClassFilter(Class<? extends Annotation> annotationType, boolean checkInherited) {_		Assert.notNull(annotationType, "Annotation type must not be null")__		this.annotationType = annotationType__		this.checkInherited = checkInherited__	};create,a,new,annotation,class,filter,for,the,given,annotation,type,param,annotation,type,the,annotation,type,to,look,for,param,check,inherited,whether,to,also,check,the,superclasses,and,interfaces,as,well,as,meta,annotations,for,the,annotation,type,i,e,whether,to,use,link,annotated,element,utils,has,annotation,semantics,instead,of,standard,java,link,class,is,annotation,present;public,annotation,class,filter,class,extends,annotation,annotation,type,boolean,check,inherited,assert,not,null,annotation,type,annotation,type,must,not,be,null,this,annotation,type,annotation,type,this,check,inherited,check,inherited
