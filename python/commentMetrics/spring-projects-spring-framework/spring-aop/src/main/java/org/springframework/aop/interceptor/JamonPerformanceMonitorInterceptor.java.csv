# id;timestamp;commentText;codeText;commentWords;codeWords
JamonPerformanceMonitorInterceptor -> public JamonPerformanceMonitorInterceptor(boolean useDynamicLogger);1328020251;Create a new JamonPerformanceMonitorInterceptor with a dynamic or static logger,_according to the given flag._@param useDynamicLogger whether to use a dynamic logger or a static logger_@see #setUseDynamicLogger;public JamonPerformanceMonitorInterceptor(boolean useDynamicLogger) {_		setUseDynamicLogger(useDynamicLogger)__	};create,a,new,jamon,performance,monitor,interceptor,with,a,dynamic,or,static,logger,according,to,the,given,flag,param,use,dynamic,logger,whether,to,use,a,dynamic,logger,or,a,static,logger,see,set,use,dynamic,logger;public,jamon,performance,monitor,interceptor,boolean,use,dynamic,logger,set,use,dynamic,logger,use,dynamic,logger
JamonPerformanceMonitorInterceptor -> public JamonPerformanceMonitorInterceptor(boolean useDynamicLogger);1356735495;Create a new JamonPerformanceMonitorInterceptor with a dynamic or static logger,_according to the given flag._@param useDynamicLogger whether to use a dynamic logger or a static logger_@see #setUseDynamicLogger;public JamonPerformanceMonitorInterceptor(boolean useDynamicLogger) {_		setUseDynamicLogger(useDynamicLogger)__	};create,a,new,jamon,performance,monitor,interceptor,with,a,dynamic,or,static,logger,according,to,the,given,flag,param,use,dynamic,logger,whether,to,use,a,dynamic,logger,or,a,static,logger,see,set,use,dynamic,logger;public,jamon,performance,monitor,interceptor,boolean,use,dynamic,logger,set,use,dynamic,logger,use,dynamic,logger
JamonPerformanceMonitorInterceptor -> public JamonPerformanceMonitorInterceptor(boolean useDynamicLogger);1408391424;Create a new JamonPerformanceMonitorInterceptor with a dynamic or static logger,_according to the given flag._@param useDynamicLogger whether to use a dynamic logger or a static logger_@see #setUseDynamicLogger;public JamonPerformanceMonitorInterceptor(boolean useDynamicLogger) {_		setUseDynamicLogger(useDynamicLogger)__	};create,a,new,jamon,performance,monitor,interceptor,with,a,dynamic,or,static,logger,according,to,the,given,flag,param,use,dynamic,logger,whether,to,use,a,dynamic,logger,or,a,static,logger,see,set,use,dynamic,logger;public,jamon,performance,monitor,interceptor,boolean,use,dynamic,logger,set,use,dynamic,logger,use,dynamic,logger
JamonPerformanceMonitorInterceptor -> public JamonPerformanceMonitorInterceptor(boolean useDynamicLogger);1499944780;Create a new JamonPerformanceMonitorInterceptor with a dynamic or static logger,_according to the given flag._@param useDynamicLogger whether to use a dynamic logger or a static logger_@see #setUseDynamicLogger;public JamonPerformanceMonitorInterceptor(boolean useDynamicLogger) {_		setUseDynamicLogger(useDynamicLogger)__	};create,a,new,jamon,performance,monitor,interceptor,with,a,dynamic,or,static,logger,according,to,the,given,flag,param,use,dynamic,logger,whether,to,use,a,dynamic,logger,or,a,static,logger,see,set,use,dynamic,logger;public,jamon,performance,monitor,interceptor,boolean,use,dynamic,logger,set,use,dynamic,logger,use,dynamic,logger
JamonPerformanceMonitorInterceptor -> public JamonPerformanceMonitorInterceptor();1328020251;Create a new JamonPerformanceMonitorInterceptor with a static logger.;public JamonPerformanceMonitorInterceptor() {_	};create,a,new,jamon,performance,monitor,interceptor,with,a,static,logger;public,jamon,performance,monitor,interceptor
JamonPerformanceMonitorInterceptor -> public JamonPerformanceMonitorInterceptor();1356735495;Create a new JamonPerformanceMonitorInterceptor with a static logger.;public JamonPerformanceMonitorInterceptor() {_	};create,a,new,jamon,performance,monitor,interceptor,with,a,static,logger;public,jamon,performance,monitor,interceptor
JamonPerformanceMonitorInterceptor -> public JamonPerformanceMonitorInterceptor();1408391424;Create a new JamonPerformanceMonitorInterceptor with a static logger.;public JamonPerformanceMonitorInterceptor() {_	};create,a,new,jamon,performance,monitor,interceptor,with,a,static,logger;public,jamon,performance,monitor,interceptor
JamonPerformanceMonitorInterceptor -> public JamonPerformanceMonitorInterceptor();1499944780;Create a new JamonPerformanceMonitorInterceptor with a static logger.;public JamonPerformanceMonitorInterceptor() {_	};create,a,new,jamon,performance,monitor,interceptor,with,a,static,logger;public,jamon,performance,monitor,interceptor
JamonPerformanceMonitorInterceptor -> public void setTrackAllInvocations(boolean trackAllInvocations);1328020251;Set whether to track all invocations that go through this interceptor,_or just invocations with trace logging enabled._<p>Default is "false": Only invocations with trace logging enabled will_be monitored. Specify "true" to let JAMon track all invocations,_gathering statistics even when trace logging is disabled.;public void setTrackAllInvocations(boolean trackAllInvocations) {_		this.trackAllInvocations = trackAllInvocations__	};set,whether,to,track,all,invocations,that,go,through,this,interceptor,or,just,invocations,with,trace,logging,enabled,p,default,is,false,only,invocations,with,trace,logging,enabled,will,be,monitored,specify,true,to,let,jamon,track,all,invocations,gathering,statistics,even,when,trace,logging,is,disabled;public,void,set,track,all,invocations,boolean,track,all,invocations,this,track,all,invocations,track,all,invocations
JamonPerformanceMonitorInterceptor -> public void setTrackAllInvocations(boolean trackAllInvocations);1356735495;Set whether to track all invocations that go through this interceptor,_or just invocations with trace logging enabled._<p>Default is "false": Only invocations with trace logging enabled will_be monitored. Specify "true" to let JAMon track all invocations,_gathering statistics even when trace logging is disabled.;public void setTrackAllInvocations(boolean trackAllInvocations) {_		this.trackAllInvocations = trackAllInvocations__	};set,whether,to,track,all,invocations,that,go,through,this,interceptor,or,just,invocations,with,trace,logging,enabled,p,default,is,false,only,invocations,with,trace,logging,enabled,will,be,monitored,specify,true,to,let,jamon,track,all,invocations,gathering,statistics,even,when,trace,logging,is,disabled;public,void,set,track,all,invocations,boolean,track,all,invocations,this,track,all,invocations,track,all,invocations
JamonPerformanceMonitorInterceptor -> public void setTrackAllInvocations(boolean trackAllInvocations);1408391424;Set whether to track all invocations that go through this interceptor,_or just invocations with trace logging enabled._<p>Default is "false": Only invocations with trace logging enabled will_be monitored. Specify "true" to let JAMon track all invocations,_gathering statistics even when trace logging is disabled.;public void setTrackAllInvocations(boolean trackAllInvocations) {_		this.trackAllInvocations = trackAllInvocations__	};set,whether,to,track,all,invocations,that,go,through,this,interceptor,or,just,invocations,with,trace,logging,enabled,p,default,is,false,only,invocations,with,trace,logging,enabled,will,be,monitored,specify,true,to,let,jamon,track,all,invocations,gathering,statistics,even,when,trace,logging,is,disabled;public,void,set,track,all,invocations,boolean,track,all,invocations,this,track,all,invocations,track,all,invocations
JamonPerformanceMonitorInterceptor -> public void setTrackAllInvocations(boolean trackAllInvocations);1499944780;Set whether to track all invocations that go through this interceptor,_or just invocations with trace logging enabled._<p>Default is "false": Only invocations with trace logging enabled will_be monitored. Specify "true" to let JAMon track all invocations,_gathering statistics even when trace logging is disabled.;public void setTrackAllInvocations(boolean trackAllInvocations) {_		this.trackAllInvocations = trackAllInvocations__	};set,whether,to,track,all,invocations,that,go,through,this,interceptor,or,just,invocations,with,trace,logging,enabled,p,default,is,false,only,invocations,with,trace,logging,enabled,will,be,monitored,specify,true,to,let,jamon,track,all,invocations,gathering,statistics,even,when,trace,logging,is,disabled;public,void,set,track,all,invocations,boolean,track,all,invocations,this,track,all,invocations,track,all,invocations
JamonPerformanceMonitorInterceptor -> protected void trackException(MonKey key, Throwable ex);1408391424;Count the thrown exception and put the stack trace in the details portion of the key._This will allow the stack trace to be viewed in the JAMon web application.;protected void trackException(MonKey key, Throwable ex) {_		String stackTrace = "stackTrace=" + Misc.getExceptionTrace(ex)__		key.setDetails(stackTrace)___		_		MonitorFactory.add(new MonKeyImp(ex.getClass().getName(), stackTrace, "Exception"), 1)___		_		MonitorFactory.add(new MonKeyImp(MonitorFactory.EXCEPTIONS_LABEL, stackTrace, "Exception"), 1)__	};count,the,thrown,exception,and,put,the,stack,trace,in,the,details,portion,of,the,key,this,will,allow,the,stack,trace,to,be,viewed,in,the,jamon,web,application;protected,void,track,exception,mon,key,key,throwable,ex,string,stack,trace,stack,trace,misc,get,exception,trace,ex,key,set,details,stack,trace,monitor,factory,add,new,mon,key,imp,ex,get,class,get,name,stack,trace,exception,1,monitor,factory,add,new,mon,key,imp,monitor,factory,stack,trace,exception,1
JamonPerformanceMonitorInterceptor -> protected void trackException(MonKey key, Throwable ex);1499944780;Count the thrown exception and put the stack trace in the details portion of the key._This will allow the stack trace to be viewed in the JAMon web application.;protected void trackException(MonKey key, Throwable ex) {_		String stackTrace = "stackTrace=" + Misc.getExceptionTrace(ex)__		key.setDetails(stackTrace)___		_		MonitorFactory.add(new MonKeyImp(ex.getClass().getName(), stackTrace, "Exception"), 1)___		_		MonitorFactory.add(new MonKeyImp(MonitorFactory.EXCEPTIONS_LABEL, stackTrace, "Exception"), 1)__	};count,the,thrown,exception,and,put,the,stack,trace,in,the,details,portion,of,the,key,this,will,allow,the,stack,trace,to,be,viewed,in,the,jamon,web,application;protected,void,track,exception,mon,key,key,throwable,ex,string,stack,trace,stack,trace,misc,get,exception,trace,ex,key,set,details,stack,trace,monitor,factory,add,new,mon,key,imp,ex,get,class,get,name,stack,trace,exception,1,monitor,factory,add,new,mon,key,imp,monitor,factory,stack,trace,exception,1
JamonPerformanceMonitorInterceptor -> @Override 	protected boolean isInterceptorEnabled(MethodInvocation invocation, Log logger);1328020251;Always applies the interceptor if the "trackAllInvocations" flag has been set__else just kicks in if the log is enabled._@see #setTrackAllInvocations_@see #isLogEnabled;@Override_	protected boolean isInterceptorEnabled(MethodInvocation invocation, Log logger) {_		return (this.trackAllInvocations || isLogEnabled(logger))__	};always,applies,the,interceptor,if,the,track,all,invocations,flag,has,been,set,else,just,kicks,in,if,the,log,is,enabled,see,set,track,all,invocations,see,is,log,enabled;override,protected,boolean,is,interceptor,enabled,method,invocation,invocation,log,logger,return,this,track,all,invocations,is,log,enabled,logger
JamonPerformanceMonitorInterceptor -> @Override 	protected boolean isInterceptorEnabled(MethodInvocation invocation, Log logger);1356735495;Always applies the interceptor if the "trackAllInvocations" flag has been set__else just kicks in if the log is enabled._@see #setTrackAllInvocations_@see #isLogEnabled;@Override_	protected boolean isInterceptorEnabled(MethodInvocation invocation, Log logger) {_		return (this.trackAllInvocations || isLogEnabled(logger))__	};always,applies,the,interceptor,if,the,track,all,invocations,flag,has,been,set,else,just,kicks,in,if,the,log,is,enabled,see,set,track,all,invocations,see,is,log,enabled;override,protected,boolean,is,interceptor,enabled,method,invocation,invocation,log,logger,return,this,track,all,invocations,is,log,enabled,logger
JamonPerformanceMonitorInterceptor -> @Override 	protected boolean isInterceptorEnabled(MethodInvocation invocation, Log logger);1408391424;Always applies the interceptor if the "trackAllInvocations" flag has been set__else just kicks in if the log is enabled._@see #setTrackAllInvocations_@see #isLogEnabled;@Override_	protected boolean isInterceptorEnabled(MethodInvocation invocation, Log logger) {_		return (this.trackAllInvocations || isLogEnabled(logger))__	};always,applies,the,interceptor,if,the,track,all,invocations,flag,has,been,set,else,just,kicks,in,if,the,log,is,enabled,see,set,track,all,invocations,see,is,log,enabled;override,protected,boolean,is,interceptor,enabled,method,invocation,invocation,log,logger,return,this,track,all,invocations,is,log,enabled,logger
JamonPerformanceMonitorInterceptor -> @Override 	protected boolean isInterceptorEnabled(MethodInvocation invocation, Log logger);1499944780;Always applies the interceptor if the "trackAllInvocations" flag has been set__else just kicks in if the log is enabled._@see #setTrackAllInvocations_@see #isLogEnabled;@Override_	protected boolean isInterceptorEnabled(MethodInvocation invocation, Log logger) {_		return (this.trackAllInvocations || isLogEnabled(logger))__	};always,applies,the,interceptor,if,the,track,all,invocations,flag,has,been,set,else,just,kicks,in,if,the,log,is,enabled,see,set,track,all,invocations,see,is,log,enabled;override,protected,boolean,is,interceptor,enabled,method,invocation,invocation,log,logger,return,this,track,all,invocations,is,log,enabled,logger
JamonPerformanceMonitorInterceptor -> public JamonPerformanceMonitorInterceptor(boolean useDynamicLogger, boolean trackAllInvocations);1328020251;Create a new JamonPerformanceMonitorInterceptor with a dynamic or static logger,_according to the given flag._@param useDynamicLogger whether to use a dynamic logger or a static logger_@param trackAllInvocations whether to track all invocations that go through_this interceptor, or just invocations with trace logging enabled_@see #setUseDynamicLogger;public JamonPerformanceMonitorInterceptor(boolean useDynamicLogger, boolean trackAllInvocations) {_		setUseDynamicLogger(useDynamicLogger)__		setTrackAllInvocations(trackAllInvocations)__	};create,a,new,jamon,performance,monitor,interceptor,with,a,dynamic,or,static,logger,according,to,the,given,flag,param,use,dynamic,logger,whether,to,use,a,dynamic,logger,or,a,static,logger,param,track,all,invocations,whether,to,track,all,invocations,that,go,through,this,interceptor,or,just,invocations,with,trace,logging,enabled,see,set,use,dynamic,logger;public,jamon,performance,monitor,interceptor,boolean,use,dynamic,logger,boolean,track,all,invocations,set,use,dynamic,logger,use,dynamic,logger,set,track,all,invocations,track,all,invocations
JamonPerformanceMonitorInterceptor -> public JamonPerformanceMonitorInterceptor(boolean useDynamicLogger, boolean trackAllInvocations);1356735495;Create a new JamonPerformanceMonitorInterceptor with a dynamic or static logger,_according to the given flag._@param useDynamicLogger whether to use a dynamic logger or a static logger_@param trackAllInvocations whether to track all invocations that go through_this interceptor, or just invocations with trace logging enabled_@see #setUseDynamicLogger;public JamonPerformanceMonitorInterceptor(boolean useDynamicLogger, boolean trackAllInvocations) {_		setUseDynamicLogger(useDynamicLogger)__		setTrackAllInvocations(trackAllInvocations)__	};create,a,new,jamon,performance,monitor,interceptor,with,a,dynamic,or,static,logger,according,to,the,given,flag,param,use,dynamic,logger,whether,to,use,a,dynamic,logger,or,a,static,logger,param,track,all,invocations,whether,to,track,all,invocations,that,go,through,this,interceptor,or,just,invocations,with,trace,logging,enabled,see,set,use,dynamic,logger;public,jamon,performance,monitor,interceptor,boolean,use,dynamic,logger,boolean,track,all,invocations,set,use,dynamic,logger,use,dynamic,logger,set,track,all,invocations,track,all,invocations
JamonPerformanceMonitorInterceptor -> public JamonPerformanceMonitorInterceptor(boolean useDynamicLogger, boolean trackAllInvocations);1408391424;Create a new JamonPerformanceMonitorInterceptor with a dynamic or static logger,_according to the given flag._@param useDynamicLogger whether to use a dynamic logger or a static logger_@param trackAllInvocations whether to track all invocations that go through_this interceptor, or just invocations with trace logging enabled_@see #setUseDynamicLogger;public JamonPerformanceMonitorInterceptor(boolean useDynamicLogger, boolean trackAllInvocations) {_		setUseDynamicLogger(useDynamicLogger)__		setTrackAllInvocations(trackAllInvocations)__	};create,a,new,jamon,performance,monitor,interceptor,with,a,dynamic,or,static,logger,according,to,the,given,flag,param,use,dynamic,logger,whether,to,use,a,dynamic,logger,or,a,static,logger,param,track,all,invocations,whether,to,track,all,invocations,that,go,through,this,interceptor,or,just,invocations,with,trace,logging,enabled,see,set,use,dynamic,logger;public,jamon,performance,monitor,interceptor,boolean,use,dynamic,logger,boolean,track,all,invocations,set,use,dynamic,logger,use,dynamic,logger,set,track,all,invocations,track,all,invocations
JamonPerformanceMonitorInterceptor -> public JamonPerformanceMonitorInterceptor(boolean useDynamicLogger, boolean trackAllInvocations);1499944780;Create a new JamonPerformanceMonitorInterceptor with a dynamic or static logger,_according to the given flag._@param useDynamicLogger whether to use a dynamic logger or a static logger_@param trackAllInvocations whether to track all invocations that go through_this interceptor, or just invocations with trace logging enabled_@see #setUseDynamicLogger;public JamonPerformanceMonitorInterceptor(boolean useDynamicLogger, boolean trackAllInvocations) {_		setUseDynamicLogger(useDynamicLogger)__		setTrackAllInvocations(trackAllInvocations)__	};create,a,new,jamon,performance,monitor,interceptor,with,a,dynamic,or,static,logger,according,to,the,given,flag,param,use,dynamic,logger,whether,to,use,a,dynamic,logger,or,a,static,logger,param,track,all,invocations,whether,to,track,all,invocations,that,go,through,this,interceptor,or,just,invocations,with,trace,logging,enabled,see,set,use,dynamic,logger;public,jamon,performance,monitor,interceptor,boolean,use,dynamic,logger,boolean,track,all,invocations,set,use,dynamic,logger,use,dynamic,logger,set,track,all,invocations,track,all,invocations
JamonPerformanceMonitorInterceptor -> @Override 	protected Object invokeUnderTrace(MethodInvocation invocation, Log logger) throws Throwable;1328020251;Wraps the invocation with a JAMon Monitor and writes the current_performance statistics to the log (if enabled)._@see com.jamonapi.MonitorFactory#start_@see com.jamonapi.Monitor#stop;@Override_	protected Object invokeUnderTrace(MethodInvocation invocation, Log logger) throws Throwable {_		String name = createInvocationTraceName(invocation)__		Monitor monitor = MonitorFactory.start(name)__		try {_			return invocation.proceed()__		}_		finally {_			monitor.stop()__			if (!this.trackAllInvocations || isLogEnabled(logger)) {_				logger.trace("JAMon performance statistics for method [" + name + "]:\n" + monitor)__			}_		}_	};wraps,the,invocation,with,a,jamon,monitor,and,writes,the,current,performance,statistics,to,the,log,if,enabled,see,com,jamonapi,monitor,factory,start,see,com,jamonapi,monitor,stop;override,protected,object,invoke,under,trace,method,invocation,invocation,log,logger,throws,throwable,string,name,create,invocation,trace,name,invocation,monitor,monitor,monitor,factory,start,name,try,return,invocation,proceed,finally,monitor,stop,if,this,track,all,invocations,is,log,enabled,logger,logger,trace,jamon,performance,statistics,for,method,name,n,monitor
JamonPerformanceMonitorInterceptor -> @Override 	protected Object invokeUnderTrace(MethodInvocation invocation, Log logger) throws Throwable;1356735495;Wraps the invocation with a JAMon Monitor and writes the current_performance statistics to the log (if enabled)._@see com.jamonapi.MonitorFactory#start_@see com.jamonapi.Monitor#stop;@Override_	protected Object invokeUnderTrace(MethodInvocation invocation, Log logger) throws Throwable {_		String name = createInvocationTraceName(invocation)__		Monitor monitor = MonitorFactory.start(name)__		try {_			return invocation.proceed()__		}_		finally {_			monitor.stop()__			if (!this.trackAllInvocations || isLogEnabled(logger)) {_				logger.trace("JAMon performance statistics for method [" + name + "]:\n" + monitor)__			}_		}_	};wraps,the,invocation,with,a,jamon,monitor,and,writes,the,current,performance,statistics,to,the,log,if,enabled,see,com,jamonapi,monitor,factory,start,see,com,jamonapi,monitor,stop;override,protected,object,invoke,under,trace,method,invocation,invocation,log,logger,throws,throwable,string,name,create,invocation,trace,name,invocation,monitor,monitor,monitor,factory,start,name,try,return,invocation,proceed,finally,monitor,stop,if,this,track,all,invocations,is,log,enabled,logger,logger,trace,jamon,performance,statistics,for,method,name,n,monitor
JamonPerformanceMonitorInterceptor -> @Override 	protected Object invokeUnderTrace(MethodInvocation invocation, Log logger) throws Throwable;1408391424;Wraps the invocation with a JAMon Monitor and writes the current_performance statistics to the log (if enabled)._@see com.jamonapi.MonitorFactory#start_@see com.jamonapi.Monitor#stop;@Override_	protected Object invokeUnderTrace(MethodInvocation invocation, Log logger) throws Throwable {_		String name = createInvocationTraceName(invocation)__		MonKey key = new MonKeyImp(name, name, "ms.")___		Monitor monitor = MonitorFactory.start(key)__		try {_			return invocation.proceed()__		}_		catch (Throwable ex) {_			trackException(key, ex)__			throw ex__		}_		finally {_			monitor.stop()__			if (!this.trackAllInvocations || isLogEnabled(logger)) {_				logger.trace("JAMon performance statistics for method [" + name + "]:\n" + monitor)__			}_		}_	};wraps,the,invocation,with,a,jamon,monitor,and,writes,the,current,performance,statistics,to,the,log,if,enabled,see,com,jamonapi,monitor,factory,start,see,com,jamonapi,monitor,stop;override,protected,object,invoke,under,trace,method,invocation,invocation,log,logger,throws,throwable,string,name,create,invocation,trace,name,invocation,mon,key,key,new,mon,key,imp,name,name,ms,monitor,monitor,monitor,factory,start,key,try,return,invocation,proceed,catch,throwable,ex,track,exception,key,ex,throw,ex,finally,monitor,stop,if,this,track,all,invocations,is,log,enabled,logger,logger,trace,jamon,performance,statistics,for,method,name,n,monitor
JamonPerformanceMonitorInterceptor -> @Override 	protected Object invokeUnderTrace(MethodInvocation invocation, Log logger) throws Throwable;1499944780;Wraps the invocation with a JAMon Monitor and writes the current_performance statistics to the log (if enabled)._@see com.jamonapi.MonitorFactory#start_@see com.jamonapi.Monitor#stop;@Override_	protected Object invokeUnderTrace(MethodInvocation invocation, Log logger) throws Throwable {_		String name = createInvocationTraceName(invocation)__		MonKey key = new MonKeyImp(name, name, "ms.")___		Monitor monitor = MonitorFactory.start(key)__		try {_			return invocation.proceed()__		}_		catch (Throwable ex) {_			trackException(key, ex)__			throw ex__		}_		finally {_			monitor.stop()__			if (!this.trackAllInvocations || isLogEnabled(logger)) {_				writeToLog(logger, "JAMon performance statistics for method [" + name + "]:\n" + monitor)__			}_		}_	};wraps,the,invocation,with,a,jamon,monitor,and,writes,the,current,performance,statistics,to,the,log,if,enabled,see,com,jamonapi,monitor,factory,start,see,com,jamonapi,monitor,stop;override,protected,object,invoke,under,trace,method,invocation,invocation,log,logger,throws,throwable,string,name,create,invocation,trace,name,invocation,mon,key,key,new,mon,key,imp,name,name,ms,monitor,monitor,monitor,factory,start,key,try,return,invocation,proceed,catch,throwable,ex,track,exception,key,ex,throw,ex,finally,monitor,stop,if,this,track,all,invocations,is,log,enabled,logger,write,to,log,logger,jamon,performance,statistics,for,method,name,n,monitor
