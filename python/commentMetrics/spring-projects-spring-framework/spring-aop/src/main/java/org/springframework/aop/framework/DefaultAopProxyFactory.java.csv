commented;modifiers;parameterAmount;loc;comment;code
false;public;1;17;;@Override public AopProxy createAopProxy(AdvisedSupport config) throws AopConfigException {     if (config.isOptimize() || config.isProxyTargetClass() || hasNoUserSuppliedProxyInterfaces(config)) {         Class<?> targetClass = config.getTargetClass().         if (targetClass == null) {             throw new AopConfigException("TargetSource cannot determine target class: " + "Either an interface or a target is required for proxy creation.").         }         if (targetClass.isInterface() || Proxy.isProxyClass(targetClass)) {             return new JdkDynamicAopProxy(config).         }         return new ObjenesisCglibAopProxy(config).     } else {         return new JdkDynamicAopProxy(config).     } }
true;private;1;4;/**  * Determine whether the supplied {@link AdvisedSupport} has only the  * {@link org.springframework.aop.SpringProxy} interface specified  * (or no proxy interfaces specified at all).  */ ;/**  * Determine whether the supplied {@link AdvisedSupport} has only the  * {@link org.springframework.aop.SpringProxy} interface specified  * (or no proxy interfaces specified at all).  */ private boolean hasNoUserSuppliedProxyInterfaces(AdvisedSupport config) {     Class<?>[] ifcs = config.getProxiedInterfaces().     return (ifcs.length == 0 || (ifcs.length == 1 && SpringProxy.class.isAssignableFrom(ifcs[0]))). }
