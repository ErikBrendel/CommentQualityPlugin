commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Is fatal logging currently enabled?  * <p>Call this method to prevent having to perform expensive operations  * (for example, <code>String</code> concatenation)  * when the log level is more than fatal.  * @return true if fatal is enabled in the underlying logger.  */ ;/**  * Is fatal logging currently enabled?  * <p>Call this method to prevent having to perform expensive operations  * (for example, <code>String</code> concatenation)  * when the log level is more than fatal.  * @return true if fatal is enabled in the underlying logger.  */ boolean isFatalEnabled().
true;;0;1;/**  * Is error logging currently enabled?  * <p>Call this method to prevent having to perform expensive operations  * (for example, <code>String</code> concatenation)  * when the log level is more than error.  * @return true if error is enabled in the underlying logger.  */ ;/**  * Is error logging currently enabled?  * <p>Call this method to prevent having to perform expensive operations  * (for example, <code>String</code> concatenation)  * when the log level is more than error.  * @return true if error is enabled in the underlying logger.  */ boolean isErrorEnabled().
true;;0;1;/**  * Is warn logging currently enabled?  * <p>Call this method to prevent having to perform expensive operations  * (for example, <code>String</code> concatenation)  * when the log level is more than warn.  * @return true if warn is enabled in the underlying logger.  */ ;/**  * Is warn logging currently enabled?  * <p>Call this method to prevent having to perform expensive operations  * (for example, <code>String</code> concatenation)  * when the log level is more than warn.  * @return true if warn is enabled in the underlying logger.  */ boolean isWarnEnabled().
true;;0;1;/**  * Is info logging currently enabled?  * <p>Call this method to prevent having to perform expensive operations  * (for example, <code>String</code> concatenation)  * when the log level is more than info.  * @return true if info is enabled in the underlying logger.  */ ;/**  * Is info logging currently enabled?  * <p>Call this method to prevent having to perform expensive operations  * (for example, <code>String</code> concatenation)  * when the log level is more than info.  * @return true if info is enabled in the underlying logger.  */ boolean isInfoEnabled().
true;;0;1;/**  * Is debug logging currently enabled?  * <p>Call this method to prevent having to perform expensive operations  * (for example, <code>String</code> concatenation)  * when the log level is more than debug.  * @return true if debug is enabled in the underlying logger.  */ ;/**  * Is debug logging currently enabled?  * <p>Call this method to prevent having to perform expensive operations  * (for example, <code>String</code> concatenation)  * when the log level is more than debug.  * @return true if debug is enabled in the underlying logger.  */ boolean isDebugEnabled().
true;;0;1;/**  * Is trace logging currently enabled?  * <p>Call this method to prevent having to perform expensive operations  * (for example, <code>String</code> concatenation)  * when the log level is more than trace.  * @return true if trace is enabled in the underlying logger.  */ ;/**  * Is trace logging currently enabled?  * <p>Call this method to prevent having to perform expensive operations  * (for example, <code>String</code> concatenation)  * when the log level is more than trace.  * @return true if trace is enabled in the underlying logger.  */ boolean isTraceEnabled().
true;;1;1;/**  * Logs a message with fatal log level.  * @param message log this message  */ ;/**  * Logs a message with fatal log level.  * @param message log this message  */ void fatal(Object message).
true;;2;1;/**  * Logs an error with fatal log level.  * @param message log this message  * @param t log this cause  */ ;/**  * Logs an error with fatal log level.  * @param message log this message  * @param t log this cause  */ void fatal(Object message, Throwable t).
true;;1;1;/**  * Logs a message with error log level.  * @param message log this message  */ ;/**  * Logs a message with error log level.  * @param message log this message  */ void error(Object message).
true;;2;1;/**  * Logs an error with error log level.  * @param message log this message  * @param t log this cause  */ ;/**  * Logs an error with error log level.  * @param message log this message  * @param t log this cause  */ void error(Object message, Throwable t).
true;;1;1;/**  * Logs a message with warn log level.  * @param message log this message  */ ;/**  * Logs a message with warn log level.  * @param message log this message  */ void warn(Object message).
true;;2;1;/**  * Logs an error with warn log level.  * @param message log this message  * @param t log this cause  */ ;/**  * Logs an error with warn log level.  * @param message log this message  * @param t log this cause  */ void warn(Object message, Throwable t).
true;;1;1;/**  * Logs a message with info log level.  * @param message log this message  */ ;/**  * Logs a message with info log level.  * @param message log this message  */ void info(Object message).
true;;2;1;/**  * Logs an error with info log level.  * @param message log this message  * @param t log this cause  */ ;/**  * Logs an error with info log level.  * @param message log this message  * @param t log this cause  */ void info(Object message, Throwable t).
true;;1;1;/**  * Logs a message with debug log level.  * @param message log this message  */ ;/**  * Logs a message with debug log level.  * @param message log this message  */ void debug(Object message).
true;;2;1;/**  * Logs an error with debug log level.  * @param message log this message  * @param t log this cause  */ ;/**  * Logs an error with debug log level.  * @param message log this message  * @param t log this cause  */ void debug(Object message, Throwable t).
true;;1;1;/**  * Logs a message with trace log level.  * @param message log this message  */ ;/**  * Logs a message with trace log level.  * @param message log this message  */ void trace(Object message).
true;;2;1;/**  * Logs an error with trace log level.  * @param message log this message  * @param t log this cause  */ ;/**  * Logs an error with trace log level.  * @param message log this message  * @param t log this cause  */ void trace(Object message, Throwable t).
