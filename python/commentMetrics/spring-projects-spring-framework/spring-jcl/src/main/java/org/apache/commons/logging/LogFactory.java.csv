commented;modifiers;parameterAmount;loc;comment;code
true;public,static;1;3;/**  * Convenience method to return a named logger.  * @param clazz containing Class from which a log name will be derived  */ ;/**  * Convenience method to return a named logger.  * @param clazz containing Class from which a log name will be derived  */ public static Log getLog(Class<?> clazz) {     return getLog(clazz.getName()). }
true;public,static;1;3;/**  * Convenience method to return a named logger.  * @param name logical name of the <code>Log</code> instance to be returned  */ ;/**  * Convenience method to return a named logger.  * @param name logical name of the <code>Log</code> instance to be returned  */ public static Log getLog(String name) {     return LogAdapter.createLog(name). }
true;public,static;0;4;/**  * This method only exists for compatibility with unusual Commons Logging API  * usage like e.g. {@code LogFactory.getFactory().getInstance(Class/String)}.  * @see #getInstance(Class)  * @see #getInstance(String)  * @deprecated in favor of {@link #getLog(Class)}/{@link #getLog(String)}  */ ;/**  * This method only exists for compatibility with unusual Commons Logging API  * usage like e.g. {@code LogFactory.getFactory().getInstance(Class/String)}.  * @see #getInstance(Class)  * @see #getInstance(String)  * @deprecated in favor of {@link #getLog(Class)}/{@link #getLog(String)}  */ @Deprecated public static LogFactory getFactory() {     return new LogFactory() {     }. }
true;public;1;4;/**  * Convenience method to return a named logger.  * <p>This variant just dispatches straight to {@link #getLog(Class)}.  * @param clazz containing Class from which a log name will be derived  * @deprecated in favor of {@link #getLog(Class)}  */ ;/**  * Convenience method to return a named logger.  * <p>This variant just dispatches straight to {@link #getLog(Class)}.  * @param clazz containing Class from which a log name will be derived  * @deprecated in favor of {@link #getLog(Class)}  */ @Deprecated public Log getInstance(Class<?> clazz) {     return getLog(clazz). }
true;public;1;4;/**  * Convenience method to return a named logger.  * <p>This variant just dispatches straight to {@link #getLog(String)}.  * @param name logical name of the <code>Log</code> instance to be returned  * @deprecated in favor of {@link #getLog(String)}  */ ;/**  * Convenience method to return a named logger.  * <p>This variant just dispatches straight to {@link #getLog(String)}.  * @param name logical name of the <code>Log</code> instance to be returned  * @deprecated in favor of {@link #getLog(String)}  */ @Deprecated public Log getInstance(String name) {     return getLog(name). }
