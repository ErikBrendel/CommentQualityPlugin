# id;timestamp;commentText;codeText;commentWords;codeWords
LogFactory -> public static Log getLog(Class<?> clazz);1493836145;Convenience method to return a named logger._@param clazz containing Class from which a log name will be derived;public static Log getLog(Class<?> clazz) {_		return getLog(clazz.getName())__	};convenience,method,to,return,a,named,logger,param,clazz,containing,class,from,which,a,log,name,will,be,derived;public,static,log,get,log,class,clazz,return,get,log,clazz,get,name
LogFactory -> public static Log getLog(Class<?> clazz);1505771864;Convenience method to return a named logger._@param clazz containing Class from which a log name will be derived;public static Log getLog(Class<?> clazz) {_		return getLog(clazz.getName())__	};convenience,method,to,return,a,named,logger,param,clazz,containing,class,from,which,a,log,name,will,be,derived;public,static,log,get,log,class,clazz,return,get,log,clazz,get,name
LogFactory -> public static Log getLog(Class<?> clazz);1511381619;Convenience method to return a named logger._@param clazz containing Class from which a log name will be derived;public static Log getLog(Class<?> clazz) {_		return getLog(clazz.getName())__	};convenience,method,to,return,a,named,logger,param,clazz,containing,class,from,which,a,log,name,will,be,derived;public,static,log,get,log,class,clazz,return,get,log,clazz,get,name
LogFactory -> public static Log getLog(Class<?> clazz);1519859718;Convenience method to return a named logger._@param clazz containing Class from which a log name will be derived;public static Log getLog(Class<?> clazz) {_		return getLog(clazz.getName())__	};convenience,method,to,return,a,named,logger,param,clazz,containing,class,from,which,a,log,name,will,be,derived;public,static,log,get,log,class,clazz,return,get,log,clazz,get,name
LogFactory -> public static Log getLog(Class<?> clazz);1530174524;Convenience method to return a named logger._@param clazz containing Class from which a log name will be derived;public static Log getLog(Class<?> clazz) {_		return getLog(clazz.getName())__	};convenience,method,to,return,a,named,logger,param,clazz,containing,class,from,which,a,log,name,will,be,derived;public,static,log,get,log,class,clazz,return,get,log,clazz,get,name
LogFactory -> public static Log getLog(Class<?> clazz);1530637032;Convenience method to return a named logger._@param clazz containing Class from which a log name will be derived;public static Log getLog(Class<?> clazz) {_		return getLog(clazz.getName())__	};convenience,method,to,return,a,named,logger,param,clazz,containing,class,from,which,a,log,name,will,be,derived;public,static,log,get,log,class,clazz,return,get,log,clazz,get,name
LogFactory -> public static Log getLog(Class<?> clazz);1532520878;Convenience method to return a named logger._@param clazz containing Class from which a log name will be derived;public static Log getLog(Class<?> clazz) {_		return getLog(clazz.getName())__	};convenience,method,to,return,a,named,logger,param,clazz,containing,class,from,which,a,log,name,will,be,derived;public,static,log,get,log,class,clazz,return,get,log,clazz,get,name
LogFactory -> public static Log getLog(Class<?> clazz);1547461696;Convenience method to return a named logger._@param clazz containing Class from which a log name will be derived;public static Log getLog(Class<?> clazz) {_		return getLog(clazz.getName())__	};convenience,method,to,return,a,named,logger,param,clazz,containing,class,from,which,a,log,name,will,be,derived;public,static,log,get,log,class,clazz,return,get,log,clazz,get,name
LogFactory -> @Deprecated 	public Log getInstance(String name);1493836145;Convenience method to return a named logger._<p>This variant just dispatches straight to {@link #getLog(String)}._@param name logical name of the <code>Log</code> instance to be returned_@deprecated in favor of {@link #getLog(String)};@Deprecated_	public Log getInstance(String name) {_		return getLog(name)__	};convenience,method,to,return,a,named,logger,p,this,variant,just,dispatches,straight,to,link,get,log,string,param,name,logical,name,of,the,code,log,code,instance,to,be,returned,deprecated,in,favor,of,link,get,log,string;deprecated,public,log,get,instance,string,name,return,get,log,name
LogFactory -> @Deprecated 	public Log getInstance(String name);1505771864;Convenience method to return a named logger._<p>This variant just dispatches straight to {@link #getLog(String)}._@param name logical name of the <code>Log</code> instance to be returned_@deprecated in favor of {@link #getLog(String)};@Deprecated_	public Log getInstance(String name) {_		return getLog(name)__	};convenience,method,to,return,a,named,logger,p,this,variant,just,dispatches,straight,to,link,get,log,string,param,name,logical,name,of,the,code,log,code,instance,to,be,returned,deprecated,in,favor,of,link,get,log,string;deprecated,public,log,get,instance,string,name,return,get,log,name
LogFactory -> @Deprecated 	public Log getInstance(String name);1511381619;Convenience method to return a named logger._<p>This variant just dispatches straight to {@link #getLog(String)}._@param name logical name of the <code>Log</code> instance to be returned_@deprecated in favor of {@link #getLog(String)};@Deprecated_	public Log getInstance(String name) {_		return getLog(name)__	};convenience,method,to,return,a,named,logger,p,this,variant,just,dispatches,straight,to,link,get,log,string,param,name,logical,name,of,the,code,log,code,instance,to,be,returned,deprecated,in,favor,of,link,get,log,string;deprecated,public,log,get,instance,string,name,return,get,log,name
LogFactory -> @Deprecated 	public Log getInstance(String name);1519859718;Convenience method to return a named logger._<p>This variant just dispatches straight to {@link #getLog(String)}._@param name logical name of the <code>Log</code> instance to be returned_@deprecated in favor of {@link #getLog(String)};@Deprecated_	public Log getInstance(String name) {_		return getLog(name)__	};convenience,method,to,return,a,named,logger,p,this,variant,just,dispatches,straight,to,link,get,log,string,param,name,logical,name,of,the,code,log,code,instance,to,be,returned,deprecated,in,favor,of,link,get,log,string;deprecated,public,log,get,instance,string,name,return,get,log,name
LogFactory -> @Deprecated 	public Log getInstance(String name);1530174524;Convenience method to return a named logger._<p>This variant just dispatches straight to {@link #getLog(String)}._@param name logical name of the <code>Log</code> instance to be returned_@deprecated in favor of {@link #getLog(String)};@Deprecated_	public Log getInstance(String name) {_		return getLog(name)__	};convenience,method,to,return,a,named,logger,p,this,variant,just,dispatches,straight,to,link,get,log,string,param,name,logical,name,of,the,code,log,code,instance,to,be,returned,deprecated,in,favor,of,link,get,log,string;deprecated,public,log,get,instance,string,name,return,get,log,name
LogFactory -> @Deprecated 	public Log getInstance(String name);1530637032;Convenience method to return a named logger._<p>This variant just dispatches straight to {@link #getLog(String)}._@param name logical name of the <code>Log</code> instance to be returned_@deprecated in favor of {@link #getLog(String)};@Deprecated_	public Log getInstance(String name) {_		return getLog(name)__	};convenience,method,to,return,a,named,logger,p,this,variant,just,dispatches,straight,to,link,get,log,string,param,name,logical,name,of,the,code,log,code,instance,to,be,returned,deprecated,in,favor,of,link,get,log,string;deprecated,public,log,get,instance,string,name,return,get,log,name
LogFactory -> @Deprecated 	public Log getInstance(String name);1532520878;Convenience method to return a named logger._<p>This variant just dispatches straight to {@link #getLog(String)}._@param name logical name of the <code>Log</code> instance to be returned_@deprecated in favor of {@link #getLog(String)};@Deprecated_	public Log getInstance(String name) {_		return getLog(name)__	};convenience,method,to,return,a,named,logger,p,this,variant,just,dispatches,straight,to,link,get,log,string,param,name,logical,name,of,the,code,log,code,instance,to,be,returned,deprecated,in,favor,of,link,get,log,string;deprecated,public,log,get,instance,string,name,return,get,log,name
LogFactory -> @Deprecated 	public Log getInstance(String name);1547461696;Convenience method to return a named logger._<p>This variant just dispatches straight to {@link #getLog(String)}._@param name logical name of the <code>Log</code> instance to be returned_@deprecated in favor of {@link #getLog(String)};@Deprecated_	public Log getInstance(String name) {_		return getLog(name)__	};convenience,method,to,return,a,named,logger,p,this,variant,just,dispatches,straight,to,link,get,log,string,param,name,logical,name,of,the,code,log,code,instance,to,be,returned,deprecated,in,favor,of,link,get,log,string;deprecated,public,log,get,instance,string,name,return,get,log,name
LogFactory -> public static Log getLog(String name);1493836145;Convenience method to return a named logger._@param name logical name of the <code>Log</code> instance to be returned;public static Log getLog(String name) {_		switch (logApi) {_			case LOG4J:_				return Log4jDelegate.createLog(name)__			case SLF4J_LAL:_				return Slf4jDelegate.createLocationAwareLog(name)__			case SLF4J:_				return Slf4jDelegate.createLog(name)__			default:_				_				_				_				_				_				_				return JavaUtilDelegate.createLog(name)__		}_	};convenience,method,to,return,a,named,logger,param,name,logical,name,of,the,code,log,code,instance,to,be,returned;public,static,log,get,log,string,name,switch,log,api,case,log4j,return,log4j,delegate,create,log,name,case,return,slf4j,delegate,create,location,aware,log,name,case,slf4j,return,slf4j,delegate,create,log,name,default,return,java,util,delegate,create,log,name
LogFactory -> public static Log getLog(String name);1505771864;Convenience method to return a named logger._@param name logical name of the <code>Log</code> instance to be returned;public static Log getLog(String name) {_		switch (logApi) {_			case LOG4J:_				return Log4jDelegate.createLog(name)__			case SLF4J_LAL:_				return Slf4jDelegate.createLocationAwareLog(name)__			case SLF4J:_				return Slf4jDelegate.createLog(name)__			default:_				_				_				_				_				_				_				return JavaUtilDelegate.createLog(name)__		}_	};convenience,method,to,return,a,named,logger,param,name,logical,name,of,the,code,log,code,instance,to,be,returned;public,static,log,get,log,string,name,switch,log,api,case,log4j,return,log4j,delegate,create,log,name,case,return,slf4j,delegate,create,location,aware,log,name,case,slf4j,return,slf4j,delegate,create,log,name,default,return,java,util,delegate,create,log,name
LogFactory -> public static Log getLog(String name);1511381619;Convenience method to return a named logger._@param name logical name of the <code>Log</code> instance to be returned;public static Log getLog(String name) {_		switch (logApi) {_			case LOG4J:_				return Log4jDelegate.createLog(name)__			case SLF4J_LAL:_				return Slf4jDelegate.createLocationAwareLog(name)__			case SLF4J:_				return Slf4jDelegate.createLog(name)__			default:_				_				_				_				_				_				_				return JavaUtilDelegate.createLog(name)__		}_	};convenience,method,to,return,a,named,logger,param,name,logical,name,of,the,code,log,code,instance,to,be,returned;public,static,log,get,log,string,name,switch,log,api,case,log4j,return,log4j,delegate,create,log,name,case,return,slf4j,delegate,create,location,aware,log,name,case,slf4j,return,slf4j,delegate,create,log,name,default,return,java,util,delegate,create,log,name
LogFactory -> public static Log getLog(String name);1519859718;Convenience method to return a named logger._@param name logical name of the <code>Log</code> instance to be returned;public static Log getLog(String name) {_		switch (logApi) {_			case LOG4J:_				return Log4jDelegate.createLog(name)__			case SLF4J_LAL:_				return Slf4jDelegate.createLocationAwareLog(name)__			case SLF4J:_				return Slf4jDelegate.createLog(name)__			default:_				_				_				_				_				_				_				return JavaUtilDelegate.createLog(name)__		}_	};convenience,method,to,return,a,named,logger,param,name,logical,name,of,the,code,log,code,instance,to,be,returned;public,static,log,get,log,string,name,switch,log,api,case,log4j,return,log4j,delegate,create,log,name,case,return,slf4j,delegate,create,location,aware,log,name,case,slf4j,return,slf4j,delegate,create,log,name,default,return,java,util,delegate,create,log,name
LogFactory -> public static Log getLog(String name);1530174524;Convenience method to return a named logger._@param name logical name of the <code>Log</code> instance to be returned;public static Log getLog(String name) {_		switch (logApi) {_			case LOG4J:_				return Log4jDelegate.createLog(name)__			case SLF4J_LAL:_				return Slf4jDelegate.createLocationAwareLog(name)__			case SLF4J:_				return Slf4jDelegate.createLog(name)__			default:_				_				_				_				_				_				_				return JavaUtilDelegate.createLog(name)__		}_	};convenience,method,to,return,a,named,logger,param,name,logical,name,of,the,code,log,code,instance,to,be,returned;public,static,log,get,log,string,name,switch,log,api,case,log4j,return,log4j,delegate,create,log,name,case,return,slf4j,delegate,create,location,aware,log,name,case,slf4j,return,slf4j,delegate,create,log,name,default,return,java,util,delegate,create,log,name
LogFactory -> public static Log getLog(String name);1530637032;Convenience method to return a named logger._@param name logical name of the <code>Log</code> instance to be returned;public static Log getLog(String name) {_		return LogDelegate.createLog(name)__	};convenience,method,to,return,a,named,logger,param,name,logical,name,of,the,code,log,code,instance,to,be,returned;public,static,log,get,log,string,name,return,log,delegate,create,log,name
LogFactory -> public static Log getLog(String name);1532520878;Convenience method to return a named logger._@param name logical name of the <code>Log</code> instance to be returned;public static Log getLog(String name) {_		return LogAdapter.createLog(name)__	};convenience,method,to,return,a,named,logger,param,name,logical,name,of,the,code,log,code,instance,to,be,returned;public,static,log,get,log,string,name,return,log,adapter,create,log,name
LogFactory -> public static Log getLog(String name);1547461696;Convenience method to return a named logger._@param name logical name of the <code>Log</code> instance to be returned;public static Log getLog(String name) {_		return LogAdapter.createLog(name)__	};convenience,method,to,return,a,named,logger,param,name,logical,name,of,the,code,log,code,instance,to,be,returned;public,static,log,get,log,string,name,return,log,adapter,create,log,name
LogFactory -> @Deprecated 	public static LogFactory getFactory();1493836145;This method only exists for compatibility with unusual Commons Logging API_usage like e.g. {@code LogFactory.getFactory().getInstance(Class/String)}._@see #getInstance(Class)_@see #getInstance(String)_@deprecated in favor of {@link #getLog(Class)}/{@link #getLog(String)};@Deprecated_	public static LogFactory getFactory() {_		return new LogFactory() {}__	};this,method,only,exists,for,compatibility,with,unusual,commons,logging,api,usage,like,e,g,code,log,factory,get,factory,get,instance,class,string,see,get,instance,class,see,get,instance,string,deprecated,in,favor,of,link,get,log,class,link,get,log,string;deprecated,public,static,log,factory,get,factory,return,new,log,factory
LogFactory -> @Deprecated 	public static LogFactory getFactory();1505771864;This method only exists for compatibility with unusual Commons Logging API_usage like e.g. {@code LogFactory.getFactory().getInstance(Class/String)}._@see #getInstance(Class)_@see #getInstance(String)_@deprecated in favor of {@link #getLog(Class)}/{@link #getLog(String)};@Deprecated_	public static LogFactory getFactory() {_		return new LogFactory() {}__	};this,method,only,exists,for,compatibility,with,unusual,commons,logging,api,usage,like,e,g,code,log,factory,get,factory,get,instance,class,string,see,get,instance,class,see,get,instance,string,deprecated,in,favor,of,link,get,log,class,link,get,log,string;deprecated,public,static,log,factory,get,factory,return,new,log,factory
LogFactory -> @Deprecated 	public static LogFactory getFactory();1511381619;This method only exists for compatibility with unusual Commons Logging API_usage like e.g. {@code LogFactory.getFactory().getInstance(Class/String)}._@see #getInstance(Class)_@see #getInstance(String)_@deprecated in favor of {@link #getLog(Class)}/{@link #getLog(String)};@Deprecated_	public static LogFactory getFactory() {_		return new LogFactory() {}__	};this,method,only,exists,for,compatibility,with,unusual,commons,logging,api,usage,like,e,g,code,log,factory,get,factory,get,instance,class,string,see,get,instance,class,see,get,instance,string,deprecated,in,favor,of,link,get,log,class,link,get,log,string;deprecated,public,static,log,factory,get,factory,return,new,log,factory
LogFactory -> @Deprecated 	public static LogFactory getFactory();1519859718;This method only exists for compatibility with unusual Commons Logging API_usage like e.g. {@code LogFactory.getFactory().getInstance(Class/String)}._@see #getInstance(Class)_@see #getInstance(String)_@deprecated in favor of {@link #getLog(Class)}/{@link #getLog(String)};@Deprecated_	public static LogFactory getFactory() {_		return new LogFactory() {}__	};this,method,only,exists,for,compatibility,with,unusual,commons,logging,api,usage,like,e,g,code,log,factory,get,factory,get,instance,class,string,see,get,instance,class,see,get,instance,string,deprecated,in,favor,of,link,get,log,class,link,get,log,string;deprecated,public,static,log,factory,get,factory,return,new,log,factory
LogFactory -> @Deprecated 	public static LogFactory getFactory();1530174524;This method only exists for compatibility with unusual Commons Logging API_usage like e.g. {@code LogFactory.getFactory().getInstance(Class/String)}._@see #getInstance(Class)_@see #getInstance(String)_@deprecated in favor of {@link #getLog(Class)}/{@link #getLog(String)};@Deprecated_	public static LogFactory getFactory() {_		return new LogFactory() {}__	};this,method,only,exists,for,compatibility,with,unusual,commons,logging,api,usage,like,e,g,code,log,factory,get,factory,get,instance,class,string,see,get,instance,class,see,get,instance,string,deprecated,in,favor,of,link,get,log,class,link,get,log,string;deprecated,public,static,log,factory,get,factory,return,new,log,factory
LogFactory -> @Deprecated 	public static LogFactory getFactory();1530637032;This method only exists for compatibility with unusual Commons Logging API_usage like e.g. {@code LogFactory.getFactory().getInstance(Class/String)}._@see #getInstance(Class)_@see #getInstance(String)_@deprecated in favor of {@link #getLog(Class)}/{@link #getLog(String)};@Deprecated_	public static LogFactory getFactory() {_		return new LogFactory() {}__	};this,method,only,exists,for,compatibility,with,unusual,commons,logging,api,usage,like,e,g,code,log,factory,get,factory,get,instance,class,string,see,get,instance,class,see,get,instance,string,deprecated,in,favor,of,link,get,log,class,link,get,log,string;deprecated,public,static,log,factory,get,factory,return,new,log,factory
LogFactory -> @Deprecated 	public static LogFactory getFactory();1532520878;This method only exists for compatibility with unusual Commons Logging API_usage like e.g. {@code LogFactory.getFactory().getInstance(Class/String)}._@see #getInstance(Class)_@see #getInstance(String)_@deprecated in favor of {@link #getLog(Class)}/{@link #getLog(String)};@Deprecated_	public static LogFactory getFactory() {_		return new LogFactory() {}__	};this,method,only,exists,for,compatibility,with,unusual,commons,logging,api,usage,like,e,g,code,log,factory,get,factory,get,instance,class,string,see,get,instance,class,see,get,instance,string,deprecated,in,favor,of,link,get,log,class,link,get,log,string;deprecated,public,static,log,factory,get,factory,return,new,log,factory
LogFactory -> @Deprecated 	public static LogFactory getFactory();1547461696;This method only exists for compatibility with unusual Commons Logging API_usage like e.g. {@code LogFactory.getFactory().getInstance(Class/String)}._@see #getInstance(Class)_@see #getInstance(String)_@deprecated in favor of {@link #getLog(Class)}/{@link #getLog(String)};@Deprecated_	public static LogFactory getFactory() {_		return new LogFactory() {}__	};this,method,only,exists,for,compatibility,with,unusual,commons,logging,api,usage,like,e,g,code,log,factory,get,factory,get,instance,class,string,see,get,instance,class,see,get,instance,string,deprecated,in,favor,of,link,get,log,class,link,get,log,string;deprecated,public,static,log,factory,get,factory,return,new,log,factory
LogFactory -> @Deprecated 	public Log getInstance(Class<?> clazz);1493836145;Convenience method to return a named logger._<p>This variant just dispatches straight to {@link #getLog(Class)}._@param clazz containing Class from which a log name will be derived_@deprecated in favor of {@link #getLog(Class)};@Deprecated_	public Log getInstance(Class<?> clazz) {_		return getLog(clazz)__	};convenience,method,to,return,a,named,logger,p,this,variant,just,dispatches,straight,to,link,get,log,class,param,clazz,containing,class,from,which,a,log,name,will,be,derived,deprecated,in,favor,of,link,get,log,class;deprecated,public,log,get,instance,class,clazz,return,get,log,clazz
LogFactory -> @Deprecated 	public Log getInstance(Class<?> clazz);1505771864;Convenience method to return a named logger._<p>This variant just dispatches straight to {@link #getLog(Class)}._@param clazz containing Class from which a log name will be derived_@deprecated in favor of {@link #getLog(Class)};@Deprecated_	public Log getInstance(Class<?> clazz) {_		return getLog(clazz)__	};convenience,method,to,return,a,named,logger,p,this,variant,just,dispatches,straight,to,link,get,log,class,param,clazz,containing,class,from,which,a,log,name,will,be,derived,deprecated,in,favor,of,link,get,log,class;deprecated,public,log,get,instance,class,clazz,return,get,log,clazz
LogFactory -> @Deprecated 	public Log getInstance(Class<?> clazz);1511381619;Convenience method to return a named logger._<p>This variant just dispatches straight to {@link #getLog(Class)}._@param clazz containing Class from which a log name will be derived_@deprecated in favor of {@link #getLog(Class)};@Deprecated_	public Log getInstance(Class<?> clazz) {_		return getLog(clazz)__	};convenience,method,to,return,a,named,logger,p,this,variant,just,dispatches,straight,to,link,get,log,class,param,clazz,containing,class,from,which,a,log,name,will,be,derived,deprecated,in,favor,of,link,get,log,class;deprecated,public,log,get,instance,class,clazz,return,get,log,clazz
LogFactory -> @Deprecated 	public Log getInstance(Class<?> clazz);1519859718;Convenience method to return a named logger._<p>This variant just dispatches straight to {@link #getLog(Class)}._@param clazz containing Class from which a log name will be derived_@deprecated in favor of {@link #getLog(Class)};@Deprecated_	public Log getInstance(Class<?> clazz) {_		return getLog(clazz)__	};convenience,method,to,return,a,named,logger,p,this,variant,just,dispatches,straight,to,link,get,log,class,param,clazz,containing,class,from,which,a,log,name,will,be,derived,deprecated,in,favor,of,link,get,log,class;deprecated,public,log,get,instance,class,clazz,return,get,log,clazz
LogFactory -> @Deprecated 	public Log getInstance(Class<?> clazz);1530174524;Convenience method to return a named logger._<p>This variant just dispatches straight to {@link #getLog(Class)}._@param clazz containing Class from which a log name will be derived_@deprecated in favor of {@link #getLog(Class)};@Deprecated_	public Log getInstance(Class<?> clazz) {_		return getLog(clazz)__	};convenience,method,to,return,a,named,logger,p,this,variant,just,dispatches,straight,to,link,get,log,class,param,clazz,containing,class,from,which,a,log,name,will,be,derived,deprecated,in,favor,of,link,get,log,class;deprecated,public,log,get,instance,class,clazz,return,get,log,clazz
LogFactory -> @Deprecated 	public Log getInstance(Class<?> clazz);1530637032;Convenience method to return a named logger._<p>This variant just dispatches straight to {@link #getLog(Class)}._@param clazz containing Class from which a log name will be derived_@deprecated in favor of {@link #getLog(Class)};@Deprecated_	public Log getInstance(Class<?> clazz) {_		return getLog(clazz)__	};convenience,method,to,return,a,named,logger,p,this,variant,just,dispatches,straight,to,link,get,log,class,param,clazz,containing,class,from,which,a,log,name,will,be,derived,deprecated,in,favor,of,link,get,log,class;deprecated,public,log,get,instance,class,clazz,return,get,log,clazz
LogFactory -> @Deprecated 	public Log getInstance(Class<?> clazz);1532520878;Convenience method to return a named logger._<p>This variant just dispatches straight to {@link #getLog(Class)}._@param clazz containing Class from which a log name will be derived_@deprecated in favor of {@link #getLog(Class)};@Deprecated_	public Log getInstance(Class<?> clazz) {_		return getLog(clazz)__	};convenience,method,to,return,a,named,logger,p,this,variant,just,dispatches,straight,to,link,get,log,class,param,clazz,containing,class,from,which,a,log,name,will,be,derived,deprecated,in,favor,of,link,get,log,class;deprecated,public,log,get,instance,class,clazz,return,get,log,clazz
LogFactory -> @Deprecated 	public Log getInstance(Class<?> clazz);1547461696;Convenience method to return a named logger._<p>This variant just dispatches straight to {@link #getLog(Class)}._@param clazz containing Class from which a log name will be derived_@deprecated in favor of {@link #getLog(Class)};@Deprecated_	public Log getInstance(Class<?> clazz) {_		return getLog(clazz)__	};convenience,method,to,return,a,named,logger,p,this,variant,just,dispatches,straight,to,link,get,log,class,param,clazz,containing,class,from,which,a,log,name,will,be,derived,deprecated,in,favor,of,link,get,log,class;deprecated,public,log,get,instance,class,clazz,return,get,log,clazz
