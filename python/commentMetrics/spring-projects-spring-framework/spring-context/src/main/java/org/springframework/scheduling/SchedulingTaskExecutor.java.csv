# id;timestamp;commentText;codeText;commentWords;codeWords
SchedulingTaskExecutor -> boolean prefersShortLivedTasks()_;1328020251;Does this <code>TaskExecutor</code> prefer short-lived tasks over_long-lived tasks?_<p>A <code>SchedulingTaskExecutor</code> implementation can indicate_whether it prefers submitted tasks to perform as little work as they_can within a single task execution. For example, submitted tasks_might break a repeated loop into individual subtasks which submit a_follow-up task afterwards (if feasible)._<p>This should be considered a hint. Of course <code>TaskExecutor</code>_clients are free to ignore this flag and hence the_<code>SchedulingTaskExecutor</code> interface overall. However, thread_pools will usually indicated a preference for short-lived tasks, to be_able to perform more fine-grained scheduling._@return <code>true</code> if this <code>TaskExecutor</code> prefers_short-lived tasks;boolean prefersShortLivedTasks()_;does,this,code,task,executor,code,prefer,short,lived,tasks,over,long,lived,tasks,p,a,code,scheduling,task,executor,code,implementation,can,indicate,whether,it,prefers,submitted,tasks,to,perform,as,little,work,as,they,can,within,a,single,task,execution,for,example,submitted,tasks,might,break,a,repeated,loop,into,individual,subtasks,which,submit,a,follow,up,task,afterwards,if,feasible,p,this,should,be,considered,a,hint,of,course,code,task,executor,code,clients,are,free,to,ignore,this,flag,and,hence,the,code,scheduling,task,executor,code,interface,overall,however,thread,pools,will,usually,indicated,a,preference,for,short,lived,tasks,to,be,able,to,perform,more,fine,grained,scheduling,return,code,true,code,if,this,code,task,executor,code,prefers,short,lived,tasks;boolean,prefers,short,lived,tasks
SchedulingTaskExecutor -> boolean prefersShortLivedTasks()_;1356735495;Does this {@code TaskExecutor} prefer short-lived tasks over_long-lived tasks?_<p>A {@code SchedulingTaskExecutor} implementation can indicate_whether it prefers submitted tasks to perform as little work as they_can within a single task execution. For example, submitted tasks_might break a repeated loop into individual subtasks which submit a_follow-up task afterwards (if feasible)._<p>This should be considered a hint. Of course {@code TaskExecutor}_clients are free to ignore this flag and hence the_{@code SchedulingTaskExecutor} interface overall. However, thread_pools will usually indicated a preference for short-lived tasks, to be_able to perform more fine-grained scheduling._@return {@code true} if this {@code TaskExecutor} prefers_short-lived tasks;boolean prefersShortLivedTasks()_;does,this,code,task,executor,prefer,short,lived,tasks,over,long,lived,tasks,p,a,code,scheduling,task,executor,implementation,can,indicate,whether,it,prefers,submitted,tasks,to,perform,as,little,work,as,they,can,within,a,single,task,execution,for,example,submitted,tasks,might,break,a,repeated,loop,into,individual,subtasks,which,submit,a,follow,up,task,afterwards,if,feasible,p,this,should,be,considered,a,hint,of,course,code,task,executor,clients,are,free,to,ignore,this,flag,and,hence,the,code,scheduling,task,executor,interface,overall,however,thread,pools,will,usually,indicated,a,preference,for,short,lived,tasks,to,be,able,to,perform,more,fine,grained,scheduling,return,code,true,if,this,code,task,executor,prefers,short,lived,tasks;boolean,prefers,short,lived,tasks
SchedulingTaskExecutor -> boolean prefersShortLivedTasks()_;1388782627;Does this {@code TaskExecutor} prefer short-lived tasks over_long-lived tasks?_<p>A {@code SchedulingTaskExecutor} implementation can indicate_whether it prefers submitted tasks to perform as little work as they_can within a single task execution. For example, submitted tasks_might break a repeated loop into individual subtasks which submit a_follow-up task afterwards (if feasible)._<p>This should be considered a hint. Of course {@code TaskExecutor}_clients are free to ignore this flag and hence the_{@code SchedulingTaskExecutor} interface overall. However, thread_pools will usually indicated a preference for short-lived tasks, to be_able to perform more fine-grained scheduling._@return {@code true} if this {@code TaskExecutor} prefers_short-lived tasks;boolean prefersShortLivedTasks()_;does,this,code,task,executor,prefer,short,lived,tasks,over,long,lived,tasks,p,a,code,scheduling,task,executor,implementation,can,indicate,whether,it,prefers,submitted,tasks,to,perform,as,little,work,as,they,can,within,a,single,task,execution,for,example,submitted,tasks,might,break,a,repeated,loop,into,individual,subtasks,which,submit,a,follow,up,task,afterwards,if,feasible,p,this,should,be,considered,a,hint,of,course,code,task,executor,clients,are,free,to,ignore,this,flag,and,hence,the,code,scheduling,task,executor,interface,overall,however,thread,pools,will,usually,indicated,a,preference,for,short,lived,tasks,to,be,able,to,perform,more,fine,grained,scheduling,return,code,true,if,this,code,task,executor,prefers,short,lived,tasks;boolean,prefers,short,lived,tasks
