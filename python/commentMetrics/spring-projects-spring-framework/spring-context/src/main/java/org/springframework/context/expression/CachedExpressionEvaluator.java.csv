# id;timestamp;commentText;codeText;commentWords;codeWords
CachedExpressionEvaluator -> protected ParameterNameDiscoverer getParameterNameDiscoverer();1461878203;Return a shared parameter name discoverer which caches data internally._@since 4.3;protected ParameterNameDiscoverer getParameterNameDiscoverer() {_		return this.parameterNameDiscoverer__	};return,a,shared,parameter,name,discoverer,which,caches,data,internally,since,4,3;protected,parameter,name,discoverer,get,parameter,name,discoverer,return,this,parameter,name,discoverer
CachedExpressionEvaluator -> protected ParameterNameDiscoverer getParameterNameDiscoverer();1496837955;Return a shared parameter name discoverer which caches data internally._@since 4.3;protected ParameterNameDiscoverer getParameterNameDiscoverer() {_		return this.parameterNameDiscoverer__	};return,a,shared,parameter,name,discoverer,which,caches,data,internally,since,4,3;protected,parameter,name,discoverer,get,parameter,name,discoverer,return,this,parameter,name,discoverer
CachedExpressionEvaluator -> protected ParameterNameDiscoverer getParameterNameDiscoverer();1498780456;Return a shared parameter name discoverer which caches data internally._@since 4.3;protected ParameterNameDiscoverer getParameterNameDiscoverer() {_		return this.parameterNameDiscoverer__	};return,a,shared,parameter,name,discoverer,which,caches,data,internally,since,4,3;protected,parameter,name,discoverer,get,parameter,name,discoverer,return,this,parameter,name,discoverer
CachedExpressionEvaluator -> protected ParameterNameDiscoverer getParameterNameDiscoverer();1530174524;Return a shared parameter name discoverer which caches data internally._@since 4.3;protected ParameterNameDiscoverer getParameterNameDiscoverer() {_		return this.parameterNameDiscoverer__	};return,a,shared,parameter,name,discoverer,which,caches,data,internally,since,4,3;protected,parameter,name,discoverer,get,parameter,name,discoverer,return,this,parameter,name,discoverer
CachedExpressionEvaluator -> protected SpelExpressionParser getParser();1422279854;Return the {@link SpelExpressionParser} to use.;protected SpelExpressionParser getParser() {_		return this.parser__	};return,the,link,spel,expression,parser,to,use;protected,spel,expression,parser,get,parser,return,this,parser
CachedExpressionEvaluator -> protected SpelExpressionParser getParser();1458944925;Return the {@link SpelExpressionParser} to use.;protected SpelExpressionParser getParser() {_		return this.parser__	};return,the,link,spel,expression,parser,to,use;protected,spel,expression,parser,get,parser,return,this,parser
CachedExpressionEvaluator -> protected SpelExpressionParser getParser();1459339984;Return the {@link SpelExpressionParser} to use.;protected SpelExpressionParser getParser() {_		return this.parser__	};return,the,link,spel,expression,parser,to,use;protected,spel,expression,parser,get,parser,return,this,parser
CachedExpressionEvaluator -> protected SpelExpressionParser getParser();1461878203;Return the {@link SpelExpressionParser} to use.;protected SpelExpressionParser getParser() {_		return this.parser__	};return,the,link,spel,expression,parser,to,use;protected,spel,expression,parser,get,parser,return,this,parser
CachedExpressionEvaluator -> protected SpelExpressionParser getParser();1496837955;Return the {@link SpelExpressionParser} to use.;protected SpelExpressionParser getParser() {_		return this.parser__	};return,the,link,spel,expression,parser,to,use;protected,spel,expression,parser,get,parser,return,this,parser
CachedExpressionEvaluator -> protected SpelExpressionParser getParser();1498780456;Return the {@link SpelExpressionParser} to use.;protected SpelExpressionParser getParser() {_		return this.parser__	};return,the,link,spel,expression,parser,to,use;protected,spel,expression,parser,get,parser,return,this,parser
CachedExpressionEvaluator -> protected SpelExpressionParser getParser();1530174524;Return the {@link SpelExpressionParser} to use.;protected SpelExpressionParser getParser() {_		return this.parser__	};return,the,link,spel,expression,parser,to,use;protected,spel,expression,parser,get,parser,return,this,parser
CachedExpressionEvaluator -> protected Expression getExpression(Map<ExpressionKey, Expression> cache, 			AnnotatedElementKey elementKey, String expression);1422279854;Return the {@link Expression} for the specified SpEL value_<p>Parse the expression if it hasn't been already._@param cache the cache to use_@param elementKey the element on which the expression is defined_@param expression the expression to parse;protected Expression getExpression(Map<ExpressionKey, Expression> cache,_			AnnotatedElementKey elementKey, String expression) {_		ExpressionKey expressionKey = createKey(elementKey, expression)__		Expression expr = cache.get(expressionKey)__		if (expr == null) {_			expr = getParser().parseExpression(expression)__			cache.put(expressionKey, expr)__		}_		return expr__	};return,the,link,expression,for,the,specified,sp,el,value,p,parse,the,expression,if,it,hasn,t,been,already,param,cache,the,cache,to,use,param,element,key,the,element,on,which,the,expression,is,defined,param,expression,the,expression,to,parse;protected,expression,get,expression,map,expression,key,expression,cache,annotated,element,key,element,key,string,expression,expression,key,expression,key,create,key,element,key,expression,expression,expr,cache,get,expression,key,if,expr,null,expr,get,parser,parse,expression,expression,cache,put,expression,key,expr,return,expr
CachedExpressionEvaluator -> protected Expression getExpression(Map<ExpressionKey, Expression> cache, 			AnnotatedElementKey elementKey, String expression);1458944925;Return the {@link Expression} for the specified SpEL value_<p>Parse the expression if it hasn't been already._@param cache the cache to use_@param elementKey the element on which the expression is defined_@param expression the expression to parse;protected Expression getExpression(Map<ExpressionKey, Expression> cache,_			AnnotatedElementKey elementKey, String expression) {__		ExpressionKey expressionKey = createKey(elementKey, expression)__		Expression expr = cache.get(expressionKey)__		if (expr == null) {_			expr = getParser().parseExpression(expression)__			cache.put(expressionKey, expr)__		}_		return expr__	};return,the,link,expression,for,the,specified,sp,el,value,p,parse,the,expression,if,it,hasn,t,been,already,param,cache,the,cache,to,use,param,element,key,the,element,on,which,the,expression,is,defined,param,expression,the,expression,to,parse;protected,expression,get,expression,map,expression,key,expression,cache,annotated,element,key,element,key,string,expression,expression,key,expression,key,create,key,element,key,expression,expression,expr,cache,get,expression,key,if,expr,null,expr,get,parser,parse,expression,expression,cache,put,expression,key,expr,return,expr
CachedExpressionEvaluator -> protected Expression getExpression(Map<ExpressionKey, Expression> cache, 			AnnotatedElementKey elementKey, String expression);1459339984;Return the {@link Expression} for the specified SpEL value_<p>Parse the expression if it hasn't been already._@param cache the cache to use_@param elementKey the element on which the expression is defined_@param expression the expression to parse;protected Expression getExpression(Map<ExpressionKey, Expression> cache,_			AnnotatedElementKey elementKey, String expression) {__		ExpressionKey expressionKey = createKey(elementKey, expression)__		Expression expr = cache.get(expressionKey)__		if (expr == null) {_			expr = getParser().parseExpression(expression)__			cache.put(expressionKey, expr)__		}_		return expr__	};return,the,link,expression,for,the,specified,sp,el,value,p,parse,the,expression,if,it,hasn,t,been,already,param,cache,the,cache,to,use,param,element,key,the,element,on,which,the,expression,is,defined,param,expression,the,expression,to,parse;protected,expression,get,expression,map,expression,key,expression,cache,annotated,element,key,element,key,string,expression,expression,key,expression,key,create,key,element,key,expression,expression,expr,cache,get,expression,key,if,expr,null,expr,get,parser,parse,expression,expression,cache,put,expression,key,expr,return,expr
CachedExpressionEvaluator -> protected Expression getExpression(Map<ExpressionKey, Expression> cache, 			AnnotatedElementKey elementKey, String expression);1461878203;Return the {@link Expression} for the specified SpEL value_<p>Parse the expression if it hasn't been already._@param cache the cache to use_@param elementKey the element on which the expression is defined_@param expression the expression to parse;protected Expression getExpression(Map<ExpressionKey, Expression> cache,_			AnnotatedElementKey elementKey, String expression) {__		ExpressionKey expressionKey = createKey(elementKey, expression)__		Expression expr = cache.get(expressionKey)__		if (expr == null) {_			expr = getParser().parseExpression(expression)__			cache.put(expressionKey, expr)__		}_		return expr__	};return,the,link,expression,for,the,specified,sp,el,value,p,parse,the,expression,if,it,hasn,t,been,already,param,cache,the,cache,to,use,param,element,key,the,element,on,which,the,expression,is,defined,param,expression,the,expression,to,parse;protected,expression,get,expression,map,expression,key,expression,cache,annotated,element,key,element,key,string,expression,expression,key,expression,key,create,key,element,key,expression,expression,expr,cache,get,expression,key,if,expr,null,expr,get,parser,parse,expression,expression,cache,put,expression,key,expr,return,expr
CachedExpressionEvaluator -> protected Expression getExpression(Map<ExpressionKey, Expression> cache, 			AnnotatedElementKey elementKey, String expression);1496837955;Return the {@link Expression} for the specified SpEL value_<p>Parse the expression if it hasn't been already._@param cache the cache to use_@param elementKey the element on which the expression is defined_@param expression the expression to parse;protected Expression getExpression(Map<ExpressionKey, Expression> cache,_			AnnotatedElementKey elementKey, String expression) {__		ExpressionKey expressionKey = createKey(elementKey, expression)__		Expression expr = cache.get(expressionKey)__		if (expr == null) {_			expr = getParser().parseExpression(expression)__			cache.put(expressionKey, expr)__		}_		return expr__	};return,the,link,expression,for,the,specified,sp,el,value,p,parse,the,expression,if,it,hasn,t,been,already,param,cache,the,cache,to,use,param,element,key,the,element,on,which,the,expression,is,defined,param,expression,the,expression,to,parse;protected,expression,get,expression,map,expression,key,expression,cache,annotated,element,key,element,key,string,expression,expression,key,expression,key,create,key,element,key,expression,expression,expr,cache,get,expression,key,if,expr,null,expr,get,parser,parse,expression,expression,cache,put,expression,key,expr,return,expr
CachedExpressionEvaluator -> protected Expression getExpression(Map<ExpressionKey, Expression> cache, 			AnnotatedElementKey elementKey, String expression);1498780456;Return the {@link Expression} for the specified SpEL value_<p>Parse the expression if it hasn't been already._@param cache the cache to use_@param elementKey the element on which the expression is defined_@param expression the expression to parse;protected Expression getExpression(Map<ExpressionKey, Expression> cache,_			AnnotatedElementKey elementKey, String expression) {__		ExpressionKey expressionKey = createKey(elementKey, expression)__		Expression expr = cache.get(expressionKey)__		if (expr == null) {_			expr = getParser().parseExpression(expression)__			cache.put(expressionKey, expr)__		}_		return expr__	};return,the,link,expression,for,the,specified,sp,el,value,p,parse,the,expression,if,it,hasn,t,been,already,param,cache,the,cache,to,use,param,element,key,the,element,on,which,the,expression,is,defined,param,expression,the,expression,to,parse;protected,expression,get,expression,map,expression,key,expression,cache,annotated,element,key,element,key,string,expression,expression,key,expression,key,create,key,element,key,expression,expression,expr,cache,get,expression,key,if,expr,null,expr,get,parser,parse,expression,expression,cache,put,expression,key,expr,return,expr
CachedExpressionEvaluator -> protected Expression getExpression(Map<ExpressionKey, Expression> cache, 			AnnotatedElementKey elementKey, String expression);1530174524;Return the {@link Expression} for the specified SpEL value_<p>Parse the expression if it hasn't been already._@param cache the cache to use_@param elementKey the element on which the expression is defined_@param expression the expression to parse;protected Expression getExpression(Map<ExpressionKey, Expression> cache,_			AnnotatedElementKey elementKey, String expression) {__		ExpressionKey expressionKey = createKey(elementKey, expression)__		Expression expr = cache.get(expressionKey)__		if (expr == null) {_			expr = getParser().parseExpression(expression)__			cache.put(expressionKey, expr)__		}_		return expr__	};return,the,link,expression,for,the,specified,sp,el,value,p,parse,the,expression,if,it,hasn,t,been,already,param,cache,the,cache,to,use,param,element,key,the,element,on,which,the,expression,is,defined,param,expression,the,expression,to,parse;protected,expression,get,expression,map,expression,key,expression,cache,annotated,element,key,element,key,string,expression,expression,key,expression,key,create,key,element,key,expression,expression,expr,cache,get,expression,key,if,expr,null,expr,get,parser,parse,expression,expression,cache,put,expression,key,expr,return,expr
CachedExpressionEvaluator -> protected CachedExpressionEvaluator(SpelExpressionParser parser);1422279854;Create a new instance with the specified {@link SpelExpressionParser}.;protected CachedExpressionEvaluator(SpelExpressionParser parser) {_		Assert.notNull(parser, "Parser must not be null")__		this.parser = parser__	};create,a,new,instance,with,the,specified,link,spel,expression,parser;protected,cached,expression,evaluator,spel,expression,parser,parser,assert,not,null,parser,parser,must,not,be,null,this,parser,parser
CachedExpressionEvaluator -> protected CachedExpressionEvaluator(SpelExpressionParser parser);1458944925;Create a new instance with the specified {@link SpelExpressionParser}.;protected CachedExpressionEvaluator(SpelExpressionParser parser) {_		Assert.notNull(parser, "Parser must not be null")__		this.parser = parser__	};create,a,new,instance,with,the,specified,link,spel,expression,parser;protected,cached,expression,evaluator,spel,expression,parser,parser,assert,not,null,parser,parser,must,not,be,null,this,parser,parser
CachedExpressionEvaluator -> protected CachedExpressionEvaluator(SpelExpressionParser parser);1459339984;Create a new instance with the specified {@link SpelExpressionParser}.;protected CachedExpressionEvaluator(SpelExpressionParser parser) {_		Assert.notNull(parser, "Parser must not be null")__		this.parser = parser__	};create,a,new,instance,with,the,specified,link,spel,expression,parser;protected,cached,expression,evaluator,spel,expression,parser,parser,assert,not,null,parser,parser,must,not,be,null,this,parser,parser
CachedExpressionEvaluator -> protected CachedExpressionEvaluator(SpelExpressionParser parser);1461878203;Create a new instance with the specified {@link SpelExpressionParser}.;protected CachedExpressionEvaluator(SpelExpressionParser parser) {_		Assert.notNull(parser, "SpelExpressionParser must not be null")__		this.parser = parser__	};create,a,new,instance,with,the,specified,link,spel,expression,parser;protected,cached,expression,evaluator,spel,expression,parser,parser,assert,not,null,parser,spel,expression,parser,must,not,be,null,this,parser,parser
CachedExpressionEvaluator -> protected CachedExpressionEvaluator(SpelExpressionParser parser);1496837955;Create a new instance with the specified {@link SpelExpressionParser}.;protected CachedExpressionEvaluator(SpelExpressionParser parser) {_		Assert.notNull(parser, "SpelExpressionParser must not be null")__		this.parser = parser__	};create,a,new,instance,with,the,specified,link,spel,expression,parser;protected,cached,expression,evaluator,spel,expression,parser,parser,assert,not,null,parser,spel,expression,parser,must,not,be,null,this,parser,parser
CachedExpressionEvaluator -> protected CachedExpressionEvaluator(SpelExpressionParser parser);1498780456;Create a new instance with the specified {@link SpelExpressionParser}.;protected CachedExpressionEvaluator(SpelExpressionParser parser) {_		Assert.notNull(parser, "SpelExpressionParser must not be null")__		this.parser = parser__	};create,a,new,instance,with,the,specified,link,spel,expression,parser;protected,cached,expression,evaluator,spel,expression,parser,parser,assert,not,null,parser,spel,expression,parser,must,not,be,null,this,parser,parser
CachedExpressionEvaluator -> protected CachedExpressionEvaluator(SpelExpressionParser parser);1530174524;Create a new instance with the specified {@link SpelExpressionParser}.;protected CachedExpressionEvaluator(SpelExpressionParser parser) {_		Assert.notNull(parser, "SpelExpressionParser must not be null")__		this.parser = parser__	};create,a,new,instance,with,the,specified,link,spel,expression,parser;protected,cached,expression,evaluator,spel,expression,parser,parser,assert,not,null,parser,spel,expression,parser,must,not,be,null,this,parser,parser
CachedExpressionEvaluator -> protected CachedExpressionEvaluator();1422279854;Create a new instance with a default {@link SpelExpressionParser}.;protected CachedExpressionEvaluator() {_		this(new SpelExpressionParser())__	};create,a,new,instance,with,a,default,link,spel,expression,parser;protected,cached,expression,evaluator,this,new,spel,expression,parser
CachedExpressionEvaluator -> protected CachedExpressionEvaluator();1458944925;Create a new instance with a default {@link SpelExpressionParser}.;protected CachedExpressionEvaluator() {_		this(new SpelExpressionParser())__	};create,a,new,instance,with,a,default,link,spel,expression,parser;protected,cached,expression,evaluator,this,new,spel,expression,parser
CachedExpressionEvaluator -> protected CachedExpressionEvaluator();1459339984;Create a new instance with a default {@link SpelExpressionParser}.;protected CachedExpressionEvaluator() {_		this(new SpelExpressionParser())__	};create,a,new,instance,with,a,default,link,spel,expression,parser;protected,cached,expression,evaluator,this,new,spel,expression,parser
CachedExpressionEvaluator -> protected CachedExpressionEvaluator();1461878203;Create a new instance with a default {@link SpelExpressionParser}.;protected CachedExpressionEvaluator() {_		this(new SpelExpressionParser())__	};create,a,new,instance,with,a,default,link,spel,expression,parser;protected,cached,expression,evaluator,this,new,spel,expression,parser
CachedExpressionEvaluator -> protected CachedExpressionEvaluator();1496837955;Create a new instance with a default {@link SpelExpressionParser}.;protected CachedExpressionEvaluator() {_		this(new SpelExpressionParser())__	};create,a,new,instance,with,a,default,link,spel,expression,parser;protected,cached,expression,evaluator,this,new,spel,expression,parser
CachedExpressionEvaluator -> protected CachedExpressionEvaluator();1498780456;Create a new instance with a default {@link SpelExpressionParser}.;protected CachedExpressionEvaluator() {_		this(new SpelExpressionParser())__	};create,a,new,instance,with,a,default,link,spel,expression,parser;protected,cached,expression,evaluator,this,new,spel,expression,parser
CachedExpressionEvaluator -> protected CachedExpressionEvaluator();1530174524;Create a new instance with a default {@link SpelExpressionParser}.;protected CachedExpressionEvaluator() {_		this(new SpelExpressionParser())__	};create,a,new,instance,with,a,default,link,spel,expression,parser;protected,cached,expression,evaluator,this,new,spel,expression,parser
