commented;modifiers;parameterAmount;loc;comment;code
false;public;3;4;;@Override public boolean canRead(EvaluationContext context, @Nullable Object target, String name) throws AccessException {     return (target instanceof BeanExpressionContext && ((BeanExpressionContext) target).containsObject(name)). }
false;public;3;5;;@Override public TypedValue read(EvaluationContext context, @Nullable Object target, String name) throws AccessException {     Assert.state(target instanceof BeanExpressionContext, "Target must be of type BeanExpressionContext").     return new TypedValue(((BeanExpressionContext) target).getObject(name)). }
false;public;3;4;;@Override public boolean canWrite(EvaluationContext context, @Nullable Object target, String name) throws AccessException {     return false. }
false;public;4;6;;@Override public void write(EvaluationContext context, @Nullable Object target, String name, @Nullable Object newValue) throws AccessException {     throw new AccessException("Beans in a BeanFactory are read-only"). }
false;public;0;4;;@Override public Class<?>[] getSpecificTargetClasses() {     return new Class<?>[] { BeanExpressionContext.class }. }
