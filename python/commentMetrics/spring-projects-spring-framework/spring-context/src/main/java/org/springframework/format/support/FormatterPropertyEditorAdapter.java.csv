# id;timestamp;commentText;codeText;commentWords;codeWords
FormatterPropertyEditorAdapter -> public Class<?> getFieldType();1431462798;Determine the {@link Formatter}-declared field type._@return the field type declared in the wrapped {@link Formatter} implementation_(never {@code null})_@throws IllegalArgumentException if the {@link Formatter}-declared field type_cannot be inferred;public Class<?> getFieldType() {_		return FormattingConversionService.getFieldType(this.formatter)__	};determine,the,link,formatter,declared,field,type,return,the,field,type,declared,in,the,wrapped,link,formatter,implementation,never,code,null,throws,illegal,argument,exception,if,the,link,formatter,declared,field,type,cannot,be,inferred;public,class,get,field,type,return,formatting,conversion,service,get,field,type,this,formatter
FormatterPropertyEditorAdapter -> public Class<?> getFieldType();1465462155;Determine the {@link Formatter}-declared field type._@return the field type declared in the wrapped {@link Formatter} implementation_(never {@code null})_@throws IllegalArgumentException if the {@link Formatter}-declared field type_cannot be inferred;public Class<?> getFieldType() {_		return FormattingConversionService.getFieldType(this.formatter)__	};determine,the,link,formatter,declared,field,type,return,the,field,type,declared,in,the,wrapped,link,formatter,implementation,never,code,null,throws,illegal,argument,exception,if,the,link,formatter,declared,field,type,cannot,be,inferred;public,class,get,field,type,return,formatting,conversion,service,get,field,type,this,formatter
FormatterPropertyEditorAdapter -> public Class<?> getFieldType();1473796520;Determine the {@link Formatter}-declared field type._@return the field type declared in the wrapped {@link Formatter} implementation_(never {@code null})_@throws IllegalArgumentException if the {@link Formatter}-declared field type_cannot be inferred;public Class<?> getFieldType() {_		return FormattingConversionService.getFieldType(this.formatter)__	};determine,the,link,formatter,declared,field,type,return,the,field,type,declared,in,the,wrapped,link,formatter,implementation,never,code,null,throws,illegal,argument,exception,if,the,link,formatter,declared,field,type,cannot,be,inferred;public,class,get,field,type,return,formatting,conversion,service,get,field,type,this,formatter
FormatterPropertyEditorAdapter -> @SuppressWarnings("unchecked") 	public FormatterPropertyEditorAdapter(Formatter<?> formatter);1431462798;Create a new {@code FormatterPropertyEditorAdapter} for the given {@link Formatter}._@param formatter the {@link Formatter} to wrap;@SuppressWarnings("unchecked")_	public FormatterPropertyEditorAdapter(Formatter<?> formatter) {_		Assert.notNull(formatter, "Formatter must not be null")__		this.formatter = (Formatter<Object>) formatter__	};create,a,new,code,formatter,property,editor,adapter,for,the,given,link,formatter,param,formatter,the,link,formatter,to,wrap;suppress,warnings,unchecked,public,formatter,property,editor,adapter,formatter,formatter,assert,not,null,formatter,formatter,must,not,be,null,this,formatter,formatter,object,formatter
FormatterPropertyEditorAdapter -> @SuppressWarnings("unchecked") 	public FormatterPropertyEditorAdapter(Formatter<?> formatter);1465462155;Create a new {@code FormatterPropertyEditorAdapter} for the given {@link Formatter}._@param formatter the {@link Formatter} to wrap;@SuppressWarnings("unchecked")_	public FormatterPropertyEditorAdapter(Formatter<?> formatter) {_		Assert.notNull(formatter, "Formatter must not be null")__		this.formatter = (Formatter<Object>) formatter__	};create,a,new,code,formatter,property,editor,adapter,for,the,given,link,formatter,param,formatter,the,link,formatter,to,wrap;suppress,warnings,unchecked,public,formatter,property,editor,adapter,formatter,formatter,assert,not,null,formatter,formatter,must,not,be,null,this,formatter,formatter,object,formatter
FormatterPropertyEditorAdapter -> @SuppressWarnings("unchecked") 	public FormatterPropertyEditorAdapter(Formatter<?> formatter);1473796520;Create a new {@code FormatterPropertyEditorAdapter} for the given {@link Formatter}._@param formatter the {@link Formatter} to wrap;@SuppressWarnings("unchecked")_	public FormatterPropertyEditorAdapter(Formatter<?> formatter) {_		Assert.notNull(formatter, "Formatter must not be null")__		this.formatter = (Formatter<Object>) formatter__	};create,a,new,code,formatter,property,editor,adapter,for,the,given,link,formatter,param,formatter,the,link,formatter,to,wrap;suppress,warnings,unchecked,public,formatter,property,editor,adapter,formatter,formatter,assert,not,null,formatter,formatter,must,not,be,null,this,formatter,formatter,object,formatter
