# id;timestamp;commentText;codeText;commentWords;codeWords
GroovyScriptFactory -> protected GroovyClassLoader buildGroovyClassLoader(@Nullable ClassLoader classLoader);1496837955;Build a {@link GroovyClassLoader} for the given {@code ClassLoader}._@param classLoader the ClassLoader to build a GroovyClassLoader for_@since 4.3.3;protected GroovyClassLoader buildGroovyClassLoader(@Nullable ClassLoader classLoader) {_		return (this.compilerConfiguration != null ?_				new GroovyClassLoader(classLoader, this.compilerConfiguration) : new GroovyClassLoader(classLoader))__	};build,a,link,groovy,class,loader,for,the,given,code,class,loader,param,class,loader,the,class,loader,to,build,a,groovy,class,loader,for,since,4,3,3;protected,groovy,class,loader,build,groovy,class,loader,nullable,class,loader,class,loader,return,this,compiler,configuration,null,new,groovy,class,loader,class,loader,this,compiler,configuration,new,groovy,class,loader,class,loader
GroovyScriptFactory -> protected GroovyClassLoader buildGroovyClassLoader(@Nullable ClassLoader classLoader);1498780456;Build a {@link GroovyClassLoader} for the given {@code ClassLoader}._@param classLoader the ClassLoader to build a GroovyClassLoader for_@since 4.3.3;protected GroovyClassLoader buildGroovyClassLoader(@Nullable ClassLoader classLoader) {_		return (this.compilerConfiguration != null ?_				new GroovyClassLoader(classLoader, this.compilerConfiguration) : new GroovyClassLoader(classLoader))__	};build,a,link,groovy,class,loader,for,the,given,code,class,loader,param,class,loader,the,class,loader,to,build,a,groovy,class,loader,for,since,4,3,3;protected,groovy,class,loader,build,groovy,class,loader,nullable,class,loader,class,loader,return,this,compiler,configuration,null,new,groovy,class,loader,class,loader,this,compiler,configuration,new,groovy,class,loader,class,loader
GroovyScriptFactory -> protected GroovyClassLoader buildGroovyClassLoader(@Nullable ClassLoader classLoader);1502974979;Build a {@link GroovyClassLoader} for the given {@code ClassLoader}._@param classLoader the ClassLoader to build a GroovyClassLoader for_@since 4.3.3;protected GroovyClassLoader buildGroovyClassLoader(@Nullable ClassLoader classLoader) {_		return (this.compilerConfiguration != null ?_				new GroovyClassLoader(classLoader, this.compilerConfiguration) : new GroovyClassLoader(classLoader))__	};build,a,link,groovy,class,loader,for,the,given,code,class,loader,param,class,loader,the,class,loader,to,build,a,groovy,class,loader,for,since,4,3,3;protected,groovy,class,loader,build,groovy,class,loader,nullable,class,loader,class,loader,return,this,compiler,configuration,null,new,groovy,class,loader,class,loader,this,compiler,configuration,new,groovy,class,loader,class,loader
GroovyScriptFactory -> public GroovyClassLoader getGroovyClassLoader();1328020251;Return the GroovyClassLoader used by this script factory.;public GroovyClassLoader getGroovyClassLoader() {_		synchronized (this.scriptClassMonitor) {_			if (this.groovyClassLoader == null) {_				this.groovyClassLoader = new GroovyClassLoader(ClassUtils.getDefaultClassLoader())__			}_			return this.groovyClassLoader__		}_	};return,the,groovy,class,loader,used,by,this,script,factory;public,groovy,class,loader,get,groovy,class,loader,synchronized,this,script,class,monitor,if,this,groovy,class,loader,null,this,groovy,class,loader,new,groovy,class,loader,class,utils,get,default,class,loader,return,this,groovy,class,loader
GroovyScriptFactory -> public GroovyClassLoader getGroovyClassLoader();1356735495;Return the GroovyClassLoader used by this script factory.;public GroovyClassLoader getGroovyClassLoader() {_		synchronized (this.scriptClassMonitor) {_			if (this.groovyClassLoader == null) {_				this.groovyClassLoader = new GroovyClassLoader(ClassUtils.getDefaultClassLoader())__			}_			return this.groovyClassLoader__		}_	};return,the,groovy,class,loader,used,by,this,script,factory;public,groovy,class,loader,get,groovy,class,loader,synchronized,this,script,class,monitor,if,this,groovy,class,loader,null,this,groovy,class,loader,new,groovy,class,loader,class,utils,get,default,class,loader,return,this,groovy,class,loader
GroovyScriptFactory -> public GroovyClassLoader getGroovyClassLoader();1357119239;Return the GroovyClassLoader used by this script factory.;public GroovyClassLoader getGroovyClassLoader() {_		synchronized (this.scriptClassMonitor) {_			if (this.groovyClassLoader == null) {_				this.groovyClassLoader = new GroovyClassLoader(ClassUtils.getDefaultClassLoader())__			}_			return this.groovyClassLoader__		}_	};return,the,groovy,class,loader,used,by,this,script,factory;public,groovy,class,loader,get,groovy,class,loader,synchronized,this,script,class,monitor,if,this,groovy,class,loader,null,this,groovy,class,loader,new,groovy,class,loader,class,utils,get,default,class,loader,return,this,groovy,class,loader
GroovyScriptFactory -> public GroovyClassLoader getGroovyClassLoader();1363729214;Return the GroovyClassLoader used by this script factory.;public GroovyClassLoader getGroovyClassLoader() {_		synchronized (this.scriptClassMonitor) {_			if (this.groovyClassLoader == null) {_				this.groovyClassLoader = new GroovyClassLoader(ClassUtils.getDefaultClassLoader())__			}_			return this.groovyClassLoader__		}_	};return,the,groovy,class,loader,used,by,this,script,factory;public,groovy,class,loader,get,groovy,class,loader,synchronized,this,script,class,monitor,if,this,groovy,class,loader,null,this,groovy,class,loader,new,groovy,class,loader,class,utils,get,default,class,loader,return,this,groovy,class,loader
GroovyScriptFactory -> public GroovyClassLoader getGroovyClassLoader();1368482696;Return the GroovyClassLoader used by this script factory.;public GroovyClassLoader getGroovyClassLoader() {_		synchronized (this.scriptClassMonitor) {_			if (this.groovyClassLoader == null) {_				this.groovyClassLoader = new GroovyClassLoader(ClassUtils.getDefaultClassLoader())__			}_			return this.groovyClassLoader__		}_	};return,the,groovy,class,loader,used,by,this,script,factory;public,groovy,class,loader,get,groovy,class,loader,synchronized,this,script,class,monitor,if,this,groovy,class,loader,null,this,groovy,class,loader,new,groovy,class,loader,class,utils,get,default,class,loader,return,this,groovy,class,loader
GroovyScriptFactory -> public GroovyClassLoader getGroovyClassLoader();1382746895;Return the GroovyClassLoader used by this script factory.;public GroovyClassLoader getGroovyClassLoader() {_		synchronized (this.scriptClassMonitor) {_			if (this.groovyClassLoader == null) {_				this.groovyClassLoader = new GroovyClassLoader(ClassUtils.getDefaultClassLoader())__			}_			return this.groovyClassLoader__		}_	};return,the,groovy,class,loader,used,by,this,script,factory;public,groovy,class,loader,get,groovy,class,loader,synchronized,this,script,class,monitor,if,this,groovy,class,loader,null,this,groovy,class,loader,new,groovy,class,loader,class,utils,get,default,class,loader,return,this,groovy,class,loader
GroovyScriptFactory -> public GroovyClassLoader getGroovyClassLoader();1428099805;Return the GroovyClassLoader used by this script factory.;public GroovyClassLoader getGroovyClassLoader() {_		synchronized (this.scriptClassMonitor) {_			if (this.groovyClassLoader == null) {_				this.groovyClassLoader = new GroovyClassLoader(ClassUtils.getDefaultClassLoader())__			}_			return this.groovyClassLoader__		}_	};return,the,groovy,class,loader,used,by,this,script,factory;public,groovy,class,loader,get,groovy,class,loader,synchronized,this,script,class,monitor,if,this,groovy,class,loader,null,this,groovy,class,loader,new,groovy,class,loader,class,utils,get,default,class,loader,return,this,groovy,class,loader
GroovyScriptFactory -> public GroovyClassLoader getGroovyClassLoader();1457697320;Return the GroovyClassLoader used by this script factory.;public GroovyClassLoader getGroovyClassLoader() {_		synchronized (this.scriptClassMonitor) {_			if (this.groovyClassLoader == null) {_				this.groovyClassLoader = new GroovyClassLoader(ClassUtils.getDefaultClassLoader())__			}_			return this.groovyClassLoader__		}_	};return,the,groovy,class,loader,used,by,this,script,factory;public,groovy,class,loader,get,groovy,class,loader,synchronized,this,script,class,monitor,if,this,groovy,class,loader,null,this,groovy,class,loader,new,groovy,class,loader,class,utils,get,default,class,loader,return,this,groovy,class,loader
GroovyScriptFactory -> public GroovyClassLoader getGroovyClassLoader();1467362634;Return the GroovyClassLoader used by this script factory.;public GroovyClassLoader getGroovyClassLoader() {_		synchronized (this.scriptClassMonitor) {_			if (this.groovyClassLoader == null) {_				this.groovyClassLoader = new GroovyClassLoader(ClassUtils.getDefaultClassLoader())__			}_			return this.groovyClassLoader__		}_	};return,the,groovy,class,loader,used,by,this,script,factory;public,groovy,class,loader,get,groovy,class,loader,synchronized,this,script,class,monitor,if,this,groovy,class,loader,null,this,groovy,class,loader,new,groovy,class,loader,class,utils,get,default,class,loader,return,this,groovy,class,loader
GroovyScriptFactory -> public GroovyClassLoader getGroovyClassLoader();1468948866;Return the GroovyClassLoader used by this script factory.;public GroovyClassLoader getGroovyClassLoader() {_		synchronized (this.scriptClassMonitor) {_			if (this.groovyClassLoader == null) {_				this.groovyClassLoader = new GroovyClassLoader(ClassUtils.getDefaultClassLoader())__			}_			return this.groovyClassLoader__		}_	};return,the,groovy,class,loader,used,by,this,script,factory;public,groovy,class,loader,get,groovy,class,loader,synchronized,this,script,class,monitor,if,this,groovy,class,loader,null,this,groovy,class,loader,new,groovy,class,loader,class,utils,get,default,class,loader,return,this,groovy,class,loader
GroovyScriptFactory -> public GroovyClassLoader getGroovyClassLoader();1471387670;Return the GroovyClassLoader used by this script factory.;public GroovyClassLoader getGroovyClassLoader() {_		synchronized (this.scriptClassMonitor) {_			if (this.groovyClassLoader == null) {_				this.groovyClassLoader = buildGroovyClassLoader(ClassUtils.getDefaultClassLoader())__			}_			return this.groovyClassLoader__		}_	};return,the,groovy,class,loader,used,by,this,script,factory;public,groovy,class,loader,get,groovy,class,loader,synchronized,this,script,class,monitor,if,this,groovy,class,loader,null,this,groovy,class,loader,build,groovy,class,loader,class,utils,get,default,class,loader,return,this,groovy,class,loader
GroovyScriptFactory -> public GroovyClassLoader getGroovyClassLoader();1471426189;Return the GroovyClassLoader used by this script factory.;public GroovyClassLoader getGroovyClassLoader() {_		synchronized (this.scriptClassMonitor) {_			if (this.groovyClassLoader == null) {_				this.groovyClassLoader = buildGroovyClassLoader(ClassUtils.getDefaultClassLoader())__			}_			return this.groovyClassLoader__		}_	};return,the,groovy,class,loader,used,by,this,script,factory;public,groovy,class,loader,get,groovy,class,loader,synchronized,this,script,class,monitor,if,this,groovy,class,loader,null,this,groovy,class,loader,build,groovy,class,loader,class,utils,get,default,class,loader,return,this,groovy,class,loader
GroovyScriptFactory -> public GroovyClassLoader getGroovyClassLoader();1495868221;Return the GroovyClassLoader used by this script factory.;public GroovyClassLoader getGroovyClassLoader() {_		synchronized (this.scriptClassMonitor) {_			if (this.groovyClassLoader == null) {_				this.groovyClassLoader = buildGroovyClassLoader(ClassUtils.getDefaultClassLoader())__			}_			return this.groovyClassLoader__		}_	};return,the,groovy,class,loader,used,by,this,script,factory;public,groovy,class,loader,get,groovy,class,loader,synchronized,this,script,class,monitor,if,this,groovy,class,loader,null,this,groovy,class,loader,build,groovy,class,loader,class,utils,get,default,class,loader,return,this,groovy,class,loader
GroovyScriptFactory -> public GroovyClassLoader getGroovyClassLoader();1496242568;Return the GroovyClassLoader used by this script factory.;public GroovyClassLoader getGroovyClassLoader() {_		synchronized (this.scriptClassMonitor) {_			if (this.groovyClassLoader == null) {_				this.groovyClassLoader = buildGroovyClassLoader(ClassUtils.getDefaultClassLoader())__			}_			return this.groovyClassLoader__		}_	};return,the,groovy,class,loader,used,by,this,script,factory;public,groovy,class,loader,get,groovy,class,loader,synchronized,this,script,class,monitor,if,this,groovy,class,loader,null,this,groovy,class,loader,build,groovy,class,loader,class,utils,get,default,class,loader,return,this,groovy,class,loader
GroovyScriptFactory -> public GroovyClassLoader getGroovyClassLoader();1496837955;Return the GroovyClassLoader used by this script factory.;public GroovyClassLoader getGroovyClassLoader() {_		synchronized (this.scriptClassMonitor) {_			if (this.groovyClassLoader == null) {_				this.groovyClassLoader = buildGroovyClassLoader(ClassUtils.getDefaultClassLoader())__			}_			return this.groovyClassLoader__		}_	};return,the,groovy,class,loader,used,by,this,script,factory;public,groovy,class,loader,get,groovy,class,loader,synchronized,this,script,class,monitor,if,this,groovy,class,loader,null,this,groovy,class,loader,build,groovy,class,loader,class,utils,get,default,class,loader,return,this,groovy,class,loader
GroovyScriptFactory -> public GroovyClassLoader getGroovyClassLoader();1498780456;Return the GroovyClassLoader used by this script factory.;public GroovyClassLoader getGroovyClassLoader() {_		synchronized (this.scriptClassMonitor) {_			if (this.groovyClassLoader == null) {_				this.groovyClassLoader = buildGroovyClassLoader(ClassUtils.getDefaultClassLoader())__			}_			return this.groovyClassLoader__		}_	};return,the,groovy,class,loader,used,by,this,script,factory;public,groovy,class,loader,get,groovy,class,loader,synchronized,this,script,class,monitor,if,this,groovy,class,loader,null,this,groovy,class,loader,build,groovy,class,loader,class,utils,get,default,class,loader,return,this,groovy,class,loader
GroovyScriptFactory -> public GroovyClassLoader getGroovyClassLoader();1502974979;Return the GroovyClassLoader used by this script factory.;public GroovyClassLoader getGroovyClassLoader() {_		synchronized (this.scriptClassMonitor) {_			if (this.groovyClassLoader == null) {_				this.groovyClassLoader = buildGroovyClassLoader(ClassUtils.getDefaultClassLoader())__			}_			return this.groovyClassLoader__		}_	};return,the,groovy,class,loader,used,by,this,script,factory;public,groovy,class,loader,get,groovy,class,loader,synchronized,this,script,class,monitor,if,this,groovy,class,loader,null,this,groovy,class,loader,build,groovy,class,loader,class,utils,get,default,class,loader,return,this,groovy,class,loader
GroovyScriptFactory -> protected Object executeScript(ScriptSource scriptSource, Class<?> scriptClass) throws ScriptCompilationException;1382746895;Instantiate the given Groovy script class and run it if necessary._@param scriptSource the source for the underlying script_@param scriptClass the Groovy script class_@return the result object (either an instance of the script class_or the result of running the script instance)_@throws ScriptCompilationException in case of instantiation failure;protected Object executeScript(ScriptSource scriptSource, Class<?> scriptClass) throws ScriptCompilationException {_		try {_			GroovyObject goo = (GroovyObject) scriptClass.newInstance()___			if (this.groovyObjectCustomizer != null) {_				_				this.groovyObjectCustomizer.customize(goo)__			}__			if (goo instanceof Script) {_				_				return ((Script) goo).run()__			}_			else {_				_				return goo__			}_		}_		catch (InstantiationException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not instantiate Groovy script class: " + scriptClass.getName(), ex)__		}_		catch (IllegalAccessException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not access Groovy script constructor: " + scriptClass.getName(), ex)__		}_	};instantiate,the,given,groovy,script,class,and,run,it,if,necessary,param,script,source,the,source,for,the,underlying,script,param,script,class,the,groovy,script,class,return,the,result,object,either,an,instance,of,the,script,class,or,the,result,of,running,the,script,instance,throws,script,compilation,exception,in,case,of,instantiation,failure;protected,object,execute,script,script,source,script,source,class,script,class,throws,script,compilation,exception,try,groovy,object,goo,groovy,object,script,class,new,instance,if,this,groovy,object,customizer,null,this,groovy,object,customizer,customize,goo,if,goo,instanceof,script,return,script,goo,run,else,return,goo,catch,instantiation,exception,ex,throw,new,script,compilation,exception,script,source,could,not,instantiate,groovy,script,class,script,class,get,name,ex,catch,illegal,access,exception,ex,throw,new,script,compilation,exception,script,source,could,not,access,groovy,script,constructor,script,class,get,name,ex
GroovyScriptFactory -> protected Object executeScript(ScriptSource scriptSource, Class<?> scriptClass) throws ScriptCompilationException;1428099805;Instantiate the given Groovy script class and run it if necessary._@param scriptSource the source for the underlying script_@param scriptClass the Groovy script class_@return the result object (either an instance of the script class_or the result of running the script instance)_@throws ScriptCompilationException in case of instantiation failure;protected Object executeScript(ScriptSource scriptSource, Class<?> scriptClass) throws ScriptCompilationException {_		try {_			GroovyObject goo = (GroovyObject) scriptClass.newInstance()___			if (this.groovyObjectCustomizer != null) {_				_				this.groovyObjectCustomizer.customize(goo)__			}__			if (goo instanceof Script) {_				_				return ((Script) goo).run()__			}_			else {_				_				return goo__			}_		}_		catch (InstantiationException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not instantiate Groovy script class: " + scriptClass.getName(), ex)__		}_		catch (IllegalAccessException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not access Groovy script constructor: " + scriptClass.getName(), ex)__		}_	};instantiate,the,given,groovy,script,class,and,run,it,if,necessary,param,script,source,the,source,for,the,underlying,script,param,script,class,the,groovy,script,class,return,the,result,object,either,an,instance,of,the,script,class,or,the,result,of,running,the,script,instance,throws,script,compilation,exception,in,case,of,instantiation,failure;protected,object,execute,script,script,source,script,source,class,script,class,throws,script,compilation,exception,try,groovy,object,goo,groovy,object,script,class,new,instance,if,this,groovy,object,customizer,null,this,groovy,object,customizer,customize,goo,if,goo,instanceof,script,return,script,goo,run,else,return,goo,catch,instantiation,exception,ex,throw,new,script,compilation,exception,script,source,could,not,instantiate,groovy,script,class,script,class,get,name,ex,catch,illegal,access,exception,ex,throw,new,script,compilation,exception,script,source,could,not,access,groovy,script,constructor,script,class,get,name,ex
GroovyScriptFactory -> protected Object executeScript(ScriptSource scriptSource, Class<?> scriptClass) throws ScriptCompilationException;1457697320;Instantiate the given Groovy script class and run it if necessary._@param scriptSource the source for the underlying script_@param scriptClass the Groovy script class_@return the result object (either an instance of the script class_or the result of running the script instance)_@throws ScriptCompilationException in case of instantiation failure;protected Object executeScript(ScriptSource scriptSource, Class<?> scriptClass) throws ScriptCompilationException {_		try {_			GroovyObject goo = (GroovyObject) scriptClass.newInstance()___			if (this.groovyObjectCustomizer != null) {_				_				this.groovyObjectCustomizer.customize(goo)__			}__			if (goo instanceof Script) {_				_				return ((Script) goo).run()__			}_			else {_				_				return goo__			}_		}_		catch (InstantiationException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not instantiate Groovy script class: " + scriptClass.getName(), ex)__		}_		catch (IllegalAccessException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not access Groovy script constructor: " + scriptClass.getName(), ex)__		}_	};instantiate,the,given,groovy,script,class,and,run,it,if,necessary,param,script,source,the,source,for,the,underlying,script,param,script,class,the,groovy,script,class,return,the,result,object,either,an,instance,of,the,script,class,or,the,result,of,running,the,script,instance,throws,script,compilation,exception,in,case,of,instantiation,failure;protected,object,execute,script,script,source,script,source,class,script,class,throws,script,compilation,exception,try,groovy,object,goo,groovy,object,script,class,new,instance,if,this,groovy,object,customizer,null,this,groovy,object,customizer,customize,goo,if,goo,instanceof,script,return,script,goo,run,else,return,goo,catch,instantiation,exception,ex,throw,new,script,compilation,exception,script,source,could,not,instantiate,groovy,script,class,script,class,get,name,ex,catch,illegal,access,exception,ex,throw,new,script,compilation,exception,script,source,could,not,access,groovy,script,constructor,script,class,get,name,ex
GroovyScriptFactory -> protected Object executeScript(ScriptSource scriptSource, Class<?> scriptClass) throws ScriptCompilationException;1467362634;Instantiate the given Groovy script class and run it if necessary._@param scriptSource the source for the underlying script_@param scriptClass the Groovy script class_@return the result object (either an instance of the script class_or the result of running the script instance)_@throws ScriptCompilationException in case of instantiation failure;protected Object executeScript(ScriptSource scriptSource, Class<?> scriptClass) throws ScriptCompilationException {_		try {_			GroovyObject goo = (GroovyObject) scriptClass.newInstance()___			if (this.groovyObjectCustomizer != null) {_				_				this.groovyObjectCustomizer.customize(goo)__			}__			if (goo instanceof Script) {_				_				return ((Script) goo).run()__			}_			else {_				_				return goo__			}_		}_		catch (InstantiationException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not instantiate Groovy script class: " + scriptClass.getName(), ex)__		}_		catch (IllegalAccessException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not access Groovy script constructor: " + scriptClass.getName(), ex)__		}_	};instantiate,the,given,groovy,script,class,and,run,it,if,necessary,param,script,source,the,source,for,the,underlying,script,param,script,class,the,groovy,script,class,return,the,result,object,either,an,instance,of,the,script,class,or,the,result,of,running,the,script,instance,throws,script,compilation,exception,in,case,of,instantiation,failure;protected,object,execute,script,script,source,script,source,class,script,class,throws,script,compilation,exception,try,groovy,object,goo,groovy,object,script,class,new,instance,if,this,groovy,object,customizer,null,this,groovy,object,customizer,customize,goo,if,goo,instanceof,script,return,script,goo,run,else,return,goo,catch,instantiation,exception,ex,throw,new,script,compilation,exception,script,source,could,not,instantiate,groovy,script,class,script,class,get,name,ex,catch,illegal,access,exception,ex,throw,new,script,compilation,exception,script,source,could,not,access,groovy,script,constructor,script,class,get,name,ex
GroovyScriptFactory -> protected Object executeScript(ScriptSource scriptSource, Class<?> scriptClass) throws ScriptCompilationException;1468948866;Instantiate the given Groovy script class and run it if necessary._@param scriptSource the source for the underlying script_@param scriptClass the Groovy script class_@return the result object (either an instance of the script class_or the result of running the script instance)_@throws ScriptCompilationException in case of instantiation failure;protected Object executeScript(ScriptSource scriptSource, Class<?> scriptClass) throws ScriptCompilationException {_		try {_			GroovyObject goo = (GroovyObject) ReflectionUtils.accessibleConstructor(scriptClass).newInstance()___			if (this.groovyObjectCustomizer != null) {_				_				this.groovyObjectCustomizer.customize(goo)__			}__			if (goo instanceof Script) {_				_				return ((Script) goo).run()__			}_			else {_				_				return goo__			}_		}_		catch (NoSuchMethodException ex) {_			throw new ScriptCompilationException(_					"No default constructor on Groovy script class: " + scriptClass.getName(), ex)__		}_		catch (InstantiationException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Unable to instantiate Groovy script class: " + scriptClass.getName(), ex)__		}_		catch (IllegalAccessException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not access Groovy script constructor: " + scriptClass.getName(), ex)__		}_		catch (InvocationTargetException ex) {_			throw new ScriptCompilationException(_					"Failed to invoke Groovy script constructor: " + scriptClass.getName(), ex.getTargetException())__		}_	};instantiate,the,given,groovy,script,class,and,run,it,if,necessary,param,script,source,the,source,for,the,underlying,script,param,script,class,the,groovy,script,class,return,the,result,object,either,an,instance,of,the,script,class,or,the,result,of,running,the,script,instance,throws,script,compilation,exception,in,case,of,instantiation,failure;protected,object,execute,script,script,source,script,source,class,script,class,throws,script,compilation,exception,try,groovy,object,goo,groovy,object,reflection,utils,accessible,constructor,script,class,new,instance,if,this,groovy,object,customizer,null,this,groovy,object,customizer,customize,goo,if,goo,instanceof,script,return,script,goo,run,else,return,goo,catch,no,such,method,exception,ex,throw,new,script,compilation,exception,no,default,constructor,on,groovy,script,class,script,class,get,name,ex,catch,instantiation,exception,ex,throw,new,script,compilation,exception,script,source,unable,to,instantiate,groovy,script,class,script,class,get,name,ex,catch,illegal,access,exception,ex,throw,new,script,compilation,exception,script,source,could,not,access,groovy,script,constructor,script,class,get,name,ex,catch,invocation,target,exception,ex,throw,new,script,compilation,exception,failed,to,invoke,groovy,script,constructor,script,class,get,name,ex,get,target,exception
GroovyScriptFactory -> protected Object executeScript(ScriptSource scriptSource, Class<?> scriptClass) throws ScriptCompilationException;1471387670;Instantiate the given Groovy script class and run it if necessary._@param scriptSource the source for the underlying script_@param scriptClass the Groovy script class_@return the result object (either an instance of the script class_or the result of running the script instance)_@throws ScriptCompilationException in case of instantiation failure;protected Object executeScript(ScriptSource scriptSource, Class<?> scriptClass) throws ScriptCompilationException {_		try {_			GroovyObject goo = (GroovyObject) ReflectionUtils.accessibleConstructor(scriptClass).newInstance()___			if (this.groovyObjectCustomizer != null) {_				_				this.groovyObjectCustomizer.customize(goo)__			}__			if (goo instanceof Script) {_				_				return ((Script) goo).run()__			}_			else {_				_				return goo__			}_		}_		catch (NoSuchMethodException ex) {_			throw new ScriptCompilationException(_					"No default constructor on Groovy script class: " + scriptClass.getName(), ex)__		}_		catch (InstantiationException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Unable to instantiate Groovy script class: " + scriptClass.getName(), ex)__		}_		catch (IllegalAccessException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not access Groovy script constructor: " + scriptClass.getName(), ex)__		}_		catch (InvocationTargetException ex) {_			throw new ScriptCompilationException(_					"Failed to invoke Groovy script constructor: " + scriptClass.getName(), ex.getTargetException())__		}_	};instantiate,the,given,groovy,script,class,and,run,it,if,necessary,param,script,source,the,source,for,the,underlying,script,param,script,class,the,groovy,script,class,return,the,result,object,either,an,instance,of,the,script,class,or,the,result,of,running,the,script,instance,throws,script,compilation,exception,in,case,of,instantiation,failure;protected,object,execute,script,script,source,script,source,class,script,class,throws,script,compilation,exception,try,groovy,object,goo,groovy,object,reflection,utils,accessible,constructor,script,class,new,instance,if,this,groovy,object,customizer,null,this,groovy,object,customizer,customize,goo,if,goo,instanceof,script,return,script,goo,run,else,return,goo,catch,no,such,method,exception,ex,throw,new,script,compilation,exception,no,default,constructor,on,groovy,script,class,script,class,get,name,ex,catch,instantiation,exception,ex,throw,new,script,compilation,exception,script,source,unable,to,instantiate,groovy,script,class,script,class,get,name,ex,catch,illegal,access,exception,ex,throw,new,script,compilation,exception,script,source,could,not,access,groovy,script,constructor,script,class,get,name,ex,catch,invocation,target,exception,ex,throw,new,script,compilation,exception,failed,to,invoke,groovy,script,constructor,script,class,get,name,ex,get,target,exception
GroovyScriptFactory -> protected Object executeScript(ScriptSource scriptSource, Class<?> scriptClass) throws ScriptCompilationException;1471426189;Instantiate the given Groovy script class and run it if necessary._@param scriptSource the source for the underlying script_@param scriptClass the Groovy script class_@return the result object (either an instance of the script class_or the result of running the script instance)_@throws ScriptCompilationException in case of instantiation failure;protected Object executeScript(ScriptSource scriptSource, Class<?> scriptClass) throws ScriptCompilationException {_		try {_			GroovyObject goo = (GroovyObject) ReflectionUtils.accessibleConstructor(scriptClass).newInstance()___			if (this.groovyObjectCustomizer != null) {_				_				this.groovyObjectCustomizer.customize(goo)__			}__			if (goo instanceof Script) {_				_				return ((Script) goo).run()__			}_			else {_				_				return goo__			}_		}_		catch (NoSuchMethodException ex) {_			throw new ScriptCompilationException(_					"No default constructor on Groovy script class: " + scriptClass.getName(), ex)__		}_		catch (InstantiationException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Unable to instantiate Groovy script class: " + scriptClass.getName(), ex)__		}_		catch (IllegalAccessException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not access Groovy script constructor: " + scriptClass.getName(), ex)__		}_		catch (InvocationTargetException ex) {_			throw new ScriptCompilationException(_					"Failed to invoke Groovy script constructor: " + scriptClass.getName(), ex.getTargetException())__		}_	};instantiate,the,given,groovy,script,class,and,run,it,if,necessary,param,script,source,the,source,for,the,underlying,script,param,script,class,the,groovy,script,class,return,the,result,object,either,an,instance,of,the,script,class,or,the,result,of,running,the,script,instance,throws,script,compilation,exception,in,case,of,instantiation,failure;protected,object,execute,script,script,source,script,source,class,script,class,throws,script,compilation,exception,try,groovy,object,goo,groovy,object,reflection,utils,accessible,constructor,script,class,new,instance,if,this,groovy,object,customizer,null,this,groovy,object,customizer,customize,goo,if,goo,instanceof,script,return,script,goo,run,else,return,goo,catch,no,such,method,exception,ex,throw,new,script,compilation,exception,no,default,constructor,on,groovy,script,class,script,class,get,name,ex,catch,instantiation,exception,ex,throw,new,script,compilation,exception,script,source,unable,to,instantiate,groovy,script,class,script,class,get,name,ex,catch,illegal,access,exception,ex,throw,new,script,compilation,exception,script,source,could,not,access,groovy,script,constructor,script,class,get,name,ex,catch,invocation,target,exception,ex,throw,new,script,compilation,exception,failed,to,invoke,groovy,script,constructor,script,class,get,name,ex,get,target,exception
GroovyScriptFactory -> protected Object executeScript(ScriptSource scriptSource, Class<?> scriptClass) throws ScriptCompilationException;1495868221;Instantiate the given Groovy script class and run it if necessary._@param scriptSource the source for the underlying script_@param scriptClass the Groovy script class_@return the result object (either an instance of the script class_or the result of running the script instance)_@throws ScriptCompilationException in case of instantiation failure;protected Object executeScript(ScriptSource scriptSource, Class<?> scriptClass) throws ScriptCompilationException {_		try {_			GroovyObject goo = (GroovyObject) ReflectionUtils.accessibleConstructor(scriptClass).newInstance()___			if (this.groovyObjectCustomizer != null) {_				_				this.groovyObjectCustomizer.customize(goo)__			}__			if (goo instanceof Script) {_				_				return ((Script) goo).run()__			}_			else {_				_				return goo__			}_		}_		catch (NoSuchMethodException ex) {_			throw new ScriptCompilationException(_					"No default constructor on Groovy script class: " + scriptClass.getName(), ex)__		}_		catch (InstantiationException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Unable to instantiate Groovy script class: " + scriptClass.getName(), ex)__		}_		catch (IllegalAccessException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not access Groovy script constructor: " + scriptClass.getName(), ex)__		}_		catch (InvocationTargetException ex) {_			throw new ScriptCompilationException(_					"Failed to invoke Groovy script constructor: " + scriptClass.getName(), ex.getTargetException())__		}_	};instantiate,the,given,groovy,script,class,and,run,it,if,necessary,param,script,source,the,source,for,the,underlying,script,param,script,class,the,groovy,script,class,return,the,result,object,either,an,instance,of,the,script,class,or,the,result,of,running,the,script,instance,throws,script,compilation,exception,in,case,of,instantiation,failure;protected,object,execute,script,script,source,script,source,class,script,class,throws,script,compilation,exception,try,groovy,object,goo,groovy,object,reflection,utils,accessible,constructor,script,class,new,instance,if,this,groovy,object,customizer,null,this,groovy,object,customizer,customize,goo,if,goo,instanceof,script,return,script,goo,run,else,return,goo,catch,no,such,method,exception,ex,throw,new,script,compilation,exception,no,default,constructor,on,groovy,script,class,script,class,get,name,ex,catch,instantiation,exception,ex,throw,new,script,compilation,exception,script,source,unable,to,instantiate,groovy,script,class,script,class,get,name,ex,catch,illegal,access,exception,ex,throw,new,script,compilation,exception,script,source,could,not,access,groovy,script,constructor,script,class,get,name,ex,catch,invocation,target,exception,ex,throw,new,script,compilation,exception,failed,to,invoke,groovy,script,constructor,script,class,get,name,ex,get,target,exception
GroovyScriptFactory -> protected Object executeScript(ScriptSource scriptSource, Class<?> scriptClass) throws ScriptCompilationException;1496242568;Instantiate the given Groovy script class and run it if necessary._@param scriptSource the source for the underlying script_@param scriptClass the Groovy script class_@return the result object (either an instance of the script class_or the result of running the script instance)_@throws ScriptCompilationException in case of instantiation failure;protected Object executeScript(ScriptSource scriptSource, Class<?> scriptClass) throws ScriptCompilationException {_		try {_			GroovyObject goo = (GroovyObject) ReflectionUtils.accessibleConstructor(scriptClass).newInstance()___			if (this.groovyObjectCustomizer != null) {_				_				this.groovyObjectCustomizer.customize(goo)__			}__			if (goo instanceof Script) {_				_				return ((Script) goo).run()__			}_			else {_				_				return goo__			}_		}_		catch (NoSuchMethodException ex) {_			throw new ScriptCompilationException(_					"No default constructor on Groovy script class: " + scriptClass.getName(), ex)__		}_		catch (InstantiationException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Unable to instantiate Groovy script class: " + scriptClass.getName(), ex)__		}_		catch (IllegalAccessException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not access Groovy script constructor: " + scriptClass.getName(), ex)__		}_		catch (InvocationTargetException ex) {_			throw new ScriptCompilationException(_					"Failed to invoke Groovy script constructor: " + scriptClass.getName(), ex.getTargetException())__		}_	};instantiate,the,given,groovy,script,class,and,run,it,if,necessary,param,script,source,the,source,for,the,underlying,script,param,script,class,the,groovy,script,class,return,the,result,object,either,an,instance,of,the,script,class,or,the,result,of,running,the,script,instance,throws,script,compilation,exception,in,case,of,instantiation,failure;protected,object,execute,script,script,source,script,source,class,script,class,throws,script,compilation,exception,try,groovy,object,goo,groovy,object,reflection,utils,accessible,constructor,script,class,new,instance,if,this,groovy,object,customizer,null,this,groovy,object,customizer,customize,goo,if,goo,instanceof,script,return,script,goo,run,else,return,goo,catch,no,such,method,exception,ex,throw,new,script,compilation,exception,no,default,constructor,on,groovy,script,class,script,class,get,name,ex,catch,instantiation,exception,ex,throw,new,script,compilation,exception,script,source,unable,to,instantiate,groovy,script,class,script,class,get,name,ex,catch,illegal,access,exception,ex,throw,new,script,compilation,exception,script,source,could,not,access,groovy,script,constructor,script,class,get,name,ex,catch,invocation,target,exception,ex,throw,new,script,compilation,exception,failed,to,invoke,groovy,script,constructor,script,class,get,name,ex,get,target,exception
GroovyScriptFactory -> @Override 	public boolean requiresConfigInterface();1356735495;Groovy scripts do not need a config interface,_since they expose their setters as public methods.;@Override_	public boolean requiresConfigInterface() {_		return false__	};groovy,scripts,do,not,need,a,config,interface,since,they,expose,their,setters,as,public,methods;override,public,boolean,requires,config,interface,return,false
GroovyScriptFactory -> @Override 	public boolean requiresConfigInterface();1368482696;Groovy scripts do not need a config interface,_since they expose their setters as public methods.;@Override_	public boolean requiresConfigInterface() {_		return false__	};groovy,scripts,do,not,need,a,config,interface,since,they,expose,their,setters,as,public,methods;override,public,boolean,requires,config,interface,return,false
GroovyScriptFactory -> @Override 	public boolean requiresConfigInterface();1382746895;Groovy scripts do not need a config interface,_since they expose their setters as public methods.;@Override_	public boolean requiresConfigInterface() {_		return false__	};groovy,scripts,do,not,need,a,config,interface,since,they,expose,their,setters,as,public,methods;override,public,boolean,requires,config,interface,return,false
GroovyScriptFactory -> @Override 	public boolean requiresConfigInterface();1428099805;Groovy scripts do not need a config interface,_since they expose their setters as public methods.;@Override_	public boolean requiresConfigInterface() {_		return false__	};groovy,scripts,do,not,need,a,config,interface,since,they,expose,their,setters,as,public,methods;override,public,boolean,requires,config,interface,return,false
GroovyScriptFactory -> @Override 	public boolean requiresConfigInterface();1457697320;Groovy scripts do not need a config interface,_since they expose their setters as public methods.;@Override_	public boolean requiresConfigInterface() {_		return false__	};groovy,scripts,do,not,need,a,config,interface,since,they,expose,their,setters,as,public,methods;override,public,boolean,requires,config,interface,return,false
GroovyScriptFactory -> @Override 	public boolean requiresConfigInterface();1467362634;Groovy scripts do not need a config interface,_since they expose their setters as public methods.;@Override_	public boolean requiresConfigInterface() {_		return false__	};groovy,scripts,do,not,need,a,config,interface,since,they,expose,their,setters,as,public,methods;override,public,boolean,requires,config,interface,return,false
GroovyScriptFactory -> @Override 	public boolean requiresConfigInterface();1468948866;Groovy scripts do not need a config interface,_since they expose their setters as public methods.;@Override_	public boolean requiresConfigInterface() {_		return false__	};groovy,scripts,do,not,need,a,config,interface,since,they,expose,their,setters,as,public,methods;override,public,boolean,requires,config,interface,return,false
GroovyScriptFactory -> @Override 	public boolean requiresConfigInterface();1471387670;Groovy scripts do not need a config interface,_since they expose their setters as public methods.;@Override_	public boolean requiresConfigInterface() {_		return false__	};groovy,scripts,do,not,need,a,config,interface,since,they,expose,their,setters,as,public,methods;override,public,boolean,requires,config,interface,return,false
GroovyScriptFactory -> @Override 	public boolean requiresConfigInterface();1471426189;Groovy scripts do not need a config interface,_since they expose their setters as public methods.;@Override_	public boolean requiresConfigInterface() {_		return false__	};groovy,scripts,do,not,need,a,config,interface,since,they,expose,their,setters,as,public,methods;override,public,boolean,requires,config,interface,return,false
GroovyScriptFactory -> @Override 	public boolean requiresConfigInterface();1495868221;Groovy scripts do not need a config interface,_since they expose their setters as public methods.;@Override_	public boolean requiresConfigInterface() {_		return false__	};groovy,scripts,do,not,need,a,config,interface,since,they,expose,their,setters,as,public,methods;override,public,boolean,requires,config,interface,return,false
GroovyScriptFactory -> @Override 	public boolean requiresConfigInterface();1496242568;Groovy scripts do not need a config interface,_since they expose their setters as public methods.;@Override_	public boolean requiresConfigInterface() {_		return false__	};groovy,scripts,do,not,need,a,config,interface,since,they,expose,their,setters,as,public,methods;override,public,boolean,requires,config,interface,return,false
GroovyScriptFactory -> @Override 	public boolean requiresConfigInterface();1496837955;Groovy scripts do not need a config interface,_since they expose their setters as public methods.;@Override_	public boolean requiresConfigInterface() {_		return false__	};groovy,scripts,do,not,need,a,config,interface,since,they,expose,their,setters,as,public,methods;override,public,boolean,requires,config,interface,return,false
GroovyScriptFactory -> @Override 	public boolean requiresConfigInterface();1498780456;Groovy scripts do not need a config interface,_since they expose their setters as public methods.;@Override_	public boolean requiresConfigInterface() {_		return false__	};groovy,scripts,do,not,need,a,config,interface,since,they,expose,their,setters,as,public,methods;override,public,boolean,requires,config,interface,return,false
GroovyScriptFactory -> @Override 	public boolean requiresConfigInterface();1502974979;Groovy scripts do not need a config interface,_since they expose their setters as public methods.;@Override_	public boolean requiresConfigInterface() {_		return false__	};groovy,scripts,do,not,need,a,config,interface,since,they,expose,their,setters,as,public,methods;override,public,boolean,requires,config,interface,return,false
GroovyScriptFactory -> @Nullable 	protected Object executeScript(ScriptSource scriptSource, Class<?> scriptClass) throws ScriptCompilationException;1496837955;Instantiate the given Groovy script class and run it if necessary._@param scriptSource the source for the underlying script_@param scriptClass the Groovy script class_@return the result object (either an instance of the script class_or the result of running the script instance)_@throws ScriptCompilationException in case of instantiation failure;@Nullable_	protected Object executeScript(ScriptSource scriptSource, Class<?> scriptClass) throws ScriptCompilationException {_		try {_			GroovyObject goo = (GroovyObject) ReflectionUtils.accessibleConstructor(scriptClass).newInstance()___			if (this.groovyObjectCustomizer != null) {_				_				this.groovyObjectCustomizer.customize(goo)__			}__			if (goo instanceof Script) {_				_				return ((Script) goo).run()__			}_			else {_				_				return goo__			}_		}_		catch (NoSuchMethodException ex) {_			throw new ScriptCompilationException(_					"No default constructor on Groovy script class: " + scriptClass.getName(), ex)__		}_		catch (InstantiationException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Unable to instantiate Groovy script class: " + scriptClass.getName(), ex)__		}_		catch (IllegalAccessException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not access Groovy script constructor: " + scriptClass.getName(), ex)__		}_		catch (InvocationTargetException ex) {_			throw new ScriptCompilationException(_					"Failed to invoke Groovy script constructor: " + scriptClass.getName(), ex.getTargetException())__		}_	};instantiate,the,given,groovy,script,class,and,run,it,if,necessary,param,script,source,the,source,for,the,underlying,script,param,script,class,the,groovy,script,class,return,the,result,object,either,an,instance,of,the,script,class,or,the,result,of,running,the,script,instance,throws,script,compilation,exception,in,case,of,instantiation,failure;nullable,protected,object,execute,script,script,source,script,source,class,script,class,throws,script,compilation,exception,try,groovy,object,goo,groovy,object,reflection,utils,accessible,constructor,script,class,new,instance,if,this,groovy,object,customizer,null,this,groovy,object,customizer,customize,goo,if,goo,instanceof,script,return,script,goo,run,else,return,goo,catch,no,such,method,exception,ex,throw,new,script,compilation,exception,no,default,constructor,on,groovy,script,class,script,class,get,name,ex,catch,instantiation,exception,ex,throw,new,script,compilation,exception,script,source,unable,to,instantiate,groovy,script,class,script,class,get,name,ex,catch,illegal,access,exception,ex,throw,new,script,compilation,exception,script,source,could,not,access,groovy,script,constructor,script,class,get,name,ex,catch,invocation,target,exception,ex,throw,new,script,compilation,exception,failed,to,invoke,groovy,script,constructor,script,class,get,name,ex,get,target,exception
GroovyScriptFactory -> @Nullable 	protected Object executeScript(ScriptSource scriptSource, Class<?> scriptClass) throws ScriptCompilationException;1498780456;Instantiate the given Groovy script class and run it if necessary._@param scriptSource the source for the underlying script_@param scriptClass the Groovy script class_@return the result object (either an instance of the script class_or the result of running the script instance)_@throws ScriptCompilationException in case of instantiation failure;@Nullable_	protected Object executeScript(ScriptSource scriptSource, Class<?> scriptClass) throws ScriptCompilationException {_		try {_			GroovyObject goo = (GroovyObject) ReflectionUtils.accessibleConstructor(scriptClass).newInstance()___			if (this.groovyObjectCustomizer != null) {_				_				this.groovyObjectCustomizer.customize(goo)__			}__			if (goo instanceof Script) {_				_				return ((Script) goo).run()__			}_			else {_				_				return goo__			}_		}_		catch (NoSuchMethodException ex) {_			throw new ScriptCompilationException(_					"No default constructor on Groovy script class: " + scriptClass.getName(), ex)__		}_		catch (InstantiationException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Unable to instantiate Groovy script class: " + scriptClass.getName(), ex)__		}_		catch (IllegalAccessException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not access Groovy script constructor: " + scriptClass.getName(), ex)__		}_		catch (InvocationTargetException ex) {_			throw new ScriptCompilationException(_					"Failed to invoke Groovy script constructor: " + scriptClass.getName(), ex.getTargetException())__		}_	};instantiate,the,given,groovy,script,class,and,run,it,if,necessary,param,script,source,the,source,for,the,underlying,script,param,script,class,the,groovy,script,class,return,the,result,object,either,an,instance,of,the,script,class,or,the,result,of,running,the,script,instance,throws,script,compilation,exception,in,case,of,instantiation,failure;nullable,protected,object,execute,script,script,source,script,source,class,script,class,throws,script,compilation,exception,try,groovy,object,goo,groovy,object,reflection,utils,accessible,constructor,script,class,new,instance,if,this,groovy,object,customizer,null,this,groovy,object,customizer,customize,goo,if,goo,instanceof,script,return,script,goo,run,else,return,goo,catch,no,such,method,exception,ex,throw,new,script,compilation,exception,no,default,constructor,on,groovy,script,class,script,class,get,name,ex,catch,instantiation,exception,ex,throw,new,script,compilation,exception,script,source,unable,to,instantiate,groovy,script,class,script,class,get,name,ex,catch,illegal,access,exception,ex,throw,new,script,compilation,exception,script,source,could,not,access,groovy,script,constructor,script,class,get,name,ex,catch,invocation,target,exception,ex,throw,new,script,compilation,exception,failed,to,invoke,groovy,script,constructor,script,class,get,name,ex,get,target,exception
GroovyScriptFactory -> @Nullable 	protected Object executeScript(ScriptSource scriptSource, Class<?> scriptClass) throws ScriptCompilationException;1502974979;Instantiate the given Groovy script class and run it if necessary._@param scriptSource the source for the underlying script_@param scriptClass the Groovy script class_@return the result object (either an instance of the script class_or the result of running the script instance)_@throws ScriptCompilationException in case of instantiation failure;@Nullable_	protected Object executeScript(ScriptSource scriptSource, Class<?> scriptClass) throws ScriptCompilationException {_		try {_			GroovyObject goo = (GroovyObject) ReflectionUtils.accessibleConstructor(scriptClass).newInstance()___			if (this.groovyObjectCustomizer != null) {_				_				this.groovyObjectCustomizer.customize(goo)__			}__			if (goo instanceof Script) {_				_				return ((Script) goo).run()__			}_			else {_				_				return goo__			}_		}_		catch (NoSuchMethodException ex) {_			throw new ScriptCompilationException(_					"No default constructor on Groovy script class: " + scriptClass.getName(), ex)__		}_		catch (InstantiationException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Unable to instantiate Groovy script class: " + scriptClass.getName(), ex)__		}_		catch (IllegalAccessException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not access Groovy script constructor: " + scriptClass.getName(), ex)__		}_		catch (InvocationTargetException ex) {_			throw new ScriptCompilationException(_					"Failed to invoke Groovy script constructor: " + scriptClass.getName(), ex.getTargetException())__		}_	};instantiate,the,given,groovy,script,class,and,run,it,if,necessary,param,script,source,the,source,for,the,underlying,script,param,script,class,the,groovy,script,class,return,the,result,object,either,an,instance,of,the,script,class,or,the,result,of,running,the,script,instance,throws,script,compilation,exception,in,case,of,instantiation,failure;nullable,protected,object,execute,script,script,source,script,source,class,script,class,throws,script,compilation,exception,try,groovy,object,goo,groovy,object,reflection,utils,accessible,constructor,script,class,new,instance,if,this,groovy,object,customizer,null,this,groovy,object,customizer,customize,goo,if,goo,instanceof,script,return,script,goo,run,else,return,goo,catch,no,such,method,exception,ex,throw,new,script,compilation,exception,no,default,constructor,on,groovy,script,class,script,class,get,name,ex,catch,instantiation,exception,ex,throw,new,script,compilation,exception,script,source,unable,to,instantiate,groovy,script,class,script,class,get,name,ex,catch,illegal,access,exception,ex,throw,new,script,compilation,exception,script,source,could,not,access,groovy,script,constructor,script,class,get,name,ex,catch,invocation,target,exception,ex,throw,new,script,compilation,exception,failed,to,invoke,groovy,script,constructor,script,class,get,name,ex,get,target,exception
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, CompilationCustomizer... compilationCustomizers);1471426189;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can customize Groovy's compilation_process within the underlying GroovyClassLoader._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param compilationCustomizers one or more customizers to be applied to the_GroovyClassLoader compiler configuration_@since 4.3.3_@see CompilerConfiguration#addCompilationCustomizers_@see org.codehaus.groovy.control.customizers.ImportCustomizer;public GroovyScriptFactory(String scriptSourceLocator, CompilationCustomizer... compilationCustomizers) {_		this(scriptSourceLocator)__		if (!ObjectUtils.isEmpty(compilationCustomizers)) {_			this.compilerConfiguration = new CompilerConfiguration()__			this.compilerConfiguration.addCompilationCustomizers(compilationCustomizers)__		}_	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,customize,groovy,s,compilation,process,within,the,underlying,groovy,class,loader,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,compilation,customizers,one,or,more,customizers,to,be,applied,to,the,groovy,class,loader,compiler,configuration,since,4,3,3,see,compiler,configuration,add,compilation,customizers,see,org,codehaus,groovy,control,customizers,import,customizer;public,groovy,script,factory,string,script,source,locator,compilation,customizer,compilation,customizers,this,script,source,locator,if,object,utils,is,empty,compilation,customizers,this,compiler,configuration,new,compiler,configuration,this,compiler,configuration,add,compilation,customizers,compilation,customizers
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, CompilationCustomizer... compilationCustomizers);1495868221;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can customize Groovy's compilation_process within the underlying GroovyClassLoader._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param compilationCustomizers one or more customizers to be applied to the_GroovyClassLoader compiler configuration_@since 4.3.3_@see CompilerConfiguration#addCompilationCustomizers_@see org.codehaus.groovy.control.customizers.ImportCustomizer;public GroovyScriptFactory(String scriptSourceLocator, CompilationCustomizer... compilationCustomizers) {_		this(scriptSourceLocator)__		if (!ObjectUtils.isEmpty(compilationCustomizers)) {_			this.compilerConfiguration = new CompilerConfiguration()__			this.compilerConfiguration.addCompilationCustomizers(compilationCustomizers)__		}_	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,customize,groovy,s,compilation,process,within,the,underlying,groovy,class,loader,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,compilation,customizers,one,or,more,customizers,to,be,applied,to,the,groovy,class,loader,compiler,configuration,since,4,3,3,see,compiler,configuration,add,compilation,customizers,see,org,codehaus,groovy,control,customizers,import,customizer;public,groovy,script,factory,string,script,source,locator,compilation,customizer,compilation,customizers,this,script,source,locator,if,object,utils,is,empty,compilation,customizers,this,compiler,configuration,new,compiler,configuration,this,compiler,configuration,add,compilation,customizers,compilation,customizers
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, CompilationCustomizer... compilationCustomizers);1496242568;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can customize Groovy's compilation_process within the underlying GroovyClassLoader._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param compilationCustomizers one or more customizers to be applied to the_GroovyClassLoader compiler configuration_@since 4.3.3_@see CompilerConfiguration#addCompilationCustomizers_@see org.codehaus.groovy.control.customizers.ImportCustomizer;public GroovyScriptFactory(String scriptSourceLocator, CompilationCustomizer... compilationCustomizers) {_		this(scriptSourceLocator)__		if (!ObjectUtils.isEmpty(compilationCustomizers)) {_			this.compilerConfiguration = new CompilerConfiguration()__			this.compilerConfiguration.addCompilationCustomizers(compilationCustomizers)__		}_	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,customize,groovy,s,compilation,process,within,the,underlying,groovy,class,loader,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,compilation,customizers,one,or,more,customizers,to,be,applied,to,the,groovy,class,loader,compiler,configuration,since,4,3,3,see,compiler,configuration,add,compilation,customizers,see,org,codehaus,groovy,control,customizers,import,customizer;public,groovy,script,factory,string,script,source,locator,compilation,customizer,compilation,customizers,this,script,source,locator,if,object,utils,is,empty,compilation,customizers,this,compiler,configuration,new,compiler,configuration,this,compiler,configuration,add,compilation,customizers,compilation,customizers
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, CompilationCustomizer... compilationCustomizers);1496837955;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can customize Groovy's compilation_process within the underlying GroovyClassLoader._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param compilationCustomizers one or more customizers to be applied to the_GroovyClassLoader compiler configuration_@since 4.3.3_@see CompilerConfiguration#addCompilationCustomizers_@see org.codehaus.groovy.control.customizers.ImportCustomizer;public GroovyScriptFactory(String scriptSourceLocator, CompilationCustomizer... compilationCustomizers) {_		this(scriptSourceLocator)__		if (!ObjectUtils.isEmpty(compilationCustomizers)) {_			this.compilerConfiguration = new CompilerConfiguration()__			this.compilerConfiguration.addCompilationCustomizers(compilationCustomizers)__		}_	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,customize,groovy,s,compilation,process,within,the,underlying,groovy,class,loader,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,compilation,customizers,one,or,more,customizers,to,be,applied,to,the,groovy,class,loader,compiler,configuration,since,4,3,3,see,compiler,configuration,add,compilation,customizers,see,org,codehaus,groovy,control,customizers,import,customizer;public,groovy,script,factory,string,script,source,locator,compilation,customizer,compilation,customizers,this,script,source,locator,if,object,utils,is,empty,compilation,customizers,this,compiler,configuration,new,compiler,configuration,this,compiler,configuration,add,compilation,customizers,compilation,customizers
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, CompilationCustomizer... compilationCustomizers);1498780456;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can customize Groovy's compilation_process within the underlying GroovyClassLoader._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param compilationCustomizers one or more customizers to be applied to the_GroovyClassLoader compiler configuration_@since 4.3.3_@see CompilerConfiguration#addCompilationCustomizers_@see org.codehaus.groovy.control.customizers.ImportCustomizer;public GroovyScriptFactory(String scriptSourceLocator, CompilationCustomizer... compilationCustomizers) {_		this(scriptSourceLocator)__		if (!ObjectUtils.isEmpty(compilationCustomizers)) {_			this.compilerConfiguration = new CompilerConfiguration()__			this.compilerConfiguration.addCompilationCustomizers(compilationCustomizers)__		}_	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,customize,groovy,s,compilation,process,within,the,underlying,groovy,class,loader,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,compilation,customizers,one,or,more,customizers,to,be,applied,to,the,groovy,class,loader,compiler,configuration,since,4,3,3,see,compiler,configuration,add,compilation,customizers,see,org,codehaus,groovy,control,customizers,import,customizer;public,groovy,script,factory,string,script,source,locator,compilation,customizer,compilation,customizers,this,script,source,locator,if,object,utils,is,empty,compilation,customizers,this,compiler,configuration,new,compiler,configuration,this,compiler,configuration,add,compilation,customizers,compilation,customizers
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, CompilationCustomizer... compilationCustomizers);1502974979;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can customize Groovy's compilation_process within the underlying GroovyClassLoader._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param compilationCustomizers one or more customizers to be applied to the_GroovyClassLoader compiler configuration_@since 4.3.3_@see CompilerConfiguration#addCompilationCustomizers_@see org.codehaus.groovy.control.customizers.ImportCustomizer;public GroovyScriptFactory(String scriptSourceLocator, CompilationCustomizer... compilationCustomizers) {_		this(scriptSourceLocator)__		if (!ObjectUtils.isEmpty(compilationCustomizers)) {_			this.compilerConfiguration = new CompilerConfiguration()__			this.compilerConfiguration.addCompilationCustomizers(compilationCustomizers)__		}_	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,customize,groovy,s,compilation,process,within,the,underlying,groovy,class,loader,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,compilation,customizers,one,or,more,customizers,to,be,applied,to,the,groovy,class,loader,compiler,configuration,since,4,3,3,see,compiler,configuration,add,compilation,customizers,see,org,codehaus,groovy,control,customizers,import,customizer;public,groovy,script,factory,string,script,source,locator,compilation,customizer,compilation,customizers,this,script,source,locator,if,object,utils,is,empty,compilation,customizers,this,compiler,configuration,new,compiler,configuration,this,compiler,configuration,add,compilation,customizers,compilation,customizers
GroovyScriptFactory -> protected GroovyClassLoader buildGroovyClassLoader(ClassLoader classLoader);1471387670;Build a {@link GroovyClassLoader} for the given {@code ClassLoader}._@param classLoader the ClassLoader to build a GroovyClassLoader for_@since 4.3.3;protected GroovyClassLoader buildGroovyClassLoader(ClassLoader classLoader) {_		return (this.compilerConfiguration != null ?_				new GroovyClassLoader(classLoader, this.compilerConfiguration) : new GroovyClassLoader(classLoader))__	};build,a,link,groovy,class,loader,for,the,given,code,class,loader,param,class,loader,the,class,loader,to,build,a,groovy,class,loader,for,since,4,3,3;protected,groovy,class,loader,build,groovy,class,loader,class,loader,class,loader,return,this,compiler,configuration,null,new,groovy,class,loader,class,loader,this,compiler,configuration,new,groovy,class,loader,class,loader
GroovyScriptFactory -> protected GroovyClassLoader buildGroovyClassLoader(ClassLoader classLoader);1471426189;Build a {@link GroovyClassLoader} for the given {@code ClassLoader}._@param classLoader the ClassLoader to build a GroovyClassLoader for_@since 4.3.3;protected GroovyClassLoader buildGroovyClassLoader(ClassLoader classLoader) {_		return (this.compilerConfiguration != null ?_				new GroovyClassLoader(classLoader, this.compilerConfiguration) : new GroovyClassLoader(classLoader))__	};build,a,link,groovy,class,loader,for,the,given,code,class,loader,param,class,loader,the,class,loader,to,build,a,groovy,class,loader,for,since,4,3,3;protected,groovy,class,loader,build,groovy,class,loader,class,loader,class,loader,return,this,compiler,configuration,null,new,groovy,class,loader,class,loader,this,compiler,configuration,new,groovy,class,loader,class,loader
GroovyScriptFactory -> protected GroovyClassLoader buildGroovyClassLoader(ClassLoader classLoader);1495868221;Build a {@link GroovyClassLoader} for the given {@code ClassLoader}._@param classLoader the ClassLoader to build a GroovyClassLoader for_@since 4.3.3;protected GroovyClassLoader buildGroovyClassLoader(ClassLoader classLoader) {_		return (this.compilerConfiguration != null ?_				new GroovyClassLoader(classLoader, this.compilerConfiguration) : new GroovyClassLoader(classLoader))__	};build,a,link,groovy,class,loader,for,the,given,code,class,loader,param,class,loader,the,class,loader,to,build,a,groovy,class,loader,for,since,4,3,3;protected,groovy,class,loader,build,groovy,class,loader,class,loader,class,loader,return,this,compiler,configuration,null,new,groovy,class,loader,class,loader,this,compiler,configuration,new,groovy,class,loader,class,loader
GroovyScriptFactory -> protected GroovyClassLoader buildGroovyClassLoader(ClassLoader classLoader);1496242568;Build a {@link GroovyClassLoader} for the given {@code ClassLoader}._@param classLoader the ClassLoader to build a GroovyClassLoader for_@since 4.3.3;protected GroovyClassLoader buildGroovyClassLoader(ClassLoader classLoader) {_		return (this.compilerConfiguration != null ?_				new GroovyClassLoader(classLoader, this.compilerConfiguration) : new GroovyClassLoader(classLoader))__	};build,a,link,groovy,class,loader,for,the,given,code,class,loader,param,class,loader,the,class,loader,to,build,a,groovy,class,loader,for,since,4,3,3;protected,groovy,class,loader,build,groovy,class,loader,class,loader,class,loader,return,this,compiler,configuration,null,new,groovy,class,loader,class,loader,this,compiler,configuration,new,groovy,class,loader,class,loader
GroovyScriptFactory -> public boolean requiresConfigInterface();1328020251;Groovy scripts do not need a config interface,_since they expose their setters as public methods.;public boolean requiresConfigInterface() {_		return false__	};groovy,scripts,do,not,need,a,config,interface,since,they,expose,their,setters,as,public,methods;public,boolean,requires,config,interface,return,false
GroovyScriptFactory -> public boolean requiresConfigInterface();1357119239;Groovy scripts do not need a config interface,_since they expose their setters as public methods.;public boolean requiresConfigInterface() {_		return false__	};groovy,scripts,do,not,need,a,config,interface,since,they,expose,their,setters,as,public,methods;public,boolean,requires,config,interface,return,false
GroovyScriptFactory -> public boolean requiresConfigInterface();1363729214;Groovy scripts do not need a config interface,_since they expose their setters as public methods.;public boolean requiresConfigInterface() {_		return false__	};groovy,scripts,do,not,need,a,config,interface,since,they,expose,their,setters,as,public,methods;public,boolean,requires,config,interface,return,false
GroovyScriptFactory -> public Object getScriptedObject(ScriptSource scriptSource, Class[] actualInterfaces) 			throws IOException, ScriptCompilationException;1328020251;Loads and parses the Groovy script via the GroovyClassLoader._@see groovy.lang.GroovyClassLoader;public Object getScriptedObject(ScriptSource scriptSource, Class[] actualInterfaces)_			throws IOException, ScriptCompilationException {__		try {_			Class scriptClassToExecute = null___			synchronized (this.scriptClassMonitor) {_				this.wasModifiedForTypeCheck = false___				if (this.cachedResult != null) {_					Object result = this.cachedResult.object__					this.cachedResult = null__					return result__				}__				if (this.scriptClass == null || scriptSource.isModified()) {_					_					this.scriptClass = getGroovyClassLoader().parseClass(_							scriptSource.getScriptAsString(), scriptSource.suggestedClassName())___					if (Script.class.isAssignableFrom(this.scriptClass)) {_						_						Object result = executeScript(scriptSource, this.scriptClass)__						this.scriptResultClass = (result != null ? result.getClass() : null)__						return result__					}_					else {_						this.scriptResultClass = this.scriptClass__					}_				}_				scriptClassToExecute = this.scriptClass__			}__			_			return executeScript(scriptSource, scriptClassToExecute)__		}_		catch (CompilationFailedException ex) {_			throw new ScriptCompilationException(scriptSource, ex)__		}_	};loads,and,parses,the,groovy,script,via,the,groovy,class,loader,see,groovy,lang,groovy,class,loader;public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,try,class,script,class,to,execute,null,synchronized,this,script,class,monitor,this,was,modified,for,type,check,false,if,this,cached,result,null,object,result,this,cached,result,object,this,cached,result,null,return,result,if,this,script,class,null,script,source,is,modified,this,script,class,get,groovy,class,loader,parse,class,script,source,get,script,as,string,script,source,suggested,class,name,if,script,class,is,assignable,from,this,script,class,object,result,execute,script,script,source,this,script,class,this,script,result,class,result,null,result,get,class,null,return,result,else,this,script,result,class,this,script,class,script,class,to,execute,this,script,class,return,execute,script,script,source,script,class,to,execute,catch,compilation,failed,exception,ex,throw,new,script,compilation,exception,script,source,ex
GroovyScriptFactory -> public Object getScriptedObject(ScriptSource scriptSource, Class[] actualInterfaces) 			throws IOException, ScriptCompilationException;1357119239;Loads and parses the Groovy script via the GroovyClassLoader._@see groovy.lang.GroovyClassLoader;public Object getScriptedObject(ScriptSource scriptSource, Class[] actualInterfaces)_			throws IOException, ScriptCompilationException {__		try {_			Class scriptClassToExecute = null___			synchronized (this.scriptClassMonitor) {_				this.wasModifiedForTypeCheck = false___				if (this.cachedResult != null) {_					Object result = this.cachedResult.object__					this.cachedResult = null__					return result__				}__				if (this.scriptClass == null || scriptSource.isModified()) {_					_					this.scriptClass = getGroovyClassLoader().parseClass(_							scriptSource.getScriptAsString(), scriptSource.suggestedClassName())___					if (Script.class.isAssignableFrom(this.scriptClass)) {_						_						Object result = executeScript(scriptSource, this.scriptClass)__						this.scriptResultClass = (result != null ? result.getClass() : null)__						return result__					}_					else {_						this.scriptResultClass = this.scriptClass__					}_				}_				scriptClassToExecute = this.scriptClass__			}__			_			return executeScript(scriptSource, scriptClassToExecute)__		}_		catch (CompilationFailedException ex) {_			throw new ScriptCompilationException(scriptSource, ex)__		}_	};loads,and,parses,the,groovy,script,via,the,groovy,class,loader,see,groovy,lang,groovy,class,loader;public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,try,class,script,class,to,execute,null,synchronized,this,script,class,monitor,this,was,modified,for,type,check,false,if,this,cached,result,null,object,result,this,cached,result,object,this,cached,result,null,return,result,if,this,script,class,null,script,source,is,modified,this,script,class,get,groovy,class,loader,parse,class,script,source,get,script,as,string,script,source,suggested,class,name,if,script,class,is,assignable,from,this,script,class,object,result,execute,script,script,source,this,script,class,this,script,result,class,result,null,result,get,class,null,return,result,else,this,script,result,class,this,script,class,script,class,to,execute,this,script,class,return,execute,script,script,source,script,class,to,execute,catch,compilation,failed,exception,ex,throw,new,script,compilation,exception,script,source,ex
GroovyScriptFactory -> public Object getScriptedObject(ScriptSource scriptSource, Class[] actualInterfaces) 			throws IOException, ScriptCompilationException;1363729214;Loads and parses the Groovy script via the GroovyClassLoader._@see groovy.lang.GroovyClassLoader;public Object getScriptedObject(ScriptSource scriptSource, Class[] actualInterfaces)_			throws IOException, ScriptCompilationException {__		try {_			Class scriptClassToExecute = null___			synchronized (this.scriptClassMonitor) {_				this.wasModifiedForTypeCheck = false___				if (this.cachedResult != null) {_					Object result = this.cachedResult.object__					this.cachedResult = null__					return result__				}__				if (this.scriptClass == null || scriptSource.isModified()) {_					_					this.scriptClass = getGroovyClassLoader().parseClass(_							scriptSource.getScriptAsString(), scriptSource.suggestedClassName())___					if (Script.class.isAssignableFrom(this.scriptClass)) {_						_						Object result = executeScript(scriptSource, this.scriptClass)__						this.scriptResultClass = (result != null ? result.getClass() : null)__						return result__					}_					else {_						this.scriptResultClass = this.scriptClass__					}_				}_				scriptClassToExecute = this.scriptClass__			}__			_			return executeScript(scriptSource, scriptClassToExecute)__		}_		catch (CompilationFailedException ex) {_			throw new ScriptCompilationException(scriptSource, ex)__		}_	};loads,and,parses,the,groovy,script,via,the,groovy,class,loader,see,groovy,lang,groovy,class,loader;public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,try,class,script,class,to,execute,null,synchronized,this,script,class,monitor,this,was,modified,for,type,check,false,if,this,cached,result,null,object,result,this,cached,result,object,this,cached,result,null,return,result,if,this,script,class,null,script,source,is,modified,this,script,class,get,groovy,class,loader,parse,class,script,source,get,script,as,string,script,source,suggested,class,name,if,script,class,is,assignable,from,this,script,class,object,result,execute,script,script,source,this,script,class,this,script,result,class,result,null,result,get,class,null,return,result,else,this,script,result,class,this,script,class,script,class,to,execute,this,script,class,return,execute,script,script,source,script,class,to,execute,catch,compilation,failed,exception,ex,throw,new,script,compilation,exception,script,source,ex
GroovyScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1382746895;Loads and parses the Groovy script via the GroovyClassLoader._@see groovy.lang.GroovyClassLoader;@Override_	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		try {_			Class<?> scriptClassToExecute___			synchronized (this.scriptClassMonitor) {_				this.wasModifiedForTypeCheck = false___				if (this.cachedResult != null) {_					Object result = this.cachedResult.object__					this.cachedResult = null__					return result__				}__				if (this.scriptClass == null || scriptSource.isModified()) {_					_					this.scriptClass = getGroovyClassLoader().parseClass(_							scriptSource.getScriptAsString(), scriptSource.suggestedClassName())___					if (Script.class.isAssignableFrom(this.scriptClass)) {_						_						Object result = executeScript(scriptSource, this.scriptClass)__						this.scriptResultClass = (result != null ? result.getClass() : null)__						return result__					}_					else {_						this.scriptResultClass = this.scriptClass__					}_				}_				scriptClassToExecute = this.scriptClass__			}__			_			return executeScript(scriptSource, scriptClassToExecute)__		}_		catch (CompilationFailedException ex) {_			throw new ScriptCompilationException(scriptSource, ex)__		}_	};loads,and,parses,the,groovy,script,via,the,groovy,class,loader,see,groovy,lang,groovy,class,loader;override,public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,try,class,script,class,to,execute,synchronized,this,script,class,monitor,this,was,modified,for,type,check,false,if,this,cached,result,null,object,result,this,cached,result,object,this,cached,result,null,return,result,if,this,script,class,null,script,source,is,modified,this,script,class,get,groovy,class,loader,parse,class,script,source,get,script,as,string,script,source,suggested,class,name,if,script,class,is,assignable,from,this,script,class,object,result,execute,script,script,source,this,script,class,this,script,result,class,result,null,result,get,class,null,return,result,else,this,script,result,class,this,script,class,script,class,to,execute,this,script,class,return,execute,script,script,source,script,class,to,execute,catch,compilation,failed,exception,ex,throw,new,script,compilation,exception,script,source,ex
GroovyScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1428099805;Loads and parses the Groovy script via the GroovyClassLoader._@see groovy.lang.GroovyClassLoader;@Override_	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		try {_			Class<?> scriptClassToExecute___			synchronized (this.scriptClassMonitor) {_				this.wasModifiedForTypeCheck = false___				if (this.cachedResult != null) {_					Object result = this.cachedResult.object__					this.cachedResult = null__					return result__				}__				if (this.scriptClass == null || scriptSource.isModified()) {_					_					this.scriptClass = getGroovyClassLoader().parseClass(_							scriptSource.getScriptAsString(), scriptSource.suggestedClassName())___					if (Script.class.isAssignableFrom(this.scriptClass)) {_						_						Object result = executeScript(scriptSource, this.scriptClass)__						this.scriptResultClass = (result != null ? result.getClass() : null)__						return result__					}_					else {_						this.scriptResultClass = this.scriptClass__					}_				}_				scriptClassToExecute = this.scriptClass__			}__			_			return executeScript(scriptSource, scriptClassToExecute)__		}_		catch (CompilationFailedException ex) {_			throw new ScriptCompilationException(scriptSource, ex)__		}_	};loads,and,parses,the,groovy,script,via,the,groovy,class,loader,see,groovy,lang,groovy,class,loader;override,public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,try,class,script,class,to,execute,synchronized,this,script,class,monitor,this,was,modified,for,type,check,false,if,this,cached,result,null,object,result,this,cached,result,object,this,cached,result,null,return,result,if,this,script,class,null,script,source,is,modified,this,script,class,get,groovy,class,loader,parse,class,script,source,get,script,as,string,script,source,suggested,class,name,if,script,class,is,assignable,from,this,script,class,object,result,execute,script,script,source,this,script,class,this,script,result,class,result,null,result,get,class,null,return,result,else,this,script,result,class,this,script,class,script,class,to,execute,this,script,class,return,execute,script,script,source,script,class,to,execute,catch,compilation,failed,exception,ex,throw,new,script,compilation,exception,script,source,ex
GroovyScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1457697320;Loads and parses the Groovy script via the GroovyClassLoader._@see groovy.lang.GroovyClassLoader;@Override_	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		synchronized (this.scriptClassMonitor) {_			try {_				Class<?> scriptClassToExecute__				this.wasModifiedForTypeCheck = false___				if (this.cachedResult != null) {_					Object result = this.cachedResult.object__					this.cachedResult = null__					return result__				}__				if (this.scriptClass == null || scriptSource.isModified()) {_					_					this.scriptClass = getGroovyClassLoader().parseClass(_							scriptSource.getScriptAsString(), scriptSource.suggestedClassName())___					if (Script.class.isAssignableFrom(this.scriptClass)) {_						_						Object result = executeScript(scriptSource, this.scriptClass)__						this.scriptResultClass = (result != null ? result.getClass() : null)__						return result__					}_					else {_						this.scriptResultClass = this.scriptClass__					}_				}_				scriptClassToExecute = this.scriptClass___				_				return executeScript(scriptSource, scriptClassToExecute)__			}_			catch (CompilationFailedException ex) {_				this.scriptClass = null__				this.scriptResultClass = null__				throw new ScriptCompilationException(scriptSource, ex)__			}_		}_	};loads,and,parses,the,groovy,script,via,the,groovy,class,loader,see,groovy,lang,groovy,class,loader;override,public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,synchronized,this,script,class,monitor,try,class,script,class,to,execute,this,was,modified,for,type,check,false,if,this,cached,result,null,object,result,this,cached,result,object,this,cached,result,null,return,result,if,this,script,class,null,script,source,is,modified,this,script,class,get,groovy,class,loader,parse,class,script,source,get,script,as,string,script,source,suggested,class,name,if,script,class,is,assignable,from,this,script,class,object,result,execute,script,script,source,this,script,class,this,script,result,class,result,null,result,get,class,null,return,result,else,this,script,result,class,this,script,class,script,class,to,execute,this,script,class,return,execute,script,script,source,script,class,to,execute,catch,compilation,failed,exception,ex,this,script,class,null,this,script,result,class,null,throw,new,script,compilation,exception,script,source,ex
GroovyScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1467362634;Loads and parses the Groovy script via the GroovyClassLoader._@see groovy.lang.GroovyClassLoader;@Override_	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		synchronized (this.scriptClassMonitor) {_			try {_				Class<?> scriptClassToExecute__				this.wasModifiedForTypeCheck = false___				if (this.cachedResult != null) {_					Object result = this.cachedResult.object__					this.cachedResult = null__					return result__				}__				if (this.scriptClass == null || scriptSource.isModified()) {_					_					this.scriptClass = getGroovyClassLoader().parseClass(_							scriptSource.getScriptAsString(), scriptSource.suggestedClassName())___					if (Script.class.isAssignableFrom(this.scriptClass)) {_						_						Object result = executeScript(scriptSource, this.scriptClass)__						this.scriptResultClass = (result != null ? result.getClass() : null)__						return result__					}_					else {_						this.scriptResultClass = this.scriptClass__					}_				}_				scriptClassToExecute = this.scriptClass___				_				return executeScript(scriptSource, scriptClassToExecute)__			}_			catch (CompilationFailedException ex) {_				this.scriptClass = null__				this.scriptResultClass = null__				throw new ScriptCompilationException(scriptSource, ex)__			}_		}_	};loads,and,parses,the,groovy,script,via,the,groovy,class,loader,see,groovy,lang,groovy,class,loader;override,public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,synchronized,this,script,class,monitor,try,class,script,class,to,execute,this,was,modified,for,type,check,false,if,this,cached,result,null,object,result,this,cached,result,object,this,cached,result,null,return,result,if,this,script,class,null,script,source,is,modified,this,script,class,get,groovy,class,loader,parse,class,script,source,get,script,as,string,script,source,suggested,class,name,if,script,class,is,assignable,from,this,script,class,object,result,execute,script,script,source,this,script,class,this,script,result,class,result,null,result,get,class,null,return,result,else,this,script,result,class,this,script,class,script,class,to,execute,this,script,class,return,execute,script,script,source,script,class,to,execute,catch,compilation,failed,exception,ex,this,script,class,null,this,script,result,class,null,throw,new,script,compilation,exception,script,source,ex
GroovyScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1468948866;Loads and parses the Groovy script via the GroovyClassLoader._@see groovy.lang.GroovyClassLoader;@Override_	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		synchronized (this.scriptClassMonitor) {_			try {_				Class<?> scriptClassToExecute__				this.wasModifiedForTypeCheck = false___				if (this.cachedResult != null) {_					Object result = this.cachedResult.object__					this.cachedResult = null__					return result__				}__				if (this.scriptClass == null || scriptSource.isModified()) {_					_					this.scriptClass = getGroovyClassLoader().parseClass(_							scriptSource.getScriptAsString(), scriptSource.suggestedClassName())___					if (Script.class.isAssignableFrom(this.scriptClass)) {_						_						Object result = executeScript(scriptSource, this.scriptClass)__						this.scriptResultClass = (result != null ? result.getClass() : null)__						return result__					}_					else {_						this.scriptResultClass = this.scriptClass__					}_				}_				scriptClassToExecute = this.scriptClass___				_				return executeScript(scriptSource, scriptClassToExecute)__			}_			catch (CompilationFailedException ex) {_				this.scriptClass = null__				this.scriptResultClass = null__				throw new ScriptCompilationException(scriptSource, ex)__			}_		}_	};loads,and,parses,the,groovy,script,via,the,groovy,class,loader,see,groovy,lang,groovy,class,loader;override,public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,synchronized,this,script,class,monitor,try,class,script,class,to,execute,this,was,modified,for,type,check,false,if,this,cached,result,null,object,result,this,cached,result,object,this,cached,result,null,return,result,if,this,script,class,null,script,source,is,modified,this,script,class,get,groovy,class,loader,parse,class,script,source,get,script,as,string,script,source,suggested,class,name,if,script,class,is,assignable,from,this,script,class,object,result,execute,script,script,source,this,script,class,this,script,result,class,result,null,result,get,class,null,return,result,else,this,script,result,class,this,script,class,script,class,to,execute,this,script,class,return,execute,script,script,source,script,class,to,execute,catch,compilation,failed,exception,ex,this,script,class,null,this,script,result,class,null,throw,new,script,compilation,exception,script,source,ex
GroovyScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1471387670;Loads and parses the Groovy script via the GroovyClassLoader._@see groovy.lang.GroovyClassLoader;@Override_	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		synchronized (this.scriptClassMonitor) {_			try {_				Class<?> scriptClassToExecute__				this.wasModifiedForTypeCheck = false___				if (this.cachedResult != null) {_					Object result = this.cachedResult.object__					this.cachedResult = null__					return result__				}__				if (this.scriptClass == null || scriptSource.isModified()) {_					_					this.scriptClass = getGroovyClassLoader().parseClass(_							scriptSource.getScriptAsString(), scriptSource.suggestedClassName())___					if (Script.class.isAssignableFrom(this.scriptClass)) {_						_						Object result = executeScript(scriptSource, this.scriptClass)__						this.scriptResultClass = (result != null ? result.getClass() : null)__						return result__					}_					else {_						this.scriptResultClass = this.scriptClass__					}_				}_				scriptClassToExecute = this.scriptClass___				_				return executeScript(scriptSource, scriptClassToExecute)__			}_			catch (CompilationFailedException ex) {_				this.scriptClass = null__				this.scriptResultClass = null__				throw new ScriptCompilationException(scriptSource, ex)__			}_		}_	};loads,and,parses,the,groovy,script,via,the,groovy,class,loader,see,groovy,lang,groovy,class,loader;override,public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,synchronized,this,script,class,monitor,try,class,script,class,to,execute,this,was,modified,for,type,check,false,if,this,cached,result,null,object,result,this,cached,result,object,this,cached,result,null,return,result,if,this,script,class,null,script,source,is,modified,this,script,class,get,groovy,class,loader,parse,class,script,source,get,script,as,string,script,source,suggested,class,name,if,script,class,is,assignable,from,this,script,class,object,result,execute,script,script,source,this,script,class,this,script,result,class,result,null,result,get,class,null,return,result,else,this,script,result,class,this,script,class,script,class,to,execute,this,script,class,return,execute,script,script,source,script,class,to,execute,catch,compilation,failed,exception,ex,this,script,class,null,this,script,result,class,null,throw,new,script,compilation,exception,script,source,ex
GroovyScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1471426189;Loads and parses the Groovy script via the GroovyClassLoader._@see groovy.lang.GroovyClassLoader;@Override_	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		synchronized (this.scriptClassMonitor) {_			try {_				Class<?> scriptClassToExecute__				this.wasModifiedForTypeCheck = false___				if (this.cachedResult != null) {_					Object result = this.cachedResult.object__					this.cachedResult = null__					return result__				}__				if (this.scriptClass == null || scriptSource.isModified()) {_					_					this.scriptClass = getGroovyClassLoader().parseClass(_							scriptSource.getScriptAsString(), scriptSource.suggestedClassName())___					if (Script.class.isAssignableFrom(this.scriptClass)) {_						_						Object result = executeScript(scriptSource, this.scriptClass)__						this.scriptResultClass = (result != null ? result.getClass() : null)__						return result__					}_					else {_						this.scriptResultClass = this.scriptClass__					}_				}_				scriptClassToExecute = this.scriptClass___				_				return executeScript(scriptSource, scriptClassToExecute)__			}_			catch (CompilationFailedException ex) {_				this.scriptClass = null__				this.scriptResultClass = null__				throw new ScriptCompilationException(scriptSource, ex)__			}_		}_	};loads,and,parses,the,groovy,script,via,the,groovy,class,loader,see,groovy,lang,groovy,class,loader;override,public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,synchronized,this,script,class,monitor,try,class,script,class,to,execute,this,was,modified,for,type,check,false,if,this,cached,result,null,object,result,this,cached,result,object,this,cached,result,null,return,result,if,this,script,class,null,script,source,is,modified,this,script,class,get,groovy,class,loader,parse,class,script,source,get,script,as,string,script,source,suggested,class,name,if,script,class,is,assignable,from,this,script,class,object,result,execute,script,script,source,this,script,class,this,script,result,class,result,null,result,get,class,null,return,result,else,this,script,result,class,this,script,class,script,class,to,execute,this,script,class,return,execute,script,script,source,script,class,to,execute,catch,compilation,failed,exception,ex,this,script,class,null,this,script,result,class,null,throw,new,script,compilation,exception,script,source,ex
GroovyScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1495868221;Loads and parses the Groovy script via the GroovyClassLoader._@see groovy.lang.GroovyClassLoader;@Override_	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		synchronized (this.scriptClassMonitor) {_			try {_				Class<?> scriptClassToExecute__				this.wasModifiedForTypeCheck = false___				if (this.cachedResult != null) {_					Object result = this.cachedResult.object__					this.cachedResult = null__					return result__				}__				if (this.scriptClass == null || scriptSource.isModified()) {_					_					this.scriptClass = getGroovyClassLoader().parseClass(_							scriptSource.getScriptAsString(), scriptSource.suggestedClassName())___					if (Script.class.isAssignableFrom(this.scriptClass)) {_						_						Object result = executeScript(scriptSource, this.scriptClass)__						this.scriptResultClass = (result != null ? result.getClass() : null)__						return result__					}_					else {_						this.scriptResultClass = this.scriptClass__					}_				}_				scriptClassToExecute = this.scriptClass___				_				return executeScript(scriptSource, scriptClassToExecute)__			}_			catch (CompilationFailedException ex) {_				this.scriptClass = null__				this.scriptResultClass = null__				throw new ScriptCompilationException(scriptSource, ex)__			}_		}_	};loads,and,parses,the,groovy,script,via,the,groovy,class,loader,see,groovy,lang,groovy,class,loader;override,public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,synchronized,this,script,class,monitor,try,class,script,class,to,execute,this,was,modified,for,type,check,false,if,this,cached,result,null,object,result,this,cached,result,object,this,cached,result,null,return,result,if,this,script,class,null,script,source,is,modified,this,script,class,get,groovy,class,loader,parse,class,script,source,get,script,as,string,script,source,suggested,class,name,if,script,class,is,assignable,from,this,script,class,object,result,execute,script,script,source,this,script,class,this,script,result,class,result,null,result,get,class,null,return,result,else,this,script,result,class,this,script,class,script,class,to,execute,this,script,class,return,execute,script,script,source,script,class,to,execute,catch,compilation,failed,exception,ex,this,script,class,null,this,script,result,class,null,throw,new,script,compilation,exception,script,source,ex
GroovyScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, @Nullable Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1496242568;Loads and parses the Groovy script via the GroovyClassLoader._@see groovy.lang.GroovyClassLoader;@Override_	public Object getScriptedObject(ScriptSource scriptSource, @Nullable Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		synchronized (this.scriptClassMonitor) {_			try {_				Class<?> scriptClassToExecute__				this.wasModifiedForTypeCheck = false___				if (this.cachedResult != null) {_					Object result = this.cachedResult.object__					this.cachedResult = null__					return result__				}__				if (this.scriptClass == null || scriptSource.isModified()) {_					_					this.scriptClass = getGroovyClassLoader().parseClass(_							scriptSource.getScriptAsString(), scriptSource.suggestedClassName())___					if (Script.class.isAssignableFrom(this.scriptClass)) {_						_						Object result = executeScript(scriptSource, this.scriptClass)__						this.scriptResultClass = (result != null ? result.getClass() : null)__						return result__					}_					else {_						this.scriptResultClass = this.scriptClass__					}_				}_				scriptClassToExecute = this.scriptClass___				_				return executeScript(scriptSource, scriptClassToExecute)__			}_			catch (CompilationFailedException ex) {_				this.scriptClass = null__				this.scriptResultClass = null__				throw new ScriptCompilationException(scriptSource, ex)__			}_		}_	};loads,and,parses,the,groovy,script,via,the,groovy,class,loader,see,groovy,lang,groovy,class,loader;override,public,object,get,scripted,object,script,source,script,source,nullable,class,actual,interfaces,throws,ioexception,script,compilation,exception,synchronized,this,script,class,monitor,try,class,script,class,to,execute,this,was,modified,for,type,check,false,if,this,cached,result,null,object,result,this,cached,result,object,this,cached,result,null,return,result,if,this,script,class,null,script,source,is,modified,this,script,class,get,groovy,class,loader,parse,class,script,source,get,script,as,string,script,source,suggested,class,name,if,script,class,is,assignable,from,this,script,class,object,result,execute,script,script,source,this,script,class,this,script,result,class,result,null,result,get,class,null,return,result,else,this,script,result,class,this,script,class,script,class,to,execute,this,script,class,return,execute,script,script,source,script,class,to,execute,catch,compilation,failed,exception,ex,this,script,class,null,this,script,result,class,null,throw,new,script,compilation,exception,script,source,ex
GroovyScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, @Nullable Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1496837955;Loads and parses the Groovy script via the GroovyClassLoader._@see groovy.lang.GroovyClassLoader;@Override_	public Object getScriptedObject(ScriptSource scriptSource, @Nullable Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		synchronized (this.scriptClassMonitor) {_			try {_				Class<?> scriptClassToExecute__				this.wasModifiedForTypeCheck = false___				if (this.cachedResult != null) {_					Object result = this.cachedResult.object__					this.cachedResult = null__					return result__				}__				if (this.scriptClass == null || scriptSource.isModified()) {_					_					this.scriptClass = getGroovyClassLoader().parseClass(_							scriptSource.getScriptAsString(), scriptSource.suggestedClassName())___					if (Script.class.isAssignableFrom(this.scriptClass)) {_						_						Object result = executeScript(scriptSource, this.scriptClass)__						this.scriptResultClass = (result != null ? result.getClass() : null)__						return result__					}_					else {_						this.scriptResultClass = this.scriptClass__					}_				}_				scriptClassToExecute = this.scriptClass___				_				return executeScript(scriptSource, scriptClassToExecute)__			}_			catch (CompilationFailedException ex) {_				this.scriptClass = null__				this.scriptResultClass = null__				throw new ScriptCompilationException(scriptSource, ex)__			}_		}_	};loads,and,parses,the,groovy,script,via,the,groovy,class,loader,see,groovy,lang,groovy,class,loader;override,public,object,get,scripted,object,script,source,script,source,nullable,class,actual,interfaces,throws,ioexception,script,compilation,exception,synchronized,this,script,class,monitor,try,class,script,class,to,execute,this,was,modified,for,type,check,false,if,this,cached,result,null,object,result,this,cached,result,object,this,cached,result,null,return,result,if,this,script,class,null,script,source,is,modified,this,script,class,get,groovy,class,loader,parse,class,script,source,get,script,as,string,script,source,suggested,class,name,if,script,class,is,assignable,from,this,script,class,object,result,execute,script,script,source,this,script,class,this,script,result,class,result,null,result,get,class,null,return,result,else,this,script,result,class,this,script,class,script,class,to,execute,this,script,class,return,execute,script,script,source,script,class,to,execute,catch,compilation,failed,exception,ex,this,script,class,null,this,script,result,class,null,throw,new,script,compilation,exception,script,source,ex
GroovyScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, @Nullable Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1498780456;Loads and parses the Groovy script via the GroovyClassLoader._@see groovy.lang.GroovyClassLoader;@Override_	public Object getScriptedObject(ScriptSource scriptSource, @Nullable Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		synchronized (this.scriptClassMonitor) {_			try {_				Class<?> scriptClassToExecute__				this.wasModifiedForTypeCheck = false___				if (this.cachedResult != null) {_					Object result = this.cachedResult.object__					this.cachedResult = null__					return result__				}__				if (this.scriptClass == null || scriptSource.isModified()) {_					_					this.scriptClass = getGroovyClassLoader().parseClass(_							scriptSource.getScriptAsString(), scriptSource.suggestedClassName())___					if (Script.class.isAssignableFrom(this.scriptClass)) {_						_						Object result = executeScript(scriptSource, this.scriptClass)__						this.scriptResultClass = (result != null ? result.getClass() : null)__						return result__					}_					else {_						this.scriptResultClass = this.scriptClass__					}_				}_				scriptClassToExecute = this.scriptClass___				_				return executeScript(scriptSource, scriptClassToExecute)__			}_			catch (CompilationFailedException ex) {_				this.scriptClass = null__				this.scriptResultClass = null__				throw new ScriptCompilationException(scriptSource, ex)__			}_		}_	};loads,and,parses,the,groovy,script,via,the,groovy,class,loader,see,groovy,lang,groovy,class,loader;override,public,object,get,scripted,object,script,source,script,source,nullable,class,actual,interfaces,throws,ioexception,script,compilation,exception,synchronized,this,script,class,monitor,try,class,script,class,to,execute,this,was,modified,for,type,check,false,if,this,cached,result,null,object,result,this,cached,result,object,this,cached,result,null,return,result,if,this,script,class,null,script,source,is,modified,this,script,class,get,groovy,class,loader,parse,class,script,source,get,script,as,string,script,source,suggested,class,name,if,script,class,is,assignable,from,this,script,class,object,result,execute,script,script,source,this,script,class,this,script,result,class,result,null,result,get,class,null,return,result,else,this,script,result,class,this,script,class,script,class,to,execute,this,script,class,return,execute,script,script,source,script,class,to,execute,catch,compilation,failed,exception,ex,this,script,class,null,this,script,result,class,null,throw,new,script,compilation,exception,script,source,ex
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, GroovyObjectCustomizer groovyObjectCustomizer);1328020251;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can create a custom MetaClass_to supply missing methods and otherwise change the behavior of the object._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param groovyObjectCustomizer a customizer that can set a custom metaclass_or make other changes to the GroovyObject created by this factory_(may be <code>null</code>);public GroovyScriptFactory(String scriptSourceLocator, GroovyObjectCustomizer groovyObjectCustomizer) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.groovyObjectCustomizer = groovyObjectCustomizer__	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,create,a,custom,meta,class,to,supply,missing,methods,and,otherwise,change,the,behavior,of,the,object,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,groovy,object,customizer,a,customizer,that,can,set,a,custom,metaclass,or,make,other,changes,to,the,groovy,object,created,by,this,factory,may,be,code,null,code;public,groovy,script,factory,string,script,source,locator,groovy,object,customizer,groovy,object,customizer,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,groovy,object,customizer,groovy,object,customizer
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, GroovyObjectCustomizer groovyObjectCustomizer);1356735495;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can create a custom MetaClass_to supply missing methods and otherwise change the behavior of the object._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param groovyObjectCustomizer a customizer that can set a custom metaclass_or make other changes to the GroovyObject created by this factory_(may be {@code null});public GroovyScriptFactory(String scriptSourceLocator, GroovyObjectCustomizer groovyObjectCustomizer) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.groovyObjectCustomizer = groovyObjectCustomizer__	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,create,a,custom,meta,class,to,supply,missing,methods,and,otherwise,change,the,behavior,of,the,object,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,groovy,object,customizer,a,customizer,that,can,set,a,custom,metaclass,or,make,other,changes,to,the,groovy,object,created,by,this,factory,may,be,code,null;public,groovy,script,factory,string,script,source,locator,groovy,object,customizer,groovy,object,customizer,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,groovy,object,customizer,groovy,object,customizer
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, GroovyObjectCustomizer groovyObjectCustomizer);1357119239;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can create a custom MetaClass_to supply missing methods and otherwise change the behavior of the object._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param groovyObjectCustomizer a customizer that can set a custom metaclass_or make other changes to the GroovyObject created by this factory_(may be {@code null});public GroovyScriptFactory(String scriptSourceLocator, GroovyObjectCustomizer groovyObjectCustomizer) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.groovyObjectCustomizer = groovyObjectCustomizer__	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,create,a,custom,meta,class,to,supply,missing,methods,and,otherwise,change,the,behavior,of,the,object,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,groovy,object,customizer,a,customizer,that,can,set,a,custom,metaclass,or,make,other,changes,to,the,groovy,object,created,by,this,factory,may,be,code,null;public,groovy,script,factory,string,script,source,locator,groovy,object,customizer,groovy,object,customizer,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,groovy,object,customizer,groovy,object,customizer
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, GroovyObjectCustomizer groovyObjectCustomizer);1363729214;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can create a custom MetaClass_to supply missing methods and otherwise change the behavior of the object._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param groovyObjectCustomizer a customizer that can set a custom metaclass_or make other changes to the GroovyObject created by this factory_(may be {@code null});public GroovyScriptFactory(String scriptSourceLocator, GroovyObjectCustomizer groovyObjectCustomizer) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.groovyObjectCustomizer = groovyObjectCustomizer__	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,create,a,custom,meta,class,to,supply,missing,methods,and,otherwise,change,the,behavior,of,the,object,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,groovy,object,customizer,a,customizer,that,can,set,a,custom,metaclass,or,make,other,changes,to,the,groovy,object,created,by,this,factory,may,be,code,null;public,groovy,script,factory,string,script,source,locator,groovy,object,customizer,groovy,object,customizer,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,groovy,object,customizer,groovy,object,customizer
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, GroovyObjectCustomizer groovyObjectCustomizer);1368482696;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can create a custom MetaClass_to supply missing methods and otherwise change the behavior of the object._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param groovyObjectCustomizer a customizer that can set a custom metaclass_or make other changes to the GroovyObject created by this factory_(may be {@code null});public GroovyScriptFactory(String scriptSourceLocator, GroovyObjectCustomizer groovyObjectCustomizer) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.groovyObjectCustomizer = groovyObjectCustomizer__	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,create,a,custom,meta,class,to,supply,missing,methods,and,otherwise,change,the,behavior,of,the,object,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,groovy,object,customizer,a,customizer,that,can,set,a,custom,metaclass,or,make,other,changes,to,the,groovy,object,created,by,this,factory,may,be,code,null;public,groovy,script,factory,string,script,source,locator,groovy,object,customizer,groovy,object,customizer,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,groovy,object,customizer,groovy,object,customizer
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, GroovyObjectCustomizer groovyObjectCustomizer);1382746895;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can create a custom MetaClass_to supply missing methods and otherwise change the behavior of the object._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param groovyObjectCustomizer a customizer that can set a custom metaclass_or make other changes to the GroovyObject created by this factory_(may be {@code null});public GroovyScriptFactory(String scriptSourceLocator, GroovyObjectCustomizer groovyObjectCustomizer) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.groovyObjectCustomizer = groovyObjectCustomizer__	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,create,a,custom,meta,class,to,supply,missing,methods,and,otherwise,change,the,behavior,of,the,object,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,groovy,object,customizer,a,customizer,that,can,set,a,custom,metaclass,or,make,other,changes,to,the,groovy,object,created,by,this,factory,may,be,code,null;public,groovy,script,factory,string,script,source,locator,groovy,object,customizer,groovy,object,customizer,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,groovy,object,customizer,groovy,object,customizer
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, GroovyObjectCustomizer groovyObjectCustomizer);1428099805;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can create a custom MetaClass_to supply missing methods and otherwise change the behavior of the object._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param groovyObjectCustomizer a customizer that can set a custom metaclass_or make other changes to the GroovyObject created by this factory_(may be {@code null});public GroovyScriptFactory(String scriptSourceLocator, GroovyObjectCustomizer groovyObjectCustomizer) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.groovyObjectCustomizer = groovyObjectCustomizer__	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,create,a,custom,meta,class,to,supply,missing,methods,and,otherwise,change,the,behavior,of,the,object,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,groovy,object,customizer,a,customizer,that,can,set,a,custom,metaclass,or,make,other,changes,to,the,groovy,object,created,by,this,factory,may,be,code,null;public,groovy,script,factory,string,script,source,locator,groovy,object,customizer,groovy,object,customizer,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,groovy,object,customizer,groovy,object,customizer
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, GroovyObjectCustomizer groovyObjectCustomizer);1457697320;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can create a custom MetaClass_to supply missing methods and otherwise change the behavior of the object._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param groovyObjectCustomizer a customizer that can set a custom metaclass_or make other changes to the GroovyObject created by this factory_(may be {@code null});public GroovyScriptFactory(String scriptSourceLocator, GroovyObjectCustomizer groovyObjectCustomizer) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.groovyObjectCustomizer = groovyObjectCustomizer__	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,create,a,custom,meta,class,to,supply,missing,methods,and,otherwise,change,the,behavior,of,the,object,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,groovy,object,customizer,a,customizer,that,can,set,a,custom,metaclass,or,make,other,changes,to,the,groovy,object,created,by,this,factory,may,be,code,null;public,groovy,script,factory,string,script,source,locator,groovy,object,customizer,groovy,object,customizer,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,groovy,object,customizer,groovy,object,customizer
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, GroovyObjectCustomizer groovyObjectCustomizer);1467362634;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can create a custom MetaClass_to supply missing methods and otherwise change the behavior of the object._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param groovyObjectCustomizer a customizer that can set a custom metaclass_or make other changes to the GroovyObject created by this factory_(may be {@code null});public GroovyScriptFactory(String scriptSourceLocator, GroovyObjectCustomizer groovyObjectCustomizer) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.groovyObjectCustomizer = groovyObjectCustomizer__	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,create,a,custom,meta,class,to,supply,missing,methods,and,otherwise,change,the,behavior,of,the,object,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,groovy,object,customizer,a,customizer,that,can,set,a,custom,metaclass,or,make,other,changes,to,the,groovy,object,created,by,this,factory,may,be,code,null;public,groovy,script,factory,string,script,source,locator,groovy,object,customizer,groovy,object,customizer,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,groovy,object,customizer,groovy,object,customizer
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, GroovyObjectCustomizer groovyObjectCustomizer);1468948866;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can create a custom MetaClass_to supply missing methods and otherwise change the behavior of the object._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param groovyObjectCustomizer a customizer that can set a custom metaclass_or make other changes to the GroovyObject created by this factory_(may be {@code null});public GroovyScriptFactory(String scriptSourceLocator, GroovyObjectCustomizer groovyObjectCustomizer) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.groovyObjectCustomizer = groovyObjectCustomizer__	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,create,a,custom,meta,class,to,supply,missing,methods,and,otherwise,change,the,behavior,of,the,object,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,groovy,object,customizer,a,customizer,that,can,set,a,custom,metaclass,or,make,other,changes,to,the,groovy,object,created,by,this,factory,may,be,code,null;public,groovy,script,factory,string,script,source,locator,groovy,object,customizer,groovy,object,customizer,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,groovy,object,customizer,groovy,object,customizer
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, GroovyObjectCustomizer groovyObjectCustomizer);1471387670;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can create a custom MetaClass_to supply missing methods and otherwise change the behavior of the object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param groovyObjectCustomizer a customizer that can set a custom metaclass_or make other changes to the GroovyObject created by this factory_(may be {@code null})_@see GroovyObjectCustomizer#customize;public GroovyScriptFactory(String scriptSourceLocator, GroovyObjectCustomizer groovyObjectCustomizer) {_		this(scriptSourceLocator)__		this.groovyObjectCustomizer = groovyObjectCustomizer__	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,create,a,custom,meta,class,to,supply,missing,methods,and,otherwise,change,the,behavior,of,the,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,groovy,object,customizer,a,customizer,that,can,set,a,custom,metaclass,or,make,other,changes,to,the,groovy,object,created,by,this,factory,may,be,code,null,see,groovy,object,customizer,customize;public,groovy,script,factory,string,script,source,locator,groovy,object,customizer,groovy,object,customizer,this,script,source,locator,this,groovy,object,customizer,groovy,object,customizer
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, GroovyObjectCustomizer groovyObjectCustomizer);1471426189;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can create a custom MetaClass_to supply missing methods and otherwise change the behavior of the object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param groovyObjectCustomizer a customizer that can set a custom metaclass_or make other changes to the GroovyObject created by this factory_(may be {@code null})_@see GroovyObjectCustomizer#customize;public GroovyScriptFactory(String scriptSourceLocator, GroovyObjectCustomizer groovyObjectCustomizer) {_		this(scriptSourceLocator)__		this.groovyObjectCustomizer = groovyObjectCustomizer__	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,create,a,custom,meta,class,to,supply,missing,methods,and,otherwise,change,the,behavior,of,the,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,groovy,object,customizer,a,customizer,that,can,set,a,custom,metaclass,or,make,other,changes,to,the,groovy,object,created,by,this,factory,may,be,code,null,see,groovy,object,customizer,customize;public,groovy,script,factory,string,script,source,locator,groovy,object,customizer,groovy,object,customizer,this,script,source,locator,this,groovy,object,customizer,groovy,object,customizer
GroovyScriptFactory -> @Override 	public Class<?>[] getScriptInterfaces();1382746895;Groovy scripts determine their interfaces themselves,_hence we don't need to explicitly expose interfaces here._@return {@code null} always;@Override_	public Class<?>[] getScriptInterfaces() {_		return null__	};groovy,scripts,determine,their,interfaces,themselves,hence,we,don,t,need,to,explicitly,expose,interfaces,here,return,code,null,always;override,public,class,get,script,interfaces,return,null
GroovyScriptFactory -> @Override 	public Class<?>[] getScriptInterfaces();1428099805;Groovy scripts determine their interfaces themselves,_hence we don't need to explicitly expose interfaces here._@return {@code null} always;@Override_	public Class<?>[] getScriptInterfaces() {_		return null__	};groovy,scripts,determine,their,interfaces,themselves,hence,we,don,t,need,to,explicitly,expose,interfaces,here,return,code,null,always;override,public,class,get,script,interfaces,return,null
GroovyScriptFactory -> @Override 	public Class<?>[] getScriptInterfaces();1457697320;Groovy scripts determine their interfaces themselves,_hence we don't need to explicitly expose interfaces here._@return {@code null} always;@Override_	public Class<?>[] getScriptInterfaces() {_		return null__	};groovy,scripts,determine,their,interfaces,themselves,hence,we,don,t,need,to,explicitly,expose,interfaces,here,return,code,null,always;override,public,class,get,script,interfaces,return,null
GroovyScriptFactory -> @Override 	public Class<?>[] getScriptInterfaces();1467362634;Groovy scripts determine their interfaces themselves,_hence we don't need to explicitly expose interfaces here._@return {@code null} always;@Override_	public Class<?>[] getScriptInterfaces() {_		return null__	};groovy,scripts,determine,their,interfaces,themselves,hence,we,don,t,need,to,explicitly,expose,interfaces,here,return,code,null,always;override,public,class,get,script,interfaces,return,null
GroovyScriptFactory -> @Override 	public Class<?>[] getScriptInterfaces();1468948866;Groovy scripts determine their interfaces themselves,_hence we don't need to explicitly expose interfaces here._@return {@code null} always;@Override_	public Class<?>[] getScriptInterfaces() {_		return null__	};groovy,scripts,determine,their,interfaces,themselves,hence,we,don,t,need,to,explicitly,expose,interfaces,here,return,code,null,always;override,public,class,get,script,interfaces,return,null
GroovyScriptFactory -> @Override 	public Class<?>[] getScriptInterfaces();1471387670;Groovy scripts determine their interfaces themselves,_hence we don't need to explicitly expose interfaces here._@return {@code null} always;@Override_	public Class<?>[] getScriptInterfaces() {_		return null__	};groovy,scripts,determine,their,interfaces,themselves,hence,we,don,t,need,to,explicitly,expose,interfaces,here,return,code,null,always;override,public,class,get,script,interfaces,return,null
GroovyScriptFactory -> @Override 	public Class<?>[] getScriptInterfaces();1471426189;Groovy scripts determine their interfaces themselves,_hence we don't need to explicitly expose interfaces here._@return {@code null} always;@Override_	public Class<?>[] getScriptInterfaces() {_		return null__	};groovy,scripts,determine,their,interfaces,themselves,hence,we,don,t,need,to,explicitly,expose,interfaces,here,return,code,null,always;override,public,class,get,script,interfaces,return,null
GroovyScriptFactory -> @Override 	public Class<?>[] getScriptInterfaces();1495868221;Groovy scripts determine their interfaces themselves,_hence we don't need to explicitly expose interfaces here._@return {@code null} always;@Override_	public Class<?>[] getScriptInterfaces() {_		return null__	};groovy,scripts,determine,their,interfaces,themselves,hence,we,don,t,need,to,explicitly,expose,interfaces,here,return,code,null,always;override,public,class,get,script,interfaces,return,null
GroovyScriptFactory -> @Override 	public Class<?>[] getScriptInterfaces();1496242568;Groovy scripts determine their interfaces themselves,_hence we don't need to explicitly expose interfaces here._@return {@code null} always;@Override_	public Class<?>[] getScriptInterfaces() {_		return null__	};groovy,scripts,determine,their,interfaces,themselves,hence,we,don,t,need,to,explicitly,expose,interfaces,here,return,code,null,always;override,public,class,get,script,interfaces,return,null
GroovyScriptFactory -> @Override 	public Class<?>[] getScriptInterfaces();1496837955;Groovy scripts determine their interfaces themselves,_hence we don't need to explicitly expose interfaces here._@return {@code null} always;@Override_	public Class<?>[] getScriptInterfaces() {_		return null__	};groovy,scripts,determine,their,interfaces,themselves,hence,we,don,t,need,to,explicitly,expose,interfaces,here,return,code,null,always;override,public,class,get,script,interfaces,return,null
GroovyScriptFactory -> @Override 	public Class<?>[] getScriptInterfaces();1498780456;Groovy scripts determine their interfaces themselves,_hence we don't need to explicitly expose interfaces here._@return {@code null} always;@Override_	public Class<?>[] getScriptInterfaces() {_		return null__	};groovy,scripts,determine,their,interfaces,themselves,hence,we,don,t,need,to,explicitly,expose,interfaces,here,return,code,null,always;override,public,class,get,script,interfaces,return,null
GroovyScriptFactory -> @Override 	public Class[] getScriptInterfaces();1356735495;Groovy scripts determine their interfaces themselves,_hence we don't need to explicitly expose interfaces here._@return {@code null} always;@Override_	public Class[] getScriptInterfaces() {_		return null__	};groovy,scripts,determine,their,interfaces,themselves,hence,we,don,t,need,to,explicitly,expose,interfaces,here,return,code,null,always;override,public,class,get,script,interfaces,return,null
GroovyScriptFactory -> @Override 	public Class[] getScriptInterfaces();1368482696;Groovy scripts determine their interfaces themselves,_hence we don't need to explicitly expose interfaces here._@return {@code null} always;@Override_	public Class[] getScriptInterfaces() {_		return null__	};groovy,scripts,determine,their,interfaces,themselves,hence,we,don,t,need,to,explicitly,expose,interfaces,here,return,code,null,always;override,public,class,get,script,interfaces,return,null
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, @Nullable CompilerConfiguration compilerConfiguration);1495868221;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can create a custom MetaClass_to supply missing methods and otherwise change the behavior of the object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param compilerConfiguration a custom compiler configuration to be applied_to the GroovyClassLoader (may be {@code null})_@since 4.3.3_@see GroovyClassLoader#GroovyClassLoader(ClassLoader, CompilerConfiguration);public GroovyScriptFactory(String scriptSourceLocator, @Nullable CompilerConfiguration compilerConfiguration) {_		this(scriptSourceLocator)__		this.compilerConfiguration = compilerConfiguration__	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,create,a,custom,meta,class,to,supply,missing,methods,and,otherwise,change,the,behavior,of,the,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,compiler,configuration,a,custom,compiler,configuration,to,be,applied,to,the,groovy,class,loader,may,be,code,null,since,4,3,3,see,groovy,class,loader,groovy,class,loader,class,loader,compiler,configuration;public,groovy,script,factory,string,script,source,locator,nullable,compiler,configuration,compiler,configuration,this,script,source,locator,this,compiler,configuration,compiler,configuration
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, @Nullable CompilerConfiguration compilerConfiguration);1496242568;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can create a custom MetaClass_to supply missing methods and otherwise change the behavior of the object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param compilerConfiguration a custom compiler configuration to be applied_to the GroovyClassLoader (may be {@code null})_@since 4.3.3_@see GroovyClassLoader#GroovyClassLoader(ClassLoader, CompilerConfiguration);public GroovyScriptFactory(String scriptSourceLocator, @Nullable CompilerConfiguration compilerConfiguration) {_		this(scriptSourceLocator)__		this.compilerConfiguration = compilerConfiguration__	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,create,a,custom,meta,class,to,supply,missing,methods,and,otherwise,change,the,behavior,of,the,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,compiler,configuration,a,custom,compiler,configuration,to,be,applied,to,the,groovy,class,loader,may,be,code,null,since,4,3,3,see,groovy,class,loader,groovy,class,loader,class,loader,compiler,configuration;public,groovy,script,factory,string,script,source,locator,nullable,compiler,configuration,compiler,configuration,this,script,source,locator,this,compiler,configuration,compiler,configuration
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, @Nullable CompilerConfiguration compilerConfiguration);1496837955;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can create a custom MetaClass_to supply missing methods and otherwise change the behavior of the object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param compilerConfiguration a custom compiler configuration to be applied_to the GroovyClassLoader (may be {@code null})_@since 4.3.3_@see GroovyClassLoader#GroovyClassLoader(ClassLoader, CompilerConfiguration);public GroovyScriptFactory(String scriptSourceLocator, @Nullable CompilerConfiguration compilerConfiguration) {_		this(scriptSourceLocator)__		this.compilerConfiguration = compilerConfiguration__	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,create,a,custom,meta,class,to,supply,missing,methods,and,otherwise,change,the,behavior,of,the,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,compiler,configuration,a,custom,compiler,configuration,to,be,applied,to,the,groovy,class,loader,may,be,code,null,since,4,3,3,see,groovy,class,loader,groovy,class,loader,class,loader,compiler,configuration;public,groovy,script,factory,string,script,source,locator,nullable,compiler,configuration,compiler,configuration,this,script,source,locator,this,compiler,configuration,compiler,configuration
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, @Nullable CompilerConfiguration compilerConfiguration);1498780456;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can create a custom MetaClass_to supply missing methods and otherwise change the behavior of the object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param compilerConfiguration a custom compiler configuration to be applied_to the GroovyClassLoader (may be {@code null})_@since 4.3.3_@see GroovyClassLoader#GroovyClassLoader(ClassLoader, CompilerConfiguration);public GroovyScriptFactory(String scriptSourceLocator, @Nullable CompilerConfiguration compilerConfiguration) {_		this(scriptSourceLocator)__		this.compilerConfiguration = compilerConfiguration__	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,create,a,custom,meta,class,to,supply,missing,methods,and,otherwise,change,the,behavior,of,the,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,compiler,configuration,a,custom,compiler,configuration,to,be,applied,to,the,groovy,class,loader,may,be,code,null,since,4,3,3,see,groovy,class,loader,groovy,class,loader,class,loader,compiler,configuration;public,groovy,script,factory,string,script,source,locator,nullable,compiler,configuration,compiler,configuration,this,script,source,locator,this,compiler,configuration,compiler,configuration
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, @Nullable CompilerConfiguration compilerConfiguration);1502974979;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can create a custom MetaClass_to supply missing methods and otherwise change the behavior of the object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param compilerConfiguration a custom compiler configuration to be applied_to the GroovyClassLoader (may be {@code null})_@since 4.3.3_@see GroovyClassLoader#GroovyClassLoader(ClassLoader, CompilerConfiguration);public GroovyScriptFactory(String scriptSourceLocator, @Nullable CompilerConfiguration compilerConfiguration) {_		this(scriptSourceLocator)__		this.compilerConfiguration = compilerConfiguration__	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,create,a,custom,meta,class,to,supply,missing,methods,and,otherwise,change,the,behavior,of,the,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,compiler,configuration,a,custom,compiler,configuration,to,be,applied,to,the,groovy,class,loader,may,be,code,null,since,4,3,3,see,groovy,class,loader,groovy,class,loader,class,loader,compiler,configuration;public,groovy,script,factory,string,script,source,locator,nullable,compiler,configuration,compiler,configuration,this,script,source,locator,this,compiler,configuration,compiler,configuration
GroovyScriptFactory -> protected Object executeScript(ScriptSource scriptSource, Class scriptClass) throws ScriptCompilationException;1328020251;Instantiate the given Groovy script class and run it if necessary._@param scriptSource the source for the underlying script_@param scriptClass the Groovy script class_@return the result object (either an instance of the script class_or the result of running the script instance)_@throws ScriptCompilationException in case of instantiation failure;protected Object executeScript(ScriptSource scriptSource, Class scriptClass) throws ScriptCompilationException {_		try {_			GroovyObject goo = (GroovyObject) scriptClass.newInstance()___			if (this.groovyObjectCustomizer != null) {_				_				this.groovyObjectCustomizer.customize(goo)__			}__			if (goo instanceof Script) {_				_				return ((Script) goo).run()__			}_			else {_				_				return goo__			}_		}_		catch (InstantiationException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not instantiate Groovy script class: " + scriptClass.getName(), ex)__		}_		catch (IllegalAccessException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not access Groovy script constructor: " + scriptClass.getName(), ex)__		}_	};instantiate,the,given,groovy,script,class,and,run,it,if,necessary,param,script,source,the,source,for,the,underlying,script,param,script,class,the,groovy,script,class,return,the,result,object,either,an,instance,of,the,script,class,or,the,result,of,running,the,script,instance,throws,script,compilation,exception,in,case,of,instantiation,failure;protected,object,execute,script,script,source,script,source,class,script,class,throws,script,compilation,exception,try,groovy,object,goo,groovy,object,script,class,new,instance,if,this,groovy,object,customizer,null,this,groovy,object,customizer,customize,goo,if,goo,instanceof,script,return,script,goo,run,else,return,goo,catch,instantiation,exception,ex,throw,new,script,compilation,exception,script,source,could,not,instantiate,groovy,script,class,script,class,get,name,ex,catch,illegal,access,exception,ex,throw,new,script,compilation,exception,script,source,could,not,access,groovy,script,constructor,script,class,get,name,ex
GroovyScriptFactory -> protected Object executeScript(ScriptSource scriptSource, Class scriptClass) throws ScriptCompilationException;1356735495;Instantiate the given Groovy script class and run it if necessary._@param scriptSource the source for the underlying script_@param scriptClass the Groovy script class_@return the result object (either an instance of the script class_or the result of running the script instance)_@throws ScriptCompilationException in case of instantiation failure;protected Object executeScript(ScriptSource scriptSource, Class scriptClass) throws ScriptCompilationException {_		try {_			GroovyObject goo = (GroovyObject) scriptClass.newInstance()___			if (this.groovyObjectCustomizer != null) {_				_				this.groovyObjectCustomizer.customize(goo)__			}__			if (goo instanceof Script) {_				_				return ((Script) goo).run()__			}_			else {_				_				return goo__			}_		}_		catch (InstantiationException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not instantiate Groovy script class: " + scriptClass.getName(), ex)__		}_		catch (IllegalAccessException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not access Groovy script constructor: " + scriptClass.getName(), ex)__		}_	};instantiate,the,given,groovy,script,class,and,run,it,if,necessary,param,script,source,the,source,for,the,underlying,script,param,script,class,the,groovy,script,class,return,the,result,object,either,an,instance,of,the,script,class,or,the,result,of,running,the,script,instance,throws,script,compilation,exception,in,case,of,instantiation,failure;protected,object,execute,script,script,source,script,source,class,script,class,throws,script,compilation,exception,try,groovy,object,goo,groovy,object,script,class,new,instance,if,this,groovy,object,customizer,null,this,groovy,object,customizer,customize,goo,if,goo,instanceof,script,return,script,goo,run,else,return,goo,catch,instantiation,exception,ex,throw,new,script,compilation,exception,script,source,could,not,instantiate,groovy,script,class,script,class,get,name,ex,catch,illegal,access,exception,ex,throw,new,script,compilation,exception,script,source,could,not,access,groovy,script,constructor,script,class,get,name,ex
GroovyScriptFactory -> protected Object executeScript(ScriptSource scriptSource, Class scriptClass) throws ScriptCompilationException;1357119239;Instantiate the given Groovy script class and run it if necessary._@param scriptSource the source for the underlying script_@param scriptClass the Groovy script class_@return the result object (either an instance of the script class_or the result of running the script instance)_@throws ScriptCompilationException in case of instantiation failure;protected Object executeScript(ScriptSource scriptSource, Class scriptClass) throws ScriptCompilationException {_		try {_			GroovyObject goo = (GroovyObject) scriptClass.newInstance()___			if (this.groovyObjectCustomizer != null) {_				_				this.groovyObjectCustomizer.customize(goo)__			}__			if (goo instanceof Script) {_				_				return ((Script) goo).run()__			}_			else {_				_				return goo__			}_		}_		catch (InstantiationException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not instantiate Groovy script class: " + scriptClass.getName(), ex)__		}_		catch (IllegalAccessException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not access Groovy script constructor: " + scriptClass.getName(), ex)__		}_	};instantiate,the,given,groovy,script,class,and,run,it,if,necessary,param,script,source,the,source,for,the,underlying,script,param,script,class,the,groovy,script,class,return,the,result,object,either,an,instance,of,the,script,class,or,the,result,of,running,the,script,instance,throws,script,compilation,exception,in,case,of,instantiation,failure;protected,object,execute,script,script,source,script,source,class,script,class,throws,script,compilation,exception,try,groovy,object,goo,groovy,object,script,class,new,instance,if,this,groovy,object,customizer,null,this,groovy,object,customizer,customize,goo,if,goo,instanceof,script,return,script,goo,run,else,return,goo,catch,instantiation,exception,ex,throw,new,script,compilation,exception,script,source,could,not,instantiate,groovy,script,class,script,class,get,name,ex,catch,illegal,access,exception,ex,throw,new,script,compilation,exception,script,source,could,not,access,groovy,script,constructor,script,class,get,name,ex
GroovyScriptFactory -> protected Object executeScript(ScriptSource scriptSource, Class scriptClass) throws ScriptCompilationException;1363729214;Instantiate the given Groovy script class and run it if necessary._@param scriptSource the source for the underlying script_@param scriptClass the Groovy script class_@return the result object (either an instance of the script class_or the result of running the script instance)_@throws ScriptCompilationException in case of instantiation failure;protected Object executeScript(ScriptSource scriptSource, Class scriptClass) throws ScriptCompilationException {_		try {_			GroovyObject goo = (GroovyObject) scriptClass.newInstance()___			if (this.groovyObjectCustomizer != null) {_				_				this.groovyObjectCustomizer.customize(goo)__			}__			if (goo instanceof Script) {_				_				return ((Script) goo).run()__			}_			else {_				_				return goo__			}_		}_		catch (InstantiationException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not instantiate Groovy script class: " + scriptClass.getName(), ex)__		}_		catch (IllegalAccessException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not access Groovy script constructor: " + scriptClass.getName(), ex)__		}_	};instantiate,the,given,groovy,script,class,and,run,it,if,necessary,param,script,source,the,source,for,the,underlying,script,param,script,class,the,groovy,script,class,return,the,result,object,either,an,instance,of,the,script,class,or,the,result,of,running,the,script,instance,throws,script,compilation,exception,in,case,of,instantiation,failure;protected,object,execute,script,script,source,script,source,class,script,class,throws,script,compilation,exception,try,groovy,object,goo,groovy,object,script,class,new,instance,if,this,groovy,object,customizer,null,this,groovy,object,customizer,customize,goo,if,goo,instanceof,script,return,script,goo,run,else,return,goo,catch,instantiation,exception,ex,throw,new,script,compilation,exception,script,source,could,not,instantiate,groovy,script,class,script,class,get,name,ex,catch,illegal,access,exception,ex,throw,new,script,compilation,exception,script,source,could,not,access,groovy,script,constructor,script,class,get,name,ex
GroovyScriptFactory -> protected Object executeScript(ScriptSource scriptSource, Class scriptClass) throws ScriptCompilationException;1368482696;Instantiate the given Groovy script class and run it if necessary._@param scriptSource the source for the underlying script_@param scriptClass the Groovy script class_@return the result object (either an instance of the script class_or the result of running the script instance)_@throws ScriptCompilationException in case of instantiation failure;protected Object executeScript(ScriptSource scriptSource, Class scriptClass) throws ScriptCompilationException {_		try {_			GroovyObject goo = (GroovyObject) scriptClass.newInstance()___			if (this.groovyObjectCustomizer != null) {_				_				this.groovyObjectCustomizer.customize(goo)__			}__			if (goo instanceof Script) {_				_				return ((Script) goo).run()__			}_			else {_				_				return goo__			}_		}_		catch (InstantiationException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not instantiate Groovy script class: " + scriptClass.getName(), ex)__		}_		catch (IllegalAccessException ex) {_			throw new ScriptCompilationException(_					scriptSource, "Could not access Groovy script constructor: " + scriptClass.getName(), ex)__		}_	};instantiate,the,given,groovy,script,class,and,run,it,if,necessary,param,script,source,the,source,for,the,underlying,script,param,script,class,the,groovy,script,class,return,the,result,object,either,an,instance,of,the,script,class,or,the,result,of,running,the,script,instance,throws,script,compilation,exception,in,case,of,instantiation,failure;protected,object,execute,script,script,source,script,source,class,script,class,throws,script,compilation,exception,try,groovy,object,goo,groovy,object,script,class,new,instance,if,this,groovy,object,customizer,null,this,groovy,object,customizer,customize,goo,if,goo,instanceof,script,return,script,goo,run,else,return,goo,catch,instantiation,exception,ex,throw,new,script,compilation,exception,script,source,could,not,instantiate,groovy,script,class,script,class,get,name,ex,catch,illegal,access,exception,ex,throw,new,script,compilation,exception,script,source,could,not,access,groovy,script,constructor,script,class,get,name,ex
GroovyScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, Class[] actualInterfaces) 			throws IOException, ScriptCompilationException;1356735495;Loads and parses the Groovy script via the GroovyClassLoader._@see groovy.lang.GroovyClassLoader;@Override_	public Object getScriptedObject(ScriptSource scriptSource, Class[] actualInterfaces)_			throws IOException, ScriptCompilationException {__		try {_			Class scriptClassToExecute = null___			synchronized (this.scriptClassMonitor) {_				this.wasModifiedForTypeCheck = false___				if (this.cachedResult != null) {_					Object result = this.cachedResult.object__					this.cachedResult = null__					return result__				}__				if (this.scriptClass == null || scriptSource.isModified()) {_					_					this.scriptClass = getGroovyClassLoader().parseClass(_							scriptSource.getScriptAsString(), scriptSource.suggestedClassName())___					if (Script.class.isAssignableFrom(this.scriptClass)) {_						_						Object result = executeScript(scriptSource, this.scriptClass)__						this.scriptResultClass = (result != null ? result.getClass() : null)__						return result__					}_					else {_						this.scriptResultClass = this.scriptClass__					}_				}_				scriptClassToExecute = this.scriptClass__			}__			_			return executeScript(scriptSource, scriptClassToExecute)__		}_		catch (CompilationFailedException ex) {_			throw new ScriptCompilationException(scriptSource, ex)__		}_	};loads,and,parses,the,groovy,script,via,the,groovy,class,loader,see,groovy,lang,groovy,class,loader;override,public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,try,class,script,class,to,execute,null,synchronized,this,script,class,monitor,this,was,modified,for,type,check,false,if,this,cached,result,null,object,result,this,cached,result,object,this,cached,result,null,return,result,if,this,script,class,null,script,source,is,modified,this,script,class,get,groovy,class,loader,parse,class,script,source,get,script,as,string,script,source,suggested,class,name,if,script,class,is,assignable,from,this,script,class,object,result,execute,script,script,source,this,script,class,this,script,result,class,result,null,result,get,class,null,return,result,else,this,script,result,class,this,script,class,script,class,to,execute,this,script,class,return,execute,script,script,source,script,class,to,execute,catch,compilation,failed,exception,ex,throw,new,script,compilation,exception,script,source,ex
GroovyScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, Class[] actualInterfaces) 			throws IOException, ScriptCompilationException;1368482696;Loads and parses the Groovy script via the GroovyClassLoader._@see groovy.lang.GroovyClassLoader;@Override_	public Object getScriptedObject(ScriptSource scriptSource, Class[] actualInterfaces)_			throws IOException, ScriptCompilationException {__		try {_			Class scriptClassToExecute = null___			synchronized (this.scriptClassMonitor) {_				this.wasModifiedForTypeCheck = false___				if (this.cachedResult != null) {_					Object result = this.cachedResult.object__					this.cachedResult = null__					return result__				}__				if (this.scriptClass == null || scriptSource.isModified()) {_					_					this.scriptClass = getGroovyClassLoader().parseClass(_							scriptSource.getScriptAsString(), scriptSource.suggestedClassName())___					if (Script.class.isAssignableFrom(this.scriptClass)) {_						_						Object result = executeScript(scriptSource, this.scriptClass)__						this.scriptResultClass = (result != null ? result.getClass() : null)__						return result__					}_					else {_						this.scriptResultClass = this.scriptClass__					}_				}_				scriptClassToExecute = this.scriptClass__			}__			_			return executeScript(scriptSource, scriptClassToExecute)__		}_		catch (CompilationFailedException ex) {_			throw new ScriptCompilationException(scriptSource, ex)__		}_	};loads,and,parses,the,groovy,script,via,the,groovy,class,loader,see,groovy,lang,groovy,class,loader;override,public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,try,class,script,class,to,execute,null,synchronized,this,script,class,monitor,this,was,modified,for,type,check,false,if,this,cached,result,null,object,result,this,cached,result,object,this,cached,result,null,return,result,if,this,script,class,null,script,source,is,modified,this,script,class,get,groovy,class,loader,parse,class,script,source,get,script,as,string,script,source,suggested,class,name,if,script,class,is,assignable,from,this,script,class,object,result,execute,script,script,source,this,script,class,this,script,result,class,result,null,result,get,class,null,return,result,else,this,script,result,class,this,script,class,script,class,to,execute,this,script,class,return,execute,script,script,source,script,class,to,execute,catch,compilation,failed,exception,ex,throw,new,script,compilation,exception,script,source,ex
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, @Nullable GroovyObjectCustomizer groovyObjectCustomizer);1495868221;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can create a custom MetaClass_to supply missing methods and otherwise change the behavior of the object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param groovyObjectCustomizer a customizer that can set a custom metaclass_or make other changes to the GroovyObject created by this factory_(may be {@code null})_@see GroovyObjectCustomizer#customize;public GroovyScriptFactory(String scriptSourceLocator, @Nullable GroovyObjectCustomizer groovyObjectCustomizer) {_		this(scriptSourceLocator)__		this.groovyObjectCustomizer = groovyObjectCustomizer__	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,create,a,custom,meta,class,to,supply,missing,methods,and,otherwise,change,the,behavior,of,the,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,groovy,object,customizer,a,customizer,that,can,set,a,custom,metaclass,or,make,other,changes,to,the,groovy,object,created,by,this,factory,may,be,code,null,see,groovy,object,customizer,customize;public,groovy,script,factory,string,script,source,locator,nullable,groovy,object,customizer,groovy,object,customizer,this,script,source,locator,this,groovy,object,customizer,groovy,object,customizer
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, @Nullable GroovyObjectCustomizer groovyObjectCustomizer);1496242568;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can create a custom MetaClass_to supply missing methods and otherwise change the behavior of the object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param groovyObjectCustomizer a customizer that can set a custom metaclass_or make other changes to the GroovyObject created by this factory_(may be {@code null})_@see GroovyObjectCustomizer#customize;public GroovyScriptFactory(String scriptSourceLocator, @Nullable GroovyObjectCustomizer groovyObjectCustomizer) {_		this(scriptSourceLocator)__		this.groovyObjectCustomizer = groovyObjectCustomizer__	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,create,a,custom,meta,class,to,supply,missing,methods,and,otherwise,change,the,behavior,of,the,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,groovy,object,customizer,a,customizer,that,can,set,a,custom,metaclass,or,make,other,changes,to,the,groovy,object,created,by,this,factory,may,be,code,null,see,groovy,object,customizer,customize;public,groovy,script,factory,string,script,source,locator,nullable,groovy,object,customizer,groovy,object,customizer,this,script,source,locator,this,groovy,object,customizer,groovy,object,customizer
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, @Nullable GroovyObjectCustomizer groovyObjectCustomizer);1496837955;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can create a custom MetaClass_to supply missing methods and otherwise change the behavior of the object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param groovyObjectCustomizer a customizer that can set a custom metaclass_or make other changes to the GroovyObject created by this factory_(may be {@code null})_@see GroovyObjectCustomizer#customize;public GroovyScriptFactory(String scriptSourceLocator, @Nullable GroovyObjectCustomizer groovyObjectCustomizer) {_		this(scriptSourceLocator)__		this.groovyObjectCustomizer = groovyObjectCustomizer__	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,create,a,custom,meta,class,to,supply,missing,methods,and,otherwise,change,the,behavior,of,the,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,groovy,object,customizer,a,customizer,that,can,set,a,custom,metaclass,or,make,other,changes,to,the,groovy,object,created,by,this,factory,may,be,code,null,see,groovy,object,customizer,customize;public,groovy,script,factory,string,script,source,locator,nullable,groovy,object,customizer,groovy,object,customizer,this,script,source,locator,this,groovy,object,customizer,groovy,object,customizer
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, @Nullable GroovyObjectCustomizer groovyObjectCustomizer);1498780456;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can create a custom MetaClass_to supply missing methods and otherwise change the behavior of the object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param groovyObjectCustomizer a customizer that can set a custom metaclass_or make other changes to the GroovyObject created by this factory_(may be {@code null})_@see GroovyObjectCustomizer#customize;public GroovyScriptFactory(String scriptSourceLocator, @Nullable GroovyObjectCustomizer groovyObjectCustomizer) {_		this(scriptSourceLocator)__		this.groovyObjectCustomizer = groovyObjectCustomizer__	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,create,a,custom,meta,class,to,supply,missing,methods,and,otherwise,change,the,behavior,of,the,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,groovy,object,customizer,a,customizer,that,can,set,a,custom,metaclass,or,make,other,changes,to,the,groovy,object,created,by,this,factory,may,be,code,null,see,groovy,object,customizer,customize;public,groovy,script,factory,string,script,source,locator,nullable,groovy,object,customizer,groovy,object,customizer,this,script,source,locator,this,groovy,object,customizer,groovy,object,customizer
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator, @Nullable GroovyObjectCustomizer groovyObjectCustomizer);1502974979;Create a new GroovyScriptFactory for the given script source,_specifying a strategy interface that can create a custom MetaClass_to supply missing methods and otherwise change the behavior of the object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param groovyObjectCustomizer a customizer that can set a custom metaclass_or make other changes to the GroovyObject created by this factory_(may be {@code null})_@see GroovyObjectCustomizer#customize;public GroovyScriptFactory(String scriptSourceLocator, @Nullable GroovyObjectCustomizer groovyObjectCustomizer) {_		this(scriptSourceLocator)__		this.groovyObjectCustomizer = groovyObjectCustomizer__	};create,a,new,groovy,script,factory,for,the,given,script,source,specifying,a,strategy,interface,that,can,create,a,custom,meta,class,to,supply,missing,methods,and,otherwise,change,the,behavior,of,the,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,groovy,object,customizer,a,customizer,that,can,set,a,custom,metaclass,or,make,other,changes,to,the,groovy,object,created,by,this,factory,may,be,code,null,see,groovy,object,customizer,customize;public,groovy,script,factory,string,script,source,locator,nullable,groovy,object,customizer,groovy,object,customizer,this,script,source,locator,this,groovy,object,customizer,groovy,object,customizer
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator);1328020251;Create a new GroovyScriptFactory for the given script source._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public GroovyScriptFactory(String scriptSourceLocator) {_		this(scriptSourceLocator, null)__	};create,a,new,groovy,script,factory,for,the,given,script,source,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,groovy,script,factory,string,script,source,locator,this,script,source,locator,null
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator);1356735495;Create a new GroovyScriptFactory for the given script source._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public GroovyScriptFactory(String scriptSourceLocator) {_		this(scriptSourceLocator, null)__	};create,a,new,groovy,script,factory,for,the,given,script,source,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,groovy,script,factory,string,script,source,locator,this,script,source,locator,null
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator);1357119239;Create a new GroovyScriptFactory for the given script source._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public GroovyScriptFactory(String scriptSourceLocator) {_		this(scriptSourceLocator, null)__	};create,a,new,groovy,script,factory,for,the,given,script,source,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,groovy,script,factory,string,script,source,locator,this,script,source,locator,null
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator);1363729214;Create a new GroovyScriptFactory for the given script source._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public GroovyScriptFactory(String scriptSourceLocator) {_		this(scriptSourceLocator, null)__	};create,a,new,groovy,script,factory,for,the,given,script,source,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,groovy,script,factory,string,script,source,locator,this,script,source,locator,null
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator);1368482696;Create a new GroovyScriptFactory for the given script source._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public GroovyScriptFactory(String scriptSourceLocator) {_		this(scriptSourceLocator, null)__	};create,a,new,groovy,script,factory,for,the,given,script,source,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,groovy,script,factory,string,script,source,locator,this,script,source,locator,null
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator);1382746895;Create a new GroovyScriptFactory for the given script source._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public GroovyScriptFactory(String scriptSourceLocator) {_		this(scriptSourceLocator, null)__	};create,a,new,groovy,script,factory,for,the,given,script,source,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,groovy,script,factory,string,script,source,locator,this,script,source,locator,null
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator);1428099805;Create a new GroovyScriptFactory for the given script source._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public GroovyScriptFactory(String scriptSourceLocator) {_		this(scriptSourceLocator, null)__	};create,a,new,groovy,script,factory,for,the,given,script,source,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,groovy,script,factory,string,script,source,locator,this,script,source,locator,null
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator);1457697320;Create a new GroovyScriptFactory for the given script source._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public GroovyScriptFactory(String scriptSourceLocator) {_		this(scriptSourceLocator, null)__	};create,a,new,groovy,script,factory,for,the,given,script,source,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,groovy,script,factory,string,script,source,locator,this,script,source,locator,null
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator);1467362634;Create a new GroovyScriptFactory for the given script source._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public GroovyScriptFactory(String scriptSourceLocator) {_		this(scriptSourceLocator, null)__	};create,a,new,groovy,script,factory,for,the,given,script,source,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,groovy,script,factory,string,script,source,locator,this,script,source,locator,null
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator);1468948866;Create a new GroovyScriptFactory for the given script source._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public GroovyScriptFactory(String scriptSourceLocator) {_		this(scriptSourceLocator, null)__	};create,a,new,groovy,script,factory,for,the,given,script,source,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,groovy,script,factory,string,script,source,locator,this,script,source,locator,null
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator);1471387670;Create a new GroovyScriptFactory for the given script source._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public GroovyScriptFactory(String scriptSourceLocator) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__	};create,a,new,groovy,script,factory,for,the,given,script,source,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,groovy,script,factory,string,script,source,locator,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator);1471426189;Create a new GroovyScriptFactory for the given script source._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public GroovyScriptFactory(String scriptSourceLocator) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__	};create,a,new,groovy,script,factory,for,the,given,script,source,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,groovy,script,factory,string,script,source,locator,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator);1495868221;Create a new GroovyScriptFactory for the given script source._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public GroovyScriptFactory(String scriptSourceLocator) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__	};create,a,new,groovy,script,factory,for,the,given,script,source,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,groovy,script,factory,string,script,source,locator,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator);1496242568;Create a new GroovyScriptFactory for the given script source._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public GroovyScriptFactory(String scriptSourceLocator) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__	};create,a,new,groovy,script,factory,for,the,given,script,source,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,groovy,script,factory,string,script,source,locator,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator);1496837955;Create a new GroovyScriptFactory for the given script source._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public GroovyScriptFactory(String scriptSourceLocator) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__	};create,a,new,groovy,script,factory,for,the,given,script,source,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,groovy,script,factory,string,script,source,locator,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator);1498780456;Create a new GroovyScriptFactory for the given script source._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public GroovyScriptFactory(String scriptSourceLocator) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__	};create,a,new,groovy,script,factory,for,the,given,script,source,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,groovy,script,factory,string,script,source,locator,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator
GroovyScriptFactory -> public GroovyScriptFactory(String scriptSourceLocator);1502974979;Create a new GroovyScriptFactory for the given script source._<p>We don't need to specify script interfaces here, since_a Groovy script defines its Java interfaces itself._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public GroovyScriptFactory(String scriptSourceLocator) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__	};create,a,new,groovy,script,factory,for,the,given,script,source,p,we,don,t,need,to,specify,script,interfaces,here,since,a,groovy,script,defines,its,java,interfaces,itself,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,groovy,script,factory,string,script,source,locator,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator
GroovyScriptFactory -> public Class[] getScriptInterfaces();1328020251;Groovy scripts determine their interfaces themselves,_hence we don't need to explicitly expose interfaces here._@return <code>null</code> always;public Class[] getScriptInterfaces() {_		return null__	};groovy,scripts,determine,their,interfaces,themselves,hence,we,don,t,need,to,explicitly,expose,interfaces,here,return,code,null,code,always;public,class,get,script,interfaces,return,null
GroovyScriptFactory -> public Class[] getScriptInterfaces();1357119239;Groovy scripts determine their interfaces themselves,_hence we don't need to explicitly expose interfaces here._@return {@code null} always;public Class[] getScriptInterfaces() {_		return null__	};groovy,scripts,determine,their,interfaces,themselves,hence,we,don,t,need,to,explicitly,expose,interfaces,here,return,code,null,always;public,class,get,script,interfaces,return,null
GroovyScriptFactory -> public Class[] getScriptInterfaces();1363729214;Groovy scripts determine their interfaces themselves,_hence we don't need to explicitly expose interfaces here._@return {@code null} always;public Class[] getScriptInterfaces() {_		return null__	};groovy,scripts,determine,their,interfaces,themselves,hence,we,don,t,need,to,explicitly,expose,interfaces,here,return,code,null,always;public,class,get,script,interfaces,return,null
