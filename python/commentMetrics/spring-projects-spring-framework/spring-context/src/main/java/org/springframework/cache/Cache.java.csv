# id;timestamp;commentText;codeText;commentWords;codeWords
Cache -> @Nullable 	<T> T get(Object key, Callable<T> valueLoader)_;1496837955;Return the value to which this cache maps the specified key, obtaining_that value from {@code valueLoader} if necessary. This method provides_a simple substitute for the conventional "if cached, return_ otherwise_create, cache and return" pattern._<p>If possible, implementations should ensure that the loading operation_is synchronized so that the specified {@code valueLoader} is only called_once in case of concurrent access on the same key._<p>If the {@code valueLoader} throws an exception, it is wrapped in_a {@link ValueRetrievalException}_@param key the key whose associated value is to be returned_@return the value to which this cache maps the specified key_@throws ValueRetrievalException if the {@code valueLoader} throws an exception_@since 4.3;@Nullable_	<T> T get(Object key, Callable<T> valueLoader)_;return,the,value,to,which,this,cache,maps,the,specified,key,obtaining,that,value,from,code,value,loader,if,necessary,this,method,provides,a,simple,substitute,for,the,conventional,if,cached,return,otherwise,create,cache,and,return,pattern,p,if,possible,implementations,should,ensure,that,the,loading,operation,is,synchronized,so,that,the,specified,code,value,loader,is,only,called,once,in,case,of,concurrent,access,on,the,same,key,p,if,the,code,value,loader,throws,an,exception,it,is,wrapped,in,a,link,value,retrieval,exception,param,key,the,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,throws,value,retrieval,exception,if,the,code,value,loader,throws,an,exception,since,4,3;nullable,t,t,get,object,key,callable,t,value,loader
Cache -> @Nullable 	<T> T get(Object key, Callable<T> valueLoader)_;1498780456;Return the value to which this cache maps the specified key, obtaining_that value from {@code valueLoader} if necessary. This method provides_a simple substitute for the conventional "if cached, return_ otherwise_create, cache and return" pattern._<p>If possible, implementations should ensure that the loading operation_is synchronized so that the specified {@code valueLoader} is only called_once in case of concurrent access on the same key._<p>If the {@code valueLoader} throws an exception, it is wrapped in_a {@link ValueRetrievalException}_@param key the key whose associated value is to be returned_@return the value to which this cache maps the specified key_@throws ValueRetrievalException if the {@code valueLoader} throws an exception_@since 4.3;@Nullable_	<T> T get(Object key, Callable<T> valueLoader)_;return,the,value,to,which,this,cache,maps,the,specified,key,obtaining,that,value,from,code,value,loader,if,necessary,this,method,provides,a,simple,substitute,for,the,conventional,if,cached,return,otherwise,create,cache,and,return,pattern,p,if,possible,implementations,should,ensure,that,the,loading,operation,is,synchronized,so,that,the,specified,code,value,loader,is,only,called,once,in,case,of,concurrent,access,on,the,same,key,p,if,the,code,value,loader,throws,an,exception,it,is,wrapped,in,a,link,value,retrieval,exception,param,key,the,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,throws,value,retrieval,exception,if,the,code,value,loader,throws,an,exception,since,4,3;nullable,t,t,get,object,key,callable,t,value,loader
Cache -> @Nullable 	<T> T get(Object key, Callable<T> valueLoader)_;1502974979;Return the value to which this cache maps the specified key, obtaining_that value from {@code valueLoader} if necessary. This method provides_a simple substitute for the conventional "if cached, return_ otherwise_create, cache and return" pattern._<p>If possible, implementations should ensure that the loading operation_is synchronized so that the specified {@code valueLoader} is only called_once in case of concurrent access on the same key._<p>If the {@code valueLoader} throws an exception, it is wrapped in_a {@link ValueRetrievalException}_@param key the key whose associated value is to be returned_@return the value to which this cache maps the specified key_@throws ValueRetrievalException if the {@code valueLoader} throws an exception_@since 4.3;@Nullable_	<T> T get(Object key, Callable<T> valueLoader)_;return,the,value,to,which,this,cache,maps,the,specified,key,obtaining,that,value,from,code,value,loader,if,necessary,this,method,provides,a,simple,substitute,for,the,conventional,if,cached,return,otherwise,create,cache,and,return,pattern,p,if,possible,implementations,should,ensure,that,the,loading,operation,is,synchronized,so,that,the,specified,code,value,loader,is,only,called,once,in,case,of,concurrent,access,on,the,same,key,p,if,the,code,value,loader,throws,an,exception,it,is,wrapped,in,a,link,value,retrieval,exception,param,key,the,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,throws,value,retrieval,exception,if,the,code,value,loader,throws,an,exception,since,4,3;nullable,t,t,get,object,key,callable,t,value,loader
Cache -> ValueWrapper get(Object key)_;1328020251;Return the value to which this cache maps the specified key. Returns_<code>null</code> if the cache contains no mapping for this key._@param key key whose associated value is to be returned._@return the value to which this cache maps the specified key,_or <code>null</code> if the cache contains no mapping for this key;ValueWrapper get(Object key)_;return,the,value,to,which,this,cache,maps,the,specified,key,returns,code,null,code,if,the,cache,contains,no,mapping,for,this,key,param,key,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,or,code,null,code,if,the,cache,contains,no,mapping,for,this,key;value,wrapper,get,object,key
Cache -> ValueWrapper get(Object key)_;1356735495;Return the value to which this cache maps the specified key. Returns_{@code null} if the cache contains no mapping for this key._@param key key whose associated value is to be returned._@return the value to which this cache maps the specified key,_or {@code null} if the cache contains no mapping for this key;ValueWrapper get(Object key)_;return,the,value,to,which,this,cache,maps,the,specified,key,returns,code,null,if,the,cache,contains,no,mapping,for,this,key,param,key,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,or,code,null,if,the,cache,contains,no,mapping,for,this,key;value,wrapper,get,object,key
Cache -> ValueWrapper get(Object key)_;1383571901;Return the value to which this cache maps the specified key._<p>Returns {@code null} if the cache contains no mapping for this key__otherwise, the cached value (which may be {@code null} itself) will_be returned in a {@link ValueWrapper}._@param key the key whose associated value is to be returned_@return the value to which this cache maps the specified key,_contained within a {@link ValueWrapper} which may also hold_a cached {@code null} value. A straight {@code null} being_returned means that the cache contains no mapping for this key._@see #get(Object, Class);ValueWrapper get(Object key)_;return,the,value,to,which,this,cache,maps,the,specified,key,p,returns,code,null,if,the,cache,contains,no,mapping,for,this,key,otherwise,the,cached,value,which,may,be,code,null,itself,will,be,returned,in,a,link,value,wrapper,param,key,the,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,contained,within,a,link,value,wrapper,which,may,also,hold,a,cached,code,null,value,a,straight,code,null,being,returned,means,that,the,cache,contains,no,mapping,for,this,key,see,get,object,class;value,wrapper,get,object,key
Cache -> ValueWrapper get(Object key)_;1395100259;Return the value to which this cache maps the specified key._<p>Returns {@code null} if the cache contains no mapping for this key__otherwise, the cached value (which may be {@code null} itself) will_be returned in a {@link ValueWrapper}._@param key the key whose associated value is to be returned_@return the value to which this cache maps the specified key,_contained within a {@link ValueWrapper} which may also hold_a cached {@code null} value. A straight {@code null} being_returned means that the cache contains no mapping for this key._@see #get(Object, Class);ValueWrapper get(Object key)_;return,the,value,to,which,this,cache,maps,the,specified,key,p,returns,code,null,if,the,cache,contains,no,mapping,for,this,key,otherwise,the,cached,value,which,may,be,code,null,itself,will,be,returned,in,a,link,value,wrapper,param,key,the,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,contained,within,a,link,value,wrapper,which,may,also,hold,a,cached,code,null,value,a,straight,code,null,being,returned,means,that,the,cache,contains,no,mapping,for,this,key,see,get,object,class;value,wrapper,get,object,key
Cache -> ValueWrapper get(Object key)_;1396517842;Return the value to which this cache maps the specified key._<p>Returns {@code null} if the cache contains no mapping for this key__otherwise, the cached value (which may be {@code null} itself) will_be returned in a {@link ValueWrapper}._@param key the key whose associated value is to be returned_@return the value to which this cache maps the specified key,_contained within a {@link ValueWrapper} which may also hold_a cached {@code null} value. A straight {@code null} being_returned means that the cache contains no mapping for this key._@see #get(Object, Class);ValueWrapper get(Object key)_;return,the,value,to,which,this,cache,maps,the,specified,key,p,returns,code,null,if,the,cache,contains,no,mapping,for,this,key,otherwise,the,cached,value,which,may,be,code,null,itself,will,be,returned,in,a,link,value,wrapper,param,key,the,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,contained,within,a,link,value,wrapper,which,may,also,hold,a,cached,code,null,value,a,straight,code,null,being,returned,means,that,the,cache,contains,no,mapping,for,this,key,see,get,object,class;value,wrapper,get,object,key
Cache -> ValueWrapper get(Object key)_;1404239431;Return the value to which this cache maps the specified key._<p>Returns {@code null} if the cache contains no mapping for this key__otherwise, the cached value (which may be {@code null} itself) will_be returned in a {@link ValueWrapper}._@param key the key whose associated value is to be returned_@return the value to which this cache maps the specified key,_contained within a {@link ValueWrapper} which may also hold_a cached {@code null} value. A straight {@code null} being_returned means that the cache contains no mapping for this key._@see #get(Object, Class);ValueWrapper get(Object key)_;return,the,value,to,which,this,cache,maps,the,specified,key,p,returns,code,null,if,the,cache,contains,no,mapping,for,this,key,otherwise,the,cached,value,which,may,be,code,null,itself,will,be,returned,in,a,link,value,wrapper,param,key,the,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,contained,within,a,link,value,wrapper,which,may,also,hold,a,cached,code,null,value,a,straight,code,null,being,returned,means,that,the,cache,contains,no,mapping,for,this,key,see,get,object,class;value,wrapper,get,object,key
Cache -> ValueWrapper get(Object key)_;1409742020;Return the value to which this cache maps the specified key._<p>Returns {@code null} if the cache contains no mapping for this key__otherwise, the cached value (which may be {@code null} itself) will_be returned in a {@link ValueWrapper}._@param key the key whose associated value is to be returned_@return the value to which this cache maps the specified key,_contained within a {@link ValueWrapper} which may also hold_a cached {@code null} value. A straight {@code null} being_returned means that the cache contains no mapping for this key._@see #get(Object, Class);ValueWrapper get(Object key)_;return,the,value,to,which,this,cache,maps,the,specified,key,p,returns,code,null,if,the,cache,contains,no,mapping,for,this,key,otherwise,the,cached,value,which,may,be,code,null,itself,will,be,returned,in,a,link,value,wrapper,param,key,the,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,contained,within,a,link,value,wrapper,which,may,also,hold,a,cached,code,null,value,a,straight,code,null,being,returned,means,that,the,cache,contains,no,mapping,for,this,key,see,get,object,class;value,wrapper,get,object,key
Cache -> ValueWrapper get(Object key)_;1429103622;Return the value to which this cache maps the specified key._<p>Returns {@code null} if the cache contains no mapping for this key__otherwise, the cached value (which may be {@code null} itself) will_be returned in a {@link ValueWrapper}._@param key the key whose associated value is to be returned_@return the value to which this cache maps the specified key,_contained within a {@link ValueWrapper} which may also hold_a cached {@code null} value. A straight {@code null} being_returned means that the cache contains no mapping for this key._@see #get(Object, Class);ValueWrapper get(Object key)_;return,the,value,to,which,this,cache,maps,the,specified,key,p,returns,code,null,if,the,cache,contains,no,mapping,for,this,key,otherwise,the,cached,value,which,may,be,code,null,itself,will,be,returned,in,a,link,value,wrapper,param,key,the,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,contained,within,a,link,value,wrapper,which,may,also,hold,a,cached,code,null,value,a,straight,code,null,being,returned,means,that,the,cache,contains,no,mapping,for,this,key,see,get,object,class;value,wrapper,get,object,key
Cache -> ValueWrapper get(Object key)_;1450701275;Return the value to which this cache maps the specified key._<p>Returns {@code null} if the cache contains no mapping for this key__otherwise, the cached value (which may be {@code null} itself) will_be returned in a {@link ValueWrapper}._@param key the key whose associated value is to be returned_@return the value to which this cache maps the specified key,_contained within a {@link ValueWrapper} which may also hold_a cached {@code null} value. A straight {@code null} being_returned means that the cache contains no mapping for this key._@see #get(Object, Class);ValueWrapper get(Object key)_;return,the,value,to,which,this,cache,maps,the,specified,key,p,returns,code,null,if,the,cache,contains,no,mapping,for,this,key,otherwise,the,cached,value,which,may,be,code,null,itself,will,be,returned,in,a,link,value,wrapper,param,key,the,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,contained,within,a,link,value,wrapper,which,may,also,hold,a,cached,code,null,value,a,straight,code,null,being,returned,means,that,the,cache,contains,no,mapping,for,this,key,see,get,object,class;value,wrapper,get,object,key
Cache -> ValueWrapper get(Object key)_;1450797566;Return the value to which this cache maps the specified key._<p>Returns {@code null} if the cache contains no mapping for this key__otherwise, the cached value (which may be {@code null} itself) will_be returned in a {@link ValueWrapper}._@param key the key whose associated value is to be returned_@return the value to which this cache maps the specified key,_contained within a {@link ValueWrapper} which may also hold_a cached {@code null} value. A straight {@code null} being_returned means that the cache contains no mapping for this key._@see #get(Object, Class);ValueWrapper get(Object key)_;return,the,value,to,which,this,cache,maps,the,specified,key,p,returns,code,null,if,the,cache,contains,no,mapping,for,this,key,otherwise,the,cached,value,which,may,be,code,null,itself,will,be,returned,in,a,link,value,wrapper,param,key,the,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,contained,within,a,link,value,wrapper,which,may,also,hold,a,cached,code,null,value,a,straight,code,null,being,returned,means,that,the,cache,contains,no,mapping,for,this,key,see,get,object,class;value,wrapper,get,object,key
Cache -> ValueWrapper get(Object key)_;1452685925;Return the value to which this cache maps the specified key._<p>Returns {@code null} if the cache contains no mapping for this key__otherwise, the cached value (which may be {@code null} itself) will_be returned in a {@link ValueWrapper}._@param key the key whose associated value is to be returned_@return the value to which this cache maps the specified key,_contained within a {@link ValueWrapper} which may also hold_a cached {@code null} value. A straight {@code null} being_returned means that the cache contains no mapping for this key._@see #get(Object, Class);ValueWrapper get(Object key)_;return,the,value,to,which,this,cache,maps,the,specified,key,p,returns,code,null,if,the,cache,contains,no,mapping,for,this,key,otherwise,the,cached,value,which,may,be,code,null,itself,will,be,returned,in,a,link,value,wrapper,param,key,the,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,contained,within,a,link,value,wrapper,which,may,also,hold,a,cached,code,null,value,a,straight,code,null,being,returned,means,that,the,cache,contains,no,mapping,for,this,key,see,get,object,class;value,wrapper,get,object,key
Cache -> ValueWrapper get(Object key)_;1461047077;Return the value to which this cache maps the specified key._<p>Returns {@code null} if the cache contains no mapping for this key__otherwise, the cached value (which may be {@code null} itself) will_be returned in a {@link ValueWrapper}._@param key the key whose associated value is to be returned_@return the value to which this cache maps the specified key,_contained within a {@link ValueWrapper} which may also hold_a cached {@code null} value. A straight {@code null} being_returned means that the cache contains no mapping for this key._@see #get(Object, Class);ValueWrapper get(Object key)_;return,the,value,to,which,this,cache,maps,the,specified,key,p,returns,code,null,if,the,cache,contains,no,mapping,for,this,key,otherwise,the,cached,value,which,may,be,code,null,itself,will,be,returned,in,a,link,value,wrapper,param,key,the,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,contained,within,a,link,value,wrapper,which,may,also,hold,a,cached,code,null,value,a,straight,code,null,being,returned,means,that,the,cache,contains,no,mapping,for,this,key,see,get,object,class;value,wrapper,get,object,key
Cache -> ValueWrapper get(Object key)_;1465306936;Return the value to which this cache maps the specified key._<p>Returns {@code null} if the cache contains no mapping for this key__otherwise, the cached value (which may be {@code null} itself) will_be returned in a {@link ValueWrapper}._@param key the key whose associated value is to be returned_@return the value to which this cache maps the specified key,_contained within a {@link ValueWrapper} which may also hold_a cached {@code null} value. A straight {@code null} being_returned means that the cache contains no mapping for this key._@see #get(Object, Class);ValueWrapper get(Object key)_;return,the,value,to,which,this,cache,maps,the,specified,key,p,returns,code,null,if,the,cache,contains,no,mapping,for,this,key,otherwise,the,cached,value,which,may,be,code,null,itself,will,be,returned,in,a,link,value,wrapper,param,key,the,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,contained,within,a,link,value,wrapper,which,may,also,hold,a,cached,code,null,value,a,straight,code,null,being,returned,means,that,the,cache,contains,no,mapping,for,this,key,see,get,object,class;value,wrapper,get,object,key
Cache -> ValueWrapper get(Object key)_;1467808333;Return the value to which this cache maps the specified key._<p>Returns {@code null} if the cache contains no mapping for this key__otherwise, the cached value (which may be {@code null} itself) will_be returned in a {@link ValueWrapper}._@param key the key whose associated value is to be returned_@return the value to which this cache maps the specified key,_contained within a {@link ValueWrapper} which may also hold_a cached {@code null} value. A straight {@code null} being_returned means that the cache contains no mapping for this key._@see #get(Object, Class);ValueWrapper get(Object key)_;return,the,value,to,which,this,cache,maps,the,specified,key,p,returns,code,null,if,the,cache,contains,no,mapping,for,this,key,otherwise,the,cached,value,which,may,be,code,null,itself,will,be,returned,in,a,link,value,wrapper,param,key,the,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,contained,within,a,link,value,wrapper,which,may,also,hold,a,cached,code,null,value,a,straight,code,null,being,returned,means,that,the,cache,contains,no,mapping,for,this,key,see,get,object,class;value,wrapper,get,object,key
Cache -> @Nullable 	ValueWrapper get(Object key)_;1496837955;Return the value to which this cache maps the specified key._<p>Returns {@code null} if the cache contains no mapping for this key__otherwise, the cached value (which may be {@code null} itself) will_be returned in a {@link ValueWrapper}._@param key the key whose associated value is to be returned_@return the value to which this cache maps the specified key,_contained within a {@link ValueWrapper} which may also hold_a cached {@code null} value. A straight {@code null} being_returned means that the cache contains no mapping for this key._@see #get(Object, Class);@Nullable_	ValueWrapper get(Object key)_;return,the,value,to,which,this,cache,maps,the,specified,key,p,returns,code,null,if,the,cache,contains,no,mapping,for,this,key,otherwise,the,cached,value,which,may,be,code,null,itself,will,be,returned,in,a,link,value,wrapper,param,key,the,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,contained,within,a,link,value,wrapper,which,may,also,hold,a,cached,code,null,value,a,straight,code,null,being,returned,means,that,the,cache,contains,no,mapping,for,this,key,see,get,object,class;nullable,value,wrapper,get,object,key
Cache -> @Nullable 	ValueWrapper get(Object key)_;1498780456;Return the value to which this cache maps the specified key._<p>Returns {@code null} if the cache contains no mapping for this key__otherwise, the cached value (which may be {@code null} itself) will_be returned in a {@link ValueWrapper}._@param key the key whose associated value is to be returned_@return the value to which this cache maps the specified key,_contained within a {@link ValueWrapper} which may also hold_a cached {@code null} value. A straight {@code null} being_returned means that the cache contains no mapping for this key._@see #get(Object, Class);@Nullable_	ValueWrapper get(Object key)_;return,the,value,to,which,this,cache,maps,the,specified,key,p,returns,code,null,if,the,cache,contains,no,mapping,for,this,key,otherwise,the,cached,value,which,may,be,code,null,itself,will,be,returned,in,a,link,value,wrapper,param,key,the,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,contained,within,a,link,value,wrapper,which,may,also,hold,a,cached,code,null,value,a,straight,code,null,being,returned,means,that,the,cache,contains,no,mapping,for,this,key,see,get,object,class;nullable,value,wrapper,get,object,key
Cache -> @Nullable 	ValueWrapper get(Object key)_;1502974979;Return the value to which this cache maps the specified key._<p>Returns {@code null} if the cache contains no mapping for this key__otherwise, the cached value (which may be {@code null} itself) will_be returned in a {@link ValueWrapper}._@param key the key whose associated value is to be returned_@return the value to which this cache maps the specified key,_contained within a {@link ValueWrapper} which may also hold_a cached {@code null} value. A straight {@code null} being_returned means that the cache contains no mapping for this key._@see #get(Object, Class);@Nullable_	ValueWrapper get(Object key)_;return,the,value,to,which,this,cache,maps,the,specified,key,p,returns,code,null,if,the,cache,contains,no,mapping,for,this,key,otherwise,the,cached,value,which,may,be,code,null,itself,will,be,returned,in,a,link,value,wrapper,param,key,the,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,contained,within,a,link,value,wrapper,which,may,also,hold,a,cached,code,null,value,a,straight,code,null,being,returned,means,that,the,cache,contains,no,mapping,for,this,key,see,get,object,class;nullable,value,wrapper,get,object,key
Cache -> void put(Object key, Object value)_;1328020251;Associate the specified value with the specified key in this cache._<p>If the cache previously contained a mapping for this key, the old_value is replaced by the specified value._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key;void put(Object key, Object value)_;associate,the,specified,value,with,the,specified,key,in,this,cache,p,if,the,cache,previously,contained,a,mapping,for,this,key,the,old,value,is,replaced,by,the,specified,value,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key;void,put,object,key,object,value
Cache -> void put(Object key, Object value)_;1356735495;Associate the specified value with the specified key in this cache._<p>If the cache previously contained a mapping for this key, the old_value is replaced by the specified value._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key;void put(Object key, Object value)_;associate,the,specified,value,with,the,specified,key,in,this,cache,p,if,the,cache,previously,contained,a,mapping,for,this,key,the,old,value,is,replaced,by,the,specified,value,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key;void,put,object,key,object,value
Cache -> void put(Object key, Object value)_;1383571901;Associate the specified value with the specified key in this cache._<p>If the cache previously contained a mapping for this key, the old_value is replaced by the specified value._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key;void put(Object key, Object value)_;associate,the,specified,value,with,the,specified,key,in,this,cache,p,if,the,cache,previously,contained,a,mapping,for,this,key,the,old,value,is,replaced,by,the,specified,value,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key;void,put,object,key,object,value
Cache -> void put(Object key, Object value)_;1395100259;Associate the specified value with the specified key in this cache._<p>If the cache previously contained a mapping for this key, the old_value is replaced by the specified value._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key;void put(Object key, Object value)_;associate,the,specified,value,with,the,specified,key,in,this,cache,p,if,the,cache,previously,contained,a,mapping,for,this,key,the,old,value,is,replaced,by,the,specified,value,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key;void,put,object,key,object,value
Cache -> void put(Object key, Object value)_;1396517842;Associate the specified value with the specified key in this cache._<p>If the cache previously contained a mapping for this key, the old_value is replaced by the specified value._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key;void put(Object key, Object value)_;associate,the,specified,value,with,the,specified,key,in,this,cache,p,if,the,cache,previously,contained,a,mapping,for,this,key,the,old,value,is,replaced,by,the,specified,value,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key;void,put,object,key,object,value
Cache -> void put(Object key, Object value)_;1404239431;Associate the specified value with the specified key in this cache._<p>If the cache previously contained a mapping for this key, the old_value is replaced by the specified value._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key;void put(Object key, Object value)_;associate,the,specified,value,with,the,specified,key,in,this,cache,p,if,the,cache,previously,contained,a,mapping,for,this,key,the,old,value,is,replaced,by,the,specified,value,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key;void,put,object,key,object,value
Cache -> void put(Object key, Object value)_;1409742020;Associate the specified value with the specified key in this cache._<p>If the cache previously contained a mapping for this key, the old_value is replaced by the specified value._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key;void put(Object key, Object value)_;associate,the,specified,value,with,the,specified,key,in,this,cache,p,if,the,cache,previously,contained,a,mapping,for,this,key,the,old,value,is,replaced,by,the,specified,value,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key;void,put,object,key,object,value
Cache -> void put(Object key, Object value)_;1429103622;Associate the specified value with the specified key in this cache._<p>If the cache previously contained a mapping for this key, the old_value is replaced by the specified value._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key;void put(Object key, Object value)_;associate,the,specified,value,with,the,specified,key,in,this,cache,p,if,the,cache,previously,contained,a,mapping,for,this,key,the,old,value,is,replaced,by,the,specified,value,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key;void,put,object,key,object,value
Cache -> void put(Object key, Object value)_;1450701275;Associate the specified value with the specified key in this cache._<p>If the cache previously contained a mapping for this key, the old_value is replaced by the specified value._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key;void put(Object key, Object value)_;associate,the,specified,value,with,the,specified,key,in,this,cache,p,if,the,cache,previously,contained,a,mapping,for,this,key,the,old,value,is,replaced,by,the,specified,value,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key;void,put,object,key,object,value
Cache -> void put(Object key, Object value)_;1450797566;Associate the specified value with the specified key in this cache._<p>If the cache previously contained a mapping for this key, the old_value is replaced by the specified value._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key;void put(Object key, Object value)_;associate,the,specified,value,with,the,specified,key,in,this,cache,p,if,the,cache,previously,contained,a,mapping,for,this,key,the,old,value,is,replaced,by,the,specified,value,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key;void,put,object,key,object,value
Cache -> void put(Object key, Object value)_;1452685925;Associate the specified value with the specified key in this cache._<p>If the cache previously contained a mapping for this key, the old_value is replaced by the specified value._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key;void put(Object key, Object value)_;associate,the,specified,value,with,the,specified,key,in,this,cache,p,if,the,cache,previously,contained,a,mapping,for,this,key,the,old,value,is,replaced,by,the,specified,value,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key;void,put,object,key,object,value
Cache -> void put(Object key, Object value)_;1461047077;Associate the specified value with the specified key in this cache._<p>If the cache previously contained a mapping for this key, the old_value is replaced by the specified value._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key;void put(Object key, Object value)_;associate,the,specified,value,with,the,specified,key,in,this,cache,p,if,the,cache,previously,contained,a,mapping,for,this,key,the,old,value,is,replaced,by,the,specified,value,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key;void,put,object,key,object,value
Cache -> void put(Object key, Object value)_;1465306936;Associate the specified value with the specified key in this cache._<p>If the cache previously contained a mapping for this key, the old_value is replaced by the specified value._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key;void put(Object key, Object value)_;associate,the,specified,value,with,the,specified,key,in,this,cache,p,if,the,cache,previously,contained,a,mapping,for,this,key,the,old,value,is,replaced,by,the,specified,value,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key;void,put,object,key,object,value
Cache -> void put(Object key, Object value)_;1467808333;Associate the specified value with the specified key in this cache._<p>If the cache previously contained a mapping for this key, the old_value is replaced by the specified value._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key;void put(Object key, Object value)_;associate,the,specified,value,with,the,specified,key,in,this,cache,p,if,the,cache,previously,contained,a,mapping,for,this,key,the,old,value,is,replaced,by,the,specified,value,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key;void,put,object,key,object,value
Cache -> <T> T get(Object key, Callable<T> valueLoader)_;1450701275;Return the value to which this cache maps the specified key, obtaining_that value from {@code valueLoader} if necessary. This method provides_a simple substitute for the conventional "if cached, return_ otherwise_create, cache and return" pattern._<p>If possible, implementations should ensure that the loading operation_is synchronized so that the specified {@code valueLoader} is only called_once in case of concurrent access on the same key._<p>If the {@code valueLoader} throws an exception, it is wrapped in_a {@link ValueRetrievalException}_@param key the key whose associated value is to be returned_@return the value to which this cache maps the specified key_@throws ValueRetrievalException if the {@code valueLoader} throws an exception_@since 4.3;<T> T get(Object key, Callable<T> valueLoader)_;return,the,value,to,which,this,cache,maps,the,specified,key,obtaining,that,value,from,code,value,loader,if,necessary,this,method,provides,a,simple,substitute,for,the,conventional,if,cached,return,otherwise,create,cache,and,return,pattern,p,if,possible,implementations,should,ensure,that,the,loading,operation,is,synchronized,so,that,the,specified,code,value,loader,is,only,called,once,in,case,of,concurrent,access,on,the,same,key,p,if,the,code,value,loader,throws,an,exception,it,is,wrapped,in,a,link,value,retrieval,exception,param,key,the,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,throws,value,retrieval,exception,if,the,code,value,loader,throws,an,exception,since,4,3;t,t,get,object,key,callable,t,value,loader
Cache -> <T> T get(Object key, Callable<T> valueLoader)_;1450797566;Return the value to which this cache maps the specified key, obtaining_that value from {@code valueLoader} if necessary. This method provides_a simple substitute for the conventional "if cached, return_ otherwise_create, cache and return" pattern._<p>If possible, implementations should ensure that the loading operation_is synchronized so that the specified {@code valueLoader} is only called_once in case of concurrent access on the same key._<p>If the {@code valueLoader} throws an exception, it is wrapped in_a {@link ValueRetrievalException}_@param key the key whose associated value is to be returned_@return the value to which this cache maps the specified key_@throws ValueRetrievalException if the {@code valueLoader} throws an exception_@since 4.3;<T> T get(Object key, Callable<T> valueLoader)_;return,the,value,to,which,this,cache,maps,the,specified,key,obtaining,that,value,from,code,value,loader,if,necessary,this,method,provides,a,simple,substitute,for,the,conventional,if,cached,return,otherwise,create,cache,and,return,pattern,p,if,possible,implementations,should,ensure,that,the,loading,operation,is,synchronized,so,that,the,specified,code,value,loader,is,only,called,once,in,case,of,concurrent,access,on,the,same,key,p,if,the,code,value,loader,throws,an,exception,it,is,wrapped,in,a,link,value,retrieval,exception,param,key,the,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,throws,value,retrieval,exception,if,the,code,value,loader,throws,an,exception,since,4,3;t,t,get,object,key,callable,t,value,loader
Cache -> <T> T get(Object key, Callable<T> valueLoader)_;1452685925;Return the value to which this cache maps the specified key, obtaining_that value from {@code valueLoader} if necessary. This method provides_a simple substitute for the conventional "if cached, return_ otherwise_create, cache and return" pattern._<p>If possible, implementations should ensure that the loading operation_is synchronized so that the specified {@code valueLoader} is only called_once in case of concurrent access on the same key._<p>If the {@code valueLoader} throws an exception, it is wrapped in_a {@link ValueRetrievalException}_@param key the key whose associated value is to be returned_@return the value to which this cache maps the specified key_@throws ValueRetrievalException if the {@code valueLoader} throws an exception_@since 4.3;<T> T get(Object key, Callable<T> valueLoader)_;return,the,value,to,which,this,cache,maps,the,specified,key,obtaining,that,value,from,code,value,loader,if,necessary,this,method,provides,a,simple,substitute,for,the,conventional,if,cached,return,otherwise,create,cache,and,return,pattern,p,if,possible,implementations,should,ensure,that,the,loading,operation,is,synchronized,so,that,the,specified,code,value,loader,is,only,called,once,in,case,of,concurrent,access,on,the,same,key,p,if,the,code,value,loader,throws,an,exception,it,is,wrapped,in,a,link,value,retrieval,exception,param,key,the,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,throws,value,retrieval,exception,if,the,code,value,loader,throws,an,exception,since,4,3;t,t,get,object,key,callable,t,value,loader
Cache -> <T> T get(Object key, Callable<T> valueLoader)_;1461047077;Return the value to which this cache maps the specified key, obtaining_that value from {@code valueLoader} if necessary. This method provides_a simple substitute for the conventional "if cached, return_ otherwise_create, cache and return" pattern._<p>If possible, implementations should ensure that the loading operation_is synchronized so that the specified {@code valueLoader} is only called_once in case of concurrent access on the same key._<p>If the {@code valueLoader} throws an exception, it is wrapped in_a {@link ValueRetrievalException}_@param key the key whose associated value is to be returned_@return the value to which this cache maps the specified key_@throws ValueRetrievalException if the {@code valueLoader} throws an exception_@since 4.3;<T> T get(Object key, Callable<T> valueLoader)_;return,the,value,to,which,this,cache,maps,the,specified,key,obtaining,that,value,from,code,value,loader,if,necessary,this,method,provides,a,simple,substitute,for,the,conventional,if,cached,return,otherwise,create,cache,and,return,pattern,p,if,possible,implementations,should,ensure,that,the,loading,operation,is,synchronized,so,that,the,specified,code,value,loader,is,only,called,once,in,case,of,concurrent,access,on,the,same,key,p,if,the,code,value,loader,throws,an,exception,it,is,wrapped,in,a,link,value,retrieval,exception,param,key,the,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,throws,value,retrieval,exception,if,the,code,value,loader,throws,an,exception,since,4,3;t,t,get,object,key,callable,t,value,loader
Cache -> <T> T get(Object key, Callable<T> valueLoader)_;1465306936;Return the value to which this cache maps the specified key, obtaining_that value from {@code valueLoader} if necessary. This method provides_a simple substitute for the conventional "if cached, return_ otherwise_create, cache and return" pattern._<p>If possible, implementations should ensure that the loading operation_is synchronized so that the specified {@code valueLoader} is only called_once in case of concurrent access on the same key._<p>If the {@code valueLoader} throws an exception, it is wrapped in_a {@link ValueRetrievalException}_@param key the key whose associated value is to be returned_@return the value to which this cache maps the specified key_@throws ValueRetrievalException if the {@code valueLoader} throws an exception_@since 4.3;<T> T get(Object key, Callable<T> valueLoader)_;return,the,value,to,which,this,cache,maps,the,specified,key,obtaining,that,value,from,code,value,loader,if,necessary,this,method,provides,a,simple,substitute,for,the,conventional,if,cached,return,otherwise,create,cache,and,return,pattern,p,if,possible,implementations,should,ensure,that,the,loading,operation,is,synchronized,so,that,the,specified,code,value,loader,is,only,called,once,in,case,of,concurrent,access,on,the,same,key,p,if,the,code,value,loader,throws,an,exception,it,is,wrapped,in,a,link,value,retrieval,exception,param,key,the,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,throws,value,retrieval,exception,if,the,code,value,loader,throws,an,exception,since,4,3;t,t,get,object,key,callable,t,value,loader
Cache -> <T> T get(Object key, Callable<T> valueLoader)_;1467808333;Return the value to which this cache maps the specified key, obtaining_that value from {@code valueLoader} if necessary. This method provides_a simple substitute for the conventional "if cached, return_ otherwise_create, cache and return" pattern._<p>If possible, implementations should ensure that the loading operation_is synchronized so that the specified {@code valueLoader} is only called_once in case of concurrent access on the same key._<p>If the {@code valueLoader} throws an exception, it is wrapped in_a {@link ValueRetrievalException}_@param key the key whose associated value is to be returned_@return the value to which this cache maps the specified key_@throws ValueRetrievalException if the {@code valueLoader} throws an exception_@since 4.3;<T> T get(Object key, Callable<T> valueLoader)_;return,the,value,to,which,this,cache,maps,the,specified,key,obtaining,that,value,from,code,value,loader,if,necessary,this,method,provides,a,simple,substitute,for,the,conventional,if,cached,return,otherwise,create,cache,and,return,pattern,p,if,possible,implementations,should,ensure,that,the,loading,operation,is,synchronized,so,that,the,specified,code,value,loader,is,only,called,once,in,case,of,concurrent,access,on,the,same,key,p,if,the,code,value,loader,throws,an,exception,it,is,wrapped,in,a,link,value,retrieval,exception,param,key,the,key,whose,associated,value,is,to,be,returned,return,the,value,to,which,this,cache,maps,the,specified,key,throws,value,retrieval,exception,if,the,code,value,loader,throws,an,exception,since,4,3;t,t,get,object,key,callable,t,value,loader
Cache -> <T> T get(Object key, Class<T> type)_;1383571901;Return the value to which this cache maps the specified key,_generically specifying a type that return value will be cast to._<p>Note: This variant of {@code get} does not allow for differentiating_between a cached {@code null} value and no cache entry found at all._Use the standard {@link #get(Object)} variant for that purpose instead._@param key the key whose associated value is to be returned_@param type the required type of the returned value_@return the value to which this cache maps the specified key_(which may be {@code null} itself), or also {@code null} if_the cache contains no mapping for this key_@see #get(Object);<T> T get(Object key, Class<T> type)_;return,the,value,to,which,this,cache,maps,the,specified,key,generically,specifying,a,type,that,return,value,will,be,cast,to,p,note,this,variant,of,code,get,does,not,allow,for,differentiating,between,a,cached,code,null,value,and,no,cache,entry,found,at,all,use,the,standard,link,get,object,variant,for,that,purpose,instead,param,key,the,key,whose,associated,value,is,to,be,returned,param,type,the,required,type,of,the,returned,value,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,contains,no,mapping,for,this,key,see,get,object;t,t,get,object,key,class,t,type
Cache -> <T> T get(Object key, Class<T> type)_;1395100259;Return the value to which this cache maps the specified key,_generically specifying a type that return value will be cast to._<p>Note: This variant of {@code get} does not allow for differentiating_between a cached {@code null} value and no cache entry found at all._Use the standard {@link #get(Object)} variant for that purpose instead._@param key the key whose associated value is to be returned_@param type the required type of the returned value (may be_{@code null} to bypass a type check_ in case of a {@code null}_value found in the cache, the specified type is irrelevant)_@return the value to which this cache maps the specified key_(which may be {@code null} itself), or also {@code null} if_the cache contains no mapping for this key_@see #get(Object)_@since 4.0;<T> T get(Object key, Class<T> type)_;return,the,value,to,which,this,cache,maps,the,specified,key,generically,specifying,a,type,that,return,value,will,be,cast,to,p,note,this,variant,of,code,get,does,not,allow,for,differentiating,between,a,cached,code,null,value,and,no,cache,entry,found,at,all,use,the,standard,link,get,object,variant,for,that,purpose,instead,param,key,the,key,whose,associated,value,is,to,be,returned,param,type,the,required,type,of,the,returned,value,may,be,code,null,to,bypass,a,type,check,in,case,of,a,code,null,value,found,in,the,cache,the,specified,type,is,irrelevant,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,contains,no,mapping,for,this,key,see,get,object,since,4,0;t,t,get,object,key,class,t,type
Cache -> <T> T get(Object key, Class<T> type)_;1396517842;Return the value to which this cache maps the specified key,_generically specifying a type that return value will be cast to._<p>Note: This variant of {@code get} does not allow for differentiating_between a cached {@code null} value and no cache entry found at all._Use the standard {@link #get(Object)} variant for that purpose instead._@param key the key whose associated value is to be returned_@param type the required type of the returned value (may be_{@code null} to bypass a type check_ in case of a {@code null}_value found in the cache, the specified type is irrelevant)_@return the value to which this cache maps the specified key_(which may be {@code null} itself), or also {@code null} if_the cache contains no mapping for this key_@see #get(Object)_@since 4.0;<T> T get(Object key, Class<T> type)_;return,the,value,to,which,this,cache,maps,the,specified,key,generically,specifying,a,type,that,return,value,will,be,cast,to,p,note,this,variant,of,code,get,does,not,allow,for,differentiating,between,a,cached,code,null,value,and,no,cache,entry,found,at,all,use,the,standard,link,get,object,variant,for,that,purpose,instead,param,key,the,key,whose,associated,value,is,to,be,returned,param,type,the,required,type,of,the,returned,value,may,be,code,null,to,bypass,a,type,check,in,case,of,a,code,null,value,found,in,the,cache,the,specified,type,is,irrelevant,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,contains,no,mapping,for,this,key,see,get,object,since,4,0;t,t,get,object,key,class,t,type
Cache -> <T> T get(Object key, Class<T> type)_;1404239431;Return the value to which this cache maps the specified key,_generically specifying a type that return value will be cast to._<p>Note: This variant of {@code get} does not allow for differentiating_between a cached {@code null} value and no cache entry found at all._Use the standard {@link #get(Object)} variant for that purpose instead._@param key the key whose associated value is to be returned_@param type the required type of the returned value (may be_{@code null} to bypass a type check_ in case of a {@code null}_value found in the cache, the specified type is irrelevant)_@return the value to which this cache maps the specified key_(which may be {@code null} itself), or also {@code null} if_the cache contains no mapping for this key_@see #get(Object)_@since 4.0;<T> T get(Object key, Class<T> type)_;return,the,value,to,which,this,cache,maps,the,specified,key,generically,specifying,a,type,that,return,value,will,be,cast,to,p,note,this,variant,of,code,get,does,not,allow,for,differentiating,between,a,cached,code,null,value,and,no,cache,entry,found,at,all,use,the,standard,link,get,object,variant,for,that,purpose,instead,param,key,the,key,whose,associated,value,is,to,be,returned,param,type,the,required,type,of,the,returned,value,may,be,code,null,to,bypass,a,type,check,in,case,of,a,code,null,value,found,in,the,cache,the,specified,type,is,irrelevant,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,contains,no,mapping,for,this,key,see,get,object,since,4,0;t,t,get,object,key,class,t,type
Cache -> <T> T get(Object key, Class<T> type)_;1409742020;Return the value to which this cache maps the specified key,_generically specifying a type that return value will be cast to._<p>Note: This variant of {@code get} does not allow for differentiating_between a cached {@code null} value and no cache entry found at all._Use the standard {@link #get(Object)} variant for that purpose instead._@param key the key whose associated value is to be returned_@param type the required type of the returned value (may be_{@code null} to bypass a type check_ in case of a {@code null}_value found in the cache, the specified type is irrelevant)_@return the value to which this cache maps the specified key_(which may be {@code null} itself), or also {@code null} if_the cache contains no mapping for this key_@throws IllegalStateException if a cache entry has been found_but failed to match the specified type_@see #get(Object)_@since 4.0;<T> T get(Object key, Class<T> type)_;return,the,value,to,which,this,cache,maps,the,specified,key,generically,specifying,a,type,that,return,value,will,be,cast,to,p,note,this,variant,of,code,get,does,not,allow,for,differentiating,between,a,cached,code,null,value,and,no,cache,entry,found,at,all,use,the,standard,link,get,object,variant,for,that,purpose,instead,param,key,the,key,whose,associated,value,is,to,be,returned,param,type,the,required,type,of,the,returned,value,may,be,code,null,to,bypass,a,type,check,in,case,of,a,code,null,value,found,in,the,cache,the,specified,type,is,irrelevant,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,contains,no,mapping,for,this,key,throws,illegal,state,exception,if,a,cache,entry,has,been,found,but,failed,to,match,the,specified,type,see,get,object,since,4,0;t,t,get,object,key,class,t,type
Cache -> <T> T get(Object key, Class<T> type)_;1429103622;Return the value to which this cache maps the specified key,_generically specifying a type that return value will be cast to._<p>Note: This variant of {@code get} does not allow for differentiating_between a cached {@code null} value and no cache entry found at all._Use the standard {@link #get(Object)} variant for that purpose instead._@param key the key whose associated value is to be returned_@param type the required type of the returned value (may be_{@code null} to bypass a type check_ in case of a {@code null}_value found in the cache, the specified type is irrelevant)_@return the value to which this cache maps the specified key_(which may be {@code null} itself), or also {@code null} if_the cache contains no mapping for this key_@throws IllegalStateException if a cache entry has been found_but failed to match the specified type_@since 4.0_@see #get(Object);<T> T get(Object key, Class<T> type)_;return,the,value,to,which,this,cache,maps,the,specified,key,generically,specifying,a,type,that,return,value,will,be,cast,to,p,note,this,variant,of,code,get,does,not,allow,for,differentiating,between,a,cached,code,null,value,and,no,cache,entry,found,at,all,use,the,standard,link,get,object,variant,for,that,purpose,instead,param,key,the,key,whose,associated,value,is,to,be,returned,param,type,the,required,type,of,the,returned,value,may,be,code,null,to,bypass,a,type,check,in,case,of,a,code,null,value,found,in,the,cache,the,specified,type,is,irrelevant,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,contains,no,mapping,for,this,key,throws,illegal,state,exception,if,a,cache,entry,has,been,found,but,failed,to,match,the,specified,type,since,4,0,see,get,object;t,t,get,object,key,class,t,type
Cache -> <T> T get(Object key, Class<T> type)_;1450701275;Return the value to which this cache maps the specified key,_generically specifying a type that return value will be cast to._<p>Note: This variant of {@code get} does not allow for differentiating_between a cached {@code null} value and no cache entry found at all._Use the standard {@link #get(Object)} variant for that purpose instead._@param key the key whose associated value is to be returned_@param type the required type of the returned value (may be_{@code null} to bypass a type check_ in case of a {@code null}_value found in the cache, the specified type is irrelevant)_@return the value to which this cache maps the specified key_(which may be {@code null} itself), or also {@code null} if_the cache contains no mapping for this key_@throws IllegalStateException if a cache entry has been found_but failed to match the specified type_@since 4.0_@see #get(Object);<T> T get(Object key, Class<T> type)_;return,the,value,to,which,this,cache,maps,the,specified,key,generically,specifying,a,type,that,return,value,will,be,cast,to,p,note,this,variant,of,code,get,does,not,allow,for,differentiating,between,a,cached,code,null,value,and,no,cache,entry,found,at,all,use,the,standard,link,get,object,variant,for,that,purpose,instead,param,key,the,key,whose,associated,value,is,to,be,returned,param,type,the,required,type,of,the,returned,value,may,be,code,null,to,bypass,a,type,check,in,case,of,a,code,null,value,found,in,the,cache,the,specified,type,is,irrelevant,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,contains,no,mapping,for,this,key,throws,illegal,state,exception,if,a,cache,entry,has,been,found,but,failed,to,match,the,specified,type,since,4,0,see,get,object;t,t,get,object,key,class,t,type
Cache -> <T> T get(Object key, Class<T> type)_;1450797566;Return the value to which this cache maps the specified key,_generically specifying a type that return value will be cast to._<p>Note: This variant of {@code get} does not allow for differentiating_between a cached {@code null} value and no cache entry found at all._Use the standard {@link #get(Object)} variant for that purpose instead._@param key the key whose associated value is to be returned_@param type the required type of the returned value (may be_{@code null} to bypass a type check_ in case of a {@code null}_value found in the cache, the specified type is irrelevant)_@return the value to which this cache maps the specified key_(which may be {@code null} itself), or also {@code null} if_the cache contains no mapping for this key_@throws IllegalStateException if a cache entry has been found_but failed to match the specified type_@since 4.0_@see #get(Object);<T> T get(Object key, Class<T> type)_;return,the,value,to,which,this,cache,maps,the,specified,key,generically,specifying,a,type,that,return,value,will,be,cast,to,p,note,this,variant,of,code,get,does,not,allow,for,differentiating,between,a,cached,code,null,value,and,no,cache,entry,found,at,all,use,the,standard,link,get,object,variant,for,that,purpose,instead,param,key,the,key,whose,associated,value,is,to,be,returned,param,type,the,required,type,of,the,returned,value,may,be,code,null,to,bypass,a,type,check,in,case,of,a,code,null,value,found,in,the,cache,the,specified,type,is,irrelevant,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,contains,no,mapping,for,this,key,throws,illegal,state,exception,if,a,cache,entry,has,been,found,but,failed,to,match,the,specified,type,since,4,0,see,get,object;t,t,get,object,key,class,t,type
Cache -> <T> T get(Object key, Class<T> type)_;1452685925;Return the value to which this cache maps the specified key,_generically specifying a type that return value will be cast to._<p>Note: This variant of {@code get} does not allow for differentiating_between a cached {@code null} value and no cache entry found at all._Use the standard {@link #get(Object)} variant for that purpose instead._@param key the key whose associated value is to be returned_@param type the required type of the returned value (may be_{@code null} to bypass a type check_ in case of a {@code null}_value found in the cache, the specified type is irrelevant)_@return the value to which this cache maps the specified key_(which may be {@code null} itself), or also {@code null} if_the cache contains no mapping for this key_@throws IllegalStateException if a cache entry has been found_but failed to match the specified type_@since 4.0_@see #get(Object);<T> T get(Object key, Class<T> type)_;return,the,value,to,which,this,cache,maps,the,specified,key,generically,specifying,a,type,that,return,value,will,be,cast,to,p,note,this,variant,of,code,get,does,not,allow,for,differentiating,between,a,cached,code,null,value,and,no,cache,entry,found,at,all,use,the,standard,link,get,object,variant,for,that,purpose,instead,param,key,the,key,whose,associated,value,is,to,be,returned,param,type,the,required,type,of,the,returned,value,may,be,code,null,to,bypass,a,type,check,in,case,of,a,code,null,value,found,in,the,cache,the,specified,type,is,irrelevant,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,contains,no,mapping,for,this,key,throws,illegal,state,exception,if,a,cache,entry,has,been,found,but,failed,to,match,the,specified,type,since,4,0,see,get,object;t,t,get,object,key,class,t,type
Cache -> <T> T get(Object key, Class<T> type)_;1461047077;Return the value to which this cache maps the specified key,_generically specifying a type that return value will be cast to._<p>Note: This variant of {@code get} does not allow for differentiating_between a cached {@code null} value and no cache entry found at all._Use the standard {@link #get(Object)} variant for that purpose instead._@param key the key whose associated value is to be returned_@param type the required type of the returned value (may be_{@code null} to bypass a type check_ in case of a {@code null}_value found in the cache, the specified type is irrelevant)_@return the value to which this cache maps the specified key_(which may be {@code null} itself), or also {@code null} if_the cache contains no mapping for this key_@throws IllegalStateException if a cache entry has been found_but failed to match the specified type_@since 4.0_@see #get(Object);<T> T get(Object key, Class<T> type)_;return,the,value,to,which,this,cache,maps,the,specified,key,generically,specifying,a,type,that,return,value,will,be,cast,to,p,note,this,variant,of,code,get,does,not,allow,for,differentiating,between,a,cached,code,null,value,and,no,cache,entry,found,at,all,use,the,standard,link,get,object,variant,for,that,purpose,instead,param,key,the,key,whose,associated,value,is,to,be,returned,param,type,the,required,type,of,the,returned,value,may,be,code,null,to,bypass,a,type,check,in,case,of,a,code,null,value,found,in,the,cache,the,specified,type,is,irrelevant,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,contains,no,mapping,for,this,key,throws,illegal,state,exception,if,a,cache,entry,has,been,found,but,failed,to,match,the,specified,type,since,4,0,see,get,object;t,t,get,object,key,class,t,type
Cache -> <T> T get(Object key, Class<T> type)_;1465306936;Return the value to which this cache maps the specified key,_generically specifying a type that return value will be cast to._<p>Note: This variant of {@code get} does not allow for differentiating_between a cached {@code null} value and no cache entry found at all._Use the standard {@link #get(Object)} variant for that purpose instead._@param key the key whose associated value is to be returned_@param type the required type of the returned value (may be_{@code null} to bypass a type check_ in case of a {@code null}_value found in the cache, the specified type is irrelevant)_@return the value to which this cache maps the specified key_(which may be {@code null} itself), or also {@code null} if_the cache contains no mapping for this key_@throws IllegalStateException if a cache entry has been found_but failed to match the specified type_@since 4.0_@see #get(Object);<T> T get(Object key, Class<T> type)_;return,the,value,to,which,this,cache,maps,the,specified,key,generically,specifying,a,type,that,return,value,will,be,cast,to,p,note,this,variant,of,code,get,does,not,allow,for,differentiating,between,a,cached,code,null,value,and,no,cache,entry,found,at,all,use,the,standard,link,get,object,variant,for,that,purpose,instead,param,key,the,key,whose,associated,value,is,to,be,returned,param,type,the,required,type,of,the,returned,value,may,be,code,null,to,bypass,a,type,check,in,case,of,a,code,null,value,found,in,the,cache,the,specified,type,is,irrelevant,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,contains,no,mapping,for,this,key,throws,illegal,state,exception,if,a,cache,entry,has,been,found,but,failed,to,match,the,specified,type,since,4,0,see,get,object;t,t,get,object,key,class,t,type
Cache -> <T> T get(Object key, Class<T> type)_;1467808333;Return the value to which this cache maps the specified key,_generically specifying a type that return value will be cast to._<p>Note: This variant of {@code get} does not allow for differentiating_between a cached {@code null} value and no cache entry found at all._Use the standard {@link #get(Object)} variant for that purpose instead._@param key the key whose associated value is to be returned_@param type the required type of the returned value (may be_{@code null} to bypass a type check_ in case of a {@code null}_value found in the cache, the specified type is irrelevant)_@return the value to which this cache maps the specified key_(which may be {@code null} itself), or also {@code null} if_the cache contains no mapping for this key_@throws IllegalStateException if a cache entry has been found_but failed to match the specified type_@since 4.0_@see #get(Object);<T> T get(Object key, Class<T> type)_;return,the,value,to,which,this,cache,maps,the,specified,key,generically,specifying,a,type,that,return,value,will,be,cast,to,p,note,this,variant,of,code,get,does,not,allow,for,differentiating,between,a,cached,code,null,value,and,no,cache,entry,found,at,all,use,the,standard,link,get,object,variant,for,that,purpose,instead,param,key,the,key,whose,associated,value,is,to,be,returned,param,type,the,required,type,of,the,returned,value,may,be,code,null,to,bypass,a,type,check,in,case,of,a,code,null,value,found,in,the,cache,the,specified,type,is,irrelevant,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,contains,no,mapping,for,this,key,throws,illegal,state,exception,if,a,cache,entry,has,been,found,but,failed,to,match,the,specified,type,since,4,0,see,get,object;t,t,get,object,key,class,t,type
Cache -> String getName()_;1328020251;Return the cache name.;String getName()_;return,the,cache,name;string,get,name
Cache -> String getName()_;1356735495;Return the cache name.;String getName()_;return,the,cache,name;string,get,name
Cache -> String getName()_;1383571901;Return the cache name.;String getName()_;return,the,cache,name;string,get,name
Cache -> String getName()_;1395100259;Return the cache name.;String getName()_;return,the,cache,name;string,get,name
Cache -> String getName()_;1396517842;Return the cache name.;String getName()_;return,the,cache,name;string,get,name
Cache -> String getName()_;1404239431;Return the cache name.;String getName()_;return,the,cache,name;string,get,name
Cache -> String getName()_;1409742020;Return the cache name.;String getName()_;return,the,cache,name;string,get,name
Cache -> String getName()_;1429103622;Return the cache name.;String getName()_;return,the,cache,name;string,get,name
Cache -> String getName()_;1450701275;Return the cache name.;String getName()_;return,the,cache,name;string,get,name
Cache -> String getName()_;1450797566;Return the cache name.;String getName()_;return,the,cache,name;string,get,name
Cache -> String getName()_;1452685925;Return the cache name.;String getName()_;return,the,cache,name;string,get,name
Cache -> String getName()_;1461047077;Return the cache name.;String getName()_;return,the,cache,name;string,get,name
Cache -> String getName()_;1465306936;Return the cache name.;String getName()_;return,the,cache,name;string,get,name
Cache -> String getName()_;1467808333;Return the cache name.;String getName()_;return,the,cache,name;string,get,name
Cache -> String getName()_;1495868221;Return the cache name.;String getName()_;return,the,cache,name;string,get,name
Cache -> String getName()_;1496837955;Return the cache name.;String getName()_;return,the,cache,name;string,get,name
Cache -> String getName()_;1498780456;Return the cache name.;String getName()_;return,the,cache,name;string,get,name
Cache -> String getName()_;1502974979;Return the cache name.;String getName()_;return,the,cache,name;string,get,name
Cache -> Object getNativeCache()_;1328020251;Return the the underlying native cache provider.;Object getNativeCache()_;return,the,the,underlying,native,cache,provider;object,get,native,cache
Cache -> Object getNativeCache()_;1356735495;Return the the underlying native cache provider.;Object getNativeCache()_;return,the,the,underlying,native,cache,provider;object,get,native,cache
Cache -> Object getNativeCache()_;1383571901;Return the the underlying native cache provider.;Object getNativeCache()_;return,the,the,underlying,native,cache,provider;object,get,native,cache
Cache -> Object getNativeCache()_;1395100259;Return the the underlying native cache provider.;Object getNativeCache()_;return,the,the,underlying,native,cache,provider;object,get,native,cache
Cache -> Object getNativeCache()_;1396517842;Return the the underlying native cache provider.;Object getNativeCache()_;return,the,the,underlying,native,cache,provider;object,get,native,cache
Cache -> Object getNativeCache()_;1404239431;Return the the underlying native cache provider.;Object getNativeCache()_;return,the,the,underlying,native,cache,provider;object,get,native,cache
Cache -> Object getNativeCache()_;1409742020;Return the the underlying native cache provider.;Object getNativeCache()_;return,the,the,underlying,native,cache,provider;object,get,native,cache
Cache -> Object getNativeCache()_;1429103622;Return the the underlying native cache provider.;Object getNativeCache()_;return,the,the,underlying,native,cache,provider;object,get,native,cache
Cache -> Object getNativeCache()_;1450701275;Return the the underlying native cache provider.;Object getNativeCache()_;return,the,the,underlying,native,cache,provider;object,get,native,cache
Cache -> Object getNativeCache()_;1450797566;Return the the underlying native cache provider.;Object getNativeCache()_;return,the,the,underlying,native,cache,provider;object,get,native,cache
Cache -> Object getNativeCache()_;1452685925;Return the the underlying native cache provider.;Object getNativeCache()_;return,the,the,underlying,native,cache,provider;object,get,native,cache
Cache -> Object getNativeCache()_;1461047077;Return the underlying native cache provider.;Object getNativeCache()_;return,the,underlying,native,cache,provider;object,get,native,cache
Cache -> Object getNativeCache()_;1465306936;Return the underlying native cache provider.;Object getNativeCache()_;return,the,underlying,native,cache,provider;object,get,native,cache
Cache -> Object getNativeCache()_;1467808333;Return the underlying native cache provider.;Object getNativeCache()_;return,the,underlying,native,cache,provider;object,get,native,cache
Cache -> Object getNativeCache()_;1495868221;Return the underlying native cache provider.;Object getNativeCache()_;return,the,underlying,native,cache,provider;object,get,native,cache
Cache -> Object getNativeCache()_;1496837955;Return the underlying native cache provider.;Object getNativeCache()_;return,the,underlying,native,cache,provider;object,get,native,cache
Cache -> Object getNativeCache()_;1498780456;Return the underlying native cache provider.;Object getNativeCache()_;return,the,underlying,native,cache,provider;object,get,native,cache
Cache -> Object getNativeCache()_;1502974979;Return the underlying native cache provider.;Object getNativeCache()_;return,the,underlying,native,cache,provider;object,get,native,cache
Cache -> ValueWrapper -> @Nullable Object get()_;1495868221;Return the actual value in the cache.;@Nullable Object get()_;return,the,actual,value,in,the,cache;nullable,object,get
Cache -> ValueWrapper -> @Nullable Object get()_;1496837955;Return the actual value in the cache.;@Nullable Object get()_;return,the,actual,value,in,the,cache;nullable,object,get
Cache -> ValueWrapper -> @Nullable Object get()_;1498780456;Return the actual value in the cache.;@Nullable Object get()_;return,the,actual,value,in,the,cache;nullable,object,get
Cache -> void evict(Object key)_;1328020251;Evict the mapping for this key from this cache if it is present._@param key the key whose mapping is to be removed from the cache;void evict(Object key)_;evict,the,mapping,for,this,key,from,this,cache,if,it,is,present,param,key,the,key,whose,mapping,is,to,be,removed,from,the,cache;void,evict,object,key
Cache -> void evict(Object key)_;1356735495;Evict the mapping for this key from this cache if it is present._@param key the key whose mapping is to be removed from the cache;void evict(Object key)_;evict,the,mapping,for,this,key,from,this,cache,if,it,is,present,param,key,the,key,whose,mapping,is,to,be,removed,from,the,cache;void,evict,object,key
Cache -> void evict(Object key)_;1383571901;Evict the mapping for this key from this cache if it is present._@param key the key whose mapping is to be removed from the cache;void evict(Object key)_;evict,the,mapping,for,this,key,from,this,cache,if,it,is,present,param,key,the,key,whose,mapping,is,to,be,removed,from,the,cache;void,evict,object,key
Cache -> void evict(Object key)_;1395100259;Evict the mapping for this key from this cache if it is present._@param key the key whose mapping is to be removed from the cache;void evict(Object key)_;evict,the,mapping,for,this,key,from,this,cache,if,it,is,present,param,key,the,key,whose,mapping,is,to,be,removed,from,the,cache;void,evict,object,key
Cache -> void evict(Object key)_;1396517842;Evict the mapping for this key from this cache if it is present._@param key the key whose mapping is to be removed from the cache;void evict(Object key)_;evict,the,mapping,for,this,key,from,this,cache,if,it,is,present,param,key,the,key,whose,mapping,is,to,be,removed,from,the,cache;void,evict,object,key
Cache -> void evict(Object key)_;1404239431;Evict the mapping for this key from this cache if it is present._@param key the key whose mapping is to be removed from the cache;void evict(Object key)_;evict,the,mapping,for,this,key,from,this,cache,if,it,is,present,param,key,the,key,whose,mapping,is,to,be,removed,from,the,cache;void,evict,object,key
Cache -> void evict(Object key)_;1409742020;Evict the mapping for this key from this cache if it is present._@param key the key whose mapping is to be removed from the cache;void evict(Object key)_;evict,the,mapping,for,this,key,from,this,cache,if,it,is,present,param,key,the,key,whose,mapping,is,to,be,removed,from,the,cache;void,evict,object,key
Cache -> void evict(Object key)_;1429103622;Evict the mapping for this key from this cache if it is present._@param key the key whose mapping is to be removed from the cache;void evict(Object key)_;evict,the,mapping,for,this,key,from,this,cache,if,it,is,present,param,key,the,key,whose,mapping,is,to,be,removed,from,the,cache;void,evict,object,key
Cache -> void evict(Object key)_;1450701275;Evict the mapping for this key from this cache if it is present._@param key the key whose mapping is to be removed from the cache;void evict(Object key)_;evict,the,mapping,for,this,key,from,this,cache,if,it,is,present,param,key,the,key,whose,mapping,is,to,be,removed,from,the,cache;void,evict,object,key
Cache -> void evict(Object key)_;1450797566;Evict the mapping for this key from this cache if it is present._@param key the key whose mapping is to be removed from the cache;void evict(Object key)_;evict,the,mapping,for,this,key,from,this,cache,if,it,is,present,param,key,the,key,whose,mapping,is,to,be,removed,from,the,cache;void,evict,object,key
Cache -> void evict(Object key)_;1452685925;Evict the mapping for this key from this cache if it is present._@param key the key whose mapping is to be removed from the cache;void evict(Object key)_;evict,the,mapping,for,this,key,from,this,cache,if,it,is,present,param,key,the,key,whose,mapping,is,to,be,removed,from,the,cache;void,evict,object,key
Cache -> void evict(Object key)_;1461047077;Evict the mapping for this key from this cache if it is present._@param key the key whose mapping is to be removed from the cache;void evict(Object key)_;evict,the,mapping,for,this,key,from,this,cache,if,it,is,present,param,key,the,key,whose,mapping,is,to,be,removed,from,the,cache;void,evict,object,key
Cache -> void evict(Object key)_;1465306936;Evict the mapping for this key from this cache if it is present._@param key the key whose mapping is to be removed from the cache;void evict(Object key)_;evict,the,mapping,for,this,key,from,this,cache,if,it,is,present,param,key,the,key,whose,mapping,is,to,be,removed,from,the,cache;void,evict,object,key
Cache -> void evict(Object key)_;1467808333;Evict the mapping for this key from this cache if it is present._@param key the key whose mapping is to be removed from the cache;void evict(Object key)_;evict,the,mapping,for,this,key,from,this,cache,if,it,is,present,param,key,the,key,whose,mapping,is,to,be,removed,from,the,cache;void,evict,object,key
Cache -> void evict(Object key)_;1496837955;Evict the mapping for this key from this cache if it is present._@param key the key whose mapping is to be removed from the cache;void evict(Object key)_;evict,the,mapping,for,this,key,from,this,cache,if,it,is,present,param,key,the,key,whose,mapping,is,to,be,removed,from,the,cache;void,evict,object,key
Cache -> void evict(Object key)_;1498780456;Evict the mapping for this key from this cache if it is present._@param key the key whose mapping is to be removed from the cache;void evict(Object key)_;evict,the,mapping,for,this,key,from,this,cache,if,it,is,present,param,key,the,key,whose,mapping,is,to,be,removed,from,the,cache;void,evict,object,key
Cache -> void evict(Object key)_;1502974979;Evict the mapping for this key from this cache if it is present._@param key the key whose mapping is to be removed from the cache;void evict(Object key)_;evict,the,mapping,for,this,key,from,this,cache,if,it,is,present,param,key,the,key,whose,mapping,is,to,be,removed,from,the,cache;void,evict,object,key
Cache -> void put(Object key, @Nullable Object value)_;1496837955;Associate the specified value with the specified key in this cache._<p>If the cache previously contained a mapping for this key, the old_value is replaced by the specified value._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key;void put(Object key, @Nullable Object value)_;associate,the,specified,value,with,the,specified,key,in,this,cache,p,if,the,cache,previously,contained,a,mapping,for,this,key,the,old,value,is,replaced,by,the,specified,value,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key;void,put,object,key,nullable,object,value
Cache -> void put(Object key, @Nullable Object value)_;1498780456;Associate the specified value with the specified key in this cache._<p>If the cache previously contained a mapping for this key, the old_value is replaced by the specified value._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key;void put(Object key, @Nullable Object value)_;associate,the,specified,value,with,the,specified,key,in,this,cache,p,if,the,cache,previously,contained,a,mapping,for,this,key,the,old,value,is,replaced,by,the,specified,value,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key;void,put,object,key,nullable,object,value
Cache -> void put(Object key, @Nullable Object value)_;1502974979;Associate the specified value with the specified key in this cache._<p>If the cache previously contained a mapping for this key, the old_value is replaced by the specified value._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key;void put(Object key, @Nullable Object value)_;associate,the,specified,value,with,the,specified,key,in,this,cache,p,if,the,cache,previously,contained,a,mapping,for,this,key,the,old,value,is,replaced,by,the,specified,value,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key;void,put,object,key,nullable,object,value
Cache -> void clear()_;1328020251;Remove all mappings from the cache.;void clear()_;remove,all,mappings,from,the,cache;void,clear
Cache -> void clear()_;1356735495;Remove all mappings from the cache.;void clear()_;remove,all,mappings,from,the,cache;void,clear
Cache -> void clear()_;1383571901;Remove all mappings from the cache.;void clear()_;remove,all,mappings,from,the,cache;void,clear
Cache -> void clear()_;1395100259;Remove all mappings from the cache.;void clear()_;remove,all,mappings,from,the,cache;void,clear
Cache -> void clear()_;1396517842;Remove all mappings from the cache.;void clear()_;remove,all,mappings,from,the,cache;void,clear
Cache -> void clear()_;1404239431;Remove all mappings from the cache.;void clear()_;remove,all,mappings,from,the,cache;void,clear
Cache -> void clear()_;1409742020;Remove all mappings from the cache.;void clear()_;remove,all,mappings,from,the,cache;void,clear
Cache -> void clear()_;1429103622;Remove all mappings from the cache.;void clear()_;remove,all,mappings,from,the,cache;void,clear
Cache -> void clear()_;1450701275;Remove all mappings from the cache.;void clear()_;remove,all,mappings,from,the,cache;void,clear
Cache -> void clear()_;1450797566;Remove all mappings from the cache.;void clear()_;remove,all,mappings,from,the,cache;void,clear
Cache -> void clear()_;1452685925;Remove all mappings from the cache.;void clear()_;remove,all,mappings,from,the,cache;void,clear
Cache -> void clear()_;1461047077;Remove all mappings from the cache.;void clear()_;remove,all,mappings,from,the,cache;void,clear
Cache -> void clear()_;1465306936;Remove all mappings from the cache.;void clear()_;remove,all,mappings,from,the,cache;void,clear
Cache -> void clear()_;1467808333;Remove all mappings from the cache.;void clear()_;remove,all,mappings,from,the,cache;void,clear
Cache -> void clear()_;1495868221;Remove all mappings from the cache.;void clear()_;remove,all,mappings,from,the,cache;void,clear
Cache -> void clear()_;1496837955;Remove all mappings from the cache.;void clear()_;remove,all,mappings,from,the,cache;void,clear
Cache -> void clear()_;1498780456;Remove all mappings from the cache.;void clear()_;remove,all,mappings,from,the,cache;void,clear
Cache -> void clear()_;1502974979;Remove all mappings from the cache.;void clear()_;remove,all,mappings,from,the,cache;void,clear
Cache -> ValueWrapper putIfAbsent(Object key, Object value)_;1396517842;Atomically associate the specified value with the specified key in this cache if_it is not set already._<p>This is equivalent to:_<pre><code>_Object existingValue = cache.get(key)__if (existingValue == null) {_cache.put(key, value)__return null__} else {_return existingValue___</code></pre>_except that the action is performed atomically. While all known providers are_able to perform the put atomically, the returned value may be retrieved after_the attempt to put (i.e. in a non atomic way). Check the documentation of_the native cache implementation that you are using for more details._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key_@return the value to which this cache maps the specified key (which may_be {@code null} itself), or also {@code null} if  the cache did not contain_any mapping for that key prior to this call. Returning {@code null} is_therefore an indicator that the given {@code value} has been associated_with the key;ValueWrapper putIfAbsent(Object key, Object value)_;atomically,associate,the,specified,value,with,the,specified,key,in,this,cache,if,it,is,not,set,already,p,this,is,equivalent,to,pre,code,object,existing,value,cache,get,key,if,existing,value,null,cache,put,key,value,return,null,else,return,existing,value,code,pre,except,that,the,action,is,performed,atomically,while,all,known,providers,are,able,to,perform,the,put,atomically,the,returned,value,may,be,retrieved,after,the,attempt,to,put,i,e,in,a,non,atomic,way,check,the,documentation,of,the,native,cache,implementation,that,you,are,using,for,more,details,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,did,not,contain,any,mapping,for,that,key,prior,to,this,call,returning,code,null,is,therefore,an,indicator,that,the,given,code,value,has,been,associated,with,the,key;value,wrapper,put,if,absent,object,key,object,value
Cache -> ValueWrapper putIfAbsent(Object key, Object value)_;1404239431;Atomically associate the specified value with the specified key in this cache_if it is not set already._<p>This is equivalent to:_<pre><code>_Object existingValue = cache.get(key)__if (existingValue == null) {_cache.put(key, value)__return null__} else {_return existingValue___</code></pre>_except that the action is performed atomically. While all out-of-the-box_{@link CacheManager} implementations are able to perform the put atomically,_the operation may also be implemented in two steps, e.g. with a check for_presence and a subsequent put, in a non-atomic way. Check the documentation_of the native cache implementation that you are using for more details._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key_@return the value to which this cache maps the specified key (which may be_{@code null} itself), or also {@code null} if the cache did not contain any_mapping for that key prior to this call. Returning {@code null} is therefore_an indicator that the given {@code value} has been associated with the key._@since 4.1;ValueWrapper putIfAbsent(Object key, Object value)_;atomically,associate,the,specified,value,with,the,specified,key,in,this,cache,if,it,is,not,set,already,p,this,is,equivalent,to,pre,code,object,existing,value,cache,get,key,if,existing,value,null,cache,put,key,value,return,null,else,return,existing,value,code,pre,except,that,the,action,is,performed,atomically,while,all,out,of,the,box,link,cache,manager,implementations,are,able,to,perform,the,put,atomically,the,operation,may,also,be,implemented,in,two,steps,e,g,with,a,check,for,presence,and,a,subsequent,put,in,a,non,atomic,way,check,the,documentation,of,the,native,cache,implementation,that,you,are,using,for,more,details,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,did,not,contain,any,mapping,for,that,key,prior,to,this,call,returning,code,null,is,therefore,an,indicator,that,the,given,code,value,has,been,associated,with,the,key,since,4,1;value,wrapper,put,if,absent,object,key,object,value
Cache -> ValueWrapper putIfAbsent(Object key, Object value)_;1409742020;Atomically associate the specified value with the specified key in this cache_if it is not set already._<p>This is equivalent to:_<pre><code>_Object existingValue = cache.get(key)__if (existingValue == null) {_cache.put(key, value)__return null__} else {_return existingValue___</code></pre>_except that the action is performed atomically. While all out-of-the-box_{@link CacheManager} implementations are able to perform the put atomically,_the operation may also be implemented in two steps, e.g. with a check for_presence and a subsequent put, in a non-atomic way. Check the documentation_of the native cache implementation that you are using for more details._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key_@return the value to which this cache maps the specified key (which may be_{@code null} itself), or also {@code null} if the cache did not contain any_mapping for that key prior to this call. Returning {@code null} is therefore_an indicator that the given {@code value} has been associated with the key._@since 4.1;ValueWrapper putIfAbsent(Object key, Object value)_;atomically,associate,the,specified,value,with,the,specified,key,in,this,cache,if,it,is,not,set,already,p,this,is,equivalent,to,pre,code,object,existing,value,cache,get,key,if,existing,value,null,cache,put,key,value,return,null,else,return,existing,value,code,pre,except,that,the,action,is,performed,atomically,while,all,out,of,the,box,link,cache,manager,implementations,are,able,to,perform,the,put,atomically,the,operation,may,also,be,implemented,in,two,steps,e,g,with,a,check,for,presence,and,a,subsequent,put,in,a,non,atomic,way,check,the,documentation,of,the,native,cache,implementation,that,you,are,using,for,more,details,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,did,not,contain,any,mapping,for,that,key,prior,to,this,call,returning,code,null,is,therefore,an,indicator,that,the,given,code,value,has,been,associated,with,the,key,since,4,1;value,wrapper,put,if,absent,object,key,object,value
Cache -> ValueWrapper putIfAbsent(Object key, Object value)_;1429103622;Atomically associate the specified value with the specified key in this cache_if it is not set already._<p>This is equivalent to:_<pre><code>_Object existingValue = cache.get(key)__if (existingValue == null) {_cache.put(key, value)__return null__} else {_return existingValue___</code></pre>_except that the action is performed atomically. While all out-of-the-box_{@link CacheManager} implementations are able to perform the put atomically,_the operation may also be implemented in two steps, e.g. with a check for_presence and a subsequent put, in a non-atomic way. Check the documentation_of the native cache implementation that you are using for more details._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key_@return the value to which this cache maps the specified key (which may be_{@code null} itself), or also {@code null} if the cache did not contain any_mapping for that key prior to this call. Returning {@code null} is therefore_an indicator that the given {@code value} has been associated with the key._@since 4.1;ValueWrapper putIfAbsent(Object key, Object value)_;atomically,associate,the,specified,value,with,the,specified,key,in,this,cache,if,it,is,not,set,already,p,this,is,equivalent,to,pre,code,object,existing,value,cache,get,key,if,existing,value,null,cache,put,key,value,return,null,else,return,existing,value,code,pre,except,that,the,action,is,performed,atomically,while,all,out,of,the,box,link,cache,manager,implementations,are,able,to,perform,the,put,atomically,the,operation,may,also,be,implemented,in,two,steps,e,g,with,a,check,for,presence,and,a,subsequent,put,in,a,non,atomic,way,check,the,documentation,of,the,native,cache,implementation,that,you,are,using,for,more,details,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,did,not,contain,any,mapping,for,that,key,prior,to,this,call,returning,code,null,is,therefore,an,indicator,that,the,given,code,value,has,been,associated,with,the,key,since,4,1;value,wrapper,put,if,absent,object,key,object,value
Cache -> ValueWrapper putIfAbsent(Object key, Object value)_;1450701275;Atomically associate the specified value with the specified key in this cache_if it is not set already._<p>This is equivalent to:_<pre><code>_Object existingValue = cache.get(key)__if (existingValue == null) {_cache.put(key, value)__return null__} else {_return existingValue___</code></pre>_except that the action is performed atomically. While all out-of-the-box_{@link CacheManager} implementations are able to perform the put atomically,_the operation may also be implemented in two steps, e.g. with a check for_presence and a subsequent put, in a non-atomic way. Check the documentation_of the native cache implementation that you are using for more details._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key_@return the value to which this cache maps the specified key (which may be_{@code null} itself), or also {@code null} if the cache did not contain any_mapping for that key prior to this call. Returning {@code null} is therefore_an indicator that the given {@code value} has been associated with the key._@since 4.1;ValueWrapper putIfAbsent(Object key, Object value)_;atomically,associate,the,specified,value,with,the,specified,key,in,this,cache,if,it,is,not,set,already,p,this,is,equivalent,to,pre,code,object,existing,value,cache,get,key,if,existing,value,null,cache,put,key,value,return,null,else,return,existing,value,code,pre,except,that,the,action,is,performed,atomically,while,all,out,of,the,box,link,cache,manager,implementations,are,able,to,perform,the,put,atomically,the,operation,may,also,be,implemented,in,two,steps,e,g,with,a,check,for,presence,and,a,subsequent,put,in,a,non,atomic,way,check,the,documentation,of,the,native,cache,implementation,that,you,are,using,for,more,details,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,did,not,contain,any,mapping,for,that,key,prior,to,this,call,returning,code,null,is,therefore,an,indicator,that,the,given,code,value,has,been,associated,with,the,key,since,4,1;value,wrapper,put,if,absent,object,key,object,value
Cache -> ValueWrapper putIfAbsent(Object key, Object value)_;1450797566;Atomically associate the specified value with the specified key in this cache_if it is not set already._<p>This is equivalent to:_<pre><code>_Object existingValue = cache.get(key)__if (existingValue == null) {_cache.put(key, value)__return null__} else {_return existingValue___</code></pre>_except that the action is performed atomically. While all out-of-the-box_{@link CacheManager} implementations are able to perform the put atomically,_the operation may also be implemented in two steps, e.g. with a check for_presence and a subsequent put, in a non-atomic way. Check the documentation_of the native cache implementation that you are using for more details._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key_@return the value to which this cache maps the specified key (which may be_{@code null} itself), or also {@code null} if the cache did not contain any_mapping for that key prior to this call. Returning {@code null} is therefore_an indicator that the given {@code value} has been associated with the key._@since 4.1;ValueWrapper putIfAbsent(Object key, Object value)_;atomically,associate,the,specified,value,with,the,specified,key,in,this,cache,if,it,is,not,set,already,p,this,is,equivalent,to,pre,code,object,existing,value,cache,get,key,if,existing,value,null,cache,put,key,value,return,null,else,return,existing,value,code,pre,except,that,the,action,is,performed,atomically,while,all,out,of,the,box,link,cache,manager,implementations,are,able,to,perform,the,put,atomically,the,operation,may,also,be,implemented,in,two,steps,e,g,with,a,check,for,presence,and,a,subsequent,put,in,a,non,atomic,way,check,the,documentation,of,the,native,cache,implementation,that,you,are,using,for,more,details,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,did,not,contain,any,mapping,for,that,key,prior,to,this,call,returning,code,null,is,therefore,an,indicator,that,the,given,code,value,has,been,associated,with,the,key,since,4,1;value,wrapper,put,if,absent,object,key,object,value
Cache -> ValueWrapper putIfAbsent(Object key, Object value)_;1452685925;Atomically associate the specified value with the specified key in this cache_if it is not set already._<p>This is equivalent to:_<pre><code>_Object existingValue = cache.get(key)__if (existingValue == null) {_cache.put(key, value)__return null__} else {_return existingValue___</code></pre>_except that the action is performed atomically. While all out-of-the-box_{@link CacheManager} implementations are able to perform the put atomically,_the operation may also be implemented in two steps, e.g. with a check for_presence and a subsequent put, in a non-atomic way. Check the documentation_of the native cache implementation that you are using for more details._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key_@return the value to which this cache maps the specified key (which may be_{@code null} itself), or also {@code null} if the cache did not contain any_mapping for that key prior to this call. Returning {@code null} is therefore_an indicator that the given {@code value} has been associated with the key._@since 4.1;ValueWrapper putIfAbsent(Object key, Object value)_;atomically,associate,the,specified,value,with,the,specified,key,in,this,cache,if,it,is,not,set,already,p,this,is,equivalent,to,pre,code,object,existing,value,cache,get,key,if,existing,value,null,cache,put,key,value,return,null,else,return,existing,value,code,pre,except,that,the,action,is,performed,atomically,while,all,out,of,the,box,link,cache,manager,implementations,are,able,to,perform,the,put,atomically,the,operation,may,also,be,implemented,in,two,steps,e,g,with,a,check,for,presence,and,a,subsequent,put,in,a,non,atomic,way,check,the,documentation,of,the,native,cache,implementation,that,you,are,using,for,more,details,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,did,not,contain,any,mapping,for,that,key,prior,to,this,call,returning,code,null,is,therefore,an,indicator,that,the,given,code,value,has,been,associated,with,the,key,since,4,1;value,wrapper,put,if,absent,object,key,object,value
Cache -> ValueWrapper putIfAbsent(Object key, Object value)_;1461047077;Atomically associate the specified value with the specified key in this cache_if it is not set already._<p>This is equivalent to:_<pre><code>_Object existingValue = cache.get(key)__if (existingValue == null) {_cache.put(key, value)__return null__} else {_return existingValue___</code></pre>_except that the action is performed atomically. While all out-of-the-box_{@link CacheManager} implementations are able to perform the put atomically,_the operation may also be implemented in two steps, e.g. with a check for_presence and a subsequent put, in a non-atomic way. Check the documentation_of the native cache implementation that you are using for more details._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key_@return the value to which this cache maps the specified key (which may be_{@code null} itself), or also {@code null} if the cache did not contain any_mapping for that key prior to this call. Returning {@code null} is therefore_an indicator that the given {@code value} has been associated with the key._@since 4.1;ValueWrapper putIfAbsent(Object key, Object value)_;atomically,associate,the,specified,value,with,the,specified,key,in,this,cache,if,it,is,not,set,already,p,this,is,equivalent,to,pre,code,object,existing,value,cache,get,key,if,existing,value,null,cache,put,key,value,return,null,else,return,existing,value,code,pre,except,that,the,action,is,performed,atomically,while,all,out,of,the,box,link,cache,manager,implementations,are,able,to,perform,the,put,atomically,the,operation,may,also,be,implemented,in,two,steps,e,g,with,a,check,for,presence,and,a,subsequent,put,in,a,non,atomic,way,check,the,documentation,of,the,native,cache,implementation,that,you,are,using,for,more,details,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,did,not,contain,any,mapping,for,that,key,prior,to,this,call,returning,code,null,is,therefore,an,indicator,that,the,given,code,value,has,been,associated,with,the,key,since,4,1;value,wrapper,put,if,absent,object,key,object,value
Cache -> ValueWrapper putIfAbsent(Object key, Object value)_;1465306936;Atomically associate the specified value with the specified key in this cache_if it is not set already._<p>This is equivalent to:_<pre><code>_Object existingValue = cache.get(key)__if (existingValue == null) {_cache.put(key, value)__return null__} else {_return existingValue___</code></pre>_except that the action is performed atomically. While all out-of-the-box_{@link CacheManager} implementations are able to perform the put atomically,_the operation may also be implemented in two steps, e.g. with a check for_presence and a subsequent put, in a non-atomic way. Check the documentation_of the native cache implementation that you are using for more details._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key_@return the value to which this cache maps the specified key (which may be_{@code null} itself), or also {@code null} if the cache did not contain any_mapping for that key prior to this call. Returning {@code null} is therefore_an indicator that the given {@code value} has been associated with the key._@since 4.1;ValueWrapper putIfAbsent(Object key, Object value)_;atomically,associate,the,specified,value,with,the,specified,key,in,this,cache,if,it,is,not,set,already,p,this,is,equivalent,to,pre,code,object,existing,value,cache,get,key,if,existing,value,null,cache,put,key,value,return,null,else,return,existing,value,code,pre,except,that,the,action,is,performed,atomically,while,all,out,of,the,box,link,cache,manager,implementations,are,able,to,perform,the,put,atomically,the,operation,may,also,be,implemented,in,two,steps,e,g,with,a,check,for,presence,and,a,subsequent,put,in,a,non,atomic,way,check,the,documentation,of,the,native,cache,implementation,that,you,are,using,for,more,details,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,did,not,contain,any,mapping,for,that,key,prior,to,this,call,returning,code,null,is,therefore,an,indicator,that,the,given,code,value,has,been,associated,with,the,key,since,4,1;value,wrapper,put,if,absent,object,key,object,value
Cache -> ValueWrapper putIfAbsent(Object key, Object value)_;1467808333;Atomically associate the specified value with the specified key in this cache_if it is not set already._<p>This is equivalent to:_<pre><code>_Object existingValue = cache.get(key)__if (existingValue == null) {_cache.put(key, value)__return null__} else {_return existingValue___</code></pre>_except that the action is performed atomically. While all out-of-the-box_{@link CacheManager} implementations are able to perform the put atomically,_the operation may also be implemented in two steps, e.g. with a check for_presence and a subsequent put, in a non-atomic way. Check the documentation_of the native cache implementation that you are using for more details._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key_@return the value to which this cache maps the specified key (which may be_{@code null} itself), or also {@code null} if the cache did not contain any_mapping for that key prior to this call. Returning {@code null} is therefore_an indicator that the given {@code value} has been associated with the key._@since 4.1;ValueWrapper putIfAbsent(Object key, Object value)_;atomically,associate,the,specified,value,with,the,specified,key,in,this,cache,if,it,is,not,set,already,p,this,is,equivalent,to,pre,code,object,existing,value,cache,get,key,if,existing,value,null,cache,put,key,value,return,null,else,return,existing,value,code,pre,except,that,the,action,is,performed,atomically,while,all,out,of,the,box,link,cache,manager,implementations,are,able,to,perform,the,put,atomically,the,operation,may,also,be,implemented,in,two,steps,e,g,with,a,check,for,presence,and,a,subsequent,put,in,a,non,atomic,way,check,the,documentation,of,the,native,cache,implementation,that,you,are,using,for,more,details,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,did,not,contain,any,mapping,for,that,key,prior,to,this,call,returning,code,null,is,therefore,an,indicator,that,the,given,code,value,has,been,associated,with,the,key,since,4,1;value,wrapper,put,if,absent,object,key,object,value
Cache -> @Nullable 	ValueWrapper putIfAbsent(Object key, @Nullable Object value)_;1496837955;Atomically associate the specified value with the specified key in this cache_if it is not set already._<p>This is equivalent to:_<pre><code>_Object existingValue = cache.get(key)__if (existingValue == null) {_cache.put(key, value)__return null__} else {_return existingValue___</code></pre>_except that the action is performed atomically. While all out-of-the-box_{@link CacheManager} implementations are able to perform the put atomically,_the operation may also be implemented in two steps, e.g. with a check for_presence and a subsequent put, in a non-atomic way. Check the documentation_of the native cache implementation that you are using for more details._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key_@return the value to which this cache maps the specified key (which may be_{@code null} itself), or also {@code null} if the cache did not contain any_mapping for that key prior to this call. Returning {@code null} is therefore_an indicator that the given {@code value} has been associated with the key._@since 4.1;@Nullable_	ValueWrapper putIfAbsent(Object key, @Nullable Object value)_;atomically,associate,the,specified,value,with,the,specified,key,in,this,cache,if,it,is,not,set,already,p,this,is,equivalent,to,pre,code,object,existing,value,cache,get,key,if,existing,value,null,cache,put,key,value,return,null,else,return,existing,value,code,pre,except,that,the,action,is,performed,atomically,while,all,out,of,the,box,link,cache,manager,implementations,are,able,to,perform,the,put,atomically,the,operation,may,also,be,implemented,in,two,steps,e,g,with,a,check,for,presence,and,a,subsequent,put,in,a,non,atomic,way,check,the,documentation,of,the,native,cache,implementation,that,you,are,using,for,more,details,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,did,not,contain,any,mapping,for,that,key,prior,to,this,call,returning,code,null,is,therefore,an,indicator,that,the,given,code,value,has,been,associated,with,the,key,since,4,1;nullable,value,wrapper,put,if,absent,object,key,nullable,object,value
Cache -> @Nullable 	ValueWrapper putIfAbsent(Object key, @Nullable Object value)_;1498780456;Atomically associate the specified value with the specified key in this cache_if it is not set already._<p>This is equivalent to:_<pre><code>_Object existingValue = cache.get(key)__if (existingValue == null) {_cache.put(key, value)__return null__} else {_return existingValue___</code></pre>_except that the action is performed atomically. While all out-of-the-box_{@link CacheManager} implementations are able to perform the put atomically,_the operation may also be implemented in two steps, e.g. with a check for_presence and a subsequent put, in a non-atomic way. Check the documentation_of the native cache implementation that you are using for more details._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key_@return the value to which this cache maps the specified key (which may be_{@code null} itself), or also {@code null} if the cache did not contain any_mapping for that key prior to this call. Returning {@code null} is therefore_an indicator that the given {@code value} has been associated with the key._@since 4.1;@Nullable_	ValueWrapper putIfAbsent(Object key, @Nullable Object value)_;atomically,associate,the,specified,value,with,the,specified,key,in,this,cache,if,it,is,not,set,already,p,this,is,equivalent,to,pre,code,object,existing,value,cache,get,key,if,existing,value,null,cache,put,key,value,return,null,else,return,existing,value,code,pre,except,that,the,action,is,performed,atomically,while,all,out,of,the,box,link,cache,manager,implementations,are,able,to,perform,the,put,atomically,the,operation,may,also,be,implemented,in,two,steps,e,g,with,a,check,for,presence,and,a,subsequent,put,in,a,non,atomic,way,check,the,documentation,of,the,native,cache,implementation,that,you,are,using,for,more,details,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,did,not,contain,any,mapping,for,that,key,prior,to,this,call,returning,code,null,is,therefore,an,indicator,that,the,given,code,value,has,been,associated,with,the,key,since,4,1;nullable,value,wrapper,put,if,absent,object,key,nullable,object,value
Cache -> @Nullable 	ValueWrapper putIfAbsent(Object key, @Nullable Object value)_;1502974979;Atomically associate the specified value with the specified key in this cache_if it is not set already._<p>This is equivalent to:_<pre><code>_Object existingValue = cache.get(key)__if (existingValue == null) {_cache.put(key, value)__return null__} else {_return existingValue___</code></pre>_except that the action is performed atomically. While all out-of-the-box_{@link CacheManager} implementations are able to perform the put atomically,_the operation may also be implemented in two steps, e.g. with a check for_presence and a subsequent put, in a non-atomic way. Check the documentation_of the native cache implementation that you are using for more details._@param key the key with which the specified value is to be associated_@param value the value to be associated with the specified key_@return the value to which this cache maps the specified key (which may be_{@code null} itself), or also {@code null} if the cache did not contain any_mapping for that key prior to this call. Returning {@code null} is therefore_an indicator that the given {@code value} has been associated with the key._@since 4.1;@Nullable_	ValueWrapper putIfAbsent(Object key, @Nullable Object value)_;atomically,associate,the,specified,value,with,the,specified,key,in,this,cache,if,it,is,not,set,already,p,this,is,equivalent,to,pre,code,object,existing,value,cache,get,key,if,existing,value,null,cache,put,key,value,return,null,else,return,existing,value,code,pre,except,that,the,action,is,performed,atomically,while,all,out,of,the,box,link,cache,manager,implementations,are,able,to,perform,the,put,atomically,the,operation,may,also,be,implemented,in,two,steps,e,g,with,a,check,for,presence,and,a,subsequent,put,in,a,non,atomic,way,check,the,documentation,of,the,native,cache,implementation,that,you,are,using,for,more,details,param,key,the,key,with,which,the,specified,value,is,to,be,associated,param,value,the,value,to,be,associated,with,the,specified,key,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,did,not,contain,any,mapping,for,that,key,prior,to,this,call,returning,code,null,is,therefore,an,indicator,that,the,given,code,value,has,been,associated,with,the,key,since,4,1;nullable,value,wrapper,put,if,absent,object,key,nullable,object,value
Cache -> ValueWrapper -> Object get()_;1328020251;Return the actual value in the cache.;Object get()_;return,the,actual,value,in,the,cache;object,get
Cache -> ValueWrapper -> Object get()_;1356735495;Return the actual value in the cache.;Object get()_;return,the,actual,value,in,the,cache;object,get
Cache -> ValueWrapper -> Object get()_;1383571901;Return the actual value in the cache.;Object get()_;return,the,actual,value,in,the,cache;object,get
Cache -> ValueWrapper -> Object get()_;1395100259;Return the actual value in the cache.;Object get()_;return,the,actual,value,in,the,cache;object,get
Cache -> ValueWrapper -> Object get()_;1396517842;Return the actual value in the cache.;Object get()_;return,the,actual,value,in,the,cache;object,get
Cache -> ValueWrapper -> Object get()_;1404239431;Return the actual value in the cache.;Object get()_;return,the,actual,value,in,the,cache;object,get
Cache -> ValueWrapper -> Object get()_;1409742020;Return the actual value in the cache.;Object get()_;return,the,actual,value,in,the,cache;object,get
Cache -> ValueWrapper -> Object get()_;1429103622;Return the actual value in the cache.;Object get()_;return,the,actual,value,in,the,cache;object,get
Cache -> ValueWrapper -> Object get()_;1450701275;Return the actual value in the cache.;Object get()_;return,the,actual,value,in,the,cache;object,get
Cache -> ValueWrapper -> Object get()_;1450797566;Return the actual value in the cache.;Object get()_;return,the,actual,value,in,the,cache;object,get
Cache -> ValueWrapper -> Object get()_;1452685925;Return the actual value in the cache.;Object get()_;return,the,actual,value,in,the,cache;object,get
Cache -> ValueWrapper -> Object get()_;1461047077;Return the actual value in the cache.;Object get()_;return,the,actual,value,in,the,cache;object,get
Cache -> ValueWrapper -> Object get()_;1465306936;Return the actual value in the cache.;Object get()_;return,the,actual,value,in,the,cache;object,get
Cache -> ValueWrapper -> Object get()_;1467808333;Return the actual value in the cache.;Object get()_;return,the,actual,value,in,the,cache;object,get
Cache -> @Nullable 	<T> T get(Object key, @Nullable Class<T> type)_;1496837955;Return the value to which this cache maps the specified key,_generically specifying a type that return value will be cast to._<p>Note: This variant of {@code get} does not allow for differentiating_between a cached {@code null} value and no cache entry found at all._Use the standard {@link #get(Object)} variant for that purpose instead._@param key the key whose associated value is to be returned_@param type the required type of the returned value (may be_{@code null} to bypass a type check_ in case of a {@code null}_value found in the cache, the specified type is irrelevant)_@return the value to which this cache maps the specified key_(which may be {@code null} itself), or also {@code null} if_the cache contains no mapping for this key_@throws IllegalStateException if a cache entry has been found_but failed to match the specified type_@since 4.0_@see #get(Object);@Nullable_	<T> T get(Object key, @Nullable Class<T> type)_;return,the,value,to,which,this,cache,maps,the,specified,key,generically,specifying,a,type,that,return,value,will,be,cast,to,p,note,this,variant,of,code,get,does,not,allow,for,differentiating,between,a,cached,code,null,value,and,no,cache,entry,found,at,all,use,the,standard,link,get,object,variant,for,that,purpose,instead,param,key,the,key,whose,associated,value,is,to,be,returned,param,type,the,required,type,of,the,returned,value,may,be,code,null,to,bypass,a,type,check,in,case,of,a,code,null,value,found,in,the,cache,the,specified,type,is,irrelevant,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,contains,no,mapping,for,this,key,throws,illegal,state,exception,if,a,cache,entry,has,been,found,but,failed,to,match,the,specified,type,since,4,0,see,get,object;nullable,t,t,get,object,key,nullable,class,t,type
Cache -> @Nullable 	<T> T get(Object key, @Nullable Class<T> type)_;1498780456;Return the value to which this cache maps the specified key,_generically specifying a type that return value will be cast to._<p>Note: This variant of {@code get} does not allow for differentiating_between a cached {@code null} value and no cache entry found at all._Use the standard {@link #get(Object)} variant for that purpose instead._@param key the key whose associated value is to be returned_@param type the required type of the returned value (may be_{@code null} to bypass a type check_ in case of a {@code null}_value found in the cache, the specified type is irrelevant)_@return the value to which this cache maps the specified key_(which may be {@code null} itself), or also {@code null} if_the cache contains no mapping for this key_@throws IllegalStateException if a cache entry has been found_but failed to match the specified type_@since 4.0_@see #get(Object);@Nullable_	<T> T get(Object key, @Nullable Class<T> type)_;return,the,value,to,which,this,cache,maps,the,specified,key,generically,specifying,a,type,that,return,value,will,be,cast,to,p,note,this,variant,of,code,get,does,not,allow,for,differentiating,between,a,cached,code,null,value,and,no,cache,entry,found,at,all,use,the,standard,link,get,object,variant,for,that,purpose,instead,param,key,the,key,whose,associated,value,is,to,be,returned,param,type,the,required,type,of,the,returned,value,may,be,code,null,to,bypass,a,type,check,in,case,of,a,code,null,value,found,in,the,cache,the,specified,type,is,irrelevant,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,contains,no,mapping,for,this,key,throws,illegal,state,exception,if,a,cache,entry,has,been,found,but,failed,to,match,the,specified,type,since,4,0,see,get,object;nullable,t,t,get,object,key,nullable,class,t,type
Cache -> @Nullable 	<T> T get(Object key, @Nullable Class<T> type)_;1502974979;Return the value to which this cache maps the specified key,_generically specifying a type that return value will be cast to._<p>Note: This variant of {@code get} does not allow for differentiating_between a cached {@code null} value and no cache entry found at all._Use the standard {@link #get(Object)} variant for that purpose instead._@param key the key whose associated value is to be returned_@param type the required type of the returned value (may be_{@code null} to bypass a type check_ in case of a {@code null}_value found in the cache, the specified type is irrelevant)_@return the value to which this cache maps the specified key_(which may be {@code null} itself), or also {@code null} if_the cache contains no mapping for this key_@throws IllegalStateException if a cache entry has been found_but failed to match the specified type_@since 4.0_@see #get(Object);@Nullable_	<T> T get(Object key, @Nullable Class<T> type)_;return,the,value,to,which,this,cache,maps,the,specified,key,generically,specifying,a,type,that,return,value,will,be,cast,to,p,note,this,variant,of,code,get,does,not,allow,for,differentiating,between,a,cached,code,null,value,and,no,cache,entry,found,at,all,use,the,standard,link,get,object,variant,for,that,purpose,instead,param,key,the,key,whose,associated,value,is,to,be,returned,param,type,the,required,type,of,the,returned,value,may,be,code,null,to,bypass,a,type,check,in,case,of,a,code,null,value,found,in,the,cache,the,specified,type,is,irrelevant,return,the,value,to,which,this,cache,maps,the,specified,key,which,may,be,code,null,itself,or,also,code,null,if,the,cache,contains,no,mapping,for,this,key,throws,illegal,state,exception,if,a,cache,entry,has,been,found,but,failed,to,match,the,specified,type,since,4,0,see,get,object;nullable,t,t,get,object,key,nullable,class,t,type
