commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void setParentMessageSource(@Nullable MessageSource parent) {     this.parentMessageSource = parent. }
false;public;0;5;;@Override @Nullable public MessageSource getParentMessageSource() {     return this.parentMessageSource. }
false;public;4;13;;@Override @Nullable public String getMessage(String code, @Nullable Object[] args, @Nullable String defaultMessage, Locale locale) {     if (this.parentMessageSource != null) {         return this.parentMessageSource.getMessage(code, args, defaultMessage, locale).     } else if (defaultMessage != null) {         return renderDefaultMessage(defaultMessage, args, locale).     } else {         return null.     } }
false;public;3;9;;@Override public String getMessage(String code, @Nullable Object[] args, Locale locale) throws NoSuchMessageException {     if (this.parentMessageSource != null) {         return this.parentMessageSource.getMessage(code, args, locale).     } else {         throw new NoSuchMessageException(code, locale).     } }
false;public;2;14;;@Override public String getMessage(MessageSourceResolvable resolvable, Locale locale) throws NoSuchMessageException {     if (this.parentMessageSource != null) {         return this.parentMessageSource.getMessage(resolvable, locale).     } else {         if (resolvable.getDefaultMessage() != null) {             return renderDefaultMessage(resolvable.getDefaultMessage(), resolvable.getArguments(), locale).         }         String[] codes = resolvable.getCodes().         String code = (codes != null && codes.length > 0 ? codes[0] : "").         throw new NoSuchMessageException(code, locale).     } }
false;public;0;4;;@Override public String toString() {     return this.parentMessageSource != null ? this.parentMessageSource.toString() : "Empty MessageSource". }
