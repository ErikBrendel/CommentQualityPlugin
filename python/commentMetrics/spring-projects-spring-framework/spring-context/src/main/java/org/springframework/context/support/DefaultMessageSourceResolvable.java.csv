commented;modifiers;parameterAmount;loc;comment;code
true;public;0;4;/**  * Return the default code of this resolvable, that is,  * the last one in the codes array.  */ ;/**  * Return the default code of this resolvable, that is,  * the last one in the codes array.  */ @Nullable public String getCode() {     return (this.codes != null && this.codes.length > 0 ? this.codes[this.codes.length - 1] : null). }
false;public;0;5;;@Override @Nullable public String[] getCodes() {     return this.codes. }
false;public;0;5;;@Override @Nullable public Object[] getArguments() {     return this.arguments. }
false;public;0;5;;@Override @Nullable public String getDefaultMessage() {     return this.defaultMessage. }
true;protected,final;0;7;/**  * Build a default String representation for this MessageSourceResolvable:  * including codes, arguments, and default message.  */ ;/**  * Build a default String representation for this MessageSourceResolvable:  * including codes, arguments, and default message.  */ protected final String resolvableToString() {     StringBuilder result = new StringBuilder().     result.append("codes [").append(StringUtils.arrayToDelimitedString(this.codes, ",")).     result.append("]. arguments [").append(StringUtils.arrayToDelimitedString(this.arguments, ",")).     result.append("]. default message [").append(this.defaultMessage).append(']').     return result.toString(). }
true;public;0;4;/**  * The default implementation exposes the attributes of this MessageSourceResolvable.  * <p>To be overridden in more specific subclasses, potentially including the  * resolvable content through {@code resolvableToString()}.  * @see #resolvableToString()  */ ;/**  * The default implementation exposes the attributes of this MessageSourceResolvable.  * <p>To be overridden in more specific subclasses, potentially including the  * resolvable content through {@code resolvableToString()}.  * @see #resolvableToString()  */ @Override public String toString() {     return getClass().getName() + ": " + resolvableToString(). }
false;public;1;13;;@Override public boolean equals(Object other) {     if (this == other) {         return true.     }     if (!(other instanceof MessageSourceResolvable)) {         return false.     }     MessageSourceResolvable otherResolvable = (MessageSourceResolvable) other.     return (ObjectUtils.nullSafeEquals(getCodes(), otherResolvable.getCodes()) && ObjectUtils.nullSafeEquals(getArguments(), otherResolvable.getArguments()) && ObjectUtils.nullSafeEquals(getDefaultMessage(), otherResolvable.getDefaultMessage())). }
false;public;0;7;;@Override public int hashCode() {     int hashCode = ObjectUtils.nullSafeHashCode(getCodes()).     hashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(getArguments()).     hashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(getDefaultMessage()).     return hashCode. }
