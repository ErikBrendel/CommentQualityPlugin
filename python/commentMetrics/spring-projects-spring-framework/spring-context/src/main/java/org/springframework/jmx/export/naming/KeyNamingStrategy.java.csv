# id;timestamp;commentText;codeText;commentWords;codeWords
KeyNamingStrategy -> @Override 	public void afterPropertiesSet() throws IOException;1356735495;Merges the {@code Properties} configured in the {@code mappings} and_{@code mappingLocations} into the final {@code Properties} instance_used for {@code ObjectName} resolution._@throws IOException;@Override_	public void afterPropertiesSet() throws IOException {_		this.mergedMappings = new Properties()___		CollectionUtils.mergePropertiesIntoMap(this.mappings, this.mergedMappings)___		if (this.mappingLocations != null) {_			for (int i = 0_ i < this.mappingLocations.length_ i++) {_				Resource location = this.mappingLocations[i]__				if (logger.isInfoEnabled()) {_					logger.info("Loading JMX object name mappings file from " + location)__				}_				PropertiesLoaderUtils.fillProperties(this.mergedMappings, location)__			}_		}_	};merges,the,code,properties,configured,in,the,code,mappings,and,code,mapping,locations,into,the,final,code,properties,instance,used,for,code,object,name,resolution,throws,ioexception;override,public,void,after,properties,set,throws,ioexception,this,merged,mappings,new,properties,collection,utils,merge,properties,into,map,this,mappings,this,merged,mappings,if,this,mapping,locations,null,for,int,i,0,i,this,mapping,locations,length,i,resource,location,this,mapping,locations,i,if,logger,is,info,enabled,logger,info,loading,jmx,object,name,mappings,file,from,location,properties,loader,utils,fill,properties,this,merged,mappings,location
KeyNamingStrategy -> @Override 	public void afterPropertiesSet() throws IOException;1368482696;Merges the {@code Properties} configured in the {@code mappings} and_{@code mappingLocations} into the final {@code Properties} instance_used for {@code ObjectName} resolution._@throws IOException;@Override_	public void afterPropertiesSet() throws IOException {_		this.mergedMappings = new Properties()___		CollectionUtils.mergePropertiesIntoMap(this.mappings, this.mergedMappings)___		if (this.mappingLocations != null) {_			for (int i = 0_ i < this.mappingLocations.length_ i++) {_				Resource location = this.mappingLocations[i]__				if (logger.isInfoEnabled()) {_					logger.info("Loading JMX object name mappings file from " + location)__				}_				PropertiesLoaderUtils.fillProperties(this.mergedMappings, location)__			}_		}_	};merges,the,code,properties,configured,in,the,code,mappings,and,code,mapping,locations,into,the,final,code,properties,instance,used,for,code,object,name,resolution,throws,ioexception;override,public,void,after,properties,set,throws,ioexception,this,merged,mappings,new,properties,collection,utils,merge,properties,into,map,this,mappings,this,merged,mappings,if,this,mapping,locations,null,for,int,i,0,i,this,mapping,locations,length,i,resource,location,this,mapping,locations,i,if,logger,is,info,enabled,logger,info,loading,jmx,object,name,mappings,file,from,location,properties,loader,utils,fill,properties,this,merged,mappings,location
KeyNamingStrategy -> @Override 	public void afterPropertiesSet() throws IOException;1413848647;Merges the {@code Properties} configured in the {@code mappings} and_{@code mappingLocations} into the final {@code Properties} instance_used for {@code ObjectName} resolution._@throws IOException;@Override_	public void afterPropertiesSet() throws IOException {_		this.mergedMappings = new Properties()___		CollectionUtils.mergePropertiesIntoMap(this.mappings, this.mergedMappings)___		if (this.mappingLocations != null) {_			for (int i = 0_ i < this.mappingLocations.length_ i++) {_				Resource location = this.mappingLocations[i]__				if (logger.isInfoEnabled()) {_					logger.info("Loading JMX object name mappings file from " + location)__				}_				PropertiesLoaderUtils.fillProperties(this.mergedMappings, location)__			}_		}_	};merges,the,code,properties,configured,in,the,code,mappings,and,code,mapping,locations,into,the,final,code,properties,instance,used,for,code,object,name,resolution,throws,ioexception;override,public,void,after,properties,set,throws,ioexception,this,merged,mappings,new,properties,collection,utils,merge,properties,into,map,this,mappings,this,merged,mappings,if,this,mapping,locations,null,for,int,i,0,i,this,mapping,locations,length,i,resource,location,this,mapping,locations,i,if,logger,is,info,enabled,logger,info,loading,jmx,object,name,mappings,file,from,location,properties,loader,utils,fill,properties,this,merged,mappings,location
KeyNamingStrategy -> @Override 	public void afterPropertiesSet() throws IOException;1461047077;Merges the {@code Properties} configured in the {@code mappings} and_{@code mappingLocations} into the final {@code Properties} instance_used for {@code ObjectName} resolution._@throws IOException;@Override_	public void afterPropertiesSet() throws IOException {_		this.mergedMappings = new Properties()___		CollectionUtils.mergePropertiesIntoMap(this.mappings, this.mergedMappings)___		if (this.mappingLocations != null) {_			for (int i = 0_ i < this.mappingLocations.length_ i++) {_				Resource location = this.mappingLocations[i]__				if (logger.isInfoEnabled()) {_					logger.info("Loading JMX object name mappings file from " + location)__				}_				PropertiesLoaderUtils.fillProperties(this.mergedMappings, location)__			}_		}_	};merges,the,code,properties,configured,in,the,code,mappings,and,code,mapping,locations,into,the,final,code,properties,instance,used,for,code,object,name,resolution,throws,ioexception;override,public,void,after,properties,set,throws,ioexception,this,merged,mappings,new,properties,collection,utils,merge,properties,into,map,this,mappings,this,merged,mappings,if,this,mapping,locations,null,for,int,i,0,i,this,mapping,locations,length,i,resource,location,this,mapping,locations,i,if,logger,is,info,enabled,logger,info,loading,jmx,object,name,mappings,file,from,location,properties,loader,utils,fill,properties,this,merged,mappings,location
KeyNamingStrategy -> @Override 	public void afterPropertiesSet() throws IOException;1496837955;Merges the {@code Properties} configured in the {@code mappings} and_{@code mappingLocations} into the final {@code Properties} instance_used for {@code ObjectName} resolution._@throws IOException;@Override_	public void afterPropertiesSet() throws IOException {_		this.mergedMappings = new Properties()__		CollectionUtils.mergePropertiesIntoMap(this.mappings, this.mergedMappings)___		if (this.mappingLocations != null) {_			for (Resource location : this.mappingLocations) {_				if (logger.isInfoEnabled()) {_					logger.info("Loading JMX object name mappings file from " + location)__				}_				PropertiesLoaderUtils.fillProperties(this.mergedMappings, location)__			}_		}_	};merges,the,code,properties,configured,in,the,code,mappings,and,code,mapping,locations,into,the,final,code,properties,instance,used,for,code,object,name,resolution,throws,ioexception;override,public,void,after,properties,set,throws,ioexception,this,merged,mappings,new,properties,collection,utils,merge,properties,into,map,this,mappings,this,merged,mappings,if,this,mapping,locations,null,for,resource,location,this,mapping,locations,if,logger,is,info,enabled,logger,info,loading,jmx,object,name,mappings,file,from,location,properties,loader,utils,fill,properties,this,merged,mappings,location
KeyNamingStrategy -> @Override 	public void afterPropertiesSet() throws IOException;1498780456;Merges the {@code Properties} configured in the {@code mappings} and_{@code mappingLocations} into the final {@code Properties} instance_used for {@code ObjectName} resolution._@throws IOException;@Override_	public void afterPropertiesSet() throws IOException {_		this.mergedMappings = new Properties()__		CollectionUtils.mergePropertiesIntoMap(this.mappings, this.mergedMappings)___		if (this.mappingLocations != null) {_			for (Resource location : this.mappingLocations) {_				if (logger.isInfoEnabled()) {_					logger.info("Loading JMX object name mappings file from " + location)__				}_				PropertiesLoaderUtils.fillProperties(this.mergedMappings, location)__			}_		}_	};merges,the,code,properties,configured,in,the,code,mappings,and,code,mapping,locations,into,the,final,code,properties,instance,used,for,code,object,name,resolution,throws,ioexception;override,public,void,after,properties,set,throws,ioexception,this,merged,mappings,new,properties,collection,utils,merge,properties,into,map,this,mappings,this,merged,mappings,if,this,mapping,locations,null,for,resource,location,this,mapping,locations,if,logger,is,info,enabled,logger,info,loading,jmx,object,name,mappings,file,from,location,properties,loader,utils,fill,properties,this,merged,mappings,location
KeyNamingStrategy -> @Override 	public void afterPropertiesSet() throws IOException;1506468851;Merges the {@code Properties} configured in the {@code mappings} and_{@code mappingLocations} into the final {@code Properties} instance_used for {@code ObjectName} resolution.;@Override_	public void afterPropertiesSet() throws IOException {_		this.mergedMappings = new Properties()__		CollectionUtils.mergePropertiesIntoMap(this.mappings, this.mergedMappings)___		if (this.mappingLocations != null) {_			for (Resource location : this.mappingLocations) {_				if (logger.isInfoEnabled()) {_					logger.info("Loading JMX object name mappings file from " + location)__				}_				PropertiesLoaderUtils.fillProperties(this.mergedMappings, location)__			}_		}_	};merges,the,code,properties,configured,in,the,code,mappings,and,code,mapping,locations,into,the,final,code,properties,instance,used,for,code,object,name,resolution;override,public,void,after,properties,set,throws,ioexception,this,merged,mappings,new,properties,collection,utils,merge,properties,into,map,this,mappings,this,merged,mappings,if,this,mapping,locations,null,for,resource,location,this,mapping,locations,if,logger,is,info,enabled,logger,info,loading,jmx,object,name,mappings,file,from,location,properties,loader,utils,fill,properties,this,merged,mappings,location
KeyNamingStrategy -> @Override 	public void afterPropertiesSet() throws IOException;1532091916;Merges the {@code Properties} configured in the {@code mappings} and_{@code mappingLocations} into the final {@code Properties} instance_used for {@code ObjectName} resolution.;@Override_	public void afterPropertiesSet() throws IOException {_		this.mergedMappings = new Properties()__		CollectionUtils.mergePropertiesIntoMap(this.mappings, this.mergedMappings)___		if (this.mappingLocations != null) {_			for (Resource location : this.mappingLocations) {_				if (logger.isDebugEnabled()) {_					logger.debug("Loading JMX object name mappings file from " + location)__				}_				PropertiesLoaderUtils.fillProperties(this.mergedMappings, location)__			}_		}_	};merges,the,code,properties,configured,in,the,code,mappings,and,code,mapping,locations,into,the,final,code,properties,instance,used,for,code,object,name,resolution;override,public,void,after,properties,set,throws,ioexception,this,merged,mappings,new,properties,collection,utils,merge,properties,into,map,this,mappings,this,merged,mappings,if,this,mapping,locations,null,for,resource,location,this,mapping,locations,if,logger,is,debug,enabled,logger,debug,loading,jmx,object,name,mappings,file,from,location,properties,loader,utils,fill,properties,this,merged,mappings,location
KeyNamingStrategy -> public void setMappingLocations(Resource... mappingLocations);1496837955;Set location of properties files to be loaded,_containing object name mappings.;public void setMappingLocations(Resource... mappingLocations) {_		this.mappingLocations = mappingLocations__	};set,location,of,properties,files,to,be,loaded,containing,object,name,mappings;public,void,set,mapping,locations,resource,mapping,locations,this,mapping,locations,mapping,locations
KeyNamingStrategy -> public void setMappingLocations(Resource... mappingLocations);1498780456;Set location of properties files to be loaded,_containing object name mappings.;public void setMappingLocations(Resource... mappingLocations) {_		this.mappingLocations = mappingLocations__	};set,location,of,properties,files,to,be,loaded,containing,object,name,mappings;public,void,set,mapping,locations,resource,mapping,locations,this,mapping,locations,mapping,locations
KeyNamingStrategy -> public void setMappingLocations(Resource... mappingLocations);1506468851;Set location of properties files to be loaded,_containing object name mappings.;public void setMappingLocations(Resource... mappingLocations) {_		this.mappingLocations = mappingLocations__	};set,location,of,properties,files,to,be,loaded,containing,object,name,mappings;public,void,set,mapping,locations,resource,mapping,locations,this,mapping,locations,mapping,locations
KeyNamingStrategy -> public void setMappingLocations(Resource... mappingLocations);1532091916;Set location of properties files to be loaded,_containing object name mappings.;public void setMappingLocations(Resource... mappingLocations) {_		this.mappingLocations = mappingLocations__	};set,location,of,properties,files,to,be,loaded,containing,object,name,mappings;public,void,set,mapping,locations,resource,mapping,locations,this,mapping,locations,mapping,locations
KeyNamingStrategy -> public void setMappingLocation(Resource location);1328020251;Set a location of a properties file to be loaded,_containing object name mappings.;public void setMappingLocation(Resource location) {_		this.mappingLocations = new Resource[]{location}__	};set,a,location,of,a,properties,file,to,be,loaded,containing,object,name,mappings;public,void,set,mapping,location,resource,location,this,mapping,locations,new,resource,location
KeyNamingStrategy -> public void setMappingLocation(Resource location);1356735495;Set a location of a properties file to be loaded,_containing object name mappings.;public void setMappingLocation(Resource location) {_		this.mappingLocations = new Resource[]{location}__	};set,a,location,of,a,properties,file,to,be,loaded,containing,object,name,mappings;public,void,set,mapping,location,resource,location,this,mapping,locations,new,resource,location
KeyNamingStrategy -> public void setMappingLocation(Resource location);1357119239;Set a location of a properties file to be loaded,_containing object name mappings.;public void setMappingLocation(Resource location) {_		this.mappingLocations = new Resource[]{location}__	};set,a,location,of,a,properties,file,to,be,loaded,containing,object,name,mappings;public,void,set,mapping,location,resource,location,this,mapping,locations,new,resource,location
KeyNamingStrategy -> public void setMappingLocation(Resource location);1368482696;Set a location of a properties file to be loaded,_containing object name mappings.;public void setMappingLocation(Resource location) {_		this.mappingLocations = new Resource[]{location}__	};set,a,location,of,a,properties,file,to,be,loaded,containing,object,name,mappings;public,void,set,mapping,location,resource,location,this,mapping,locations,new,resource,location
KeyNamingStrategy -> public void setMappingLocation(Resource location);1413848647;Set a location of a properties file to be loaded,_containing object name mappings.;public void setMappingLocation(Resource location) {_		this.mappingLocations = new Resource[]{location}__	};set,a,location,of,a,properties,file,to,be,loaded,containing,object,name,mappings;public,void,set,mapping,location,resource,location,this,mapping,locations,new,resource,location
KeyNamingStrategy -> public void setMappingLocation(Resource location);1461047077;Set a location of a properties file to be loaded,_containing object name mappings.;public void setMappingLocation(Resource location) {_		this.mappingLocations = new Resource[]{location}__	};set,a,location,of,a,properties,file,to,be,loaded,containing,object,name,mappings;public,void,set,mapping,location,resource,location,this,mapping,locations,new,resource,location
KeyNamingStrategy -> public void setMappingLocation(Resource location);1496837955;Set a location of a properties file to be loaded,_containing object name mappings.;public void setMappingLocation(Resource location) {_		this.mappingLocations = new Resource[] {location}__	};set,a,location,of,a,properties,file,to,be,loaded,containing,object,name,mappings;public,void,set,mapping,location,resource,location,this,mapping,locations,new,resource,location
KeyNamingStrategy -> public void setMappingLocation(Resource location);1498780456;Set a location of a properties file to be loaded,_containing object name mappings.;public void setMappingLocation(Resource location) {_		this.mappingLocations = new Resource[] {location}__	};set,a,location,of,a,properties,file,to,be,loaded,containing,object,name,mappings;public,void,set,mapping,location,resource,location,this,mapping,locations,new,resource,location
KeyNamingStrategy -> public void setMappingLocation(Resource location);1506468851;Set a location of a properties file to be loaded,_containing object name mappings.;public void setMappingLocation(Resource location) {_		this.mappingLocations = new Resource[] {location}__	};set,a,location,of,a,properties,file,to,be,loaded,containing,object,name,mappings;public,void,set,mapping,location,resource,location,this,mapping,locations,new,resource,location
KeyNamingStrategy -> public void setMappingLocation(Resource location);1532091916;Set a location of a properties file to be loaded,_containing object name mappings.;public void setMappingLocation(Resource location) {_		this.mappingLocations = new Resource[] {location}__	};set,a,location,of,a,properties,file,to,be,loaded,containing,object,name,mappings;public,void,set,mapping,location,resource,location,this,mapping,locations,new,resource,location
KeyNamingStrategy -> public void setMappings(Properties mappings);1328020251;Set local properties, containing object name mappings, e.g. via_the "props" tag in XML bean definitions. These can be considered_defaults, to be overridden by properties loaded from files.;public void setMappings(Properties mappings) {_		this.mappings = mappings__	};set,local,properties,containing,object,name,mappings,e,g,via,the,props,tag,in,xml,bean,definitions,these,can,be,considered,defaults,to,be,overridden,by,properties,loaded,from,files;public,void,set,mappings,properties,mappings,this,mappings,mappings
KeyNamingStrategy -> public void setMappings(Properties mappings);1356735495;Set local properties, containing object name mappings, e.g. via_the "props" tag in XML bean definitions. These can be considered_defaults, to be overridden by properties loaded from files.;public void setMappings(Properties mappings) {_		this.mappings = mappings__	};set,local,properties,containing,object,name,mappings,e,g,via,the,props,tag,in,xml,bean,definitions,these,can,be,considered,defaults,to,be,overridden,by,properties,loaded,from,files;public,void,set,mappings,properties,mappings,this,mappings,mappings
KeyNamingStrategy -> public void setMappings(Properties mappings);1357119239;Set local properties, containing object name mappings, e.g. via_the "props" tag in XML bean definitions. These can be considered_defaults, to be overridden by properties loaded from files.;public void setMappings(Properties mappings) {_		this.mappings = mappings__	};set,local,properties,containing,object,name,mappings,e,g,via,the,props,tag,in,xml,bean,definitions,these,can,be,considered,defaults,to,be,overridden,by,properties,loaded,from,files;public,void,set,mappings,properties,mappings,this,mappings,mappings
KeyNamingStrategy -> public void setMappings(Properties mappings);1368482696;Set local properties, containing object name mappings, e.g. via_the "props" tag in XML bean definitions. These can be considered_defaults, to be overridden by properties loaded from files.;public void setMappings(Properties mappings) {_		this.mappings = mappings__	};set,local,properties,containing,object,name,mappings,e,g,via,the,props,tag,in,xml,bean,definitions,these,can,be,considered,defaults,to,be,overridden,by,properties,loaded,from,files;public,void,set,mappings,properties,mappings,this,mappings,mappings
KeyNamingStrategy -> public void setMappings(Properties mappings);1413848647;Set local properties, containing object name mappings, e.g. via_the "props" tag in XML bean definitions. These can be considered_defaults, to be overridden by properties loaded from files.;public void setMappings(Properties mappings) {_		this.mappings = mappings__	};set,local,properties,containing,object,name,mappings,e,g,via,the,props,tag,in,xml,bean,definitions,these,can,be,considered,defaults,to,be,overridden,by,properties,loaded,from,files;public,void,set,mappings,properties,mappings,this,mappings,mappings
KeyNamingStrategy -> public void setMappings(Properties mappings);1461047077;Set local properties, containing object name mappings, e.g. via_the "props" tag in XML bean definitions. These can be considered_defaults, to be overridden by properties loaded from files.;public void setMappings(Properties mappings) {_		this.mappings = mappings__	};set,local,properties,containing,object,name,mappings,e,g,via,the,props,tag,in,xml,bean,definitions,these,can,be,considered,defaults,to,be,overridden,by,properties,loaded,from,files;public,void,set,mappings,properties,mappings,this,mappings,mappings
KeyNamingStrategy -> public void setMappings(Properties mappings);1496837955;Set local properties, containing object name mappings, e.g. via_the "props" tag in XML bean definitions. These can be considered_defaults, to be overridden by properties loaded from files.;public void setMappings(Properties mappings) {_		this.mappings = mappings__	};set,local,properties,containing,object,name,mappings,e,g,via,the,props,tag,in,xml,bean,definitions,these,can,be,considered,defaults,to,be,overridden,by,properties,loaded,from,files;public,void,set,mappings,properties,mappings,this,mappings,mappings
KeyNamingStrategy -> public void setMappings(Properties mappings);1498780456;Set local properties, containing object name mappings, e.g. via_the "props" tag in XML bean definitions. These can be considered_defaults, to be overridden by properties loaded from files.;public void setMappings(Properties mappings) {_		this.mappings = mappings__	};set,local,properties,containing,object,name,mappings,e,g,via,the,props,tag,in,xml,bean,definitions,these,can,be,considered,defaults,to,be,overridden,by,properties,loaded,from,files;public,void,set,mappings,properties,mappings,this,mappings,mappings
KeyNamingStrategy -> public void setMappings(Properties mappings);1506468851;Set local properties, containing object name mappings, e.g. via_the "props" tag in XML bean definitions. These can be considered_defaults, to be overridden by properties loaded from files.;public void setMappings(Properties mappings) {_		this.mappings = mappings__	};set,local,properties,containing,object,name,mappings,e,g,via,the,props,tag,in,xml,bean,definitions,these,can,be,considered,defaults,to,be,overridden,by,properties,loaded,from,files;public,void,set,mappings,properties,mappings,this,mappings,mappings
KeyNamingStrategy -> public void setMappings(Properties mappings);1532091916;Set local properties, containing object name mappings, e.g. via_the "props" tag in XML bean definitions. These can be considered_defaults, to be overridden by properties loaded from files.;public void setMappings(Properties mappings) {_		this.mappings = mappings__	};set,local,properties,containing,object,name,mappings,e,g,via,the,props,tag,in,xml,bean,definitions,these,can,be,considered,defaults,to,be,overridden,by,properties,loaded,from,files;public,void,set,mappings,properties,mappings,this,mappings,mappings
KeyNamingStrategy -> @Override 	public ObjectName getObjectName(Object managedBean, @Nullable String beanKey) throws MalformedObjectNameException;1496837955;Attempts to retrieve the {@code ObjectName} via the given key, trying to_find a mapped value in the mappings first.;@Override_	public ObjectName getObjectName(Object managedBean, @Nullable String beanKey) throws MalformedObjectNameException {_		Assert.notNull(beanKey, "KeyNamingStrategy requires bean key")__		String objectName = null__		if (this.mergedMappings != null) {_			objectName = this.mergedMappings.getProperty(beanKey)__		}_		if (objectName == null) {_			objectName = beanKey__		}_		return ObjectNameManager.getInstance(objectName)__	};attempts,to,retrieve,the,code,object,name,via,the,given,key,trying,to,find,a,mapped,value,in,the,mappings,first;override,public,object,name,get,object,name,object,managed,bean,nullable,string,bean,key,throws,malformed,object,name,exception,assert,not,null,bean,key,key,naming,strategy,requires,bean,key,string,object,name,null,if,this,merged,mappings,null,object,name,this,merged,mappings,get,property,bean,key,if,object,name,null,object,name,bean,key,return,object,name,manager,get,instance,object,name
KeyNamingStrategy -> @Override 	public ObjectName getObjectName(Object managedBean, @Nullable String beanKey) throws MalformedObjectNameException;1498780456;Attempts to retrieve the {@code ObjectName} via the given key, trying to_find a mapped value in the mappings first.;@Override_	public ObjectName getObjectName(Object managedBean, @Nullable String beanKey) throws MalformedObjectNameException {_		Assert.notNull(beanKey, "KeyNamingStrategy requires bean key")__		String objectName = null__		if (this.mergedMappings != null) {_			objectName = this.mergedMappings.getProperty(beanKey)__		}_		if (objectName == null) {_			objectName = beanKey__		}_		return ObjectNameManager.getInstance(objectName)__	};attempts,to,retrieve,the,code,object,name,via,the,given,key,trying,to,find,a,mapped,value,in,the,mappings,first;override,public,object,name,get,object,name,object,managed,bean,nullable,string,bean,key,throws,malformed,object,name,exception,assert,not,null,bean,key,key,naming,strategy,requires,bean,key,string,object,name,null,if,this,merged,mappings,null,object,name,this,merged,mappings,get,property,bean,key,if,object,name,null,object,name,bean,key,return,object,name,manager,get,instance,object,name
KeyNamingStrategy -> @Override 	public ObjectName getObjectName(Object managedBean, @Nullable String beanKey) throws MalformedObjectNameException;1506468851;Attempts to retrieve the {@code ObjectName} via the given key, trying to_find a mapped value in the mappings first.;@Override_	public ObjectName getObjectName(Object managedBean, @Nullable String beanKey) throws MalformedObjectNameException {_		Assert.notNull(beanKey, "KeyNamingStrategy requires bean key")__		String objectName = null__		if (this.mergedMappings != null) {_			objectName = this.mergedMappings.getProperty(beanKey)__		}_		if (objectName == null) {_			objectName = beanKey__		}_		return ObjectNameManager.getInstance(objectName)__	};attempts,to,retrieve,the,code,object,name,via,the,given,key,trying,to,find,a,mapped,value,in,the,mappings,first;override,public,object,name,get,object,name,object,managed,bean,nullable,string,bean,key,throws,malformed,object,name,exception,assert,not,null,bean,key,key,naming,strategy,requires,bean,key,string,object,name,null,if,this,merged,mappings,null,object,name,this,merged,mappings,get,property,bean,key,if,object,name,null,object,name,bean,key,return,object,name,manager,get,instance,object,name
KeyNamingStrategy -> @Override 	public ObjectName getObjectName(Object managedBean, @Nullable String beanKey) throws MalformedObjectNameException;1532091916;Attempts to retrieve the {@code ObjectName} via the given key, trying to_find a mapped value in the mappings first.;@Override_	public ObjectName getObjectName(Object managedBean, @Nullable String beanKey) throws MalformedObjectNameException {_		Assert.notNull(beanKey, "KeyNamingStrategy requires bean key")__		String objectName = null__		if (this.mergedMappings != null) {_			objectName = this.mergedMappings.getProperty(beanKey)__		}_		if (objectName == null) {_			objectName = beanKey__		}_		return ObjectNameManager.getInstance(objectName)__	};attempts,to,retrieve,the,code,object,name,via,the,given,key,trying,to,find,a,mapped,value,in,the,mappings,first;override,public,object,name,get,object,name,object,managed,bean,nullable,string,bean,key,throws,malformed,object,name,exception,assert,not,null,bean,key,key,naming,strategy,requires,bean,key,string,object,name,null,if,this,merged,mappings,null,object,name,this,merged,mappings,get,property,bean,key,if,object,name,null,object,name,bean,key,return,object,name,manager,get,instance,object,name
KeyNamingStrategy -> public void afterPropertiesSet() throws IOException;1328020251;Merges the <code>Properties</code> configured in the <code>mappings</code> and_<code>mappingLocations</code> into the final <code>Properties</code> instance_used for <code>ObjectName</code> resolution._@throws IOException;public void afterPropertiesSet() throws IOException {_		this.mergedMappings = new Properties()___		CollectionUtils.mergePropertiesIntoMap(this.mappings, this.mergedMappings)___		if (this.mappingLocations != null) {_			for (int i = 0_ i < this.mappingLocations.length_ i++) {_				Resource location = this.mappingLocations[i]__				if (logger.isInfoEnabled()) {_					logger.info("Loading JMX object name mappings file from " + location)__				}_				PropertiesLoaderUtils.fillProperties(this.mergedMappings, location)__			}_		}_	};merges,the,code,properties,code,configured,in,the,code,mappings,code,and,code,mapping,locations,code,into,the,final,code,properties,code,instance,used,for,code,object,name,code,resolution,throws,ioexception;public,void,after,properties,set,throws,ioexception,this,merged,mappings,new,properties,collection,utils,merge,properties,into,map,this,mappings,this,merged,mappings,if,this,mapping,locations,null,for,int,i,0,i,this,mapping,locations,length,i,resource,location,this,mapping,locations,i,if,logger,is,info,enabled,logger,info,loading,jmx,object,name,mappings,file,from,location,properties,loader,utils,fill,properties,this,merged,mappings,location
KeyNamingStrategy -> public void afterPropertiesSet() throws IOException;1357119239;Merges the {@code Properties} configured in the {@code mappings} and_{@code mappingLocations} into the final {@code Properties} instance_used for {@code ObjectName} resolution._@throws IOException;public void afterPropertiesSet() throws IOException {_		this.mergedMappings = new Properties()___		CollectionUtils.mergePropertiesIntoMap(this.mappings, this.mergedMappings)___		if (this.mappingLocations != null) {_			for (int i = 0_ i < this.mappingLocations.length_ i++) {_				Resource location = this.mappingLocations[i]__				if (logger.isInfoEnabled()) {_					logger.info("Loading JMX object name mappings file from " + location)__				}_				PropertiesLoaderUtils.fillProperties(this.mergedMappings, location)__			}_		}_	};merges,the,code,properties,configured,in,the,code,mappings,and,code,mapping,locations,into,the,final,code,properties,instance,used,for,code,object,name,resolution,throws,ioexception;public,void,after,properties,set,throws,ioexception,this,merged,mappings,new,properties,collection,utils,merge,properties,into,map,this,mappings,this,merged,mappings,if,this,mapping,locations,null,for,int,i,0,i,this,mapping,locations,length,i,resource,location,this,mapping,locations,i,if,logger,is,info,enabled,logger,info,loading,jmx,object,name,mappings,file,from,location,properties,loader,utils,fill,properties,this,merged,mappings,location
KeyNamingStrategy -> public void setMappingLocations(Resource[] mappingLocations);1328020251;Set location of properties files to be loaded,_containing object name mappings.;public void setMappingLocations(Resource[] mappingLocations) {_		this.mappingLocations = mappingLocations__	};set,location,of,properties,files,to,be,loaded,containing,object,name,mappings;public,void,set,mapping,locations,resource,mapping,locations,this,mapping,locations,mapping,locations
KeyNamingStrategy -> public void setMappingLocations(Resource[] mappingLocations);1356735495;Set location of properties files to be loaded,_containing object name mappings.;public void setMappingLocations(Resource[] mappingLocations) {_		this.mappingLocations = mappingLocations__	};set,location,of,properties,files,to,be,loaded,containing,object,name,mappings;public,void,set,mapping,locations,resource,mapping,locations,this,mapping,locations,mapping,locations
KeyNamingStrategy -> public void setMappingLocations(Resource[] mappingLocations);1357119239;Set location of properties files to be loaded,_containing object name mappings.;public void setMappingLocations(Resource[] mappingLocations) {_		this.mappingLocations = mappingLocations__	};set,location,of,properties,files,to,be,loaded,containing,object,name,mappings;public,void,set,mapping,locations,resource,mapping,locations,this,mapping,locations,mapping,locations
KeyNamingStrategy -> public void setMappingLocations(Resource[] mappingLocations);1368482696;Set location of properties files to be loaded,_containing object name mappings.;public void setMappingLocations(Resource[] mappingLocations) {_		this.mappingLocations = mappingLocations__	};set,location,of,properties,files,to,be,loaded,containing,object,name,mappings;public,void,set,mapping,locations,resource,mapping,locations,this,mapping,locations,mapping,locations
KeyNamingStrategy -> public void setMappingLocations(Resource[] mappingLocations);1413848647;Set location of properties files to be loaded,_containing object name mappings.;public void setMappingLocations(Resource[] mappingLocations) {_		this.mappingLocations = mappingLocations__	};set,location,of,properties,files,to,be,loaded,containing,object,name,mappings;public,void,set,mapping,locations,resource,mapping,locations,this,mapping,locations,mapping,locations
KeyNamingStrategy -> public void setMappingLocations(Resource[] mappingLocations);1461047077;Set location of properties files to be loaded,_containing object name mappings.;public void setMappingLocations(Resource[] mappingLocations) {_		this.mappingLocations = mappingLocations__	};set,location,of,properties,files,to,be,loaded,containing,object,name,mappings;public,void,set,mapping,locations,resource,mapping,locations,this,mapping,locations,mapping,locations
KeyNamingStrategy -> public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException;1328020251;Attempts to retrieve the <code>ObjectName</code> via the given key, trying to_find a mapped value in the mappings first.;public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException {_		String objectName = null__		if (this.mergedMappings != null) {_			objectName = this.mergedMappings.getProperty(beanKey)__		}_		if (objectName == null) {_			objectName = beanKey__		}_		return ObjectNameManager.getInstance(objectName)__	};attempts,to,retrieve,the,code,object,name,code,via,the,given,key,trying,to,find,a,mapped,value,in,the,mappings,first;public,object,name,get,object,name,object,managed,bean,string,bean,key,throws,malformed,object,name,exception,string,object,name,null,if,this,merged,mappings,null,object,name,this,merged,mappings,get,property,bean,key,if,object,name,null,object,name,bean,key,return,object,name,manager,get,instance,object,name
KeyNamingStrategy -> public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException;1357119239;Attempts to retrieve the {@code ObjectName} via the given key, trying to_find a mapped value in the mappings first.;public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException {_		String objectName = null__		if (this.mergedMappings != null) {_			objectName = this.mergedMappings.getProperty(beanKey)__		}_		if (objectName == null) {_			objectName = beanKey__		}_		return ObjectNameManager.getInstance(objectName)__	};attempts,to,retrieve,the,code,object,name,via,the,given,key,trying,to,find,a,mapped,value,in,the,mappings,first;public,object,name,get,object,name,object,managed,bean,string,bean,key,throws,malformed,object,name,exception,string,object,name,null,if,this,merged,mappings,null,object,name,this,merged,mappings,get,property,bean,key,if,object,name,null,object,name,bean,key,return,object,name,manager,get,instance,object,name
KeyNamingStrategy -> @Override 	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException;1356735495;Attempts to retrieve the {@code ObjectName} via the given key, trying to_find a mapped value in the mappings first.;@Override_	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException {_		String objectName = null__		if (this.mergedMappings != null) {_			objectName = this.mergedMappings.getProperty(beanKey)__		}_		if (objectName == null) {_			objectName = beanKey__		}_		return ObjectNameManager.getInstance(objectName)__	};attempts,to,retrieve,the,code,object,name,via,the,given,key,trying,to,find,a,mapped,value,in,the,mappings,first;override,public,object,name,get,object,name,object,managed,bean,string,bean,key,throws,malformed,object,name,exception,string,object,name,null,if,this,merged,mappings,null,object,name,this,merged,mappings,get,property,bean,key,if,object,name,null,object,name,bean,key,return,object,name,manager,get,instance,object,name
KeyNamingStrategy -> @Override 	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException;1368482696;Attempts to retrieve the {@code ObjectName} via the given key, trying to_find a mapped value in the mappings first.;@Override_	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException {_		String objectName = null__		if (this.mergedMappings != null) {_			objectName = this.mergedMappings.getProperty(beanKey)__		}_		if (objectName == null) {_			objectName = beanKey__		}_		return ObjectNameManager.getInstance(objectName)__	};attempts,to,retrieve,the,code,object,name,via,the,given,key,trying,to,find,a,mapped,value,in,the,mappings,first;override,public,object,name,get,object,name,object,managed,bean,string,bean,key,throws,malformed,object,name,exception,string,object,name,null,if,this,merged,mappings,null,object,name,this,merged,mappings,get,property,bean,key,if,object,name,null,object,name,bean,key,return,object,name,manager,get,instance,object,name
KeyNamingStrategy -> @Override 	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException;1413848647;Attempts to retrieve the {@code ObjectName} via the given key, trying to_find a mapped value in the mappings first.;@Override_	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException {_		String objectName = null__		if (this.mergedMappings != null) {_			objectName = this.mergedMappings.getProperty(beanKey)__		}_		if (objectName == null) {_			objectName = beanKey__		}_		return ObjectNameManager.getInstance(objectName)__	};attempts,to,retrieve,the,code,object,name,via,the,given,key,trying,to,find,a,mapped,value,in,the,mappings,first;override,public,object,name,get,object,name,object,managed,bean,string,bean,key,throws,malformed,object,name,exception,string,object,name,null,if,this,merged,mappings,null,object,name,this,merged,mappings,get,property,bean,key,if,object,name,null,object,name,bean,key,return,object,name,manager,get,instance,object,name
KeyNamingStrategy -> @Override 	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException;1461047077;Attempts to retrieve the {@code ObjectName} via the given key, trying to_find a mapped value in the mappings first.;@Override_	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException {_		String objectName = null__		if (this.mergedMappings != null) {_			objectName = this.mergedMappings.getProperty(beanKey)__		}_		if (objectName == null) {_			objectName = beanKey__		}_		return ObjectNameManager.getInstance(objectName)__	};attempts,to,retrieve,the,code,object,name,via,the,given,key,trying,to,find,a,mapped,value,in,the,mappings,first;override,public,object,name,get,object,name,object,managed,bean,string,bean,key,throws,malformed,object,name,exception,string,object,name,null,if,this,merged,mappings,null,object,name,this,merged,mappings,get,property,bean,key,if,object,name,null,object,name,bean,key,return,object,name,manager,get,instance,object,name
