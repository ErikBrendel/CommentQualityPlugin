# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractRemoteSlsbInvokerInterceptor -> public void setHomeInterface(Class homeInterface);1328020251;Set a home interface that this invoker will narrow to before performing_the parameterless SLSB <code>create()</code> call that returns the actual_SLSB proxy._<p>Default is none, which will work on all J2EE servers that are not based_on CORBA. A plain <code>javax.ejb.EJBHome</code> interface is known to be_sufficient to make a WebSphere 5.0 Remote SLSB work. On other servers,_the specific home interface for the target SLSB might be necessary.;public void setHomeInterface(Class homeInterface) {_		if (homeInterface != null && !homeInterface.isInterface()) {_			throw new IllegalArgumentException(_					"Home interface class [" + homeInterface.getClass() + "] is not an interface")__		}_		this.homeInterface = homeInterface__	};set,a,home,interface,that,this,invoker,will,narrow,to,before,performing,the,parameterless,slsb,code,create,code,call,that,returns,the,actual,slsb,proxy,p,default,is,none,which,will,work,on,all,j2ee,servers,that,are,not,based,on,corba,a,plain,code,javax,ejb,ejbhome,code,interface,is,known,to,be,sufficient,to,make,a,web,sphere,5,0,remote,slsb,work,on,other,servers,the,specific,home,interface,for,the,target,slsb,might,be,necessary;public,void,set,home,interface,class,home,interface,if,home,interface,null,home,interface,is,interface,throw,new,illegal,argument,exception,home,interface,class,home,interface,get,class,is,not,an,interface,this,home,interface,home,interface
AbstractRemoteSlsbInvokerInterceptor -> public void setHomeInterface(Class homeInterface);1356735495;Set a home interface that this invoker will narrow to before performing_the parameterless SLSB {@code create()} call that returns the actual_SLSB proxy._<p>Default is none, which will work on all J2EE servers that are not based_on CORBA. A plain {@code javax.ejb.EJBHome} interface is known to be_sufficient to make a WebSphere 5.0 Remote SLSB work. On other servers,_the specific home interface for the target SLSB might be necessary.;public void setHomeInterface(Class homeInterface) {_		if (homeInterface != null && !homeInterface.isInterface()) {_			throw new IllegalArgumentException(_					"Home interface class [" + homeInterface.getClass() + "] is not an interface")__		}_		this.homeInterface = homeInterface__	};set,a,home,interface,that,this,invoker,will,narrow,to,before,performing,the,parameterless,slsb,code,create,call,that,returns,the,actual,slsb,proxy,p,default,is,none,which,will,work,on,all,j2ee,servers,that,are,not,based,on,corba,a,plain,code,javax,ejb,ejbhome,interface,is,known,to,be,sufficient,to,make,a,web,sphere,5,0,remote,slsb,work,on,other,servers,the,specific,home,interface,for,the,target,slsb,might,be,necessary;public,void,set,home,interface,class,home,interface,if,home,interface,null,home,interface,is,interface,throw,new,illegal,argument,exception,home,interface,class,home,interface,get,class,is,not,an,interface,this,home,interface,home,interface
AbstractRemoteSlsbInvokerInterceptor -> public void setRefreshHomeOnConnectFailure(boolean refreshHomeOnConnectFailure);1328020251;Set whether to refresh the EJB home on connect failure._Default is "false"._<p>Can be turned on to allow for hot restart of the EJB server._If a cached EJB home throws an RMI exception that indicates a_remote connect failure, a fresh home will be fetched and the_invocation will be retried._@see java.rmi.ConnectException_@see java.rmi.ConnectIOException_@see java.rmi.NoSuchObjectException;public void setRefreshHomeOnConnectFailure(boolean refreshHomeOnConnectFailure) {_		this.refreshHomeOnConnectFailure = refreshHomeOnConnectFailure__	};set,whether,to,refresh,the,ejb,home,on,connect,failure,default,is,false,p,can,be,turned,on,to,allow,for,hot,restart,of,the,ejb,server,if,a,cached,ejb,home,throws,an,rmi,exception,that,indicates,a,remote,connect,failure,a,fresh,home,will,be,fetched,and,the,invocation,will,be,retried,see,java,rmi,connect,exception,see,java,rmi,connect,ioexception,see,java,rmi,no,such,object,exception;public,void,set,refresh,home,on,connect,failure,boolean,refresh,home,on,connect,failure,this,refresh,home,on,connect,failure,refresh,home,on,connect,failure
AbstractRemoteSlsbInvokerInterceptor -> public void setRefreshHomeOnConnectFailure(boolean refreshHomeOnConnectFailure);1356735495;Set whether to refresh the EJB home on connect failure._Default is "false"._<p>Can be turned on to allow for hot restart of the EJB server._If a cached EJB home throws an RMI exception that indicates a_remote connect failure, a fresh home will be fetched and the_invocation will be retried._@see java.rmi.ConnectException_@see java.rmi.ConnectIOException_@see java.rmi.NoSuchObjectException;public void setRefreshHomeOnConnectFailure(boolean refreshHomeOnConnectFailure) {_		this.refreshHomeOnConnectFailure = refreshHomeOnConnectFailure__	};set,whether,to,refresh,the,ejb,home,on,connect,failure,default,is,false,p,can,be,turned,on,to,allow,for,hot,restart,of,the,ejb,server,if,a,cached,ejb,home,throws,an,rmi,exception,that,indicates,a,remote,connect,failure,a,fresh,home,will,be,fetched,and,the,invocation,will,be,retried,see,java,rmi,connect,exception,see,java,rmi,connect,ioexception,see,java,rmi,no,such,object,exception;public,void,set,refresh,home,on,connect,failure,boolean,refresh,home,on,connect,failure,this,refresh,home,on,connect,failure,refresh,home,on,connect,failure
AbstractRemoteSlsbInvokerInterceptor -> public void setRefreshHomeOnConnectFailure(boolean refreshHomeOnConnectFailure);1385412762;Set whether to refresh the EJB home on connect failure._Default is "false"._<p>Can be turned on to allow for hot restart of the EJB server._If a cached EJB home throws an RMI exception that indicates a_remote connect failure, a fresh home will be fetched and the_invocation will be retried._@see java.rmi.ConnectException_@see java.rmi.ConnectIOException_@see java.rmi.NoSuchObjectException;public void setRefreshHomeOnConnectFailure(boolean refreshHomeOnConnectFailure) {_		this.refreshHomeOnConnectFailure = refreshHomeOnConnectFailure__	};set,whether,to,refresh,the,ejb,home,on,connect,failure,default,is,false,p,can,be,turned,on,to,allow,for,hot,restart,of,the,ejb,server,if,a,cached,ejb,home,throws,an,rmi,exception,that,indicates,a,remote,connect,failure,a,fresh,home,will,be,fetched,and,the,invocation,will,be,retried,see,java,rmi,connect,exception,see,java,rmi,connect,ioexception,see,java,rmi,no,such,object,exception;public,void,set,refresh,home,on,connect,failure,boolean,refresh,home,on,connect,failure,this,refresh,home,on,connect,failure,refresh,home,on,connect,failure
AbstractRemoteSlsbInvokerInterceptor -> public void setRefreshHomeOnConnectFailure(boolean refreshHomeOnConnectFailure);1413848647;Set whether to refresh the EJB home on connect failure._Default is "false"._<p>Can be turned on to allow for hot restart of the EJB server._If a cached EJB home throws an RMI exception that indicates a_remote connect failure, a fresh home will be fetched and the_invocation will be retried._@see java.rmi.ConnectException_@see java.rmi.ConnectIOException_@see java.rmi.NoSuchObjectException;public void setRefreshHomeOnConnectFailure(boolean refreshHomeOnConnectFailure) {_		this.refreshHomeOnConnectFailure = refreshHomeOnConnectFailure__	};set,whether,to,refresh,the,ejb,home,on,connect,failure,default,is,false,p,can,be,turned,on,to,allow,for,hot,restart,of,the,ejb,server,if,a,cached,ejb,home,throws,an,rmi,exception,that,indicates,a,remote,connect,failure,a,fresh,home,will,be,fetched,and,the,invocation,will,be,retried,see,java,rmi,connect,exception,see,java,rmi,connect,ioexception,see,java,rmi,no,such,object,exception;public,void,set,refresh,home,on,connect,failure,boolean,refresh,home,on,connect,failure,this,refresh,home,on,connect,failure,refresh,home,on,connect,failure
AbstractRemoteSlsbInvokerInterceptor -> public void setRefreshHomeOnConnectFailure(boolean refreshHomeOnConnectFailure);1468949854;Set whether to refresh the EJB home on connect failure._Default is "false"._<p>Can be turned on to allow for hot restart of the EJB server._If a cached EJB home throws an RMI exception that indicates a_remote connect failure, a fresh home will be fetched and the_invocation will be retried._@see java.rmi.ConnectException_@see java.rmi.ConnectIOException_@see java.rmi.NoSuchObjectException;public void setRefreshHomeOnConnectFailure(boolean refreshHomeOnConnectFailure) {_		this.refreshHomeOnConnectFailure = refreshHomeOnConnectFailure__	};set,whether,to,refresh,the,ejb,home,on,connect,failure,default,is,false,p,can,be,turned,on,to,allow,for,hot,restart,of,the,ejb,server,if,a,cached,ejb,home,throws,an,rmi,exception,that,indicates,a,remote,connect,failure,a,fresh,home,will,be,fetched,and,the,invocation,will,be,retried,see,java,rmi,connect,exception,see,java,rmi,connect,ioexception,see,java,rmi,no,such,object,exception;public,void,set,refresh,home,on,connect,failure,boolean,refresh,home,on,connect,failure,this,refresh,home,on,connect,failure,refresh,home,on,connect,failure
AbstractRemoteSlsbInvokerInterceptor -> public void setRefreshHomeOnConnectFailure(boolean refreshHomeOnConnectFailure);1476521730;Set whether to refresh the EJB home on connect failure._Default is "false"._<p>Can be turned on to allow for hot restart of the EJB server._If a cached EJB home throws an RMI exception that indicates a_remote connect failure, a fresh home will be fetched and the_invocation will be retried._@see java.rmi.ConnectException_@see java.rmi.ConnectIOException_@see java.rmi.NoSuchObjectException;public void setRefreshHomeOnConnectFailure(boolean refreshHomeOnConnectFailure) {_		this.refreshHomeOnConnectFailure = refreshHomeOnConnectFailure__	};set,whether,to,refresh,the,ejb,home,on,connect,failure,default,is,false,p,can,be,turned,on,to,allow,for,hot,restart,of,the,ejb,server,if,a,cached,ejb,home,throws,an,rmi,exception,that,indicates,a,remote,connect,failure,a,fresh,home,will,be,fetched,and,the,invocation,will,be,retried,see,java,rmi,connect,exception,see,java,rmi,connect,ioexception,see,java,rmi,no,such,object,exception;public,void,set,refresh,home,on,connect,failure,boolean,refresh,home,on,connect,failure,this,refresh,home,on,connect,failure,refresh,home,on,connect,failure
AbstractRemoteSlsbInvokerInterceptor -> public void setRefreshHomeOnConnectFailure(boolean refreshHomeOnConnectFailure);1495868221;Set whether to refresh the EJB home on connect failure._Default is "false"._<p>Can be turned on to allow for hot restart of the EJB server._If a cached EJB home throws an RMI exception that indicates a_remote connect failure, a fresh home will be fetched and the_invocation will be retried._@see java.rmi.ConnectException_@see java.rmi.ConnectIOException_@see java.rmi.NoSuchObjectException;public void setRefreshHomeOnConnectFailure(boolean refreshHomeOnConnectFailure) {_		this.refreshHomeOnConnectFailure = refreshHomeOnConnectFailure__	};set,whether,to,refresh,the,ejb,home,on,connect,failure,default,is,false,p,can,be,turned,on,to,allow,for,hot,restart,of,the,ejb,server,if,a,cached,ejb,home,throws,an,rmi,exception,that,indicates,a,remote,connect,failure,a,fresh,home,will,be,fetched,and,the,invocation,will,be,retried,see,java,rmi,connect,exception,see,java,rmi,connect,ioexception,see,java,rmi,no,such,object,exception;public,void,set,refresh,home,on,connect,failure,boolean,refresh,home,on,connect,failure,this,refresh,home,on,connect,failure,refresh,home,on,connect,failure
AbstractRemoteSlsbInvokerInterceptor -> public void setRefreshHomeOnConnectFailure(boolean refreshHomeOnConnectFailure);1496837955;Set whether to refresh the EJB home on connect failure._Default is "false"._<p>Can be turned on to allow for hot restart of the EJB server._If a cached EJB home throws an RMI exception that indicates a_remote connect failure, a fresh home will be fetched and the_invocation will be retried._@see java.rmi.ConnectException_@see java.rmi.ConnectIOException_@see java.rmi.NoSuchObjectException;public void setRefreshHomeOnConnectFailure(boolean refreshHomeOnConnectFailure) {_		this.refreshHomeOnConnectFailure = refreshHomeOnConnectFailure__	};set,whether,to,refresh,the,ejb,home,on,connect,failure,default,is,false,p,can,be,turned,on,to,allow,for,hot,restart,of,the,ejb,server,if,a,cached,ejb,home,throws,an,rmi,exception,that,indicates,a,remote,connect,failure,a,fresh,home,will,be,fetched,and,the,invocation,will,be,retried,see,java,rmi,connect,exception,see,java,rmi,connect,ioexception,see,java,rmi,no,such,object,exception;public,void,set,refresh,home,on,connect,failure,boolean,refresh,home,on,connect,failure,this,refresh,home,on,connect,failure,refresh,home,on,connect,failure
AbstractRemoteSlsbInvokerInterceptor -> public void setRefreshHomeOnConnectFailure(boolean refreshHomeOnConnectFailure);1502974979;Set whether to refresh the EJB home on connect failure._Default is "false"._<p>Can be turned on to allow for hot restart of the EJB server._If a cached EJB home throws an RMI exception that indicates a_remote connect failure, a fresh home will be fetched and the_invocation will be retried._@see java.rmi.ConnectException_@see java.rmi.ConnectIOException_@see java.rmi.NoSuchObjectException;public void setRefreshHomeOnConnectFailure(boolean refreshHomeOnConnectFailure) {_		this.refreshHomeOnConnectFailure = refreshHomeOnConnectFailure__	};set,whether,to,refresh,the,ejb,home,on,connect,failure,default,is,false,p,can,be,turned,on,to,allow,for,hot,restart,of,the,ejb,server,if,a,cached,ejb,home,throws,an,rmi,exception,that,indicates,a,remote,connect,failure,a,fresh,home,will,be,fetched,and,the,invocation,will,be,retried,see,java,rmi,connect,exception,see,java,rmi,connect,ioexception,see,java,rmi,no,such,object,exception;public,void,set,refresh,home,on,connect,failure,boolean,refresh,home,on,connect,failure,this,refresh,home,on,connect,failure,refresh,home,on,connect,failure
AbstractRemoteSlsbInvokerInterceptor -> @Override 	protected Object lookup() throws NamingException;1328020251;This overridden lookup implementation performs a narrow operation_after the JNDI lookup, provided that a home interface is specified._@see #setHomeInterface_@see javax.rmi.PortableRemoteObject#narrow;@Override_	protected Object lookup() throws NamingException {_		Object homeObject = super.lookup()__		if (this.homeInterface != null) {_			try {_				homeObject = PortableRemoteObject.narrow(homeObject, this.homeInterface)__			}_			catch (ClassCastException ex) {_				throw new RemoteLookupFailureException(_						"Could not narrow EJB home stub to home interface [" + this.homeInterface.getName() + "]", ex)__			}_		}_		return homeObject__	};this,overridden,lookup,implementation,performs,a,narrow,operation,after,the,jndi,lookup,provided,that,a,home,interface,is,specified,see,set,home,interface,see,javax,rmi,portable,remote,object,narrow;override,protected,object,lookup,throws,naming,exception,object,home,object,super,lookup,if,this,home,interface,null,try,home,object,portable,remote,object,narrow,home,object,this,home,interface,catch,class,cast,exception,ex,throw,new,remote,lookup,failure,exception,could,not,narrow,ejb,home,stub,to,home,interface,this,home,interface,get,name,ex,return,home,object
AbstractRemoteSlsbInvokerInterceptor -> @Override 	protected Object lookup() throws NamingException;1356735495;This overridden lookup implementation performs a narrow operation_after the JNDI lookup, provided that a home interface is specified._@see #setHomeInterface_@see javax.rmi.PortableRemoteObject#narrow;@Override_	protected Object lookup() throws NamingException {_		Object homeObject = super.lookup()__		if (this.homeInterface != null) {_			try {_				homeObject = PortableRemoteObject.narrow(homeObject, this.homeInterface)__			}_			catch (ClassCastException ex) {_				throw new RemoteLookupFailureException(_						"Could not narrow EJB home stub to home interface [" + this.homeInterface.getName() + "]", ex)__			}_		}_		return homeObject__	};this,overridden,lookup,implementation,performs,a,narrow,operation,after,the,jndi,lookup,provided,that,a,home,interface,is,specified,see,set,home,interface,see,javax,rmi,portable,remote,object,narrow;override,protected,object,lookup,throws,naming,exception,object,home,object,super,lookup,if,this,home,interface,null,try,home,object,portable,remote,object,narrow,home,object,this,home,interface,catch,class,cast,exception,ex,throw,new,remote,lookup,failure,exception,could,not,narrow,ejb,home,stub,to,home,interface,this,home,interface,get,name,ex,return,home,object
AbstractRemoteSlsbInvokerInterceptor -> @Override 	protected Object lookup() throws NamingException;1385412762;This overridden lookup implementation performs a narrow operation_after the JNDI lookup, provided that a home interface is specified._@see #setHomeInterface_@see javax.rmi.PortableRemoteObject#narrow;@Override_	protected Object lookup() throws NamingException {_		Object homeObject = super.lookup()__		if (this.homeInterface != null) {_			try {_				homeObject = PortableRemoteObject.narrow(homeObject, this.homeInterface)__			}_			catch (ClassCastException ex) {_				throw new RemoteLookupFailureException(_						"Could not narrow EJB home stub to home interface [" + this.homeInterface.getName() + "]", ex)__			}_		}_		return homeObject__	};this,overridden,lookup,implementation,performs,a,narrow,operation,after,the,jndi,lookup,provided,that,a,home,interface,is,specified,see,set,home,interface,see,javax,rmi,portable,remote,object,narrow;override,protected,object,lookup,throws,naming,exception,object,home,object,super,lookup,if,this,home,interface,null,try,home,object,portable,remote,object,narrow,home,object,this,home,interface,catch,class,cast,exception,ex,throw,new,remote,lookup,failure,exception,could,not,narrow,ejb,home,stub,to,home,interface,this,home,interface,get,name,ex,return,home,object
AbstractRemoteSlsbInvokerInterceptor -> @Override 	protected Object lookup() throws NamingException;1413848647;This overridden lookup implementation performs a narrow operation_after the JNDI lookup, provided that a home interface is specified._@see #setHomeInterface_@see javax.rmi.PortableRemoteObject#narrow;@Override_	protected Object lookup() throws NamingException {_		Object homeObject = super.lookup()__		if (this.homeInterface != null) {_			try {_				homeObject = PortableRemoteObject.narrow(homeObject, this.homeInterface)__			}_			catch (ClassCastException ex) {_				throw new RemoteLookupFailureException(_						"Could not narrow EJB home stub to home interface [" + this.homeInterface.getName() + "]", ex)__			}_		}_		return homeObject__	};this,overridden,lookup,implementation,performs,a,narrow,operation,after,the,jndi,lookup,provided,that,a,home,interface,is,specified,see,set,home,interface,see,javax,rmi,portable,remote,object,narrow;override,protected,object,lookup,throws,naming,exception,object,home,object,super,lookup,if,this,home,interface,null,try,home,object,portable,remote,object,narrow,home,object,this,home,interface,catch,class,cast,exception,ex,throw,new,remote,lookup,failure,exception,could,not,narrow,ejb,home,stub,to,home,interface,this,home,interface,get,name,ex,return,home,object
AbstractRemoteSlsbInvokerInterceptor -> @Override 	protected Method getCreateMethod(Object home) throws EjbAccessException;1328020251;Check for EJB3-style home object that serves as EJB component directly.;@Override_	protected Method getCreateMethod(Object home) throws EjbAccessException {_		if (this.homeAsComponent) {_			return null__		}_		if (!(home instanceof EJBHome)) {_			_			this.homeAsComponent = true__			return null__		}_		return super.getCreateMethod(home)__	};check,for,ejb3,style,home,object,that,serves,as,ejb,component,directly;override,protected,method,get,create,method,object,home,throws,ejb,access,exception,if,this,home,as,component,return,null,if,home,instanceof,ejbhome,this,home,as,component,true,return,null,return,super,get,create,method,home
AbstractRemoteSlsbInvokerInterceptor -> @Override 	protected Method getCreateMethod(Object home) throws EjbAccessException;1356735495;Check for EJB3-style home object that serves as EJB component directly.;@Override_	protected Method getCreateMethod(Object home) throws EjbAccessException {_		if (this.homeAsComponent) {_			return null__		}_		if (!(home instanceof EJBHome)) {_			_			this.homeAsComponent = true__			return null__		}_		return super.getCreateMethod(home)__	};check,for,ejb3,style,home,object,that,serves,as,ejb,component,directly;override,protected,method,get,create,method,object,home,throws,ejb,access,exception,if,this,home,as,component,return,null,if,home,instanceof,ejbhome,this,home,as,component,true,return,null,return,super,get,create,method,home
AbstractRemoteSlsbInvokerInterceptor -> @Override 	protected Method getCreateMethod(Object home) throws EjbAccessException;1385412762;Check for EJB3-style home object that serves as EJB component directly.;@Override_	protected Method getCreateMethod(Object home) throws EjbAccessException {_		if (this.homeAsComponent) {_			return null__		}_		if (!(home instanceof EJBHome)) {_			_			this.homeAsComponent = true__			return null__		}_		return super.getCreateMethod(home)__	};check,for,ejb3,style,home,object,that,serves,as,ejb,component,directly;override,protected,method,get,create,method,object,home,throws,ejb,access,exception,if,this,home,as,component,return,null,if,home,instanceof,ejbhome,this,home,as,component,true,return,null,return,super,get,create,method,home
AbstractRemoteSlsbInvokerInterceptor -> @Override 	protected Method getCreateMethod(Object home) throws EjbAccessException;1413848647;Check for EJB3-style home object that serves as EJB component directly.;@Override_	protected Method getCreateMethod(Object home) throws EjbAccessException {_		if (this.homeAsComponent) {_			return null__		}_		if (!(home instanceof EJBHome)) {_			_			this.homeAsComponent = true__			return null__		}_		return super.getCreateMethod(home)__	};check,for,ejb3,style,home,object,that,serves,as,ejb,component,directly;override,protected,method,get,create,method,object,home,throws,ejb,access,exception,if,this,home,as,component,return,null,if,home,instanceof,ejbhome,this,home,as,component,true,return,null,return,super,get,create,method,home
AbstractRemoteSlsbInvokerInterceptor -> @Override 	protected Method getCreateMethod(Object home) throws EjbAccessException;1468949854;Check for EJB3-style home object that serves as EJB component directly.;@Override_	protected Method getCreateMethod(Object home) throws EjbAccessException {_		if (this.homeAsComponent) {_			return null__		}_		if (!(home instanceof EJBHome)) {_			_			this.homeAsComponent = true__			return null__		}_		return super.getCreateMethod(home)__	};check,for,ejb3,style,home,object,that,serves,as,ejb,component,directly;override,protected,method,get,create,method,object,home,throws,ejb,access,exception,if,this,home,as,component,return,null,if,home,instanceof,ejbhome,this,home,as,component,true,return,null,return,super,get,create,method,home
AbstractRemoteSlsbInvokerInterceptor -> @Override 	protected Method getCreateMethod(Object home) throws EjbAccessException;1476521730;Check for EJB3-style home object that serves as EJB component directly.;@Override_	protected Method getCreateMethod(Object home) throws EjbAccessException {_		if (this.homeAsComponent) {_			return null__		}_		if (!(home instanceof EJBHome)) {_			_			this.homeAsComponent = true__			return null__		}_		return super.getCreateMethod(home)__	};check,for,ejb3,style,home,object,that,serves,as,ejb,component,directly;override,protected,method,get,create,method,object,home,throws,ejb,access,exception,if,this,home,as,component,return,null,if,home,instanceof,ejbhome,this,home,as,component,true,return,null,return,super,get,create,method,home
AbstractRemoteSlsbInvokerInterceptor -> @Override 	protected Method getCreateMethod(Object home) throws EjbAccessException;1495868221;Check for EJB3-style home object that serves as EJB component directly.;@Override_	protected Method getCreateMethod(Object home) throws EjbAccessException {_		if (this.homeAsComponent) {_			return null__		}_		if (!(home instanceof EJBHome)) {_			_			this.homeAsComponent = true__			return null__		}_		return super.getCreateMethod(home)__	};check,for,ejb3,style,home,object,that,serves,as,ejb,component,directly;override,protected,method,get,create,method,object,home,throws,ejb,access,exception,if,this,home,as,component,return,null,if,home,instanceof,ejbhome,this,home,as,component,true,return,null,return,super,get,create,method,home
AbstractRemoteSlsbInvokerInterceptor -> @Override 	protected Method getCreateMethod(Object home) throws EjbAccessException;1496837955;Check for EJB3-style home object that serves as EJB component directly.;@Override_	protected Method getCreateMethod(Object home) throws EjbAccessException {_		if (this.homeAsComponent) {_			return null__		}_		if (!(home instanceof EJBHome)) {_			_			this.homeAsComponent = true__			return null__		}_		return super.getCreateMethod(home)__	};check,for,ejb3,style,home,object,that,serves,as,ejb,component,directly;override,protected,method,get,create,method,object,home,throws,ejb,access,exception,if,this,home,as,component,return,null,if,home,instanceof,ejbhome,this,home,as,component,true,return,null,return,super,get,create,method,home
AbstractRemoteSlsbInvokerInterceptor -> @Override 	protected Method getCreateMethod(Object home) throws EjbAccessException;1502974979;Check for EJB3-style home object that serves as EJB component directly.;@Override_	protected Method getCreateMethod(Object home) throws EjbAccessException {_		if (this.homeAsComponent) {_			return null__		}_		if (!(home instanceof EJBHome)) {_			_			this.homeAsComponent = true__			return null__		}_		return super.getCreateMethod(home)__	};check,for,ejb3,style,home,object,that,serves,as,ejb,component,directly;override,protected,method,get,create,method,object,home,throws,ejb,access,exception,if,this,home,as,component,return,null,if,home,instanceof,ejbhome,this,home,as,component,true,return,null,return,super,get,create,method,home
AbstractRemoteSlsbInvokerInterceptor -> protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException;1328020251;Return a new instance of the stateless session bean._To be invoked by concrete remote SLSB invoker subclasses._<p>Can be overridden to change the algorithm._@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #create;protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException {_		if (logger.isDebugEnabled()) {_			logger.debug("Trying to create reference to remote EJB")__		}_		Object ejbInstance = create()__		if (logger.isDebugEnabled()) {_			logger.debug("Obtained reference to remote EJB: " + ejbInstance)__		}_		return ejbInstance__	};return,a,new,instance,of,the,stateless,session,bean,to,be,invoked,by,concrete,remote,slsb,invoker,subclasses,p,can,be,overridden,to,change,the,algorithm,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,create;protected,object,new,session,bean,instance,throws,naming,exception,invocation,target,exception,if,logger,is,debug,enabled,logger,debug,trying,to,create,reference,to,remote,ejb,object,ejb,instance,create,if,logger,is,debug,enabled,logger,debug,obtained,reference,to,remote,ejb,ejb,instance,return,ejb,instance
AbstractRemoteSlsbInvokerInterceptor -> protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException;1356735495;Return a new instance of the stateless session bean._To be invoked by concrete remote SLSB invoker subclasses._<p>Can be overridden to change the algorithm._@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #create;protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException {_		if (logger.isDebugEnabled()) {_			logger.debug("Trying to create reference to remote EJB")__		}_		Object ejbInstance = create()__		if (logger.isDebugEnabled()) {_			logger.debug("Obtained reference to remote EJB: " + ejbInstance)__		}_		return ejbInstance__	};return,a,new,instance,of,the,stateless,session,bean,to,be,invoked,by,concrete,remote,slsb,invoker,subclasses,p,can,be,overridden,to,change,the,algorithm,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,create;protected,object,new,session,bean,instance,throws,naming,exception,invocation,target,exception,if,logger,is,debug,enabled,logger,debug,trying,to,create,reference,to,remote,ejb,object,ejb,instance,create,if,logger,is,debug,enabled,logger,debug,obtained,reference,to,remote,ejb,ejb,instance,return,ejb,instance
AbstractRemoteSlsbInvokerInterceptor -> protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException;1385412762;Return a new instance of the stateless session bean._To be invoked by concrete remote SLSB invoker subclasses._<p>Can be overridden to change the algorithm._@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #create;protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException {_		if (logger.isDebugEnabled()) {_			logger.debug("Trying to create reference to remote EJB")__		}_		Object ejbInstance = create()__		if (logger.isDebugEnabled()) {_			logger.debug("Obtained reference to remote EJB: " + ejbInstance)__		}_		return ejbInstance__	};return,a,new,instance,of,the,stateless,session,bean,to,be,invoked,by,concrete,remote,slsb,invoker,subclasses,p,can,be,overridden,to,change,the,algorithm,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,create;protected,object,new,session,bean,instance,throws,naming,exception,invocation,target,exception,if,logger,is,debug,enabled,logger,debug,trying,to,create,reference,to,remote,ejb,object,ejb,instance,create,if,logger,is,debug,enabled,logger,debug,obtained,reference,to,remote,ejb,ejb,instance,return,ejb,instance
AbstractRemoteSlsbInvokerInterceptor -> protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException;1413848647;Return a new instance of the stateless session bean._To be invoked by concrete remote SLSB invoker subclasses._<p>Can be overridden to change the algorithm._@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #create;protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException {_		if (logger.isDebugEnabled()) {_			logger.debug("Trying to create reference to remote EJB")__		}_		Object ejbInstance = create()__		if (logger.isDebugEnabled()) {_			logger.debug("Obtained reference to remote EJB: " + ejbInstance)__		}_		return ejbInstance__	};return,a,new,instance,of,the,stateless,session,bean,to,be,invoked,by,concrete,remote,slsb,invoker,subclasses,p,can,be,overridden,to,change,the,algorithm,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,create;protected,object,new,session,bean,instance,throws,naming,exception,invocation,target,exception,if,logger,is,debug,enabled,logger,debug,trying,to,create,reference,to,remote,ejb,object,ejb,instance,create,if,logger,is,debug,enabled,logger,debug,obtained,reference,to,remote,ejb,ejb,instance,return,ejb,instance
AbstractRemoteSlsbInvokerInterceptor -> protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException;1468949854;Return a new instance of the stateless session bean._To be invoked by concrete remote SLSB invoker subclasses._<p>Can be overridden to change the algorithm._@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #create;protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException {_		if (logger.isDebugEnabled()) {_			logger.debug("Trying to create reference to remote EJB")__		}_		Object ejbInstance = create()__		if (logger.isDebugEnabled()) {_			logger.debug("Obtained reference to remote EJB: " + ejbInstance)__		}_		return ejbInstance__	};return,a,new,instance,of,the,stateless,session,bean,to,be,invoked,by,concrete,remote,slsb,invoker,subclasses,p,can,be,overridden,to,change,the,algorithm,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,create;protected,object,new,session,bean,instance,throws,naming,exception,invocation,target,exception,if,logger,is,debug,enabled,logger,debug,trying,to,create,reference,to,remote,ejb,object,ejb,instance,create,if,logger,is,debug,enabled,logger,debug,obtained,reference,to,remote,ejb,ejb,instance,return,ejb,instance
AbstractRemoteSlsbInvokerInterceptor -> protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException;1476521730;Return a new instance of the stateless session bean._To be invoked by concrete remote SLSB invoker subclasses._<p>Can be overridden to change the algorithm._@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #create;protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException {_		if (logger.isDebugEnabled()) {_			logger.debug("Trying to create reference to remote EJB")__		}_		Object ejbInstance = create()__		if (logger.isDebugEnabled()) {_			logger.debug("Obtained reference to remote EJB: " + ejbInstance)__		}_		return ejbInstance__	};return,a,new,instance,of,the,stateless,session,bean,to,be,invoked,by,concrete,remote,slsb,invoker,subclasses,p,can,be,overridden,to,change,the,algorithm,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,create;protected,object,new,session,bean,instance,throws,naming,exception,invocation,target,exception,if,logger,is,debug,enabled,logger,debug,trying,to,create,reference,to,remote,ejb,object,ejb,instance,create,if,logger,is,debug,enabled,logger,debug,obtained,reference,to,remote,ejb,ejb,instance,return,ejb,instance
AbstractRemoteSlsbInvokerInterceptor -> protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException;1495868221;Return a new instance of the stateless session bean._To be invoked by concrete remote SLSB invoker subclasses._<p>Can be overridden to change the algorithm._@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #create;protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException {_		if (logger.isDebugEnabled()) {_			logger.debug("Trying to create reference to remote EJB")__		}_		Object ejbInstance = create()__		if (logger.isDebugEnabled()) {_			logger.debug("Obtained reference to remote EJB: " + ejbInstance)__		}_		return ejbInstance__	};return,a,new,instance,of,the,stateless,session,bean,to,be,invoked,by,concrete,remote,slsb,invoker,subclasses,p,can,be,overridden,to,change,the,algorithm,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,create;protected,object,new,session,bean,instance,throws,naming,exception,invocation,target,exception,if,logger,is,debug,enabled,logger,debug,trying,to,create,reference,to,remote,ejb,object,ejb,instance,create,if,logger,is,debug,enabled,logger,debug,obtained,reference,to,remote,ejb,ejb,instance,return,ejb,instance
AbstractRemoteSlsbInvokerInterceptor -> protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException;1496837955;Return a new instance of the stateless session bean._To be invoked by concrete remote SLSB invoker subclasses._<p>Can be overridden to change the algorithm._@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #create;protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException {_		if (logger.isDebugEnabled()) {_			logger.debug("Trying to create reference to remote EJB")__		}_		Object ejbInstance = create()__		if (logger.isDebugEnabled()) {_			logger.debug("Obtained reference to remote EJB: " + ejbInstance)__		}_		return ejbInstance__	};return,a,new,instance,of,the,stateless,session,bean,to,be,invoked,by,concrete,remote,slsb,invoker,subclasses,p,can,be,overridden,to,change,the,algorithm,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,create;protected,object,new,session,bean,instance,throws,naming,exception,invocation,target,exception,if,logger,is,debug,enabled,logger,debug,trying,to,create,reference,to,remote,ejb,object,ejb,instance,create,if,logger,is,debug,enabled,logger,debug,obtained,reference,to,remote,ejb,ejb,instance,return,ejb,instance
AbstractRemoteSlsbInvokerInterceptor -> protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException;1502974979;Return a new instance of the stateless session bean._To be invoked by concrete remote SLSB invoker subclasses._<p>Can be overridden to change the algorithm._@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #create;protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException {_		if (logger.isDebugEnabled()) {_			logger.debug("Trying to create reference to remote EJB")__		}_		Object ejbInstance = create()__		if (logger.isDebugEnabled()) {_			logger.debug("Obtained reference to remote EJB: " + ejbInstance)__		}_		return ejbInstance__	};return,a,new,instance,of,the,stateless,session,bean,to,be,invoked,by,concrete,remote,slsb,invoker,subclasses,p,can,be,overridden,to,change,the,algorithm,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,create;protected,object,new,session,bean,instance,throws,naming,exception,invocation,target,exception,if,logger,is,debug,enabled,logger,debug,trying,to,create,reference,to,remote,ejb,object,ejb,instance,create,if,logger,is,debug,enabled,logger,debug,obtained,reference,to,remote,ejb,ejb,instance,return,ejb,instance
AbstractRemoteSlsbInvokerInterceptor -> protected void removeSessionBeanInstance(@Nullable EJBObject ejb);1496837955;Remove the given EJB instance._To be invoked by concrete remote SLSB invoker subclasses._@param ejb the EJB instance to remove_@see javax.ejb.EJBObject#remove;protected void removeSessionBeanInstance(@Nullable EJBObject ejb) {_		if (ejb != null && !this.homeAsComponent) {_			try {_				ejb.remove()__			}_			catch (Throwable ex) {_				logger.warn("Could not invoke 'remove' on remote EJB proxy", ex)__			}_		}_	};remove,the,given,ejb,instance,to,be,invoked,by,concrete,remote,slsb,invoker,subclasses,param,ejb,the,ejb,instance,to,remove,see,javax,ejb,ejbobject,remove;protected,void,remove,session,bean,instance,nullable,ejbobject,ejb,if,ejb,null,this,home,as,component,try,ejb,remove,catch,throwable,ex,logger,warn,could,not,invoke,remove,on,remote,ejb,proxy,ex
AbstractRemoteSlsbInvokerInterceptor -> protected void removeSessionBeanInstance(@Nullable EJBObject ejb);1502974979;Remove the given EJB instance._To be invoked by concrete remote SLSB invoker subclasses._@param ejb the EJB instance to remove_@see javax.ejb.EJBObject#remove;protected void removeSessionBeanInstance(@Nullable EJBObject ejb) {_		if (ejb != null && !this.homeAsComponent) {_			try {_				ejb.remove()__			}_			catch (Throwable ex) {_				logger.warn("Could not invoke 'remove' on remote EJB proxy", ex)__			}_		}_	};remove,the,given,ejb,instance,to,be,invoked,by,concrete,remote,slsb,invoker,subclasses,param,ejb,the,ejb,instance,to,remove,see,javax,ejb,ejbobject,remove;protected,void,remove,session,bean,instance,nullable,ejbobject,ejb,if,ejb,null,this,home,as,component,try,ejb,remove,catch,throwable,ex,logger,warn,could,not,invoke,remove,on,remote,ejb,proxy,ex
AbstractRemoteSlsbInvokerInterceptor -> protected void removeSessionBeanInstance(EJBObject ejb);1328020251;Remove the given EJB instance._To be invoked by concrete remote SLSB invoker subclasses._@param ejb the EJB instance to remove_@see javax.ejb.EJBObject#remove;protected void removeSessionBeanInstance(EJBObject ejb) {_		if (ejb != null && !this.homeAsComponent) {_			try {_				ejb.remove()__			}_			catch (Throwable ex) {_				logger.warn("Could not invoke 'remove' on remote EJB proxy", ex)__			}_		}_	};remove,the,given,ejb,instance,to,be,invoked,by,concrete,remote,slsb,invoker,subclasses,param,ejb,the,ejb,instance,to,remove,see,javax,ejb,ejbobject,remove;protected,void,remove,session,bean,instance,ejbobject,ejb,if,ejb,null,this,home,as,component,try,ejb,remove,catch,throwable,ex,logger,warn,could,not,invoke,remove,on,remote,ejb,proxy,ex
AbstractRemoteSlsbInvokerInterceptor -> protected void removeSessionBeanInstance(EJBObject ejb);1356735495;Remove the given EJB instance._To be invoked by concrete remote SLSB invoker subclasses._@param ejb the EJB instance to remove_@see javax.ejb.EJBObject#remove;protected void removeSessionBeanInstance(EJBObject ejb) {_		if (ejb != null && !this.homeAsComponent) {_			try {_				ejb.remove()__			}_			catch (Throwable ex) {_				logger.warn("Could not invoke 'remove' on remote EJB proxy", ex)__			}_		}_	};remove,the,given,ejb,instance,to,be,invoked,by,concrete,remote,slsb,invoker,subclasses,param,ejb,the,ejb,instance,to,remove,see,javax,ejb,ejbobject,remove;protected,void,remove,session,bean,instance,ejbobject,ejb,if,ejb,null,this,home,as,component,try,ejb,remove,catch,throwable,ex,logger,warn,could,not,invoke,remove,on,remote,ejb,proxy,ex
AbstractRemoteSlsbInvokerInterceptor -> protected void removeSessionBeanInstance(EJBObject ejb);1385412762;Remove the given EJB instance._To be invoked by concrete remote SLSB invoker subclasses._@param ejb the EJB instance to remove_@see javax.ejb.EJBObject#remove;protected void removeSessionBeanInstance(EJBObject ejb) {_		if (ejb != null && !this.homeAsComponent) {_			try {_				ejb.remove()__			}_			catch (Throwable ex) {_				logger.warn("Could not invoke 'remove' on remote EJB proxy", ex)__			}_		}_	};remove,the,given,ejb,instance,to,be,invoked,by,concrete,remote,slsb,invoker,subclasses,param,ejb,the,ejb,instance,to,remove,see,javax,ejb,ejbobject,remove;protected,void,remove,session,bean,instance,ejbobject,ejb,if,ejb,null,this,home,as,component,try,ejb,remove,catch,throwable,ex,logger,warn,could,not,invoke,remove,on,remote,ejb,proxy,ex
AbstractRemoteSlsbInvokerInterceptor -> protected void removeSessionBeanInstance(EJBObject ejb);1413848647;Remove the given EJB instance._To be invoked by concrete remote SLSB invoker subclasses._@param ejb the EJB instance to remove_@see javax.ejb.EJBObject#remove;protected void removeSessionBeanInstance(EJBObject ejb) {_		if (ejb != null && !this.homeAsComponent) {_			try {_				ejb.remove()__			}_			catch (Throwable ex) {_				logger.warn("Could not invoke 'remove' on remote EJB proxy", ex)__			}_		}_	};remove,the,given,ejb,instance,to,be,invoked,by,concrete,remote,slsb,invoker,subclasses,param,ejb,the,ejb,instance,to,remove,see,javax,ejb,ejbobject,remove;protected,void,remove,session,bean,instance,ejbobject,ejb,if,ejb,null,this,home,as,component,try,ejb,remove,catch,throwable,ex,logger,warn,could,not,invoke,remove,on,remote,ejb,proxy,ex
AbstractRemoteSlsbInvokerInterceptor -> protected void removeSessionBeanInstance(EJBObject ejb);1468949854;Remove the given EJB instance._To be invoked by concrete remote SLSB invoker subclasses._@param ejb the EJB instance to remove_@see javax.ejb.EJBObject#remove;protected void removeSessionBeanInstance(EJBObject ejb) {_		if (ejb != null && !this.homeAsComponent) {_			try {_				ejb.remove()__			}_			catch (Throwable ex) {_				logger.warn("Could not invoke 'remove' on remote EJB proxy", ex)__			}_		}_	};remove,the,given,ejb,instance,to,be,invoked,by,concrete,remote,slsb,invoker,subclasses,param,ejb,the,ejb,instance,to,remove,see,javax,ejb,ejbobject,remove;protected,void,remove,session,bean,instance,ejbobject,ejb,if,ejb,null,this,home,as,component,try,ejb,remove,catch,throwable,ex,logger,warn,could,not,invoke,remove,on,remote,ejb,proxy,ex
AbstractRemoteSlsbInvokerInterceptor -> protected void removeSessionBeanInstance(EJBObject ejb);1476521730;Remove the given EJB instance._To be invoked by concrete remote SLSB invoker subclasses._@param ejb the EJB instance to remove_@see javax.ejb.EJBObject#remove;protected void removeSessionBeanInstance(EJBObject ejb) {_		if (ejb != null && !this.homeAsComponent) {_			try {_				ejb.remove()__			}_			catch (Throwable ex) {_				logger.warn("Could not invoke 'remove' on remote EJB proxy", ex)__			}_		}_	};remove,the,given,ejb,instance,to,be,invoked,by,concrete,remote,slsb,invoker,subclasses,param,ejb,the,ejb,instance,to,remove,see,javax,ejb,ejbobject,remove;protected,void,remove,session,bean,instance,ejbobject,ejb,if,ejb,null,this,home,as,component,try,ejb,remove,catch,throwable,ex,logger,warn,could,not,invoke,remove,on,remote,ejb,proxy,ex
AbstractRemoteSlsbInvokerInterceptor -> protected void removeSessionBeanInstance(EJBObject ejb);1495868221;Remove the given EJB instance._To be invoked by concrete remote SLSB invoker subclasses._@param ejb the EJB instance to remove_@see javax.ejb.EJBObject#remove;protected void removeSessionBeanInstance(EJBObject ejb) {_		if (ejb != null && !this.homeAsComponent) {_			try {_				ejb.remove()__			}_			catch (Throwable ex) {_				logger.warn("Could not invoke 'remove' on remote EJB proxy", ex)__			}_		}_	};remove,the,given,ejb,instance,to,be,invoked,by,concrete,remote,slsb,invoker,subclasses,param,ejb,the,ejb,instance,to,remove,see,javax,ejb,ejbobject,remove;protected,void,remove,session,bean,instance,ejbobject,ejb,if,ejb,null,this,home,as,component,try,ejb,remove,catch,throwable,ex,logger,warn,could,not,invoke,remove,on,remote,ejb,proxy,ex
AbstractRemoteSlsbInvokerInterceptor -> protected Object refreshAndRetry(MethodInvocation invocation) throws Throwable;1328020251;Refresh the EJB home object and retry the given invocation._Called by invoke on connect failure._@param invocation the AOP method invocation_@return the invocation result, if any_@throws Throwable in case of invocation failure_@see #invoke;protected Object refreshAndRetry(MethodInvocation invocation) throws Throwable {_		try {_			refreshHome()__		}_		catch (NamingException ex) {_			throw new RemoteLookupFailureException("Failed to locate remote EJB [" + getJndiName() + "]", ex)__		}_		return doInvoke(invocation)__	};refresh,the,ejb,home,object,and,retry,the,given,invocation,called,by,invoke,on,connect,failure,param,invocation,the,aop,method,invocation,return,the,invocation,result,if,any,throws,throwable,in,case,of,invocation,failure,see,invoke;protected,object,refresh,and,retry,method,invocation,invocation,throws,throwable,try,refresh,home,catch,naming,exception,ex,throw,new,remote,lookup,failure,exception,failed,to,locate,remote,ejb,get,jndi,name,ex,return,do,invoke,invocation
AbstractRemoteSlsbInvokerInterceptor -> protected Object refreshAndRetry(MethodInvocation invocation) throws Throwable;1356735495;Refresh the EJB home object and retry the given invocation._Called by invoke on connect failure._@param invocation the AOP method invocation_@return the invocation result, if any_@throws Throwable in case of invocation failure_@see #invoke;protected Object refreshAndRetry(MethodInvocation invocation) throws Throwable {_		try {_			refreshHome()__		}_		catch (NamingException ex) {_			throw new RemoteLookupFailureException("Failed to locate remote EJB [" + getJndiName() + "]", ex)__		}_		return doInvoke(invocation)__	};refresh,the,ejb,home,object,and,retry,the,given,invocation,called,by,invoke,on,connect,failure,param,invocation,the,aop,method,invocation,return,the,invocation,result,if,any,throws,throwable,in,case,of,invocation,failure,see,invoke;protected,object,refresh,and,retry,method,invocation,invocation,throws,throwable,try,refresh,home,catch,naming,exception,ex,throw,new,remote,lookup,failure,exception,failed,to,locate,remote,ejb,get,jndi,name,ex,return,do,invoke,invocation
AbstractRemoteSlsbInvokerInterceptor -> protected Object refreshAndRetry(MethodInvocation invocation) throws Throwable;1385412762;Refresh the EJB home object and retry the given invocation._Called by invoke on connect failure._@param invocation the AOP method invocation_@return the invocation result, if any_@throws Throwable in case of invocation failure_@see #invoke;protected Object refreshAndRetry(MethodInvocation invocation) throws Throwable {_		try {_			refreshHome()__		}_		catch (NamingException ex) {_			throw new RemoteLookupFailureException("Failed to locate remote EJB [" + getJndiName() + "]", ex)__		}_		return doInvoke(invocation)__	};refresh,the,ejb,home,object,and,retry,the,given,invocation,called,by,invoke,on,connect,failure,param,invocation,the,aop,method,invocation,return,the,invocation,result,if,any,throws,throwable,in,case,of,invocation,failure,see,invoke;protected,object,refresh,and,retry,method,invocation,invocation,throws,throwable,try,refresh,home,catch,naming,exception,ex,throw,new,remote,lookup,failure,exception,failed,to,locate,remote,ejb,get,jndi,name,ex,return,do,invoke,invocation
AbstractRemoteSlsbInvokerInterceptor -> protected Object refreshAndRetry(MethodInvocation invocation) throws Throwable;1413848647;Refresh the EJB home object and retry the given invocation._Called by invoke on connect failure._@param invocation the AOP method invocation_@return the invocation result, if any_@throws Throwable in case of invocation failure_@see #invoke;protected Object refreshAndRetry(MethodInvocation invocation) throws Throwable {_		try {_			refreshHome()__		}_		catch (NamingException ex) {_			throw new RemoteLookupFailureException("Failed to locate remote EJB [" + getJndiName() + "]", ex)__		}_		return doInvoke(invocation)__	};refresh,the,ejb,home,object,and,retry,the,given,invocation,called,by,invoke,on,connect,failure,param,invocation,the,aop,method,invocation,return,the,invocation,result,if,any,throws,throwable,in,case,of,invocation,failure,see,invoke;protected,object,refresh,and,retry,method,invocation,invocation,throws,throwable,try,refresh,home,catch,naming,exception,ex,throw,new,remote,lookup,failure,exception,failed,to,locate,remote,ejb,get,jndi,name,ex,return,do,invoke,invocation
AbstractRemoteSlsbInvokerInterceptor -> protected Object refreshAndRetry(MethodInvocation invocation) throws Throwable;1468949854;Refresh the EJB home object and retry the given invocation._Called by invoke on connect failure._@param invocation the AOP method invocation_@return the invocation result, if any_@throws Throwable in case of invocation failure_@see #invoke;protected Object refreshAndRetry(MethodInvocation invocation) throws Throwable {_		try {_			refreshHome()__		}_		catch (NamingException ex) {_			throw new RemoteLookupFailureException("Failed to locate remote EJB [" + getJndiName() + "]", ex)__		}_		return doInvoke(invocation)__	};refresh,the,ejb,home,object,and,retry,the,given,invocation,called,by,invoke,on,connect,failure,param,invocation,the,aop,method,invocation,return,the,invocation,result,if,any,throws,throwable,in,case,of,invocation,failure,see,invoke;protected,object,refresh,and,retry,method,invocation,invocation,throws,throwable,try,refresh,home,catch,naming,exception,ex,throw,new,remote,lookup,failure,exception,failed,to,locate,remote,ejb,get,jndi,name,ex,return,do,invoke,invocation
AbstractRemoteSlsbInvokerInterceptor -> protected Object refreshAndRetry(MethodInvocation invocation) throws Throwable;1476521730;Refresh the EJB home object and retry the given invocation._Called by invoke on connect failure._@param invocation the AOP method invocation_@return the invocation result, if any_@throws Throwable in case of invocation failure_@see #invoke;protected Object refreshAndRetry(MethodInvocation invocation) throws Throwable {_		try {_			refreshHome()__		}_		catch (NamingException ex) {_			throw new RemoteLookupFailureException("Failed to locate remote EJB [" + getJndiName() + "]", ex)__		}_		return doInvoke(invocation)__	};refresh,the,ejb,home,object,and,retry,the,given,invocation,called,by,invoke,on,connect,failure,param,invocation,the,aop,method,invocation,return,the,invocation,result,if,any,throws,throwable,in,case,of,invocation,failure,see,invoke;protected,object,refresh,and,retry,method,invocation,invocation,throws,throwable,try,refresh,home,catch,naming,exception,ex,throw,new,remote,lookup,failure,exception,failed,to,locate,remote,ejb,get,jndi,name,ex,return,do,invoke,invocation
AbstractRemoteSlsbInvokerInterceptor -> protected abstract Object doInvoke(MethodInvocation invocation) throws Throwable_;1328020251;Perform the given invocation on the current EJB home._Template method to be implemented by subclasses._@param invocation the AOP method invocation_@return the invocation result, if any_@throws Throwable in case of invocation failure_@see #getHome_@see #newSessionBeanInstance;protected abstract Object doInvoke(MethodInvocation invocation) throws Throwable_;perform,the,given,invocation,on,the,current,ejb,home,template,method,to,be,implemented,by,subclasses,param,invocation,the,aop,method,invocation,return,the,invocation,result,if,any,throws,throwable,in,case,of,invocation,failure,see,get,home,see,new,session,bean,instance;protected,abstract,object,do,invoke,method,invocation,invocation,throws,throwable
AbstractRemoteSlsbInvokerInterceptor -> protected abstract Object doInvoke(MethodInvocation invocation) throws Throwable_;1356735495;Perform the given invocation on the current EJB home._Template method to be implemented by subclasses._@param invocation the AOP method invocation_@return the invocation result, if any_@throws Throwable in case of invocation failure_@see #getHome_@see #newSessionBeanInstance;protected abstract Object doInvoke(MethodInvocation invocation) throws Throwable_;perform,the,given,invocation,on,the,current,ejb,home,template,method,to,be,implemented,by,subclasses,param,invocation,the,aop,method,invocation,return,the,invocation,result,if,any,throws,throwable,in,case,of,invocation,failure,see,get,home,see,new,session,bean,instance;protected,abstract,object,do,invoke,method,invocation,invocation,throws,throwable
AbstractRemoteSlsbInvokerInterceptor -> protected abstract Object doInvoke(MethodInvocation invocation) throws Throwable_;1385412762;Perform the given invocation on the current EJB home._Template method to be implemented by subclasses._@param invocation the AOP method invocation_@return the invocation result, if any_@throws Throwable in case of invocation failure_@see #getHome_@see #newSessionBeanInstance;protected abstract Object doInvoke(MethodInvocation invocation) throws Throwable_;perform,the,given,invocation,on,the,current,ejb,home,template,method,to,be,implemented,by,subclasses,param,invocation,the,aop,method,invocation,return,the,invocation,result,if,any,throws,throwable,in,case,of,invocation,failure,see,get,home,see,new,session,bean,instance;protected,abstract,object,do,invoke,method,invocation,invocation,throws,throwable
AbstractRemoteSlsbInvokerInterceptor -> protected abstract Object doInvoke(MethodInvocation invocation) throws Throwable_;1413848647;Perform the given invocation on the current EJB home._Template method to be implemented by subclasses._@param invocation the AOP method invocation_@return the invocation result, if any_@throws Throwable in case of invocation failure_@see #getHome_@see #newSessionBeanInstance;protected abstract Object doInvoke(MethodInvocation invocation) throws Throwable_;perform,the,given,invocation,on,the,current,ejb,home,template,method,to,be,implemented,by,subclasses,param,invocation,the,aop,method,invocation,return,the,invocation,result,if,any,throws,throwable,in,case,of,invocation,failure,see,get,home,see,new,session,bean,instance;protected,abstract,object,do,invoke,method,invocation,invocation,throws,throwable
AbstractRemoteSlsbInvokerInterceptor -> protected abstract Object doInvoke(MethodInvocation invocation) throws Throwable_;1468949854;Perform the given invocation on the current EJB home._Template method to be implemented by subclasses._@param invocation the AOP method invocation_@return the invocation result, if any_@throws Throwable in case of invocation failure_@see #getHome_@see #newSessionBeanInstance;protected abstract Object doInvoke(MethodInvocation invocation) throws Throwable_;perform,the,given,invocation,on,the,current,ejb,home,template,method,to,be,implemented,by,subclasses,param,invocation,the,aop,method,invocation,return,the,invocation,result,if,any,throws,throwable,in,case,of,invocation,failure,see,get,home,see,new,session,bean,instance;protected,abstract,object,do,invoke,method,invocation,invocation,throws,throwable
AbstractRemoteSlsbInvokerInterceptor -> protected abstract Object doInvoke(MethodInvocation invocation) throws Throwable_;1476521730;Perform the given invocation on the current EJB home._Template method to be implemented by subclasses._@param invocation the AOP method invocation_@return the invocation result, if any_@throws Throwable in case of invocation failure_@see #getHome_@see #newSessionBeanInstance;protected abstract Object doInvoke(MethodInvocation invocation) throws Throwable_;perform,the,given,invocation,on,the,current,ejb,home,template,method,to,be,implemented,by,subclasses,param,invocation,the,aop,method,invocation,return,the,invocation,result,if,any,throws,throwable,in,case,of,invocation,failure,see,get,home,see,new,session,bean,instance;protected,abstract,object,do,invoke,method,invocation,invocation,throws,throwable
AbstractRemoteSlsbInvokerInterceptor -> @Nullable 	protected Object refreshAndRetry(MethodInvocation invocation) throws Throwable;1495868221;Refresh the EJB home object and retry the given invocation._Called by invoke on connect failure._@param invocation the AOP method invocation_@return the invocation result, if any_@throws Throwable in case of invocation failure_@see #invoke;@Nullable_	protected Object refreshAndRetry(MethodInvocation invocation) throws Throwable {_		try {_			refreshHome()__		}_		catch (NamingException ex) {_			throw new RemoteLookupFailureException("Failed to locate remote EJB [" + getJndiName() + "]", ex)__		}_		return doInvoke(invocation)__	};refresh,the,ejb,home,object,and,retry,the,given,invocation,called,by,invoke,on,connect,failure,param,invocation,the,aop,method,invocation,return,the,invocation,result,if,any,throws,throwable,in,case,of,invocation,failure,see,invoke;nullable,protected,object,refresh,and,retry,method,invocation,invocation,throws,throwable,try,refresh,home,catch,naming,exception,ex,throw,new,remote,lookup,failure,exception,failed,to,locate,remote,ejb,get,jndi,name,ex,return,do,invoke,invocation
AbstractRemoteSlsbInvokerInterceptor -> @Nullable 	protected Object refreshAndRetry(MethodInvocation invocation) throws Throwable;1496837955;Refresh the EJB home object and retry the given invocation._Called by invoke on connect failure._@param invocation the AOP method invocation_@return the invocation result, if any_@throws Throwable in case of invocation failure_@see #invoke;@Nullable_	protected Object refreshAndRetry(MethodInvocation invocation) throws Throwable {_		try {_			refreshHome()__		}_		catch (NamingException ex) {_			throw new RemoteLookupFailureException("Failed to locate remote EJB [" + getJndiName() + "]", ex)__		}_		return doInvoke(invocation)__	};refresh,the,ejb,home,object,and,retry,the,given,invocation,called,by,invoke,on,connect,failure,param,invocation,the,aop,method,invocation,return,the,invocation,result,if,any,throws,throwable,in,case,of,invocation,failure,see,invoke;nullable,protected,object,refresh,and,retry,method,invocation,invocation,throws,throwable,try,refresh,home,catch,naming,exception,ex,throw,new,remote,lookup,failure,exception,failed,to,locate,remote,ejb,get,jndi,name,ex,return,do,invoke,invocation
AbstractRemoteSlsbInvokerInterceptor -> @Nullable 	protected Object refreshAndRetry(MethodInvocation invocation) throws Throwable;1502974979;Refresh the EJB home object and retry the given invocation._Called by invoke on connect failure._@param invocation the AOP method invocation_@return the invocation result, if any_@throws Throwable in case of invocation failure_@see #invoke;@Nullable_	protected Object refreshAndRetry(MethodInvocation invocation) throws Throwable {_		try {_			refreshHome()__		}_		catch (NamingException ex) {_			throw new RemoteLookupFailureException("Failed to locate remote EJB [" + getJndiName() + "]", ex)__		}_		return doInvoke(invocation)__	};refresh,the,ejb,home,object,and,retry,the,given,invocation,called,by,invoke,on,connect,failure,param,invocation,the,aop,method,invocation,return,the,invocation,result,if,any,throws,throwable,in,case,of,invocation,failure,see,invoke;nullable,protected,object,refresh,and,retry,method,invocation,invocation,throws,throwable,try,refresh,home,catch,naming,exception,ex,throw,new,remote,lookup,failure,exception,failed,to,locate,remote,ejb,get,jndi,name,ex,return,do,invoke,invocation
AbstractRemoteSlsbInvokerInterceptor -> @Override 	public Object invokeInContext(MethodInvocation invocation) throws Throwable;1328020251;Fetches an EJB home object and delegates to <code>doInvoke</code>._<p>If configured to refresh on connect failure, it will call_{@link #refreshAndRetry} on corresponding RMI exceptions._@see #getHome_@see #doInvoke_@see #refreshAndRetry;@Override_	public Object invokeInContext(MethodInvocation invocation) throws Throwable {_		try {_			return doInvoke(invocation)__		}_		catch (RemoteConnectFailureException ex) {_			return handleRemoteConnectFailure(invocation, ex)__		}_		catch (RemoteException ex) {_			if (isConnectFailure(ex)) {_				return handleRemoteConnectFailure(invocation, ex)__			}_			else {_				throw ex__			}_		}_	};fetches,an,ejb,home,object,and,delegates,to,code,do,invoke,code,p,if,configured,to,refresh,on,connect,failure,it,will,call,link,refresh,and,retry,on,corresponding,rmi,exceptions,see,get,home,see,do,invoke,see,refresh,and,retry;override,public,object,invoke,in,context,method,invocation,invocation,throws,throwable,try,return,do,invoke,invocation,catch,remote,connect,failure,exception,ex,return,handle,remote,connect,failure,invocation,ex,catch,remote,exception,ex,if,is,connect,failure,ex,return,handle,remote,connect,failure,invocation,ex,else,throw,ex
AbstractRemoteSlsbInvokerInterceptor -> @Override 	public Object invokeInContext(MethodInvocation invocation) throws Throwable;1356735495;Fetches an EJB home object and delegates to {@code doInvoke}._<p>If configured to refresh on connect failure, it will call_{@link #refreshAndRetry} on corresponding RMI exceptions._@see #getHome_@see #doInvoke_@see #refreshAndRetry;@Override_	public Object invokeInContext(MethodInvocation invocation) throws Throwable {_		try {_			return doInvoke(invocation)__		}_		catch (RemoteConnectFailureException ex) {_			return handleRemoteConnectFailure(invocation, ex)__		}_		catch (RemoteException ex) {_			if (isConnectFailure(ex)) {_				return handleRemoteConnectFailure(invocation, ex)__			}_			else {_				throw ex__			}_		}_	};fetches,an,ejb,home,object,and,delegates,to,code,do,invoke,p,if,configured,to,refresh,on,connect,failure,it,will,call,link,refresh,and,retry,on,corresponding,rmi,exceptions,see,get,home,see,do,invoke,see,refresh,and,retry;override,public,object,invoke,in,context,method,invocation,invocation,throws,throwable,try,return,do,invoke,invocation,catch,remote,connect,failure,exception,ex,return,handle,remote,connect,failure,invocation,ex,catch,remote,exception,ex,if,is,connect,failure,ex,return,handle,remote,connect,failure,invocation,ex,else,throw,ex
AbstractRemoteSlsbInvokerInterceptor -> @Override 	public Object invokeInContext(MethodInvocation invocation) throws Throwable;1385412762;Fetches an EJB home object and delegates to {@code doInvoke}._<p>If configured to refresh on connect failure, it will call_{@link #refreshAndRetry} on corresponding RMI exceptions._@see #getHome_@see #doInvoke_@see #refreshAndRetry;@Override_	public Object invokeInContext(MethodInvocation invocation) throws Throwable {_		try {_			return doInvoke(invocation)__		}_		catch (RemoteConnectFailureException ex) {_			return handleRemoteConnectFailure(invocation, ex)__		}_		catch (RemoteException ex) {_			if (isConnectFailure(ex)) {_				return handleRemoteConnectFailure(invocation, ex)__			}_			else {_				throw ex__			}_		}_	};fetches,an,ejb,home,object,and,delegates,to,code,do,invoke,p,if,configured,to,refresh,on,connect,failure,it,will,call,link,refresh,and,retry,on,corresponding,rmi,exceptions,see,get,home,see,do,invoke,see,refresh,and,retry;override,public,object,invoke,in,context,method,invocation,invocation,throws,throwable,try,return,do,invoke,invocation,catch,remote,connect,failure,exception,ex,return,handle,remote,connect,failure,invocation,ex,catch,remote,exception,ex,if,is,connect,failure,ex,return,handle,remote,connect,failure,invocation,ex,else,throw,ex
AbstractRemoteSlsbInvokerInterceptor -> @Override 	public Object invokeInContext(MethodInvocation invocation) throws Throwable;1413848647;Fetches an EJB home object and delegates to {@code doInvoke}._<p>If configured to refresh on connect failure, it will call_{@link #refreshAndRetry} on corresponding RMI exceptions._@see #getHome_@see #doInvoke_@see #refreshAndRetry;@Override_	public Object invokeInContext(MethodInvocation invocation) throws Throwable {_		try {_			return doInvoke(invocation)__		}_		catch (RemoteConnectFailureException ex) {_			return handleRemoteConnectFailure(invocation, ex)__		}_		catch (RemoteException ex) {_			if (isConnectFailure(ex)) {_				return handleRemoteConnectFailure(invocation, ex)__			}_			else {_				throw ex__			}_		}_	};fetches,an,ejb,home,object,and,delegates,to,code,do,invoke,p,if,configured,to,refresh,on,connect,failure,it,will,call,link,refresh,and,retry,on,corresponding,rmi,exceptions,see,get,home,see,do,invoke,see,refresh,and,retry;override,public,object,invoke,in,context,method,invocation,invocation,throws,throwable,try,return,do,invoke,invocation,catch,remote,connect,failure,exception,ex,return,handle,remote,connect,failure,invocation,ex,catch,remote,exception,ex,if,is,connect,failure,ex,return,handle,remote,connect,failure,invocation,ex,else,throw,ex
AbstractRemoteSlsbInvokerInterceptor -> @Override 	public Object invokeInContext(MethodInvocation invocation) throws Throwable;1468949854;Fetches an EJB home object and delegates to {@code doInvoke}._<p>If configured to refresh on connect failure, it will call_{@link #refreshAndRetry} on corresponding RMI exceptions._@see #getHome_@see #doInvoke_@see #refreshAndRetry;@Override_	public Object invokeInContext(MethodInvocation invocation) throws Throwable {_		try {_			return doInvoke(invocation)__		}_		catch (RemoteConnectFailureException ex) {_			return handleRemoteConnectFailure(invocation, ex)__		}_		catch (RemoteException ex) {_			if (isConnectFailure(ex)) {_				return handleRemoteConnectFailure(invocation, ex)__			}_			else {_				throw ex__			}_		}_	};fetches,an,ejb,home,object,and,delegates,to,code,do,invoke,p,if,configured,to,refresh,on,connect,failure,it,will,call,link,refresh,and,retry,on,corresponding,rmi,exceptions,see,get,home,see,do,invoke,see,refresh,and,retry;override,public,object,invoke,in,context,method,invocation,invocation,throws,throwable,try,return,do,invoke,invocation,catch,remote,connect,failure,exception,ex,return,handle,remote,connect,failure,invocation,ex,catch,remote,exception,ex,if,is,connect,failure,ex,return,handle,remote,connect,failure,invocation,ex,else,throw,ex
AbstractRemoteSlsbInvokerInterceptor -> @Override 	public Object invokeInContext(MethodInvocation invocation) throws Throwable;1476521730;Fetches an EJB home object and delegates to {@code doInvoke}._<p>If configured to refresh on connect failure, it will call_{@link #refreshAndRetry} on corresponding RMI exceptions._@see #getHome_@see #doInvoke_@see #refreshAndRetry;@Override_	public Object invokeInContext(MethodInvocation invocation) throws Throwable {_		try {_			return doInvoke(invocation)__		}_		catch (RemoteConnectFailureException ex) {_			return handleRemoteConnectFailure(invocation, ex)__		}_		catch (RemoteException ex) {_			if (isConnectFailure(ex)) {_				return handleRemoteConnectFailure(invocation, ex)__			}_			else {_				throw ex__			}_		}_	};fetches,an,ejb,home,object,and,delegates,to,code,do,invoke,p,if,configured,to,refresh,on,connect,failure,it,will,call,link,refresh,and,retry,on,corresponding,rmi,exceptions,see,get,home,see,do,invoke,see,refresh,and,retry;override,public,object,invoke,in,context,method,invocation,invocation,throws,throwable,try,return,do,invoke,invocation,catch,remote,connect,failure,exception,ex,return,handle,remote,connect,failure,invocation,ex,catch,remote,exception,ex,if,is,connect,failure,ex,return,handle,remote,connect,failure,invocation,ex,else,throw,ex
AbstractRemoteSlsbInvokerInterceptor -> @Override 	public Object invokeInContext(MethodInvocation invocation) throws Throwable;1495868221;Fetches an EJB home object and delegates to {@code doInvoke}._<p>If configured to refresh on connect failure, it will call_{@link #refreshAndRetry} on corresponding RMI exceptions._@see #getHome_@see #doInvoke_@see #refreshAndRetry;@Override_	public Object invokeInContext(MethodInvocation invocation) throws Throwable {_		try {_			return doInvoke(invocation)__		}_		catch (RemoteConnectFailureException ex) {_			return handleRemoteConnectFailure(invocation, ex)__		}_		catch (RemoteException ex) {_			if (isConnectFailure(ex)) {_				return handleRemoteConnectFailure(invocation, ex)__			}_			else {_				throw ex__			}_		}_	};fetches,an,ejb,home,object,and,delegates,to,code,do,invoke,p,if,configured,to,refresh,on,connect,failure,it,will,call,link,refresh,and,retry,on,corresponding,rmi,exceptions,see,get,home,see,do,invoke,see,refresh,and,retry;override,public,object,invoke,in,context,method,invocation,invocation,throws,throwable,try,return,do,invoke,invocation,catch,remote,connect,failure,exception,ex,return,handle,remote,connect,failure,invocation,ex,catch,remote,exception,ex,if,is,connect,failure,ex,return,handle,remote,connect,failure,invocation,ex,else,throw,ex
AbstractRemoteSlsbInvokerInterceptor -> @Override 	public Object invokeInContext(MethodInvocation invocation) throws Throwable;1496837955;Fetches an EJB home object and delegates to {@code doInvoke}._<p>If configured to refresh on connect failure, it will call_{@link #refreshAndRetry} on corresponding RMI exceptions._@see #getHome_@see #doInvoke_@see #refreshAndRetry;@Override_	public Object invokeInContext(MethodInvocation invocation) throws Throwable {_		try {_			return doInvoke(invocation)__		}_		catch (RemoteConnectFailureException ex) {_			return handleRemoteConnectFailure(invocation, ex)__		}_		catch (RemoteException ex) {_			if (isConnectFailure(ex)) {_				return handleRemoteConnectFailure(invocation, ex)__			}_			else {_				throw ex__			}_		}_	};fetches,an,ejb,home,object,and,delegates,to,code,do,invoke,p,if,configured,to,refresh,on,connect,failure,it,will,call,link,refresh,and,retry,on,corresponding,rmi,exceptions,see,get,home,see,do,invoke,see,refresh,and,retry;override,public,object,invoke,in,context,method,invocation,invocation,throws,throwable,try,return,do,invoke,invocation,catch,remote,connect,failure,exception,ex,return,handle,remote,connect,failure,invocation,ex,catch,remote,exception,ex,if,is,connect,failure,ex,return,handle,remote,connect,failure,invocation,ex,else,throw,ex
AbstractRemoteSlsbInvokerInterceptor -> protected boolean isConnectFailure(RemoteException ex);1328020251;Determine whether the given RMI exception indicates a connect failure._<p>The default implementation delegates to RmiClientInterceptorUtils._@param ex the RMI exception to check_@return whether the exception should be treated as connect failure_@see org.springframework.remoting.rmi.RmiClientInterceptorUtils#isConnectFailure;protected boolean isConnectFailure(RemoteException ex) {_		return RmiClientInterceptorUtils.isConnectFailure(ex)__	};determine,whether,the,given,rmi,exception,indicates,a,connect,failure,p,the,default,implementation,delegates,to,rmi,client,interceptor,utils,param,ex,the,rmi,exception,to,check,return,whether,the,exception,should,be,treated,as,connect,failure,see,org,springframework,remoting,rmi,rmi,client,interceptor,utils,is,connect,failure;protected,boolean,is,connect,failure,remote,exception,ex,return,rmi,client,interceptor,utils,is,connect,failure,ex
AbstractRemoteSlsbInvokerInterceptor -> protected boolean isConnectFailure(RemoteException ex);1356735495;Determine whether the given RMI exception indicates a connect failure._<p>The default implementation delegates to RmiClientInterceptorUtils._@param ex the RMI exception to check_@return whether the exception should be treated as connect failure_@see org.springframework.remoting.rmi.RmiClientInterceptorUtils#isConnectFailure;protected boolean isConnectFailure(RemoteException ex) {_		return RmiClientInterceptorUtils.isConnectFailure(ex)__	};determine,whether,the,given,rmi,exception,indicates,a,connect,failure,p,the,default,implementation,delegates,to,rmi,client,interceptor,utils,param,ex,the,rmi,exception,to,check,return,whether,the,exception,should,be,treated,as,connect,failure,see,org,springframework,remoting,rmi,rmi,client,interceptor,utils,is,connect,failure;protected,boolean,is,connect,failure,remote,exception,ex,return,rmi,client,interceptor,utils,is,connect,failure,ex
AbstractRemoteSlsbInvokerInterceptor -> protected boolean isConnectFailure(RemoteException ex);1385412762;Determine whether the given RMI exception indicates a connect failure._<p>The default implementation delegates to RmiClientInterceptorUtils._@param ex the RMI exception to check_@return whether the exception should be treated as connect failure_@see org.springframework.remoting.rmi.RmiClientInterceptorUtils#isConnectFailure;protected boolean isConnectFailure(RemoteException ex) {_		return RmiClientInterceptorUtils.isConnectFailure(ex)__	};determine,whether,the,given,rmi,exception,indicates,a,connect,failure,p,the,default,implementation,delegates,to,rmi,client,interceptor,utils,param,ex,the,rmi,exception,to,check,return,whether,the,exception,should,be,treated,as,connect,failure,see,org,springframework,remoting,rmi,rmi,client,interceptor,utils,is,connect,failure;protected,boolean,is,connect,failure,remote,exception,ex,return,rmi,client,interceptor,utils,is,connect,failure,ex
AbstractRemoteSlsbInvokerInterceptor -> protected boolean isConnectFailure(RemoteException ex);1413848647;Determine whether the given RMI exception indicates a connect failure._<p>The default implementation delegates to RmiClientInterceptorUtils._@param ex the RMI exception to check_@return whether the exception should be treated as connect failure_@see org.springframework.remoting.rmi.RmiClientInterceptorUtils#isConnectFailure;protected boolean isConnectFailure(RemoteException ex) {_		return RmiClientInterceptorUtils.isConnectFailure(ex)__	};determine,whether,the,given,rmi,exception,indicates,a,connect,failure,p,the,default,implementation,delegates,to,rmi,client,interceptor,utils,param,ex,the,rmi,exception,to,check,return,whether,the,exception,should,be,treated,as,connect,failure,see,org,springframework,remoting,rmi,rmi,client,interceptor,utils,is,connect,failure;protected,boolean,is,connect,failure,remote,exception,ex,return,rmi,client,interceptor,utils,is,connect,failure,ex
AbstractRemoteSlsbInvokerInterceptor -> protected boolean isConnectFailure(RemoteException ex);1468949854;Determine whether the given RMI exception indicates a connect failure._<p>The default implementation delegates to RmiClientInterceptorUtils._@param ex the RMI exception to check_@return whether the exception should be treated as connect failure_@see org.springframework.remoting.rmi.RmiClientInterceptorUtils#isConnectFailure;protected boolean isConnectFailure(RemoteException ex) {_		return RmiClientInterceptorUtils.isConnectFailure(ex)__	};determine,whether,the,given,rmi,exception,indicates,a,connect,failure,p,the,default,implementation,delegates,to,rmi,client,interceptor,utils,param,ex,the,rmi,exception,to,check,return,whether,the,exception,should,be,treated,as,connect,failure,see,org,springframework,remoting,rmi,rmi,client,interceptor,utils,is,connect,failure;protected,boolean,is,connect,failure,remote,exception,ex,return,rmi,client,interceptor,utils,is,connect,failure,ex
AbstractRemoteSlsbInvokerInterceptor -> protected boolean isConnectFailure(RemoteException ex);1476521730;Determine whether the given RMI exception indicates a connect failure._<p>The default implementation delegates to RmiClientInterceptorUtils._@param ex the RMI exception to check_@return whether the exception should be treated as connect failure_@see org.springframework.remoting.rmi.RmiClientInterceptorUtils#isConnectFailure;protected boolean isConnectFailure(RemoteException ex) {_		return RmiClientInterceptorUtils.isConnectFailure(ex)__	};determine,whether,the,given,rmi,exception,indicates,a,connect,failure,p,the,default,implementation,delegates,to,rmi,client,interceptor,utils,param,ex,the,rmi,exception,to,check,return,whether,the,exception,should,be,treated,as,connect,failure,see,org,springframework,remoting,rmi,rmi,client,interceptor,utils,is,connect,failure;protected,boolean,is,connect,failure,remote,exception,ex,return,rmi,client,interceptor,utils,is,connect,failure,ex
AbstractRemoteSlsbInvokerInterceptor -> protected boolean isConnectFailure(RemoteException ex);1495868221;Determine whether the given RMI exception indicates a connect failure._<p>The default implementation delegates to RmiClientInterceptorUtils._@param ex the RMI exception to check_@return whether the exception should be treated as connect failure_@see org.springframework.remoting.rmi.RmiClientInterceptorUtils#isConnectFailure;protected boolean isConnectFailure(RemoteException ex) {_		return RmiClientInterceptorUtils.isConnectFailure(ex)__	};determine,whether,the,given,rmi,exception,indicates,a,connect,failure,p,the,default,implementation,delegates,to,rmi,client,interceptor,utils,param,ex,the,rmi,exception,to,check,return,whether,the,exception,should,be,treated,as,connect,failure,see,org,springframework,remoting,rmi,rmi,client,interceptor,utils,is,connect,failure;protected,boolean,is,connect,failure,remote,exception,ex,return,rmi,client,interceptor,utils,is,connect,failure,ex
AbstractRemoteSlsbInvokerInterceptor -> protected boolean isConnectFailure(RemoteException ex);1496837955;Determine whether the given RMI exception indicates a connect failure._<p>The default implementation delegates to RmiClientInterceptorUtils._@param ex the RMI exception to check_@return whether the exception should be treated as connect failure_@see org.springframework.remoting.rmi.RmiClientInterceptorUtils#isConnectFailure;protected boolean isConnectFailure(RemoteException ex) {_		return RmiClientInterceptorUtils.isConnectFailure(ex)__	};determine,whether,the,given,rmi,exception,indicates,a,connect,failure,p,the,default,implementation,delegates,to,rmi,client,interceptor,utils,param,ex,the,rmi,exception,to,check,return,whether,the,exception,should,be,treated,as,connect,failure,see,org,springframework,remoting,rmi,rmi,client,interceptor,utils,is,connect,failure;protected,boolean,is,connect,failure,remote,exception,ex,return,rmi,client,interceptor,utils,is,connect,failure,ex
AbstractRemoteSlsbInvokerInterceptor -> protected boolean isConnectFailure(RemoteException ex);1502974979;Determine whether the given RMI exception indicates a connect failure._<p>The default implementation delegates to RmiClientInterceptorUtils._@param ex the RMI exception to check_@return whether the exception should be treated as connect failure_@see org.springframework.remoting.rmi.RmiClientInterceptorUtils#isConnectFailure;protected boolean isConnectFailure(RemoteException ex) {_		return RmiClientInterceptorUtils.isConnectFailure(ex)__	};determine,whether,the,given,rmi,exception,indicates,a,connect,failure,p,the,default,implementation,delegates,to,rmi,client,interceptor,utils,param,ex,the,rmi,exception,to,check,return,whether,the,exception,should,be,treated,as,connect,failure,see,org,springframework,remoting,rmi,rmi,client,interceptor,utils,is,connect,failure;protected,boolean,is,connect,failure,remote,exception,ex,return,rmi,client,interceptor,utils,is,connect,failure,ex
AbstractRemoteSlsbInvokerInterceptor -> @Nullable 	protected abstract Object doInvoke(MethodInvocation invocation) throws Throwable_;1495868221;Perform the given invocation on the current EJB home._Template method to be implemented by subclasses._@param invocation the AOP method invocation_@return the invocation result, if any_@throws Throwable in case of invocation failure_@see #getHome_@see #newSessionBeanInstance;@Nullable_	protected abstract Object doInvoke(MethodInvocation invocation) throws Throwable_;perform,the,given,invocation,on,the,current,ejb,home,template,method,to,be,implemented,by,subclasses,param,invocation,the,aop,method,invocation,return,the,invocation,result,if,any,throws,throwable,in,case,of,invocation,failure,see,get,home,see,new,session,bean,instance;nullable,protected,abstract,object,do,invoke,method,invocation,invocation,throws,throwable
AbstractRemoteSlsbInvokerInterceptor -> @Nullable 	protected abstract Object doInvoke(MethodInvocation invocation) throws Throwable_;1496837955;Perform the given invocation on the current EJB home._Template method to be implemented by subclasses._@param invocation the AOP method invocation_@return the invocation result, if any_@throws Throwable in case of invocation failure_@see #getHome_@see #newSessionBeanInstance;@Nullable_	protected abstract Object doInvoke(MethodInvocation invocation) throws Throwable_;perform,the,given,invocation,on,the,current,ejb,home,template,method,to,be,implemented,by,subclasses,param,invocation,the,aop,method,invocation,return,the,invocation,result,if,any,throws,throwable,in,case,of,invocation,failure,see,get,home,see,new,session,bean,instance;nullable,protected,abstract,object,do,invoke,method,invocation,invocation,throws,throwable
AbstractRemoteSlsbInvokerInterceptor -> @Nullable 	protected abstract Object doInvoke(MethodInvocation invocation) throws Throwable_;1502974979;Perform the given invocation on the current EJB home._Template method to be implemented by subclasses._@param invocation the AOP method invocation_@return the invocation result, if any_@throws Throwable in case of invocation failure_@see #getHome_@see #newSessionBeanInstance;@Nullable_	protected abstract Object doInvoke(MethodInvocation invocation) throws Throwable_;perform,the,given,invocation,on,the,current,ejb,home,template,method,to,be,implemented,by,subclasses,param,invocation,the,aop,method,invocation,return,the,invocation,result,if,any,throws,throwable,in,case,of,invocation,failure,see,get,home,see,new,session,bean,instance;nullable,protected,abstract,object,do,invoke,method,invocation,invocation,throws,throwable
AbstractRemoteSlsbInvokerInterceptor -> public void setHomeInterface(Class<?> homeInterface);1385412762;Set a home interface that this invoker will narrow to before performing_the parameterless SLSB {@code create()} call that returns the actual_SLSB proxy._<p>Default is none, which will work on all J2EE servers that are not based_on CORBA. A plain {@code javax.ejb.EJBHome} interface is known to be_sufficient to make a WebSphere 5.0 Remote SLSB work. On other servers,_the specific home interface for the target SLSB might be necessary.;public void setHomeInterface(Class<?> homeInterface) {_		if (homeInterface != null && !homeInterface.isInterface()) {_			throw new IllegalArgumentException(_					"Home interface class [" + homeInterface.getClass() + "] is not an interface")__		}_		this.homeInterface = homeInterface__	};set,a,home,interface,that,this,invoker,will,narrow,to,before,performing,the,parameterless,slsb,code,create,call,that,returns,the,actual,slsb,proxy,p,default,is,none,which,will,work,on,all,j2ee,servers,that,are,not,based,on,corba,a,plain,code,javax,ejb,ejbhome,interface,is,known,to,be,sufficient,to,make,a,web,sphere,5,0,remote,slsb,work,on,other,servers,the,specific,home,interface,for,the,target,slsb,might,be,necessary;public,void,set,home,interface,class,home,interface,if,home,interface,null,home,interface,is,interface,throw,new,illegal,argument,exception,home,interface,class,home,interface,get,class,is,not,an,interface,this,home,interface,home,interface
AbstractRemoteSlsbInvokerInterceptor -> public void setHomeInterface(Class<?> homeInterface);1413848647;Set a home interface that this invoker will narrow to before performing_the parameterless SLSB {@code create()} call that returns the actual_SLSB proxy._<p>Default is none, which will work on all J2EE servers that are not based_on CORBA. A plain {@code javax.ejb.EJBHome} interface is known to be_sufficient to make a WebSphere 5.0 Remote SLSB work. On other servers,_the specific home interface for the target SLSB might be necessary.;public void setHomeInterface(Class<?> homeInterface) {_		if (homeInterface != null && !homeInterface.isInterface()) {_			throw new IllegalArgumentException(_					"Home interface class [" + homeInterface.getClass() + "] is not an interface")__		}_		this.homeInterface = homeInterface__	};set,a,home,interface,that,this,invoker,will,narrow,to,before,performing,the,parameterless,slsb,code,create,call,that,returns,the,actual,slsb,proxy,p,default,is,none,which,will,work,on,all,j2ee,servers,that,are,not,based,on,corba,a,plain,code,javax,ejb,ejbhome,interface,is,known,to,be,sufficient,to,make,a,web,sphere,5,0,remote,slsb,work,on,other,servers,the,specific,home,interface,for,the,target,slsb,might,be,necessary;public,void,set,home,interface,class,home,interface,if,home,interface,null,home,interface,is,interface,throw,new,illegal,argument,exception,home,interface,class,home,interface,get,class,is,not,an,interface,this,home,interface,home,interface
AbstractRemoteSlsbInvokerInterceptor -> public void setHomeInterface(Class<?> homeInterface);1468949854;Set a home interface that this invoker will narrow to before performing_the parameterless SLSB {@code create()} call that returns the actual_SLSB proxy._<p>Default is none, which will work on all J2EE servers that are not based_on CORBA. A plain {@code javax.ejb.EJBHome} interface is known to be_sufficient to make a WebSphere 5.0 Remote SLSB work. On other servers,_the specific home interface for the target SLSB might be necessary.;public void setHomeInterface(Class<?> homeInterface) {_		if (homeInterface != null && !homeInterface.isInterface()) {_			throw new IllegalArgumentException(_					"Home interface class [" + homeInterface.getClass() + "] is not an interface")__		}_		this.homeInterface = homeInterface__	};set,a,home,interface,that,this,invoker,will,narrow,to,before,performing,the,parameterless,slsb,code,create,call,that,returns,the,actual,slsb,proxy,p,default,is,none,which,will,work,on,all,j2ee,servers,that,are,not,based,on,corba,a,plain,code,javax,ejb,ejbhome,interface,is,known,to,be,sufficient,to,make,a,web,sphere,5,0,remote,slsb,work,on,other,servers,the,specific,home,interface,for,the,target,slsb,might,be,necessary;public,void,set,home,interface,class,home,interface,if,home,interface,null,home,interface,is,interface,throw,new,illegal,argument,exception,home,interface,class,home,interface,get,class,is,not,an,interface,this,home,interface,home,interface
AbstractRemoteSlsbInvokerInterceptor -> public void setHomeInterface(Class<?> homeInterface);1476521730;Set a home interface that this invoker will narrow to before performing_the parameterless SLSB {@code create()} call that returns the actual_SLSB proxy._<p>Default is none, which will work on all Java EE servers that are not_based on CORBA. A plain {@code javax.ejb.EJBHome} interface is known to_be sufficient to make a WebSphere 5.0 Remote SLSB work. On other servers,_the specific home interface for the target SLSB might be necessary.;public void setHomeInterface(Class<?> homeInterface) {_		if (homeInterface != null && !homeInterface.isInterface()) {_			throw new IllegalArgumentException(_					"Home interface class [" + homeInterface.getClass() + "] is not an interface")__		}_		this.homeInterface = homeInterface__	};set,a,home,interface,that,this,invoker,will,narrow,to,before,performing,the,parameterless,slsb,code,create,call,that,returns,the,actual,slsb,proxy,p,default,is,none,which,will,work,on,all,java,ee,servers,that,are,not,based,on,corba,a,plain,code,javax,ejb,ejbhome,interface,is,known,to,be,sufficient,to,make,a,web,sphere,5,0,remote,slsb,work,on,other,servers,the,specific,home,interface,for,the,target,slsb,might,be,necessary;public,void,set,home,interface,class,home,interface,if,home,interface,null,home,interface,is,interface,throw,new,illegal,argument,exception,home,interface,class,home,interface,get,class,is,not,an,interface,this,home,interface,home,interface
AbstractRemoteSlsbInvokerInterceptor -> public void setHomeInterface(Class<?> homeInterface);1495868221;Set a home interface that this invoker will narrow to before performing_the parameterless SLSB {@code create()} call that returns the actual_SLSB proxy._<p>Default is none, which will work on all Java EE servers that are not_based on CORBA. A plain {@code javax.ejb.EJBHome} interface is known to_be sufficient to make a WebSphere 5.0 Remote SLSB work. On other servers,_the specific home interface for the target SLSB might be necessary.;public void setHomeInterface(Class<?> homeInterface) {_		if (homeInterface != null && !homeInterface.isInterface()) {_			throw new IllegalArgumentException(_					"Home interface class [" + homeInterface.getClass() + "] is not an interface")__		}_		this.homeInterface = homeInterface__	};set,a,home,interface,that,this,invoker,will,narrow,to,before,performing,the,parameterless,slsb,code,create,call,that,returns,the,actual,slsb,proxy,p,default,is,none,which,will,work,on,all,java,ee,servers,that,are,not,based,on,corba,a,plain,code,javax,ejb,ejbhome,interface,is,known,to,be,sufficient,to,make,a,web,sphere,5,0,remote,slsb,work,on,other,servers,the,specific,home,interface,for,the,target,slsb,might,be,necessary;public,void,set,home,interface,class,home,interface,if,home,interface,null,home,interface,is,interface,throw,new,illegal,argument,exception,home,interface,class,home,interface,get,class,is,not,an,interface,this,home,interface,home,interface
