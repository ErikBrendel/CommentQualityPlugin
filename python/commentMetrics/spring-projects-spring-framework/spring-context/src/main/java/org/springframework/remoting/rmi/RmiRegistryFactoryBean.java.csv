# id;timestamp;commentText;codeText;commentWords;codeWords
RmiRegistryFactoryBean -> public void setClientSocketFactory(RMIClientSocketFactory clientSocketFactory);1328020251;Set a custom RMI client socket factory to use for the RMI registry._<p>If the given object also implements <code>java.rmi.server.RMIServerSocketFactory</code>,_it will automatically be registered as server socket factory too._@see #setServerSocketFactory_@see java.rmi.server.RMIClientSocketFactory_@see java.rmi.server.RMIServerSocketFactory_@see java.rmi.registry.LocateRegistry#getRegistry(String, int, java.rmi.server.RMIClientSocketFactory);public void setClientSocketFactory(RMIClientSocketFactory clientSocketFactory) {_		this.clientSocketFactory = clientSocketFactory__	};set,a,custom,rmi,client,socket,factory,to,use,for,the,rmi,registry,p,if,the,given,object,also,implements,code,java,rmi,server,rmiserver,socket,factory,code,it,will,automatically,be,registered,as,server,socket,factory,too,see,set,server,socket,factory,see,java,rmi,server,rmiclient,socket,factory,see,java,rmi,server,rmiserver,socket,factory,see,java,rmi,registry,locate,registry,get,registry,string,int,java,rmi,server,rmiclient,socket,factory;public,void,set,client,socket,factory,rmiclient,socket,factory,client,socket,factory,this,client,socket,factory,client,socket,factory
RmiRegistryFactoryBean -> public void setClientSocketFactory(RMIClientSocketFactory clientSocketFactory);1356735495;Set a custom RMI client socket factory to use for the RMI registry._<p>If the given object also implements {@code java.rmi.server.RMIServerSocketFactory},_it will automatically be registered as server socket factory too._@see #setServerSocketFactory_@see java.rmi.server.RMIClientSocketFactory_@see java.rmi.server.RMIServerSocketFactory_@see java.rmi.registry.LocateRegistry#getRegistry(String, int, java.rmi.server.RMIClientSocketFactory);public void setClientSocketFactory(RMIClientSocketFactory clientSocketFactory) {_		this.clientSocketFactory = clientSocketFactory__	};set,a,custom,rmi,client,socket,factory,to,use,for,the,rmi,registry,p,if,the,given,object,also,implements,code,java,rmi,server,rmiserver,socket,factory,it,will,automatically,be,registered,as,server,socket,factory,too,see,set,server,socket,factory,see,java,rmi,server,rmiclient,socket,factory,see,java,rmi,server,rmiserver,socket,factory,see,java,rmi,registry,locate,registry,get,registry,string,int,java,rmi,server,rmiclient,socket,factory;public,void,set,client,socket,factory,rmiclient,socket,factory,client,socket,factory,this,client,socket,factory,client,socket,factory
RmiRegistryFactoryBean -> public void setClientSocketFactory(RMIClientSocketFactory clientSocketFactory);1357119239;Set a custom RMI client socket factory to use for the RMI registry._<p>If the given object also implements {@code java.rmi.server.RMIServerSocketFactory},_it will automatically be registered as server socket factory too._@see #setServerSocketFactory_@see java.rmi.server.RMIClientSocketFactory_@see java.rmi.server.RMIServerSocketFactory_@see java.rmi.registry.LocateRegistry#getRegistry(String, int, java.rmi.server.RMIClientSocketFactory);public void setClientSocketFactory(RMIClientSocketFactory clientSocketFactory) {_		this.clientSocketFactory = clientSocketFactory__	};set,a,custom,rmi,client,socket,factory,to,use,for,the,rmi,registry,p,if,the,given,object,also,implements,code,java,rmi,server,rmiserver,socket,factory,it,will,automatically,be,registered,as,server,socket,factory,too,see,set,server,socket,factory,see,java,rmi,server,rmiclient,socket,factory,see,java,rmi,server,rmiserver,socket,factory,see,java,rmi,registry,locate,registry,get,registry,string,int,java,rmi,server,rmiclient,socket,factory;public,void,set,client,socket,factory,rmiclient,socket,factory,client,socket,factory,this,client,socket,factory,client,socket,factory
RmiRegistryFactoryBean -> public void setClientSocketFactory(RMIClientSocketFactory clientSocketFactory);1368482696;Set a custom RMI client socket factory to use for the RMI registry._<p>If the given object also implements {@code java.rmi.server.RMIServerSocketFactory},_it will automatically be registered as server socket factory too._@see #setServerSocketFactory_@see java.rmi.server.RMIClientSocketFactory_@see java.rmi.server.RMIServerSocketFactory_@see java.rmi.registry.LocateRegistry#getRegistry(String, int, java.rmi.server.RMIClientSocketFactory);public void setClientSocketFactory(RMIClientSocketFactory clientSocketFactory) {_		this.clientSocketFactory = clientSocketFactory__	};set,a,custom,rmi,client,socket,factory,to,use,for,the,rmi,registry,p,if,the,given,object,also,implements,code,java,rmi,server,rmiserver,socket,factory,it,will,automatically,be,registered,as,server,socket,factory,too,see,set,server,socket,factory,see,java,rmi,server,rmiclient,socket,factory,see,java,rmi,server,rmiserver,socket,factory,see,java,rmi,registry,locate,registry,get,registry,string,int,java,rmi,server,rmiclient,socket,factory;public,void,set,client,socket,factory,rmiclient,socket,factory,client,socket,factory,this,client,socket,factory,client,socket,factory
RmiRegistryFactoryBean -> public void setClientSocketFactory(RMIClientSocketFactory clientSocketFactory);1372363092;Set a custom RMI client socket factory to use for the RMI registry._<p>If the given object also implements {@code java.rmi.server.RMIServerSocketFactory},_it will automatically be registered as server socket factory too._@see #setServerSocketFactory_@see java.rmi.server.RMIClientSocketFactory_@see java.rmi.server.RMIServerSocketFactory_@see java.rmi.registry.LocateRegistry#getRegistry(String, int, java.rmi.server.RMIClientSocketFactory);public void setClientSocketFactory(RMIClientSocketFactory clientSocketFactory) {_		this.clientSocketFactory = clientSocketFactory__	};set,a,custom,rmi,client,socket,factory,to,use,for,the,rmi,registry,p,if,the,given,object,also,implements,code,java,rmi,server,rmiserver,socket,factory,it,will,automatically,be,registered,as,server,socket,factory,too,see,set,server,socket,factory,see,java,rmi,server,rmiclient,socket,factory,see,java,rmi,server,rmiserver,socket,factory,see,java,rmi,registry,locate,registry,get,registry,string,int,java,rmi,server,rmiclient,socket,factory;public,void,set,client,socket,factory,rmiclient,socket,factory,client,socket,factory,this,client,socket,factory,client,socket,factory
RmiRegistryFactoryBean -> public void setClientSocketFactory(RMIClientSocketFactory clientSocketFactory);1495868221;Set a custom RMI client socket factory to use for the RMI registry._<p>If the given object also implements {@code java.rmi.server.RMIServerSocketFactory},_it will automatically be registered as server socket factory too._@see #setServerSocketFactory_@see java.rmi.server.RMIClientSocketFactory_@see java.rmi.server.RMIServerSocketFactory_@see java.rmi.registry.LocateRegistry#getRegistry(String, int, java.rmi.server.RMIClientSocketFactory);public void setClientSocketFactory(RMIClientSocketFactory clientSocketFactory) {_		this.clientSocketFactory = clientSocketFactory__	};set,a,custom,rmi,client,socket,factory,to,use,for,the,rmi,registry,p,if,the,given,object,also,implements,code,java,rmi,server,rmiserver,socket,factory,it,will,automatically,be,registered,as,server,socket,factory,too,see,set,server,socket,factory,see,java,rmi,server,rmiclient,socket,factory,see,java,rmi,server,rmiserver,socket,factory,see,java,rmi,registry,locate,registry,get,registry,string,int,java,rmi,server,rmiclient,socket,factory;public,void,set,client,socket,factory,rmiclient,socket,factory,client,socket,factory,this,client,socket,factory,client,socket,factory
RmiRegistryFactoryBean -> public void setClientSocketFactory(RMIClientSocketFactory clientSocketFactory);1532091916;Set a custom RMI client socket factory to use for the RMI registry._<p>If the given object also implements {@code java.rmi.server.RMIServerSocketFactory},_it will automatically be registered as server socket factory too._@see #setServerSocketFactory_@see java.rmi.server.RMIClientSocketFactory_@see java.rmi.server.RMIServerSocketFactory_@see java.rmi.registry.LocateRegistry#getRegistry(String, int, java.rmi.server.RMIClientSocketFactory);public void setClientSocketFactory(RMIClientSocketFactory clientSocketFactory) {_		this.clientSocketFactory = clientSocketFactory__	};set,a,custom,rmi,client,socket,factory,to,use,for,the,rmi,registry,p,if,the,given,object,also,implements,code,java,rmi,server,rmiserver,socket,factory,it,will,automatically,be,registered,as,server,socket,factory,too,see,set,server,socket,factory,see,java,rmi,server,rmiclient,socket,factory,see,java,rmi,server,rmiserver,socket,factory,see,java,rmi,registry,locate,registry,get,registry,string,int,java,rmi,server,rmiclient,socket,factory;public,void,set,client,socket,factory,rmiclient,socket,factory,client,socket,factory,this,client,socket,factory,client,socket,factory
RmiRegistryFactoryBean -> protected Registry getRegistry(String registryHost, int registryPort, 			@Nullable RMIClientSocketFactory clientSocketFactory, @Nullable RMIServerSocketFactory serverSocketFactory) 			throws RemoteException;1495868221;Locate or create the RMI registry._@param registryHost the registry host to use (if this is specified,_no implicit creation of a RMI registry will happen)_@param registryPort the registry port to use_@param clientSocketFactory the RMI client socket factory for the registry (if any)_@param serverSocketFactory the RMI server socket factory for the registry (if any)_@return the RMI registry_@throws java.rmi.RemoteException if the registry couldn't be located or created;protected Registry getRegistry(String registryHost, int registryPort,_			@Nullable RMIClientSocketFactory clientSocketFactory, @Nullable RMIServerSocketFactory serverSocketFactory)_			throws RemoteException {__		if (registryHost != null) {_			_			if (logger.isInfoEnabled()) {_				logger.info("Looking for RMI registry at port '" + registryPort + "' of host [" + registryHost + "]")__			}_			Registry reg = LocateRegistry.getRegistry(registryHost, registryPort, clientSocketFactory)__			testRegistry(reg)__			return reg__		}__		else {_			return getRegistry(registryPort, clientSocketFactory, serverSocketFactory)__		}_	};locate,or,create,the,rmi,registry,param,registry,host,the,registry,host,to,use,if,this,is,specified,no,implicit,creation,of,a,rmi,registry,will,happen,param,registry,port,the,registry,port,to,use,param,client,socket,factory,the,rmi,client,socket,factory,for,the,registry,if,any,param,server,socket,factory,the,rmi,server,socket,factory,for,the,registry,if,any,return,the,rmi,registry,throws,java,rmi,remote,exception,if,the,registry,couldn,t,be,located,or,created;protected,registry,get,registry,string,registry,host,int,registry,port,nullable,rmiclient,socket,factory,client,socket,factory,nullable,rmiserver,socket,factory,server,socket,factory,throws,remote,exception,if,registry,host,null,if,logger,is,info,enabled,logger,info,looking,for,rmi,registry,at,port,registry,port,of,host,registry,host,registry,reg,locate,registry,get,registry,registry,host,registry,port,client,socket,factory,test,registry,reg,return,reg,else,return,get,registry,registry,port,client,socket,factory,server,socket,factory
RmiRegistryFactoryBean -> protected Registry getRegistry(String registryHost, int registryPort, 			@Nullable RMIClientSocketFactory clientSocketFactory, @Nullable RMIServerSocketFactory serverSocketFactory) 			throws RemoteException;1532091916;Locate or create the RMI registry._@param registryHost the registry host to use (if this is specified,_no implicit creation of a RMI registry will happen)_@param registryPort the registry port to use_@param clientSocketFactory the RMI client socket factory for the registry (if any)_@param serverSocketFactory the RMI server socket factory for the registry (if any)_@return the RMI registry_@throws java.rmi.RemoteException if the registry couldn't be located or created;protected Registry getRegistry(String registryHost, int registryPort,_			@Nullable RMIClientSocketFactory clientSocketFactory, @Nullable RMIServerSocketFactory serverSocketFactory)_			throws RemoteException {__		if (registryHost != null) {_			_			if (logger.isDebugEnabled()) {_				logger.debug("Looking for RMI registry at port '" + registryPort + "' of host [" + registryHost + "]")__			}_			Registry reg = LocateRegistry.getRegistry(registryHost, registryPort, clientSocketFactory)__			testRegistry(reg)__			return reg__		}__		else {_			return getRegistry(registryPort, clientSocketFactory, serverSocketFactory)__		}_	};locate,or,create,the,rmi,registry,param,registry,host,the,registry,host,to,use,if,this,is,specified,no,implicit,creation,of,a,rmi,registry,will,happen,param,registry,port,the,registry,port,to,use,param,client,socket,factory,the,rmi,client,socket,factory,for,the,registry,if,any,param,server,socket,factory,the,rmi,server,socket,factory,for,the,registry,if,any,return,the,rmi,registry,throws,java,rmi,remote,exception,if,the,registry,couldn,t,be,located,or,created;protected,registry,get,registry,string,registry,host,int,registry,port,nullable,rmiclient,socket,factory,client,socket,factory,nullable,rmiserver,socket,factory,server,socket,factory,throws,remote,exception,if,registry,host,null,if,logger,is,debug,enabled,logger,debug,looking,for,rmi,registry,at,port,registry,port,of,host,registry,host,registry,reg,locate,registry,get,registry,registry,host,registry,port,client,socket,factory,test,registry,reg,return,reg,else,return,get,registry,registry,port,client,socket,factory,server,socket,factory
RmiRegistryFactoryBean -> protected Registry getRegistry(int registryPort, 			@Nullable RMIClientSocketFactory clientSocketFactory, @Nullable RMIServerSocketFactory serverSocketFactory) 			throws RemoteException;1495868221;Locate or create the RMI registry._@param registryPort the registry port to use_@param clientSocketFactory the RMI client socket factory for the registry (if any)_@param serverSocketFactory the RMI server socket factory for the registry (if any)_@return the RMI registry_@throws RemoteException if the registry couldn't be located or created;protected Registry getRegistry(int registryPort,_			@Nullable RMIClientSocketFactory clientSocketFactory, @Nullable RMIServerSocketFactory serverSocketFactory)_			throws RemoteException {__		if (clientSocketFactory != null) {_			if (this.alwaysCreate) {_				logger.info("Creating new RMI registry")__				this.created = true__				return LocateRegistry.createRegistry(registryPort, clientSocketFactory, serverSocketFactory)__			}_			if (logger.isInfoEnabled()) {_				logger.info("Looking for RMI registry at port '" + registryPort + "', using custom socket factory")__			}_			synchronized (LocateRegistry.class) {_				try {_					_					Registry reg = LocateRegistry.getRegistry(null, registryPort, clientSocketFactory)__					testRegistry(reg)__					return reg__				}_				catch (RemoteException ex) {_					logger.debug("RMI registry access threw exception", ex)__					logger.info("Could not detect RMI registry - creating new one")__					_					this.created = true__					return LocateRegistry.createRegistry(registryPort, clientSocketFactory, serverSocketFactory)__				}_			}_		}__		else {_			return getRegistry(registryPort)__		}_	};locate,or,create,the,rmi,registry,param,registry,port,the,registry,port,to,use,param,client,socket,factory,the,rmi,client,socket,factory,for,the,registry,if,any,param,server,socket,factory,the,rmi,server,socket,factory,for,the,registry,if,any,return,the,rmi,registry,throws,remote,exception,if,the,registry,couldn,t,be,located,or,created;protected,registry,get,registry,int,registry,port,nullable,rmiclient,socket,factory,client,socket,factory,nullable,rmiserver,socket,factory,server,socket,factory,throws,remote,exception,if,client,socket,factory,null,if,this,always,create,logger,info,creating,new,rmi,registry,this,created,true,return,locate,registry,create,registry,registry,port,client,socket,factory,server,socket,factory,if,logger,is,info,enabled,logger,info,looking,for,rmi,registry,at,port,registry,port,using,custom,socket,factory,synchronized,locate,registry,class,try,registry,reg,locate,registry,get,registry,null,registry,port,client,socket,factory,test,registry,reg,return,reg,catch,remote,exception,ex,logger,debug,rmi,registry,access,threw,exception,ex,logger,info,could,not,detect,rmi,registry,creating,new,one,this,created,true,return,locate,registry,create,registry,registry,port,client,socket,factory,server,socket,factory,else,return,get,registry,registry,port
RmiRegistryFactoryBean -> protected Registry getRegistry(int registryPort, 			@Nullable RMIClientSocketFactory clientSocketFactory, @Nullable RMIServerSocketFactory serverSocketFactory) 			throws RemoteException;1532091916;Locate or create the RMI registry._@param registryPort the registry port to use_@param clientSocketFactory the RMI client socket factory for the registry (if any)_@param serverSocketFactory the RMI server socket factory for the registry (if any)_@return the RMI registry_@throws RemoteException if the registry couldn't be located or created;protected Registry getRegistry(int registryPort,_			@Nullable RMIClientSocketFactory clientSocketFactory, @Nullable RMIServerSocketFactory serverSocketFactory)_			throws RemoteException {__		if (clientSocketFactory != null) {_			if (this.alwaysCreate) {_				logger.debug("Creating new RMI registry")__				this.created = true__				return LocateRegistry.createRegistry(registryPort, clientSocketFactory, serverSocketFactory)__			}_			if (logger.isDebugEnabled()) {_				logger.debug("Looking for RMI registry at port '" + registryPort + "', using custom socket factory")__			}_			synchronized (LocateRegistry.class) {_				try {_					_					Registry reg = LocateRegistry.getRegistry(null, registryPort, clientSocketFactory)__					testRegistry(reg)__					return reg__				}_				catch (RemoteException ex) {_					logger.trace("RMI registry access threw exception", ex)__					logger.debug("Could not detect RMI registry - creating new one")__					_					this.created = true__					return LocateRegistry.createRegistry(registryPort, clientSocketFactory, serverSocketFactory)__				}_			}_		}__		else {_			return getRegistry(registryPort)__		}_	};locate,or,create,the,rmi,registry,param,registry,port,the,registry,port,to,use,param,client,socket,factory,the,rmi,client,socket,factory,for,the,registry,if,any,param,server,socket,factory,the,rmi,server,socket,factory,for,the,registry,if,any,return,the,rmi,registry,throws,remote,exception,if,the,registry,couldn,t,be,located,or,created;protected,registry,get,registry,int,registry,port,nullable,rmiclient,socket,factory,client,socket,factory,nullable,rmiserver,socket,factory,server,socket,factory,throws,remote,exception,if,client,socket,factory,null,if,this,always,create,logger,debug,creating,new,rmi,registry,this,created,true,return,locate,registry,create,registry,registry,port,client,socket,factory,server,socket,factory,if,logger,is,debug,enabled,logger,debug,looking,for,rmi,registry,at,port,registry,port,using,custom,socket,factory,synchronized,locate,registry,class,try,registry,reg,locate,registry,get,registry,null,registry,port,client,socket,factory,test,registry,reg,return,reg,catch,remote,exception,ex,logger,trace,rmi,registry,access,threw,exception,ex,logger,debug,could,not,detect,rmi,registry,creating,new,one,this,created,true,return,locate,registry,create,registry,registry,port,client,socket,factory,server,socket,factory,else,return,get,registry,registry,port
RmiRegistryFactoryBean -> public void setAlwaysCreate(boolean alwaysCreate);1328020251;Set whether to always create the registry in-process,_not attempting to locate an existing registry at the specified port._<p>Default is "false". Switch this flag to "true" in order to avoid_the overhead of locating an existing registry when you always_intend to create a new registry in any case.;public void setAlwaysCreate(boolean alwaysCreate) {_		this.alwaysCreate = alwaysCreate__	};set,whether,to,always,create,the,registry,in,process,not,attempting,to,locate,an,existing,registry,at,the,specified,port,p,default,is,false,switch,this,flag,to,true,in,order,to,avoid,the,overhead,of,locating,an,existing,registry,when,you,always,intend,to,create,a,new,registry,in,any,case;public,void,set,always,create,boolean,always,create,this,always,create,always,create
RmiRegistryFactoryBean -> public void setAlwaysCreate(boolean alwaysCreate);1356735495;Set whether to always create the registry in-process,_not attempting to locate an existing registry at the specified port._<p>Default is "false". Switch this flag to "true" in order to avoid_the overhead of locating an existing registry when you always_intend to create a new registry in any case.;public void setAlwaysCreate(boolean alwaysCreate) {_		this.alwaysCreate = alwaysCreate__	};set,whether,to,always,create,the,registry,in,process,not,attempting,to,locate,an,existing,registry,at,the,specified,port,p,default,is,false,switch,this,flag,to,true,in,order,to,avoid,the,overhead,of,locating,an,existing,registry,when,you,always,intend,to,create,a,new,registry,in,any,case;public,void,set,always,create,boolean,always,create,this,always,create,always,create
RmiRegistryFactoryBean -> public void setAlwaysCreate(boolean alwaysCreate);1357119239;Set whether to always create the registry in-process,_not attempting to locate an existing registry at the specified port._<p>Default is "false". Switch this flag to "true" in order to avoid_the overhead of locating an existing registry when you always_intend to create a new registry in any case.;public void setAlwaysCreate(boolean alwaysCreate) {_		this.alwaysCreate = alwaysCreate__	};set,whether,to,always,create,the,registry,in,process,not,attempting,to,locate,an,existing,registry,at,the,specified,port,p,default,is,false,switch,this,flag,to,true,in,order,to,avoid,the,overhead,of,locating,an,existing,registry,when,you,always,intend,to,create,a,new,registry,in,any,case;public,void,set,always,create,boolean,always,create,this,always,create,always,create
RmiRegistryFactoryBean -> public void setAlwaysCreate(boolean alwaysCreate);1368482696;Set whether to always create the registry in-process,_not attempting to locate an existing registry at the specified port._<p>Default is "false". Switch this flag to "true" in order to avoid_the overhead of locating an existing registry when you always_intend to create a new registry in any case.;public void setAlwaysCreate(boolean alwaysCreate) {_		this.alwaysCreate = alwaysCreate__	};set,whether,to,always,create,the,registry,in,process,not,attempting,to,locate,an,existing,registry,at,the,specified,port,p,default,is,false,switch,this,flag,to,true,in,order,to,avoid,the,overhead,of,locating,an,existing,registry,when,you,always,intend,to,create,a,new,registry,in,any,case;public,void,set,always,create,boolean,always,create,this,always,create,always,create
RmiRegistryFactoryBean -> public void setAlwaysCreate(boolean alwaysCreate);1372363092;Set whether to always create the registry in-process,_not attempting to locate an existing registry at the specified port._<p>Default is "false". Switch this flag to "true" in order to avoid_the overhead of locating an existing registry when you always_intend to create a new registry in any case.;public void setAlwaysCreate(boolean alwaysCreate) {_		this.alwaysCreate = alwaysCreate__	};set,whether,to,always,create,the,registry,in,process,not,attempting,to,locate,an,existing,registry,at,the,specified,port,p,default,is,false,switch,this,flag,to,true,in,order,to,avoid,the,overhead,of,locating,an,existing,registry,when,you,always,intend,to,create,a,new,registry,in,any,case;public,void,set,always,create,boolean,always,create,this,always,create,always,create
RmiRegistryFactoryBean -> public void setAlwaysCreate(boolean alwaysCreate);1495868221;Set whether to always create the registry in-process,_not attempting to locate an existing registry at the specified port._<p>Default is "false". Switch this flag to "true" in order to avoid_the overhead of locating an existing registry when you always_intend to create a new registry in any case.;public void setAlwaysCreate(boolean alwaysCreate) {_		this.alwaysCreate = alwaysCreate__	};set,whether,to,always,create,the,registry,in,process,not,attempting,to,locate,an,existing,registry,at,the,specified,port,p,default,is,false,switch,this,flag,to,true,in,order,to,avoid,the,overhead,of,locating,an,existing,registry,when,you,always,intend,to,create,a,new,registry,in,any,case;public,void,set,always,create,boolean,always,create,this,always,create,always,create
RmiRegistryFactoryBean -> public void setAlwaysCreate(boolean alwaysCreate);1532091916;Set whether to always create the registry in-process,_not attempting to locate an existing registry at the specified port._<p>Default is "false". Switch this flag to "true" in order to avoid_the overhead of locating an existing registry when you always_intend to create a new registry in any case.;public void setAlwaysCreate(boolean alwaysCreate) {_		this.alwaysCreate = alwaysCreate__	};set,whether,to,always,create,the,registry,in,process,not,attempting,to,locate,an,existing,registry,at,the,specified,port,p,default,is,false,switch,this,flag,to,true,in,order,to,avoid,the,overhead,of,locating,an,existing,registry,when,you,always,intend,to,create,a,new,registry,in,any,case;public,void,set,always,create,boolean,always,create,this,always,create,always,create
RmiRegistryFactoryBean -> public int getPort();1328020251;Return the port of the registry for the exported RMI service.;public int getPort() {_		return this.port__	};return,the,port,of,the,registry,for,the,exported,rmi,service;public,int,get,port,return,this,port
RmiRegistryFactoryBean -> public int getPort();1356735495;Return the port of the registry for the exported RMI service.;public int getPort() {_		return this.port__	};return,the,port,of,the,registry,for,the,exported,rmi,service;public,int,get,port,return,this,port
RmiRegistryFactoryBean -> public int getPort();1357119239;Return the port of the registry for the exported RMI service.;public int getPort() {_		return this.port__	};return,the,port,of,the,registry,for,the,exported,rmi,service;public,int,get,port,return,this,port
RmiRegistryFactoryBean -> public int getPort();1368482696;Return the port of the registry for the exported RMI service.;public int getPort() {_		return this.port__	};return,the,port,of,the,registry,for,the,exported,rmi,service;public,int,get,port,return,this,port
RmiRegistryFactoryBean -> public int getPort();1372363092;Return the port of the registry for the exported RMI service.;public int getPort() {_		return this.port__	};return,the,port,of,the,registry,for,the,exported,rmi,service;public,int,get,port,return,this,port
RmiRegistryFactoryBean -> public int getPort();1495868221;Return the port of the registry for the exported RMI service.;public int getPort() {_		return this.port__	};return,the,port,of,the,registry,for,the,exported,rmi,service;public,int,get,port,return,this,port
RmiRegistryFactoryBean -> public int getPort();1532091916;Return the port of the registry for the exported RMI service.;public int getPort() {_		return this.port__	};return,the,port,of,the,registry,for,the,exported,rmi,service;public,int,get,port,return,this,port
RmiRegistryFactoryBean -> protected Registry getRegistry(String registryHost, int registryPort, 			RMIClientSocketFactory clientSocketFactory, RMIServerSocketFactory serverSocketFactory) 			throws RemoteException;1328020251;Locate or create the RMI registry._@param registryHost the registry host to use (if this is specified,_no implicit creation of a RMI registry will happen)_@param registryPort the registry port to use_@param clientSocketFactory the RMI client socket factory for the registry (if any)_@param serverSocketFactory the RMI server socket factory for the registry (if any)_@return the RMI registry_@throws java.rmi.RemoteException if the registry couldn't be located or created;protected Registry getRegistry(String registryHost, int registryPort,_			RMIClientSocketFactory clientSocketFactory, RMIServerSocketFactory serverSocketFactory)_			throws RemoteException {__		if (registryHost != null) {_			_			if (logger.isInfoEnabled()) {_				logger.info("Looking for RMI registry at port '" + registryPort + "' of host [" + registryHost + "]")__			}_			Registry reg = LocateRegistry.getRegistry(registryHost, registryPort, clientSocketFactory)__			testRegistry(reg)__			return reg__		}__		else {_			return getRegistry(registryPort, clientSocketFactory, serverSocketFactory)__		}_	};locate,or,create,the,rmi,registry,param,registry,host,the,registry,host,to,use,if,this,is,specified,no,implicit,creation,of,a,rmi,registry,will,happen,param,registry,port,the,registry,port,to,use,param,client,socket,factory,the,rmi,client,socket,factory,for,the,registry,if,any,param,server,socket,factory,the,rmi,server,socket,factory,for,the,registry,if,any,return,the,rmi,registry,throws,java,rmi,remote,exception,if,the,registry,couldn,t,be,located,or,created;protected,registry,get,registry,string,registry,host,int,registry,port,rmiclient,socket,factory,client,socket,factory,rmiserver,socket,factory,server,socket,factory,throws,remote,exception,if,registry,host,null,if,logger,is,info,enabled,logger,info,looking,for,rmi,registry,at,port,registry,port,of,host,registry,host,registry,reg,locate,registry,get,registry,registry,host,registry,port,client,socket,factory,test,registry,reg,return,reg,else,return,get,registry,registry,port,client,socket,factory,server,socket,factory
RmiRegistryFactoryBean -> protected Registry getRegistry(String registryHost, int registryPort, 			RMIClientSocketFactory clientSocketFactory, RMIServerSocketFactory serverSocketFactory) 			throws RemoteException;1356735495;Locate or create the RMI registry._@param registryHost the registry host to use (if this is specified,_no implicit creation of a RMI registry will happen)_@param registryPort the registry port to use_@param clientSocketFactory the RMI client socket factory for the registry (if any)_@param serverSocketFactory the RMI server socket factory for the registry (if any)_@return the RMI registry_@throws java.rmi.RemoteException if the registry couldn't be located or created;protected Registry getRegistry(String registryHost, int registryPort,_			RMIClientSocketFactory clientSocketFactory, RMIServerSocketFactory serverSocketFactory)_			throws RemoteException {__		if (registryHost != null) {_			_			if (logger.isInfoEnabled()) {_				logger.info("Looking for RMI registry at port '" + registryPort + "' of host [" + registryHost + "]")__			}_			Registry reg = LocateRegistry.getRegistry(registryHost, registryPort, clientSocketFactory)__			testRegistry(reg)__			return reg__		}__		else {_			return getRegistry(registryPort, clientSocketFactory, serverSocketFactory)__		}_	};locate,or,create,the,rmi,registry,param,registry,host,the,registry,host,to,use,if,this,is,specified,no,implicit,creation,of,a,rmi,registry,will,happen,param,registry,port,the,registry,port,to,use,param,client,socket,factory,the,rmi,client,socket,factory,for,the,registry,if,any,param,server,socket,factory,the,rmi,server,socket,factory,for,the,registry,if,any,return,the,rmi,registry,throws,java,rmi,remote,exception,if,the,registry,couldn,t,be,located,or,created;protected,registry,get,registry,string,registry,host,int,registry,port,rmiclient,socket,factory,client,socket,factory,rmiserver,socket,factory,server,socket,factory,throws,remote,exception,if,registry,host,null,if,logger,is,info,enabled,logger,info,looking,for,rmi,registry,at,port,registry,port,of,host,registry,host,registry,reg,locate,registry,get,registry,registry,host,registry,port,client,socket,factory,test,registry,reg,return,reg,else,return,get,registry,registry,port,client,socket,factory,server,socket,factory
RmiRegistryFactoryBean -> protected Registry getRegistry(String registryHost, int registryPort, 			RMIClientSocketFactory clientSocketFactory, RMIServerSocketFactory serverSocketFactory) 			throws RemoteException;1357119239;Locate or create the RMI registry._@param registryHost the registry host to use (if this is specified,_no implicit creation of a RMI registry will happen)_@param registryPort the registry port to use_@param clientSocketFactory the RMI client socket factory for the registry (if any)_@param serverSocketFactory the RMI server socket factory for the registry (if any)_@return the RMI registry_@throws java.rmi.RemoteException if the registry couldn't be located or created;protected Registry getRegistry(String registryHost, int registryPort,_			RMIClientSocketFactory clientSocketFactory, RMIServerSocketFactory serverSocketFactory)_			throws RemoteException {__		if (registryHost != null) {_			_			if (logger.isInfoEnabled()) {_				logger.info("Looking for RMI registry at port '" + registryPort + "' of host [" + registryHost + "]")__			}_			Registry reg = LocateRegistry.getRegistry(registryHost, registryPort, clientSocketFactory)__			testRegistry(reg)__			return reg__		}__		else {_			return getRegistry(registryPort, clientSocketFactory, serverSocketFactory)__		}_	};locate,or,create,the,rmi,registry,param,registry,host,the,registry,host,to,use,if,this,is,specified,no,implicit,creation,of,a,rmi,registry,will,happen,param,registry,port,the,registry,port,to,use,param,client,socket,factory,the,rmi,client,socket,factory,for,the,registry,if,any,param,server,socket,factory,the,rmi,server,socket,factory,for,the,registry,if,any,return,the,rmi,registry,throws,java,rmi,remote,exception,if,the,registry,couldn,t,be,located,or,created;protected,registry,get,registry,string,registry,host,int,registry,port,rmiclient,socket,factory,client,socket,factory,rmiserver,socket,factory,server,socket,factory,throws,remote,exception,if,registry,host,null,if,logger,is,info,enabled,logger,info,looking,for,rmi,registry,at,port,registry,port,of,host,registry,host,registry,reg,locate,registry,get,registry,registry,host,registry,port,client,socket,factory,test,registry,reg,return,reg,else,return,get,registry,registry,port,client,socket,factory,server,socket,factory
RmiRegistryFactoryBean -> protected Registry getRegistry(String registryHost, int registryPort, 			RMIClientSocketFactory clientSocketFactory, RMIServerSocketFactory serverSocketFactory) 			throws RemoteException;1368482696;Locate or create the RMI registry._@param registryHost the registry host to use (if this is specified,_no implicit creation of a RMI registry will happen)_@param registryPort the registry port to use_@param clientSocketFactory the RMI client socket factory for the registry (if any)_@param serverSocketFactory the RMI server socket factory for the registry (if any)_@return the RMI registry_@throws java.rmi.RemoteException if the registry couldn't be located or created;protected Registry getRegistry(String registryHost, int registryPort,_			RMIClientSocketFactory clientSocketFactory, RMIServerSocketFactory serverSocketFactory)_			throws RemoteException {__		if (registryHost != null) {_			_			if (logger.isInfoEnabled()) {_				logger.info("Looking for RMI registry at port '" + registryPort + "' of host [" + registryHost + "]")__			}_			Registry reg = LocateRegistry.getRegistry(registryHost, registryPort, clientSocketFactory)__			testRegistry(reg)__			return reg__		}__		else {_			return getRegistry(registryPort, clientSocketFactory, serverSocketFactory)__		}_	};locate,or,create,the,rmi,registry,param,registry,host,the,registry,host,to,use,if,this,is,specified,no,implicit,creation,of,a,rmi,registry,will,happen,param,registry,port,the,registry,port,to,use,param,client,socket,factory,the,rmi,client,socket,factory,for,the,registry,if,any,param,server,socket,factory,the,rmi,server,socket,factory,for,the,registry,if,any,return,the,rmi,registry,throws,java,rmi,remote,exception,if,the,registry,couldn,t,be,located,or,created;protected,registry,get,registry,string,registry,host,int,registry,port,rmiclient,socket,factory,client,socket,factory,rmiserver,socket,factory,server,socket,factory,throws,remote,exception,if,registry,host,null,if,logger,is,info,enabled,logger,info,looking,for,rmi,registry,at,port,registry,port,of,host,registry,host,registry,reg,locate,registry,get,registry,registry,host,registry,port,client,socket,factory,test,registry,reg,return,reg,else,return,get,registry,registry,port,client,socket,factory,server,socket,factory
RmiRegistryFactoryBean -> protected Registry getRegistry(String registryHost, int registryPort, 			RMIClientSocketFactory clientSocketFactory, RMIServerSocketFactory serverSocketFactory) 			throws RemoteException;1372363092;Locate or create the RMI registry._@param registryHost the registry host to use (if this is specified,_no implicit creation of a RMI registry will happen)_@param registryPort the registry port to use_@param clientSocketFactory the RMI client socket factory for the registry (if any)_@param serverSocketFactory the RMI server socket factory for the registry (if any)_@return the RMI registry_@throws java.rmi.RemoteException if the registry couldn't be located or created;protected Registry getRegistry(String registryHost, int registryPort,_			RMIClientSocketFactory clientSocketFactory, RMIServerSocketFactory serverSocketFactory)_			throws RemoteException {__		if (registryHost != null) {_			_			if (logger.isInfoEnabled()) {_				logger.info("Looking for RMI registry at port '" + registryPort + "' of host [" + registryHost + "]")__			}_			Registry reg = LocateRegistry.getRegistry(registryHost, registryPort, clientSocketFactory)__			testRegistry(reg)__			return reg__		}__		else {_			return getRegistry(registryPort, clientSocketFactory, serverSocketFactory)__		}_	};locate,or,create,the,rmi,registry,param,registry,host,the,registry,host,to,use,if,this,is,specified,no,implicit,creation,of,a,rmi,registry,will,happen,param,registry,port,the,registry,port,to,use,param,client,socket,factory,the,rmi,client,socket,factory,for,the,registry,if,any,param,server,socket,factory,the,rmi,server,socket,factory,for,the,registry,if,any,return,the,rmi,registry,throws,java,rmi,remote,exception,if,the,registry,couldn,t,be,located,or,created;protected,registry,get,registry,string,registry,host,int,registry,port,rmiclient,socket,factory,client,socket,factory,rmiserver,socket,factory,server,socket,factory,throws,remote,exception,if,registry,host,null,if,logger,is,info,enabled,logger,info,looking,for,rmi,registry,at,port,registry,port,of,host,registry,host,registry,reg,locate,registry,get,registry,registry,host,registry,port,client,socket,factory,test,registry,reg,return,reg,else,return,get,registry,registry,port,client,socket,factory,server,socket,factory
RmiRegistryFactoryBean -> @Override 	public void destroy() throws RemoteException;1356735495;Unexport the RMI registry on bean factory shutdown,_provided that this bean actually created a registry.;@Override_	public void destroy() throws RemoteException {_		if (this.created) {_			logger.info("Unexporting RMI registry")__			UnicastRemoteObject.unexportObject(this.registry, true)__		}_	};unexport,the,rmi,registry,on,bean,factory,shutdown,provided,that,this,bean,actually,created,a,registry;override,public,void,destroy,throws,remote,exception,if,this,created,logger,info,unexporting,rmi,registry,unicast,remote,object,unexport,object,this,registry,true
RmiRegistryFactoryBean -> @Override 	public void destroy() throws RemoteException;1368482696;Unexport the RMI registry on bean factory shutdown,_provided that this bean actually created a registry.;@Override_	public void destroy() throws RemoteException {_		if (this.created) {_			logger.info("Unexporting RMI registry")__			UnicastRemoteObject.unexportObject(this.registry, true)__		}_	};unexport,the,rmi,registry,on,bean,factory,shutdown,provided,that,this,bean,actually,created,a,registry;override,public,void,destroy,throws,remote,exception,if,this,created,logger,info,unexporting,rmi,registry,unicast,remote,object,unexport,object,this,registry,true
RmiRegistryFactoryBean -> @Override 	public void destroy() throws RemoteException;1372363092;Unexport the RMI registry on bean factory shutdown,_provided that this bean actually created a registry.;@Override_	public void destroy() throws RemoteException {_		if (this.created) {_			logger.info("Unexporting RMI registry")__			UnicastRemoteObject.unexportObject(this.registry, true)__		}_	};unexport,the,rmi,registry,on,bean,factory,shutdown,provided,that,this,bean,actually,created,a,registry;override,public,void,destroy,throws,remote,exception,if,this,created,logger,info,unexporting,rmi,registry,unicast,remote,object,unexport,object,this,registry,true
RmiRegistryFactoryBean -> @Override 	public void destroy() throws RemoteException;1495868221;Unexport the RMI registry on bean factory shutdown,_provided that this bean actually created a registry.;@Override_	public void destroy() throws RemoteException {_		if (this.created) {_			logger.info("Unexporting RMI registry")__			UnicastRemoteObject.unexportObject(this.registry, true)__		}_	};unexport,the,rmi,registry,on,bean,factory,shutdown,provided,that,this,bean,actually,created,a,registry;override,public,void,destroy,throws,remote,exception,if,this,created,logger,info,unexporting,rmi,registry,unicast,remote,object,unexport,object,this,registry,true
RmiRegistryFactoryBean -> @Override 	public void destroy() throws RemoteException;1532091916;Unexport the RMI registry on bean factory shutdown,_provided that this bean actually created a registry.;@Override_	public void destroy() throws RemoteException {_		if (this.created) {_			logger.debug("Unexporting RMI registry")__			UnicastRemoteObject.unexportObject(this.registry, true)__		}_	};unexport,the,rmi,registry,on,bean,factory,shutdown,provided,that,this,bean,actually,created,a,registry;override,public,void,destroy,throws,remote,exception,if,this,created,logger,debug,unexporting,rmi,registry,unicast,remote,object,unexport,object,this,registry,true
RmiRegistryFactoryBean -> public void setServerSocketFactory(RMIServerSocketFactory serverSocketFactory);1328020251;Set a custom RMI server socket factory to use for the RMI registry._<p>Only needs to be specified when the client socket factory does not_implement <code>java.rmi.server.RMIServerSocketFactory</code> already._@see #setClientSocketFactory_@see java.rmi.server.RMIClientSocketFactory_@see java.rmi.server.RMIServerSocketFactory_@see java.rmi.registry.LocateRegistry#createRegistry(int, RMIClientSocketFactory, java.rmi.server.RMIServerSocketFactory);public void setServerSocketFactory(RMIServerSocketFactory serverSocketFactory) {_		this.serverSocketFactory = serverSocketFactory__	};set,a,custom,rmi,server,socket,factory,to,use,for,the,rmi,registry,p,only,needs,to,be,specified,when,the,client,socket,factory,does,not,implement,code,java,rmi,server,rmiserver,socket,factory,code,already,see,set,client,socket,factory,see,java,rmi,server,rmiclient,socket,factory,see,java,rmi,server,rmiserver,socket,factory,see,java,rmi,registry,locate,registry,create,registry,int,rmiclient,socket,factory,java,rmi,server,rmiserver,socket,factory;public,void,set,server,socket,factory,rmiserver,socket,factory,server,socket,factory,this,server,socket,factory,server,socket,factory
RmiRegistryFactoryBean -> public void setServerSocketFactory(RMIServerSocketFactory serverSocketFactory);1356735495;Set a custom RMI server socket factory to use for the RMI registry._<p>Only needs to be specified when the client socket factory does not_implement {@code java.rmi.server.RMIServerSocketFactory} already._@see #setClientSocketFactory_@see java.rmi.server.RMIClientSocketFactory_@see java.rmi.server.RMIServerSocketFactory_@see java.rmi.registry.LocateRegistry#createRegistry(int, RMIClientSocketFactory, java.rmi.server.RMIServerSocketFactory);public void setServerSocketFactory(RMIServerSocketFactory serverSocketFactory) {_		this.serverSocketFactory = serverSocketFactory__	};set,a,custom,rmi,server,socket,factory,to,use,for,the,rmi,registry,p,only,needs,to,be,specified,when,the,client,socket,factory,does,not,implement,code,java,rmi,server,rmiserver,socket,factory,already,see,set,client,socket,factory,see,java,rmi,server,rmiclient,socket,factory,see,java,rmi,server,rmiserver,socket,factory,see,java,rmi,registry,locate,registry,create,registry,int,rmiclient,socket,factory,java,rmi,server,rmiserver,socket,factory;public,void,set,server,socket,factory,rmiserver,socket,factory,server,socket,factory,this,server,socket,factory,server,socket,factory
RmiRegistryFactoryBean -> public void setServerSocketFactory(RMIServerSocketFactory serverSocketFactory);1357119239;Set a custom RMI server socket factory to use for the RMI registry._<p>Only needs to be specified when the client socket factory does not_implement {@code java.rmi.server.RMIServerSocketFactory} already._@see #setClientSocketFactory_@see java.rmi.server.RMIClientSocketFactory_@see java.rmi.server.RMIServerSocketFactory_@see java.rmi.registry.LocateRegistry#createRegistry(int, RMIClientSocketFactory, java.rmi.server.RMIServerSocketFactory);public void setServerSocketFactory(RMIServerSocketFactory serverSocketFactory) {_		this.serverSocketFactory = serverSocketFactory__	};set,a,custom,rmi,server,socket,factory,to,use,for,the,rmi,registry,p,only,needs,to,be,specified,when,the,client,socket,factory,does,not,implement,code,java,rmi,server,rmiserver,socket,factory,already,see,set,client,socket,factory,see,java,rmi,server,rmiclient,socket,factory,see,java,rmi,server,rmiserver,socket,factory,see,java,rmi,registry,locate,registry,create,registry,int,rmiclient,socket,factory,java,rmi,server,rmiserver,socket,factory;public,void,set,server,socket,factory,rmiserver,socket,factory,server,socket,factory,this,server,socket,factory,server,socket,factory
RmiRegistryFactoryBean -> public void setServerSocketFactory(RMIServerSocketFactory serverSocketFactory);1368482696;Set a custom RMI server socket factory to use for the RMI registry._<p>Only needs to be specified when the client socket factory does not_implement {@code java.rmi.server.RMIServerSocketFactory} already._@see #setClientSocketFactory_@see java.rmi.server.RMIClientSocketFactory_@see java.rmi.server.RMIServerSocketFactory_@see java.rmi.registry.LocateRegistry#createRegistry(int, RMIClientSocketFactory, java.rmi.server.RMIServerSocketFactory);public void setServerSocketFactory(RMIServerSocketFactory serverSocketFactory) {_		this.serverSocketFactory = serverSocketFactory__	};set,a,custom,rmi,server,socket,factory,to,use,for,the,rmi,registry,p,only,needs,to,be,specified,when,the,client,socket,factory,does,not,implement,code,java,rmi,server,rmiserver,socket,factory,already,see,set,client,socket,factory,see,java,rmi,server,rmiclient,socket,factory,see,java,rmi,server,rmiserver,socket,factory,see,java,rmi,registry,locate,registry,create,registry,int,rmiclient,socket,factory,java,rmi,server,rmiserver,socket,factory;public,void,set,server,socket,factory,rmiserver,socket,factory,server,socket,factory,this,server,socket,factory,server,socket,factory
RmiRegistryFactoryBean -> public void setServerSocketFactory(RMIServerSocketFactory serverSocketFactory);1372363092;Set a custom RMI server socket factory to use for the RMI registry._<p>Only needs to be specified when the client socket factory does not_implement {@code java.rmi.server.RMIServerSocketFactory} already._@see #setClientSocketFactory_@see java.rmi.server.RMIClientSocketFactory_@see java.rmi.server.RMIServerSocketFactory_@see java.rmi.registry.LocateRegistry#createRegistry(int, RMIClientSocketFactory, java.rmi.server.RMIServerSocketFactory);public void setServerSocketFactory(RMIServerSocketFactory serverSocketFactory) {_		this.serverSocketFactory = serverSocketFactory__	};set,a,custom,rmi,server,socket,factory,to,use,for,the,rmi,registry,p,only,needs,to,be,specified,when,the,client,socket,factory,does,not,implement,code,java,rmi,server,rmiserver,socket,factory,already,see,set,client,socket,factory,see,java,rmi,server,rmiclient,socket,factory,see,java,rmi,server,rmiserver,socket,factory,see,java,rmi,registry,locate,registry,create,registry,int,rmiclient,socket,factory,java,rmi,server,rmiserver,socket,factory;public,void,set,server,socket,factory,rmiserver,socket,factory,server,socket,factory,this,server,socket,factory,server,socket,factory
RmiRegistryFactoryBean -> public void setServerSocketFactory(RMIServerSocketFactory serverSocketFactory);1495868221;Set a custom RMI server socket factory to use for the RMI registry._<p>Only needs to be specified when the client socket factory does not_implement {@code java.rmi.server.RMIServerSocketFactory} already._@see #setClientSocketFactory_@see java.rmi.server.RMIClientSocketFactory_@see java.rmi.server.RMIServerSocketFactory_@see java.rmi.registry.LocateRegistry#createRegistry(int, RMIClientSocketFactory, java.rmi.server.RMIServerSocketFactory);public void setServerSocketFactory(RMIServerSocketFactory serverSocketFactory) {_		this.serverSocketFactory = serverSocketFactory__	};set,a,custom,rmi,server,socket,factory,to,use,for,the,rmi,registry,p,only,needs,to,be,specified,when,the,client,socket,factory,does,not,implement,code,java,rmi,server,rmiserver,socket,factory,already,see,set,client,socket,factory,see,java,rmi,server,rmiclient,socket,factory,see,java,rmi,server,rmiserver,socket,factory,see,java,rmi,registry,locate,registry,create,registry,int,rmiclient,socket,factory,java,rmi,server,rmiserver,socket,factory;public,void,set,server,socket,factory,rmiserver,socket,factory,server,socket,factory,this,server,socket,factory,server,socket,factory
RmiRegistryFactoryBean -> public void setServerSocketFactory(RMIServerSocketFactory serverSocketFactory);1532091916;Set a custom RMI server socket factory to use for the RMI registry._<p>Only needs to be specified when the client socket factory does not_implement {@code java.rmi.server.RMIServerSocketFactory} already._@see #setClientSocketFactory_@see java.rmi.server.RMIClientSocketFactory_@see java.rmi.server.RMIServerSocketFactory_@see java.rmi.registry.LocateRegistry#createRegistry(int, RMIClientSocketFactory, java.rmi.server.RMIServerSocketFactory);public void setServerSocketFactory(RMIServerSocketFactory serverSocketFactory) {_		this.serverSocketFactory = serverSocketFactory__	};set,a,custom,rmi,server,socket,factory,to,use,for,the,rmi,registry,p,only,needs,to,be,specified,when,the,client,socket,factory,does,not,implement,code,java,rmi,server,rmiserver,socket,factory,already,see,set,client,socket,factory,see,java,rmi,server,rmiclient,socket,factory,see,java,rmi,server,rmiserver,socket,factory,see,java,rmi,registry,locate,registry,create,registry,int,rmiclient,socket,factory,java,rmi,server,rmiserver,socket,factory;public,void,set,server,socket,factory,rmiserver,socket,factory,server,socket,factory,this,server,socket,factory,server,socket,factory
RmiRegistryFactoryBean -> public void setPort(int port);1328020251;Set the port of the registry for the exported RMI service,_i.e. <code>rmi://host:PORT/name</code>_<p>Default is <code>Registry.REGISTRY_PORT</code> (1099).;public void setPort(int port) {_		this.port = port__	};set,the,port,of,the,registry,for,the,exported,rmi,service,i,e,code,rmi,host,port,name,code,p,default,is,code,registry,code,1099;public,void,set,port,int,port,this,port,port
RmiRegistryFactoryBean -> public void setPort(int port);1356735495;Set the port of the registry for the exported RMI service,_i.e. {@code rmi://host:PORT/name}_<p>Default is {@code Registry.REGISTRY_PORT} (1099).;public void setPort(int port) {_		this.port = port__	};set,the,port,of,the,registry,for,the,exported,rmi,service,i,e,code,rmi,host,port,name,p,default,is,code,registry,1099;public,void,set,port,int,port,this,port,port
RmiRegistryFactoryBean -> public void setPort(int port);1357119239;Set the port of the registry for the exported RMI service,_i.e. {@code rmi://host:PORT/name}_<p>Default is {@code Registry.REGISTRY_PORT} (1099).;public void setPort(int port) {_		this.port = port__	};set,the,port,of,the,registry,for,the,exported,rmi,service,i,e,code,rmi,host,port,name,p,default,is,code,registry,1099;public,void,set,port,int,port,this,port,port
RmiRegistryFactoryBean -> public void setPort(int port);1368482696;Set the port of the registry for the exported RMI service,_i.e. {@code rmi://host:PORT/name}_<p>Default is {@code Registry.REGISTRY_PORT} (1099).;public void setPort(int port) {_		this.port = port__	};set,the,port,of,the,registry,for,the,exported,rmi,service,i,e,code,rmi,host,port,name,p,default,is,code,registry,1099;public,void,set,port,int,port,this,port,port
RmiRegistryFactoryBean -> public void setPort(int port);1372363092;Set the port of the registry for the exported RMI service,_i.e. {@code rmi://host:PORT/name}_<p>Default is {@code Registry.REGISTRY_PORT} (1099).;public void setPort(int port) {_		this.port = port__	};set,the,port,of,the,registry,for,the,exported,rmi,service,i,e,code,rmi,host,port,name,p,default,is,code,registry,1099;public,void,set,port,int,port,this,port,port
RmiRegistryFactoryBean -> public void setPort(int port);1495868221;Set the port of the registry for the exported RMI service,_i.e. {@code rmi://host:PORT/name}_<p>Default is {@code Registry.REGISTRY_PORT} (1099).;public void setPort(int port) {_		this.port = port__	};set,the,port,of,the,registry,for,the,exported,rmi,service,i,e,code,rmi,host,port,name,p,default,is,code,registry,1099;public,void,set,port,int,port,this,port,port
RmiRegistryFactoryBean -> public void setPort(int port);1532091916;Set the port of the registry for the exported RMI service,_i.e. {@code rmi://host:PORT/name}_<p>Default is {@code Registry.REGISTRY_PORT} (1099).;public void setPort(int port) {_		this.port = port__	};set,the,port,of,the,registry,for,the,exported,rmi,service,i,e,code,rmi,host,port,name,p,default,is,code,registry,1099;public,void,set,port,int,port,this,port,port
RmiRegistryFactoryBean -> protected Registry getRegistry( 			int registryPort, RMIClientSocketFactory clientSocketFactory, RMIServerSocketFactory serverSocketFactory) 			throws RemoteException;1328020251;Locate or create the RMI registry._@param registryPort the registry port to use_@param clientSocketFactory the RMI client socket factory for the registry (if any)_@param serverSocketFactory the RMI server socket factory for the registry (if any)_@return the RMI registry_@throws RemoteException if the registry couldn't be located or created;protected Registry getRegistry(_			int registryPort, RMIClientSocketFactory clientSocketFactory, RMIServerSocketFactory serverSocketFactory)_			throws RemoteException {__		if (clientSocketFactory != null) {_			if (this.alwaysCreate) {_				logger.info("Creating new RMI registry")__				this.created = true__				return LocateRegistry.createRegistry(registryPort, clientSocketFactory, serverSocketFactory)__			}_			if (logger.isInfoEnabled()) {_				logger.info("Looking for RMI registry at port '" + registryPort + "', using custom socket factory")__			}_			synchronized (LocateRegistry.class) {_				try {_					_					Registry reg = LocateRegistry.getRegistry(null, registryPort, clientSocketFactory)__					testRegistry(reg)__					return reg__				}_				catch (RemoteException ex) {_					logger.debug("RMI registry access threw exception", ex)__					logger.info("Could not detect RMI registry - creating new one")__					_					this.created = true__					return LocateRegistry.createRegistry(registryPort, clientSocketFactory, serverSocketFactory)__				}_			}_		}__		else {_			return getRegistry(registryPort)__		}_	};locate,or,create,the,rmi,registry,param,registry,port,the,registry,port,to,use,param,client,socket,factory,the,rmi,client,socket,factory,for,the,registry,if,any,param,server,socket,factory,the,rmi,server,socket,factory,for,the,registry,if,any,return,the,rmi,registry,throws,remote,exception,if,the,registry,couldn,t,be,located,or,created;protected,registry,get,registry,int,registry,port,rmiclient,socket,factory,client,socket,factory,rmiserver,socket,factory,server,socket,factory,throws,remote,exception,if,client,socket,factory,null,if,this,always,create,logger,info,creating,new,rmi,registry,this,created,true,return,locate,registry,create,registry,registry,port,client,socket,factory,server,socket,factory,if,logger,is,info,enabled,logger,info,looking,for,rmi,registry,at,port,registry,port,using,custom,socket,factory,synchronized,locate,registry,class,try,registry,reg,locate,registry,get,registry,null,registry,port,client,socket,factory,test,registry,reg,return,reg,catch,remote,exception,ex,logger,debug,rmi,registry,access,threw,exception,ex,logger,info,could,not,detect,rmi,registry,creating,new,one,this,created,true,return,locate,registry,create,registry,registry,port,client,socket,factory,server,socket,factory,else,return,get,registry,registry,port
RmiRegistryFactoryBean -> protected Registry getRegistry( 			int registryPort, RMIClientSocketFactory clientSocketFactory, RMIServerSocketFactory serverSocketFactory) 			throws RemoteException;1356735495;Locate or create the RMI registry._@param registryPort the registry port to use_@param clientSocketFactory the RMI client socket factory for the registry (if any)_@param serverSocketFactory the RMI server socket factory for the registry (if any)_@return the RMI registry_@throws RemoteException if the registry couldn't be located or created;protected Registry getRegistry(_			int registryPort, RMIClientSocketFactory clientSocketFactory, RMIServerSocketFactory serverSocketFactory)_			throws RemoteException {__		if (clientSocketFactory != null) {_			if (this.alwaysCreate) {_				logger.info("Creating new RMI registry")__				this.created = true__				return LocateRegistry.createRegistry(registryPort, clientSocketFactory, serverSocketFactory)__			}_			if (logger.isInfoEnabled()) {_				logger.info("Looking for RMI registry at port '" + registryPort + "', using custom socket factory")__			}_			synchronized (LocateRegistry.class) {_				try {_					_					Registry reg = LocateRegistry.getRegistry(null, registryPort, clientSocketFactory)__					testRegistry(reg)__					return reg__				}_				catch (RemoteException ex) {_					logger.debug("RMI registry access threw exception", ex)__					logger.info("Could not detect RMI registry - creating new one")__					_					this.created = true__					return LocateRegistry.createRegistry(registryPort, clientSocketFactory, serverSocketFactory)__				}_			}_		}__		else {_			return getRegistry(registryPort)__		}_	};locate,or,create,the,rmi,registry,param,registry,port,the,registry,port,to,use,param,client,socket,factory,the,rmi,client,socket,factory,for,the,registry,if,any,param,server,socket,factory,the,rmi,server,socket,factory,for,the,registry,if,any,return,the,rmi,registry,throws,remote,exception,if,the,registry,couldn,t,be,located,or,created;protected,registry,get,registry,int,registry,port,rmiclient,socket,factory,client,socket,factory,rmiserver,socket,factory,server,socket,factory,throws,remote,exception,if,client,socket,factory,null,if,this,always,create,logger,info,creating,new,rmi,registry,this,created,true,return,locate,registry,create,registry,registry,port,client,socket,factory,server,socket,factory,if,logger,is,info,enabled,logger,info,looking,for,rmi,registry,at,port,registry,port,using,custom,socket,factory,synchronized,locate,registry,class,try,registry,reg,locate,registry,get,registry,null,registry,port,client,socket,factory,test,registry,reg,return,reg,catch,remote,exception,ex,logger,debug,rmi,registry,access,threw,exception,ex,logger,info,could,not,detect,rmi,registry,creating,new,one,this,created,true,return,locate,registry,create,registry,registry,port,client,socket,factory,server,socket,factory,else,return,get,registry,registry,port
RmiRegistryFactoryBean -> protected Registry getRegistry( 			int registryPort, RMIClientSocketFactory clientSocketFactory, RMIServerSocketFactory serverSocketFactory) 			throws RemoteException;1357119239;Locate or create the RMI registry._@param registryPort the registry port to use_@param clientSocketFactory the RMI client socket factory for the registry (if any)_@param serverSocketFactory the RMI server socket factory for the registry (if any)_@return the RMI registry_@throws RemoteException if the registry couldn't be located or created;protected Registry getRegistry(_			int registryPort, RMIClientSocketFactory clientSocketFactory, RMIServerSocketFactory serverSocketFactory)_			throws RemoteException {__		if (clientSocketFactory != null) {_			if (this.alwaysCreate) {_				logger.info("Creating new RMI registry")__				this.created = true__				return LocateRegistry.createRegistry(registryPort, clientSocketFactory, serverSocketFactory)__			}_			if (logger.isInfoEnabled()) {_				logger.info("Looking for RMI registry at port '" + registryPort + "', using custom socket factory")__			}_			synchronized (LocateRegistry.class) {_				try {_					_					Registry reg = LocateRegistry.getRegistry(null, registryPort, clientSocketFactory)__					testRegistry(reg)__					return reg__				}_				catch (RemoteException ex) {_					logger.debug("RMI registry access threw exception", ex)__					logger.info("Could not detect RMI registry - creating new one")__					_					this.created = true__					return LocateRegistry.createRegistry(registryPort, clientSocketFactory, serverSocketFactory)__				}_			}_		}__		else {_			return getRegistry(registryPort)__		}_	};locate,or,create,the,rmi,registry,param,registry,port,the,registry,port,to,use,param,client,socket,factory,the,rmi,client,socket,factory,for,the,registry,if,any,param,server,socket,factory,the,rmi,server,socket,factory,for,the,registry,if,any,return,the,rmi,registry,throws,remote,exception,if,the,registry,couldn,t,be,located,or,created;protected,registry,get,registry,int,registry,port,rmiclient,socket,factory,client,socket,factory,rmiserver,socket,factory,server,socket,factory,throws,remote,exception,if,client,socket,factory,null,if,this,always,create,logger,info,creating,new,rmi,registry,this,created,true,return,locate,registry,create,registry,registry,port,client,socket,factory,server,socket,factory,if,logger,is,info,enabled,logger,info,looking,for,rmi,registry,at,port,registry,port,using,custom,socket,factory,synchronized,locate,registry,class,try,registry,reg,locate,registry,get,registry,null,registry,port,client,socket,factory,test,registry,reg,return,reg,catch,remote,exception,ex,logger,debug,rmi,registry,access,threw,exception,ex,logger,info,could,not,detect,rmi,registry,creating,new,one,this,created,true,return,locate,registry,create,registry,registry,port,client,socket,factory,server,socket,factory,else,return,get,registry,registry,port
RmiRegistryFactoryBean -> protected Registry getRegistry( 			int registryPort, RMIClientSocketFactory clientSocketFactory, RMIServerSocketFactory serverSocketFactory) 			throws RemoteException;1368482696;Locate or create the RMI registry._@param registryPort the registry port to use_@param clientSocketFactory the RMI client socket factory for the registry (if any)_@param serverSocketFactory the RMI server socket factory for the registry (if any)_@return the RMI registry_@throws RemoteException if the registry couldn't be located or created;protected Registry getRegistry(_			int registryPort, RMIClientSocketFactory clientSocketFactory, RMIServerSocketFactory serverSocketFactory)_			throws RemoteException {__		if (clientSocketFactory != null) {_			if (this.alwaysCreate) {_				logger.info("Creating new RMI registry")__				this.created = true__				return LocateRegistry.createRegistry(registryPort, clientSocketFactory, serverSocketFactory)__			}_			if (logger.isInfoEnabled()) {_				logger.info("Looking for RMI registry at port '" + registryPort + "', using custom socket factory")__			}_			synchronized (LocateRegistry.class) {_				try {_					_					Registry reg = LocateRegistry.getRegistry(null, registryPort, clientSocketFactory)__					testRegistry(reg)__					return reg__				}_				catch (RemoteException ex) {_					logger.debug("RMI registry access threw exception", ex)__					logger.info("Could not detect RMI registry - creating new one")__					_					this.created = true__					return LocateRegistry.createRegistry(registryPort, clientSocketFactory, serverSocketFactory)__				}_			}_		}__		else {_			return getRegistry(registryPort)__		}_	};locate,or,create,the,rmi,registry,param,registry,port,the,registry,port,to,use,param,client,socket,factory,the,rmi,client,socket,factory,for,the,registry,if,any,param,server,socket,factory,the,rmi,server,socket,factory,for,the,registry,if,any,return,the,rmi,registry,throws,remote,exception,if,the,registry,couldn,t,be,located,or,created;protected,registry,get,registry,int,registry,port,rmiclient,socket,factory,client,socket,factory,rmiserver,socket,factory,server,socket,factory,throws,remote,exception,if,client,socket,factory,null,if,this,always,create,logger,info,creating,new,rmi,registry,this,created,true,return,locate,registry,create,registry,registry,port,client,socket,factory,server,socket,factory,if,logger,is,info,enabled,logger,info,looking,for,rmi,registry,at,port,registry,port,using,custom,socket,factory,synchronized,locate,registry,class,try,registry,reg,locate,registry,get,registry,null,registry,port,client,socket,factory,test,registry,reg,return,reg,catch,remote,exception,ex,logger,debug,rmi,registry,access,threw,exception,ex,logger,info,could,not,detect,rmi,registry,creating,new,one,this,created,true,return,locate,registry,create,registry,registry,port,client,socket,factory,server,socket,factory,else,return,get,registry,registry,port
RmiRegistryFactoryBean -> protected Registry getRegistry( 			int registryPort, RMIClientSocketFactory clientSocketFactory, RMIServerSocketFactory serverSocketFactory) 			throws RemoteException;1372363092;Locate or create the RMI registry._@param registryPort the registry port to use_@param clientSocketFactory the RMI client socket factory for the registry (if any)_@param serverSocketFactory the RMI server socket factory for the registry (if any)_@return the RMI registry_@throws RemoteException if the registry couldn't be located or created;protected Registry getRegistry(_			int registryPort, RMIClientSocketFactory clientSocketFactory, RMIServerSocketFactory serverSocketFactory)_			throws RemoteException {__		if (clientSocketFactory != null) {_			if (this.alwaysCreate) {_				logger.info("Creating new RMI registry")__				this.created = true__				return LocateRegistry.createRegistry(registryPort, clientSocketFactory, serverSocketFactory)__			}_			if (logger.isInfoEnabled()) {_				logger.info("Looking for RMI registry at port '" + registryPort + "', using custom socket factory")__			}_			synchronized (LocateRegistry.class) {_				try {_					_					Registry reg = LocateRegistry.getRegistry(null, registryPort, clientSocketFactory)__					testRegistry(reg)__					return reg__				}_				catch (RemoteException ex) {_					logger.debug("RMI registry access threw exception", ex)__					logger.info("Could not detect RMI registry - creating new one")__					_					this.created = true__					return LocateRegistry.createRegistry(registryPort, clientSocketFactory, serverSocketFactory)__				}_			}_		}__		else {_			return getRegistry(registryPort)__		}_	};locate,or,create,the,rmi,registry,param,registry,port,the,registry,port,to,use,param,client,socket,factory,the,rmi,client,socket,factory,for,the,registry,if,any,param,server,socket,factory,the,rmi,server,socket,factory,for,the,registry,if,any,return,the,rmi,registry,throws,remote,exception,if,the,registry,couldn,t,be,located,or,created;protected,registry,get,registry,int,registry,port,rmiclient,socket,factory,client,socket,factory,rmiserver,socket,factory,server,socket,factory,throws,remote,exception,if,client,socket,factory,null,if,this,always,create,logger,info,creating,new,rmi,registry,this,created,true,return,locate,registry,create,registry,registry,port,client,socket,factory,server,socket,factory,if,logger,is,info,enabled,logger,info,looking,for,rmi,registry,at,port,registry,port,using,custom,socket,factory,synchronized,locate,registry,class,try,registry,reg,locate,registry,get,registry,null,registry,port,client,socket,factory,test,registry,reg,return,reg,catch,remote,exception,ex,logger,debug,rmi,registry,access,threw,exception,ex,logger,info,could,not,detect,rmi,registry,creating,new,one,this,created,true,return,locate,registry,create,registry,registry,port,client,socket,factory,server,socket,factory,else,return,get,registry,registry,port
RmiRegistryFactoryBean -> public void destroy() throws RemoteException;1328020251;Unexport the RMI registry on bean factory shutdown,_provided that this bean actually created a registry.;public void destroy() throws RemoteException {_		if (this.created) {_			logger.info("Unexporting RMI registry")__			UnicastRemoteObject.unexportObject(this.registry, true)__		}_	};unexport,the,rmi,registry,on,bean,factory,shutdown,provided,that,this,bean,actually,created,a,registry;public,void,destroy,throws,remote,exception,if,this,created,logger,info,unexporting,rmi,registry,unicast,remote,object,unexport,object,this,registry,true
RmiRegistryFactoryBean -> public void destroy() throws RemoteException;1357119239;Unexport the RMI registry on bean factory shutdown,_provided that this bean actually created a registry.;public void destroy() throws RemoteException {_		if (this.created) {_			logger.info("Unexporting RMI registry")__			UnicastRemoteObject.unexportObject(this.registry, true)__		}_	};unexport,the,rmi,registry,on,bean,factory,shutdown,provided,that,this,bean,actually,created,a,registry;public,void,destroy,throws,remote,exception,if,this,created,logger,info,unexporting,rmi,registry,unicast,remote,object,unexport,object,this,registry,true
RmiRegistryFactoryBean -> public void setHost(String host);1328020251;Set the host of the registry for the exported RMI service,_i.e. <code>rmi://HOST:port/name</code>_<p>Default is localhost.;public void setHost(String host) {_		this.host = host__	};set,the,host,of,the,registry,for,the,exported,rmi,service,i,e,code,rmi,host,port,name,code,p,default,is,localhost;public,void,set,host,string,host,this,host,host
RmiRegistryFactoryBean -> public void setHost(String host);1356735495;Set the host of the registry for the exported RMI service,_i.e. {@code rmi://HOST:port/name}_<p>Default is localhost.;public void setHost(String host) {_		this.host = host__	};set,the,host,of,the,registry,for,the,exported,rmi,service,i,e,code,rmi,host,port,name,p,default,is,localhost;public,void,set,host,string,host,this,host,host
RmiRegistryFactoryBean -> public void setHost(String host);1357119239;Set the host of the registry for the exported RMI service,_i.e. {@code rmi://HOST:port/name}_<p>Default is localhost.;public void setHost(String host) {_		this.host = host__	};set,the,host,of,the,registry,for,the,exported,rmi,service,i,e,code,rmi,host,port,name,p,default,is,localhost;public,void,set,host,string,host,this,host,host
RmiRegistryFactoryBean -> public void setHost(String host);1368482696;Set the host of the registry for the exported RMI service,_i.e. {@code rmi://HOST:port/name}_<p>Default is localhost.;public void setHost(String host) {_		this.host = host__	};set,the,host,of,the,registry,for,the,exported,rmi,service,i,e,code,rmi,host,port,name,p,default,is,localhost;public,void,set,host,string,host,this,host,host
RmiRegistryFactoryBean -> public void setHost(String host);1372363092;Set the host of the registry for the exported RMI service,_i.e. {@code rmi://HOST:port/name}_<p>Default is localhost.;public void setHost(String host) {_		this.host = host__	};set,the,host,of,the,registry,for,the,exported,rmi,service,i,e,code,rmi,host,port,name,p,default,is,localhost;public,void,set,host,string,host,this,host,host
RmiRegistryFactoryBean -> public void setHost(String host);1495868221;Set the host of the registry for the exported RMI service,_i.e. {@code rmi://HOST:port/name}_<p>Default is localhost.;public void setHost(String host) {_		this.host = host__	};set,the,host,of,the,registry,for,the,exported,rmi,service,i,e,code,rmi,host,port,name,p,default,is,localhost;public,void,set,host,string,host,this,host,host
RmiRegistryFactoryBean -> public void setHost(String host);1532091916;Set the host of the registry for the exported RMI service,_i.e. {@code rmi://HOST:port/name}_<p>Default is localhost.;public void setHost(String host) {_		this.host = host__	};set,the,host,of,the,registry,for,the,exported,rmi,service,i,e,code,rmi,host,port,name,p,default,is,localhost;public,void,set,host,string,host,this,host,host
RmiRegistryFactoryBean -> protected Registry getRegistry(int registryPort) throws RemoteException;1328020251;Locate or create the RMI registry._@param registryPort the registry port to use_@return the RMI registry_@throws RemoteException if the registry couldn't be located or created;protected Registry getRegistry(int registryPort) throws RemoteException {_		if (this.alwaysCreate) {_			logger.info("Creating new RMI registry")__			this.created = true__			return LocateRegistry.createRegistry(registryPort)__		}_		if (logger.isInfoEnabled()) {_			logger.info("Looking for RMI registry at port '" + registryPort + "'")__		}_		synchronized (LocateRegistry.class) {_			try {_				_				Registry reg = LocateRegistry.getRegistry(registryPort)__				testRegistry(reg)__				return reg__			}_			catch (RemoteException ex) {_				logger.debug("RMI registry access threw exception", ex)__				logger.info("Could not detect RMI registry - creating new one")__				_				this.created = true__				return LocateRegistry.createRegistry(registryPort)__			}_		}_	};locate,or,create,the,rmi,registry,param,registry,port,the,registry,port,to,use,return,the,rmi,registry,throws,remote,exception,if,the,registry,couldn,t,be,located,or,created;protected,registry,get,registry,int,registry,port,throws,remote,exception,if,this,always,create,logger,info,creating,new,rmi,registry,this,created,true,return,locate,registry,create,registry,registry,port,if,logger,is,info,enabled,logger,info,looking,for,rmi,registry,at,port,registry,port,synchronized,locate,registry,class,try,registry,reg,locate,registry,get,registry,registry,port,test,registry,reg,return,reg,catch,remote,exception,ex,logger,debug,rmi,registry,access,threw,exception,ex,logger,info,could,not,detect,rmi,registry,creating,new,one,this,created,true,return,locate,registry,create,registry,registry,port
RmiRegistryFactoryBean -> protected Registry getRegistry(int registryPort) throws RemoteException;1356735495;Locate or create the RMI registry._@param registryPort the registry port to use_@return the RMI registry_@throws RemoteException if the registry couldn't be located or created;protected Registry getRegistry(int registryPort) throws RemoteException {_		if (this.alwaysCreate) {_			logger.info("Creating new RMI registry")__			this.created = true__			return LocateRegistry.createRegistry(registryPort)__		}_		if (logger.isInfoEnabled()) {_			logger.info("Looking for RMI registry at port '" + registryPort + "'")__		}_		synchronized (LocateRegistry.class) {_			try {_				_				Registry reg = LocateRegistry.getRegistry(registryPort)__				testRegistry(reg)__				return reg__			}_			catch (RemoteException ex) {_				logger.debug("RMI registry access threw exception", ex)__				logger.info("Could not detect RMI registry - creating new one")__				_				this.created = true__				return LocateRegistry.createRegistry(registryPort)__			}_		}_	};locate,or,create,the,rmi,registry,param,registry,port,the,registry,port,to,use,return,the,rmi,registry,throws,remote,exception,if,the,registry,couldn,t,be,located,or,created;protected,registry,get,registry,int,registry,port,throws,remote,exception,if,this,always,create,logger,info,creating,new,rmi,registry,this,created,true,return,locate,registry,create,registry,registry,port,if,logger,is,info,enabled,logger,info,looking,for,rmi,registry,at,port,registry,port,synchronized,locate,registry,class,try,registry,reg,locate,registry,get,registry,registry,port,test,registry,reg,return,reg,catch,remote,exception,ex,logger,debug,rmi,registry,access,threw,exception,ex,logger,info,could,not,detect,rmi,registry,creating,new,one,this,created,true,return,locate,registry,create,registry,registry,port
RmiRegistryFactoryBean -> protected Registry getRegistry(int registryPort) throws RemoteException;1357119239;Locate or create the RMI registry._@param registryPort the registry port to use_@return the RMI registry_@throws RemoteException if the registry couldn't be located or created;protected Registry getRegistry(int registryPort) throws RemoteException {_		if (this.alwaysCreate) {_			logger.info("Creating new RMI registry")__			this.created = true__			return LocateRegistry.createRegistry(registryPort)__		}_		if (logger.isInfoEnabled()) {_			logger.info("Looking for RMI registry at port '" + registryPort + "'")__		}_		synchronized (LocateRegistry.class) {_			try {_				_				Registry reg = LocateRegistry.getRegistry(registryPort)__				testRegistry(reg)__				return reg__			}_			catch (RemoteException ex) {_				logger.debug("RMI registry access threw exception", ex)__				logger.info("Could not detect RMI registry - creating new one")__				_				this.created = true__				return LocateRegistry.createRegistry(registryPort)__			}_		}_	};locate,or,create,the,rmi,registry,param,registry,port,the,registry,port,to,use,return,the,rmi,registry,throws,remote,exception,if,the,registry,couldn,t,be,located,or,created;protected,registry,get,registry,int,registry,port,throws,remote,exception,if,this,always,create,logger,info,creating,new,rmi,registry,this,created,true,return,locate,registry,create,registry,registry,port,if,logger,is,info,enabled,logger,info,looking,for,rmi,registry,at,port,registry,port,synchronized,locate,registry,class,try,registry,reg,locate,registry,get,registry,registry,port,test,registry,reg,return,reg,catch,remote,exception,ex,logger,debug,rmi,registry,access,threw,exception,ex,logger,info,could,not,detect,rmi,registry,creating,new,one,this,created,true,return,locate,registry,create,registry,registry,port
RmiRegistryFactoryBean -> protected Registry getRegistry(int registryPort) throws RemoteException;1368482696;Locate or create the RMI registry._@param registryPort the registry port to use_@return the RMI registry_@throws RemoteException if the registry couldn't be located or created;protected Registry getRegistry(int registryPort) throws RemoteException {_		if (this.alwaysCreate) {_			logger.info("Creating new RMI registry")__			this.created = true__			return LocateRegistry.createRegistry(registryPort)__		}_		if (logger.isInfoEnabled()) {_			logger.info("Looking for RMI registry at port '" + registryPort + "'")__		}_		synchronized (LocateRegistry.class) {_			try {_				_				Registry reg = LocateRegistry.getRegistry(registryPort)__				testRegistry(reg)__				return reg__			}_			catch (RemoteException ex) {_				logger.debug("RMI registry access threw exception", ex)__				logger.info("Could not detect RMI registry - creating new one")__				_				this.created = true__				return LocateRegistry.createRegistry(registryPort)__			}_		}_	};locate,or,create,the,rmi,registry,param,registry,port,the,registry,port,to,use,return,the,rmi,registry,throws,remote,exception,if,the,registry,couldn,t,be,located,or,created;protected,registry,get,registry,int,registry,port,throws,remote,exception,if,this,always,create,logger,info,creating,new,rmi,registry,this,created,true,return,locate,registry,create,registry,registry,port,if,logger,is,info,enabled,logger,info,looking,for,rmi,registry,at,port,registry,port,synchronized,locate,registry,class,try,registry,reg,locate,registry,get,registry,registry,port,test,registry,reg,return,reg,catch,remote,exception,ex,logger,debug,rmi,registry,access,threw,exception,ex,logger,info,could,not,detect,rmi,registry,creating,new,one,this,created,true,return,locate,registry,create,registry,registry,port
RmiRegistryFactoryBean -> protected Registry getRegistry(int registryPort) throws RemoteException;1372363092;Locate or create the RMI registry._@param registryPort the registry port to use_@return the RMI registry_@throws RemoteException if the registry couldn't be located or created;protected Registry getRegistry(int registryPort) throws RemoteException {_		if (this.alwaysCreate) {_			logger.info("Creating new RMI registry")__			this.created = true__			return LocateRegistry.createRegistry(registryPort)__		}_		if (logger.isInfoEnabled()) {_			logger.info("Looking for RMI registry at port '" + registryPort + "'")__		}_		synchronized (LocateRegistry.class) {_			try {_				_				Registry reg = LocateRegistry.getRegistry(registryPort)__				testRegistry(reg)__				return reg__			}_			catch (RemoteException ex) {_				logger.debug("RMI registry access threw exception", ex)__				logger.info("Could not detect RMI registry - creating new one")__				_				this.created = true__				return LocateRegistry.createRegistry(registryPort)__			}_		}_	};locate,or,create,the,rmi,registry,param,registry,port,the,registry,port,to,use,return,the,rmi,registry,throws,remote,exception,if,the,registry,couldn,t,be,located,or,created;protected,registry,get,registry,int,registry,port,throws,remote,exception,if,this,always,create,logger,info,creating,new,rmi,registry,this,created,true,return,locate,registry,create,registry,registry,port,if,logger,is,info,enabled,logger,info,looking,for,rmi,registry,at,port,registry,port,synchronized,locate,registry,class,try,registry,reg,locate,registry,get,registry,registry,port,test,registry,reg,return,reg,catch,remote,exception,ex,logger,debug,rmi,registry,access,threw,exception,ex,logger,info,could,not,detect,rmi,registry,creating,new,one,this,created,true,return,locate,registry,create,registry,registry,port
RmiRegistryFactoryBean -> protected Registry getRegistry(int registryPort) throws RemoteException;1495868221;Locate or create the RMI registry._@param registryPort the registry port to use_@return the RMI registry_@throws RemoteException if the registry couldn't be located or created;protected Registry getRegistry(int registryPort) throws RemoteException {_		if (this.alwaysCreate) {_			logger.info("Creating new RMI registry")__			this.created = true__			return LocateRegistry.createRegistry(registryPort)__		}_		if (logger.isInfoEnabled()) {_			logger.info("Looking for RMI registry at port '" + registryPort + "'")__		}_		synchronized (LocateRegistry.class) {_			try {_				_				Registry reg = LocateRegistry.getRegistry(registryPort)__				testRegistry(reg)__				return reg__			}_			catch (RemoteException ex) {_				logger.debug("RMI registry access threw exception", ex)__				logger.info("Could not detect RMI registry - creating new one")__				_				this.created = true__				return LocateRegistry.createRegistry(registryPort)__			}_		}_	};locate,or,create,the,rmi,registry,param,registry,port,the,registry,port,to,use,return,the,rmi,registry,throws,remote,exception,if,the,registry,couldn,t,be,located,or,created;protected,registry,get,registry,int,registry,port,throws,remote,exception,if,this,always,create,logger,info,creating,new,rmi,registry,this,created,true,return,locate,registry,create,registry,registry,port,if,logger,is,info,enabled,logger,info,looking,for,rmi,registry,at,port,registry,port,synchronized,locate,registry,class,try,registry,reg,locate,registry,get,registry,registry,port,test,registry,reg,return,reg,catch,remote,exception,ex,logger,debug,rmi,registry,access,threw,exception,ex,logger,info,could,not,detect,rmi,registry,creating,new,one,this,created,true,return,locate,registry,create,registry,registry,port
RmiRegistryFactoryBean -> protected Registry getRegistry(int registryPort) throws RemoteException;1532091916;Locate or create the RMI registry._@param registryPort the registry port to use_@return the RMI registry_@throws RemoteException if the registry couldn't be located or created;protected Registry getRegistry(int registryPort) throws RemoteException {_		if (this.alwaysCreate) {_			logger.debug("Creating new RMI registry")__			this.created = true__			return LocateRegistry.createRegistry(registryPort)__		}_		if (logger.isDebugEnabled()) {_			logger.debug("Looking for RMI registry at port '" + registryPort + "'")__		}_		synchronized (LocateRegistry.class) {_			try {_				_				Registry reg = LocateRegistry.getRegistry(registryPort)__				testRegistry(reg)__				return reg__			}_			catch (RemoteException ex) {_				logger.trace("RMI registry access threw exception", ex)__				logger.debug("Could not detect RMI registry - creating new one")__				_				this.created = true__				return LocateRegistry.createRegistry(registryPort)__			}_		}_	};locate,or,create,the,rmi,registry,param,registry,port,the,registry,port,to,use,return,the,rmi,registry,throws,remote,exception,if,the,registry,couldn,t,be,located,or,created;protected,registry,get,registry,int,registry,port,throws,remote,exception,if,this,always,create,logger,debug,creating,new,rmi,registry,this,created,true,return,locate,registry,create,registry,registry,port,if,logger,is,debug,enabled,logger,debug,looking,for,rmi,registry,at,port,registry,port,synchronized,locate,registry,class,try,registry,reg,locate,registry,get,registry,registry,port,test,registry,reg,return,reg,catch,remote,exception,ex,logger,trace,rmi,registry,access,threw,exception,ex,logger,debug,could,not,detect,rmi,registry,creating,new,one,this,created,true,return,locate,registry,create,registry,registry,port
RmiRegistryFactoryBean -> protected void testRegistry(Registry registry) throws RemoteException;1328020251;Test the given RMI registry, calling some operation on it to_check whether it is still active._<p>Default implementation calls <code>Registry.list()</code>._@param registry the RMI registry to test_@throws RemoteException if thrown by registry methods_@see java.rmi.registry.Registry#list();protected void testRegistry(Registry registry) throws RemoteException {_		registry.list()__	};test,the,given,rmi,registry,calling,some,operation,on,it,to,check,whether,it,is,still,active,p,default,implementation,calls,code,registry,list,code,param,registry,the,rmi,registry,to,test,throws,remote,exception,if,thrown,by,registry,methods,see,java,rmi,registry,registry,list;protected,void,test,registry,registry,registry,throws,remote,exception,registry,list
RmiRegistryFactoryBean -> protected void testRegistry(Registry registry) throws RemoteException;1356735495;Test the given RMI registry, calling some operation on it to_check whether it is still active._<p>Default implementation calls {@code Registry.list()}._@param registry the RMI registry to test_@throws RemoteException if thrown by registry methods_@see java.rmi.registry.Registry#list();protected void testRegistry(Registry registry) throws RemoteException {_		registry.list()__	};test,the,given,rmi,registry,calling,some,operation,on,it,to,check,whether,it,is,still,active,p,default,implementation,calls,code,registry,list,param,registry,the,rmi,registry,to,test,throws,remote,exception,if,thrown,by,registry,methods,see,java,rmi,registry,registry,list;protected,void,test,registry,registry,registry,throws,remote,exception,registry,list
RmiRegistryFactoryBean -> protected void testRegistry(Registry registry) throws RemoteException;1357119239;Test the given RMI registry, calling some operation on it to_check whether it is still active._<p>Default implementation calls {@code Registry.list()}._@param registry the RMI registry to test_@throws RemoteException if thrown by registry methods_@see java.rmi.registry.Registry#list();protected void testRegistry(Registry registry) throws RemoteException {_		registry.list()__	};test,the,given,rmi,registry,calling,some,operation,on,it,to,check,whether,it,is,still,active,p,default,implementation,calls,code,registry,list,param,registry,the,rmi,registry,to,test,throws,remote,exception,if,thrown,by,registry,methods,see,java,rmi,registry,registry,list;protected,void,test,registry,registry,registry,throws,remote,exception,registry,list
RmiRegistryFactoryBean -> protected void testRegistry(Registry registry) throws RemoteException;1368482696;Test the given RMI registry, calling some operation on it to_check whether it is still active._<p>Default implementation calls {@code Registry.list()}._@param registry the RMI registry to test_@throws RemoteException if thrown by registry methods_@see java.rmi.registry.Registry#list();protected void testRegistry(Registry registry) throws RemoteException {_		registry.list()__	};test,the,given,rmi,registry,calling,some,operation,on,it,to,check,whether,it,is,still,active,p,default,implementation,calls,code,registry,list,param,registry,the,rmi,registry,to,test,throws,remote,exception,if,thrown,by,registry,methods,see,java,rmi,registry,registry,list;protected,void,test,registry,registry,registry,throws,remote,exception,registry,list
RmiRegistryFactoryBean -> protected void testRegistry(Registry registry) throws RemoteException;1372363092;Test the given RMI registry, calling some operation on it to_check whether it is still active._<p>Default implementation calls {@code Registry.list()}._@param registry the RMI registry to test_@throws RemoteException if thrown by registry methods_@see java.rmi.registry.Registry#list();protected void testRegistry(Registry registry) throws RemoteException {_		registry.list()__	};test,the,given,rmi,registry,calling,some,operation,on,it,to,check,whether,it,is,still,active,p,default,implementation,calls,code,registry,list,param,registry,the,rmi,registry,to,test,throws,remote,exception,if,thrown,by,registry,methods,see,java,rmi,registry,registry,list;protected,void,test,registry,registry,registry,throws,remote,exception,registry,list
RmiRegistryFactoryBean -> protected void testRegistry(Registry registry) throws RemoteException;1495868221;Test the given RMI registry, calling some operation on it to_check whether it is still active._<p>Default implementation calls {@code Registry.list()}._@param registry the RMI registry to test_@throws RemoteException if thrown by registry methods_@see java.rmi.registry.Registry#list();protected void testRegistry(Registry registry) throws RemoteException {_		registry.list()__	};test,the,given,rmi,registry,calling,some,operation,on,it,to,check,whether,it,is,still,active,p,default,implementation,calls,code,registry,list,param,registry,the,rmi,registry,to,test,throws,remote,exception,if,thrown,by,registry,methods,see,java,rmi,registry,registry,list;protected,void,test,registry,registry,registry,throws,remote,exception,registry,list
RmiRegistryFactoryBean -> protected void testRegistry(Registry registry) throws RemoteException;1532091916;Test the given RMI registry, calling some operation on it to_check whether it is still active._<p>Default implementation calls {@code Registry.list()}._@param registry the RMI registry to test_@throws RemoteException if thrown by registry methods_@see java.rmi.registry.Registry#list();protected void testRegistry(Registry registry) throws RemoteException {_		registry.list()__	};test,the,given,rmi,registry,calling,some,operation,on,it,to,check,whether,it,is,still,active,p,default,implementation,calls,code,registry,list,param,registry,the,rmi,registry,to,test,throws,remote,exception,if,thrown,by,registry,methods,see,java,rmi,registry,registry,list;protected,void,test,registry,registry,registry,throws,remote,exception,registry,list
RmiRegistryFactoryBean -> public String getHost();1328020251;Return the host of the registry for the exported RMI service.;public String getHost() {_		return this.host__	};return,the,host,of,the,registry,for,the,exported,rmi,service;public,string,get,host,return,this,host
RmiRegistryFactoryBean -> public String getHost();1356735495;Return the host of the registry for the exported RMI service.;public String getHost() {_		return this.host__	};return,the,host,of,the,registry,for,the,exported,rmi,service;public,string,get,host,return,this,host
RmiRegistryFactoryBean -> public String getHost();1357119239;Return the host of the registry for the exported RMI service.;public String getHost() {_		return this.host__	};return,the,host,of,the,registry,for,the,exported,rmi,service;public,string,get,host,return,this,host
RmiRegistryFactoryBean -> public String getHost();1368482696;Return the host of the registry for the exported RMI service.;public String getHost() {_		return this.host__	};return,the,host,of,the,registry,for,the,exported,rmi,service;public,string,get,host,return,this,host
RmiRegistryFactoryBean -> public String getHost();1372363092;Return the host of the registry for the exported RMI service.;public String getHost() {_		return this.host__	};return,the,host,of,the,registry,for,the,exported,rmi,service;public,string,get,host,return,this,host
RmiRegistryFactoryBean -> public String getHost();1495868221;Return the host of the registry for the exported RMI service.;public String getHost() {_		return this.host__	};return,the,host,of,the,registry,for,the,exported,rmi,service;public,string,get,host,return,this,host
RmiRegistryFactoryBean -> public String getHost();1532091916;Return the host of the registry for the exported RMI service.;public String getHost() {_		return this.host__	};return,the,host,of,the,registry,for,the,exported,rmi,service;public,string,get,host,return,this,host
