commented;modifiers;parameterAmount;loc;comment;code
true;public;2;7;/**  * Sets managed resource to expose and stores its {@link ClassLoader}.  */ ;/**  * Sets managed resource to expose and stores its {@link ClassLoader}.  */ @Override public void setManagedResource(Object managedResource, String managedResourceType) throws MBeanException, InstanceNotFoundException, InvalidTargetObjectTypeException {     this.managedResourceClassLoader = managedResource.getClass().getClassLoader().     super.setManagedResource(managedResource, managedResourceType). }
true;public;3;13;/**  * Switches the {@link Thread#getContextClassLoader() context ClassLoader} for the  * managed resources {@link ClassLoader} before allowing the invocation to occur.  * @see javax.management.modelmbean.ModelMBean#invoke  */ ;/**  * Switches the {@link Thread#getContextClassLoader() context ClassLoader} for the  * managed resources {@link ClassLoader} before allowing the invocation to occur.  * @see javax.management.modelmbean.ModelMBean#invoke  */ @Override public Object invoke(String opName, Object[] opArgs, String[] sig) throws MBeanException, ReflectionException {     ClassLoader currentClassLoader = Thread.currentThread().getContextClassLoader().     try {         Thread.currentThread().setContextClassLoader(this.managedResourceClassLoader).         return super.invoke(opName, opArgs, sig).     } finally {         Thread.currentThread().setContextClassLoader(currentClassLoader).     } }
true;public;1;13;/**  * Switches the {@link Thread#getContextClassLoader() context ClassLoader} for the  * managed resources {@link ClassLoader} before allowing the invocation to occur.  * @see javax.management.modelmbean.ModelMBean#getAttribute  */ ;/**  * Switches the {@link Thread#getContextClassLoader() context ClassLoader} for the  * managed resources {@link ClassLoader} before allowing the invocation to occur.  * @see javax.management.modelmbean.ModelMBean#getAttribute  */ @Override public Object getAttribute(String attrName) throws AttributeNotFoundException, MBeanException, ReflectionException {     ClassLoader currentClassLoader = Thread.currentThread().getContextClassLoader().     try {         Thread.currentThread().setContextClassLoader(this.managedResourceClassLoader).         return super.getAttribute(attrName).     } finally {         Thread.currentThread().setContextClassLoader(currentClassLoader).     } }
true;public;1;11;/**  * Switches the {@link Thread#getContextClassLoader() context ClassLoader} for the  * managed resources {@link ClassLoader} before allowing the invocation to occur.  * @see javax.management.modelmbean.ModelMBean#getAttributes  */ ;/**  * Switches the {@link Thread#getContextClassLoader() context ClassLoader} for the  * managed resources {@link ClassLoader} before allowing the invocation to occur.  * @see javax.management.modelmbean.ModelMBean#getAttributes  */ @Override public AttributeList getAttributes(String[] attrNames) {     ClassLoader currentClassLoader = Thread.currentThread().getContextClassLoader().     try {         Thread.currentThread().setContextClassLoader(this.managedResourceClassLoader).         return super.getAttributes(attrNames).     } finally {         Thread.currentThread().setContextClassLoader(currentClassLoader).     } }
true;public;1;13;/**  * Switches the {@link Thread#getContextClassLoader() context ClassLoader} for the  * managed resources {@link ClassLoader} before allowing the invocation to occur.  * @see javax.management.modelmbean.ModelMBean#setAttribute  */ ;/**  * Switches the {@link Thread#getContextClassLoader() context ClassLoader} for the  * managed resources {@link ClassLoader} before allowing the invocation to occur.  * @see javax.management.modelmbean.ModelMBean#setAttribute  */ @Override public void setAttribute(Attribute attribute) throws AttributeNotFoundException, InvalidAttributeValueException, MBeanException, ReflectionException {     ClassLoader currentClassLoader = Thread.currentThread().getContextClassLoader().     try {         Thread.currentThread().setContextClassLoader(this.managedResourceClassLoader).         super.setAttribute(attribute).     } finally {         Thread.currentThread().setContextClassLoader(currentClassLoader).     } }
true;public;1;11;/**  * Switches the {@link Thread#getContextClassLoader() context ClassLoader} for the  * managed resources {@link ClassLoader} before allowing the invocation to occur.  * @see javax.management.modelmbean.ModelMBean#setAttributes  */ ;/**  * Switches the {@link Thread#getContextClassLoader() context ClassLoader} for the  * managed resources {@link ClassLoader} before allowing the invocation to occur.  * @see javax.management.modelmbean.ModelMBean#setAttributes  */ @Override public AttributeList setAttributes(AttributeList attributes) {     ClassLoader currentClassLoader = Thread.currentThread().getContextClassLoader().     try {         Thread.currentThread().setContextClassLoader(this.managedResourceClassLoader).         return super.setAttributes(attributes).     } finally {         Thread.currentThread().setContextClassLoader(currentClassLoader).     } }
