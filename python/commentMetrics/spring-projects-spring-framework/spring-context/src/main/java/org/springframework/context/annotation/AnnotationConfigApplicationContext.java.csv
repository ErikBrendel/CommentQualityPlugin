# id;timestamp;commentText;codeText;commentWords;codeWords
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext();1328020251;Create a new AnnotationConfigApplicationContext that needs to be populated_through {@link #register} calls and then manually {@linkplain #refresh refreshed}.;public AnnotationConfigApplicationContext() {_		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,that,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed;public,annotation,config,application,context,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext();1329393628;Create a new AnnotationConfigApplicationContext that needs to be populated_through {@link #register} calls and then manually {@linkplain #refresh refreshed}.;public AnnotationConfigApplicationContext() {_		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,that,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed;public,annotation,config,application,context,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext();1355279384;Create a new AnnotationConfigApplicationContext that needs to be populated_through {@link #register} calls and then manually {@linkplain #refresh refreshed}.;public AnnotationConfigApplicationContext() {_		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,that,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed;public,annotation,config,application,context,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext();1367879792;Create a new AnnotationConfigApplicationContext that needs to be populated_through {@link #register} calls and then manually {@linkplain #refresh refreshed}.;public AnnotationConfigApplicationContext() {_		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,that,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed;public,annotation,config,application,context,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext();1377641093;Create a new AnnotationConfigApplicationContext that needs to be populated_through {@link #register} calls and then manually {@linkplain #refresh refreshed}.;public AnnotationConfigApplicationContext() {_		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,that,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed;public,annotation,config,application,context,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext();1403775783;Create a new AnnotationConfigApplicationContext that needs to be populated_through {@link #register} calls and then manually {@linkplain #refresh refreshed}.;public AnnotationConfigApplicationContext() {_		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,that,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed;public,annotation,config,application,context,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext();1482260264;Create a new AnnotationConfigApplicationContext that needs to be populated_through {@link #register} calls and then manually {@linkplain #refresh refreshed}.;public AnnotationConfigApplicationContext() {_		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,that,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed;public,annotation,config,application,context,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext();1482492407;Create a new AnnotationConfigApplicationContext that needs to be populated_through {@link #register} calls and then manually {@linkplain #refresh refreshed}.;public AnnotationConfigApplicationContext() {_		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,that,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed;public,annotation,config,application,context,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext();1482842304;Create a new AnnotationConfigApplicationContext that needs to be populated_through {@link #register} calls and then manually {@linkplain #refresh refreshed}.;public AnnotationConfigApplicationContext() {_		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,that,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed;public,annotation,config,application,context,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext();1495868221;Create a new AnnotationConfigApplicationContext that needs to be populated_through {@link #register} calls and then manually {@linkplain #refresh refreshed}.;public AnnotationConfigApplicationContext() {_		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,that,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed;public,annotation,config,application,context,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext();1496242568;Create a new AnnotationConfigApplicationContext that needs to be populated_through {@link #register} calls and then manually {@linkplain #refresh refreshed}.;public AnnotationConfigApplicationContext() {_		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,that,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed;public,annotation,config,application,context,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext();1496259743;Create a new AnnotationConfigApplicationContext that needs to be populated_through {@link #register} calls and then manually {@linkplain #refresh refreshed}.;public AnnotationConfigApplicationContext() {_		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,that,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed;public,annotation,config,application,context,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext();1496263893;Create a new AnnotationConfigApplicationContext that needs to be populated_through {@link #register} calls and then manually {@linkplain #refresh refreshed}.;public AnnotationConfigApplicationContext() {_		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,that,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed;public,annotation,config,application,context,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext();1496837955;Create a new AnnotationConfigApplicationContext that needs to be populated_through {@link #register} calls and then manually {@linkplain #refresh refreshed}.;public AnnotationConfigApplicationContext() {_		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,that,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed;public,annotation,config,application,context,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext();1532640050;Create a new AnnotationConfigApplicationContext that needs to be populated_through {@link #register} calls and then manually {@linkplain #refresh refreshed}.;public AnnotationConfigApplicationContext() {_		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,that,needs,to,be,populated,through,link,register,calls,and,then,manually,linkplain,refresh,refreshed;public,annotation,config,application,context,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public <T> void registerBean(@Nullable String beanName, Class<T> annotatedClass, @Nullable Object... constructorArguments);1495868221;Register a bean from the given bean class, deriving its metadata from_class-declared annotations, and optionally providing explicit constructor_arguments for consideration in the autowiring process._@param beanName the name of the bean (may be {@code null})_@param annotatedClass the class of the bean_@param constructorArguments argument values to be fed into Spring's_constructor resolution algorithm, resolving either all arguments or just_specific ones, with the rest to be resolved through regular autowiring_(may be {@code null} or empty)_@since 5.0;public <T> void registerBean(@Nullable String beanName, Class<T> annotatedClass, @Nullable Object... constructorArguments) {_		this.reader.doRegisterBean(annotatedClass, null, beanName, null,_				bd -> {_					for (Object arg : constructorArguments) {_						bd.getConstructorArgumentValues().addGenericArgumentValue(arg)__					}_				})__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,and,optionally,providing,explicit,constructor,arguments,for,consideration,in,the,autowiring,process,param,bean,name,the,name,of,the,bean,may,be,code,null,param,annotated,class,the,class,of,the,bean,param,constructor,arguments,argument,values,to,be,fed,into,spring,s,constructor,resolution,algorithm,resolving,either,all,arguments,or,just,specific,ones,with,the,rest,to,be,resolved,through,regular,autowiring,may,be,code,null,or,empty,since,5,0;public,t,void,register,bean,nullable,string,bean,name,class,t,annotated,class,nullable,object,constructor,arguments,this,reader,do,register,bean,annotated,class,null,bean,name,null,bd,for,object,arg,constructor,arguments,bd,get,constructor,argument,values,add,generic,argument,value,arg
AnnotationConfigApplicationContext -> public <T> void registerBean(@Nullable String beanName, Class<T> annotatedClass, @Nullable Object... constructorArguments);1496242568;Register a bean from the given bean class, deriving its metadata from_class-declared annotations, and optionally providing explicit constructor_arguments for consideration in the autowiring process._@param beanName the name of the bean (may be {@code null})_@param annotatedClass the class of the bean_@param constructorArguments argument values to be fed into Spring's_constructor resolution algorithm, resolving either all arguments or just_specific ones, with the rest to be resolved through regular autowiring_(may be {@code null} or empty)_@since 5.0;public <T> void registerBean(@Nullable String beanName, Class<T> annotatedClass, @Nullable Object... constructorArguments) {_		this.reader.doRegisterBean(annotatedClass, null, beanName, null,_				bd -> {_					for (Object arg : constructorArguments) {_						bd.getConstructorArgumentValues().addGenericArgumentValue(arg)__					}_				})__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,and,optionally,providing,explicit,constructor,arguments,for,consideration,in,the,autowiring,process,param,bean,name,the,name,of,the,bean,may,be,code,null,param,annotated,class,the,class,of,the,bean,param,constructor,arguments,argument,values,to,be,fed,into,spring,s,constructor,resolution,algorithm,resolving,either,all,arguments,or,just,specific,ones,with,the,rest,to,be,resolved,through,regular,autowiring,may,be,code,null,or,empty,since,5,0;public,t,void,register,bean,nullable,string,bean,name,class,t,annotated,class,nullable,object,constructor,arguments,this,reader,do,register,bean,annotated,class,null,bean,name,null,bd,for,object,arg,constructor,arguments,bd,get,constructor,argument,values,add,generic,argument,value,arg
AnnotationConfigApplicationContext -> public <T> void registerBean(@Nullable String beanName, Class<T> annotatedClass, @Nullable Object... constructorArguments);1496259743;Register a bean from the given bean class, deriving its metadata from_class-declared annotations, and optionally providing explicit constructor_arguments for consideration in the autowiring process._@param beanName the name of the bean (may be {@code null})_@param annotatedClass the class of the bean_@param constructorArguments argument values to be fed into Spring's_constructor resolution algorithm, resolving either all arguments or just_specific ones, with the rest to be resolved through regular autowiring_(may be {@code null} or empty)_@since 5.0;public <T> void registerBean(@Nullable String beanName, Class<T> annotatedClass, @Nullable Object... constructorArguments) {_		this.reader.doRegisterBean(annotatedClass, null, beanName, null,_				bd -> {_					for (Object arg : constructorArguments) {_						bd.getConstructorArgumentValues().addGenericArgumentValue(arg)__					}_				})__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,and,optionally,providing,explicit,constructor,arguments,for,consideration,in,the,autowiring,process,param,bean,name,the,name,of,the,bean,may,be,code,null,param,annotated,class,the,class,of,the,bean,param,constructor,arguments,argument,values,to,be,fed,into,spring,s,constructor,resolution,algorithm,resolving,either,all,arguments,or,just,specific,ones,with,the,rest,to,be,resolved,through,regular,autowiring,may,be,code,null,or,empty,since,5,0;public,t,void,register,bean,nullable,string,bean,name,class,t,annotated,class,nullable,object,constructor,arguments,this,reader,do,register,bean,annotated,class,null,bean,name,null,bd,for,object,arg,constructor,arguments,bd,get,constructor,argument,values,add,generic,argument,value,arg
AnnotationConfigApplicationContext -> public <T> void registerBean(@Nullable String beanName, Class<T> annotatedClass, @Nullable Object... constructorArguments);1496263893;Register a bean from the given bean class, deriving its metadata from_class-declared annotations, and optionally providing explicit constructor_arguments for consideration in the autowiring process._@param beanName the name of the bean (may be {@code null})_@param annotatedClass the class of the bean_@param constructorArguments argument values to be fed into Spring's_constructor resolution algorithm, resolving either all arguments or just_specific ones, with the rest to be resolved through regular autowiring_(may be {@code null} or empty)_@since 5.0;public <T> void registerBean(@Nullable String beanName, Class<T> annotatedClass, @Nullable Object... constructorArguments) {_		this.reader.doRegisterBean(annotatedClass, null, beanName, null,_				bd -> {_					for (Object arg : constructorArguments) {_						bd.getConstructorArgumentValues().addGenericArgumentValue(arg)__					}_				})__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,and,optionally,providing,explicit,constructor,arguments,for,consideration,in,the,autowiring,process,param,bean,name,the,name,of,the,bean,may,be,code,null,param,annotated,class,the,class,of,the,bean,param,constructor,arguments,argument,values,to,be,fed,into,spring,s,constructor,resolution,algorithm,resolving,either,all,arguments,or,just,specific,ones,with,the,rest,to,be,resolved,through,regular,autowiring,may,be,code,null,or,empty,since,5,0;public,t,void,register,bean,nullable,string,bean,name,class,t,annotated,class,nullable,object,constructor,arguments,this,reader,do,register,bean,annotated,class,null,bean,name,null,bd,for,object,arg,constructor,arguments,bd,get,constructor,argument,values,add,generic,argument,value,arg
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(String... basePackages);1328020251;Create a new AnnotationConfigApplicationContext, scanning for bean definitions_in the given packages and automatically refreshing the context._@param basePackages the packages to check for annotated classes;public AnnotationConfigApplicationContext(String... basePackages) {_		this()__		scan(basePackages)__		refresh()__	};create,a,new,annotation,config,application,context,scanning,for,bean,definitions,in,the,given,packages,and,automatically,refreshing,the,context,param,base,packages,the,packages,to,check,for,annotated,classes;public,annotation,config,application,context,string,base,packages,this,scan,base,packages,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(String... basePackages);1329393628;Create a new AnnotationConfigApplicationContext, scanning for bean definitions_in the given packages and automatically refreshing the context._@param basePackages the packages to check for annotated classes;public AnnotationConfigApplicationContext(String... basePackages) {_		this()__		scan(basePackages)__		refresh()__	};create,a,new,annotation,config,application,context,scanning,for,bean,definitions,in,the,given,packages,and,automatically,refreshing,the,context,param,base,packages,the,packages,to,check,for,annotated,classes;public,annotation,config,application,context,string,base,packages,this,scan,base,packages,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(String... basePackages);1355279384;Create a new AnnotationConfigApplicationContext, scanning for bean definitions_in the given packages and automatically refreshing the context._@param basePackages the packages to check for annotated classes;public AnnotationConfigApplicationContext(String... basePackages) {_		this()__		scan(basePackages)__		refresh()__	};create,a,new,annotation,config,application,context,scanning,for,bean,definitions,in,the,given,packages,and,automatically,refreshing,the,context,param,base,packages,the,packages,to,check,for,annotated,classes;public,annotation,config,application,context,string,base,packages,this,scan,base,packages,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(String... basePackages);1367879792;Create a new AnnotationConfigApplicationContext, scanning for bean definitions_in the given packages and automatically refreshing the context._@param basePackages the packages to check for annotated classes;public AnnotationConfigApplicationContext(String... basePackages) {_		this()__		scan(basePackages)__		refresh()__	};create,a,new,annotation,config,application,context,scanning,for,bean,definitions,in,the,given,packages,and,automatically,refreshing,the,context,param,base,packages,the,packages,to,check,for,annotated,classes;public,annotation,config,application,context,string,base,packages,this,scan,base,packages,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(String... basePackages);1377641093;Create a new AnnotationConfigApplicationContext, scanning for bean definitions_in the given packages and automatically refreshing the context._@param basePackages the packages to check for annotated classes;public AnnotationConfigApplicationContext(String... basePackages) {_		this()__		scan(basePackages)__		refresh()__	};create,a,new,annotation,config,application,context,scanning,for,bean,definitions,in,the,given,packages,and,automatically,refreshing,the,context,param,base,packages,the,packages,to,check,for,annotated,classes;public,annotation,config,application,context,string,base,packages,this,scan,base,packages,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(String... basePackages);1403775783;Create a new AnnotationConfigApplicationContext, scanning for bean definitions_in the given packages and automatically refreshing the context._@param basePackages the packages to check for annotated classes;public AnnotationConfigApplicationContext(String... basePackages) {_		this()__		scan(basePackages)__		refresh()__	};create,a,new,annotation,config,application,context,scanning,for,bean,definitions,in,the,given,packages,and,automatically,refreshing,the,context,param,base,packages,the,packages,to,check,for,annotated,classes;public,annotation,config,application,context,string,base,packages,this,scan,base,packages,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(String... basePackages);1482260264;Create a new AnnotationConfigApplicationContext, scanning for bean definitions_in the given packages and automatically refreshing the context._@param basePackages the packages to check for annotated classes;public AnnotationConfigApplicationContext(String... basePackages) {_		this()__		scan(basePackages)__		refresh()__	};create,a,new,annotation,config,application,context,scanning,for,bean,definitions,in,the,given,packages,and,automatically,refreshing,the,context,param,base,packages,the,packages,to,check,for,annotated,classes;public,annotation,config,application,context,string,base,packages,this,scan,base,packages,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(String... basePackages);1482492407;Create a new AnnotationConfigApplicationContext, scanning for bean definitions_in the given packages and automatically refreshing the context._@param basePackages the packages to check for annotated classes;public AnnotationConfigApplicationContext(String... basePackages) {_		this()__		scan(basePackages)__		refresh()__	};create,a,new,annotation,config,application,context,scanning,for,bean,definitions,in,the,given,packages,and,automatically,refreshing,the,context,param,base,packages,the,packages,to,check,for,annotated,classes;public,annotation,config,application,context,string,base,packages,this,scan,base,packages,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(String... basePackages);1482842304;Create a new AnnotationConfigApplicationContext, scanning for bean definitions_in the given packages and automatically refreshing the context._@param basePackages the packages to check for annotated classes;public AnnotationConfigApplicationContext(String... basePackages) {_		this()__		scan(basePackages)__		refresh()__	};create,a,new,annotation,config,application,context,scanning,for,bean,definitions,in,the,given,packages,and,automatically,refreshing,the,context,param,base,packages,the,packages,to,check,for,annotated,classes;public,annotation,config,application,context,string,base,packages,this,scan,base,packages,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(String... basePackages);1495868221;Create a new AnnotationConfigApplicationContext, scanning for bean definitions_in the given packages and automatically refreshing the context._@param basePackages the packages to check for annotated classes;public AnnotationConfigApplicationContext(String... basePackages) {_		this()__		scan(basePackages)__		refresh()__	};create,a,new,annotation,config,application,context,scanning,for,bean,definitions,in,the,given,packages,and,automatically,refreshing,the,context,param,base,packages,the,packages,to,check,for,annotated,classes;public,annotation,config,application,context,string,base,packages,this,scan,base,packages,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(String... basePackages);1496242568;Create a new AnnotationConfigApplicationContext, scanning for bean definitions_in the given packages and automatically refreshing the context._@param basePackages the packages to check for annotated classes;public AnnotationConfigApplicationContext(String... basePackages) {_		this()__		scan(basePackages)__		refresh()__	};create,a,new,annotation,config,application,context,scanning,for,bean,definitions,in,the,given,packages,and,automatically,refreshing,the,context,param,base,packages,the,packages,to,check,for,annotated,classes;public,annotation,config,application,context,string,base,packages,this,scan,base,packages,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(String... basePackages);1496259743;Create a new AnnotationConfigApplicationContext, scanning for bean definitions_in the given packages and automatically refreshing the context._@param basePackages the packages to check for annotated classes;public AnnotationConfigApplicationContext(String... basePackages) {_		this()__		scan(basePackages)__		refresh()__	};create,a,new,annotation,config,application,context,scanning,for,bean,definitions,in,the,given,packages,and,automatically,refreshing,the,context,param,base,packages,the,packages,to,check,for,annotated,classes;public,annotation,config,application,context,string,base,packages,this,scan,base,packages,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(String... basePackages);1496263893;Create a new AnnotationConfigApplicationContext, scanning for bean definitions_in the given packages and automatically refreshing the context._@param basePackages the packages to check for annotated classes;public AnnotationConfigApplicationContext(String... basePackages) {_		this()__		scan(basePackages)__		refresh()__	};create,a,new,annotation,config,application,context,scanning,for,bean,definitions,in,the,given,packages,and,automatically,refreshing,the,context,param,base,packages,the,packages,to,check,for,annotated,classes;public,annotation,config,application,context,string,base,packages,this,scan,base,packages,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(String... basePackages);1496837955;Create a new AnnotationConfigApplicationContext, scanning for bean definitions_in the given packages and automatically refreshing the context._@param basePackages the packages to check for annotated classes;public AnnotationConfigApplicationContext(String... basePackages) {_		this()__		scan(basePackages)__		refresh()__	};create,a,new,annotation,config,application,context,scanning,for,bean,definitions,in,the,given,packages,and,automatically,refreshing,the,context,param,base,packages,the,packages,to,check,for,annotated,classes;public,annotation,config,application,context,string,base,packages,this,scan,base,packages,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(String... basePackages);1532640050;Create a new AnnotationConfigApplicationContext, scanning for bean definitions_in the given packages and automatically refreshing the context._@param basePackages the packages to check for annotated classes;public AnnotationConfigApplicationContext(String... basePackages) {_		this()__		scan(basePackages)__		refresh()__	};create,a,new,annotation,config,application,context,scanning,for,bean,definitions,in,the,given,packages,and,automatically,refreshing,the,context,param,base,packages,the,packages,to,check,for,annotated,classes;public,annotation,config,application,context,string,base,packages,this,scan,base,packages,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(DefaultListableBeanFactory beanFactory);1367879792;Create a new AnnotationConfigApplicationContext with the given DefaultListableBeanFactory._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public AnnotationConfigApplicationContext(DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,with,the,given,default,listable,bean,factory,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,annotation,config,application,context,default,listable,bean,factory,bean,factory,super,bean,factory,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(DefaultListableBeanFactory beanFactory);1377641093;Create a new AnnotationConfigApplicationContext with the given DefaultListableBeanFactory._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public AnnotationConfigApplicationContext(DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,with,the,given,default,listable,bean,factory,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,annotation,config,application,context,default,listable,bean,factory,bean,factory,super,bean,factory,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(DefaultListableBeanFactory beanFactory);1403775783;Create a new AnnotationConfigApplicationContext with the given DefaultListableBeanFactory._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public AnnotationConfigApplicationContext(DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,with,the,given,default,listable,bean,factory,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,annotation,config,application,context,default,listable,bean,factory,bean,factory,super,bean,factory,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(DefaultListableBeanFactory beanFactory);1482260264;Create a new AnnotationConfigApplicationContext with the given DefaultListableBeanFactory._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public AnnotationConfigApplicationContext(DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,with,the,given,default,listable,bean,factory,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,annotation,config,application,context,default,listable,bean,factory,bean,factory,super,bean,factory,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(DefaultListableBeanFactory beanFactory);1482492407;Create a new AnnotationConfigApplicationContext with the given DefaultListableBeanFactory._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public AnnotationConfigApplicationContext(DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,with,the,given,default,listable,bean,factory,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,annotation,config,application,context,default,listable,bean,factory,bean,factory,super,bean,factory,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(DefaultListableBeanFactory beanFactory);1482842304;Create a new AnnotationConfigApplicationContext with the given DefaultListableBeanFactory._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public AnnotationConfigApplicationContext(DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,with,the,given,default,listable,bean,factory,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,annotation,config,application,context,default,listable,bean,factory,bean,factory,super,bean,factory,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(DefaultListableBeanFactory beanFactory);1495868221;Create a new AnnotationConfigApplicationContext with the given DefaultListableBeanFactory._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public AnnotationConfigApplicationContext(DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,with,the,given,default,listable,bean,factory,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,annotation,config,application,context,default,listable,bean,factory,bean,factory,super,bean,factory,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(DefaultListableBeanFactory beanFactory);1496242568;Create a new AnnotationConfigApplicationContext with the given DefaultListableBeanFactory._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public AnnotationConfigApplicationContext(DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,with,the,given,default,listable,bean,factory,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,annotation,config,application,context,default,listable,bean,factory,bean,factory,super,bean,factory,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(DefaultListableBeanFactory beanFactory);1496259743;Create a new AnnotationConfigApplicationContext with the given DefaultListableBeanFactory._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public AnnotationConfigApplicationContext(DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,with,the,given,default,listable,bean,factory,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,annotation,config,application,context,default,listable,bean,factory,bean,factory,super,bean,factory,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(DefaultListableBeanFactory beanFactory);1496263893;Create a new AnnotationConfigApplicationContext with the given DefaultListableBeanFactory._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public AnnotationConfigApplicationContext(DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,with,the,given,default,listable,bean,factory,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,annotation,config,application,context,default,listable,bean,factory,bean,factory,super,bean,factory,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(DefaultListableBeanFactory beanFactory);1496837955;Create a new AnnotationConfigApplicationContext with the given DefaultListableBeanFactory._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public AnnotationConfigApplicationContext(DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,with,the,given,default,listable,bean,factory,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,annotation,config,application,context,default,listable,bean,factory,bean,factory,super,bean,factory,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(DefaultListableBeanFactory beanFactory);1532640050;Create a new AnnotationConfigApplicationContext with the given DefaultListableBeanFactory._@param beanFactory the DefaultListableBeanFactory instance to use for this context;public AnnotationConfigApplicationContext(DefaultListableBeanFactory beanFactory) {_		super(beanFactory)__		this.reader = new AnnotatedBeanDefinitionReader(this)__		this.scanner = new ClassPathBeanDefinitionScanner(this)__	};create,a,new,annotation,config,application,context,with,the,given,default,listable,bean,factory,param,bean,factory,the,default,listable,bean,factory,instance,to,use,for,this,context;public,annotation,config,application,context,default,listable,bean,factory,bean,factory,super,bean,factory,this,reader,new,annotated,bean,definition,reader,this,this,scanner,new,class,path,bean,definition,scanner,this
AnnotationConfigApplicationContext -> public <T> void registerBean(Class<T> annotatedClass, Object... constructorArguments);1482492407;Register a bean from the given bean class, deriving its metadata from_class-declared annotations, and optionally providing explicit constructor_arguments for consideration in the autowiring process._<p>The bean name will be generated according to annotated component rules._@param annotatedClass the class of the bean_@param constructorArguments argument values to be fed into Spring's_constructor resolution algorithm, resolving either all arguments or just_specific ones, with the rest to be resolved through regular autowiring_(may be {@code null} or empty)_@since 5.0;public <T> void registerBean(Class<T> annotatedClass, Object... constructorArguments) {_		registerBean(null, annotatedClass, constructorArguments)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,and,optionally,providing,explicit,constructor,arguments,for,consideration,in,the,autowiring,process,p,the,bean,name,will,be,generated,according,to,annotated,component,rules,param,annotated,class,the,class,of,the,bean,param,constructor,arguments,argument,values,to,be,fed,into,spring,s,constructor,resolution,algorithm,resolving,either,all,arguments,or,just,specific,ones,with,the,rest,to,be,resolved,through,regular,autowiring,may,be,code,null,or,empty,since,5,0;public,t,void,register,bean,class,t,annotated,class,object,constructor,arguments,register,bean,null,annotated,class,constructor,arguments
AnnotationConfigApplicationContext -> public <T> void registerBean(Class<T> annotatedClass, Object... constructorArguments);1482842304;Register a bean from the given bean class, deriving its metadata from_class-declared annotations, and optionally providing explicit constructor_arguments for consideration in the autowiring process._<p>The bean name will be generated according to annotated component rules._@param annotatedClass the class of the bean_@param constructorArguments argument values to be fed into Spring's_constructor resolution algorithm, resolving either all arguments or just_specific ones, with the rest to be resolved through regular autowiring_(may be {@code null} or empty)_@since 5.0;public <T> void registerBean(Class<T> annotatedClass, Object... constructorArguments) {_		registerBean(null, annotatedClass, constructorArguments)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,and,optionally,providing,explicit,constructor,arguments,for,consideration,in,the,autowiring,process,p,the,bean,name,will,be,generated,according,to,annotated,component,rules,param,annotated,class,the,class,of,the,bean,param,constructor,arguments,argument,values,to,be,fed,into,spring,s,constructor,resolution,algorithm,resolving,either,all,arguments,or,just,specific,ones,with,the,rest,to,be,resolved,through,regular,autowiring,may,be,code,null,or,empty,since,5,0;public,t,void,register,bean,class,t,annotated,class,object,constructor,arguments,register,bean,null,annotated,class,constructor,arguments
AnnotationConfigApplicationContext -> public <T> void registerBean(Class<T> annotatedClass, Object... constructorArguments);1496837955;Register a bean from the given bean class, deriving its metadata from_class-declared annotations, and optionally providing explicit constructor_arguments for consideration in the autowiring process._<p>The bean name will be generated according to annotated component rules._@param annotatedClass the class of the bean_@param constructorArguments argument values to be fed into Spring's_constructor resolution algorithm, resolving either all arguments or just_specific ones, with the rest to be resolved through regular autowiring_(may be {@code null} or empty)_@since 5.0;public <T> void registerBean(Class<T> annotatedClass, Object... constructorArguments) {_		registerBean(null, annotatedClass, constructorArguments)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,and,optionally,providing,explicit,constructor,arguments,for,consideration,in,the,autowiring,process,p,the,bean,name,will,be,generated,according,to,annotated,component,rules,param,annotated,class,the,class,of,the,bean,param,constructor,arguments,argument,values,to,be,fed,into,spring,s,constructor,resolution,algorithm,resolving,either,all,arguments,or,just,specific,ones,with,the,rest,to,be,resolved,through,regular,autowiring,may,be,code,null,or,empty,since,5,0;public,t,void,register,bean,class,t,annotated,class,object,constructor,arguments,register,bean,null,annotated,class,constructor,arguments
AnnotationConfigApplicationContext -> public <T> void registerBean(Class<T> annotatedClass, Object... constructorArguments);1532640050;Register a bean from the given bean class, deriving its metadata from_class-declared annotations, and optionally providing explicit constructor_arguments for consideration in the autowiring process._<p>The bean name will be generated according to annotated component rules._@param annotatedClass the class of the bean_@param constructorArguments argument values to be fed into Spring's_constructor resolution algorithm, resolving either all arguments or just_specific ones, with the rest to be resolved through regular autowiring_(may be {@code null} or empty)_@since 5.0;public <T> void registerBean(Class<T> annotatedClass, Object... constructorArguments) {_		registerBean(null, annotatedClass, constructorArguments)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,and,optionally,providing,explicit,constructor,arguments,for,consideration,in,the,autowiring,process,p,the,bean,name,will,be,generated,according,to,annotated,component,rules,param,annotated,class,the,class,of,the,bean,param,constructor,arguments,argument,values,to,be,fed,into,spring,s,constructor,resolution,algorithm,resolving,either,all,arguments,or,just,specific,ones,with,the,rest,to,be,resolved,through,regular,autowiring,may,be,code,null,or,empty,since,5,0;public,t,void,register,bean,class,t,annotated,class,object,constructor,arguments,register,bean,null,annotated,class,constructor,arguments
AnnotationConfigApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1328020251;Provide a custom {@link BeanNameGenerator} for use with {@link AnnotatedBeanDefinitionReader}_and/or {@link ClassPathBeanDefinitionScanner}, if any._<p>Default is {@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.reader.setBeanNameGenerator(beanNameGenerator)__		this.scanner.setBeanNameGenerator(beanNameGenerator)__	};provide,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,reader,set,bean,name,generator,bean,name,generator,this,scanner,set,bean,name,generator,bean,name,generator
AnnotationConfigApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1329393628;Provide a custom {@link BeanNameGenerator} for use with {@link AnnotatedBeanDefinitionReader}_and/or {@link ClassPathBeanDefinitionScanner}, if any._<p>Default is {@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.reader.setBeanNameGenerator(beanNameGenerator)__		this.scanner.setBeanNameGenerator(beanNameGenerator)__		this.getBeanFactory().registerSingleton(_				AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR, beanNameGenerator)__	};provide,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,reader,set,bean,name,generator,bean,name,generator,this,scanner,set,bean,name,generator,bean,name,generator,this,get,bean,factory,register,singleton,annotation,config,utils,bean,name,generator
AnnotationConfigApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1355279384;Provide a custom {@link BeanNameGenerator} for use with {@link AnnotatedBeanDefinitionReader}_and/or {@link ClassPathBeanDefinitionScanner}, if any._<p>Default is {@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.reader.setBeanNameGenerator(beanNameGenerator)__		this.scanner.setBeanNameGenerator(beanNameGenerator)__		this.getBeanFactory().registerSingleton(_				AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR, beanNameGenerator)__	};provide,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,reader,set,bean,name,generator,bean,name,generator,this,scanner,set,bean,name,generator,bean,name,generator,this,get,bean,factory,register,singleton,annotation,config,utils,bean,name,generator
AnnotationConfigApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1367879792;Provide a custom {@link BeanNameGenerator} for use with {@link AnnotatedBeanDefinitionReader}_and/or {@link ClassPathBeanDefinitionScanner}, if any._<p>Default is {@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.reader.setBeanNameGenerator(beanNameGenerator)__		this.scanner.setBeanNameGenerator(beanNameGenerator)__		this.getBeanFactory().registerSingleton(_				AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR, beanNameGenerator)__	};provide,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,reader,set,bean,name,generator,bean,name,generator,this,scanner,set,bean,name,generator,bean,name,generator,this,get,bean,factory,register,singleton,annotation,config,utils,bean,name,generator
AnnotationConfigApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1377641093;Provide a custom {@link BeanNameGenerator} for use with {@link AnnotatedBeanDefinitionReader}_and/or {@link ClassPathBeanDefinitionScanner}, if any._<p>Default is {@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.reader.setBeanNameGenerator(beanNameGenerator)__		this.scanner.setBeanNameGenerator(beanNameGenerator)__		getBeanFactory().registerSingleton(_				AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR, beanNameGenerator)__	};provide,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,reader,set,bean,name,generator,bean,name,generator,this,scanner,set,bean,name,generator,bean,name,generator,get,bean,factory,register,singleton,annotation,config,utils,bean,name,generator
AnnotationConfigApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1403775783;Provide a custom {@link BeanNameGenerator} for use with {@link AnnotatedBeanDefinitionReader}_and/or {@link ClassPathBeanDefinitionScanner}, if any._<p>Default is {@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.reader.setBeanNameGenerator(beanNameGenerator)__		this.scanner.setBeanNameGenerator(beanNameGenerator)__		getBeanFactory().registerSingleton(_				AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR, beanNameGenerator)__	};provide,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,reader,set,bean,name,generator,bean,name,generator,this,scanner,set,bean,name,generator,bean,name,generator,get,bean,factory,register,singleton,annotation,config,utils,bean,name,generator
AnnotationConfigApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1482260264;Provide a custom {@link BeanNameGenerator} for use with {@link AnnotatedBeanDefinitionReader}_and/or {@link ClassPathBeanDefinitionScanner}, if any._<p>Default is {@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.reader.setBeanNameGenerator(beanNameGenerator)__		this.scanner.setBeanNameGenerator(beanNameGenerator)__		getBeanFactory().registerSingleton(_				AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR, beanNameGenerator)__	};provide,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,reader,set,bean,name,generator,bean,name,generator,this,scanner,set,bean,name,generator,bean,name,generator,get,bean,factory,register,singleton,annotation,config,utils,bean,name,generator
AnnotationConfigApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1482492407;Provide a custom {@link BeanNameGenerator} for use with {@link AnnotatedBeanDefinitionReader}_and/or {@link ClassPathBeanDefinitionScanner}, if any._<p>Default is {@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.reader.setBeanNameGenerator(beanNameGenerator)__		this.scanner.setBeanNameGenerator(beanNameGenerator)__		getBeanFactory().registerSingleton(_				AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR, beanNameGenerator)__	};provide,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,reader,set,bean,name,generator,bean,name,generator,this,scanner,set,bean,name,generator,bean,name,generator,get,bean,factory,register,singleton,annotation,config,utils,bean,name,generator
AnnotationConfigApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1482842304;Provide a custom {@link BeanNameGenerator} for use with {@link AnnotatedBeanDefinitionReader}_and/or {@link ClassPathBeanDefinitionScanner}, if any._<p>Default is {@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.reader.setBeanNameGenerator(beanNameGenerator)__		this.scanner.setBeanNameGenerator(beanNameGenerator)__		getBeanFactory().registerSingleton(_				AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR, beanNameGenerator)__	};provide,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,reader,set,bean,name,generator,bean,name,generator,this,scanner,set,bean,name,generator,bean,name,generator,get,bean,factory,register,singleton,annotation,config,utils,bean,name,generator
AnnotationConfigApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1495868221;Provide a custom {@link BeanNameGenerator} for use with {@link AnnotatedBeanDefinitionReader}_and/or {@link ClassPathBeanDefinitionScanner}, if any._<p>Default is {@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.reader.setBeanNameGenerator(beanNameGenerator)__		this.scanner.setBeanNameGenerator(beanNameGenerator)__		getBeanFactory().registerSingleton(_				AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR, beanNameGenerator)__	};provide,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,reader,set,bean,name,generator,bean,name,generator,this,scanner,set,bean,name,generator,bean,name,generator,get,bean,factory,register,singleton,annotation,config,utils,bean,name,generator
AnnotationConfigApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1496242568;Provide a custom {@link BeanNameGenerator} for use with {@link AnnotatedBeanDefinitionReader}_and/or {@link ClassPathBeanDefinitionScanner}, if any._<p>Default is {@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.reader.setBeanNameGenerator(beanNameGenerator)__		this.scanner.setBeanNameGenerator(beanNameGenerator)__		getBeanFactory().registerSingleton(_				AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR, beanNameGenerator)__	};provide,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,reader,set,bean,name,generator,bean,name,generator,this,scanner,set,bean,name,generator,bean,name,generator,get,bean,factory,register,singleton,annotation,config,utils,bean,name,generator
AnnotationConfigApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1496259743;Provide a custom {@link BeanNameGenerator} for use with {@link AnnotatedBeanDefinitionReader}_and/or {@link ClassPathBeanDefinitionScanner}, if any._<p>Default is {@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.reader.setBeanNameGenerator(beanNameGenerator)__		this.scanner.setBeanNameGenerator(beanNameGenerator)__		getBeanFactory().registerSingleton(_				AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR, beanNameGenerator)__	};provide,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,reader,set,bean,name,generator,bean,name,generator,this,scanner,set,bean,name,generator,bean,name,generator,get,bean,factory,register,singleton,annotation,config,utils,bean,name,generator
AnnotationConfigApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1496263893;Provide a custom {@link BeanNameGenerator} for use with {@link AnnotatedBeanDefinitionReader}_and/or {@link ClassPathBeanDefinitionScanner}, if any._<p>Default is {@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.reader.setBeanNameGenerator(beanNameGenerator)__		this.scanner.setBeanNameGenerator(beanNameGenerator)__		getBeanFactory().registerSingleton(_				AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR, beanNameGenerator)__	};provide,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,reader,set,bean,name,generator,bean,name,generator,this,scanner,set,bean,name,generator,bean,name,generator,get,bean,factory,register,singleton,annotation,config,utils,bean,name,generator
AnnotationConfigApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1496837955;Provide a custom {@link BeanNameGenerator} for use with {@link AnnotatedBeanDefinitionReader}_and/or {@link ClassPathBeanDefinitionScanner}, if any._<p>Default is {@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.reader.setBeanNameGenerator(beanNameGenerator)__		this.scanner.setBeanNameGenerator(beanNameGenerator)__		getBeanFactory().registerSingleton(_				AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR, beanNameGenerator)__	};provide,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,reader,set,bean,name,generator,bean,name,generator,this,scanner,set,bean,name,generator,bean,name,generator,get,bean,factory,register,singleton,annotation,config,utils,bean,name,generator
AnnotationConfigApplicationContext -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1532640050;Provide a custom {@link BeanNameGenerator} for use with {@link AnnotatedBeanDefinitionReader}_and/or {@link ClassPathBeanDefinitionScanner}, if any._<p>Default is {@link org.springframework.context.annotation.AnnotationBeanNameGenerator}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}._@see AnnotatedBeanDefinitionReader#setBeanNameGenerator_@see ClassPathBeanDefinitionScanner#setBeanNameGenerator;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.reader.setBeanNameGenerator(beanNameGenerator)__		this.scanner.setBeanNameGenerator(beanNameGenerator)__		getBeanFactory().registerSingleton(_				AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR, beanNameGenerator)__	};provide,a,custom,link,bean,name,generator,for,use,with,link,annotated,bean,definition,reader,and,or,link,class,path,bean,definition,scanner,if,any,p,default,is,link,org,springframework,context,annotation,annotation,bean,name,generator,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string,see,annotated,bean,definition,reader,set,bean,name,generator,see,class,path,bean,definition,scanner,set,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,reader,set,bean,name,generator,bean,name,generator,this,scanner,set,bean,name,generator,bean,name,generator,get,bean,factory,register,singleton,annotation,config,utils,bean,name,generator
AnnotationConfigApplicationContext -> public <T> void registerBean(@Nullable String beanName, Class<T> annotatedClass, Object... constructorArguments);1496837955;Register a bean from the given bean class, deriving its metadata from_class-declared annotations, and optionally providing explicit constructor_arguments for consideration in the autowiring process._@param beanName the name of the bean (may be {@code null})_@param annotatedClass the class of the bean_@param constructorArguments argument values to be fed into Spring's_constructor resolution algorithm, resolving either all arguments or just_specific ones, with the rest to be resolved through regular autowiring_(may be {@code null} or empty)_@since 5.0;public <T> void registerBean(@Nullable String beanName, Class<T> annotatedClass, Object... constructorArguments) {_		this.reader.doRegisterBean(annotatedClass, null, beanName, null,_				bd -> {_					for (Object arg : constructorArguments) {_						bd.getConstructorArgumentValues().addGenericArgumentValue(arg)__					}_				})__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,and,optionally,providing,explicit,constructor,arguments,for,consideration,in,the,autowiring,process,param,bean,name,the,name,of,the,bean,may,be,code,null,param,annotated,class,the,class,of,the,bean,param,constructor,arguments,argument,values,to,be,fed,into,spring,s,constructor,resolution,algorithm,resolving,either,all,arguments,or,just,specific,ones,with,the,rest,to,be,resolved,through,regular,autowiring,may,be,code,null,or,empty,since,5,0;public,t,void,register,bean,nullable,string,bean,name,class,t,annotated,class,object,constructor,arguments,this,reader,do,register,bean,annotated,class,null,bean,name,null,bd,for,object,arg,constructor,arguments,bd,get,constructor,argument,values,add,generic,argument,value,arg
AnnotationConfigApplicationContext -> public <T> void registerBean(@Nullable String beanName, Class<T> annotatedClass, Object... constructorArguments);1532640050;Register a bean from the given bean class, deriving its metadata from_class-declared annotations, and optionally providing explicit constructor_arguments for consideration in the autowiring process._@param beanName the name of the bean (may be {@code null})_@param annotatedClass the class of the bean_@param constructorArguments argument values to be fed into Spring's_constructor resolution algorithm, resolving either all arguments or just_specific ones, with the rest to be resolved through regular autowiring_(may be {@code null} or empty)_@since 5.0;public <T> void registerBean(@Nullable String beanName, Class<T> annotatedClass, Object... constructorArguments) {_		this.reader.doRegisterBean(annotatedClass, null, beanName, null,_				bd -> {_					for (Object arg : constructorArguments) {_						bd.getConstructorArgumentValues().addGenericArgumentValue(arg)__					}_				})__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,and,optionally,providing,explicit,constructor,arguments,for,consideration,in,the,autowiring,process,param,bean,name,the,name,of,the,bean,may,be,code,null,param,annotated,class,the,class,of,the,bean,param,constructor,arguments,argument,values,to,be,fed,into,spring,s,constructor,resolution,algorithm,resolving,either,all,arguments,or,just,specific,ones,with,the,rest,to,be,resolved,through,regular,autowiring,may,be,code,null,or,empty,since,5,0;public,t,void,register,bean,nullable,string,bean,name,class,t,annotated,class,object,constructor,arguments,this,reader,do,register,bean,annotated,class,null,bean,name,null,bd,for,object,arg,constructor,arguments,bd,get,constructor,argument,values,add,generic,argument,value,arg
AnnotationConfigApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1328020251;Set the {@link ScopeMetadataResolver} to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.reader.setScopeMetadataResolver(scopeMetadataResolver)__		this.scanner.setScopeMetadataResolver(scopeMetadataResolver)__	};set,the,link,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,reader,set,scope,metadata,resolver,scope,metadata,resolver,this,scanner,set,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1329393628;Set the {@link ScopeMetadataResolver} to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.reader.setScopeMetadataResolver(scopeMetadataResolver)__		this.scanner.setScopeMetadataResolver(scopeMetadataResolver)__	};set,the,link,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,reader,set,scope,metadata,resolver,scope,metadata,resolver,this,scanner,set,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1355279384;Set the {@link ScopeMetadataResolver} to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.reader.setScopeMetadataResolver(scopeMetadataResolver)__		this.scanner.setScopeMetadataResolver(scopeMetadataResolver)__	};set,the,link,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,reader,set,scope,metadata,resolver,scope,metadata,resolver,this,scanner,set,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1367879792;Set the {@link ScopeMetadataResolver} to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.reader.setScopeMetadataResolver(scopeMetadataResolver)__		this.scanner.setScopeMetadataResolver(scopeMetadataResolver)__	};set,the,link,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,reader,set,scope,metadata,resolver,scope,metadata,resolver,this,scanner,set,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1377641093;Set the {@link ScopeMetadataResolver} to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.reader.setScopeMetadataResolver(scopeMetadataResolver)__		this.scanner.setScopeMetadataResolver(scopeMetadataResolver)__	};set,the,link,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,reader,set,scope,metadata,resolver,scope,metadata,resolver,this,scanner,set,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1403775783;Set the {@link ScopeMetadataResolver} to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.reader.setScopeMetadataResolver(scopeMetadataResolver)__		this.scanner.setScopeMetadataResolver(scopeMetadataResolver)__	};set,the,link,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,reader,set,scope,metadata,resolver,scope,metadata,resolver,this,scanner,set,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1482260264;Set the {@link ScopeMetadataResolver} to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.reader.setScopeMetadataResolver(scopeMetadataResolver)__		this.scanner.setScopeMetadataResolver(scopeMetadataResolver)__	};set,the,link,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,reader,set,scope,metadata,resolver,scope,metadata,resolver,this,scanner,set,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1482492407;Set the {@link ScopeMetadataResolver} to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.reader.setScopeMetadataResolver(scopeMetadataResolver)__		this.scanner.setScopeMetadataResolver(scopeMetadataResolver)__	};set,the,link,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,reader,set,scope,metadata,resolver,scope,metadata,resolver,this,scanner,set,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1482842304;Set the {@link ScopeMetadataResolver} to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.reader.setScopeMetadataResolver(scopeMetadataResolver)__		this.scanner.setScopeMetadataResolver(scopeMetadataResolver)__	};set,the,link,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,reader,set,scope,metadata,resolver,scope,metadata,resolver,this,scanner,set,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1495868221;Set the {@link ScopeMetadataResolver} to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.reader.setScopeMetadataResolver(scopeMetadataResolver)__		this.scanner.setScopeMetadataResolver(scopeMetadataResolver)__	};set,the,link,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,reader,set,scope,metadata,resolver,scope,metadata,resolver,this,scanner,set,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1496242568;Set the {@link ScopeMetadataResolver} to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.reader.setScopeMetadataResolver(scopeMetadataResolver)__		this.scanner.setScopeMetadataResolver(scopeMetadataResolver)__	};set,the,link,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,reader,set,scope,metadata,resolver,scope,metadata,resolver,this,scanner,set,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1496259743;Set the {@link ScopeMetadataResolver} to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.reader.setScopeMetadataResolver(scopeMetadataResolver)__		this.scanner.setScopeMetadataResolver(scopeMetadataResolver)__	};set,the,link,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,reader,set,scope,metadata,resolver,scope,metadata,resolver,this,scanner,set,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1496263893;Set the {@link ScopeMetadataResolver} to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.reader.setScopeMetadataResolver(scopeMetadataResolver)__		this.scanner.setScopeMetadataResolver(scopeMetadataResolver)__	};set,the,link,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,reader,set,scope,metadata,resolver,scope,metadata,resolver,this,scanner,set,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1496837955;Set the {@link ScopeMetadataResolver} to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.reader.setScopeMetadataResolver(scopeMetadataResolver)__		this.scanner.setScopeMetadataResolver(scopeMetadataResolver)__	};set,the,link,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,reader,set,scope,metadata,resolver,scope,metadata,resolver,this,scanner,set,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigApplicationContext -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1532640050;Set the {@link ScopeMetadataResolver} to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}._<p>Any call to this method must occur prior to calls to {@link #register(Class...)}_and/or {@link #scan(String...)}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.reader.setScopeMetadataResolver(scopeMetadataResolver)__		this.scanner.setScopeMetadataResolver(scopeMetadataResolver)__	};set,the,link,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver,p,any,call,to,this,method,must,occur,prior,to,calls,to,link,register,class,and,or,link,scan,string;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,reader,set,scope,metadata,resolver,scope,metadata,resolver,this,scanner,set,scope,metadata,resolver,scope,metadata,resolver
AnnotationConfigApplicationContext -> @Override 	public void setEnvironment(ConfigurableEnvironment environment);1328020251;{@inheritDoc}_<p>Delegates given environment to underlying {@link AnnotatedBeanDefinitionReader}_and {@link ClassPathBeanDefinitionScanner} members.;@Override_	public void setEnvironment(ConfigurableEnvironment environment) {_		super.setEnvironment(environment)__		this.reader.setEnvironment(environment)__		this.scanner.setEnvironment(environment)__	};inherit,doc,p,delegates,given,environment,to,underlying,link,annotated,bean,definition,reader,and,link,class,path,bean,definition,scanner,members;override,public,void,set,environment,configurable,environment,environment,super,set,environment,environment,this,reader,set,environment,environment,this,scanner,set,environment,environment
AnnotationConfigApplicationContext -> @Override 	public void setEnvironment(ConfigurableEnvironment environment);1329393628;{@inheritDoc}_<p>Delegates given environment to underlying {@link AnnotatedBeanDefinitionReader}_and {@link ClassPathBeanDefinitionScanner} members.;@Override_	public void setEnvironment(ConfigurableEnvironment environment) {_		super.setEnvironment(environment)__		this.reader.setEnvironment(environment)__		this.scanner.setEnvironment(environment)__	};inherit,doc,p,delegates,given,environment,to,underlying,link,annotated,bean,definition,reader,and,link,class,path,bean,definition,scanner,members;override,public,void,set,environment,configurable,environment,environment,super,set,environment,environment,this,reader,set,environment,environment,this,scanner,set,environment,environment
AnnotationConfigApplicationContext -> @Override 	public void setEnvironment(ConfigurableEnvironment environment);1355279384;{@inheritDoc}_<p>Delegates given environment to underlying {@link AnnotatedBeanDefinitionReader}_and {@link ClassPathBeanDefinitionScanner} members.;@Override_	public void setEnvironment(ConfigurableEnvironment environment) {_		super.setEnvironment(environment)__		this.reader.setEnvironment(environment)__		this.scanner.setEnvironment(environment)__	};inherit,doc,p,delegates,given,environment,to,underlying,link,annotated,bean,definition,reader,and,link,class,path,bean,definition,scanner,members;override,public,void,set,environment,configurable,environment,environment,super,set,environment,environment,this,reader,set,environment,environment,this,scanner,set,environment,environment
AnnotationConfigApplicationContext -> @Override 	public void setEnvironment(ConfigurableEnvironment environment);1367879792;{@inheritDoc}_<p>Delegates given environment to underlying {@link AnnotatedBeanDefinitionReader}_and {@link ClassPathBeanDefinitionScanner} members.;@Override_	public void setEnvironment(ConfigurableEnvironment environment) {_		super.setEnvironment(environment)__		this.reader.setEnvironment(environment)__		this.scanner.setEnvironment(environment)__	};inherit,doc,p,delegates,given,environment,to,underlying,link,annotated,bean,definition,reader,and,link,class,path,bean,definition,scanner,members;override,public,void,set,environment,configurable,environment,environment,super,set,environment,environment,this,reader,set,environment,environment,this,scanner,set,environment,environment
AnnotationConfigApplicationContext -> @Override 	public void setEnvironment(ConfigurableEnvironment environment);1377641093;{@inheritDoc}_<p>Delegates given environment to underlying {@link AnnotatedBeanDefinitionReader}_and {@link ClassPathBeanDefinitionScanner} members.;@Override_	public void setEnvironment(ConfigurableEnvironment environment) {_		super.setEnvironment(environment)__		this.reader.setEnvironment(environment)__		this.scanner.setEnvironment(environment)__	};inherit,doc,p,delegates,given,environment,to,underlying,link,annotated,bean,definition,reader,and,link,class,path,bean,definition,scanner,members;override,public,void,set,environment,configurable,environment,environment,super,set,environment,environment,this,reader,set,environment,environment,this,scanner,set,environment,environment
AnnotationConfigApplicationContext -> @Override 	public void setEnvironment(ConfigurableEnvironment environment);1403775783;{@inheritDoc}_<p>Delegates given environment to underlying {@link AnnotatedBeanDefinitionReader}_and {@link ClassPathBeanDefinitionScanner} members.;@Override_	public void setEnvironment(ConfigurableEnvironment environment) {_		super.setEnvironment(environment)__		this.reader.setEnvironment(environment)__		this.scanner.setEnvironment(environment)__	};inherit,doc,p,delegates,given,environment,to,underlying,link,annotated,bean,definition,reader,and,link,class,path,bean,definition,scanner,members;override,public,void,set,environment,configurable,environment,environment,super,set,environment,environment,this,reader,set,environment,environment,this,scanner,set,environment,environment
AnnotationConfigApplicationContext -> @Override 	public void setEnvironment(ConfigurableEnvironment environment);1482260264;{@inheritDoc}_<p>Delegates given environment to underlying {@link AnnotatedBeanDefinitionReader}_and {@link ClassPathBeanDefinitionScanner} members.;@Override_	public void setEnvironment(ConfigurableEnvironment environment) {_		super.setEnvironment(environment)__		this.reader.setEnvironment(environment)__		this.scanner.setEnvironment(environment)__	};inherit,doc,p,delegates,given,environment,to,underlying,link,annotated,bean,definition,reader,and,link,class,path,bean,definition,scanner,members;override,public,void,set,environment,configurable,environment,environment,super,set,environment,environment,this,reader,set,environment,environment,this,scanner,set,environment,environment
AnnotationConfigApplicationContext -> @Override 	public void setEnvironment(ConfigurableEnvironment environment);1482492407;{@inheritDoc}_<p>Delegates given environment to underlying {@link AnnotatedBeanDefinitionReader}_and {@link ClassPathBeanDefinitionScanner} members.;@Override_	public void setEnvironment(ConfigurableEnvironment environment) {_		super.setEnvironment(environment)__		this.reader.setEnvironment(environment)__		this.scanner.setEnvironment(environment)__	};inherit,doc,p,delegates,given,environment,to,underlying,link,annotated,bean,definition,reader,and,link,class,path,bean,definition,scanner,members;override,public,void,set,environment,configurable,environment,environment,super,set,environment,environment,this,reader,set,environment,environment,this,scanner,set,environment,environment
AnnotationConfigApplicationContext -> @Override 	public void setEnvironment(ConfigurableEnvironment environment);1482842304;{@inheritDoc}_<p>Delegates given environment to underlying {@link AnnotatedBeanDefinitionReader}_and {@link ClassPathBeanDefinitionScanner} members.;@Override_	public void setEnvironment(ConfigurableEnvironment environment) {_		super.setEnvironment(environment)__		this.reader.setEnvironment(environment)__		this.scanner.setEnvironment(environment)__	};inherit,doc,p,delegates,given,environment,to,underlying,link,annotated,bean,definition,reader,and,link,class,path,bean,definition,scanner,members;override,public,void,set,environment,configurable,environment,environment,super,set,environment,environment,this,reader,set,environment,environment,this,scanner,set,environment,environment
AnnotationConfigApplicationContext -> @Override 	public void setEnvironment(ConfigurableEnvironment environment);1495868221;{@inheritDoc}_<p>Delegates given environment to underlying {@link AnnotatedBeanDefinitionReader}_and {@link ClassPathBeanDefinitionScanner} members.;@Override_	public void setEnvironment(ConfigurableEnvironment environment) {_		super.setEnvironment(environment)__		this.reader.setEnvironment(environment)__		this.scanner.setEnvironment(environment)__	};inherit,doc,p,delegates,given,environment,to,underlying,link,annotated,bean,definition,reader,and,link,class,path,bean,definition,scanner,members;override,public,void,set,environment,configurable,environment,environment,super,set,environment,environment,this,reader,set,environment,environment,this,scanner,set,environment,environment
AnnotationConfigApplicationContext -> @Override 	public void setEnvironment(ConfigurableEnvironment environment);1496242568;{@inheritDoc}_<p>Delegates given environment to underlying {@link AnnotatedBeanDefinitionReader}_and {@link ClassPathBeanDefinitionScanner} members.;@Override_	public void setEnvironment(ConfigurableEnvironment environment) {_		super.setEnvironment(environment)__		this.reader.setEnvironment(environment)__		this.scanner.setEnvironment(environment)__	};inherit,doc,p,delegates,given,environment,to,underlying,link,annotated,bean,definition,reader,and,link,class,path,bean,definition,scanner,members;override,public,void,set,environment,configurable,environment,environment,super,set,environment,environment,this,reader,set,environment,environment,this,scanner,set,environment,environment
AnnotationConfigApplicationContext -> @Override 	public void setEnvironment(ConfigurableEnvironment environment);1496259743;{@inheritDoc}_<p>Delegates given environment to underlying {@link AnnotatedBeanDefinitionReader}_and {@link ClassPathBeanDefinitionScanner} members.;@Override_	public void setEnvironment(ConfigurableEnvironment environment) {_		super.setEnvironment(environment)__		this.reader.setEnvironment(environment)__		this.scanner.setEnvironment(environment)__	};inherit,doc,p,delegates,given,environment,to,underlying,link,annotated,bean,definition,reader,and,link,class,path,bean,definition,scanner,members;override,public,void,set,environment,configurable,environment,environment,super,set,environment,environment,this,reader,set,environment,environment,this,scanner,set,environment,environment
AnnotationConfigApplicationContext -> @Override 	public void setEnvironment(ConfigurableEnvironment environment);1496263893;{@inheritDoc}_<p>Delegates given environment to underlying {@link AnnotatedBeanDefinitionReader}_and {@link ClassPathBeanDefinitionScanner} members.;@Override_	public void setEnvironment(ConfigurableEnvironment environment) {_		super.setEnvironment(environment)__		this.reader.setEnvironment(environment)__		this.scanner.setEnvironment(environment)__	};inherit,doc,p,delegates,given,environment,to,underlying,link,annotated,bean,definition,reader,and,link,class,path,bean,definition,scanner,members;override,public,void,set,environment,configurable,environment,environment,super,set,environment,environment,this,reader,set,environment,environment,this,scanner,set,environment,environment
AnnotationConfigApplicationContext -> @Override 	public void setEnvironment(ConfigurableEnvironment environment);1496837955;{@inheritDoc}_<p>Delegates given environment to underlying {@link AnnotatedBeanDefinitionReader}_and {@link ClassPathBeanDefinitionScanner} members.;@Override_	public void setEnvironment(ConfigurableEnvironment environment) {_		super.setEnvironment(environment)__		this.reader.setEnvironment(environment)__		this.scanner.setEnvironment(environment)__	};inherit,doc,p,delegates,given,environment,to,underlying,link,annotated,bean,definition,reader,and,link,class,path,bean,definition,scanner,members;override,public,void,set,environment,configurable,environment,environment,super,set,environment,environment,this,reader,set,environment,environment,this,scanner,set,environment,environment
AnnotationConfigApplicationContext -> @Override 	public void setEnvironment(ConfigurableEnvironment environment);1532640050;Propagates the given custom {@code Environment} to the underlying_{@link AnnotatedBeanDefinitionReader} and {@link ClassPathBeanDefinitionScanner}.;@Override_	public void setEnvironment(ConfigurableEnvironment environment) {_		super.setEnvironment(environment)__		this.reader.setEnvironment(environment)__		this.scanner.setEnvironment(environment)__	};propagates,the,given,custom,code,environment,to,the,underlying,link,annotated,bean,definition,reader,and,link,class,path,bean,definition,scanner;override,public,void,set,environment,configurable,environment,environment,super,set,environment,environment,this,reader,set,environment,environment,this,scanner,set,environment,environment
AnnotationConfigApplicationContext -> public <T> void registerBean(String beanName, Class<T> annotatedClass, Object... constructorArguments);1482492407;Register a bean from the given bean class, deriving its metadata from_class-declared annotations, and optionally providing explicit constructor_arguments for consideration in the autowiring process._@param beanName the name of the bean (may be {@code null})_@param annotatedClass the class of the bean_@param constructorArguments argument values to be fed into Spring's_constructor resolution algorithm, resolving either all arguments or just_specific ones, with the rest to be resolved through regular autowiring_(may be {@code null} or empty)_@since 5.0;public <T> void registerBean(String beanName, Class<T> annotatedClass, Object... constructorArguments) {_		this.reader.doRegisterBean(annotatedClass, null, beanName, null,_				bd -> {_					for (Object arg : constructorArguments) {_						bd.getConstructorArgumentValues().addGenericArgumentValue(arg)__					}_				})__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,and,optionally,providing,explicit,constructor,arguments,for,consideration,in,the,autowiring,process,param,bean,name,the,name,of,the,bean,may,be,code,null,param,annotated,class,the,class,of,the,bean,param,constructor,arguments,argument,values,to,be,fed,into,spring,s,constructor,resolution,algorithm,resolving,either,all,arguments,or,just,specific,ones,with,the,rest,to,be,resolved,through,regular,autowiring,may,be,code,null,or,empty,since,5,0;public,t,void,register,bean,string,bean,name,class,t,annotated,class,object,constructor,arguments,this,reader,do,register,bean,annotated,class,null,bean,name,null,bd,for,object,arg,constructor,arguments,bd,get,constructor,argument,values,add,generic,argument,value,arg
AnnotationConfigApplicationContext -> public <T> void registerBean(String beanName, Class<T> annotatedClass, Object... constructorArguments);1482842304;Register a bean from the given bean class, deriving its metadata from_class-declared annotations, and optionally providing explicit constructor_arguments for consideration in the autowiring process._@param beanName the name of the bean (may be {@code null})_@param annotatedClass the class of the bean_@param constructorArguments argument values to be fed into Spring's_constructor resolution algorithm, resolving either all arguments or just_specific ones, with the rest to be resolved through regular autowiring_(may be {@code null} or empty)_@since 5.0;public <T> void registerBean(String beanName, Class<T> annotatedClass, Object... constructorArguments) {_		this.reader.doRegisterBean(annotatedClass, null, beanName, null,_				bd -> {_					for (Object arg : constructorArguments) {_						bd.getConstructorArgumentValues().addGenericArgumentValue(arg)__					}_				})__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,and,optionally,providing,explicit,constructor,arguments,for,consideration,in,the,autowiring,process,param,bean,name,the,name,of,the,bean,may,be,code,null,param,annotated,class,the,class,of,the,bean,param,constructor,arguments,argument,values,to,be,fed,into,spring,s,constructor,resolution,algorithm,resolving,either,all,arguments,or,just,specific,ones,with,the,rest,to,be,resolved,through,regular,autowiring,may,be,code,null,or,empty,since,5,0;public,t,void,register,bean,string,bean,name,class,t,annotated,class,object,constructor,arguments,this,reader,do,register,bean,annotated,class,null,bean,name,null,bd,for,object,arg,constructor,arguments,bd,get,constructor,argument,values,add,generic,argument,value,arg
AnnotationConfigApplicationContext -> public <T> void registerBean(Class<T> annotatedClass, @Nullable Object... constructorArguments);1495868221;Register a bean from the given bean class, deriving its metadata from_class-declared annotations, and optionally providing explicit constructor_arguments for consideration in the autowiring process._<p>The bean name will be generated according to annotated component rules._@param annotatedClass the class of the bean_@param constructorArguments argument values to be fed into Spring's_constructor resolution algorithm, resolving either all arguments or just_specific ones, with the rest to be resolved through regular autowiring_(may be {@code null} or empty)_@since 5.0;public <T> void registerBean(Class<T> annotatedClass, @Nullable Object... constructorArguments) {_		registerBean(null, annotatedClass, constructorArguments)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,and,optionally,providing,explicit,constructor,arguments,for,consideration,in,the,autowiring,process,p,the,bean,name,will,be,generated,according,to,annotated,component,rules,param,annotated,class,the,class,of,the,bean,param,constructor,arguments,argument,values,to,be,fed,into,spring,s,constructor,resolution,algorithm,resolving,either,all,arguments,or,just,specific,ones,with,the,rest,to,be,resolved,through,regular,autowiring,may,be,code,null,or,empty,since,5,0;public,t,void,register,bean,class,t,annotated,class,nullable,object,constructor,arguments,register,bean,null,annotated,class,constructor,arguments
AnnotationConfigApplicationContext -> public <T> void registerBean(Class<T> annotatedClass, @Nullable Object... constructorArguments);1496242568;Register a bean from the given bean class, deriving its metadata from_class-declared annotations, and optionally providing explicit constructor_arguments for consideration in the autowiring process._<p>The bean name will be generated according to annotated component rules._@param annotatedClass the class of the bean_@param constructorArguments argument values to be fed into Spring's_constructor resolution algorithm, resolving either all arguments or just_specific ones, with the rest to be resolved through regular autowiring_(may be {@code null} or empty)_@since 5.0;public <T> void registerBean(Class<T> annotatedClass, @Nullable Object... constructorArguments) {_		registerBean(null, annotatedClass, constructorArguments)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,and,optionally,providing,explicit,constructor,arguments,for,consideration,in,the,autowiring,process,p,the,bean,name,will,be,generated,according,to,annotated,component,rules,param,annotated,class,the,class,of,the,bean,param,constructor,arguments,argument,values,to,be,fed,into,spring,s,constructor,resolution,algorithm,resolving,either,all,arguments,or,just,specific,ones,with,the,rest,to,be,resolved,through,regular,autowiring,may,be,code,null,or,empty,since,5,0;public,t,void,register,bean,class,t,annotated,class,nullable,object,constructor,arguments,register,bean,null,annotated,class,constructor,arguments
AnnotationConfigApplicationContext -> public <T> void registerBean(Class<T> annotatedClass, @Nullable Object... constructorArguments);1496259743;Register a bean from the given bean class, deriving its metadata from_class-declared annotations, and optionally providing explicit constructor_arguments for consideration in the autowiring process._<p>The bean name will be generated according to annotated component rules._@param annotatedClass the class of the bean_@param constructorArguments argument values to be fed into Spring's_constructor resolution algorithm, resolving either all arguments or just_specific ones, with the rest to be resolved through regular autowiring_(may be {@code null} or empty)_@since 5.0;public <T> void registerBean(Class<T> annotatedClass, @Nullable Object... constructorArguments) {_		registerBean(null, annotatedClass, constructorArguments)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,and,optionally,providing,explicit,constructor,arguments,for,consideration,in,the,autowiring,process,p,the,bean,name,will,be,generated,according,to,annotated,component,rules,param,annotated,class,the,class,of,the,bean,param,constructor,arguments,argument,values,to,be,fed,into,spring,s,constructor,resolution,algorithm,resolving,either,all,arguments,or,just,specific,ones,with,the,rest,to,be,resolved,through,regular,autowiring,may,be,code,null,or,empty,since,5,0;public,t,void,register,bean,class,t,annotated,class,nullable,object,constructor,arguments,register,bean,null,annotated,class,constructor,arguments
AnnotationConfigApplicationContext -> public <T> void registerBean(Class<T> annotatedClass, @Nullable Object... constructorArguments);1496263893;Register a bean from the given bean class, deriving its metadata from_class-declared annotations, and optionally providing explicit constructor_arguments for consideration in the autowiring process._<p>The bean name will be generated according to annotated component rules._@param annotatedClass the class of the bean_@param constructorArguments argument values to be fed into Spring's_constructor resolution algorithm, resolving either all arguments or just_specific ones, with the rest to be resolved through regular autowiring_(may be {@code null} or empty)_@since 5.0;public <T> void registerBean(Class<T> annotatedClass, @Nullable Object... constructorArguments) {_		registerBean(null, annotatedClass, constructorArguments)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,and,optionally,providing,explicit,constructor,arguments,for,consideration,in,the,autowiring,process,p,the,bean,name,will,be,generated,according,to,annotated,component,rules,param,annotated,class,the,class,of,the,bean,param,constructor,arguments,argument,values,to,be,fed,into,spring,s,constructor,resolution,algorithm,resolving,either,all,arguments,or,just,specific,ones,with,the,rest,to,be,resolved,through,regular,autowiring,may,be,code,null,or,empty,since,5,0;public,t,void,register,bean,class,t,annotated,class,nullable,object,constructor,arguments,register,bean,null,annotated,class,constructor,arguments
AnnotationConfigApplicationContext -> public void scan(String... basePackages);1328020251;Perform a scan within the specified base packages._Note that {@link #refresh()} must be called in order for the context to_fully process the new class._@param basePackages the packages to check for annotated classes_@see #register(Class...)_@see #refresh();public void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.scanner.scan(basePackages)__	};perform,a,scan,within,the,specified,base,packages,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,param,base,packages,the,packages,to,check,for,annotated,classes,see,register,class,see,refresh;public,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,scanner,scan,base,packages
AnnotationConfigApplicationContext -> public void scan(String... basePackages);1329393628;Perform a scan within the specified base packages._Note that {@link #refresh()} must be called in order for the context to_fully process the new class._@param basePackages the packages to check for annotated classes_@see #register(Class...)_@see #refresh();public void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.scanner.scan(basePackages)__	};perform,a,scan,within,the,specified,base,packages,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,param,base,packages,the,packages,to,check,for,annotated,classes,see,register,class,see,refresh;public,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,scanner,scan,base,packages
AnnotationConfigApplicationContext -> public void scan(String... basePackages);1355279384;Perform a scan within the specified base packages._Note that {@link #refresh()} must be called in order for the context to_fully process the new class._@param basePackages the packages to check for annotated classes_@see #register(Class...)_@see #refresh();public void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.scanner.scan(basePackages)__	};perform,a,scan,within,the,specified,base,packages,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,param,base,packages,the,packages,to,check,for,annotated,classes,see,register,class,see,refresh;public,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,scanner,scan,base,packages
AnnotationConfigApplicationContext -> public void scan(String... basePackages);1367879792;Perform a scan within the specified base packages._Note that {@link #refresh()} must be called in order for the context to_fully process the new class._@param basePackages the packages to check for annotated classes_@see #register(Class...)_@see #refresh();public void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.scanner.scan(basePackages)__	};perform,a,scan,within,the,specified,base,packages,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,param,base,packages,the,packages,to,check,for,annotated,classes,see,register,class,see,refresh;public,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,scanner,scan,base,packages
AnnotationConfigApplicationContext -> public void scan(String... basePackages);1377641093;Perform a scan within the specified base packages._Note that {@link #refresh()} must be called in order for the context to_fully process the new class._@param basePackages the packages to check for annotated classes_@see #register(Class...)_@see #refresh();public void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.scanner.scan(basePackages)__	};perform,a,scan,within,the,specified,base,packages,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,param,base,packages,the,packages,to,check,for,annotated,classes,see,register,class,see,refresh;public,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,scanner,scan,base,packages
AnnotationConfigApplicationContext -> public void scan(String... basePackages);1403775783;Perform a scan within the specified base packages._<p>Note that {@link #refresh()} must be called in order for the context_to fully process the new classes._@param basePackages the packages to check for annotated classes_@see #register(Class...)_@see #refresh();public void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.scanner.scan(basePackages)__	};perform,a,scan,within,the,specified,base,packages,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,base,packages,the,packages,to,check,for,annotated,classes,see,register,class,see,refresh;public,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,scanner,scan,base,packages
AnnotationConfigApplicationContext -> public void scan(String... basePackages);1482260264;Perform a scan within the specified base packages._<p>Note that {@link #refresh()} must be called in order for the context_to fully process the new classes._@param basePackages the packages to check for annotated classes_@see #register(Class...)_@see #refresh();public void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.scanner.scan(basePackages)__	};perform,a,scan,within,the,specified,base,packages,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,base,packages,the,packages,to,check,for,annotated,classes,see,register,class,see,refresh;public,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,scanner,scan,base,packages
AnnotationConfigApplicationContext -> public void scan(String... basePackages);1482492407;Perform a scan within the specified base packages._<p>Note that {@link #refresh()} must be called in order for the context_to fully process the new classes._@param basePackages the packages to check for annotated classes_@see #register(Class...)_@see #refresh();public void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.scanner.scan(basePackages)__	};perform,a,scan,within,the,specified,base,packages,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,base,packages,the,packages,to,check,for,annotated,classes,see,register,class,see,refresh;public,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,scanner,scan,base,packages
AnnotationConfigApplicationContext -> public void scan(String... basePackages);1482842304;Perform a scan within the specified base packages._<p>Note that {@link #refresh()} must be called in order for the context_to fully process the new classes._@param basePackages the packages to check for annotated classes_@see #register(Class...)_@see #refresh();public void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.scanner.scan(basePackages)__	};perform,a,scan,within,the,specified,base,packages,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,base,packages,the,packages,to,check,for,annotated,classes,see,register,class,see,refresh;public,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,scanner,scan,base,packages
AnnotationConfigApplicationContext -> public void scan(String... basePackages);1495868221;Perform a scan within the specified base packages._<p>Note that {@link #refresh()} must be called in order for the context_to fully process the new classes._@param basePackages the packages to check for annotated classes_@see #register(Class...)_@see #refresh();public void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.scanner.scan(basePackages)__	};perform,a,scan,within,the,specified,base,packages,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,base,packages,the,packages,to,check,for,annotated,classes,see,register,class,see,refresh;public,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,scanner,scan,base,packages
AnnotationConfigApplicationContext -> public void scan(String... basePackages);1496242568;Perform a scan within the specified base packages._<p>Note that {@link #refresh()} must be called in order for the context_to fully process the new classes._@param basePackages the packages to check for annotated classes_@see #register(Class...)_@see #refresh();public void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.scanner.scan(basePackages)__	};perform,a,scan,within,the,specified,base,packages,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,base,packages,the,packages,to,check,for,annotated,classes,see,register,class,see,refresh;public,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,scanner,scan,base,packages
AnnotationConfigApplicationContext -> public void scan(String... basePackages);1496259743;Perform a scan within the specified base packages._<p>Note that {@link #refresh()} must be called in order for the context_to fully process the new classes._@param basePackages the packages to check for annotated classes_@see #register(Class...)_@see #refresh();public void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.scanner.scan(basePackages)__	};perform,a,scan,within,the,specified,base,packages,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,base,packages,the,packages,to,check,for,annotated,classes,see,register,class,see,refresh;public,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,scanner,scan,base,packages
AnnotationConfigApplicationContext -> public void scan(String... basePackages);1496263893;Perform a scan within the specified base packages._<p>Note that {@link #refresh()} must be called in order for the context_to fully process the new classes._@param basePackages the packages to check for annotated classes_@see #register(Class...)_@see #refresh();public void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.scanner.scan(basePackages)__	};perform,a,scan,within,the,specified,base,packages,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,base,packages,the,packages,to,check,for,annotated,classes,see,register,class,see,refresh;public,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,scanner,scan,base,packages
AnnotationConfigApplicationContext -> public void scan(String... basePackages);1496837955;Perform a scan within the specified base packages._<p>Note that {@link #refresh()} must be called in order for the context_to fully process the new classes._@param basePackages the packages to check for annotated classes_@see #register(Class...)_@see #refresh();public void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.scanner.scan(basePackages)__	};perform,a,scan,within,the,specified,base,packages,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,base,packages,the,packages,to,check,for,annotated,classes,see,register,class,see,refresh;public,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,scanner,scan,base,packages
AnnotationConfigApplicationContext -> public void scan(String... basePackages);1532640050;Perform a scan within the specified base packages._<p>Note that {@link #refresh()} must be called in order for the context_to fully process the new classes._@param basePackages the packages to check for annotated classes_@see #register(Class...)_@see #refresh();public void scan(String... basePackages) {_		Assert.notEmpty(basePackages, "At least one base package must be specified")__		this.scanner.scan(basePackages)__	};perform,a,scan,within,the,specified,base,packages,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,base,packages,the,packages,to,check,for,annotated,classes,see,register,class,see,refresh;public,void,scan,string,base,packages,assert,not,empty,base,packages,at,least,one,base,package,must,be,specified,this,scanner,scan,base,packages
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(Class<?>... annotatedClasses);1328020251;Create a new AnnotationConfigApplicationContext, deriving bean definitions_from the given annotated classes and automatically refreshing the context._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes;public AnnotationConfigApplicationContext(Class<?>... annotatedClasses) {_		this()__		register(annotatedClasses)__		refresh()__	};create,a,new,annotation,config,application,context,deriving,bean,definitions,from,the,given,annotated,classes,and,automatically,refreshing,the,context,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes;public,annotation,config,application,context,class,annotated,classes,this,register,annotated,classes,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(Class<?>... annotatedClasses);1329393628;Create a new AnnotationConfigApplicationContext, deriving bean definitions_from the given annotated classes and automatically refreshing the context._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes;public AnnotationConfigApplicationContext(Class<?>... annotatedClasses) {_		this()__		register(annotatedClasses)__		refresh()__	};create,a,new,annotation,config,application,context,deriving,bean,definitions,from,the,given,annotated,classes,and,automatically,refreshing,the,context,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes;public,annotation,config,application,context,class,annotated,classes,this,register,annotated,classes,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(Class<?>... annotatedClasses);1355279384;Create a new AnnotationConfigApplicationContext, deriving bean definitions_from the given annotated classes and automatically refreshing the context._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes;public AnnotationConfigApplicationContext(Class<?>... annotatedClasses) {_		this()__		register(annotatedClasses)__		refresh()__	};create,a,new,annotation,config,application,context,deriving,bean,definitions,from,the,given,annotated,classes,and,automatically,refreshing,the,context,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes;public,annotation,config,application,context,class,annotated,classes,this,register,annotated,classes,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(Class<?>... annotatedClasses);1367879792;Create a new AnnotationConfigApplicationContext, deriving bean definitions_from the given annotated classes and automatically refreshing the context._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes;public AnnotationConfigApplicationContext(Class<?>... annotatedClasses) {_		this()__		register(annotatedClasses)__		refresh()__	};create,a,new,annotation,config,application,context,deriving,bean,definitions,from,the,given,annotated,classes,and,automatically,refreshing,the,context,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes;public,annotation,config,application,context,class,annotated,classes,this,register,annotated,classes,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(Class<?>... annotatedClasses);1377641093;Create a new AnnotationConfigApplicationContext, deriving bean definitions_from the given annotated classes and automatically refreshing the context._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes;public AnnotationConfigApplicationContext(Class<?>... annotatedClasses) {_		this()__		register(annotatedClasses)__		refresh()__	};create,a,new,annotation,config,application,context,deriving,bean,definitions,from,the,given,annotated,classes,and,automatically,refreshing,the,context,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes;public,annotation,config,application,context,class,annotated,classes,this,register,annotated,classes,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(Class<?>... annotatedClasses);1403775783;Create a new AnnotationConfigApplicationContext, deriving bean definitions_from the given annotated classes and automatically refreshing the context._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes;public AnnotationConfigApplicationContext(Class<?>... annotatedClasses) {_		this()__		register(annotatedClasses)__		refresh()__	};create,a,new,annotation,config,application,context,deriving,bean,definitions,from,the,given,annotated,classes,and,automatically,refreshing,the,context,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes;public,annotation,config,application,context,class,annotated,classes,this,register,annotated,classes,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(Class<?>... annotatedClasses);1482260264;Create a new AnnotationConfigApplicationContext, deriving bean definitions_from the given annotated classes and automatically refreshing the context._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes;public AnnotationConfigApplicationContext(Class<?>... annotatedClasses) {_		this()__		register(annotatedClasses)__		refresh()__	};create,a,new,annotation,config,application,context,deriving,bean,definitions,from,the,given,annotated,classes,and,automatically,refreshing,the,context,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes;public,annotation,config,application,context,class,annotated,classes,this,register,annotated,classes,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(Class<?>... annotatedClasses);1482492407;Create a new AnnotationConfigApplicationContext, deriving bean definitions_from the given annotated classes and automatically refreshing the context._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes;public AnnotationConfigApplicationContext(Class<?>... annotatedClasses) {_		this()__		register(annotatedClasses)__		refresh()__	};create,a,new,annotation,config,application,context,deriving,bean,definitions,from,the,given,annotated,classes,and,automatically,refreshing,the,context,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes;public,annotation,config,application,context,class,annotated,classes,this,register,annotated,classes,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(Class<?>... annotatedClasses);1482842304;Create a new AnnotationConfigApplicationContext, deriving bean definitions_from the given annotated classes and automatically refreshing the context._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes;public AnnotationConfigApplicationContext(Class<?>... annotatedClasses) {_		this()__		register(annotatedClasses)__		refresh()__	};create,a,new,annotation,config,application,context,deriving,bean,definitions,from,the,given,annotated,classes,and,automatically,refreshing,the,context,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes;public,annotation,config,application,context,class,annotated,classes,this,register,annotated,classes,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(Class<?>... annotatedClasses);1495868221;Create a new AnnotationConfigApplicationContext, deriving bean definitions_from the given annotated classes and automatically refreshing the context._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes;public AnnotationConfigApplicationContext(Class<?>... annotatedClasses) {_		this()__		register(annotatedClasses)__		refresh()__	};create,a,new,annotation,config,application,context,deriving,bean,definitions,from,the,given,annotated,classes,and,automatically,refreshing,the,context,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes;public,annotation,config,application,context,class,annotated,classes,this,register,annotated,classes,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(Class<?>... annotatedClasses);1496242568;Create a new AnnotationConfigApplicationContext, deriving bean definitions_from the given annotated classes and automatically refreshing the context._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes;public AnnotationConfigApplicationContext(Class<?>... annotatedClasses) {_		this()__		register(annotatedClasses)__		refresh()__	};create,a,new,annotation,config,application,context,deriving,bean,definitions,from,the,given,annotated,classes,and,automatically,refreshing,the,context,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes;public,annotation,config,application,context,class,annotated,classes,this,register,annotated,classes,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(Class<?>... annotatedClasses);1496259743;Create a new AnnotationConfigApplicationContext, deriving bean definitions_from the given annotated classes and automatically refreshing the context._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes;public AnnotationConfigApplicationContext(Class<?>... annotatedClasses) {_		this()__		register(annotatedClasses)__		refresh()__	};create,a,new,annotation,config,application,context,deriving,bean,definitions,from,the,given,annotated,classes,and,automatically,refreshing,the,context,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes;public,annotation,config,application,context,class,annotated,classes,this,register,annotated,classes,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(Class<?>... annotatedClasses);1496263893;Create a new AnnotationConfigApplicationContext, deriving bean definitions_from the given annotated classes and automatically refreshing the context._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes;public AnnotationConfigApplicationContext(Class<?>... annotatedClasses) {_		this()__		register(annotatedClasses)__		refresh()__	};create,a,new,annotation,config,application,context,deriving,bean,definitions,from,the,given,annotated,classes,and,automatically,refreshing,the,context,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes;public,annotation,config,application,context,class,annotated,classes,this,register,annotated,classes,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(Class<?>... annotatedClasses);1496837955;Create a new AnnotationConfigApplicationContext, deriving bean definitions_from the given annotated classes and automatically refreshing the context._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes;public AnnotationConfigApplicationContext(Class<?>... annotatedClasses) {_		this()__		register(annotatedClasses)__		refresh()__	};create,a,new,annotation,config,application,context,deriving,bean,definitions,from,the,given,annotated,classes,and,automatically,refreshing,the,context,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes;public,annotation,config,application,context,class,annotated,classes,this,register,annotated,classes,refresh
AnnotationConfigApplicationContext -> public AnnotationConfigApplicationContext(Class<?>... annotatedClasses);1532640050;Create a new AnnotationConfigApplicationContext, deriving bean definitions_from the given annotated classes and automatically refreshing the context._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes;public AnnotationConfigApplicationContext(Class<?>... annotatedClasses) {_		this()__		register(annotatedClasses)__		refresh()__	};create,a,new,annotation,config,application,context,deriving,bean,definitions,from,the,given,annotated,classes,and,automatically,refreshing,the,context,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes;public,annotation,config,application,context,class,annotated,classes,this,register,annotated,classes,refresh
AnnotationConfigApplicationContext -> public void register(Class<?>... annotatedClasses);1328020251;Register one or more annotated classes to be processed._Note that {@link #refresh()} must be called in order for the context to fully_process the new class._<p>Calls to {@link #register} are idempotent_ adding the same_annotated class more than once has no additional effect._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes_@see #scan(String...)_@see #refresh();public void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses, "At least one annotated class must be specified")__		this.reader.register(annotatedClasses)__	};register,one,or,more,annotated,classes,to,be,processed,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,p,calls,to,link,register,are,idempotent,adding,the,same,annotated,class,more,than,once,has,no,additional,effect,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes,see,scan,string,see,refresh;public,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,reader,register,annotated,classes
AnnotationConfigApplicationContext -> public void register(Class<?>... annotatedClasses);1329393628;Register one or more annotated classes to be processed._Note that {@link #refresh()} must be called in order for the context to fully_process the new class._<p>Calls to {@link #register} are idempotent_ adding the same_annotated class more than once has no additional effect._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes_@see #scan(String...)_@see #refresh();public void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses, "At least one annotated class must be specified")__		this.reader.register(annotatedClasses)__	};register,one,or,more,annotated,classes,to,be,processed,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,p,calls,to,link,register,are,idempotent,adding,the,same,annotated,class,more,than,once,has,no,additional,effect,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes,see,scan,string,see,refresh;public,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,reader,register,annotated,classes
AnnotationConfigApplicationContext -> public void register(Class<?>... annotatedClasses);1355279384;Register one or more annotated classes to be processed._Note that {@link #refresh()} must be called in order for the context to fully_process the new class._<p>Calls to {@link #register} are idempotent_ adding the same_annotated class more than once has no additional effect._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes_@see #scan(String...)_@see #refresh();public void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses, "At least one annotated class must be specified")__		this.reader.register(annotatedClasses)__	};register,one,or,more,annotated,classes,to,be,processed,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,p,calls,to,link,register,are,idempotent,adding,the,same,annotated,class,more,than,once,has,no,additional,effect,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes,see,scan,string,see,refresh;public,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,reader,register,annotated,classes
AnnotationConfigApplicationContext -> public void register(Class<?>... annotatedClasses);1367879792;Register one or more annotated classes to be processed._Note that {@link #refresh()} must be called in order for the context to fully_process the new class._<p>Calls to {@link #register} are idempotent_ adding the same_annotated class more than once has no additional effect._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes_@see #scan(String...)_@see #refresh();public void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses, "At least one annotated class must be specified")__		this.reader.register(annotatedClasses)__	};register,one,or,more,annotated,classes,to,be,processed,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,p,calls,to,link,register,are,idempotent,adding,the,same,annotated,class,more,than,once,has,no,additional,effect,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes,see,scan,string,see,refresh;public,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,reader,register,annotated,classes
AnnotationConfigApplicationContext -> public void register(Class<?>... annotatedClasses);1377641093;Register one or more annotated classes to be processed._Note that {@link #refresh()} must be called in order for the context_to fully process the new class._<p>Calls to {@code register} are idempotent_ adding the same_annotated class more than once has no additional effect._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes_@see #scan(String...)_@see #refresh();public void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses, "At least one annotated class must be specified")__		this.reader.register(annotatedClasses)__	};register,one,or,more,annotated,classes,to,be,processed,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,class,p,calls,to,code,register,are,idempotent,adding,the,same,annotated,class,more,than,once,has,no,additional,effect,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes,see,scan,string,see,refresh;public,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,reader,register,annotated,classes
AnnotationConfigApplicationContext -> public void register(Class<?>... annotatedClasses);1403775783;Register one or more annotated classes to be processed._<p>Note that {@link #refresh()} must be called in order for the context_to fully process the new classes._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes_@see #scan(String...)_@see #refresh();public void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses, "At least one annotated class must be specified")__		this.reader.register(annotatedClasses)__	};register,one,or,more,annotated,classes,to,be,processed,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes,see,scan,string,see,refresh;public,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,reader,register,annotated,classes
AnnotationConfigApplicationContext -> public void register(Class<?>... annotatedClasses);1482260264;Register one or more annotated classes to be processed._<p>Note that {@link #refresh()} must be called in order for the context_to fully process the new classes._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes_@see #scan(String...)_@see #refresh();public void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses, "At least one annotated class must be specified")__		this.reader.register(annotatedClasses)__	};register,one,or,more,annotated,classes,to,be,processed,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes,see,scan,string,see,refresh;public,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,reader,register,annotated,classes
AnnotationConfigApplicationContext -> public void register(Class<?>... annotatedClasses);1482492407;Register one or more annotated classes to be processed._<p>Note that {@link #refresh()} must be called in order for the context_to fully process the new classes._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes_@see #scan(String...)_@see #refresh();public void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses, "At least one annotated class must be specified")__		this.reader.register(annotatedClasses)__	};register,one,or,more,annotated,classes,to,be,processed,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes,see,scan,string,see,refresh;public,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,reader,register,annotated,classes
AnnotationConfigApplicationContext -> public void register(Class<?>... annotatedClasses);1482842304;Register one or more annotated classes to be processed._<p>Note that {@link #refresh()} must be called in order for the context_to fully process the new classes._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes_@see #scan(String...)_@see #refresh();public void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses, "At least one annotated class must be specified")__		this.reader.register(annotatedClasses)__	};register,one,or,more,annotated,classes,to,be,processed,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes,see,scan,string,see,refresh;public,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,reader,register,annotated,classes
AnnotationConfigApplicationContext -> public void register(Class<?>... annotatedClasses);1495868221;Register one or more annotated classes to be processed._<p>Note that {@link #refresh()} must be called in order for the context_to fully process the new classes._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes_@see #scan(String...)_@see #refresh();public void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses, "At least one annotated class must be specified")__		this.reader.register(annotatedClasses)__	};register,one,or,more,annotated,classes,to,be,processed,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes,see,scan,string,see,refresh;public,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,reader,register,annotated,classes
AnnotationConfigApplicationContext -> public void register(Class<?>... annotatedClasses);1496242568;Register one or more annotated classes to be processed._<p>Note that {@link #refresh()} must be called in order for the context_to fully process the new classes._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes_@see #scan(String...)_@see #refresh();public void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses, "At least one annotated class must be specified")__		this.reader.register(annotatedClasses)__	};register,one,or,more,annotated,classes,to,be,processed,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes,see,scan,string,see,refresh;public,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,reader,register,annotated,classes
AnnotationConfigApplicationContext -> public void register(Class<?>... annotatedClasses);1496259743;Register one or more annotated classes to be processed._<p>Note that {@link #refresh()} must be called in order for the context_to fully process the new classes._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes_@see #scan(String...)_@see #refresh();public void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses, "At least one annotated class must be specified")__		this.reader.register(annotatedClasses)__	};register,one,or,more,annotated,classes,to,be,processed,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes,see,scan,string,see,refresh;public,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,reader,register,annotated,classes
AnnotationConfigApplicationContext -> public void register(Class<?>... annotatedClasses);1496263893;Register one or more annotated classes to be processed._<p>Note that {@link #refresh()} must be called in order for the context_to fully process the new classes._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes_@see #scan(String...)_@see #refresh();public void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses, "At least one annotated class must be specified")__		this.reader.register(annotatedClasses)__	};register,one,or,more,annotated,classes,to,be,processed,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes,see,scan,string,see,refresh;public,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,reader,register,annotated,classes
AnnotationConfigApplicationContext -> public void register(Class<?>... annotatedClasses);1496837955;Register one or more annotated classes to be processed._<p>Note that {@link #refresh()} must be called in order for the context_to fully process the new classes._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes_@see #scan(String...)_@see #refresh();public void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses, "At least one annotated class must be specified")__		this.reader.register(annotatedClasses)__	};register,one,or,more,annotated,classes,to,be,processed,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes,see,scan,string,see,refresh;public,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,reader,register,annotated,classes
AnnotationConfigApplicationContext -> public void register(Class<?>... annotatedClasses);1532640050;Register one or more annotated classes to be processed._<p>Note that {@link #refresh()} must be called in order for the context_to fully process the new classes._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes_@see #scan(String...)_@see #refresh();public void register(Class<?>... annotatedClasses) {_		Assert.notEmpty(annotatedClasses, "At least one annotated class must be specified")__		this.reader.register(annotatedClasses)__	};register,one,or,more,annotated,classes,to,be,processed,p,note,that,link,refresh,must,be,called,in,order,for,the,context,to,fully,process,the,new,classes,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes,see,scan,string,see,refresh;public,void,register,class,annotated,classes,assert,not,empty,annotated,classes,at,least,one,annotated,class,must,be,specified,this,reader,register,annotated,classes
