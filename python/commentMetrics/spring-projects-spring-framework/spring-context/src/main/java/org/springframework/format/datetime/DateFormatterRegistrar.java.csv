commented;modifiers;parameterAmount;loc;comment;code
true;public;1;4;/**  * Set a global date formatter to register.  * <p>If not specified, no general formatter for non-annotated  * {@link Date} and {@link Calendar} fields will be registered.  */ ;/**  * Set a global date formatter to register.  * <p>If not specified, no general formatter for non-annotated  * {@link Date} and {@link Calendar} fields will be registered.  */ public void setFormatter(DateFormatter dateFormatter) {     Assert.notNull(dateFormatter, "DateFormatter must not be null").     this.dateFormatter = dateFormatter. }
false;public;1;12;;@Override public void registerFormatters(FormatterRegistry registry) {     addDateConverters(registry).     registry.addFormatterForFieldAnnotation(new DateTimeFormatAnnotationFormatterFactory()).     // types when a user defined formatter is specified (see SPR-10105)     if (this.dateFormatter != null) {         registry.addFormatter(this.dateFormatter).         registry.addFormatterForFieldType(Calendar.class, this.dateFormatter).     } }
true;public,static;1;8;/**  * Add date converters to the specified registry.  * @param converterRegistry the registry of converters to add to  */ ;/**  * Add date converters to the specified registry.  * @param converterRegistry the registry of converters to add to  */ public static void addDateConverters(ConverterRegistry converterRegistry) {     converterRegistry.addConverter(new DateToLongConverter()).     converterRegistry.addConverter(new DateToCalendarConverter()).     converterRegistry.addConverter(new CalendarToDateConverter()).     converterRegistry.addConverter(new CalendarToLongConverter()).     converterRegistry.addConverter(new LongToDateConverter()).     converterRegistry.addConverter(new LongToCalendarConverter()). }
false;public;1;4;;@Override public Long convert(Date source) {     return source.getTime(). }
false;public;1;6;;@Override public Calendar convert(Date source) {     Calendar calendar = Calendar.getInstance().     calendar.setTime(source).     return calendar. }
false;public;1;4;;@Override public Date convert(Calendar source) {     return source.getTime(). }
false;public;1;4;;@Override public Long convert(Calendar source) {     return source.getTimeInMillis(). }
false;public;1;4;;@Override public Date convert(Long source) {     return new Date(source). }
false;public;1;6;;@Override public Calendar convert(Long source) {     Calendar calendar = Calendar.getInstance().     calendar.setTimeInMillis(source).     return calendar. }
