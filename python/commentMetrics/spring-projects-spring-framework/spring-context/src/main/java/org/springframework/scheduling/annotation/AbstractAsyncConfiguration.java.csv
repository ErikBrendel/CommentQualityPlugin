commented;modifiers;parameterAmount;loc;comment;code
false;public;1;9;;@Override public void setImportMetadata(AnnotationMetadata importMetadata) {     this.enableAsync = AnnotationAttributes.fromMap(importMetadata.getAnnotationAttributes(EnableAsync.class.getName(), false)).     if (this.enableAsync == null) {         throw new IllegalArgumentException("@EnableAsync is not present on importing class " + importMetadata.getClassName()).     } }
true;;1;12;/**  * Collect any {@link AsyncConfigurer} beans through autowiring.  */ ;/**  * Collect any {@link AsyncConfigurer} beans through autowiring.  */ @Autowired(required = false) void setConfigurers(Collection<AsyncConfigurer> configurers) {     if (CollectionUtils.isEmpty(configurers)) {         return.     }     if (configurers.size() > 1) {         throw new IllegalStateException("Only one AsyncConfigurer may exist").     }     AsyncConfigurer configurer = configurers.iterator().next().     this.executor = configurer::getAsyncExecutor.     this.exceptionHandler = configurer::getAsyncUncaughtExceptionHandler. }
