commented;modifiers;parameterAmount;loc;comment;code
false;public;2;24;;@Override @Nullable public Object postProcessBeforeInitialization(final Object bean, String beanName) throws BeansException {     AccessControlContext acc = null.     if (System.getSecurityManager() != null && (bean instanceof EnvironmentAware || bean instanceof EmbeddedValueResolverAware || bean instanceof ResourceLoaderAware || bean instanceof ApplicationEventPublisherAware || bean instanceof MessageSourceAware || bean instanceof ApplicationContextAware)) {         acc = this.applicationContext.getBeanFactory().getAccessControlContext().     }     if (acc != null) {         AccessController.doPrivileged((PrivilegedAction<Object>) () -> {             invokeAwareInterfaces(bean).             return null.         }, acc).     } else {         invokeAwareInterfaces(bean).     }     return bean. }
false;private;1;22;;private void invokeAwareInterfaces(Object bean) {     if (bean instanceof Aware) {         if (bean instanceof EnvironmentAware) {             ((EnvironmentAware) bean).setEnvironment(this.applicationContext.getEnvironment()).         }         if (bean instanceof EmbeddedValueResolverAware) {             ((EmbeddedValueResolverAware) bean).setEmbeddedValueResolver(this.embeddedValueResolver).         }         if (bean instanceof ResourceLoaderAware) {             ((ResourceLoaderAware) bean).setResourceLoader(this.applicationContext).         }         if (bean instanceof ApplicationEventPublisherAware) {             ((ApplicationEventPublisherAware) bean).setApplicationEventPublisher(this.applicationContext).         }         if (bean instanceof MessageSourceAware) {             ((MessageSourceAware) bean).setMessageSource(this.applicationContext).         }         if (bean instanceof ApplicationContextAware) {             ((ApplicationContextAware) bean).setApplicationContext(this.applicationContext).         }     } }
false;public;2;4;;@Override public Object postProcessAfterInitialization(Object bean, String beanName) {     return bean. }
