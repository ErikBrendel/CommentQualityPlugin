# id;timestamp;commentText;codeText;commentWords;codeWords
DateTimeFormatterFactory -> public DateTimeFormatterFactory();1351987934;Create a new {@link DateTimeFormatterFactory} instance.;public DateTimeFormatterFactory() {_	};create,a,new,link,date,time,formatter,factory,instance;public,date,time,formatter,factory
DateTimeFormatterFactory -> public DateTimeFormatterFactory();1352039846;Create a new {@code DateTimeFormatterFactory} instance.;public DateTimeFormatterFactory() {_	};create,a,new,code,date,time,formatter,factory,instance;public,date,time,formatter,factory
DateTimeFormatterFactory -> public DateTimeFormatterFactory();1352051941;Create a new {@code DateTimeFormatterFactory} instance.;public DateTimeFormatterFactory() {_	};create,a,new,code,date,time,formatter,factory,instance;public,date,time,formatter,factory
DateTimeFormatterFactory -> public DateTimeFormatterFactory();1352143825;Create a new {@code DateTimeFormatterFactory} instance.;public DateTimeFormatterFactory() {_	};create,a,new,code,date,time,formatter,factory,instance;public,date,time,formatter,factory
DateTimeFormatterFactory -> public DateTimeFormatterFactory();1352221652;Create a new {@code DateTimeFormatterFactory} instance.;public DateTimeFormatterFactory() {_	};create,a,new,code,date,time,formatter,factory,instance;public,date,time,formatter,factory
DateTimeFormatterFactory -> public DateTimeFormatterFactory();1354227229;Create a new {@code DateTimeFormatterFactory} instance.;public DateTimeFormatterFactory() {_	};create,a,new,code,date,time,formatter,factory,instance;public,date,time,formatter,factory
DateTimeFormatterFactory -> public DateTimeFormatterFactory();1355313310;Create a new {@code DateTimeFormatterFactory} instance.;public DateTimeFormatterFactory() {_	};create,a,new,code,date,time,formatter,factory,instance;public,date,time,formatter,factory
DateTimeFormatterFactory -> public DateTimeFormatterFactory();1366717825;Create a new {@code DateTimeFormatterFactory} instance.;public DateTimeFormatterFactory() {_	};create,a,new,code,date,time,formatter,factory,instance;public,date,time,formatter,factory
DateTimeFormatterFactory -> public DateTimeFormatterFactory();1495868221;Create a new {@code DateTimeFormatterFactory} instance.;public DateTimeFormatterFactory() {_	};create,a,new,code,date,time,formatter,factory,instance;public,date,time,formatter,factory
DateTimeFormatterFactory -> public DateTimeFormatterFactory();1496837955;Create a new {@code DateTimeFormatterFactory} instance.;public DateTimeFormatterFactory() {_	};create,a,new,code,date,time,formatter,factory,instance;public,date,time,formatter,factory
DateTimeFormatterFactory -> public DateTimeFormatterFactory();1498780456;Create a new {@code DateTimeFormatterFactory} instance.;public DateTimeFormatterFactory() {_	};create,a,new,code,date,time,formatter,factory,instance;public,date,time,formatter,factory
DateTimeFormatterFactory -> public DateTimeFormatter createDateTimeFormatter();1352143825;Create a new {@code DateTimeFormatter} using this factory. If no specific_{@link #setStyle(String) style}, {@link #setIso(ISO) ISO}, or_{@link #setPattern(String) pattern} have been defined the_{@link DateTimeFormat#mediumDateTime() medium date time format} will be used._@return a new date time formatter_@see #getObject()_@see #createDateTimeFormatter(DateTimeFormatter);public DateTimeFormatter createDateTimeFormatter() {_		return createDateTimeFormatter(DateTimeFormat.mediumDateTime())__	};create,a,new,code,date,time,formatter,using,this,factory,if,no,specific,link,set,style,string,style,link,set,iso,iso,iso,or,link,set,pattern,string,pattern,have,been,defined,the,link,date,time,format,medium,date,time,medium,date,time,format,will,be,used,return,a,new,date,time,formatter,see,get,object,see,create,date,time,formatter,date,time,formatter;public,date,time,formatter,create,date,time,formatter,return,create,date,time,formatter,date,time,format,medium,date,time
DateTimeFormatterFactory -> public DateTimeFormatter createDateTimeFormatter();1352221652;Create a new {@code DateTimeFormatter} using this factory. If no specific_{@link #setStyle(String) style}, {@link #setIso(ISO) ISO}, or_{@link #setPattern(String) pattern} have been defined the_{@link DateTimeFormat#mediumDateTime() medium date time format} will be used._@return a new date time formatter_@see #getObject()_@see #createDateTimeFormatter(DateTimeFormatter);public DateTimeFormatter createDateTimeFormatter() {_		return createDateTimeFormatter(DateTimeFormat.mediumDateTime())__	};create,a,new,code,date,time,formatter,using,this,factory,if,no,specific,link,set,style,string,style,link,set,iso,iso,iso,or,link,set,pattern,string,pattern,have,been,defined,the,link,date,time,format,medium,date,time,medium,date,time,format,will,be,used,return,a,new,date,time,formatter,see,get,object,see,create,date,time,formatter,date,time,formatter;public,date,time,formatter,create,date,time,formatter,return,create,date,time,formatter,date,time,format,medium,date,time
DateTimeFormatterFactory -> public DateTimeFormatter createDateTimeFormatter();1354227229;Create a new {@code DateTimeFormatter} using this factory. If no specific_{@link #setStyle(String) style}, {@link #setIso(ISO) ISO}, or_{@link #setPattern(String) pattern} have been defined the_{@link DateTimeFormat#mediumDateTime() medium date time format} will be used._@return a new date time formatter_@see #createDateTimeFormatter(DateTimeFormatter);public DateTimeFormatter createDateTimeFormatter() {_		return createDateTimeFormatter(DateTimeFormat.mediumDateTime())__	};create,a,new,code,date,time,formatter,using,this,factory,if,no,specific,link,set,style,string,style,link,set,iso,iso,iso,or,link,set,pattern,string,pattern,have,been,defined,the,link,date,time,format,medium,date,time,medium,date,time,format,will,be,used,return,a,new,date,time,formatter,see,create,date,time,formatter,date,time,formatter;public,date,time,formatter,create,date,time,formatter,return,create,date,time,formatter,date,time,format,medium,date,time
DateTimeFormatterFactory -> public DateTimeFormatter createDateTimeFormatter();1355313310;Create a new {@code DateTimeFormatter} using this factory. If no specific_{@link #setStyle(String) style}, {@link #setIso ISO}, or_{@link #setPattern(String) pattern} have been defined the_{@link DateTimeFormat#mediumDateTime() medium date time format} will be used._@return a new date time formatter_@see #createDateTimeFormatter(DateTimeFormatter);public DateTimeFormatter createDateTimeFormatter() {_		return createDateTimeFormatter(DateTimeFormat.mediumDateTime())__	};create,a,new,code,date,time,formatter,using,this,factory,if,no,specific,link,set,style,string,style,link,set,iso,iso,or,link,set,pattern,string,pattern,have,been,defined,the,link,date,time,format,medium,date,time,medium,date,time,format,will,be,used,return,a,new,date,time,formatter,see,create,date,time,formatter,date,time,formatter;public,date,time,formatter,create,date,time,formatter,return,create,date,time,formatter,date,time,format,medium,date,time
DateTimeFormatterFactory -> public DateTimeFormatter createDateTimeFormatter();1366717825;Create a new {@code DateTimeFormatter} using this factory._<p>If no specific pattern or style has been defined,_{@link DateTimeFormat#mediumDateTime() medium date time format} will be used._@return a new date time formatter_@see #createDateTimeFormatter(DateTimeFormatter);public DateTimeFormatter createDateTimeFormatter() {_		return createDateTimeFormatter(DateTimeFormat.mediumDateTime())__	};create,a,new,code,date,time,formatter,using,this,factory,p,if,no,specific,pattern,or,style,has,been,defined,link,date,time,format,medium,date,time,medium,date,time,format,will,be,used,return,a,new,date,time,formatter,see,create,date,time,formatter,date,time,formatter;public,date,time,formatter,create,date,time,formatter,return,create,date,time,formatter,date,time,format,medium,date,time
DateTimeFormatterFactory -> public DateTimeFormatter createDateTimeFormatter();1495868221;Create a new {@code DateTimeFormatter} using this factory._<p>If no specific pattern or style has been defined,_{@link DateTimeFormat#mediumDateTime() medium date time format} will be used._@return a new date time formatter_@see #createDateTimeFormatter(DateTimeFormatter);public DateTimeFormatter createDateTimeFormatter() {_		return createDateTimeFormatter(DateTimeFormat.mediumDateTime())__	};create,a,new,code,date,time,formatter,using,this,factory,p,if,no,specific,pattern,or,style,has,been,defined,link,date,time,format,medium,date,time,medium,date,time,format,will,be,used,return,a,new,date,time,formatter,see,create,date,time,formatter,date,time,formatter;public,date,time,formatter,create,date,time,formatter,return,create,date,time,formatter,date,time,format,medium,date,time
DateTimeFormatterFactory -> public DateTimeFormatter createDateTimeFormatter();1496837955;Create a new {@code DateTimeFormatter} using this factory._<p>If no specific pattern or style has been defined,_{@link DateTimeFormat#mediumDateTime() medium date time format} will be used._@return a new date time formatter_@see #createDateTimeFormatter(DateTimeFormatter);public DateTimeFormatter createDateTimeFormatter() {_		return createDateTimeFormatter(DateTimeFormat.mediumDateTime())__	};create,a,new,code,date,time,formatter,using,this,factory,p,if,no,specific,pattern,or,style,has,been,defined,link,date,time,format,medium,date,time,medium,date,time,format,will,be,used,return,a,new,date,time,formatter,see,create,date,time,formatter,date,time,formatter;public,date,time,formatter,create,date,time,formatter,return,create,date,time,formatter,date,time,format,medium,date,time
DateTimeFormatterFactory -> public DateTimeFormatter createDateTimeFormatter();1498780456;Create a new {@code DateTimeFormatter} using this factory._<p>If no specific pattern or style has been defined,_{@link DateTimeFormat#mediumDateTime() medium date time format} will be used._@return a new date time formatter_@see #createDateTimeFormatter(DateTimeFormatter);public DateTimeFormatter createDateTimeFormatter() {_		return createDateTimeFormatter(DateTimeFormat.mediumDateTime())__	};create,a,new,code,date,time,formatter,using,this,factory,p,if,no,specific,pattern,or,style,has,been,defined,link,date,time,format,medium,date,time,medium,date,time,format,will,be,used,return,a,new,date,time,formatter,see,create,date,time,formatter,date,time,formatter;public,date,time,formatter,create,date,time,formatter,return,create,date,time,formatter,date,time,format,medium,date,time
DateTimeFormatterFactory -> public void setIso(ISO iso);1351987934;Set the ISO format used for this date._@param iso the iso format;public void setIso(ISO iso) {_		this.iso = iso__	};set,the,iso,format,used,for,this,date,param,iso,the,iso,format;public,void,set,iso,iso,iso,this,iso,iso
DateTimeFormatterFactory -> public void setIso(ISO iso);1352039846;Set the ISO format used to format date values._@param iso the ISO format;public void setIso(ISO iso) {_		this.iso = iso__	};set,the,iso,format,used,to,format,date,values,param,iso,the,iso,format;public,void,set,iso,iso,iso,this,iso,iso
DateTimeFormatterFactory -> public void setIso(ISO iso);1352051941;Set the ISO format used to format date values._@param iso the ISO format;public void setIso(ISO iso) {_		this.iso = iso__	};set,the,iso,format,used,to,format,date,values,param,iso,the,iso,format;public,void,set,iso,iso,iso,this,iso,iso
DateTimeFormatterFactory -> public void setIso(ISO iso);1352143825;Set the ISO format used to format date values._@param iso the ISO format;public void setIso(ISO iso) {_		this.iso = iso__	};set,the,iso,format,used,to,format,date,values,param,iso,the,iso,format;public,void,set,iso,iso,iso,this,iso,iso
DateTimeFormatterFactory -> public void setIso(ISO iso);1352221652;Set the ISO format used to format date values._@param iso the ISO format;public void setIso(ISO iso) {_		this.iso = iso__	};set,the,iso,format,used,to,format,date,values,param,iso,the,iso,format;public,void,set,iso,iso,iso,this,iso,iso
DateTimeFormatterFactory -> public void setIso(ISO iso);1354227229;Set the ISO format used to format date values._@param iso the ISO format;public void setIso(ISO iso) {_		this.iso = iso__	};set,the,iso,format,used,to,format,date,values,param,iso,the,iso,format;public,void,set,iso,iso,iso,this,iso,iso
DateTimeFormatterFactory -> public void setIso(ISO iso);1355313310;Set the ISO format used to format date values._@param iso the ISO format;public void setIso(ISO iso) {_		this.iso = iso__	};set,the,iso,format,used,to,format,date,values,param,iso,the,iso,format;public,void,set,iso,iso,iso,this,iso,iso
DateTimeFormatterFactory -> public void setIso(ISO iso);1366717825;Set the ISO format used to format date values._@param iso the ISO format;public void setIso(ISO iso) {_		this.iso = iso__	};set,the,iso,format,used,to,format,date,values,param,iso,the,iso,format;public,void,set,iso,iso,iso,this,iso,iso
DateTimeFormatterFactory -> public void setIso(ISO iso);1495868221;Set the ISO format used to format date values._@param iso the ISO format;public void setIso(ISO iso) {_		this.iso = iso__	};set,the,iso,format,used,to,format,date,values,param,iso,the,iso,format;public,void,set,iso,iso,iso,this,iso,iso
DateTimeFormatterFactory -> public void setIso(ISO iso);1496837955;Set the ISO format used to format date values._@param iso the ISO format;public void setIso(ISO iso) {_		this.iso = iso__	};set,the,iso,format,used,to,format,date,values,param,iso,the,iso,format;public,void,set,iso,iso,iso,this,iso,iso
DateTimeFormatterFactory -> public void setIso(ISO iso);1498780456;Set the ISO format used to format date values._@param iso the ISO format;public void setIso(ISO iso) {_		this.iso = iso__	};set,the,iso,format,used,to,format,date,values,param,iso,the,iso,format;public,void,set,iso,iso,iso,this,iso,iso
DateTimeFormatterFactory -> public void setPattern(String pattern);1351987934;Set the pattern to use to format date values._@param pattern the format pattern;public void setPattern(String pattern) {_		this.pattern = pattern__	};set,the,pattern,to,use,to,format,date,values,param,pattern,the,format,pattern;public,void,set,pattern,string,pattern,this,pattern,pattern
DateTimeFormatterFactory -> public void setPattern(String pattern);1352039846;Set the pattern to use to format date values._@param pattern the format pattern;public void setPattern(String pattern) {_		this.pattern = pattern__	};set,the,pattern,to,use,to,format,date,values,param,pattern,the,format,pattern;public,void,set,pattern,string,pattern,this,pattern,pattern
DateTimeFormatterFactory -> public void setPattern(String pattern);1352051941;Set the pattern to use to format date values._@param pattern the format pattern;public void setPattern(String pattern) {_		this.pattern = pattern__	};set,the,pattern,to,use,to,format,date,values,param,pattern,the,format,pattern;public,void,set,pattern,string,pattern,this,pattern,pattern
DateTimeFormatterFactory -> public void setPattern(String pattern);1352143825;Set the pattern to use to format date values._@param pattern the format pattern;public void setPattern(String pattern) {_		this.pattern = pattern__	};set,the,pattern,to,use,to,format,date,values,param,pattern,the,format,pattern;public,void,set,pattern,string,pattern,this,pattern,pattern
DateTimeFormatterFactory -> public void setPattern(String pattern);1352221652;Set the pattern to use to format date values._@param pattern the format pattern;public void setPattern(String pattern) {_		this.pattern = pattern__	};set,the,pattern,to,use,to,format,date,values,param,pattern,the,format,pattern;public,void,set,pattern,string,pattern,this,pattern,pattern
DateTimeFormatterFactory -> public void setPattern(String pattern);1354227229;Set the pattern to use to format date values._@param pattern the format pattern;public void setPattern(String pattern) {_		this.pattern = pattern__	};set,the,pattern,to,use,to,format,date,values,param,pattern,the,format,pattern;public,void,set,pattern,string,pattern,this,pattern,pattern
DateTimeFormatterFactory -> public void setPattern(String pattern);1355313310;Set the pattern to use to format date values._@param pattern the format pattern;public void setPattern(String pattern) {_		this.pattern = pattern__	};set,the,pattern,to,use,to,format,date,values,param,pattern,the,format,pattern;public,void,set,pattern,string,pattern,this,pattern,pattern
DateTimeFormatterFactory -> public void setPattern(String pattern);1366717825;Set the pattern to use to format date values._@param pattern the format pattern;public void setPattern(String pattern) {_		this.pattern = pattern__	};set,the,pattern,to,use,to,format,date,values,param,pattern,the,format,pattern;public,void,set,pattern,string,pattern,this,pattern,pattern
DateTimeFormatterFactory -> public void setPattern(String pattern);1495868221;Set the pattern to use to format date values._@param pattern the format pattern;public void setPattern(String pattern) {_		this.pattern = pattern__	};set,the,pattern,to,use,to,format,date,values,param,pattern,the,format,pattern;public,void,set,pattern,string,pattern,this,pattern,pattern
DateTimeFormatterFactory -> public void setPattern(String pattern);1496837955;Set the pattern to use to format date values._@param pattern the format pattern;public void setPattern(String pattern) {_		this.pattern = pattern__	};set,the,pattern,to,use,to,format,date,values,param,pattern,the,format,pattern;public,void,set,pattern,string,pattern,this,pattern,pattern
DateTimeFormatterFactory -> public void setPattern(String pattern);1498780456;Set the pattern to use to format date values._@param pattern the format pattern;public void setPattern(String pattern) {_		this.pattern = pattern__	};set,the,pattern,to,use,to,format,date,values,param,pattern,the,format,pattern;public,void,set,pattern,string,pattern,this,pattern,pattern
DateTimeFormatterFactory -> public DateTimeFormatterFactory(String pattern);1351987934;Create a new {@link DateTimeFormatterFactory} instance._@param pattern the pattern to use to format date values;public DateTimeFormatterFactory(String pattern) {_		this.pattern = pattern__	};create,a,new,link,date,time,formatter,factory,instance,param,pattern,the,pattern,to,use,to,format,date,values;public,date,time,formatter,factory,string,pattern,this,pattern,pattern
DateTimeFormatterFactory -> public DateTimeFormatterFactory(String pattern);1352039846;Create a new {@code DateTimeFormatterFactory} instance._@param pattern the pattern to use to format date values;public DateTimeFormatterFactory(String pattern) {_		this.pattern = pattern__	};create,a,new,code,date,time,formatter,factory,instance,param,pattern,the,pattern,to,use,to,format,date,values;public,date,time,formatter,factory,string,pattern,this,pattern,pattern
DateTimeFormatterFactory -> public DateTimeFormatterFactory(String pattern);1352051941;Create a new {@code DateTimeFormatterFactory} instance._@param pattern the pattern to use to format date values;public DateTimeFormatterFactory(String pattern) {_		this.pattern = pattern__	};create,a,new,code,date,time,formatter,factory,instance,param,pattern,the,pattern,to,use,to,format,date,values;public,date,time,formatter,factory,string,pattern,this,pattern,pattern
DateTimeFormatterFactory -> public DateTimeFormatterFactory(String pattern);1352143825;Create a new {@code DateTimeFormatterFactory} instance._@param pattern the pattern to use to format date values;public DateTimeFormatterFactory(String pattern) {_		this.pattern = pattern__	};create,a,new,code,date,time,formatter,factory,instance,param,pattern,the,pattern,to,use,to,format,date,values;public,date,time,formatter,factory,string,pattern,this,pattern,pattern
DateTimeFormatterFactory -> public DateTimeFormatterFactory(String pattern);1352221652;Create a new {@code DateTimeFormatterFactory} instance._@param pattern the pattern to use to format date values;public DateTimeFormatterFactory(String pattern) {_		this.pattern = pattern__	};create,a,new,code,date,time,formatter,factory,instance,param,pattern,the,pattern,to,use,to,format,date,values;public,date,time,formatter,factory,string,pattern,this,pattern,pattern
DateTimeFormatterFactory -> public DateTimeFormatterFactory(String pattern);1354227229;Create a new {@code DateTimeFormatterFactory} instance._@param pattern the pattern to use to format date values;public DateTimeFormatterFactory(String pattern) {_		this.pattern = pattern__	};create,a,new,code,date,time,formatter,factory,instance,param,pattern,the,pattern,to,use,to,format,date,values;public,date,time,formatter,factory,string,pattern,this,pattern,pattern
DateTimeFormatterFactory -> public DateTimeFormatterFactory(String pattern);1355313310;Create a new {@code DateTimeFormatterFactory} instance._@param pattern the pattern to use to format date values;public DateTimeFormatterFactory(String pattern) {_		this.pattern = pattern__	};create,a,new,code,date,time,formatter,factory,instance,param,pattern,the,pattern,to,use,to,format,date,values;public,date,time,formatter,factory,string,pattern,this,pattern,pattern
DateTimeFormatterFactory -> public DateTimeFormatterFactory(String pattern);1366717825;Create a new {@code DateTimeFormatterFactory} instance._@param pattern the pattern to use to format date values;public DateTimeFormatterFactory(String pattern) {_		this.pattern = pattern__	};create,a,new,code,date,time,formatter,factory,instance,param,pattern,the,pattern,to,use,to,format,date,values;public,date,time,formatter,factory,string,pattern,this,pattern,pattern
DateTimeFormatterFactory -> public DateTimeFormatterFactory(String pattern);1495868221;Create a new {@code DateTimeFormatterFactory} instance._@param pattern the pattern to use to format date values;public DateTimeFormatterFactory(String pattern) {_		this.pattern = pattern__	};create,a,new,code,date,time,formatter,factory,instance,param,pattern,the,pattern,to,use,to,format,date,values;public,date,time,formatter,factory,string,pattern,this,pattern,pattern
DateTimeFormatterFactory -> public DateTimeFormatterFactory(String pattern);1496837955;Create a new {@code DateTimeFormatterFactory} instance._@param pattern the pattern to use to format date values;public DateTimeFormatterFactory(String pattern) {_		this.pattern = pattern__	};create,a,new,code,date,time,formatter,factory,instance,param,pattern,the,pattern,to,use,to,format,date,values;public,date,time,formatter,factory,string,pattern,this,pattern,pattern
DateTimeFormatterFactory -> public DateTimeFormatterFactory(String pattern);1498780456;Create a new {@code DateTimeFormatterFactory} instance._@param pattern the pattern to use to format date values;public DateTimeFormatterFactory(String pattern) {_		this.pattern = pattern__	};create,a,new,code,date,time,formatter,factory,instance,param,pattern,the,pattern,to,use,to,format,date,values;public,date,time,formatter,factory,string,pattern,this,pattern,pattern
DateTimeFormatterFactory -> public DateTimeFormatter getDateTimeFormatter();1351987934;Get a new DateTimeFormatter using this factory. If no specific_{@link #setStyle(String) style} {@link #setIso(ISO) ISO} or_{@link #setPattern(String) pattern} have been defined the_{@link DateTimeFormat#mediumDateTime() medium date time format} will be used._@return a new date time formatter_@see #getObject()_@see #getDateTimeFormatter(DateTimeFormatter);public DateTimeFormatter getDateTimeFormatter() {_		return getDateTimeFormatter(DateTimeFormat.mediumDateTime())__	};get,a,new,date,time,formatter,using,this,factory,if,no,specific,link,set,style,string,style,link,set,iso,iso,iso,or,link,set,pattern,string,pattern,have,been,defined,the,link,date,time,format,medium,date,time,medium,date,time,format,will,be,used,return,a,new,date,time,formatter,see,get,object,see,get,date,time,formatter,date,time,formatter;public,date,time,formatter,get,date,time,formatter,return,get,date,time,formatter,date,time,format,medium,date,time
DateTimeFormatterFactory -> public DateTimeFormatter getDateTimeFormatter();1352039846;Get a new {@code DateTimeFormatter} using this factory. If no specific_{@link #setStyle(String) style}, {@link #setIso(ISO) ISO}, or_{@link #setPattern(String) pattern} have been defined the_{@link DateTimeFormat#mediumDateTime() medium date time format} will be used._@return a new date time formatter_@see #getObject()_@see #getDateTimeFormatter(DateTimeFormatter);public DateTimeFormatter getDateTimeFormatter() {_		return getDateTimeFormatter(DateTimeFormat.mediumDateTime())__	};get,a,new,code,date,time,formatter,using,this,factory,if,no,specific,link,set,style,string,style,link,set,iso,iso,iso,or,link,set,pattern,string,pattern,have,been,defined,the,link,date,time,format,medium,date,time,medium,date,time,format,will,be,used,return,a,new,date,time,formatter,see,get,object,see,get,date,time,formatter,date,time,formatter;public,date,time,formatter,get,date,time,formatter,return,get,date,time,formatter,date,time,format,medium,date,time
DateTimeFormatterFactory -> public DateTimeFormatter getDateTimeFormatter();1352051941;Get a new {@code DateTimeFormatter} using this factory. If no specific_{@link #setStyle(String) style}, {@link #setIso(ISO) ISO}, or_{@link #setPattern(String) pattern} have been defined the_{@link DateTimeFormat#mediumDateTime() medium date time format} will be used._@return a new date time formatter_@see #getObject()_@see #getDateTimeFormatter(DateTimeFormatter);public DateTimeFormatter getDateTimeFormatter() {_		return getDateTimeFormatter(DateTimeFormat.mediumDateTime())__	};get,a,new,code,date,time,formatter,using,this,factory,if,no,specific,link,set,style,string,style,link,set,iso,iso,iso,or,link,set,pattern,string,pattern,have,been,defined,the,link,date,time,format,medium,date,time,medium,date,time,format,will,be,used,return,a,new,date,time,formatter,see,get,object,see,get,date,time,formatter,date,time,formatter;public,date,time,formatter,get,date,time,formatter,return,get,date,time,formatter,date,time,format,medium,date,time
DateTimeFormatterFactory -> public void setTimeZone(TimeZone timeZone);1351987934;Set the TimeZone to normalize the date values into, if any._@param timeZone the time zone;public void setTimeZone(TimeZone timeZone) {_		this.timeZone = timeZone__	};set,the,time,zone,to,normalize,the,date,values,into,if,any,param,time,zone,the,time,zone;public,void,set,time,zone,time,zone,time,zone,this,time,zone,time,zone
DateTimeFormatterFactory -> public void setTimeZone(TimeZone timeZone);1352039846;Set the {@code TimeZone} to normalize the date values into, if any._@param timeZone the time zone;public void setTimeZone(TimeZone timeZone) {_		this.timeZone = timeZone__	};set,the,code,time,zone,to,normalize,the,date,values,into,if,any,param,time,zone,the,time,zone;public,void,set,time,zone,time,zone,time,zone,this,time,zone,time,zone
DateTimeFormatterFactory -> public void setTimeZone(TimeZone timeZone);1352051941;Set the {@code TimeZone} to normalize the date values into, if any._@param timeZone the time zone;public void setTimeZone(TimeZone timeZone) {_		this.timeZone = timeZone__	};set,the,code,time,zone,to,normalize,the,date,values,into,if,any,param,time,zone,the,time,zone;public,void,set,time,zone,time,zone,time,zone,this,time,zone,time,zone
DateTimeFormatterFactory -> public void setTimeZone(TimeZone timeZone);1352143825;Set the {@code TimeZone} to normalize the date values into, if any._@param timeZone the time zone;public void setTimeZone(TimeZone timeZone) {_		this.timeZone = timeZone__	};set,the,code,time,zone,to,normalize,the,date,values,into,if,any,param,time,zone,the,time,zone;public,void,set,time,zone,time,zone,time,zone,this,time,zone,time,zone
DateTimeFormatterFactory -> public void setTimeZone(TimeZone timeZone);1352221652;Set the {@code TimeZone} to normalize the date values into, if any._@param timeZone the time zone;public void setTimeZone(TimeZone timeZone) {_		this.timeZone = timeZone__	};set,the,code,time,zone,to,normalize,the,date,values,into,if,any,param,time,zone,the,time,zone;public,void,set,time,zone,time,zone,time,zone,this,time,zone,time,zone
DateTimeFormatterFactory -> public void setTimeZone(TimeZone timeZone);1354227229;Set the {@code TimeZone} to normalize the date values into, if any._@param timeZone the time zone;public void setTimeZone(TimeZone timeZone) {_		this.timeZone = timeZone__	};set,the,code,time,zone,to,normalize,the,date,values,into,if,any,param,time,zone,the,time,zone;public,void,set,time,zone,time,zone,time,zone,this,time,zone,time,zone
DateTimeFormatterFactory -> public void setTimeZone(TimeZone timeZone);1355313310;Set the {@code TimeZone} to normalize the date values into, if any._@param timeZone the time zone;public void setTimeZone(TimeZone timeZone) {_		this.timeZone = timeZone__	};set,the,code,time,zone,to,normalize,the,date,values,into,if,any,param,time,zone,the,time,zone;public,void,set,time,zone,time,zone,time,zone,this,time,zone,time,zone
DateTimeFormatterFactory -> public void setTimeZone(TimeZone timeZone);1366717825;Set the {@code TimeZone} to normalize the date values into, if any._@param timeZone the time zone;public void setTimeZone(TimeZone timeZone) {_		this.timeZone = timeZone__	};set,the,code,time,zone,to,normalize,the,date,values,into,if,any,param,time,zone,the,time,zone;public,void,set,time,zone,time,zone,time,zone,this,time,zone,time,zone
DateTimeFormatterFactory -> public void setTimeZone(TimeZone timeZone);1495868221;Set the {@code TimeZone} to normalize the date values into, if any._@param timeZone the time zone;public void setTimeZone(TimeZone timeZone) {_		this.timeZone = timeZone__	};set,the,code,time,zone,to,normalize,the,date,values,into,if,any,param,time,zone,the,time,zone;public,void,set,time,zone,time,zone,time,zone,this,time,zone,time,zone
DateTimeFormatterFactory -> public void setTimeZone(TimeZone timeZone);1496837955;Set the {@code TimeZone} to normalize the date values into, if any._@param timeZone the time zone;public void setTimeZone(TimeZone timeZone) {_		this.timeZone = timeZone__	};set,the,code,time,zone,to,normalize,the,date,values,into,if,any,param,time,zone,the,time,zone;public,void,set,time,zone,time,zone,time,zone,this,time,zone,time,zone
DateTimeFormatterFactory -> public void setTimeZone(TimeZone timeZone);1498780456;Set the {@code TimeZone} to normalize the date values into, if any._@param timeZone the time zone;public void setTimeZone(TimeZone timeZone) {_		this.timeZone = timeZone__	};set,the,code,time,zone,to,normalize,the,date,values,into,if,any,param,time,zone,the,time,zone;public,void,set,time,zone,time,zone,time,zone,this,time,zone,time,zone
DateTimeFormatterFactory -> public void setStyle(String style);1351987934;Set the two character to use to format date values. The first character used for_the date style, the second is for the time style. Supported characters are_<ul>_<li>'S' = Small</li>_<li>'M' = Medium</li>_<li>'L' = Long</li>_<li>'F' = Full</li>_<li>'-' = Omitted</li>_<ul>_This method mimics the styles supported by Joda Time._@param style two characters from the set {"S", "M", "L", "F", "-"};public void setStyle(String style) {_		this.style = style__	};set,the,two,character,to,use,to,format,date,values,the,first,character,used,for,the,date,style,the,second,is,for,the,time,style,supported,characters,are,ul,li,s,small,li,li,m,medium,li,li,l,long,li,li,f,full,li,li,omitted,li,ul,this,method,mimics,the,styles,supported,by,joda,time,param,style,two,characters,from,the,set,s,m,l,f;public,void,set,style,string,style,this,style,style
DateTimeFormatterFactory -> public void setStyle(String style);1352039846;Set the two characters to use to format date values. The first character is used for_the date style_ the second is for the time style. Supported characters are:_<ul>_<li>'S' = Small</li>_<li>'M' = Medium</li>_<li>'L' = Long</li>_<li>'F' = Full</li>_<li>'-' = Omitted</li>_</ul>_<p>This method mimics the styles supported by Joda Time._@param style two characters from the set {"S", "M", "L", "F", "-"};public void setStyle(String style) {_		this.style = style__	};set,the,two,characters,to,use,to,format,date,values,the,first,character,is,used,for,the,date,style,the,second,is,for,the,time,style,supported,characters,are,ul,li,s,small,li,li,m,medium,li,li,l,long,li,li,f,full,li,li,omitted,li,ul,p,this,method,mimics,the,styles,supported,by,joda,time,param,style,two,characters,from,the,set,s,m,l,f;public,void,set,style,string,style,this,style,style
DateTimeFormatterFactory -> public void setStyle(String style);1352051941;Set the two characters to use to format date values. The first character is used for_the date style_ the second is for the time style. Supported characters are:_<ul>_<li>'S' = Small</li>_<li>'M' = Medium</li>_<li>'L' = Long</li>_<li>'F' = Full</li>_<li>'-' = Omitted</li>_</ul>_<p>This method mimics the styles supported by Joda Time._@param style two characters from the set {"S", "M", "L", "F", "-"};public void setStyle(String style) {_		this.style = style__	};set,the,two,characters,to,use,to,format,date,values,the,first,character,is,used,for,the,date,style,the,second,is,for,the,time,style,supported,characters,are,ul,li,s,small,li,li,m,medium,li,li,l,long,li,li,f,full,li,li,omitted,li,ul,p,this,method,mimics,the,styles,supported,by,joda,time,param,style,two,characters,from,the,set,s,m,l,f;public,void,set,style,string,style,this,style,style
DateTimeFormatterFactory -> public void setStyle(String style);1352143825;Set the two characters to use to format date values. The first character is used for_the date style_ the second is for the time style. Supported characters are:_<ul>_<li>'S' = Small</li>_<li>'M' = Medium</li>_<li>'L' = Long</li>_<li>'F' = Full</li>_<li>'-' = Omitted</li>_</ul>_<p>This method mimics the styles supported by Joda Time._@param style two characters from the set {"S", "M", "L", "F", "-"};public void setStyle(String style) {_		this.style = style__	};set,the,two,characters,to,use,to,format,date,values,the,first,character,is,used,for,the,date,style,the,second,is,for,the,time,style,supported,characters,are,ul,li,s,small,li,li,m,medium,li,li,l,long,li,li,f,full,li,li,omitted,li,ul,p,this,method,mimics,the,styles,supported,by,joda,time,param,style,two,characters,from,the,set,s,m,l,f;public,void,set,style,string,style,this,style,style
DateTimeFormatterFactory -> public void setStyle(String style);1352221652;Set the two characters to use to format date values. The first character is used for_the date style_ the second is for the time style. Supported characters are:_<ul>_<li>'S' = Small</li>_<li>'M' = Medium</li>_<li>'L' = Long</li>_<li>'F' = Full</li>_<li>'-' = Omitted</li>_</ul>_<p>This method mimics the styles supported by Joda Time._@param style two characters from the set {"S", "M", "L", "F", "-"};public void setStyle(String style) {_		this.style = style__	};set,the,two,characters,to,use,to,format,date,values,the,first,character,is,used,for,the,date,style,the,second,is,for,the,time,style,supported,characters,are,ul,li,s,small,li,li,m,medium,li,li,l,long,li,li,f,full,li,li,omitted,li,ul,p,this,method,mimics,the,styles,supported,by,joda,time,param,style,two,characters,from,the,set,s,m,l,f;public,void,set,style,string,style,this,style,style
DateTimeFormatterFactory -> public void setStyle(String style);1354227229;Set the two characters to use to format date values. The first character is used for_the date style_ the second is for the time style. Supported characters are:_<ul>_<li>'S' = Small</li>_<li>'M' = Medium</li>_<li>'L' = Long</li>_<li>'F' = Full</li>_<li>'-' = Omitted</li>_</ul>_<p>This method mimics the styles supported by Joda Time._@param style two characters from the set {"S", "M", "L", "F", "-"};public void setStyle(String style) {_		this.style = style__	};set,the,two,characters,to,use,to,format,date,values,the,first,character,is,used,for,the,date,style,the,second,is,for,the,time,style,supported,characters,are,ul,li,s,small,li,li,m,medium,li,li,l,long,li,li,f,full,li,li,omitted,li,ul,p,this,method,mimics,the,styles,supported,by,joda,time,param,style,two,characters,from,the,set,s,m,l,f;public,void,set,style,string,style,this,style,style
DateTimeFormatterFactory -> public void setStyle(String style);1355313310;Set the two characters to use to format date values. The first character is used for_the date style_ the second is for the time style. Supported characters are:_<ul>_<li>'S' = Small</li>_<li>'M' = Medium</li>_<li>'L' = Long</li>_<li>'F' = Full</li>_<li>'-' = Omitted</li>_</ul>_<p>This method mimics the styles supported by Joda Time._@param style two characters from the set {"S", "M", "L", "F", "-"};public void setStyle(String style) {_		this.style = style__	};set,the,two,characters,to,use,to,format,date,values,the,first,character,is,used,for,the,date,style,the,second,is,for,the,time,style,supported,characters,are,ul,li,s,small,li,li,m,medium,li,li,l,long,li,li,f,full,li,li,omitted,li,ul,p,this,method,mimics,the,styles,supported,by,joda,time,param,style,two,characters,from,the,set,s,m,l,f;public,void,set,style,string,style,this,style,style
DateTimeFormatterFactory -> public void setStyle(String style);1366717825;Set the two characters to use to format date values, in Joda-Time style._<p>The first character is used for the date style_ the second is for_the time style. Supported characters are:_<ul>_<li>'S' = Small</li>_<li>'M' = Medium</li>_<li>'L' = Long</li>_<li>'F' = Full</li>_<li>'-' = Omitted</li>_</ul>_@param style two characters from the set {"S", "M", "L", "F", "-"};public void setStyle(String style) {_		this.style = style__	};set,the,two,characters,to,use,to,format,date,values,in,joda,time,style,p,the,first,character,is,used,for,the,date,style,the,second,is,for,the,time,style,supported,characters,are,ul,li,s,small,li,li,m,medium,li,li,l,long,li,li,f,full,li,li,omitted,li,ul,param,style,two,characters,from,the,set,s,m,l,f;public,void,set,style,string,style,this,style,style
DateTimeFormatterFactory -> public void setStyle(String style);1495868221;Set the two characters to use to format date values, in Joda-Time style._<p>The first character is used for the date style_ the second is for_the time style. Supported characters are:_<ul>_<li>'S' = Small</li>_<li>'M' = Medium</li>_<li>'L' = Long</li>_<li>'F' = Full</li>_<li>'-' = Omitted</li>_</ul>_@param style two characters from the set {"S", "M", "L", "F", "-"};public void setStyle(String style) {_		this.style = style__	};set,the,two,characters,to,use,to,format,date,values,in,joda,time,style,p,the,first,character,is,used,for,the,date,style,the,second,is,for,the,time,style,supported,characters,are,ul,li,s,small,li,li,m,medium,li,li,l,long,li,li,f,full,li,li,omitted,li,ul,param,style,two,characters,from,the,set,s,m,l,f;public,void,set,style,string,style,this,style,style
DateTimeFormatterFactory -> public void setStyle(String style);1496837955;Set the two characters to use to format date values, in Joda-Time style._<p>The first character is used for the date style_ the second is for_the time style. Supported characters are:_<ul>_<li>'S' = Small</li>_<li>'M' = Medium</li>_<li>'L' = Long</li>_<li>'F' = Full</li>_<li>'-' = Omitted</li>_</ul>_@param style two characters from the set {"S", "M", "L", "F", "-"};public void setStyle(String style) {_		this.style = style__	};set,the,two,characters,to,use,to,format,date,values,in,joda,time,style,p,the,first,character,is,used,for,the,date,style,the,second,is,for,the,time,style,supported,characters,are,ul,li,s,small,li,li,m,medium,li,li,l,long,li,li,f,full,li,li,omitted,li,ul,param,style,two,characters,from,the,set,s,m,l,f;public,void,set,style,string,style,this,style,style
DateTimeFormatterFactory -> public void setStyle(String style);1498780456;Set the two characters to use to format date values, in Joda-Time style._<p>The first character is used for the date style_ the second is for_the time style. Supported characters are:_<ul>_<li>'S' = Small</li>_<li>'M' = Medium</li>_<li>'L' = Long</li>_<li>'F' = Full</li>_<li>'-' = Omitted</li>_</ul>_@param style two characters from the set {"S", "M", "L", "F", "-"};public void setStyle(String style) {_		this.style = style__	};set,the,two,characters,to,use,to,format,date,values,in,joda,time,style,p,the,first,character,is,used,for,the,date,style,the,second,is,for,the,time,style,supported,characters,are,ul,li,s,small,li,li,m,medium,li,li,l,long,li,li,f,full,li,li,omitted,li,ul,param,style,two,characters,from,the,set,s,m,l,f;public,void,set,style,string,style,this,style,style
DateTimeFormatterFactory -> public DateTimeFormatter getDateTimeFormatter(DateTimeFormatter fallbackFormatter);1351987934;Get a new DateTimeFormatter using this factory. If no specific_{@link #setStyle(String) style} {@link #setIso(ISO) ISO} or_{@link #setPattern(String) pattern} have been defined the specific_{@code fallbackFormatter} will be used._@param fallbackFormatter the fall-back formatter to use when no specific factory_properties have been set (can be {@code null})._@return a new date time formatter;public DateTimeFormatter getDateTimeFormatter(DateTimeFormatter fallbackFormatter) {_		DateTimeFormatter dateTimeFormatter = createDateTimeFormatter()__		if(dateTimeFormatter != null && this.timeZone != null) {_			dateTimeFormatter.withZone(DateTimeZone.forTimeZone(this.timeZone))__		}_		return (dateTimeFormatter != null ? dateTimeFormatter : fallbackFormatter)__	};get,a,new,date,time,formatter,using,this,factory,if,no,specific,link,set,style,string,style,link,set,iso,iso,iso,or,link,set,pattern,string,pattern,have,been,defined,the,specific,code,fallback,formatter,will,be,used,param,fallback,formatter,the,fall,back,formatter,to,use,when,no,specific,factory,properties,have,been,set,can,be,code,null,return,a,new,date,time,formatter;public,date,time,formatter,get,date,time,formatter,date,time,formatter,fallback,formatter,date,time,formatter,date,time,formatter,create,date,time,formatter,if,date,time,formatter,null,this,time,zone,null,date,time,formatter,with,zone,date,time,zone,for,time,zone,this,time,zone,return,date,time,formatter,null,date,time,formatter,fallback,formatter
DateTimeFormatterFactory -> public DateTimeFormatter getDateTimeFormatter(DateTimeFormatter fallbackFormatter);1352039846;Get a new {@code DateTimeFormatter} using this factory. If no specific_{@link #setStyle(String) style}, {@link #setIso(ISO) ISO}, or_{@link #setPattern(String) pattern} have been defined the supplied_{@code fallbackFormatter} will be used._@param fallbackFormatter the fall-back formatter to use when no specific factory_properties have been set (can be {@code null})._@return a new date time formatter;public DateTimeFormatter getDateTimeFormatter(DateTimeFormatter fallbackFormatter) {_		DateTimeFormatter dateTimeFormatter = createDateTimeFormatter()__		if(dateTimeFormatter != null && this.timeZone != null) {_			dateTimeFormatter.withZone(DateTimeZone.forTimeZone(this.timeZone))__		}_		return (dateTimeFormatter != null ? dateTimeFormatter : fallbackFormatter)__	};get,a,new,code,date,time,formatter,using,this,factory,if,no,specific,link,set,style,string,style,link,set,iso,iso,iso,or,link,set,pattern,string,pattern,have,been,defined,the,supplied,code,fallback,formatter,will,be,used,param,fallback,formatter,the,fall,back,formatter,to,use,when,no,specific,factory,properties,have,been,set,can,be,code,null,return,a,new,date,time,formatter;public,date,time,formatter,get,date,time,formatter,date,time,formatter,fallback,formatter,date,time,formatter,date,time,formatter,create,date,time,formatter,if,date,time,formatter,null,this,time,zone,null,date,time,formatter,with,zone,date,time,zone,for,time,zone,this,time,zone,return,date,time,formatter,null,date,time,formatter,fallback,formatter
DateTimeFormatterFactory -> public DateTimeFormatter getDateTimeFormatter(DateTimeFormatter fallbackFormatter);1352051941;Get a new {@code DateTimeFormatter} using this factory. If no specific_{@link #setStyle(String) style}, {@link #setIso(ISO) ISO}, or_{@link #setPattern(String) pattern} have been defined the supplied_{@code fallbackFormatter} will be used._@param fallbackFormatter the fall-back formatter to use when no specific factory_properties have been set (can be {@code null})._@return a new date time formatter;public DateTimeFormatter getDateTimeFormatter(DateTimeFormatter fallbackFormatter) {_		DateTimeFormatter dateTimeFormatter = createDateTimeFormatter()__		if(dateTimeFormatter != null && this.timeZone != null) {_			dateTimeFormatter = dateTimeFormatter.withZone(DateTimeZone.forTimeZone(this.timeZone))__		}_		return (dateTimeFormatter != null ? dateTimeFormatter : fallbackFormatter)__	};get,a,new,code,date,time,formatter,using,this,factory,if,no,specific,link,set,style,string,style,link,set,iso,iso,iso,or,link,set,pattern,string,pattern,have,been,defined,the,supplied,code,fallback,formatter,will,be,used,param,fallback,formatter,the,fall,back,formatter,to,use,when,no,specific,factory,properties,have,been,set,can,be,code,null,return,a,new,date,time,formatter;public,date,time,formatter,get,date,time,formatter,date,time,formatter,fallback,formatter,date,time,formatter,date,time,formatter,create,date,time,formatter,if,date,time,formatter,null,this,time,zone,null,date,time,formatter,date,time,formatter,with,zone,date,time,zone,for,time,zone,this,time,zone,return,date,time,formatter,null,date,time,formatter,fallback,formatter
DateTimeFormatterFactory -> public DateTimeFormatter createDateTimeFormatter(DateTimeFormatter fallbackFormatter);1352143825;Create a new {@code DateTimeFormatter} using this factory. If no specific_{@link #setStyle(String) style}, {@link #setIso(ISO) ISO}, or_{@link #setPattern(String) pattern} have been defined the supplied_{@code fallbackFormatter} will be used._@param fallbackFormatter the fall-back formatter to use when no specific factory_properties have been set (can be {@code null})._@return a new date time formatter;public DateTimeFormatter createDateTimeFormatter(DateTimeFormatter fallbackFormatter) {_		DateTimeFormatter dateTimeFormatter = null__		if (StringUtils.hasLength(pattern)) {_			dateTimeFormatter = DateTimeFormat.forPattern(pattern)__		}_		else if (iso != null && iso != ISO.NONE) {_			if (iso == ISO.DATE) {_				dateTimeFormatter = ISODateTimeFormat.date()__			}_			else if (iso == ISO.TIME) {_				dateTimeFormatter = ISODateTimeFormat.time()__			}_			else {_				dateTimeFormatter = ISODateTimeFormat.dateTime()__			}_		}_		else if (StringUtils.hasLength(style)) {_			dateTimeFormatter = DateTimeFormat.forStyle(style)__		}__		if (dateTimeFormatter != null && this.timeZone != null) {_			dateTimeFormatter = dateTimeFormatter.withZone(DateTimeZone.forTimeZone(this.timeZone))__		}_		return (dateTimeFormatter != null ? dateTimeFormatter : fallbackFormatter)__	};create,a,new,code,date,time,formatter,using,this,factory,if,no,specific,link,set,style,string,style,link,set,iso,iso,iso,or,link,set,pattern,string,pattern,have,been,defined,the,supplied,code,fallback,formatter,will,be,used,param,fallback,formatter,the,fall,back,formatter,to,use,when,no,specific,factory,properties,have,been,set,can,be,code,null,return,a,new,date,time,formatter;public,date,time,formatter,create,date,time,formatter,date,time,formatter,fallback,formatter,date,time,formatter,date,time,formatter,null,if,string,utils,has,length,pattern,date,time,formatter,date,time,format,for,pattern,pattern,else,if,iso,null,iso,iso,none,if,iso,iso,date,date,time,formatter,isodate,time,format,date,else,if,iso,iso,time,date,time,formatter,isodate,time,format,time,else,date,time,formatter,isodate,time,format,date,time,else,if,string,utils,has,length,style,date,time,formatter,date,time,format,for,style,style,if,date,time,formatter,null,this,time,zone,null,date,time,formatter,date,time,formatter,with,zone,date,time,zone,for,time,zone,this,time,zone,return,date,time,formatter,null,date,time,formatter,fallback,formatter
DateTimeFormatterFactory -> public DateTimeFormatter createDateTimeFormatter(DateTimeFormatter fallbackFormatter);1352221652;Create a new {@code DateTimeFormatter} using this factory. If no specific_{@link #setStyle(String) style}, {@link #setIso(ISO) ISO}, or_{@link #setPattern(String) pattern} have been defined the supplied_{@code fallbackFormatter} will be used._@param fallbackFormatter the fall-back formatter to use when no specific factory_properties have been set (can be {@code null})._@return a new date time formatter;public DateTimeFormatter createDateTimeFormatter(DateTimeFormatter fallbackFormatter) {_		DateTimeFormatter dateTimeFormatter = null__		if (StringUtils.hasLength(pattern)) {_			dateTimeFormatter = DateTimeFormat.forPattern(pattern)__		}_		else if (iso != null && iso != ISO.NONE) {_			switch (iso) {_				case DATE:_					dateTimeFormatter = ISODateTimeFormat.date()__					break__				case TIME:_					dateTimeFormatter = ISODateTimeFormat.time()__					break__				case DATE_TIME:_					dateTimeFormatter = ISODateTimeFormat.dateTime()__					break__				case NONE:_					_					break__				default:_					throw new IllegalStateException("Unsupported ISO format: " + iso)__			}_		}_		else if (StringUtils.hasLength(style)) {_			dateTimeFormatter = DateTimeFormat.forStyle(style)__		}__		if (dateTimeFormatter != null && this.timeZone != null) {_			dateTimeFormatter = dateTimeFormatter.withZone(DateTimeZone.forTimeZone(this.timeZone))__		}_		return (dateTimeFormatter != null ? dateTimeFormatter : fallbackFormatter)__	};create,a,new,code,date,time,formatter,using,this,factory,if,no,specific,link,set,style,string,style,link,set,iso,iso,iso,or,link,set,pattern,string,pattern,have,been,defined,the,supplied,code,fallback,formatter,will,be,used,param,fallback,formatter,the,fall,back,formatter,to,use,when,no,specific,factory,properties,have,been,set,can,be,code,null,return,a,new,date,time,formatter;public,date,time,formatter,create,date,time,formatter,date,time,formatter,fallback,formatter,date,time,formatter,date,time,formatter,null,if,string,utils,has,length,pattern,date,time,formatter,date,time,format,for,pattern,pattern,else,if,iso,null,iso,iso,none,switch,iso,case,date,date,time,formatter,isodate,time,format,date,break,case,time,date,time,formatter,isodate,time,format,time,break,case,date,time,formatter,isodate,time,format,date,time,break,case,none,break,default,throw,new,illegal,state,exception,unsupported,iso,format,iso,else,if,string,utils,has,length,style,date,time,formatter,date,time,format,for,style,style,if,date,time,formatter,null,this,time,zone,null,date,time,formatter,date,time,formatter,with,zone,date,time,zone,for,time,zone,this,time,zone,return,date,time,formatter,null,date,time,formatter,fallback,formatter
DateTimeFormatterFactory -> public DateTimeFormatter createDateTimeFormatter(DateTimeFormatter fallbackFormatter);1354227229;Create a new {@code DateTimeFormatter} using this factory. If no specific_{@link #setStyle(String) style}, {@link #setIso(ISO) ISO}, or_{@link #setPattern(String) pattern} have been defined the supplied_{@code fallbackFormatter} will be used._@param fallbackFormatter the fall-back formatter to use when no specific factory_properties have been set (can be {@code null})._@return a new date time formatter;public DateTimeFormatter createDateTimeFormatter(DateTimeFormatter fallbackFormatter) {_		DateTimeFormatter dateTimeFormatter = null__		if (StringUtils.hasLength(pattern)) {_			dateTimeFormatter = DateTimeFormat.forPattern(pattern)__		}_		else if (iso != null && iso != ISO.NONE) {_			switch (iso) {_				case DATE:_					dateTimeFormatter = ISODateTimeFormat.date()__					break__				case TIME:_					dateTimeFormatter = ISODateTimeFormat.time()__					break__				case DATE_TIME:_					dateTimeFormatter = ISODateTimeFormat.dateTime()__					break__				case NONE:_					_					break__				default:_					throw new IllegalStateException("Unsupported ISO format: " + iso)__			}_		}_		else if (StringUtils.hasLength(style)) {_			dateTimeFormatter = DateTimeFormat.forStyle(style)__		}__		if (dateTimeFormatter != null && this.timeZone != null) {_			dateTimeFormatter = dateTimeFormatter.withZone(DateTimeZone.forTimeZone(this.timeZone))__		}_		return (dateTimeFormatter != null ? dateTimeFormatter : fallbackFormatter)__	};create,a,new,code,date,time,formatter,using,this,factory,if,no,specific,link,set,style,string,style,link,set,iso,iso,iso,or,link,set,pattern,string,pattern,have,been,defined,the,supplied,code,fallback,formatter,will,be,used,param,fallback,formatter,the,fall,back,formatter,to,use,when,no,specific,factory,properties,have,been,set,can,be,code,null,return,a,new,date,time,formatter;public,date,time,formatter,create,date,time,formatter,date,time,formatter,fallback,formatter,date,time,formatter,date,time,formatter,null,if,string,utils,has,length,pattern,date,time,formatter,date,time,format,for,pattern,pattern,else,if,iso,null,iso,iso,none,switch,iso,case,date,date,time,formatter,isodate,time,format,date,break,case,time,date,time,formatter,isodate,time,format,time,break,case,date,time,formatter,isodate,time,format,date,time,break,case,none,break,default,throw,new,illegal,state,exception,unsupported,iso,format,iso,else,if,string,utils,has,length,style,date,time,formatter,date,time,format,for,style,style,if,date,time,formatter,null,this,time,zone,null,date,time,formatter,date,time,formatter,with,zone,date,time,zone,for,time,zone,this,time,zone,return,date,time,formatter,null,date,time,formatter,fallback,formatter
DateTimeFormatterFactory -> public DateTimeFormatter createDateTimeFormatter(DateTimeFormatter fallbackFormatter);1355313310;Create a new {@code DateTimeFormatter} using this factory. If no specific_{@link #setStyle(String) style}, {@link #setIso ISO}, or_{@link #setPattern(String) pattern} have been defined the supplied_{@code fallbackFormatter} will be used._@param fallbackFormatter the fall-back formatter to use when no specific factory_properties have been set (can be {@code null})._@return a new date time formatter;public DateTimeFormatter createDateTimeFormatter(DateTimeFormatter fallbackFormatter) {_		DateTimeFormatter dateTimeFormatter = null__		if (StringUtils.hasLength(pattern)) {_			dateTimeFormatter = DateTimeFormat.forPattern(pattern)__		}_		else if (iso != null && iso != ISO.NONE) {_			switch (iso) {_				case DATE:_					dateTimeFormatter = ISODateTimeFormat.date()__					break__				case TIME:_					dateTimeFormatter = ISODateTimeFormat.time()__					break__				case DATE_TIME:_					dateTimeFormatter = ISODateTimeFormat.dateTime()__					break__				case NONE:_					_					break__				default:_					throw new IllegalStateException("Unsupported ISO format: " + iso)__			}_		}_		else if (StringUtils.hasLength(style)) {_			dateTimeFormatter = DateTimeFormat.forStyle(style)__		}__		if (dateTimeFormatter != null && this.timeZone != null) {_			dateTimeFormatter = dateTimeFormatter.withZone(DateTimeZone.forTimeZone(this.timeZone))__		}_		return (dateTimeFormatter != null ? dateTimeFormatter : fallbackFormatter)__	};create,a,new,code,date,time,formatter,using,this,factory,if,no,specific,link,set,style,string,style,link,set,iso,iso,or,link,set,pattern,string,pattern,have,been,defined,the,supplied,code,fallback,formatter,will,be,used,param,fallback,formatter,the,fall,back,formatter,to,use,when,no,specific,factory,properties,have,been,set,can,be,code,null,return,a,new,date,time,formatter;public,date,time,formatter,create,date,time,formatter,date,time,formatter,fallback,formatter,date,time,formatter,date,time,formatter,null,if,string,utils,has,length,pattern,date,time,formatter,date,time,format,for,pattern,pattern,else,if,iso,null,iso,iso,none,switch,iso,case,date,date,time,formatter,isodate,time,format,date,break,case,time,date,time,formatter,isodate,time,format,time,break,case,date,time,formatter,isodate,time,format,date,time,break,case,none,break,default,throw,new,illegal,state,exception,unsupported,iso,format,iso,else,if,string,utils,has,length,style,date,time,formatter,date,time,format,for,style,style,if,date,time,formatter,null,this,time,zone,null,date,time,formatter,date,time,formatter,with,zone,date,time,zone,for,time,zone,this,time,zone,return,date,time,formatter,null,date,time,formatter,fallback,formatter
DateTimeFormatterFactory -> public DateTimeFormatter createDateTimeFormatter(DateTimeFormatter fallbackFormatter);1366717825;Create a new {@code DateTimeFormatter} using this factory._<p>If no specific pattern or style has been defined,_the supplied {@code fallbackFormatter} will be used._@param fallbackFormatter the fall-back formatter to use when no specific_factory properties have been set (can be {@code null})._@return a new date time formatter;public DateTimeFormatter createDateTimeFormatter(DateTimeFormatter fallbackFormatter) {_		DateTimeFormatter dateTimeFormatter = null__		if (StringUtils.hasLength(this.pattern)) {_			dateTimeFormatter = DateTimeFormat.forPattern(this.pattern)__		}_		else if (this.iso != null && this.iso != ISO.NONE) {_			switch (this.iso) {_				case DATE:_					dateTimeFormatter = ISODateTimeFormat.date()__					break__				case TIME:_					dateTimeFormatter = ISODateTimeFormat.time()__					break__				case DATE_TIME:_					dateTimeFormatter = ISODateTimeFormat.dateTime()__					break__				case NONE:_					_					break__				default:_					throw new IllegalStateException("Unsupported ISO format: " + this.iso)__			}_		}_		else if (StringUtils.hasLength(this.style)) {_			dateTimeFormatter = DateTimeFormat.forStyle(this.style)__		}__		if (dateTimeFormatter != null && this.timeZone != null) {_			dateTimeFormatter = dateTimeFormatter.withZone(DateTimeZone.forTimeZone(this.timeZone))__		}_		return (dateTimeFormatter != null ? dateTimeFormatter : fallbackFormatter)__	};create,a,new,code,date,time,formatter,using,this,factory,p,if,no,specific,pattern,or,style,has,been,defined,the,supplied,code,fallback,formatter,will,be,used,param,fallback,formatter,the,fall,back,formatter,to,use,when,no,specific,factory,properties,have,been,set,can,be,code,null,return,a,new,date,time,formatter;public,date,time,formatter,create,date,time,formatter,date,time,formatter,fallback,formatter,date,time,formatter,date,time,formatter,null,if,string,utils,has,length,this,pattern,date,time,formatter,date,time,format,for,pattern,this,pattern,else,if,this,iso,null,this,iso,iso,none,switch,this,iso,case,date,date,time,formatter,isodate,time,format,date,break,case,time,date,time,formatter,isodate,time,format,time,break,case,date,time,formatter,isodate,time,format,date,time,break,case,none,break,default,throw,new,illegal,state,exception,unsupported,iso,format,this,iso,else,if,string,utils,has,length,this,style,date,time,formatter,date,time,format,for,style,this,style,if,date,time,formatter,null,this,time,zone,null,date,time,formatter,date,time,formatter,with,zone,date,time,zone,for,time,zone,this,time,zone,return,date,time,formatter,null,date,time,formatter,fallback,formatter
DateTimeFormatterFactory -> public DateTimeFormatter createDateTimeFormatter(DateTimeFormatter fallbackFormatter);1496837955;Create a new {@code DateTimeFormatter} using this factory._<p>If no specific pattern or style has been defined,_the supplied {@code fallbackFormatter} will be used._@param fallbackFormatter the fall-back formatter to use_when no specific factory properties have been set_@return a new date time formatter;public DateTimeFormatter createDateTimeFormatter(DateTimeFormatter fallbackFormatter) {_		DateTimeFormatter dateTimeFormatter = null__		if (StringUtils.hasLength(this.pattern)) {_			dateTimeFormatter = DateTimeFormat.forPattern(this.pattern)__		}_		else if (this.iso != null && this.iso != ISO.NONE) {_			switch (this.iso) {_				case DATE:_					dateTimeFormatter = ISODateTimeFormat.date()__					break__				case TIME:_					dateTimeFormatter = ISODateTimeFormat.time()__					break__				case DATE_TIME:_					dateTimeFormatter = ISODateTimeFormat.dateTime()__					break__				default:_					throw new IllegalStateException("Unsupported ISO format: " + this.iso)__			}_		}_		else if (StringUtils.hasLength(this.style)) {_			dateTimeFormatter = DateTimeFormat.forStyle(this.style)__		}__		if (dateTimeFormatter != null && this.timeZone != null) {_			dateTimeFormatter = dateTimeFormatter.withZone(DateTimeZone.forTimeZone(this.timeZone))__		}_		return (dateTimeFormatter != null ? dateTimeFormatter : fallbackFormatter)__	};create,a,new,code,date,time,formatter,using,this,factory,p,if,no,specific,pattern,or,style,has,been,defined,the,supplied,code,fallback,formatter,will,be,used,param,fallback,formatter,the,fall,back,formatter,to,use,when,no,specific,factory,properties,have,been,set,return,a,new,date,time,formatter;public,date,time,formatter,create,date,time,formatter,date,time,formatter,fallback,formatter,date,time,formatter,date,time,formatter,null,if,string,utils,has,length,this,pattern,date,time,formatter,date,time,format,for,pattern,this,pattern,else,if,this,iso,null,this,iso,iso,none,switch,this,iso,case,date,date,time,formatter,isodate,time,format,date,break,case,time,date,time,formatter,isodate,time,format,time,break,case,date,time,formatter,isodate,time,format,date,time,break,default,throw,new,illegal,state,exception,unsupported,iso,format,this,iso,else,if,string,utils,has,length,this,style,date,time,formatter,date,time,format,for,style,this,style,if,date,time,formatter,null,this,time,zone,null,date,time,formatter,date,time,formatter,with,zone,date,time,zone,for,time,zone,this,time,zone,return,date,time,formatter,null,date,time,formatter,fallback,formatter
DateTimeFormatterFactory -> public DateTimeFormatter createDateTimeFormatter(DateTimeFormatter fallbackFormatter);1498780456;Create a new {@code DateTimeFormatter} using this factory._<p>If no specific pattern or style has been defined,_the supplied {@code fallbackFormatter} will be used._@param fallbackFormatter the fall-back formatter to use_when no specific factory properties have been set_@return a new date time formatter;public DateTimeFormatter createDateTimeFormatter(DateTimeFormatter fallbackFormatter) {_		DateTimeFormatter dateTimeFormatter = null__		if (StringUtils.hasLength(this.pattern)) {_			dateTimeFormatter = DateTimeFormat.forPattern(this.pattern)__		}_		else if (this.iso != null && this.iso != ISO.NONE) {_			switch (this.iso) {_				case DATE:_					dateTimeFormatter = ISODateTimeFormat.date()__					break__				case TIME:_					dateTimeFormatter = ISODateTimeFormat.time()__					break__				case DATE_TIME:_					dateTimeFormatter = ISODateTimeFormat.dateTime()__					break__				default:_					throw new IllegalStateException("Unsupported ISO format: " + this.iso)__			}_		}_		else if (StringUtils.hasLength(this.style)) {_			dateTimeFormatter = DateTimeFormat.forStyle(this.style)__		}__		if (dateTimeFormatter != null && this.timeZone != null) {_			dateTimeFormatter = dateTimeFormatter.withZone(DateTimeZone.forTimeZone(this.timeZone))__		}_		return (dateTimeFormatter != null ? dateTimeFormatter : fallbackFormatter)__	};create,a,new,code,date,time,formatter,using,this,factory,p,if,no,specific,pattern,or,style,has,been,defined,the,supplied,code,fallback,formatter,will,be,used,param,fallback,formatter,the,fall,back,formatter,to,use,when,no,specific,factory,properties,have,been,set,return,a,new,date,time,formatter;public,date,time,formatter,create,date,time,formatter,date,time,formatter,fallback,formatter,date,time,formatter,date,time,formatter,null,if,string,utils,has,length,this,pattern,date,time,formatter,date,time,format,for,pattern,this,pattern,else,if,this,iso,null,this,iso,iso,none,switch,this,iso,case,date,date,time,formatter,isodate,time,format,date,break,case,time,date,time,formatter,isodate,time,format,time,break,case,date,time,formatter,isodate,time,format,date,time,break,default,throw,new,illegal,state,exception,unsupported,iso,format,this,iso,else,if,string,utils,has,length,this,style,date,time,formatter,date,time,format,for,style,this,style,if,date,time,formatter,null,this,time,zone,null,date,time,formatter,date,time,formatter,with,zone,date,time,zone,for,time,zone,this,time,zone,return,date,time,formatter,null,date,time,formatter,fallback,formatter
