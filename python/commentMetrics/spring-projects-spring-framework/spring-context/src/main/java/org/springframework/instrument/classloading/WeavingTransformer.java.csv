# id;timestamp;commentText;codeText;commentWords;codeWords
WeavingTransformer -> public WeavingTransformer(@Nullable ClassLoader classLoader);1496837955;Create a new WeavingTransformer for the given class loader._@param classLoader the ClassLoader to build a transformer for;public WeavingTransformer(@Nullable ClassLoader classLoader) {_		this.classLoader = classLoader__	};create,a,new,weaving,transformer,for,the,given,class,loader,param,class,loader,the,class,loader,to,build,a,transformer,for;public,weaving,transformer,nullable,class,loader,class,loader,this,class,loader,class,loader
WeavingTransformer -> public WeavingTransformer(@Nullable ClassLoader classLoader);1498780456;Create a new WeavingTransformer for the given class loader._@param classLoader the ClassLoader to build a transformer for;public WeavingTransformer(@Nullable ClassLoader classLoader) {_		this.classLoader = classLoader__	};create,a,new,weaving,transformer,for,the,given,class,loader,param,class,loader,the,class,loader,to,build,a,transformer,for;public,weaving,transformer,nullable,class,loader,class,loader,this,class,loader,class,loader
WeavingTransformer -> public WeavingTransformer(@Nullable ClassLoader classLoader);1537186939;Create a new WeavingTransformer for the given class loader._@param classLoader the ClassLoader to build a transformer for;public WeavingTransformer(@Nullable ClassLoader classLoader) {_		this.classLoader = classLoader__	};create,a,new,weaving,transformer,for,the,given,class,loader,param,class,loader,the,class,loader,to,build,a,transformer,for;public,weaving,transformer,nullable,class,loader,class,loader,this,class,loader,class,loader
WeavingTransformer -> public WeavingTransformer(ClassLoader classLoader);1328020251;Create a new WeavingTransformer for the given class loader._@param classLoader the ClassLoader to build a transformer for;public WeavingTransformer(ClassLoader classLoader) {_		if (classLoader == null) {_			throw new IllegalArgumentException("ClassLoader must not be null")__		}_		this.classLoader = classLoader__	};create,a,new,weaving,transformer,for,the,given,class,loader,param,class,loader,the,class,loader,to,build,a,transformer,for;public,weaving,transformer,class,loader,class,loader,if,class,loader,null,throw,new,illegal,argument,exception,class,loader,must,not,be,null,this,class,loader,class,loader
WeavingTransformer -> public WeavingTransformer(ClassLoader classLoader);1467730834;Create a new WeavingTransformer for the given class loader._@param classLoader the ClassLoader to build a transformer for;public WeavingTransformer(ClassLoader classLoader) {_		if (classLoader == null) {_			throw new IllegalArgumentException("ClassLoader must not be null")__		}_		this.classLoader = classLoader__	};create,a,new,weaving,transformer,for,the,given,class,loader,param,class,loader,the,class,loader,to,build,a,transformer,for;public,weaving,transformer,class,loader,class,loader,if,class,loader,null,throw,new,illegal,argument,exception,class,loader,must,not,be,null,this,class,loader,class,loader
WeavingTransformer -> public WeavingTransformer(ClassLoader classLoader);1496259743;Create a new WeavingTransformer for the given class loader._@param classLoader the ClassLoader to build a transformer for;public WeavingTransformer(ClassLoader classLoader) {_		if (classLoader == null) {_			throw new IllegalArgumentException("ClassLoader must not be null")__		}_		this.classLoader = classLoader__	};create,a,new,weaving,transformer,for,the,given,class,loader,param,class,loader,the,class,loader,to,build,a,transformer,for;public,weaving,transformer,class,loader,class,loader,if,class,loader,null,throw,new,illegal,argument,exception,class,loader,must,not,be,null,this,class,loader,class,loader
WeavingTransformer -> public byte[] transformIfNecessary(String className, byte[] bytes);1328020251;Apply transformation on a given class byte definition._The method will always return a non-null byte array (if no transformation has taken place_the array content will be identical to the original one)._@param className the full qualified name of the class in dot format (i.e. some.package.SomeClass)_@param bytes class byte definition_@return (possibly transformed) class byte definition;public byte[] transformIfNecessary(String className, byte[] bytes) {_		String internalName = className.replace(".", "/")__		return transformIfNecessary(className, internalName, bytes, null)__	};apply,transformation,on,a,given,class,byte,definition,the,method,will,always,return,a,non,null,byte,array,if,no,transformation,has,taken,place,the,array,content,will,be,identical,to,the,original,one,param,class,name,the,full,qualified,name,of,the,class,in,dot,format,i,e,some,package,some,class,param,bytes,class,byte,definition,return,possibly,transformed,class,byte,definition;public,byte,transform,if,necessary,string,class,name,byte,bytes,string,internal,name,class,name,replace,return,transform,if,necessary,class,name,internal,name,bytes,null
WeavingTransformer -> public byte[] transformIfNecessary(String className, byte[] bytes);1467730834;Apply transformation on a given class byte definition._The method will always return a non-null byte array (if no transformation has taken place_the array content will be identical to the original one)._@param className the full qualified name of the class in dot format (i.e. some.package.SomeClass)_@param bytes class byte definition_@return (possibly transformed) class byte definition;public byte[] transformIfNecessary(String className, byte[] bytes) {_		String internalName = className.replace(".", "/")__		return transformIfNecessary(className, internalName, bytes, null)__	};apply,transformation,on,a,given,class,byte,definition,the,method,will,always,return,a,non,null,byte,array,if,no,transformation,has,taken,place,the,array,content,will,be,identical,to,the,original,one,param,class,name,the,full,qualified,name,of,the,class,in,dot,format,i,e,some,package,some,class,param,bytes,class,byte,definition,return,possibly,transformed,class,byte,definition;public,byte,transform,if,necessary,string,class,name,byte,bytes,string,internal,name,class,name,replace,return,transform,if,necessary,class,name,internal,name,bytes,null
WeavingTransformer -> public byte[] transformIfNecessary(String className, byte[] bytes);1496259743;Apply transformation on a given class byte definition._The method will always return a non-null byte array (if no transformation has taken place_the array content will be identical to the original one)._@param className the full qualified name of the class in dot format (i.e. some.package.SomeClass)_@param bytes class byte definition_@return (possibly transformed) class byte definition;public byte[] transformIfNecessary(String className, byte[] bytes) {_		String internalName = className.replace(".", "/")__		return transformIfNecessary(className, internalName, bytes, null)__	};apply,transformation,on,a,given,class,byte,definition,the,method,will,always,return,a,non,null,byte,array,if,no,transformation,has,taken,place,the,array,content,will,be,identical,to,the,original,one,param,class,name,the,full,qualified,name,of,the,class,in,dot,format,i,e,some,package,some,class,param,bytes,class,byte,definition,return,possibly,transformed,class,byte,definition;public,byte,transform,if,necessary,string,class,name,byte,bytes,string,internal,name,class,name,replace,return,transform,if,necessary,class,name,internal,name,bytes,null
WeavingTransformer -> public byte[] transformIfNecessary(String className, byte[] bytes);1496837955;Apply transformation on a given class byte definition._The method will always return a non-null byte array (if no transformation has taken place_the array content will be identical to the original one)._@param className the full qualified name of the class in dot format (i.e. some.package.SomeClass)_@param bytes class byte definition_@return (possibly transformed) class byte definition;public byte[] transformIfNecessary(String className, byte[] bytes) {_		String internalName = className.replace(".", "/")__		return transformIfNecessary(className, internalName, bytes, null)__	};apply,transformation,on,a,given,class,byte,definition,the,method,will,always,return,a,non,null,byte,array,if,no,transformation,has,taken,place,the,array,content,will,be,identical,to,the,original,one,param,class,name,the,full,qualified,name,of,the,class,in,dot,format,i,e,some,package,some,class,param,bytes,class,byte,definition,return,possibly,transformed,class,byte,definition;public,byte,transform,if,necessary,string,class,name,byte,bytes,string,internal,name,class,name,replace,return,transform,if,necessary,class,name,internal,name,bytes,null
WeavingTransformer -> public byte[] transformIfNecessary(String className, byte[] bytes);1498780456;Apply transformation on a given class byte definition._The method will always return a non-null byte array (if no transformation has taken place_the array content will be identical to the original one)._@param className the full qualified name of the class in dot format (i.e. some.package.SomeClass)_@param bytes class byte definition_@return (possibly transformed) class byte definition;public byte[] transformIfNecessary(String className, byte[] bytes) {_		String internalName = className.replace(".", "/")__		return transformIfNecessary(className, internalName, bytes, null)__	};apply,transformation,on,a,given,class,byte,definition,the,method,will,always,return,a,non,null,byte,array,if,no,transformation,has,taken,place,the,array,content,will,be,identical,to,the,original,one,param,class,name,the,full,qualified,name,of,the,class,in,dot,format,i,e,some,package,some,class,param,bytes,class,byte,definition,return,possibly,transformed,class,byte,definition;public,byte,transform,if,necessary,string,class,name,byte,bytes,string,internal,name,class,name,replace,return,transform,if,necessary,class,name,internal,name,bytes,null
WeavingTransformer -> public byte[] transformIfNecessary(String className, byte[] bytes);1537186939;Apply transformation on a given class byte definition._The method will always return a non-null byte array (if no transformation has taken place_the array content will be identical to the original one)._@param className the full qualified name of the class in dot format (i.e. some.package.SomeClass)_@param bytes class byte definition_@return (possibly transformed) class byte definition;public byte[] transformIfNecessary(String className, byte[] bytes) {_		String internalName = StringUtils.replace(className, ".", "/")__		return transformIfNecessary(className, internalName, bytes, null)__	};apply,transformation,on,a,given,class,byte,definition,the,method,will,always,return,a,non,null,byte,array,if,no,transformation,has,taken,place,the,array,content,will,be,identical,to,the,original,one,param,class,name,the,full,qualified,name,of,the,class,in,dot,format,i,e,some,package,some,class,param,bytes,class,byte,definition,return,possibly,transformed,class,byte,definition;public,byte,transform,if,necessary,string,class,name,byte,bytes,string,internal,name,string,utils,replace,class,name,return,transform,if,necessary,class,name,internal,name,bytes,null
WeavingTransformer -> public void addTransformer(ClassFileTransformer transformer);1328020251;Add a class file transformer to be applied by this weaver._@param transformer the class file transformer to register;public void addTransformer(ClassFileTransformer transformer) {_		if (transformer == null) {_			throw new IllegalArgumentException("Transformer must not be null")__		}_		this.transformers.add(transformer)__	};add,a,class,file,transformer,to,be,applied,by,this,weaver,param,transformer,the,class,file,transformer,to,register;public,void,add,transformer,class,file,transformer,transformer,if,transformer,null,throw,new,illegal,argument,exception,transformer,must,not,be,null,this,transformers,add,transformer
WeavingTransformer -> public void addTransformer(ClassFileTransformer transformer);1467730834;Add a class file transformer to be applied by this weaver._@param transformer the class file transformer to register;public void addTransformer(ClassFileTransformer transformer) {_		if (transformer == null) {_			throw new IllegalArgumentException("Transformer must not be null")__		}_		this.transformers.add(transformer)__	};add,a,class,file,transformer,to,be,applied,by,this,weaver,param,transformer,the,class,file,transformer,to,register;public,void,add,transformer,class,file,transformer,transformer,if,transformer,null,throw,new,illegal,argument,exception,transformer,must,not,be,null,this,transformers,add,transformer
WeavingTransformer -> public void addTransformer(ClassFileTransformer transformer);1496259743;Add a class file transformer to be applied by this weaver._@param transformer the class file transformer to register;public void addTransformer(ClassFileTransformer transformer) {_		if (transformer == null) {_			throw new IllegalArgumentException("Transformer must not be null")__		}_		this.transformers.add(transformer)__	};add,a,class,file,transformer,to,be,applied,by,this,weaver,param,transformer,the,class,file,transformer,to,register;public,void,add,transformer,class,file,transformer,transformer,if,transformer,null,throw,new,illegal,argument,exception,transformer,must,not,be,null,this,transformers,add,transformer
WeavingTransformer -> public void addTransformer(ClassFileTransformer transformer);1496837955;Add a class file transformer to be applied by this weaver._@param transformer the class file transformer to register;public void addTransformer(ClassFileTransformer transformer) {_		Assert.notNull(transformer, "Transformer must not be null")__		this.transformers.add(transformer)__	};add,a,class,file,transformer,to,be,applied,by,this,weaver,param,transformer,the,class,file,transformer,to,register;public,void,add,transformer,class,file,transformer,transformer,assert,not,null,transformer,transformer,must,not,be,null,this,transformers,add,transformer
WeavingTransformer -> public void addTransformer(ClassFileTransformer transformer);1498780456;Add a class file transformer to be applied by this weaver._@param transformer the class file transformer to register;public void addTransformer(ClassFileTransformer transformer) {_		Assert.notNull(transformer, "Transformer must not be null")__		this.transformers.add(transformer)__	};add,a,class,file,transformer,to,be,applied,by,this,weaver,param,transformer,the,class,file,transformer,to,register;public,void,add,transformer,class,file,transformer,transformer,assert,not,null,transformer,transformer,must,not,be,null,this,transformers,add,transformer
WeavingTransformer -> public void addTransformer(ClassFileTransformer transformer);1537186939;Add a class file transformer to be applied by this weaver._@param transformer the class file transformer to register;public void addTransformer(ClassFileTransformer transformer) {_		Assert.notNull(transformer, "Transformer must not be null")__		this.transformers.add(transformer)__	};add,a,class,file,transformer,to,be,applied,by,this,weaver,param,transformer,the,class,file,transformer,to,register;public,void,add,transformer,class,file,transformer,transformer,assert,not,null,transformer,transformer,must,not,be,null,this,transformers,add,transformer
WeavingTransformer -> public byte[] transformIfNecessary(String className, String internalName, byte[] bytes, ProtectionDomain pd);1328020251;Apply transformation on a given class byte definition._The method will always return a non-null byte array (if no transformation has taken place_the array content will be identical to the original one)._@param className the full qualified name of the class in dot format (i.e. some.package.SomeClass)_@param internalName class name internal name in / format (i.e. some/package/SomeClass)_@param bytes class byte definition_@param pd protection domain to be used (can be null)_@return (possibly transformed) class byte definition;public byte[] transformIfNecessary(String className, String internalName, byte[] bytes, ProtectionDomain pd) {_		byte[] result = bytes__		for (ClassFileTransformer cft : this.transformers) {_			try {_				byte[] transformed = cft.transform(this.classLoader, internalName, null, pd, result)__				if (transformed != null) {_					result = transformed__				}_			}_			catch (IllegalClassFormatException ex) {_				throw new IllegalStateException("Class file transformation failed", ex)__			}_		}_		return result__	};apply,transformation,on,a,given,class,byte,definition,the,method,will,always,return,a,non,null,byte,array,if,no,transformation,has,taken,place,the,array,content,will,be,identical,to,the,original,one,param,class,name,the,full,qualified,name,of,the,class,in,dot,format,i,e,some,package,some,class,param,internal,name,class,name,internal,name,in,format,i,e,some,package,some,class,param,bytes,class,byte,definition,param,pd,protection,domain,to,be,used,can,be,null,return,possibly,transformed,class,byte,definition;public,byte,transform,if,necessary,string,class,name,string,internal,name,byte,bytes,protection,domain,pd,byte,result,bytes,for,class,file,transformer,cft,this,transformers,try,byte,transformed,cft,transform,this,class,loader,internal,name,null,pd,result,if,transformed,null,result,transformed,catch,illegal,class,format,exception,ex,throw,new,illegal,state,exception,class,file,transformation,failed,ex,return,result
WeavingTransformer -> public byte[] transformIfNecessary(String className, String internalName, byte[] bytes, ProtectionDomain pd);1467730834;Apply transformation on a given class byte definition._The method will always return a non-null byte array (if no transformation has taken place_the array content will be identical to the original one)._@param className the full qualified name of the class in dot format (i.e. some.package.SomeClass)_@param internalName class name internal name in / format (i.e. some/package/SomeClass)_@param bytes class byte definition_@param pd protection domain to be used (can be null)_@return (possibly transformed) class byte definition;public byte[] transformIfNecessary(String className, String internalName, byte[] bytes, ProtectionDomain pd) {_		byte[] result = bytes__		for (ClassFileTransformer cft : this.transformers) {_			try {_				byte[] transformed = cft.transform(this.classLoader, internalName, null, pd, result)__				if (transformed != null) {_					result = transformed__				}_			}_			catch (IllegalClassFormatException ex) {_				throw new IllegalStateException("Class file transformation failed", ex)__			}_		}_		return result__	};apply,transformation,on,a,given,class,byte,definition,the,method,will,always,return,a,non,null,byte,array,if,no,transformation,has,taken,place,the,array,content,will,be,identical,to,the,original,one,param,class,name,the,full,qualified,name,of,the,class,in,dot,format,i,e,some,package,some,class,param,internal,name,class,name,internal,name,in,format,i,e,some,package,some,class,param,bytes,class,byte,definition,param,pd,protection,domain,to,be,used,can,be,null,return,possibly,transformed,class,byte,definition;public,byte,transform,if,necessary,string,class,name,string,internal,name,byte,bytes,protection,domain,pd,byte,result,bytes,for,class,file,transformer,cft,this,transformers,try,byte,transformed,cft,transform,this,class,loader,internal,name,null,pd,result,if,transformed,null,result,transformed,catch,illegal,class,format,exception,ex,throw,new,illegal,state,exception,class,file,transformation,failed,ex,return,result
WeavingTransformer -> public byte[] transformIfNecessary(String className, String internalName, byte[] bytes, @Nullable ProtectionDomain pd);1496259743;Apply transformation on a given class byte definition._The method will always return a non-null byte array (if no transformation has taken place_the array content will be identical to the original one)._@param className the full qualified name of the class in dot format (i.e. some.package.SomeClass)_@param internalName class name internal name in / format (i.e. some/package/SomeClass)_@param bytes class byte definition_@param pd protection domain to be used (can be null)_@return (possibly transformed) class byte definition;public byte[] transformIfNecessary(String className, String internalName, byte[] bytes, @Nullable ProtectionDomain pd) {_		byte[] result = bytes__		for (ClassFileTransformer cft : this.transformers) {_			try {_				byte[] transformed = cft.transform(this.classLoader, internalName, null, pd, result)__				if (transformed != null) {_					result = transformed__				}_			}_			catch (IllegalClassFormatException ex) {_				throw new IllegalStateException("Class file transformation failed", ex)__			}_		}_		return result__	};apply,transformation,on,a,given,class,byte,definition,the,method,will,always,return,a,non,null,byte,array,if,no,transformation,has,taken,place,the,array,content,will,be,identical,to,the,original,one,param,class,name,the,full,qualified,name,of,the,class,in,dot,format,i,e,some,package,some,class,param,internal,name,class,name,internal,name,in,format,i,e,some,package,some,class,param,bytes,class,byte,definition,param,pd,protection,domain,to,be,used,can,be,null,return,possibly,transformed,class,byte,definition;public,byte,transform,if,necessary,string,class,name,string,internal,name,byte,bytes,nullable,protection,domain,pd,byte,result,bytes,for,class,file,transformer,cft,this,transformers,try,byte,transformed,cft,transform,this,class,loader,internal,name,null,pd,result,if,transformed,null,result,transformed,catch,illegal,class,format,exception,ex,throw,new,illegal,state,exception,class,file,transformation,failed,ex,return,result
WeavingTransformer -> public byte[] transformIfNecessary(String className, String internalName, byte[] bytes, @Nullable ProtectionDomain pd);1496837955;Apply transformation on a given class byte definition._The method will always return a non-null byte array (if no transformation has taken place_the array content will be identical to the original one)._@param className the full qualified name of the class in dot format (i.e. some.package.SomeClass)_@param internalName class name internal name in / format (i.e. some/package/SomeClass)_@param bytes class byte definition_@param pd protection domain to be used (can be null)_@return (possibly transformed) class byte definition;public byte[] transformIfNecessary(String className, String internalName, byte[] bytes, @Nullable ProtectionDomain pd) {_		byte[] result = bytes__		for (ClassFileTransformer cft : this.transformers) {_			try {_				byte[] transformed = cft.transform(this.classLoader, internalName, null, pd, result)__				if (transformed != null) {_					result = transformed__				}_			}_			catch (IllegalClassFormatException ex) {_				throw new IllegalStateException("Class file transformation failed", ex)__			}_		}_		return result__	};apply,transformation,on,a,given,class,byte,definition,the,method,will,always,return,a,non,null,byte,array,if,no,transformation,has,taken,place,the,array,content,will,be,identical,to,the,original,one,param,class,name,the,full,qualified,name,of,the,class,in,dot,format,i,e,some,package,some,class,param,internal,name,class,name,internal,name,in,format,i,e,some,package,some,class,param,bytes,class,byte,definition,param,pd,protection,domain,to,be,used,can,be,null,return,possibly,transformed,class,byte,definition;public,byte,transform,if,necessary,string,class,name,string,internal,name,byte,bytes,nullable,protection,domain,pd,byte,result,bytes,for,class,file,transformer,cft,this,transformers,try,byte,transformed,cft,transform,this,class,loader,internal,name,null,pd,result,if,transformed,null,result,transformed,catch,illegal,class,format,exception,ex,throw,new,illegal,state,exception,class,file,transformation,failed,ex,return,result
WeavingTransformer -> public byte[] transformIfNecessary(String className, String internalName, byte[] bytes, @Nullable ProtectionDomain pd);1498780456;Apply transformation on a given class byte definition._The method will always return a non-null byte array (if no transformation has taken place_the array content will be identical to the original one)._@param className the full qualified name of the class in dot format (i.e. some.package.SomeClass)_@param internalName class name internal name in / format (i.e. some/package/SomeClass)_@param bytes class byte definition_@param pd protection domain to be used (can be null)_@return (possibly transformed) class byte definition;public byte[] transformIfNecessary(String className, String internalName, byte[] bytes, @Nullable ProtectionDomain pd) {_		byte[] result = bytes__		for (ClassFileTransformer cft : this.transformers) {_			try {_				byte[] transformed = cft.transform(this.classLoader, internalName, null, pd, result)__				if (transformed != null) {_					result = transformed__				}_			}_			catch (IllegalClassFormatException ex) {_				throw new IllegalStateException("Class file transformation failed", ex)__			}_		}_		return result__	};apply,transformation,on,a,given,class,byte,definition,the,method,will,always,return,a,non,null,byte,array,if,no,transformation,has,taken,place,the,array,content,will,be,identical,to,the,original,one,param,class,name,the,full,qualified,name,of,the,class,in,dot,format,i,e,some,package,some,class,param,internal,name,class,name,internal,name,in,format,i,e,some,package,some,class,param,bytes,class,byte,definition,param,pd,protection,domain,to,be,used,can,be,null,return,possibly,transformed,class,byte,definition;public,byte,transform,if,necessary,string,class,name,string,internal,name,byte,bytes,nullable,protection,domain,pd,byte,result,bytes,for,class,file,transformer,cft,this,transformers,try,byte,transformed,cft,transform,this,class,loader,internal,name,null,pd,result,if,transformed,null,result,transformed,catch,illegal,class,format,exception,ex,throw,new,illegal,state,exception,class,file,transformation,failed,ex,return,result
WeavingTransformer -> public byte[] transformIfNecessary(String className, String internalName, byte[] bytes, @Nullable ProtectionDomain pd);1537186939;Apply transformation on a given class byte definition._The method will always return a non-null byte array (if no transformation has taken place_the array content will be identical to the original one)._@param className the full qualified name of the class in dot format (i.e. some.package.SomeClass)_@param internalName class name internal name in / format (i.e. some/package/SomeClass)_@param bytes class byte definition_@param pd protection domain to be used (can be null)_@return (possibly transformed) class byte definition;public byte[] transformIfNecessary(String className, String internalName, byte[] bytes, @Nullable ProtectionDomain pd) {_		byte[] result = bytes__		for (ClassFileTransformer cft : this.transformers) {_			try {_				byte[] transformed = cft.transform(this.classLoader, internalName, null, pd, result)__				if (transformed != null) {_					result = transformed__				}_			}_			catch (IllegalClassFormatException ex) {_				throw new IllegalStateException("Class file transformation failed", ex)__			}_		}_		return result__	};apply,transformation,on,a,given,class,byte,definition,the,method,will,always,return,a,non,null,byte,array,if,no,transformation,has,taken,place,the,array,content,will,be,identical,to,the,original,one,param,class,name,the,full,qualified,name,of,the,class,in,dot,format,i,e,some,package,some,class,param,internal,name,class,name,internal,name,in,format,i,e,some,package,some,class,param,bytes,class,byte,definition,param,pd,protection,domain,to,be,used,can,be,null,return,possibly,transformed,class,byte,definition;public,byte,transform,if,necessary,string,class,name,string,internal,name,byte,bytes,nullable,protection,domain,pd,byte,result,bytes,for,class,file,transformer,cft,this,transformers,try,byte,transformed,cft,transform,this,class,loader,internal,name,null,pd,result,if,transformed,null,result,transformed,catch,illegal,class,format,exception,ex,throw,new,illegal,state,exception,class,file,transformation,failed,ex,return,result
