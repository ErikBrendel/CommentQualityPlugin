# id;timestamp;commentText;codeText;commentWords;codeWords
CodebaseAwareObjectInputStream -> public CodebaseAwareObjectInputStream( 			InputStream in, ClassLoader classLoader, String codebaseUrl) throws IOException;1328020251;Create a new CodebaseAwareObjectInputStream for the given InputStream and codebase._@param in the InputStream to read from_@param classLoader the ClassLoader to use for loading local classes_(may be <code>null</code> to indicate RMI's default ClassLoader)_@param codebaseUrl the codebase URL to load classes from if not found locally_(can consist of multiple URLs, separated by spaces)_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public CodebaseAwareObjectInputStream(_			InputStream in, ClassLoader classLoader, String codebaseUrl) throws IOException {__		super(in, classLoader)__		this.codebaseUrl = codebaseUrl__	};create,a,new,codebase,aware,object,input,stream,for,the,given,input,stream,and,codebase,param,in,the,input,stream,to,read,from,param,class,loader,the,class,loader,to,use,for,loading,local,classes,may,be,code,null,code,to,indicate,rmi,s,default,class,loader,param,codebase,url,the,codebase,url,to,load,classes,from,if,not,found,locally,can,consist,of,multiple,urls,separated,by,spaces,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,codebase,aware,object,input,stream,input,stream,in,class,loader,class,loader,string,codebase,url,throws,ioexception,super,in,class,loader,this,codebase,url,codebase,url
CodebaseAwareObjectInputStream -> public CodebaseAwareObjectInputStream( 			InputStream in, ClassLoader classLoader, String codebaseUrl) throws IOException;1356735495;Create a new CodebaseAwareObjectInputStream for the given InputStream and codebase._@param in the InputStream to read from_@param classLoader the ClassLoader to use for loading local classes_(may be {@code null} to indicate RMI's default ClassLoader)_@param codebaseUrl the codebase URL to load classes from if not found locally_(can consist of multiple URLs, separated by spaces)_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public CodebaseAwareObjectInputStream(_			InputStream in, ClassLoader classLoader, String codebaseUrl) throws IOException {__		super(in, classLoader)__		this.codebaseUrl = codebaseUrl__	};create,a,new,codebase,aware,object,input,stream,for,the,given,input,stream,and,codebase,param,in,the,input,stream,to,read,from,param,class,loader,the,class,loader,to,use,for,loading,local,classes,may,be,code,null,to,indicate,rmi,s,default,class,loader,param,codebase,url,the,codebase,url,to,load,classes,from,if,not,found,locally,can,consist,of,multiple,urls,separated,by,spaces,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,codebase,aware,object,input,stream,input,stream,in,class,loader,class,loader,string,codebase,url,throws,ioexception,super,in,class,loader,this,codebase,url,codebase,url
CodebaseAwareObjectInputStream -> public CodebaseAwareObjectInputStream( 			InputStream in, ClassLoader classLoader, String codebaseUrl) throws IOException;1385412762;Create a new CodebaseAwareObjectInputStream for the given InputStream and codebase._@param in the InputStream to read from_@param classLoader the ClassLoader to use for loading local classes_(may be {@code null} to indicate RMI's default ClassLoader)_@param codebaseUrl the codebase URL to load classes from if not found locally_(can consist of multiple URLs, separated by spaces)_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public CodebaseAwareObjectInputStream(_			InputStream in, ClassLoader classLoader, String codebaseUrl) throws IOException {__		super(in, classLoader)__		this.codebaseUrl = codebaseUrl__	};create,a,new,codebase,aware,object,input,stream,for,the,given,input,stream,and,codebase,param,in,the,input,stream,to,read,from,param,class,loader,the,class,loader,to,use,for,loading,local,classes,may,be,code,null,to,indicate,rmi,s,default,class,loader,param,codebase,url,the,codebase,url,to,load,classes,from,if,not,found,locally,can,consist,of,multiple,urls,separated,by,spaces,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,codebase,aware,object,input,stream,input,stream,in,class,loader,class,loader,string,codebase,url,throws,ioexception,super,in,class,loader,this,codebase,url,codebase,url
CodebaseAwareObjectInputStream -> public CodebaseAwareObjectInputStream( 			InputStream in, ClassLoader classLoader, boolean acceptProxyClasses) throws IOException;1328020251;Create a new CodebaseAwareObjectInputStream for the given InputStream and codebase._@param in the InputStream to read from_@param classLoader the ClassLoader to use for loading local classes_(may be <code>null</code> to indicate RMI's default ClassLoader)_@param acceptProxyClasses whether to accept deserialization of proxy classes_(may be deactivated as a security measure)_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public CodebaseAwareObjectInputStream(_			InputStream in, ClassLoader classLoader, boolean acceptProxyClasses) throws IOException {__		super(in, classLoader, acceptProxyClasses)__		this.codebaseUrl = null__	};create,a,new,codebase,aware,object,input,stream,for,the,given,input,stream,and,codebase,param,in,the,input,stream,to,read,from,param,class,loader,the,class,loader,to,use,for,loading,local,classes,may,be,code,null,code,to,indicate,rmi,s,default,class,loader,param,accept,proxy,classes,whether,to,accept,deserialization,of,proxy,classes,may,be,deactivated,as,a,security,measure,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,codebase,aware,object,input,stream,input,stream,in,class,loader,class,loader,boolean,accept,proxy,classes,throws,ioexception,super,in,class,loader,accept,proxy,classes,this,codebase,url,null
CodebaseAwareObjectInputStream -> public CodebaseAwareObjectInputStream( 			InputStream in, ClassLoader classLoader, boolean acceptProxyClasses) throws IOException;1356735495;Create a new CodebaseAwareObjectInputStream for the given InputStream and codebase._@param in the InputStream to read from_@param classLoader the ClassLoader to use for loading local classes_(may be {@code null} to indicate RMI's default ClassLoader)_@param acceptProxyClasses whether to accept deserialization of proxy classes_(may be deactivated as a security measure)_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public CodebaseAwareObjectInputStream(_			InputStream in, ClassLoader classLoader, boolean acceptProxyClasses) throws IOException {__		super(in, classLoader, acceptProxyClasses)__		this.codebaseUrl = null__	};create,a,new,codebase,aware,object,input,stream,for,the,given,input,stream,and,codebase,param,in,the,input,stream,to,read,from,param,class,loader,the,class,loader,to,use,for,loading,local,classes,may,be,code,null,to,indicate,rmi,s,default,class,loader,param,accept,proxy,classes,whether,to,accept,deserialization,of,proxy,classes,may,be,deactivated,as,a,security,measure,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,codebase,aware,object,input,stream,input,stream,in,class,loader,class,loader,boolean,accept,proxy,classes,throws,ioexception,super,in,class,loader,accept,proxy,classes,this,codebase,url,null
CodebaseAwareObjectInputStream -> public CodebaseAwareObjectInputStream( 			InputStream in, ClassLoader classLoader, boolean acceptProxyClasses) throws IOException;1385412762;Create a new CodebaseAwareObjectInputStream for the given InputStream and codebase._@param in the InputStream to read from_@param classLoader the ClassLoader to use for loading local classes_(may be {@code null} to indicate RMI's default ClassLoader)_@param acceptProxyClasses whether to accept deserialization of proxy classes_(may be deactivated as a security measure)_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public CodebaseAwareObjectInputStream(_			InputStream in, ClassLoader classLoader, boolean acceptProxyClasses) throws IOException {__		super(in, classLoader, acceptProxyClasses)__		this.codebaseUrl = null__	};create,a,new,codebase,aware,object,input,stream,for,the,given,input,stream,and,codebase,param,in,the,input,stream,to,read,from,param,class,loader,the,class,loader,to,use,for,loading,local,classes,may,be,code,null,to,indicate,rmi,s,default,class,loader,param,accept,proxy,classes,whether,to,accept,deserialization,of,proxy,classes,may,be,deactivated,as,a,security,measure,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,codebase,aware,object,input,stream,input,stream,in,class,loader,class,loader,boolean,accept,proxy,classes,throws,ioexception,super,in,class,loader,accept,proxy,classes,this,codebase,url,null
CodebaseAwareObjectInputStream -> public CodebaseAwareObjectInputStream(InputStream in, String codebaseUrl) throws IOException;1328020251;Create a new CodebaseAwareObjectInputStream for the given InputStream and codebase._@param in the InputStream to read from_@param codebaseUrl the codebase URL to load classes from if not found locally_(can consist of multiple URLs, separated by spaces)_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public CodebaseAwareObjectInputStream(InputStream in, String codebaseUrl) throws IOException {_		this(in, null, codebaseUrl)__	};create,a,new,codebase,aware,object,input,stream,for,the,given,input,stream,and,codebase,param,in,the,input,stream,to,read,from,param,codebase,url,the,codebase,url,to,load,classes,from,if,not,found,locally,can,consist,of,multiple,urls,separated,by,spaces,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,codebase,aware,object,input,stream,input,stream,in,string,codebase,url,throws,ioexception,this,in,null,codebase,url
CodebaseAwareObjectInputStream -> public CodebaseAwareObjectInputStream(InputStream in, String codebaseUrl) throws IOException;1356735495;Create a new CodebaseAwareObjectInputStream for the given InputStream and codebase._@param in the InputStream to read from_@param codebaseUrl the codebase URL to load classes from if not found locally_(can consist of multiple URLs, separated by spaces)_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public CodebaseAwareObjectInputStream(InputStream in, String codebaseUrl) throws IOException {_		this(in, null, codebaseUrl)__	};create,a,new,codebase,aware,object,input,stream,for,the,given,input,stream,and,codebase,param,in,the,input,stream,to,read,from,param,codebase,url,the,codebase,url,to,load,classes,from,if,not,found,locally,can,consist,of,multiple,urls,separated,by,spaces,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,codebase,aware,object,input,stream,input,stream,in,string,codebase,url,throws,ioexception,this,in,null,codebase,url
CodebaseAwareObjectInputStream -> public CodebaseAwareObjectInputStream(InputStream in, String codebaseUrl) throws IOException;1385412762;Create a new CodebaseAwareObjectInputStream for the given InputStream and codebase._@param in the InputStream to read from_@param codebaseUrl the codebase URL to load classes from if not found locally_(can consist of multiple URLs, separated by spaces)_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public CodebaseAwareObjectInputStream(InputStream in, String codebaseUrl) throws IOException {_		this(in, null, codebaseUrl)__	};create,a,new,codebase,aware,object,input,stream,for,the,given,input,stream,and,codebase,param,in,the,input,stream,to,read,from,param,codebase,url,the,codebase,url,to,load,classes,from,if,not,found,locally,can,consist,of,multiple,urls,separated,by,spaces,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,codebase,aware,object,input,stream,input,stream,in,string,codebase,url,throws,ioexception,this,in,null,codebase,url
CodebaseAwareObjectInputStream -> public CodebaseAwareObjectInputStream(InputStream in, String codebaseUrl) throws IOException;1495868221;Create a new CodebaseAwareObjectInputStream for the given InputStream and codebase._@param in the InputStream to read from_@param codebaseUrl the codebase URL to load classes from if not found locally_(can consist of multiple URLs, separated by spaces)_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public CodebaseAwareObjectInputStream(InputStream in, String codebaseUrl) throws IOException {_		this(in, null, codebaseUrl)__	};create,a,new,codebase,aware,object,input,stream,for,the,given,input,stream,and,codebase,param,in,the,input,stream,to,read,from,param,codebase,url,the,codebase,url,to,load,classes,from,if,not,found,locally,can,consist,of,multiple,urls,separated,by,spaces,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,codebase,aware,object,input,stream,input,stream,in,string,codebase,url,throws,ioexception,this,in,null,codebase,url
