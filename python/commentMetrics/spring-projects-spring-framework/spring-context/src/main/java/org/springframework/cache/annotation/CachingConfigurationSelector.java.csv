commented;modifiers;parameterAmount;loc;comment;code
true;public;1;11;/**  * Returns {@link ProxyCachingConfiguration} or {@code AspectJCachingConfiguration}  * for {@code PROXY} and {@code ASPECTJ} values of {@link EnableCaching#mode()},  * respectively. Potentially includes corresponding JCache configuration as well.  */ ;/**  * Returns {@link ProxyCachingConfiguration} or {@code AspectJCachingConfiguration}  * for {@code PROXY} and {@code ASPECTJ} values of {@link EnableCaching#mode()},  * respectively. Potentially includes corresponding JCache configuration as well.  */ @Override public String[] selectImports(AdviceMode adviceMode) {     switch(adviceMode) {         case PROXY:             return getProxyImports().         case ASPECTJ:             return getAspectJImports().         default:             return null.     } }
true;private;0;9;/**  * Return the imports to use if the {@link AdviceMode} is set to {@link AdviceMode#PROXY}.  * <p>Take care of adding the necessary JSR-107 import if it is available.  */ ;/**  * Return the imports to use if the {@link AdviceMode} is set to {@link AdviceMode#PROXY}.  * <p>Take care of adding the necessary JSR-107 import if it is available.  */ private String[] getProxyImports() {     List<String> result = new ArrayList<>(3).     result.add(AutoProxyRegistrar.class.getName()).     result.add(ProxyCachingConfiguration.class.getName()).     if (jsr107Present && jcacheImplPresent) {         result.add(PROXY_JCACHE_CONFIGURATION_CLASS).     }     return StringUtils.toStringArray(result). }
true;private;0;8;/**  * Return the imports to use if the {@link AdviceMode} is set to {@link AdviceMode#ASPECTJ}.  * <p>Take care of adding the necessary JSR-107 import if it is available.  */ ;/**  * Return the imports to use if the {@link AdviceMode} is set to {@link AdviceMode#ASPECTJ}.  * <p>Take care of adding the necessary JSR-107 import if it is available.  */ private String[] getAspectJImports() {     List<String> result = new ArrayList<>(2).     result.add(CACHE_ASPECT_CONFIGURATION_CLASS_NAME).     if (jsr107Present && jcacheImplPresent) {         result.add(JCACHE_ASPECT_CONFIGURATION_CLASS_NAME).     }     return StringUtils.toStringArray(result). }
