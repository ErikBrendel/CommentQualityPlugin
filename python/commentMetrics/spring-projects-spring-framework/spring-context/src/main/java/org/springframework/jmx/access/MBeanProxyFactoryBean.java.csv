commented;modifiers;parameterAmount;loc;comment;code
true;public;1;3;/**  * Set the interface that the generated proxy will implement.  * <p>This will usually be a management interface that matches the target MBean,  * exposing bean property setters and getters for MBean attributes and  * conventional Java methods for MBean operations.  * @see #setObjectName  */ ;/**  * Set the interface that the generated proxy will implement.  * <p>This will usually be a management interface that matches the target MBean,  * exposing bean property setters and getters for MBean attributes and  * conventional Java methods for MBean operations.  * @see #setObjectName  */ public void setProxyInterface(Class<?> proxyInterface) {     this.proxyInterface = proxyInterface. }
false;public;1;4;;@Override public void setBeanClassLoader(ClassLoader classLoader) {     this.beanClassLoader = classLoader. }
true;public;0;17;/**  * Checks that the {@code proxyInterface} has been specified and then  * generates the proxy for the target MBean.  */ ;/**  * Checks that the {@code proxyInterface} has been specified and then  * generates the proxy for the target MBean.  */ @Override public void afterPropertiesSet() throws MBeanServerNotFoundException, MBeanInfoRetrievalException {     super.afterPropertiesSet().     if (this.proxyInterface == null) {         this.proxyInterface = getManagementInterface().         if (this.proxyInterface == null) {             throw new IllegalArgumentException("Property 'proxyInterface' or 'managementInterface' is required").         }     } else {         if (getManagementInterface() == null) {             setManagementInterface(this.proxyInterface).         }     }     this.mbeanProxy = new ProxyFactory(this.proxyInterface, this).getProxy(this.beanClassLoader). }
false;public;0;5;;@Override @Nullable public Object getObject() {     return this.mbeanProxy. }
false;public;0;4;;@Override public Class<?> getObjectType() {     return this.proxyInterface. }
false;public;0;4;;@Override public boolean isSingleton() {     return true. }
