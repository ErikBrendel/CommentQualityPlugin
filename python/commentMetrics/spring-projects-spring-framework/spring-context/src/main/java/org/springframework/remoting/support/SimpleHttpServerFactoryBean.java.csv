# id;timestamp;commentText;codeText;commentWords;codeWords
SimpleHttpServerFactoryBean -> public void setHostname(String hostname);1328020251;Specify the HTTP server's hostname to bind to. Default is localhost__can be overridden with a specific network address to bind to.;public void setHostname(String hostname) {_		this.hostname = hostname__	};specify,the,http,server,s,hostname,to,bind,to,default,is,localhost,can,be,overridden,with,a,specific,network,address,to,bind,to;public,void,set,hostname,string,hostname,this,hostname,hostname
SimpleHttpServerFactoryBean -> public void setHostname(String hostname);1356735495;Specify the HTTP server's hostname to bind to. Default is localhost__can be overridden with a specific network address to bind to.;public void setHostname(String hostname) {_		this.hostname = hostname__	};specify,the,http,server,s,hostname,to,bind,to,default,is,localhost,can,be,overridden,with,a,specific,network,address,to,bind,to;public,void,set,hostname,string,hostname,this,hostname,hostname
SimpleHttpServerFactoryBean -> public void setHostname(String hostname);1357119239;Specify the HTTP server's hostname to bind to. Default is localhost__can be overridden with a specific network address to bind to.;public void setHostname(String hostname) {_		this.hostname = hostname__	};specify,the,http,server,s,hostname,to,bind,to,default,is,localhost,can,be,overridden,with,a,specific,network,address,to,bind,to;public,void,set,hostname,string,hostname,this,hostname,hostname
SimpleHttpServerFactoryBean -> public void setHostname(String hostname);1368482696;Specify the HTTP server's hostname to bind to. Default is localhost__can be overridden with a specific network address to bind to.;public void setHostname(String hostname) {_		this.hostname = hostname__	};specify,the,http,server,s,hostname,to,bind,to,default,is,localhost,can,be,overridden,with,a,specific,network,address,to,bind,to;public,void,set,hostname,string,hostname,this,hostname,hostname
SimpleHttpServerFactoryBean -> public void setHostname(String hostname);1398858661;Specify the HTTP server's hostname to bind to. Default is localhost__can be overridden with a specific network address to bind to.;public void setHostname(String hostname) {_		this.hostname = hostname__	};specify,the,http,server,s,hostname,to,bind,to,default,is,localhost,can,be,overridden,with,a,specific,network,address,to,bind,to;public,void,set,hostname,string,hostname,this,hostname,hostname
SimpleHttpServerFactoryBean -> public void setHostname(String hostname);1401910463;Specify the HTTP server's hostname to bind to. Default is localhost__can be overridden with a specific network address to bind to.;public void setHostname(String hostname) {_		this.hostname = hostname__	};specify,the,http,server,s,hostname,to,bind,to,default,is,localhost,can,be,overridden,with,a,specific,network,address,to,bind,to;public,void,set,hostname,string,hostname,this,hostname,hostname
SimpleHttpServerFactoryBean -> public void setHostname(String hostname);1468613531;Specify the HTTP server's hostname to bind to. Default is localhost__can be overridden with a specific network address to bind to.;public void setHostname(String hostname) {_		this.hostname = hostname__	};specify,the,http,server,s,hostname,to,bind,to,default,is,localhost,can,be,overridden,with,a,specific,network,address,to,bind,to;public,void,set,hostname,string,hostname,this,hostname,hostname
SimpleHttpServerFactoryBean -> public void setHostname(String hostname);1522192143;Specify the HTTP server's hostname to bind to. Default is localhost__can be overridden with a specific network address to bind to.;public void setHostname(String hostname) {_		this.hostname = hostname__	};specify,the,http,server,s,hostname,to,bind,to,default,is,localhost,can,be,overridden,with,a,specific,network,address,to,bind,to;public,void,set,hostname,string,hostname,this,hostname,hostname
SimpleHttpServerFactoryBean -> public void setHostname(String hostname);1530174524;Specify the HTTP server's hostname to bind to. Default is localhost__can be overridden with a specific network address to bind to.;public void setHostname(String hostname) {_		this.hostname = hostname__	};specify,the,http,server,s,hostname,to,bind,to,default,is,localhost,can,be,overridden,with,a,specific,network,address,to,bind,to;public,void,set,hostname,string,hostname,this,hostname,hostname
SimpleHttpServerFactoryBean -> public void setHostname(String hostname);1533666953;Specify the HTTP server's hostname to bind to. Default is localhost__can be overridden with a specific network address to bind to.;public void setHostname(String hostname) {_		this.hostname = hostname__	};specify,the,http,server,s,hostname,to,bind,to,default,is,localhost,can,be,overridden,with,a,specific,network,address,to,bind,to;public,void,set,hostname,string,hostname,this,hostname,hostname
SimpleHttpServerFactoryBean -> public void setPort(int port);1328020251;Specify the HTTP server's port. Default is 8080.;public void setPort(int port) {_		this.port = port__	};specify,the,http,server,s,port,default,is,8080;public,void,set,port,int,port,this,port,port
SimpleHttpServerFactoryBean -> public void setPort(int port);1356735495;Specify the HTTP server's port. Default is 8080.;public void setPort(int port) {_		this.port = port__	};specify,the,http,server,s,port,default,is,8080;public,void,set,port,int,port,this,port,port
SimpleHttpServerFactoryBean -> public void setPort(int port);1357119239;Specify the HTTP server's port. Default is 8080.;public void setPort(int port) {_		this.port = port__	};specify,the,http,server,s,port,default,is,8080;public,void,set,port,int,port,this,port,port
SimpleHttpServerFactoryBean -> public void setPort(int port);1368482696;Specify the HTTP server's port. Default is 8080.;public void setPort(int port) {_		this.port = port__	};specify,the,http,server,s,port,default,is,8080;public,void,set,port,int,port,this,port,port
SimpleHttpServerFactoryBean -> public void setPort(int port);1398858661;Specify the HTTP server's port. Default is 8080.;public void setPort(int port) {_		this.port = port__	};specify,the,http,server,s,port,default,is,8080;public,void,set,port,int,port,this,port,port
SimpleHttpServerFactoryBean -> public void setPort(int port);1401910463;Specify the HTTP server's port. Default is 8080.;public void setPort(int port) {_		this.port = port__	};specify,the,http,server,s,port,default,is,8080;public,void,set,port,int,port,this,port,port
SimpleHttpServerFactoryBean -> public void setPort(int port);1468613531;Specify the HTTP server's port. Default is 8080.;public void setPort(int port) {_		this.port = port__	};specify,the,http,server,s,port,default,is,8080;public,void,set,port,int,port,this,port,port
SimpleHttpServerFactoryBean -> public void setPort(int port);1522192143;Specify the HTTP server's port. Default is 8080.;public void setPort(int port) {_		this.port = port__	};specify,the,http,server,s,port,default,is,8080;public,void,set,port,int,port,this,port,port
SimpleHttpServerFactoryBean -> public void setPort(int port);1530174524;Specify the HTTP server's port. Default is 8080.;public void setPort(int port) {_		this.port = port__	};specify,the,http,server,s,port,default,is,8080;public,void,set,port,int,port,this,port,port
SimpleHttpServerFactoryBean -> public void setPort(int port);1533666953;Specify the HTTP server's port. Default is 8080.;public void setPort(int port) {_		this.port = port__	};specify,the,http,server,s,port,default,is,8080;public,void,set,port,int,port,this,port,port
SimpleHttpServerFactoryBean -> public void setContexts(Map<String, HttpHandler> contexts);1328020251;Register {@link com.sun.net.httpserver.HttpHandler HttpHandlers}_for specific context paths._@param contexts a Map with context paths as keys and HttpHandler_objects as values_@see org.springframework.remoting.httpinvoker.SimpleHttpInvokerServiceExporter_@see org.springframework.remoting.caucho.SimpleHessianServiceExporter_@see org.springframework.remoting.caucho.SimpleBurlapServiceExporter;public void setContexts(Map<String, HttpHandler> contexts) {_		this.contexts = contexts__	};register,link,com,sun,net,httpserver,http,handler,http,handlers,for,specific,context,paths,param,contexts,a,map,with,context,paths,as,keys,and,http,handler,objects,as,values,see,org,springframework,remoting,httpinvoker,simple,http,invoker,service,exporter,see,org,springframework,remoting,caucho,simple,hessian,service,exporter,see,org,springframework,remoting,caucho,simple,burlap,service,exporter;public,void,set,contexts,map,string,http,handler,contexts,this,contexts,contexts
SimpleHttpServerFactoryBean -> public void setContexts(Map<String, HttpHandler> contexts);1356735495;Register {@link com.sun.net.httpserver.HttpHandler HttpHandlers}_for specific context paths._@param contexts a Map with context paths as keys and HttpHandler_objects as values_@see org.springframework.remoting.httpinvoker.SimpleHttpInvokerServiceExporter_@see org.springframework.remoting.caucho.SimpleHessianServiceExporter_@see org.springframework.remoting.caucho.SimpleBurlapServiceExporter;public void setContexts(Map<String, HttpHandler> contexts) {_		this.contexts = contexts__	};register,link,com,sun,net,httpserver,http,handler,http,handlers,for,specific,context,paths,param,contexts,a,map,with,context,paths,as,keys,and,http,handler,objects,as,values,see,org,springframework,remoting,httpinvoker,simple,http,invoker,service,exporter,see,org,springframework,remoting,caucho,simple,hessian,service,exporter,see,org,springframework,remoting,caucho,simple,burlap,service,exporter;public,void,set,contexts,map,string,http,handler,contexts,this,contexts,contexts
SimpleHttpServerFactoryBean -> public void setContexts(Map<String, HttpHandler> contexts);1357119239;Register {@link com.sun.net.httpserver.HttpHandler HttpHandlers}_for specific context paths._@param contexts a Map with context paths as keys and HttpHandler_objects as values_@see org.springframework.remoting.httpinvoker.SimpleHttpInvokerServiceExporter_@see org.springframework.remoting.caucho.SimpleHessianServiceExporter_@see org.springframework.remoting.caucho.SimpleBurlapServiceExporter;public void setContexts(Map<String, HttpHandler> contexts) {_		this.contexts = contexts__	};register,link,com,sun,net,httpserver,http,handler,http,handlers,for,specific,context,paths,param,contexts,a,map,with,context,paths,as,keys,and,http,handler,objects,as,values,see,org,springframework,remoting,httpinvoker,simple,http,invoker,service,exporter,see,org,springframework,remoting,caucho,simple,hessian,service,exporter,see,org,springframework,remoting,caucho,simple,burlap,service,exporter;public,void,set,contexts,map,string,http,handler,contexts,this,contexts,contexts
SimpleHttpServerFactoryBean -> public void setContexts(Map<String, HttpHandler> contexts);1368482696;Register {@link com.sun.net.httpserver.HttpHandler HttpHandlers}_for specific context paths._@param contexts a Map with context paths as keys and HttpHandler_objects as values_@see org.springframework.remoting.httpinvoker.SimpleHttpInvokerServiceExporter_@see org.springframework.remoting.caucho.SimpleHessianServiceExporter_@see org.springframework.remoting.caucho.SimpleBurlapServiceExporter;public void setContexts(Map<String, HttpHandler> contexts) {_		this.contexts = contexts__	};register,link,com,sun,net,httpserver,http,handler,http,handlers,for,specific,context,paths,param,contexts,a,map,with,context,paths,as,keys,and,http,handler,objects,as,values,see,org,springframework,remoting,httpinvoker,simple,http,invoker,service,exporter,see,org,springframework,remoting,caucho,simple,hessian,service,exporter,see,org,springframework,remoting,caucho,simple,burlap,service,exporter;public,void,set,contexts,map,string,http,handler,contexts,this,contexts,contexts
SimpleHttpServerFactoryBean -> public void setContexts(Map<String, HttpHandler> contexts);1398858661;Register {@link com.sun.net.httpserver.HttpHandler HttpHandlers}_for specific context paths._@param contexts a Map with context paths as keys and HttpHandler_objects as values_@see org.springframework.remoting.httpinvoker.SimpleHttpInvokerServiceExporter_@see org.springframework.remoting.caucho.SimpleHessianServiceExporter_@see org.springframework.remoting.caucho.SimpleBurlapServiceExporter;public void setContexts(Map<String, HttpHandler> contexts) {_		this.contexts = contexts__	};register,link,com,sun,net,httpserver,http,handler,http,handlers,for,specific,context,paths,param,contexts,a,map,with,context,paths,as,keys,and,http,handler,objects,as,values,see,org,springframework,remoting,httpinvoker,simple,http,invoker,service,exporter,see,org,springframework,remoting,caucho,simple,hessian,service,exporter,see,org,springframework,remoting,caucho,simple,burlap,service,exporter;public,void,set,contexts,map,string,http,handler,contexts,this,contexts,contexts
SimpleHttpServerFactoryBean -> public void setContexts(Map<String, HttpHandler> contexts);1401910463;Register {@link com.sun.net.httpserver.HttpHandler HttpHandlers}_for specific context paths._@param contexts a Map with context paths as keys and HttpHandler_objects as values_@see org.springframework.remoting.httpinvoker.SimpleHttpInvokerServiceExporter_@see org.springframework.remoting.caucho.SimpleHessianServiceExporter_@see org.springframework.remoting.caucho.SimpleBurlapServiceExporter;public void setContexts(Map<String, HttpHandler> contexts) {_		this.contexts = contexts__	};register,link,com,sun,net,httpserver,http,handler,http,handlers,for,specific,context,paths,param,contexts,a,map,with,context,paths,as,keys,and,http,handler,objects,as,values,see,org,springframework,remoting,httpinvoker,simple,http,invoker,service,exporter,see,org,springframework,remoting,caucho,simple,hessian,service,exporter,see,org,springframework,remoting,caucho,simple,burlap,service,exporter;public,void,set,contexts,map,string,http,handler,contexts,this,contexts,contexts
SimpleHttpServerFactoryBean -> public void setContexts(Map<String, HttpHandler> contexts);1468613531;Register {@link com.sun.net.httpserver.HttpHandler HttpHandlers}_for specific context paths._@param contexts a Map with context paths as keys and HttpHandler_objects as values_@see org.springframework.remoting.httpinvoker.SimpleHttpInvokerServiceExporter_@see org.springframework.remoting.caucho.SimpleHessianServiceExporter;public void setContexts(Map<String, HttpHandler> contexts) {_		this.contexts = contexts__	};register,link,com,sun,net,httpserver,http,handler,http,handlers,for,specific,context,paths,param,contexts,a,map,with,context,paths,as,keys,and,http,handler,objects,as,values,see,org,springframework,remoting,httpinvoker,simple,http,invoker,service,exporter,see,org,springframework,remoting,caucho,simple,hessian,service,exporter;public,void,set,contexts,map,string,http,handler,contexts,this,contexts,contexts
SimpleHttpServerFactoryBean -> public void setContexts(Map<String, HttpHandler> contexts);1522192143;Register {@link com.sun.net.httpserver.HttpHandler HttpHandlers}_for specific context paths._@param contexts a Map with context paths as keys and HttpHandler_objects as values_@see org.springframework.remoting.httpinvoker.SimpleHttpInvokerServiceExporter_@see org.springframework.remoting.caucho.SimpleHessianServiceExporter;public void setContexts(Map<String, HttpHandler> contexts) {_		this.contexts = contexts__	};register,link,com,sun,net,httpserver,http,handler,http,handlers,for,specific,context,paths,param,contexts,a,map,with,context,paths,as,keys,and,http,handler,objects,as,values,see,org,springframework,remoting,httpinvoker,simple,http,invoker,service,exporter,see,org,springframework,remoting,caucho,simple,hessian,service,exporter;public,void,set,contexts,map,string,http,handler,contexts,this,contexts,contexts
SimpleHttpServerFactoryBean -> public void setContexts(Map<String, HttpHandler> contexts);1530174524;Register {@link com.sun.net.httpserver.HttpHandler HttpHandlers}_for specific context paths._@param contexts a Map with context paths as keys and HttpHandler_objects as values_@see org.springframework.remoting.httpinvoker.SimpleHttpInvokerServiceExporter_@see org.springframework.remoting.caucho.SimpleHessianServiceExporter;public void setContexts(Map<String, HttpHandler> contexts) {_		this.contexts = contexts__	};register,link,com,sun,net,httpserver,http,handler,http,handlers,for,specific,context,paths,param,contexts,a,map,with,context,paths,as,keys,and,http,handler,objects,as,values,see,org,springframework,remoting,httpinvoker,simple,http,invoker,service,exporter,see,org,springframework,remoting,caucho,simple,hessian,service,exporter;public,void,set,contexts,map,string,http,handler,contexts,this,contexts,contexts
SimpleHttpServerFactoryBean -> public void setContexts(Map<String, HttpHandler> contexts);1533666953;Register {@link com.sun.net.httpserver.HttpHandler HttpHandlers}_for specific context paths._@param contexts a Map with context paths as keys and HttpHandler_objects as values_@see org.springframework.remoting.httpinvoker.SimpleHttpInvokerServiceExporter_@see org.springframework.remoting.caucho.SimpleHessianServiceExporter;public void setContexts(Map<String, HttpHandler> contexts) {_		this.contexts = contexts__	};register,link,com,sun,net,httpserver,http,handler,http,handlers,for,specific,context,paths,param,contexts,a,map,with,context,paths,as,keys,and,http,handler,objects,as,values,see,org,springframework,remoting,httpinvoker,simple,http,invoker,service,exporter,see,org,springframework,remoting,caucho,simple,hessian,service,exporter;public,void,set,contexts,map,string,http,handler,contexts,this,contexts,contexts
SimpleHttpServerFactoryBean -> public void setBacklog(int backlog);1328020251;Specify the HTTP server's TCP backlog. Default is -1,_indicating the system's default value.;public void setBacklog(int backlog) {_		this.backlog = backlog__	};specify,the,http,server,s,tcp,backlog,default,is,1,indicating,the,system,s,default,value;public,void,set,backlog,int,backlog,this,backlog,backlog
SimpleHttpServerFactoryBean -> public void setBacklog(int backlog);1356735495;Specify the HTTP server's TCP backlog. Default is -1,_indicating the system's default value.;public void setBacklog(int backlog) {_		this.backlog = backlog__	};specify,the,http,server,s,tcp,backlog,default,is,1,indicating,the,system,s,default,value;public,void,set,backlog,int,backlog,this,backlog,backlog
SimpleHttpServerFactoryBean -> public void setBacklog(int backlog);1357119239;Specify the HTTP server's TCP backlog. Default is -1,_indicating the system's default value.;public void setBacklog(int backlog) {_		this.backlog = backlog__	};specify,the,http,server,s,tcp,backlog,default,is,1,indicating,the,system,s,default,value;public,void,set,backlog,int,backlog,this,backlog,backlog
SimpleHttpServerFactoryBean -> public void setBacklog(int backlog);1368482696;Specify the HTTP server's TCP backlog. Default is -1,_indicating the system's default value.;public void setBacklog(int backlog) {_		this.backlog = backlog__	};specify,the,http,server,s,tcp,backlog,default,is,1,indicating,the,system,s,default,value;public,void,set,backlog,int,backlog,this,backlog,backlog
SimpleHttpServerFactoryBean -> public void setBacklog(int backlog);1398858661;Specify the HTTP server's TCP backlog. Default is -1,_indicating the system's default value.;public void setBacklog(int backlog) {_		this.backlog = backlog__	};specify,the,http,server,s,tcp,backlog,default,is,1,indicating,the,system,s,default,value;public,void,set,backlog,int,backlog,this,backlog,backlog
SimpleHttpServerFactoryBean -> public void setBacklog(int backlog);1401910463;Specify the HTTP server's TCP backlog. Default is -1,_indicating the system's default value.;public void setBacklog(int backlog) {_		this.backlog = backlog__	};specify,the,http,server,s,tcp,backlog,default,is,1,indicating,the,system,s,default,value;public,void,set,backlog,int,backlog,this,backlog,backlog
SimpleHttpServerFactoryBean -> public void setBacklog(int backlog);1468613531;Specify the HTTP server's TCP backlog. Default is -1,_indicating the system's default value.;public void setBacklog(int backlog) {_		this.backlog = backlog__	};specify,the,http,server,s,tcp,backlog,default,is,1,indicating,the,system,s,default,value;public,void,set,backlog,int,backlog,this,backlog,backlog
SimpleHttpServerFactoryBean -> public void setBacklog(int backlog);1522192143;Specify the HTTP server's TCP backlog. Default is -1,_indicating the system's default value.;public void setBacklog(int backlog) {_		this.backlog = backlog__	};specify,the,http,server,s,tcp,backlog,default,is,1,indicating,the,system,s,default,value;public,void,set,backlog,int,backlog,this,backlog,backlog
SimpleHttpServerFactoryBean -> public void setBacklog(int backlog);1530174524;Specify the HTTP server's TCP backlog. Default is -1,_indicating the system's default value.;public void setBacklog(int backlog) {_		this.backlog = backlog__	};specify,the,http,server,s,tcp,backlog,default,is,1,indicating,the,system,s,default,value;public,void,set,backlog,int,backlog,this,backlog,backlog
SimpleHttpServerFactoryBean -> public void setBacklog(int backlog);1533666953;Specify the HTTP server's TCP backlog. Default is -1,_indicating the system's default value.;public void setBacklog(int backlog) {_		this.backlog = backlog__	};specify,the,http,server,s,tcp,backlog,default,is,1,indicating,the,system,s,default,value;public,void,set,backlog,int,backlog,this,backlog,backlog
SimpleHttpServerFactoryBean -> public void setAuthenticator(Authenticator authenticator);1328020251;Register a common {@link com.sun.net.httpserver.Authenticator} to be_applied to all locally registered {@link #setContexts contexts}.;public void setAuthenticator(Authenticator authenticator) {_		this.authenticator = authenticator__	};register,a,common,link,com,sun,net,httpserver,authenticator,to,be,applied,to,all,locally,registered,link,set,contexts,contexts;public,void,set,authenticator,authenticator,authenticator,this,authenticator,authenticator
SimpleHttpServerFactoryBean -> public void setAuthenticator(Authenticator authenticator);1356735495;Register a common {@link com.sun.net.httpserver.Authenticator} to be_applied to all locally registered {@link #setContexts contexts}.;public void setAuthenticator(Authenticator authenticator) {_		this.authenticator = authenticator__	};register,a,common,link,com,sun,net,httpserver,authenticator,to,be,applied,to,all,locally,registered,link,set,contexts,contexts;public,void,set,authenticator,authenticator,authenticator,this,authenticator,authenticator
SimpleHttpServerFactoryBean -> public void setAuthenticator(Authenticator authenticator);1357119239;Register a common {@link com.sun.net.httpserver.Authenticator} to be_applied to all locally registered {@link #setContexts contexts}.;public void setAuthenticator(Authenticator authenticator) {_		this.authenticator = authenticator__	};register,a,common,link,com,sun,net,httpserver,authenticator,to,be,applied,to,all,locally,registered,link,set,contexts,contexts;public,void,set,authenticator,authenticator,authenticator,this,authenticator,authenticator
SimpleHttpServerFactoryBean -> public void setAuthenticator(Authenticator authenticator);1368482696;Register a common {@link com.sun.net.httpserver.Authenticator} to be_applied to all locally registered {@link #setContexts contexts}.;public void setAuthenticator(Authenticator authenticator) {_		this.authenticator = authenticator__	};register,a,common,link,com,sun,net,httpserver,authenticator,to,be,applied,to,all,locally,registered,link,set,contexts,contexts;public,void,set,authenticator,authenticator,authenticator,this,authenticator,authenticator
SimpleHttpServerFactoryBean -> public void setAuthenticator(Authenticator authenticator);1398858661;Register a common {@link com.sun.net.httpserver.Authenticator} to be_applied to all locally registered {@link #setContexts contexts}.;public void setAuthenticator(Authenticator authenticator) {_		this.authenticator = authenticator__	};register,a,common,link,com,sun,net,httpserver,authenticator,to,be,applied,to,all,locally,registered,link,set,contexts,contexts;public,void,set,authenticator,authenticator,authenticator,this,authenticator,authenticator
SimpleHttpServerFactoryBean -> public void setAuthenticator(Authenticator authenticator);1401910463;Register a common {@link com.sun.net.httpserver.Authenticator} to be_applied to all locally registered {@link #setContexts contexts}.;public void setAuthenticator(Authenticator authenticator) {_		this.authenticator = authenticator__	};register,a,common,link,com,sun,net,httpserver,authenticator,to,be,applied,to,all,locally,registered,link,set,contexts,contexts;public,void,set,authenticator,authenticator,authenticator,this,authenticator,authenticator
SimpleHttpServerFactoryBean -> public void setAuthenticator(Authenticator authenticator);1468613531;Register a common {@link com.sun.net.httpserver.Authenticator} to be_applied to all locally registered {@link #setContexts contexts}.;public void setAuthenticator(Authenticator authenticator) {_		this.authenticator = authenticator__	};register,a,common,link,com,sun,net,httpserver,authenticator,to,be,applied,to,all,locally,registered,link,set,contexts,contexts;public,void,set,authenticator,authenticator,authenticator,this,authenticator,authenticator
SimpleHttpServerFactoryBean -> public void setAuthenticator(Authenticator authenticator);1522192143;Register a common {@link com.sun.net.httpserver.Authenticator} to be_applied to all locally registered {@link #setContexts contexts}.;public void setAuthenticator(Authenticator authenticator) {_		this.authenticator = authenticator__	};register,a,common,link,com,sun,net,httpserver,authenticator,to,be,applied,to,all,locally,registered,link,set,contexts,contexts;public,void,set,authenticator,authenticator,authenticator,this,authenticator,authenticator
SimpleHttpServerFactoryBean -> public void setAuthenticator(Authenticator authenticator);1530174524;Register a common {@link com.sun.net.httpserver.Authenticator} to be_applied to all locally registered {@link #setContexts contexts}.;public void setAuthenticator(Authenticator authenticator) {_		this.authenticator = authenticator__	};register,a,common,link,com,sun,net,httpserver,authenticator,to,be,applied,to,all,locally,registered,link,set,contexts,contexts;public,void,set,authenticator,authenticator,authenticator,this,authenticator,authenticator
SimpleHttpServerFactoryBean -> public void setAuthenticator(Authenticator authenticator);1533666953;Register a common {@link com.sun.net.httpserver.Authenticator} to be_applied to all locally registered {@link #setContexts contexts}.;public void setAuthenticator(Authenticator authenticator) {_		this.authenticator = authenticator__	};register,a,common,link,com,sun,net,httpserver,authenticator,to,be,applied,to,all,locally,registered,link,set,contexts,contexts;public,void,set,authenticator,authenticator,authenticator,this,authenticator,authenticator
SimpleHttpServerFactoryBean -> public void setFilters(List<Filter> filters);1328020251;Register common {@link com.sun.net.httpserver.Filter Filters} to be_applied to all locally registered {@link #setContexts contexts}.;public void setFilters(List<Filter> filters) {_		this.filters = filters__	};register,common,link,com,sun,net,httpserver,filter,filters,to,be,applied,to,all,locally,registered,link,set,contexts,contexts;public,void,set,filters,list,filter,filters,this,filters,filters
SimpleHttpServerFactoryBean -> public void setFilters(List<Filter> filters);1356735495;Register common {@link com.sun.net.httpserver.Filter Filters} to be_applied to all locally registered {@link #setContexts contexts}.;public void setFilters(List<Filter> filters) {_		this.filters = filters__	};register,common,link,com,sun,net,httpserver,filter,filters,to,be,applied,to,all,locally,registered,link,set,contexts,contexts;public,void,set,filters,list,filter,filters,this,filters,filters
SimpleHttpServerFactoryBean -> public void setFilters(List<Filter> filters);1357119239;Register common {@link com.sun.net.httpserver.Filter Filters} to be_applied to all locally registered {@link #setContexts contexts}.;public void setFilters(List<Filter> filters) {_		this.filters = filters__	};register,common,link,com,sun,net,httpserver,filter,filters,to,be,applied,to,all,locally,registered,link,set,contexts,contexts;public,void,set,filters,list,filter,filters,this,filters,filters
SimpleHttpServerFactoryBean -> public void setFilters(List<Filter> filters);1368482696;Register common {@link com.sun.net.httpserver.Filter Filters} to be_applied to all locally registered {@link #setContexts contexts}.;public void setFilters(List<Filter> filters) {_		this.filters = filters__	};register,common,link,com,sun,net,httpserver,filter,filters,to,be,applied,to,all,locally,registered,link,set,contexts,contexts;public,void,set,filters,list,filter,filters,this,filters,filters
SimpleHttpServerFactoryBean -> public void setFilters(List<Filter> filters);1398858661;Register common {@link com.sun.net.httpserver.Filter Filters} to be_applied to all locally registered {@link #setContexts contexts}.;public void setFilters(List<Filter> filters) {_		this.filters = filters__	};register,common,link,com,sun,net,httpserver,filter,filters,to,be,applied,to,all,locally,registered,link,set,contexts,contexts;public,void,set,filters,list,filter,filters,this,filters,filters
SimpleHttpServerFactoryBean -> public void setFilters(List<Filter> filters);1401910463;Register common {@link com.sun.net.httpserver.Filter Filters} to be_applied to all locally registered {@link #setContexts contexts}.;public void setFilters(List<Filter> filters) {_		this.filters = filters__	};register,common,link,com,sun,net,httpserver,filter,filters,to,be,applied,to,all,locally,registered,link,set,contexts,contexts;public,void,set,filters,list,filter,filters,this,filters,filters
SimpleHttpServerFactoryBean -> public void setFilters(List<Filter> filters);1468613531;Register common {@link com.sun.net.httpserver.Filter Filters} to be_applied to all locally registered {@link #setContexts contexts}.;public void setFilters(List<Filter> filters) {_		this.filters = filters__	};register,common,link,com,sun,net,httpserver,filter,filters,to,be,applied,to,all,locally,registered,link,set,contexts,contexts;public,void,set,filters,list,filter,filters,this,filters,filters
SimpleHttpServerFactoryBean -> public void setFilters(List<Filter> filters);1522192143;Register common {@link com.sun.net.httpserver.Filter Filters} to be_applied to all locally registered {@link #setContexts contexts}.;public void setFilters(List<Filter> filters) {_		this.filters = filters__	};register,common,link,com,sun,net,httpserver,filter,filters,to,be,applied,to,all,locally,registered,link,set,contexts,contexts;public,void,set,filters,list,filter,filters,this,filters,filters
SimpleHttpServerFactoryBean -> public void setFilters(List<Filter> filters);1530174524;Register common {@link com.sun.net.httpserver.Filter Filters} to be_applied to all locally registered {@link #setContexts contexts}.;public void setFilters(List<Filter> filters) {_		this.filters = filters__	};register,common,link,com,sun,net,httpserver,filter,filters,to,be,applied,to,all,locally,registered,link,set,contexts,contexts;public,void,set,filters,list,filter,filters,this,filters,filters
SimpleHttpServerFactoryBean -> public void setFilters(List<Filter> filters);1533666953;Register common {@link com.sun.net.httpserver.Filter Filters} to be_applied to all locally registered {@link #setContexts contexts}.;public void setFilters(List<Filter> filters) {_		this.filters = filters__	};register,common,link,com,sun,net,httpserver,filter,filters,to,be,applied,to,all,locally,registered,link,set,contexts,contexts;public,void,set,filters,list,filter,filters,this,filters,filters
SimpleHttpServerFactoryBean -> public void setShutdownDelay(int shutdownDelay);1328020251;Specify the number of seconds to wait until HTTP exchanges have_completed when shutting down the HTTP server. Default is 0.;public void setShutdownDelay(int shutdownDelay) {_		this.shutdownDelay = shutdownDelay__	};specify,the,number,of,seconds,to,wait,until,http,exchanges,have,completed,when,shutting,down,the,http,server,default,is,0;public,void,set,shutdown,delay,int,shutdown,delay,this,shutdown,delay,shutdown,delay
SimpleHttpServerFactoryBean -> public void setShutdownDelay(int shutdownDelay);1356735495;Specify the number of seconds to wait until HTTP exchanges have_completed when shutting down the HTTP server. Default is 0.;public void setShutdownDelay(int shutdownDelay) {_		this.shutdownDelay = shutdownDelay__	};specify,the,number,of,seconds,to,wait,until,http,exchanges,have,completed,when,shutting,down,the,http,server,default,is,0;public,void,set,shutdown,delay,int,shutdown,delay,this,shutdown,delay,shutdown,delay
SimpleHttpServerFactoryBean -> public void setShutdownDelay(int shutdownDelay);1357119239;Specify the number of seconds to wait until HTTP exchanges have_completed when shutting down the HTTP server. Default is 0.;public void setShutdownDelay(int shutdownDelay) {_		this.shutdownDelay = shutdownDelay__	};specify,the,number,of,seconds,to,wait,until,http,exchanges,have,completed,when,shutting,down,the,http,server,default,is,0;public,void,set,shutdown,delay,int,shutdown,delay,this,shutdown,delay,shutdown,delay
SimpleHttpServerFactoryBean -> public void setShutdownDelay(int shutdownDelay);1368482696;Specify the number of seconds to wait until HTTP exchanges have_completed when shutting down the HTTP server. Default is 0.;public void setShutdownDelay(int shutdownDelay) {_		this.shutdownDelay = shutdownDelay__	};specify,the,number,of,seconds,to,wait,until,http,exchanges,have,completed,when,shutting,down,the,http,server,default,is,0;public,void,set,shutdown,delay,int,shutdown,delay,this,shutdown,delay,shutdown,delay
SimpleHttpServerFactoryBean -> public void setShutdownDelay(int shutdownDelay);1398858661;Specify the number of seconds to wait until HTTP exchanges have_completed when shutting down the HTTP server. Default is 0.;public void setShutdownDelay(int shutdownDelay) {_		this.shutdownDelay = shutdownDelay__	};specify,the,number,of,seconds,to,wait,until,http,exchanges,have,completed,when,shutting,down,the,http,server,default,is,0;public,void,set,shutdown,delay,int,shutdown,delay,this,shutdown,delay,shutdown,delay
SimpleHttpServerFactoryBean -> public void setShutdownDelay(int shutdownDelay);1401910463;Specify the number of seconds to wait until HTTP exchanges have_completed when shutting down the HTTP server. Default is 0.;public void setShutdownDelay(int shutdownDelay) {_		this.shutdownDelay = shutdownDelay__	};specify,the,number,of,seconds,to,wait,until,http,exchanges,have,completed,when,shutting,down,the,http,server,default,is,0;public,void,set,shutdown,delay,int,shutdown,delay,this,shutdown,delay,shutdown,delay
SimpleHttpServerFactoryBean -> public void setShutdownDelay(int shutdownDelay);1468613531;Specify the number of seconds to wait until HTTP exchanges have_completed when shutting down the HTTP server. Default is 0.;public void setShutdownDelay(int shutdownDelay) {_		this.shutdownDelay = shutdownDelay__	};specify,the,number,of,seconds,to,wait,until,http,exchanges,have,completed,when,shutting,down,the,http,server,default,is,0;public,void,set,shutdown,delay,int,shutdown,delay,this,shutdown,delay,shutdown,delay
SimpleHttpServerFactoryBean -> public void setShutdownDelay(int shutdownDelay);1522192143;Specify the number of seconds to wait until HTTP exchanges have_completed when shutting down the HTTP server. Default is 0.;public void setShutdownDelay(int shutdownDelay) {_		this.shutdownDelay = shutdownDelay__	};specify,the,number,of,seconds,to,wait,until,http,exchanges,have,completed,when,shutting,down,the,http,server,default,is,0;public,void,set,shutdown,delay,int,shutdown,delay,this,shutdown,delay,shutdown,delay
SimpleHttpServerFactoryBean -> public void setShutdownDelay(int shutdownDelay);1530174524;Specify the number of seconds to wait until HTTP exchanges have_completed when shutting down the HTTP server. Default is 0.;public void setShutdownDelay(int shutdownDelay) {_		this.shutdownDelay = shutdownDelay__	};specify,the,number,of,seconds,to,wait,until,http,exchanges,have,completed,when,shutting,down,the,http,server,default,is,0;public,void,set,shutdown,delay,int,shutdown,delay,this,shutdown,delay,shutdown,delay
SimpleHttpServerFactoryBean -> public void setShutdownDelay(int shutdownDelay);1533666953;Specify the number of seconds to wait until HTTP exchanges have_completed when shutting down the HTTP server. Default is 0.;public void setShutdownDelay(int shutdownDelay) {_		this.shutdownDelay = shutdownDelay__	};specify,the,number,of,seconds,to,wait,until,http,exchanges,have,completed,when,shutting,down,the,http,server,default,is,0;public,void,set,shutdown,delay,int,shutdown,delay,this,shutdown,delay,shutdown,delay
SimpleHttpServerFactoryBean -> public void setExecutor(Executor executor);1328020251;Set the JDK concurrent executor to use for dispatching incoming requests._@see com.sun.net.httpserver.HttpServer#setExecutor;public void setExecutor(Executor executor) {_		this.executor = executor__	};set,the,jdk,concurrent,executor,to,use,for,dispatching,incoming,requests,see,com,sun,net,httpserver,http,server,set,executor;public,void,set,executor,executor,executor,this,executor,executor
SimpleHttpServerFactoryBean -> public void setExecutor(Executor executor);1356735495;Set the JDK concurrent executor to use for dispatching incoming requests._@see com.sun.net.httpserver.HttpServer#setExecutor;public void setExecutor(Executor executor) {_		this.executor = executor__	};set,the,jdk,concurrent,executor,to,use,for,dispatching,incoming,requests,see,com,sun,net,httpserver,http,server,set,executor;public,void,set,executor,executor,executor,this,executor,executor
SimpleHttpServerFactoryBean -> public void setExecutor(Executor executor);1357119239;Set the JDK concurrent executor to use for dispatching incoming requests._@see com.sun.net.httpserver.HttpServer#setExecutor;public void setExecutor(Executor executor) {_		this.executor = executor__	};set,the,jdk,concurrent,executor,to,use,for,dispatching,incoming,requests,see,com,sun,net,httpserver,http,server,set,executor;public,void,set,executor,executor,executor,this,executor,executor
SimpleHttpServerFactoryBean -> public void setExecutor(Executor executor);1368482696;Set the JDK concurrent executor to use for dispatching incoming requests._@see com.sun.net.httpserver.HttpServer#setExecutor;public void setExecutor(Executor executor) {_		this.executor = executor__	};set,the,jdk,concurrent,executor,to,use,for,dispatching,incoming,requests,see,com,sun,net,httpserver,http,server,set,executor;public,void,set,executor,executor,executor,this,executor,executor
SimpleHttpServerFactoryBean -> public void setExecutor(Executor executor);1398858661;Set the JDK concurrent executor to use for dispatching incoming requests._@see com.sun.net.httpserver.HttpServer#setExecutor;public void setExecutor(Executor executor) {_		this.executor = executor__	};set,the,jdk,concurrent,executor,to,use,for,dispatching,incoming,requests,see,com,sun,net,httpserver,http,server,set,executor;public,void,set,executor,executor,executor,this,executor,executor
SimpleHttpServerFactoryBean -> public void setExecutor(Executor executor);1401910463;Set the JDK concurrent executor to use for dispatching incoming requests._@see com.sun.net.httpserver.HttpServer#setExecutor;public void setExecutor(Executor executor) {_		this.executor = executor__	};set,the,jdk,concurrent,executor,to,use,for,dispatching,incoming,requests,see,com,sun,net,httpserver,http,server,set,executor;public,void,set,executor,executor,executor,this,executor,executor
SimpleHttpServerFactoryBean -> public void setExecutor(Executor executor);1468613531;Set the JDK concurrent executor to use for dispatching incoming requests._@see com.sun.net.httpserver.HttpServer#setExecutor;public void setExecutor(Executor executor) {_		this.executor = executor__	};set,the,jdk,concurrent,executor,to,use,for,dispatching,incoming,requests,see,com,sun,net,httpserver,http,server,set,executor;public,void,set,executor,executor,executor,this,executor,executor
SimpleHttpServerFactoryBean -> public void setExecutor(Executor executor);1522192143;Set the JDK concurrent executor to use for dispatching incoming requests._@see com.sun.net.httpserver.HttpServer#setExecutor;public void setExecutor(Executor executor) {_		this.executor = executor__	};set,the,jdk,concurrent,executor,to,use,for,dispatching,incoming,requests,see,com,sun,net,httpserver,http,server,set,executor;public,void,set,executor,executor,executor,this,executor,executor
SimpleHttpServerFactoryBean -> public void setExecutor(Executor executor);1530174524;Set the JDK concurrent executor to use for dispatching incoming requests._@see com.sun.net.httpserver.HttpServer#setExecutor;public void setExecutor(Executor executor) {_		this.executor = executor__	};set,the,jdk,concurrent,executor,to,use,for,dispatching,incoming,requests,see,com,sun,net,httpserver,http,server,set,executor;public,void,set,executor,executor,executor,this,executor,executor
SimpleHttpServerFactoryBean -> public void setExecutor(Executor executor);1533666953;Set the JDK concurrent executor to use for dispatching incoming requests._@see com.sun.net.httpserver.HttpServer#setExecutor;public void setExecutor(Executor executor) {_		this.executor = executor__	};set,the,jdk,concurrent,executor,to,use,for,dispatching,incoming,requests,see,com,sun,net,httpserver,http,server,set,executor;public,void,set,executor,executor,executor,this,executor,executor
