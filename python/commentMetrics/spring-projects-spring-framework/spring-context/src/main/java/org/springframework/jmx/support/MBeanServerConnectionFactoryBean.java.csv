# id;timestamp;commentText;codeText;commentWords;codeWords
MBeanServerConnectionFactoryBean -> @Override 	public void afterPropertiesSet() throws IOException;1356735495;Creates a {@code JMXConnector} for the given settings_and exposes the associated {@code MBeanServerConnection}.;@Override_	public void afterPropertiesSet() throws IOException {_		if (this.serviceUrl == null) {_			throw new IllegalArgumentException("Property 'serviceUrl' is required")__		}__		if (this.connectOnStartup) {_			connect()__		}_		else {_			createLazyConnection()__		}_	};creates,a,code,jmxconnector,for,the,given,settings,and,exposes,the,associated,code,mbean,server,connection;override,public,void,after,properties,set,throws,ioexception,if,this,service,url,null,throw,new,illegal,argument,exception,property,service,url,is,required,if,this,connect,on,startup,connect,else,create,lazy,connection
MBeanServerConnectionFactoryBean -> @Override 	public void afterPropertiesSet() throws IOException;1368482696;Creates a {@code JMXConnector} for the given settings_and exposes the associated {@code MBeanServerConnection}.;@Override_	public void afterPropertiesSet() throws IOException {_		if (this.serviceUrl == null) {_			throw new IllegalArgumentException("Property 'serviceUrl' is required")__		}__		if (this.connectOnStartup) {_			connect()__		}_		else {_			createLazyConnection()__		}_	};creates,a,code,jmxconnector,for,the,given,settings,and,exposes,the,associated,code,mbean,server,connection;override,public,void,after,properties,set,throws,ioexception,if,this,service,url,null,throw,new,illegal,argument,exception,property,service,url,is,required,if,this,connect,on,startup,connect,else,create,lazy,connection
MBeanServerConnectionFactoryBean -> @Override 	public void afterPropertiesSet() throws IOException;1467730834;Creates a {@code JMXConnector} for the given settings_and exposes the associated {@code MBeanServerConnection}.;@Override_	public void afterPropertiesSet() throws IOException {_		if (this.serviceUrl == null) {_			throw new IllegalArgumentException("Property 'serviceUrl' is required")__		}__		if (this.connectOnStartup) {_			connect()__		}_		else {_			createLazyConnection()__		}_	};creates,a,code,jmxconnector,for,the,given,settings,and,exposes,the,associated,code,mbean,server,connection;override,public,void,after,properties,set,throws,ioexception,if,this,service,url,null,throw,new,illegal,argument,exception,property,service,url,is,required,if,this,connect,on,startup,connect,else,create,lazy,connection
MBeanServerConnectionFactoryBean -> @Override 	public void afterPropertiesSet() throws IOException;1496242568;Creates a {@code JMXConnector} for the given settings_and exposes the associated {@code MBeanServerConnection}.;@Override_	public void afterPropertiesSet() throws IOException {_		if (this.serviceUrl == null) {_			throw new IllegalArgumentException("Property 'serviceUrl' is required")__		}__		if (this.connectOnStartup) {_			connect()__		}_		else {_			createLazyConnection()__		}_	};creates,a,code,jmxconnector,for,the,given,settings,and,exposes,the,associated,code,mbean,server,connection;override,public,void,after,properties,set,throws,ioexception,if,this,service,url,null,throw,new,illegal,argument,exception,property,service,url,is,required,if,this,connect,on,startup,connect,else,create,lazy,connection
MBeanServerConnectionFactoryBean -> @Override 	public void afterPropertiesSet() throws IOException;1496837955;Creates a {@code JMXConnector} for the given settings_and exposes the associated {@code MBeanServerConnection}.;@Override_	public void afterPropertiesSet() throws IOException {_		if (this.serviceUrl == null) {_			throw new IllegalArgumentException("Property 'serviceUrl' is required")__		}__		if (this.connectOnStartup) {_			connect()__		}_		else {_			createLazyConnection()__		}_	};creates,a,code,jmxconnector,for,the,given,settings,and,exposes,the,associated,code,mbean,server,connection;override,public,void,after,properties,set,throws,ioexception,if,this,service,url,null,throw,new,illegal,argument,exception,property,service,url,is,required,if,this,connect,on,startup,connect,else,create,lazy,connection
MBeanServerConnectionFactoryBean -> @Override 	public void afterPropertiesSet() throws IOException;1498780456;Creates a {@code JMXConnector} for the given settings_and exposes the associated {@code MBeanServerConnection}.;@Override_	public void afterPropertiesSet() throws IOException {_		if (this.serviceUrl == null) {_			throw new IllegalArgumentException("Property 'serviceUrl' is required")__		}__		if (this.connectOnStartup) {_			connect()__		}_		else {_			createLazyConnection()__		}_	};creates,a,code,jmxconnector,for,the,given,settings,and,exposes,the,associated,code,mbean,server,connection;override,public,void,after,properties,set,throws,ioexception,if,this,service,url,null,throw,new,illegal,argument,exception,property,service,url,is,required,if,this,connect,on,startup,connect,else,create,lazy,connection
MBeanServerConnectionFactoryBean -> @Override 	public void afterPropertiesSet() throws IOException;1502974979;Creates a {@code JMXConnector} for the given settings_and exposes the associated {@code MBeanServerConnection}.;@Override_	public void afterPropertiesSet() throws IOException {_		if (this.serviceUrl == null) {_			throw new IllegalArgumentException("Property 'serviceUrl' is required")__		}__		if (this.connectOnStartup) {_			connect()__		}_		else {_			createLazyConnection()__		}_	};creates,a,code,jmxconnector,for,the,given,settings,and,exposes,the,associated,code,mbean,server,connection;override,public,void,after,properties,set,throws,ioexception,if,this,service,url,null,throw,new,illegal,argument,exception,property,service,url,is,required,if,this,connect,on,startup,connect,else,create,lazy,connection
MBeanServerConnectionFactoryBean -> @Override 	public void afterPropertiesSet() throws IOException;1530174524;Creates a {@code JMXConnector} for the given settings_and exposes the associated {@code MBeanServerConnection}.;@Override_	public void afterPropertiesSet() throws IOException {_		if (this.serviceUrl == null) {_			throw new IllegalArgumentException("Property 'serviceUrl' is required")__		}__		if (this.connectOnStartup) {_			connect()__		}_		else {_			createLazyConnection()__		}_	};creates,a,code,jmxconnector,for,the,given,settings,and,exposes,the,associated,code,mbean,server,connection;override,public,void,after,properties,set,throws,ioexception,if,this,service,url,null,throw,new,illegal,argument,exception,property,service,url,is,required,if,this,connect,on,startup,connect,else,create,lazy,connection
MBeanServerConnectionFactoryBean -> public void setServiceUrl(String url) throws MalformedURLException;1328020251;Set the service URL of the remote <code>MBeanServer</code>.;public void setServiceUrl(String url) throws MalformedURLException {_		this.serviceUrl = new JMXServiceURL(url)__	};set,the,service,url,of,the,remote,code,mbean,server,code;public,void,set,service,url,string,url,throws,malformed,urlexception,this,service,url,new,jmxservice,url,url
MBeanServerConnectionFactoryBean -> public void setServiceUrl(String url) throws MalformedURLException;1356735495;Set the service URL of the remote {@code MBeanServer}.;public void setServiceUrl(String url) throws MalformedURLException {_		this.serviceUrl = new JMXServiceURL(url)__	};set,the,service,url,of,the,remote,code,mbean,server;public,void,set,service,url,string,url,throws,malformed,urlexception,this,service,url,new,jmxservice,url,url
MBeanServerConnectionFactoryBean -> public void setServiceUrl(String url) throws MalformedURLException;1357119239;Set the service URL of the remote {@code MBeanServer}.;public void setServiceUrl(String url) throws MalformedURLException {_		this.serviceUrl = new JMXServiceURL(url)__	};set,the,service,url,of,the,remote,code,mbean,server;public,void,set,service,url,string,url,throws,malformed,urlexception,this,service,url,new,jmxservice,url,url
MBeanServerConnectionFactoryBean -> public void setServiceUrl(String url) throws MalformedURLException;1368482696;Set the service URL of the remote {@code MBeanServer}.;public void setServiceUrl(String url) throws MalformedURLException {_		this.serviceUrl = new JMXServiceURL(url)__	};set,the,service,url,of,the,remote,code,mbean,server;public,void,set,service,url,string,url,throws,malformed,urlexception,this,service,url,new,jmxservice,url,url
MBeanServerConnectionFactoryBean -> public void setServiceUrl(String url) throws MalformedURLException;1467730834;Set the service URL of the remote {@code MBeanServer}.;public void setServiceUrl(String url) throws MalformedURLException {_		this.serviceUrl = new JMXServiceURL(url)__	};set,the,service,url,of,the,remote,code,mbean,server;public,void,set,service,url,string,url,throws,malformed,urlexception,this,service,url,new,jmxservice,url,url
MBeanServerConnectionFactoryBean -> public void setServiceUrl(String url) throws MalformedURLException;1496242568;Set the service URL of the remote {@code MBeanServer}.;public void setServiceUrl(String url) throws MalformedURLException {_		this.serviceUrl = new JMXServiceURL(url)__	};set,the,service,url,of,the,remote,code,mbean,server;public,void,set,service,url,string,url,throws,malformed,urlexception,this,service,url,new,jmxservice,url,url
MBeanServerConnectionFactoryBean -> public void setServiceUrl(String url) throws MalformedURLException;1496837955;Set the service URL of the remote {@code MBeanServer}.;public void setServiceUrl(String url) throws MalformedURLException {_		this.serviceUrl = new JMXServiceURL(url)__	};set,the,service,url,of,the,remote,code,mbean,server;public,void,set,service,url,string,url,throws,malformed,urlexception,this,service,url,new,jmxservice,url,url
MBeanServerConnectionFactoryBean -> public void setServiceUrl(String url) throws MalformedURLException;1498780456;Set the service URL of the remote {@code MBeanServer}.;public void setServiceUrl(String url) throws MalformedURLException {_		this.serviceUrl = new JMXServiceURL(url)__	};set,the,service,url,of,the,remote,code,mbean,server;public,void,set,service,url,string,url,throws,malformed,urlexception,this,service,url,new,jmxservice,url,url
MBeanServerConnectionFactoryBean -> public void setServiceUrl(String url) throws MalformedURLException;1502974979;Set the service URL of the remote {@code MBeanServer}.;public void setServiceUrl(String url) throws MalformedURLException {_		this.serviceUrl = new JMXServiceURL(url)__	};set,the,service,url,of,the,remote,code,mbean,server;public,void,set,service,url,string,url,throws,malformed,urlexception,this,service,url,new,jmxservice,url,url
MBeanServerConnectionFactoryBean -> public void setServiceUrl(String url) throws MalformedURLException;1530174524;Set the service URL of the remote {@code MBeanServer}.;public void setServiceUrl(String url) throws MalformedURLException {_		this.serviceUrl = new JMXServiceURL(url)__	};set,the,service,url,of,the,remote,code,mbean,server;public,void,set,service,url,string,url,throws,malformed,urlexception,this,service,url,new,jmxservice,url,url
MBeanServerConnectionFactoryBean -> public void setConnectOnStartup(boolean connectOnStartup);1328020251;Set whether to connect to the server on startup. Default is "true"._<p>Can be turned off to allow for late start of the JMX server._In this case, the JMX connector will be fetched on first access.;public void setConnectOnStartup(boolean connectOnStartup) {_		this.connectOnStartup = connectOnStartup__	};set,whether,to,connect,to,the,server,on,startup,default,is,true,p,can,be,turned,off,to,allow,for,late,start,of,the,jmx,server,in,this,case,the,jmx,connector,will,be,fetched,on,first,access;public,void,set,connect,on,startup,boolean,connect,on,startup,this,connect,on,startup,connect,on,startup
MBeanServerConnectionFactoryBean -> public void setConnectOnStartup(boolean connectOnStartup);1356735495;Set whether to connect to the server on startup. Default is "true"._<p>Can be turned off to allow for late start of the JMX server._In this case, the JMX connector will be fetched on first access.;public void setConnectOnStartup(boolean connectOnStartup) {_		this.connectOnStartup = connectOnStartup__	};set,whether,to,connect,to,the,server,on,startup,default,is,true,p,can,be,turned,off,to,allow,for,late,start,of,the,jmx,server,in,this,case,the,jmx,connector,will,be,fetched,on,first,access;public,void,set,connect,on,startup,boolean,connect,on,startup,this,connect,on,startup,connect,on,startup
MBeanServerConnectionFactoryBean -> public void setConnectOnStartup(boolean connectOnStartup);1357119239;Set whether to connect to the server on startup. Default is "true"._<p>Can be turned off to allow for late start of the JMX server._In this case, the JMX connector will be fetched on first access.;public void setConnectOnStartup(boolean connectOnStartup) {_		this.connectOnStartup = connectOnStartup__	};set,whether,to,connect,to,the,server,on,startup,default,is,true,p,can,be,turned,off,to,allow,for,late,start,of,the,jmx,server,in,this,case,the,jmx,connector,will,be,fetched,on,first,access;public,void,set,connect,on,startup,boolean,connect,on,startup,this,connect,on,startup,connect,on,startup
MBeanServerConnectionFactoryBean -> public void setConnectOnStartup(boolean connectOnStartup);1368482696;Set whether to connect to the server on startup. Default is "true"._<p>Can be turned off to allow for late start of the JMX server._In this case, the JMX connector will be fetched on first access.;public void setConnectOnStartup(boolean connectOnStartup) {_		this.connectOnStartup = connectOnStartup__	};set,whether,to,connect,to,the,server,on,startup,default,is,true,p,can,be,turned,off,to,allow,for,late,start,of,the,jmx,server,in,this,case,the,jmx,connector,will,be,fetched,on,first,access;public,void,set,connect,on,startup,boolean,connect,on,startup,this,connect,on,startup,connect,on,startup
MBeanServerConnectionFactoryBean -> public void setConnectOnStartup(boolean connectOnStartup);1467730834;Set whether to connect to the server on startup. Default is "true"._<p>Can be turned off to allow for late start of the JMX server._In this case, the JMX connector will be fetched on first access.;public void setConnectOnStartup(boolean connectOnStartup) {_		this.connectOnStartup = connectOnStartup__	};set,whether,to,connect,to,the,server,on,startup,default,is,true,p,can,be,turned,off,to,allow,for,late,start,of,the,jmx,server,in,this,case,the,jmx,connector,will,be,fetched,on,first,access;public,void,set,connect,on,startup,boolean,connect,on,startup,this,connect,on,startup,connect,on,startup
MBeanServerConnectionFactoryBean -> public void setConnectOnStartup(boolean connectOnStartup);1496242568;Set whether to connect to the server on startup. Default is "true"._<p>Can be turned off to allow for late start of the JMX server._In this case, the JMX connector will be fetched on first access.;public void setConnectOnStartup(boolean connectOnStartup) {_		this.connectOnStartup = connectOnStartup__	};set,whether,to,connect,to,the,server,on,startup,default,is,true,p,can,be,turned,off,to,allow,for,late,start,of,the,jmx,server,in,this,case,the,jmx,connector,will,be,fetched,on,first,access;public,void,set,connect,on,startup,boolean,connect,on,startup,this,connect,on,startup,connect,on,startup
MBeanServerConnectionFactoryBean -> public void setConnectOnStartup(boolean connectOnStartup);1496837955;Set whether to connect to the server on startup. Default is "true"._<p>Can be turned off to allow for late start of the JMX server._In this case, the JMX connector will be fetched on first access.;public void setConnectOnStartup(boolean connectOnStartup) {_		this.connectOnStartup = connectOnStartup__	};set,whether,to,connect,to,the,server,on,startup,default,is,true,p,can,be,turned,off,to,allow,for,late,start,of,the,jmx,server,in,this,case,the,jmx,connector,will,be,fetched,on,first,access;public,void,set,connect,on,startup,boolean,connect,on,startup,this,connect,on,startup,connect,on,startup
MBeanServerConnectionFactoryBean -> public void setConnectOnStartup(boolean connectOnStartup);1498780456;Set whether to connect to the server on startup. Default is "true"._<p>Can be turned off to allow for late start of the JMX server._In this case, the JMX connector will be fetched on first access.;public void setConnectOnStartup(boolean connectOnStartup) {_		this.connectOnStartup = connectOnStartup__	};set,whether,to,connect,to,the,server,on,startup,default,is,true,p,can,be,turned,off,to,allow,for,late,start,of,the,jmx,server,in,this,case,the,jmx,connector,will,be,fetched,on,first,access;public,void,set,connect,on,startup,boolean,connect,on,startup,this,connect,on,startup,connect,on,startup
MBeanServerConnectionFactoryBean -> public void setConnectOnStartup(boolean connectOnStartup);1502974979;Set whether to connect to the server on startup. Default is "true"._<p>Can be turned off to allow for late start of the JMX server._In this case, the JMX connector will be fetched on first access.;public void setConnectOnStartup(boolean connectOnStartup) {_		this.connectOnStartup = connectOnStartup__	};set,whether,to,connect,to,the,server,on,startup,default,is,true,p,can,be,turned,off,to,allow,for,late,start,of,the,jmx,server,in,this,case,the,jmx,connector,will,be,fetched,on,first,access;public,void,set,connect,on,startup,boolean,connect,on,startup,this,connect,on,startup,connect,on,startup
MBeanServerConnectionFactoryBean -> public void setConnectOnStartup(boolean connectOnStartup);1530174524;Set whether to connect to the server on startup. Default is "true"._<p>Can be turned off to allow for late start of the JMX server._In this case, the JMX connector will be fetched on first access.;public void setConnectOnStartup(boolean connectOnStartup) {_		this.connectOnStartup = connectOnStartup__	};set,whether,to,connect,to,the,server,on,startup,default,is,true,p,can,be,turned,off,to,allow,for,late,start,of,the,jmx,server,in,this,case,the,jmx,connector,will,be,fetched,on,first,access;public,void,set,connect,on,startup,boolean,connect,on,startup,this,connect,on,startup,connect,on,startup
MBeanServerConnectionFactoryBean -> public void afterPropertiesSet() throws IOException;1328020251;Creates a <code>JMXConnector</code> for the given settings_and exposes the associated <code>MBeanServerConnection</code>.;public void afterPropertiesSet() throws IOException {_		if (this.serviceUrl == null) {_			throw new IllegalArgumentException("Property 'serviceUrl' is required")__		}__		if (this.connectOnStartup) {_			connect()__		}_		else {_			createLazyConnection()__		}_	};creates,a,code,jmxconnector,code,for,the,given,settings,and,exposes,the,associated,code,mbean,server,connection,code;public,void,after,properties,set,throws,ioexception,if,this,service,url,null,throw,new,illegal,argument,exception,property,service,url,is,required,if,this,connect,on,startup,connect,else,create,lazy,connection
MBeanServerConnectionFactoryBean -> public void afterPropertiesSet() throws IOException;1357119239;Creates a {@code JMXConnector} for the given settings_and exposes the associated {@code MBeanServerConnection}.;public void afterPropertiesSet() throws IOException {_		if (this.serviceUrl == null) {_			throw new IllegalArgumentException("Property 'serviceUrl' is required")__		}__		if (this.connectOnStartup) {_			connect()__		}_		else {_			createLazyConnection()__		}_	};creates,a,code,jmxconnector,for,the,given,settings,and,exposes,the,associated,code,mbean,server,connection;public,void,after,properties,set,throws,ioexception,if,this,service,url,null,throw,new,illegal,argument,exception,property,service,url,is,required,if,this,connect,on,startup,connect,else,create,lazy,connection
MBeanServerConnectionFactoryBean -> public void destroy() throws IOException;1328020251;Closes the underlying <code>JMXConnector</code>.;public void destroy() throws IOException {_		if (this.connectorTargetSource == null || this.connectorTargetSource.isInitialized()) {_			this.connector.close()__		}_	};closes,the,underlying,code,jmxconnector,code;public,void,destroy,throws,ioexception,if,this,connector,target,source,null,this,connector,target,source,is,initialized,this,connector,close
MBeanServerConnectionFactoryBean -> public void destroy() throws IOException;1357119239;Closes the underlying {@code JMXConnector}.;public void destroy() throws IOException {_		if (this.connectorTargetSource == null || this.connectorTargetSource.isInitialized()) {_			this.connector.close()__		}_	};closes,the,underlying,code,jmxconnector;public,void,destroy,throws,ioexception,if,this,connector,target,source,null,this,connector,target,source,is,initialized,this,connector,close
MBeanServerConnectionFactoryBean -> @Override 	public void destroy() throws IOException;1356735495;Closes the underlying {@code JMXConnector}.;@Override_	public void destroy() throws IOException {_		if (this.connectorTargetSource == null || this.connectorTargetSource.isInitialized()) {_			this.connector.close()__		}_	};closes,the,underlying,code,jmxconnector;override,public,void,destroy,throws,ioexception,if,this,connector,target,source,null,this,connector,target,source,is,initialized,this,connector,close
MBeanServerConnectionFactoryBean -> @Override 	public void destroy() throws IOException;1368482696;Closes the underlying {@code JMXConnector}.;@Override_	public void destroy() throws IOException {_		if (this.connectorTargetSource == null || this.connectorTargetSource.isInitialized()) {_			this.connector.close()__		}_	};closes,the,underlying,code,jmxconnector;override,public,void,destroy,throws,ioexception,if,this,connector,target,source,null,this,connector,target,source,is,initialized,this,connector,close
MBeanServerConnectionFactoryBean -> @Override 	public void destroy() throws IOException;1467730834;Closes the underlying {@code JMXConnector}.;@Override_	public void destroy() throws IOException {_		if (this.connectorTargetSource == null || this.connectorTargetSource.isInitialized()) {_			this.connector.close()__		}_	};closes,the,underlying,code,jmxconnector;override,public,void,destroy,throws,ioexception,if,this,connector,target,source,null,this,connector,target,source,is,initialized,this,connector,close
MBeanServerConnectionFactoryBean -> @Override 	public void destroy() throws IOException;1496242568;Closes the underlying {@code JMXConnector}.;@Override_	public void destroy() throws IOException {_		if (this.connectorTargetSource == null || this.connectorTargetSource.isInitialized()) {_			this.connector.close()__		}_	};closes,the,underlying,code,jmxconnector;override,public,void,destroy,throws,ioexception,if,this,connector,target,source,null,this,connector,target,source,is,initialized,this,connector,close
MBeanServerConnectionFactoryBean -> @Override 	public void destroy() throws IOException;1496837955;Closes the underlying {@code JMXConnector}.;@Override_	public void destroy() throws IOException {_		if (this.connectorTargetSource == null || this.connectorTargetSource.isInitialized()) {_			this.connector.close()__		}_	};closes,the,underlying,code,jmxconnector;override,public,void,destroy,throws,ioexception,if,this,connector,target,source,null,this,connector,target,source,is,initialized,this,connector,close
MBeanServerConnectionFactoryBean -> @Override 	public void destroy() throws IOException;1498780456;Closes the underlying {@code JMXConnector}.;@Override_	public void destroy() throws IOException {_		if (this.connector != null &&_				(this.connectorTargetSource == null || this.connectorTargetSource.isInitialized())) {_			this.connector.close()__		}_	};closes,the,underlying,code,jmxconnector;override,public,void,destroy,throws,ioexception,if,this,connector,null,this,connector,target,source,null,this,connector,target,source,is,initialized,this,connector,close
MBeanServerConnectionFactoryBean -> @Override 	public void destroy() throws IOException;1502974979;Closes the underlying {@code JMXConnector}.;@Override_	public void destroy() throws IOException {_		if (this.connector != null &&_				(this.connectorTargetSource == null || this.connectorTargetSource.isInitialized())) {_			this.connector.close()__		}_	};closes,the,underlying,code,jmxconnector;override,public,void,destroy,throws,ioexception,if,this,connector,null,this,connector,target,source,null,this,connector,target,source,is,initialized,this,connector,close
MBeanServerConnectionFactoryBean -> @Override 	public void destroy() throws IOException;1530174524;Closes the underlying {@code JMXConnector}.;@Override_	public void destroy() throws IOException {_		if (this.connector != null &&_				(this.connectorTargetSource == null || this.connectorTargetSource.isInitialized())) {_			this.connector.close()__		}_	};closes,the,underlying,code,jmxconnector;override,public,void,destroy,throws,ioexception,if,this,connector,null,this,connector,target,source,null,this,connector,target,source,is,initialized,this,connector,close
MBeanServerConnectionFactoryBean -> public void setEnvironment(Properties environment);1328020251;Set the environment properties used to construct the <code>JMXConnector</code>_as <code>java.util.Properties</code> (String key/value pairs).;public void setEnvironment(Properties environment) {_		CollectionUtils.mergePropertiesIntoMap(environment, this.environment)__	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,code,as,code,java,util,properties,code,string,key,value,pairs;public,void,set,environment,properties,environment,collection,utils,merge,properties,into,map,environment,this,environment
MBeanServerConnectionFactoryBean -> public void setEnvironment(Properties environment);1356735495;Set the environment properties used to construct the {@code JMXConnector}_as {@code java.util.Properties} (String key/value pairs).;public void setEnvironment(Properties environment) {_		CollectionUtils.mergePropertiesIntoMap(environment, this.environment)__	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,code,java,util,properties,string,key,value,pairs;public,void,set,environment,properties,environment,collection,utils,merge,properties,into,map,environment,this,environment
MBeanServerConnectionFactoryBean -> public void setEnvironment(Properties environment);1357119239;Set the environment properties used to construct the {@code JMXConnector}_as {@code java.util.Properties} (String key/value pairs).;public void setEnvironment(Properties environment) {_		CollectionUtils.mergePropertiesIntoMap(environment, this.environment)__	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,code,java,util,properties,string,key,value,pairs;public,void,set,environment,properties,environment,collection,utils,merge,properties,into,map,environment,this,environment
MBeanServerConnectionFactoryBean -> public void setEnvironment(Properties environment);1368482696;Set the environment properties used to construct the {@code JMXConnector}_as {@code java.util.Properties} (String key/value pairs).;public void setEnvironment(Properties environment) {_		CollectionUtils.mergePropertiesIntoMap(environment, this.environment)__	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,code,java,util,properties,string,key,value,pairs;public,void,set,environment,properties,environment,collection,utils,merge,properties,into,map,environment,this,environment
MBeanServerConnectionFactoryBean -> public void setEnvironment(Properties environment);1467730834;Set the environment properties used to construct the {@code JMXConnector}_as {@code java.util.Properties} (String key/value pairs).;public void setEnvironment(Properties environment) {_		CollectionUtils.mergePropertiesIntoMap(environment, this.environment)__	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,code,java,util,properties,string,key,value,pairs;public,void,set,environment,properties,environment,collection,utils,merge,properties,into,map,environment,this,environment
MBeanServerConnectionFactoryBean -> public void setEnvironment(Properties environment);1496242568;Set the environment properties used to construct the {@code JMXConnector}_as {@code java.util.Properties} (String key/value pairs).;public void setEnvironment(Properties environment) {_		CollectionUtils.mergePropertiesIntoMap(environment, this.environment)__	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,code,java,util,properties,string,key,value,pairs;public,void,set,environment,properties,environment,collection,utils,merge,properties,into,map,environment,this,environment
MBeanServerConnectionFactoryBean -> public void setEnvironment(Properties environment);1496837955;Set the environment properties used to construct the {@code JMXConnector}_as {@code java.util.Properties} (String key/value pairs).;public void setEnvironment(Properties environment) {_		CollectionUtils.mergePropertiesIntoMap(environment, this.environment)__	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,code,java,util,properties,string,key,value,pairs;public,void,set,environment,properties,environment,collection,utils,merge,properties,into,map,environment,this,environment
MBeanServerConnectionFactoryBean -> public void setEnvironment(Properties environment);1498780456;Set the environment properties used to construct the {@code JMXConnector}_as {@code java.util.Properties} (String key/value pairs).;public void setEnvironment(Properties environment) {_		CollectionUtils.mergePropertiesIntoMap(environment, this.environment)__	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,code,java,util,properties,string,key,value,pairs;public,void,set,environment,properties,environment,collection,utils,merge,properties,into,map,environment,this,environment
MBeanServerConnectionFactoryBean -> public void setEnvironment(Properties environment);1502974979;Set the environment properties used to construct the {@code JMXConnector}_as {@code java.util.Properties} (String key/value pairs).;public void setEnvironment(Properties environment) {_		CollectionUtils.mergePropertiesIntoMap(environment, this.environment)__	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,code,java,util,properties,string,key,value,pairs;public,void,set,environment,properties,environment,collection,utils,merge,properties,into,map,environment,this,environment
MBeanServerConnectionFactoryBean -> public void setEnvironment(Properties environment);1530174524;Set the environment properties used to construct the {@code JMXConnector}_as {@code java.util.Properties} (String key/value pairs).;public void setEnvironment(Properties environment) {_		CollectionUtils.mergePropertiesIntoMap(environment, this.environment)__	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,code,java,util,properties,string,key,value,pairs;public,void,set,environment,properties,environment,collection,utils,merge,properties,into,map,environment,this,environment
MBeanServerConnectionFactoryBean -> private void connect() throws IOException;1328020251;Connects to the remote <code>MBeanServer</code> using the configured service URL and_environment properties.;private void connect() throws IOException {_		this.connector = JMXConnectorFactory.connect(this.serviceUrl, this.environment)__		this.connection = this.connector.getMBeanServerConnection()__	};connects,to,the,remote,code,mbean,server,code,using,the,configured,service,url,and,environment,properties;private,void,connect,throws,ioexception,this,connector,jmxconnector,factory,connect,this,service,url,this,environment,this,connection,this,connector,get,mbean,server,connection
MBeanServerConnectionFactoryBean -> private void connect() throws IOException;1356735495;Connects to the remote {@code MBeanServer} using the configured service URL and_environment properties.;private void connect() throws IOException {_		this.connector = JMXConnectorFactory.connect(this.serviceUrl, this.environment)__		this.connection = this.connector.getMBeanServerConnection()__	};connects,to,the,remote,code,mbean,server,using,the,configured,service,url,and,environment,properties;private,void,connect,throws,ioexception,this,connector,jmxconnector,factory,connect,this,service,url,this,environment,this,connection,this,connector,get,mbean,server,connection
MBeanServerConnectionFactoryBean -> private void connect() throws IOException;1357119239;Connects to the remote {@code MBeanServer} using the configured service URL and_environment properties.;private void connect() throws IOException {_		this.connector = JMXConnectorFactory.connect(this.serviceUrl, this.environment)__		this.connection = this.connector.getMBeanServerConnection()__	};connects,to,the,remote,code,mbean,server,using,the,configured,service,url,and,environment,properties;private,void,connect,throws,ioexception,this,connector,jmxconnector,factory,connect,this,service,url,this,environment,this,connection,this,connector,get,mbean,server,connection
MBeanServerConnectionFactoryBean -> private void connect() throws IOException;1368482696;Connects to the remote {@code MBeanServer} using the configured service URL and_environment properties.;private void connect() throws IOException {_		this.connector = JMXConnectorFactory.connect(this.serviceUrl, this.environment)__		this.connection = this.connector.getMBeanServerConnection()__	};connects,to,the,remote,code,mbean,server,using,the,configured,service,url,and,environment,properties;private,void,connect,throws,ioexception,this,connector,jmxconnector,factory,connect,this,service,url,this,environment,this,connection,this,connector,get,mbean,server,connection
MBeanServerConnectionFactoryBean -> private void connect() throws IOException;1467730834;Connects to the remote {@code MBeanServer} using the configured service URL and_environment properties.;private void connect() throws IOException {_		this.connector = JMXConnectorFactory.connect(this.serviceUrl, this.environment)__		this.connection = this.connector.getMBeanServerConnection()__	};connects,to,the,remote,code,mbean,server,using,the,configured,service,url,and,environment,properties;private,void,connect,throws,ioexception,this,connector,jmxconnector,factory,connect,this,service,url,this,environment,this,connection,this,connector,get,mbean,server,connection
MBeanServerConnectionFactoryBean -> private void connect() throws IOException;1496242568;Connects to the remote {@code MBeanServer} using the configured service URL and_environment properties.;private void connect() throws IOException {_		this.connector = JMXConnectorFactory.connect(this.serviceUrl, this.environment)__		this.connection = this.connector.getMBeanServerConnection()__	};connects,to,the,remote,code,mbean,server,using,the,configured,service,url,and,environment,properties;private,void,connect,throws,ioexception,this,connector,jmxconnector,factory,connect,this,service,url,this,environment,this,connection,this,connector,get,mbean,server,connection
MBeanServerConnectionFactoryBean -> private void connect() throws IOException;1496837955;Connects to the remote {@code MBeanServer} using the configured service URL and_environment properties.;private void connect() throws IOException {_		this.connector = JMXConnectorFactory.connect(this.serviceUrl, this.environment)__		this.connection = this.connector.getMBeanServerConnection()__	};connects,to,the,remote,code,mbean,server,using,the,configured,service,url,and,environment,properties;private,void,connect,throws,ioexception,this,connector,jmxconnector,factory,connect,this,service,url,this,environment,this,connection,this,connector,get,mbean,server,connection
MBeanServerConnectionFactoryBean -> private void connect() throws IOException;1498780456;Connects to the remote {@code MBeanServer} using the configured service URL and_environment properties.;private void connect() throws IOException {_		Assert.state(this.serviceUrl != null, "No JMXServiceURL set")__		this.connector = JMXConnectorFactory.connect(this.serviceUrl, this.environment)__		this.connection = this.connector.getMBeanServerConnection()__	};connects,to,the,remote,code,mbean,server,using,the,configured,service,url,and,environment,properties;private,void,connect,throws,ioexception,assert,state,this,service,url,null,no,jmxservice,url,set,this,connector,jmxconnector,factory,connect,this,service,url,this,environment,this,connection,this,connector,get,mbean,server,connection
MBeanServerConnectionFactoryBean -> private void connect() throws IOException;1502974979;Connects to the remote {@code MBeanServer} using the configured service URL and_environment properties.;private void connect() throws IOException {_		Assert.state(this.serviceUrl != null, "No JMXServiceURL set")__		this.connector = JMXConnectorFactory.connect(this.serviceUrl, this.environment)__		this.connection = this.connector.getMBeanServerConnection()__	};connects,to,the,remote,code,mbean,server,using,the,configured,service,url,and,environment,properties;private,void,connect,throws,ioexception,assert,state,this,service,url,null,no,jmxservice,url,set,this,connector,jmxconnector,factory,connect,this,service,url,this,environment,this,connection,this,connector,get,mbean,server,connection
MBeanServerConnectionFactoryBean -> private void connect() throws IOException;1530174524;Connects to the remote {@code MBeanServer} using the configured service URL and_environment properties.;private void connect() throws IOException {_		Assert.state(this.serviceUrl != null, "No JMXServiceURL set")__		this.connector = JMXConnectorFactory.connect(this.serviceUrl, this.environment)__		this.connection = this.connector.getMBeanServerConnection()__	};connects,to,the,remote,code,mbean,server,using,the,configured,service,url,and,environment,properties;private,void,connect,throws,ioexception,assert,state,this,service,url,null,no,jmxservice,url,set,this,connector,jmxconnector,factory,connect,this,service,url,this,environment,this,connection,this,connector,get,mbean,server,connection
MBeanServerConnectionFactoryBean -> private void createLazyConnection();1328020251;Creates lazy proxies for the <code>JMXConnector</code> and <code>MBeanServerConnection</code>;private void createLazyConnection() {_		this.connectorTargetSource = new JMXConnectorLazyInitTargetSource()__		TargetSource connectionTargetSource = new MBeanServerConnectionLazyInitTargetSource()___		this.connector = (JMXConnector)_				new ProxyFactory(JMXConnector.class, this.connectorTargetSource).getProxy(this.beanClassLoader)__		this.connection = (MBeanServerConnection)_				new ProxyFactory(MBeanServerConnection.class, connectionTargetSource).getProxy(this.beanClassLoader)__	};creates,lazy,proxies,for,the,code,jmxconnector,code,and,code,mbean,server,connection,code;private,void,create,lazy,connection,this,connector,target,source,new,jmxconnector,lazy,init,target,source,target,source,connection,target,source,new,mbean,server,connection,lazy,init,target,source,this,connector,jmxconnector,new,proxy,factory,jmxconnector,class,this,connector,target,source,get,proxy,this,bean,class,loader,this,connection,mbean,server,connection,new,proxy,factory,mbean,server,connection,class,connection,target,source,get,proxy,this,bean,class,loader
MBeanServerConnectionFactoryBean -> private void createLazyConnection();1356735495;Creates lazy proxies for the {@code JMXConnector} and {@code MBeanServerConnection};private void createLazyConnection() {_		this.connectorTargetSource = new JMXConnectorLazyInitTargetSource()__		TargetSource connectionTargetSource = new MBeanServerConnectionLazyInitTargetSource()___		this.connector = (JMXConnector)_				new ProxyFactory(JMXConnector.class, this.connectorTargetSource).getProxy(this.beanClassLoader)__		this.connection = (MBeanServerConnection)_				new ProxyFactory(MBeanServerConnection.class, connectionTargetSource).getProxy(this.beanClassLoader)__	};creates,lazy,proxies,for,the,code,jmxconnector,and,code,mbean,server,connection;private,void,create,lazy,connection,this,connector,target,source,new,jmxconnector,lazy,init,target,source,target,source,connection,target,source,new,mbean,server,connection,lazy,init,target,source,this,connector,jmxconnector,new,proxy,factory,jmxconnector,class,this,connector,target,source,get,proxy,this,bean,class,loader,this,connection,mbean,server,connection,new,proxy,factory,mbean,server,connection,class,connection,target,source,get,proxy,this,bean,class,loader
MBeanServerConnectionFactoryBean -> private void createLazyConnection();1357119239;Creates lazy proxies for the {@code JMXConnector} and {@code MBeanServerConnection};private void createLazyConnection() {_		this.connectorTargetSource = new JMXConnectorLazyInitTargetSource()__		TargetSource connectionTargetSource = new MBeanServerConnectionLazyInitTargetSource()___		this.connector = (JMXConnector)_				new ProxyFactory(JMXConnector.class, this.connectorTargetSource).getProxy(this.beanClassLoader)__		this.connection = (MBeanServerConnection)_				new ProxyFactory(MBeanServerConnection.class, connectionTargetSource).getProxy(this.beanClassLoader)__	};creates,lazy,proxies,for,the,code,jmxconnector,and,code,mbean,server,connection;private,void,create,lazy,connection,this,connector,target,source,new,jmxconnector,lazy,init,target,source,target,source,connection,target,source,new,mbean,server,connection,lazy,init,target,source,this,connector,jmxconnector,new,proxy,factory,jmxconnector,class,this,connector,target,source,get,proxy,this,bean,class,loader,this,connection,mbean,server,connection,new,proxy,factory,mbean,server,connection,class,connection,target,source,get,proxy,this,bean,class,loader
MBeanServerConnectionFactoryBean -> private void createLazyConnection();1368482696;Creates lazy proxies for the {@code JMXConnector} and {@code MBeanServerConnection};private void createLazyConnection() {_		this.connectorTargetSource = new JMXConnectorLazyInitTargetSource()__		TargetSource connectionTargetSource = new MBeanServerConnectionLazyInitTargetSource()___		this.connector = (JMXConnector)_				new ProxyFactory(JMXConnector.class, this.connectorTargetSource).getProxy(this.beanClassLoader)__		this.connection = (MBeanServerConnection)_				new ProxyFactory(MBeanServerConnection.class, connectionTargetSource).getProxy(this.beanClassLoader)__	};creates,lazy,proxies,for,the,code,jmxconnector,and,code,mbean,server,connection;private,void,create,lazy,connection,this,connector,target,source,new,jmxconnector,lazy,init,target,source,target,source,connection,target,source,new,mbean,server,connection,lazy,init,target,source,this,connector,jmxconnector,new,proxy,factory,jmxconnector,class,this,connector,target,source,get,proxy,this,bean,class,loader,this,connection,mbean,server,connection,new,proxy,factory,mbean,server,connection,class,connection,target,source,get,proxy,this,bean,class,loader
MBeanServerConnectionFactoryBean -> private void createLazyConnection();1467730834;Creates lazy proxies for the {@code JMXConnector} and {@code MBeanServerConnection};private void createLazyConnection() {_		this.connectorTargetSource = new JMXConnectorLazyInitTargetSource()__		TargetSource connectionTargetSource = new MBeanServerConnectionLazyInitTargetSource()___		this.connector = (JMXConnector)_				new ProxyFactory(JMXConnector.class, this.connectorTargetSource).getProxy(this.beanClassLoader)__		this.connection = (MBeanServerConnection)_				new ProxyFactory(MBeanServerConnection.class, connectionTargetSource).getProxy(this.beanClassLoader)__	};creates,lazy,proxies,for,the,code,jmxconnector,and,code,mbean,server,connection;private,void,create,lazy,connection,this,connector,target,source,new,jmxconnector,lazy,init,target,source,target,source,connection,target,source,new,mbean,server,connection,lazy,init,target,source,this,connector,jmxconnector,new,proxy,factory,jmxconnector,class,this,connector,target,source,get,proxy,this,bean,class,loader,this,connection,mbean,server,connection,new,proxy,factory,mbean,server,connection,class,connection,target,source,get,proxy,this,bean,class,loader
MBeanServerConnectionFactoryBean -> private void createLazyConnection();1496242568;Creates lazy proxies for the {@code JMXConnector} and {@code MBeanServerConnection};private void createLazyConnection() {_		this.connectorTargetSource = new JMXConnectorLazyInitTargetSource()__		TargetSource connectionTargetSource = new MBeanServerConnectionLazyInitTargetSource()___		this.connector = (JMXConnector)_				new ProxyFactory(JMXConnector.class, this.connectorTargetSource).getProxy(this.beanClassLoader)__		this.connection = (MBeanServerConnection)_				new ProxyFactory(MBeanServerConnection.class, connectionTargetSource).getProxy(this.beanClassLoader)__	};creates,lazy,proxies,for,the,code,jmxconnector,and,code,mbean,server,connection;private,void,create,lazy,connection,this,connector,target,source,new,jmxconnector,lazy,init,target,source,target,source,connection,target,source,new,mbean,server,connection,lazy,init,target,source,this,connector,jmxconnector,new,proxy,factory,jmxconnector,class,this,connector,target,source,get,proxy,this,bean,class,loader,this,connection,mbean,server,connection,new,proxy,factory,mbean,server,connection,class,connection,target,source,get,proxy,this,bean,class,loader
MBeanServerConnectionFactoryBean -> private void createLazyConnection();1496837955;Creates lazy proxies for the {@code JMXConnector} and {@code MBeanServerConnection};private void createLazyConnection() {_		this.connectorTargetSource = new JMXConnectorLazyInitTargetSource()__		TargetSource connectionTargetSource = new MBeanServerConnectionLazyInitTargetSource()___		this.connector = (JMXConnector)_				new ProxyFactory(JMXConnector.class, this.connectorTargetSource).getProxy(this.beanClassLoader)__		this.connection = (MBeanServerConnection)_				new ProxyFactory(MBeanServerConnection.class, connectionTargetSource).getProxy(this.beanClassLoader)__	};creates,lazy,proxies,for,the,code,jmxconnector,and,code,mbean,server,connection;private,void,create,lazy,connection,this,connector,target,source,new,jmxconnector,lazy,init,target,source,target,source,connection,target,source,new,mbean,server,connection,lazy,init,target,source,this,connector,jmxconnector,new,proxy,factory,jmxconnector,class,this,connector,target,source,get,proxy,this,bean,class,loader,this,connection,mbean,server,connection,new,proxy,factory,mbean,server,connection,class,connection,target,source,get,proxy,this,bean,class,loader
MBeanServerConnectionFactoryBean -> private void createLazyConnection();1498780456;Creates lazy proxies for the {@code JMXConnector} and {@code MBeanServerConnection};private void createLazyConnection() {_		this.connectorTargetSource = new JMXConnectorLazyInitTargetSource()__		TargetSource connectionTargetSource = new MBeanServerConnectionLazyInitTargetSource()___		this.connector = (JMXConnector)_				new ProxyFactory(JMXConnector.class, this.connectorTargetSource).getProxy(this.beanClassLoader)__		this.connection = (MBeanServerConnection)_				new ProxyFactory(MBeanServerConnection.class, connectionTargetSource).getProxy(this.beanClassLoader)__	};creates,lazy,proxies,for,the,code,jmxconnector,and,code,mbean,server,connection;private,void,create,lazy,connection,this,connector,target,source,new,jmxconnector,lazy,init,target,source,target,source,connection,target,source,new,mbean,server,connection,lazy,init,target,source,this,connector,jmxconnector,new,proxy,factory,jmxconnector,class,this,connector,target,source,get,proxy,this,bean,class,loader,this,connection,mbean,server,connection,new,proxy,factory,mbean,server,connection,class,connection,target,source,get,proxy,this,bean,class,loader
MBeanServerConnectionFactoryBean -> private void createLazyConnection();1502974979;Creates lazy proxies for the {@code JMXConnector} and {@code MBeanServerConnection};private void createLazyConnection() {_		this.connectorTargetSource = new JMXConnectorLazyInitTargetSource()__		TargetSource connectionTargetSource = new MBeanServerConnectionLazyInitTargetSource()___		this.connector = (JMXConnector)_				new ProxyFactory(JMXConnector.class, this.connectorTargetSource).getProxy(this.beanClassLoader)__		this.connection = (MBeanServerConnection)_				new ProxyFactory(MBeanServerConnection.class, connectionTargetSource).getProxy(this.beanClassLoader)__	};creates,lazy,proxies,for,the,code,jmxconnector,and,code,mbean,server,connection;private,void,create,lazy,connection,this,connector,target,source,new,jmxconnector,lazy,init,target,source,target,source,connection,target,source,new,mbean,server,connection,lazy,init,target,source,this,connector,jmxconnector,new,proxy,factory,jmxconnector,class,this,connector,target,source,get,proxy,this,bean,class,loader,this,connection,mbean,server,connection,new,proxy,factory,mbean,server,connection,class,connection,target,source,get,proxy,this,bean,class,loader
MBeanServerConnectionFactoryBean -> private void createLazyConnection();1530174524;Creates lazy proxies for the {@code JMXConnector} and {@code MBeanServerConnection}.;private void createLazyConnection() {_		this.connectorTargetSource = new JMXConnectorLazyInitTargetSource()__		TargetSource connectionTargetSource = new MBeanServerConnectionLazyInitTargetSource()___		this.connector = (JMXConnector)_				new ProxyFactory(JMXConnector.class, this.connectorTargetSource).getProxy(this.beanClassLoader)__		this.connection = (MBeanServerConnection)_				new ProxyFactory(MBeanServerConnection.class, connectionTargetSource).getProxy(this.beanClassLoader)__	};creates,lazy,proxies,for,the,code,jmxconnector,and,code,mbean,server,connection;private,void,create,lazy,connection,this,connector,target,source,new,jmxconnector,lazy,init,target,source,target,source,connection,target,source,new,mbean,server,connection,lazy,init,target,source,this,connector,jmxconnector,new,proxy,factory,jmxconnector,class,this,connector,target,source,get,proxy,this,bean,class,loader,this,connection,mbean,server,connection,new,proxy,factory,mbean,server,connection,class,connection,target,source,get,proxy,this,bean,class,loader
MBeanServerConnectionFactoryBean -> public void setEnvironmentMap(Map<String, ?> environment);1328020251;Set the environment properties used to construct the <code>JMXConnector</code>_as a <code>Map</code> of String keys and arbitrary Object values.;public void setEnvironmentMap(Map<String, ?> environment) {_		if (environment != null) {_			this.environment.putAll(environment)__		}_	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,code,as,a,code,map,code,of,string,keys,and,arbitrary,object,values;public,void,set,environment,map,map,string,environment,if,environment,null,this,environment,put,all,environment
MBeanServerConnectionFactoryBean -> public void setEnvironmentMap(Map<String, ?> environment);1356735495;Set the environment properties used to construct the {@code JMXConnector}_as a {@code Map} of String keys and arbitrary Object values.;public void setEnvironmentMap(Map<String, ?> environment) {_		if (environment != null) {_			this.environment.putAll(environment)__		}_	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,a,code,map,of,string,keys,and,arbitrary,object,values;public,void,set,environment,map,map,string,environment,if,environment,null,this,environment,put,all,environment
MBeanServerConnectionFactoryBean -> public void setEnvironmentMap(Map<String, ?> environment);1357119239;Set the environment properties used to construct the {@code JMXConnector}_as a {@code Map} of String keys and arbitrary Object values.;public void setEnvironmentMap(Map<String, ?> environment) {_		if (environment != null) {_			this.environment.putAll(environment)__		}_	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,a,code,map,of,string,keys,and,arbitrary,object,values;public,void,set,environment,map,map,string,environment,if,environment,null,this,environment,put,all,environment
MBeanServerConnectionFactoryBean -> public void setEnvironmentMap(Map<String, ?> environment);1368482696;Set the environment properties used to construct the {@code JMXConnector}_as a {@code Map} of String keys and arbitrary Object values.;public void setEnvironmentMap(Map<String, ?> environment) {_		if (environment != null) {_			this.environment.putAll(environment)__		}_	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,a,code,map,of,string,keys,and,arbitrary,object,values;public,void,set,environment,map,map,string,environment,if,environment,null,this,environment,put,all,environment
MBeanServerConnectionFactoryBean -> public void setEnvironmentMap(Map<String, ?> environment);1467730834;Set the environment properties used to construct the {@code JMXConnector}_as a {@code Map} of String keys and arbitrary Object values.;public void setEnvironmentMap(Map<String, ?> environment) {_		if (environment != null) {_			this.environment.putAll(environment)__		}_	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,a,code,map,of,string,keys,and,arbitrary,object,values;public,void,set,environment,map,map,string,environment,if,environment,null,this,environment,put,all,environment
MBeanServerConnectionFactoryBean -> public void setEnvironmentMap(Map<String, ?> environment);1496242568;Set the environment properties used to construct the {@code JMXConnector}_as a {@code Map} of String keys and arbitrary Object values.;public void setEnvironmentMap(Map<String, ?> environment) {_		if (environment != null) {_			this.environment.putAll(environment)__		}_	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,a,code,map,of,string,keys,and,arbitrary,object,values;public,void,set,environment,map,map,string,environment,if,environment,null,this,environment,put,all,environment
MBeanServerConnectionFactoryBean -> public void setEnvironmentMap(@Nullable Map<String, ?> environment);1496837955;Set the environment properties used to construct the {@code JMXConnector}_as a {@code Map} of String keys and arbitrary Object values.;public void setEnvironmentMap(@Nullable Map<String, ?> environment) {_		if (environment != null) {_			this.environment.putAll(environment)__		}_	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,a,code,map,of,string,keys,and,arbitrary,object,values;public,void,set,environment,map,nullable,map,string,environment,if,environment,null,this,environment,put,all,environment
MBeanServerConnectionFactoryBean -> public void setEnvironmentMap(@Nullable Map<String, ?> environment);1498780456;Set the environment properties used to construct the {@code JMXConnector}_as a {@code Map} of String keys and arbitrary Object values.;public void setEnvironmentMap(@Nullable Map<String, ?> environment) {_		if (environment != null) {_			this.environment.putAll(environment)__		}_	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,a,code,map,of,string,keys,and,arbitrary,object,values;public,void,set,environment,map,nullable,map,string,environment,if,environment,null,this,environment,put,all,environment
MBeanServerConnectionFactoryBean -> public void setEnvironmentMap(@Nullable Map<String, ?> environment);1502974979;Set the environment properties used to construct the {@code JMXConnector}_as a {@code Map} of String keys and arbitrary Object values.;public void setEnvironmentMap(@Nullable Map<String, ?> environment) {_		if (environment != null) {_			this.environment.putAll(environment)__		}_	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,a,code,map,of,string,keys,and,arbitrary,object,values;public,void,set,environment,map,nullable,map,string,environment,if,environment,null,this,environment,put,all,environment
MBeanServerConnectionFactoryBean -> public void setEnvironmentMap(@Nullable Map<String, ?> environment);1530174524;Set the environment properties used to construct the {@code JMXConnector}_as a {@code Map} of String keys and arbitrary Object values.;public void setEnvironmentMap(@Nullable Map<String, ?> environment) {_		if (environment != null) {_			this.environment.putAll(environment)__		}_	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,a,code,map,of,string,keys,and,arbitrary,object,values;public,void,set,environment,map,nullable,map,string,environment,if,environment,null,this,environment,put,all,environment
