# id;timestamp;commentText;codeText;commentWords;codeWords
NotificationListenerRegistrar -> public void setServer(MBeanServerConnection server);1328020251;Set the <code>MBeanServerConnection</code> used to connect to the_MBean which all invocations are routed to.;public void setServer(MBeanServerConnection server) {_		this.server = server__	};set,the,code,mbean,server,connection,code,used,to,connect,to,the,mbean,which,all,invocations,are,routed,to;public,void,set,server,mbean,server,connection,server,this,server,server
NotificationListenerRegistrar -> public void setServer(MBeanServerConnection server);1356735495;Set the {@code MBeanServerConnection} used to connect to the_MBean which all invocations are routed to.;public void setServer(MBeanServerConnection server) {_		this.server = server__	};set,the,code,mbean,server,connection,used,to,connect,to,the,mbean,which,all,invocations,are,routed,to;public,void,set,server,mbean,server,connection,server,this,server,server
NotificationListenerRegistrar -> public void setServer(MBeanServerConnection server);1357119239;Set the {@code MBeanServerConnection} used to connect to the_MBean which all invocations are routed to.;public void setServer(MBeanServerConnection server) {_		this.server = server__	};set,the,code,mbean,server,connection,used,to,connect,to,the,mbean,which,all,invocations,are,routed,to;public,void,set,server,mbean,server,connection,server,this,server,server
NotificationListenerRegistrar -> public void setServer(MBeanServerConnection server);1368482696;Set the {@code MBeanServerConnection} used to connect to the_MBean which all invocations are routed to.;public void setServer(MBeanServerConnection server) {_		this.server = server__	};set,the,code,mbean,server,connection,used,to,connect,to,the,mbean,which,all,invocations,are,routed,to;public,void,set,server,mbean,server,connection,server,this,server,server
NotificationListenerRegistrar -> public void setServer(MBeanServerConnection server);1413848647;Set the {@code MBeanServerConnection} used to connect to the_MBean which all invocations are routed to.;public void setServer(MBeanServerConnection server) {_		this.server = server__	};set,the,code,mbean,server,connection,used,to,connect,to,the,mbean,which,all,invocations,are,routed,to;public,void,set,server,mbean,server,connection,server,this,server,server
NotificationListenerRegistrar -> public void setServer(MBeanServerConnection server);1498780456;Set the {@code MBeanServerConnection} used to connect to the_MBean which all invocations are routed to.;public void setServer(MBeanServerConnection server) {_		this.server = server__	};set,the,code,mbean,server,connection,used,to,connect,to,the,mbean,which,all,invocations,are,routed,to;public,void,set,server,mbean,server,connection,server,this,server,server
NotificationListenerRegistrar -> public void setServer(MBeanServerConnection server);1500448076;Set the {@code MBeanServerConnection} used to connect to the_MBean which all invocations are routed to.;public void setServer(MBeanServerConnection server) {_		this.server = server__	};set,the,code,mbean,server,connection,used,to,connect,to,the,mbean,which,all,invocations,are,routed,to;public,void,set,server,mbean,server,connection,server,this,server,server
NotificationListenerRegistrar -> public void setServer(MBeanServerConnection server);1530174524;Set the {@code MBeanServerConnection} used to connect to the_MBean which all invocations are routed to.;public void setServer(MBeanServerConnection server) {_		this.server = server__	};set,the,code,mbean,server,connection,used,to,connect,to,the,mbean,which,all,invocations,are,routed,to;public,void,set,server,mbean,server,connection,server,this,server,server
NotificationListenerRegistrar -> @Override 	public void destroy();1356735495;Unregisters the specified {@code NotificationListener}.;@Override_	public void destroy() {_		try {_			if (this.actualObjectNames != null) {_				for (ObjectName actualObjectName : this.actualObjectNames) {_					try {_						this.server.removeNotificationListener(_								actualObjectName, getNotificationListener(), getNotificationFilter(), getHandback())__					}_					catch (Exception ex) {_						if (logger.isDebugEnabled()) {_							logger.debug("Unable to unregister NotificationListener", ex)__						}_					}_				}_			}_		}_		finally {_			this.connector.close()__		}_	};unregisters,the,specified,code,notification,listener;override,public,void,destroy,try,if,this,actual,object,names,null,for,object,name,actual,object,name,this,actual,object,names,try,this,server,remove,notification,listener,actual,object,name,get,notification,listener,get,notification,filter,get,handback,catch,exception,ex,if,logger,is,debug,enabled,logger,debug,unable,to,unregister,notification,listener,ex,finally,this,connector,close
NotificationListenerRegistrar -> @Override 	public void destroy();1368482696;Unregisters the specified {@code NotificationListener}.;@Override_	public void destroy() {_		try {_			if (this.actualObjectNames != null) {_				for (ObjectName actualObjectName : this.actualObjectNames) {_					try {_						this.server.removeNotificationListener(_								actualObjectName, getNotificationListener(), getNotificationFilter(), getHandback())__					}_					catch (Exception ex) {_						if (logger.isDebugEnabled()) {_							logger.debug("Unable to unregister NotificationListener", ex)__						}_					}_				}_			}_		}_		finally {_			this.connector.close()__		}_	};unregisters,the,specified,code,notification,listener;override,public,void,destroy,try,if,this,actual,object,names,null,for,object,name,actual,object,name,this,actual,object,names,try,this,server,remove,notification,listener,actual,object,name,get,notification,listener,get,notification,filter,get,handback,catch,exception,ex,if,logger,is,debug,enabled,logger,debug,unable,to,unregister,notification,listener,ex,finally,this,connector,close
NotificationListenerRegistrar -> @Override 	public void destroy();1413848647;Unregisters the specified {@code NotificationListener}.;@Override_	public void destroy() {_		try {_			if (this.actualObjectNames != null) {_				for (ObjectName actualObjectName : this.actualObjectNames) {_					try {_						this.server.removeNotificationListener(_								actualObjectName, getNotificationListener(), getNotificationFilter(), getHandback())__					}_					catch (Exception ex) {_						if (logger.isDebugEnabled()) {_							logger.debug("Unable to unregister NotificationListener", ex)__						}_					}_				}_			}_		}_		finally {_			this.connector.close()__		}_	};unregisters,the,specified,code,notification,listener;override,public,void,destroy,try,if,this,actual,object,names,null,for,object,name,actual,object,name,this,actual,object,names,try,this,server,remove,notification,listener,actual,object,name,get,notification,listener,get,notification,filter,get,handback,catch,exception,ex,if,logger,is,debug,enabled,logger,debug,unable,to,unregister,notification,listener,ex,finally,this,connector,close
NotificationListenerRegistrar -> @Override 	public void destroy();1498780456;Unregisters the specified {@code NotificationListener}.;@Override_	public void destroy() {_		try {_			if (this.server != null && this.actualObjectNames != null) {_				for (ObjectName actualObjectName : this.actualObjectNames) {_					try {_						this.server.removeNotificationListener(_								actualObjectName, getNotificationListener(), getNotificationFilter(), getHandback())__					}_					catch (Exception ex) {_						if (logger.isDebugEnabled()) {_							logger.debug("Unable to unregister NotificationListener", ex)__						}_					}_				}_			}_		}_		finally {_			this.connector.close()__		}_	};unregisters,the,specified,code,notification,listener;override,public,void,destroy,try,if,this,server,null,this,actual,object,names,null,for,object,name,actual,object,name,this,actual,object,names,try,this,server,remove,notification,listener,actual,object,name,get,notification,listener,get,notification,filter,get,handback,catch,exception,ex,if,logger,is,debug,enabled,logger,debug,unable,to,unregister,notification,listener,ex,finally,this,connector,close
NotificationListenerRegistrar -> @Override 	public void destroy();1500448076;Unregisters the specified {@code NotificationListener}.;@Override_	public void destroy() {_		try {_			if (this.server != null && this.actualObjectNames != null) {_				for (ObjectName actualObjectName : this.actualObjectNames) {_					try {_						this.server.removeNotificationListener(_								actualObjectName, getNotificationListener(), getNotificationFilter(), getHandback())__					}_					catch (Exception ex) {_						if (logger.isDebugEnabled()) {_							logger.debug("Unable to unregister NotificationListener", ex)__						}_					}_				}_			}_		}_		finally {_			this.connector.close()__		}_	};unregisters,the,specified,code,notification,listener;override,public,void,destroy,try,if,this,server,null,this,actual,object,names,null,for,object,name,actual,object,name,this,actual,object,names,try,this,server,remove,notification,listener,actual,object,name,get,notification,listener,get,notification,filter,get,handback,catch,exception,ex,if,logger,is,debug,enabled,logger,debug,unable,to,unregister,notification,listener,ex,finally,this,connector,close
NotificationListenerRegistrar -> @Override 	public void destroy();1530174524;Unregisters the specified {@code NotificationListener}.;@Override_	public void destroy() {_		try {_			if (this.server != null && this.actualObjectNames != null) {_				for (ObjectName actualObjectName : this.actualObjectNames) {_					try {_						this.server.removeNotificationListener(_								actualObjectName, getNotificationListener(), getNotificationFilter(), getHandback())__					}_					catch (Exception ex) {_						if (logger.isDebugEnabled()) {_							logger.debug("Unable to unregister NotificationListener", ex)__						}_					}_				}_			}_		}_		finally {_			this.connector.close()__		}_	};unregisters,the,specified,code,notification,listener;override,public,void,destroy,try,if,this,server,null,this,actual,object,names,null,for,object,name,actual,object,name,this,actual,object,names,try,this,server,remove,notification,listener,actual,object,name,get,notification,listener,get,notification,filter,get,handback,catch,exception,ex,if,logger,is,debug,enabled,logger,debug,unable,to,unregister,notification,listener,ex,finally,this,connector,close
NotificationListenerRegistrar -> public void setAgentId(String agentId);1328020251;Set the agent id of the <code>MBeanServer</code> to locate._<p>Default is none. If specified, this will result in an_attempt being made to locate the attendant MBeanServer, unless_the {@link #setServiceUrl "serviceUrl"} property has been set._@see javax.management.MBeanServerFactory#findMBeanServer(String)_<p>Specifying the empty String indicates the platform MBeanServer.;public void setAgentId(String agentId) {_		this.agentId = agentId__	};set,the,agent,id,of,the,code,mbean,server,code,to,locate,p,default,is,none,if,specified,this,will,result,in,an,attempt,being,made,to,locate,the,attendant,mbean,server,unless,the,link,set,service,url,service,url,property,has,been,set,see,javax,management,mbean,server,factory,find,mbean,server,string,p,specifying,the,empty,string,indicates,the,platform,mbean,server;public,void,set,agent,id,string,agent,id,this,agent,id,agent,id
NotificationListenerRegistrar -> public void setAgentId(String agentId);1356735495;Set the agent id of the {@code MBeanServer} to locate._<p>Default is none. If specified, this will result in an_attempt being made to locate the attendant MBeanServer, unless_the {@link #setServiceUrl "serviceUrl"} property has been set._@see javax.management.MBeanServerFactory#findMBeanServer(String)_<p>Specifying the empty String indicates the platform MBeanServer.;public void setAgentId(String agentId) {_		this.agentId = agentId__	};set,the,agent,id,of,the,code,mbean,server,to,locate,p,default,is,none,if,specified,this,will,result,in,an,attempt,being,made,to,locate,the,attendant,mbean,server,unless,the,link,set,service,url,service,url,property,has,been,set,see,javax,management,mbean,server,factory,find,mbean,server,string,p,specifying,the,empty,string,indicates,the,platform,mbean,server;public,void,set,agent,id,string,agent,id,this,agent,id,agent,id
NotificationListenerRegistrar -> public void setAgentId(String agentId);1357119239;Set the agent id of the {@code MBeanServer} to locate._<p>Default is none. If specified, this will result in an_attempt being made to locate the attendant MBeanServer, unless_the {@link #setServiceUrl "serviceUrl"} property has been set._@see javax.management.MBeanServerFactory#findMBeanServer(String)_<p>Specifying the empty String indicates the platform MBeanServer.;public void setAgentId(String agentId) {_		this.agentId = agentId__	};set,the,agent,id,of,the,code,mbean,server,to,locate,p,default,is,none,if,specified,this,will,result,in,an,attempt,being,made,to,locate,the,attendant,mbean,server,unless,the,link,set,service,url,service,url,property,has,been,set,see,javax,management,mbean,server,factory,find,mbean,server,string,p,specifying,the,empty,string,indicates,the,platform,mbean,server;public,void,set,agent,id,string,agent,id,this,agent,id,agent,id
NotificationListenerRegistrar -> public void setAgentId(String agentId);1368482696;Set the agent id of the {@code MBeanServer} to locate._<p>Default is none. If specified, this will result in an_attempt being made to locate the attendant MBeanServer, unless_the {@link #setServiceUrl "serviceUrl"} property has been set._@see javax.management.MBeanServerFactory#findMBeanServer(String)_<p>Specifying the empty String indicates the platform MBeanServer.;public void setAgentId(String agentId) {_		this.agentId = agentId__	};set,the,agent,id,of,the,code,mbean,server,to,locate,p,default,is,none,if,specified,this,will,result,in,an,attempt,being,made,to,locate,the,attendant,mbean,server,unless,the,link,set,service,url,service,url,property,has,been,set,see,javax,management,mbean,server,factory,find,mbean,server,string,p,specifying,the,empty,string,indicates,the,platform,mbean,server;public,void,set,agent,id,string,agent,id,this,agent,id,agent,id
NotificationListenerRegistrar -> public void setAgentId(String agentId);1413848647;Set the agent id of the {@code MBeanServer} to locate._<p>Default is none. If specified, this will result in an_attempt being made to locate the attendant MBeanServer, unless_the {@link #setServiceUrl "serviceUrl"} property has been set._@see javax.management.MBeanServerFactory#findMBeanServer(String)_<p>Specifying the empty String indicates the platform MBeanServer.;public void setAgentId(String agentId) {_		this.agentId = agentId__	};set,the,agent,id,of,the,code,mbean,server,to,locate,p,default,is,none,if,specified,this,will,result,in,an,attempt,being,made,to,locate,the,attendant,mbean,server,unless,the,link,set,service,url,service,url,property,has,been,set,see,javax,management,mbean,server,factory,find,mbean,server,string,p,specifying,the,empty,string,indicates,the,platform,mbean,server;public,void,set,agent,id,string,agent,id,this,agent,id,agent,id
NotificationListenerRegistrar -> public void setAgentId(String agentId);1498780456;Set the agent id of the {@code MBeanServer} to locate._<p>Default is none. If specified, this will result in an_attempt being made to locate the attendant MBeanServer, unless_the {@link #setServiceUrl "serviceUrl"} property has been set._@see javax.management.MBeanServerFactory#findMBeanServer(String)_<p>Specifying the empty String indicates the platform MBeanServer.;public void setAgentId(String agentId) {_		this.agentId = agentId__	};set,the,agent,id,of,the,code,mbean,server,to,locate,p,default,is,none,if,specified,this,will,result,in,an,attempt,being,made,to,locate,the,attendant,mbean,server,unless,the,link,set,service,url,service,url,property,has,been,set,see,javax,management,mbean,server,factory,find,mbean,server,string,p,specifying,the,empty,string,indicates,the,platform,mbean,server;public,void,set,agent,id,string,agent,id,this,agent,id,agent,id
NotificationListenerRegistrar -> public void setAgentId(String agentId);1500448076;Set the agent id of the {@code MBeanServer} to locate._<p>Default is none. If specified, this will result in an_attempt being made to locate the attendant MBeanServer, unless_the {@link #setServiceUrl "serviceUrl"} property has been set._@see javax.management.MBeanServerFactory#findMBeanServer(String)_<p>Specifying the empty String indicates the platform MBeanServer.;public void setAgentId(String agentId) {_		this.agentId = agentId__	};set,the,agent,id,of,the,code,mbean,server,to,locate,p,default,is,none,if,specified,this,will,result,in,an,attempt,being,made,to,locate,the,attendant,mbean,server,unless,the,link,set,service,url,service,url,property,has,been,set,see,javax,management,mbean,server,factory,find,mbean,server,string,p,specifying,the,empty,string,indicates,the,platform,mbean,server;public,void,set,agent,id,string,agent,id,this,agent,id,agent,id
NotificationListenerRegistrar -> public void setAgentId(String agentId);1530174524;Set the agent id of the {@code MBeanServer} to locate._<p>Default is none. If specified, this will result in an_attempt being made to locate the attendant MBeanServer, unless_the {@link #setServiceUrl "serviceUrl"} property has been set._@see javax.management.MBeanServerFactory#findMBeanServer(String)_<p>Specifying the empty String indicates the platform MBeanServer.;public void setAgentId(String agentId) {_		this.agentId = agentId__	};set,the,agent,id,of,the,code,mbean,server,to,locate,p,default,is,none,if,specified,this,will,result,in,an,attempt,being,made,to,locate,the,attendant,mbean,server,unless,the,link,set,service,url,service,url,property,has,been,set,see,javax,management,mbean,server,factory,find,mbean,server,string,p,specifying,the,empty,string,indicates,the,platform,mbean,server;public,void,set,agent,id,string,agent,id,this,agent,id,agent,id
NotificationListenerRegistrar -> public void setServiceUrl(String url) throws MalformedURLException;1328020251;Set the service URL of the remote <code>MBeanServer</code>.;public void setServiceUrl(String url) throws MalformedURLException {_		this.serviceUrl = new JMXServiceURL(url)__	};set,the,service,url,of,the,remote,code,mbean,server,code;public,void,set,service,url,string,url,throws,malformed,urlexception,this,service,url,new,jmxservice,url,url
NotificationListenerRegistrar -> public void setServiceUrl(String url) throws MalformedURLException;1356735495;Set the service URL of the remote {@code MBeanServer}.;public void setServiceUrl(String url) throws MalformedURLException {_		this.serviceUrl = new JMXServiceURL(url)__	};set,the,service,url,of,the,remote,code,mbean,server;public,void,set,service,url,string,url,throws,malformed,urlexception,this,service,url,new,jmxservice,url,url
NotificationListenerRegistrar -> public void setServiceUrl(String url) throws MalformedURLException;1357119239;Set the service URL of the remote {@code MBeanServer}.;public void setServiceUrl(String url) throws MalformedURLException {_		this.serviceUrl = new JMXServiceURL(url)__	};set,the,service,url,of,the,remote,code,mbean,server;public,void,set,service,url,string,url,throws,malformed,urlexception,this,service,url,new,jmxservice,url,url
NotificationListenerRegistrar -> public void setServiceUrl(String url) throws MalformedURLException;1368482696;Set the service URL of the remote {@code MBeanServer}.;public void setServiceUrl(String url) throws MalformedURLException {_		this.serviceUrl = new JMXServiceURL(url)__	};set,the,service,url,of,the,remote,code,mbean,server;public,void,set,service,url,string,url,throws,malformed,urlexception,this,service,url,new,jmxservice,url,url
NotificationListenerRegistrar -> public void setServiceUrl(String url) throws MalformedURLException;1413848647;Set the service URL of the remote {@code MBeanServer}.;public void setServiceUrl(String url) throws MalformedURLException {_		this.serviceUrl = new JMXServiceURL(url)__	};set,the,service,url,of,the,remote,code,mbean,server;public,void,set,service,url,string,url,throws,malformed,urlexception,this,service,url,new,jmxservice,url,url
NotificationListenerRegistrar -> public void setServiceUrl(String url) throws MalformedURLException;1498780456;Set the service URL of the remote {@code MBeanServer}.;public void setServiceUrl(String url) throws MalformedURLException {_		this.serviceUrl = new JMXServiceURL(url)__	};set,the,service,url,of,the,remote,code,mbean,server;public,void,set,service,url,string,url,throws,malformed,urlexception,this,service,url,new,jmxservice,url,url
NotificationListenerRegistrar -> public void setServiceUrl(String url) throws MalformedURLException;1500448076;Set the service URL of the remote {@code MBeanServer}.;public void setServiceUrl(String url) throws MalformedURLException {_		this.serviceUrl = new JMXServiceURL(url)__	};set,the,service,url,of,the,remote,code,mbean,server;public,void,set,service,url,string,url,throws,malformed,urlexception,this,service,url,new,jmxservice,url,url
NotificationListenerRegistrar -> public void setServiceUrl(String url) throws MalformedURLException;1530174524;Set the service URL of the remote {@code MBeanServer}.;public void setServiceUrl(String url) throws MalformedURLException {_		this.serviceUrl = new JMXServiceURL(url)__	};set,the,service,url,of,the,remote,code,mbean,server;public,void,set,service,url,string,url,throws,malformed,urlexception,this,service,url,new,jmxservice,url,url
NotificationListenerRegistrar -> public void destroy();1328020251;Unregisters the specified <code>NotificationListener</code>.;public void destroy() {_		try {_			if (this.actualObjectNames != null) {_				for (ObjectName actualObjectName : this.actualObjectNames) {_					try {_						this.server.removeNotificationListener(_								actualObjectName, getNotificationListener(), getNotificationFilter(), getHandback())__					}_					catch (Exception ex) {_						if (logger.isDebugEnabled()) {_							logger.debug("Unable to unregister NotificationListener", ex)__						}_					}_				}_			}_		}_		finally {_			this.connector.close()__		}_	};unregisters,the,specified,code,notification,listener,code;public,void,destroy,try,if,this,actual,object,names,null,for,object,name,actual,object,name,this,actual,object,names,try,this,server,remove,notification,listener,actual,object,name,get,notification,listener,get,notification,filter,get,handback,catch,exception,ex,if,logger,is,debug,enabled,logger,debug,unable,to,unregister,notification,listener,ex,finally,this,connector,close
NotificationListenerRegistrar -> public void destroy();1357119239;Unregisters the specified {@code NotificationListener}.;public void destroy() {_		try {_			if (this.actualObjectNames != null) {_				for (ObjectName actualObjectName : this.actualObjectNames) {_					try {_						this.server.removeNotificationListener(_								actualObjectName, getNotificationListener(), getNotificationFilter(), getHandback())__					}_					catch (Exception ex) {_						if (logger.isDebugEnabled()) {_							logger.debug("Unable to unregister NotificationListener", ex)__						}_					}_				}_			}_		}_		finally {_			this.connector.close()__		}_	};unregisters,the,specified,code,notification,listener;public,void,destroy,try,if,this,actual,object,names,null,for,object,name,actual,object,name,this,actual,object,names,try,this,server,remove,notification,listener,actual,object,name,get,notification,listener,get,notification,filter,get,handback,catch,exception,ex,if,logger,is,debug,enabled,logger,debug,unable,to,unregister,notification,listener,ex,finally,this,connector,close
NotificationListenerRegistrar -> public void setEnvironment(@Nullable Map<String, ?> environment);1500448076;Specify the environment for the JMX connector._@see javax.management.remote.JMXConnectorFactory#connect(javax.management.remote.JMXServiceURL, java.util.Map);public void setEnvironment(@Nullable Map<String, ?> environment) {_		this.environment = environment__	};specify,the,environment,for,the,jmx,connector,see,javax,management,remote,jmxconnector,factory,connect,javax,management,remote,jmxservice,url,java,util,map;public,void,set,environment,nullable,map,string,environment,this,environment,environment
NotificationListenerRegistrar -> public void setEnvironment(@Nullable Map<String, ?> environment);1530174524;Specify the environment for the JMX connector._@see javax.management.remote.JMXConnectorFactory#connect(javax.management.remote.JMXServiceURL, java.util.Map);public void setEnvironment(@Nullable Map<String, ?> environment) {_		this.environment = environment__	};specify,the,environment,for,the,jmx,connector,see,javax,management,remote,jmxconnector,factory,connect,javax,management,remote,jmxservice,url,java,util,map;public,void,set,environment,nullable,map,string,environment,this,environment,environment
NotificationListenerRegistrar -> public void setEnvironment(Map<String, ?> environment);1328020251;Specify the environment for the JMX connector._@see javax.management.remote.JMXConnectorFactory#connect(javax.management.remote.JMXServiceURL, java.util.Map);public void setEnvironment(Map<String, ?> environment) {_		this.environment = environment__	};specify,the,environment,for,the,jmx,connector,see,javax,management,remote,jmxconnector,factory,connect,javax,management,remote,jmxservice,url,java,util,map;public,void,set,environment,map,string,environment,this,environment,environment
NotificationListenerRegistrar -> public void setEnvironment(Map<String, ?> environment);1356735495;Specify the environment for the JMX connector._@see javax.management.remote.JMXConnectorFactory#connect(javax.management.remote.JMXServiceURL, java.util.Map);public void setEnvironment(Map<String, ?> environment) {_		this.environment = environment__	};specify,the,environment,for,the,jmx,connector,see,javax,management,remote,jmxconnector,factory,connect,javax,management,remote,jmxservice,url,java,util,map;public,void,set,environment,map,string,environment,this,environment,environment
NotificationListenerRegistrar -> public void setEnvironment(Map<String, ?> environment);1357119239;Specify the environment for the JMX connector._@see javax.management.remote.JMXConnectorFactory#connect(javax.management.remote.JMXServiceURL, java.util.Map);public void setEnvironment(Map<String, ?> environment) {_		this.environment = environment__	};specify,the,environment,for,the,jmx,connector,see,javax,management,remote,jmxconnector,factory,connect,javax,management,remote,jmxservice,url,java,util,map;public,void,set,environment,map,string,environment,this,environment,environment
NotificationListenerRegistrar -> public void setEnvironment(Map<String, ?> environment);1368482696;Specify the environment for the JMX connector._@see javax.management.remote.JMXConnectorFactory#connect(javax.management.remote.JMXServiceURL, java.util.Map);public void setEnvironment(Map<String, ?> environment) {_		this.environment = environment__	};specify,the,environment,for,the,jmx,connector,see,javax,management,remote,jmxconnector,factory,connect,javax,management,remote,jmxservice,url,java,util,map;public,void,set,environment,map,string,environment,this,environment,environment
NotificationListenerRegistrar -> public void setEnvironment(Map<String, ?> environment);1413848647;Specify the environment for the JMX connector._@see javax.management.remote.JMXConnectorFactory#connect(javax.management.remote.JMXServiceURL, java.util.Map);public void setEnvironment(Map<String, ?> environment) {_		this.environment = environment__	};specify,the,environment,for,the,jmx,connector,see,javax,management,remote,jmxconnector,factory,connect,javax,management,remote,jmxservice,url,java,util,map;public,void,set,environment,map,string,environment,this,environment,environment
NotificationListenerRegistrar -> public void setEnvironment(Map<String, ?> environment);1498780456;Specify the environment for the JMX connector._@see javax.management.remote.JMXConnectorFactory#connect(javax.management.remote.JMXServiceURL, java.util.Map);public void setEnvironment(Map<String, ?> environment) {_		this.environment = environment__	};specify,the,environment,for,the,jmx,connector,see,javax,management,remote,jmxconnector,factory,connect,javax,management,remote,jmxservice,url,java,util,map;public,void,set,environment,map,string,environment,this,environment,environment
NotificationListenerRegistrar -> public Map<String, ?> getEnvironment();1328020251;Allow Map access to the environment to be set for the connector,_with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via_"environment[myKey]". This is particularly useful for_adding or overriding entries in child bean definitions.;public Map<String, ?> getEnvironment() {_		return this.environment__	};allow,map,access,to,the,environment,to,be,set,for,the,connector,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,environment,my,key,this,is,particularly,useful,for,adding,or,overriding,entries,in,child,bean,definitions;public,map,string,get,environment,return,this,environment
NotificationListenerRegistrar -> public Map<String, ?> getEnvironment();1356735495;Allow Map access to the environment to be set for the connector,_with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via_"environment[myKey]". This is particularly useful for_adding or overriding entries in child bean definitions.;public Map<String, ?> getEnvironment() {_		return this.environment__	};allow,map,access,to,the,environment,to,be,set,for,the,connector,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,environment,my,key,this,is,particularly,useful,for,adding,or,overriding,entries,in,child,bean,definitions;public,map,string,get,environment,return,this,environment
NotificationListenerRegistrar -> public Map<String, ?> getEnvironment();1357119239;Allow Map access to the environment to be set for the connector,_with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via_"environment[myKey]". This is particularly useful for_adding or overriding entries in child bean definitions.;public Map<String, ?> getEnvironment() {_		return this.environment__	};allow,map,access,to,the,environment,to,be,set,for,the,connector,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,environment,my,key,this,is,particularly,useful,for,adding,or,overriding,entries,in,child,bean,definitions;public,map,string,get,environment,return,this,environment
NotificationListenerRegistrar -> public Map<String, ?> getEnvironment();1368482696;Allow Map access to the environment to be set for the connector,_with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via_"environment[myKey]". This is particularly useful for_adding or overriding entries in child bean definitions.;public Map<String, ?> getEnvironment() {_		return this.environment__	};allow,map,access,to,the,environment,to,be,set,for,the,connector,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,environment,my,key,this,is,particularly,useful,for,adding,or,overriding,entries,in,child,bean,definitions;public,map,string,get,environment,return,this,environment
NotificationListenerRegistrar -> public Map<String, ?> getEnvironment();1413848647;Allow Map access to the environment to be set for the connector,_with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via_"environment[myKey]". This is particularly useful for_adding or overriding entries in child bean definitions.;public Map<String, ?> getEnvironment() {_		return this.environment__	};allow,map,access,to,the,environment,to,be,set,for,the,connector,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,environment,my,key,this,is,particularly,useful,for,adding,or,overriding,entries,in,child,bean,definitions;public,map,string,get,environment,return,this,environment
NotificationListenerRegistrar -> @Nullable 	public Map<String, ?> getEnvironment();1498780456;Allow Map access to the environment to be set for the connector,_with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via_"environment[myKey]". This is particularly useful for_adding or overriding entries in child bean definitions.;@Nullable_	public Map<String, ?> getEnvironment() {_		return this.environment__	};allow,map,access,to,the,environment,to,be,set,for,the,connector,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,environment,my,key,this,is,particularly,useful,for,adding,or,overriding,entries,in,child,bean,definitions;nullable,public,map,string,get,environment,return,this,environment
NotificationListenerRegistrar -> @Nullable 	public Map<String, ?> getEnvironment();1500448076;Allow Map access to the environment to be set for the connector,_with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via_"environment[myKey]". This is particularly useful for_adding or overriding entries in child bean definitions.;@Nullable_	public Map<String, ?> getEnvironment() {_		return this.environment__	};allow,map,access,to,the,environment,to,be,set,for,the,connector,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,environment,my,key,this,is,particularly,useful,for,adding,or,overriding,entries,in,child,bean,definitions;nullable,public,map,string,get,environment,return,this,environment
NotificationListenerRegistrar -> @Nullable 	public Map<String, ?> getEnvironment();1530174524;Allow Map access to the environment to be set for the connector,_with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via_"environment[myKey]". This is particularly useful for_adding or overriding entries in child bean definitions.;@Nullable_	public Map<String, ?> getEnvironment() {_		return this.environment__	};allow,map,access,to,the,environment,to,be,set,for,the,connector,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,environment,my,key,this,is,particularly,useful,for,adding,or,overriding,entries,in,child,bean,definitions;nullable,public,map,string,get,environment,return,this,environment
NotificationListenerRegistrar -> public void prepare();1328020251;Registers the specified <code>NotificationListener</code>._<p>Ensures that an <code>MBeanServerConnection</code> is configured and attempts_to detect a local connection if one is not supplied.;public void prepare() {_		if (this.server == null) {_			this.server = this.connector.connect(this.serviceUrl, this.environment, this.agentId)__		}_		try {_			this.actualObjectNames = getResolvedObjectNames()__			if (logger.isDebugEnabled()) {_				logger.debug("Registering NotificationListener for MBeans " + Arrays.asList(this.actualObjectNames))__			}_			for (ObjectName actualObjectName : this.actualObjectNames) {_				this.server.addNotificationListener(_						actualObjectName, getNotificationListener(), getNotificationFilter(), getHandback())__			}_		}_		catch (IOException ex) {_			throw new MBeanServerNotFoundException(_					"Could not connect to remote MBeanServer at URL [" + this.serviceUrl + "]", ex)__		}_		catch (Exception ex) {_			throw new JmxException("Unable to register NotificationListener", ex)__		}_	};registers,the,specified,code,notification,listener,code,p,ensures,that,an,code,mbean,server,connection,code,is,configured,and,attempts,to,detect,a,local,connection,if,one,is,not,supplied;public,void,prepare,if,this,server,null,this,server,this,connector,connect,this,service,url,this,environment,this,agent,id,try,this,actual,object,names,get,resolved,object,names,if,logger,is,debug,enabled,logger,debug,registering,notification,listener,for,mbeans,arrays,as,list,this,actual,object,names,for,object,name,actual,object,name,this,actual,object,names,this,server,add,notification,listener,actual,object,name,get,notification,listener,get,notification,filter,get,handback,catch,ioexception,ex,throw,new,mbean,server,not,found,exception,could,not,connect,to,remote,mbean,server,at,url,this,service,url,ex,catch,exception,ex,throw,new,jmx,exception,unable,to,register,notification,listener,ex
NotificationListenerRegistrar -> public void prepare();1356735495;Registers the specified {@code NotificationListener}._<p>Ensures that an {@code MBeanServerConnection} is configured and attempts_to detect a local connection if one is not supplied.;public void prepare() {_		if (this.server == null) {_			this.server = this.connector.connect(this.serviceUrl, this.environment, this.agentId)__		}_		try {_			this.actualObjectNames = getResolvedObjectNames()__			if (logger.isDebugEnabled()) {_				logger.debug("Registering NotificationListener for MBeans " + Arrays.asList(this.actualObjectNames))__			}_			for (ObjectName actualObjectName : this.actualObjectNames) {_				this.server.addNotificationListener(_						actualObjectName, getNotificationListener(), getNotificationFilter(), getHandback())__			}_		}_		catch (IOException ex) {_			throw new MBeanServerNotFoundException(_					"Could not connect to remote MBeanServer at URL [" + this.serviceUrl + "]", ex)__		}_		catch (Exception ex) {_			throw new JmxException("Unable to register NotificationListener", ex)__		}_	};registers,the,specified,code,notification,listener,p,ensures,that,an,code,mbean,server,connection,is,configured,and,attempts,to,detect,a,local,connection,if,one,is,not,supplied;public,void,prepare,if,this,server,null,this,server,this,connector,connect,this,service,url,this,environment,this,agent,id,try,this,actual,object,names,get,resolved,object,names,if,logger,is,debug,enabled,logger,debug,registering,notification,listener,for,mbeans,arrays,as,list,this,actual,object,names,for,object,name,actual,object,name,this,actual,object,names,this,server,add,notification,listener,actual,object,name,get,notification,listener,get,notification,filter,get,handback,catch,ioexception,ex,throw,new,mbean,server,not,found,exception,could,not,connect,to,remote,mbean,server,at,url,this,service,url,ex,catch,exception,ex,throw,new,jmx,exception,unable,to,register,notification,listener,ex
NotificationListenerRegistrar -> public void prepare();1357119239;Registers the specified {@code NotificationListener}._<p>Ensures that an {@code MBeanServerConnection} is configured and attempts_to detect a local connection if one is not supplied.;public void prepare() {_		if (this.server == null) {_			this.server = this.connector.connect(this.serviceUrl, this.environment, this.agentId)__		}_		try {_			this.actualObjectNames = getResolvedObjectNames()__			if (logger.isDebugEnabled()) {_				logger.debug("Registering NotificationListener for MBeans " + Arrays.asList(this.actualObjectNames))__			}_			for (ObjectName actualObjectName : this.actualObjectNames) {_				this.server.addNotificationListener(_						actualObjectName, getNotificationListener(), getNotificationFilter(), getHandback())__			}_		}_		catch (IOException ex) {_			throw new MBeanServerNotFoundException(_					"Could not connect to remote MBeanServer at URL [" + this.serviceUrl + "]", ex)__		}_		catch (Exception ex) {_			throw new JmxException("Unable to register NotificationListener", ex)__		}_	};registers,the,specified,code,notification,listener,p,ensures,that,an,code,mbean,server,connection,is,configured,and,attempts,to,detect,a,local,connection,if,one,is,not,supplied;public,void,prepare,if,this,server,null,this,server,this,connector,connect,this,service,url,this,environment,this,agent,id,try,this,actual,object,names,get,resolved,object,names,if,logger,is,debug,enabled,logger,debug,registering,notification,listener,for,mbeans,arrays,as,list,this,actual,object,names,for,object,name,actual,object,name,this,actual,object,names,this,server,add,notification,listener,actual,object,name,get,notification,listener,get,notification,filter,get,handback,catch,ioexception,ex,throw,new,mbean,server,not,found,exception,could,not,connect,to,remote,mbean,server,at,url,this,service,url,ex,catch,exception,ex,throw,new,jmx,exception,unable,to,register,notification,listener,ex
NotificationListenerRegistrar -> public void prepare();1368482696;Registers the specified {@code NotificationListener}._<p>Ensures that an {@code MBeanServerConnection} is configured and attempts_to detect a local connection if one is not supplied.;public void prepare() {_		if (this.server == null) {_			this.server = this.connector.connect(this.serviceUrl, this.environment, this.agentId)__		}_		try {_			this.actualObjectNames = getResolvedObjectNames()__			if (logger.isDebugEnabled()) {_				logger.debug("Registering NotificationListener for MBeans " + Arrays.asList(this.actualObjectNames))__			}_			for (ObjectName actualObjectName : this.actualObjectNames) {_				this.server.addNotificationListener(_						actualObjectName, getNotificationListener(), getNotificationFilter(), getHandback())__			}_		}_		catch (IOException ex) {_			throw new MBeanServerNotFoundException(_					"Could not connect to remote MBeanServer at URL [" + this.serviceUrl + "]", ex)__		}_		catch (Exception ex) {_			throw new JmxException("Unable to register NotificationListener", ex)__		}_	};registers,the,specified,code,notification,listener,p,ensures,that,an,code,mbean,server,connection,is,configured,and,attempts,to,detect,a,local,connection,if,one,is,not,supplied;public,void,prepare,if,this,server,null,this,server,this,connector,connect,this,service,url,this,environment,this,agent,id,try,this,actual,object,names,get,resolved,object,names,if,logger,is,debug,enabled,logger,debug,registering,notification,listener,for,mbeans,arrays,as,list,this,actual,object,names,for,object,name,actual,object,name,this,actual,object,names,this,server,add,notification,listener,actual,object,name,get,notification,listener,get,notification,filter,get,handback,catch,ioexception,ex,throw,new,mbean,server,not,found,exception,could,not,connect,to,remote,mbean,server,at,url,this,service,url,ex,catch,exception,ex,throw,new,jmx,exception,unable,to,register,notification,listener,ex
NotificationListenerRegistrar -> public void prepare();1413848647;Registers the specified {@code NotificationListener}._<p>Ensures that an {@code MBeanServerConnection} is configured and attempts_to detect a local connection if one is not supplied.;public void prepare() {_		if (this.server == null) {_			this.server = this.connector.connect(this.serviceUrl, this.environment, this.agentId)__		}_		try {_			this.actualObjectNames = getResolvedObjectNames()__			if (logger.isDebugEnabled()) {_				logger.debug("Registering NotificationListener for MBeans " + Arrays.asList(this.actualObjectNames))__			}_			for (ObjectName actualObjectName : this.actualObjectNames) {_				this.server.addNotificationListener(_						actualObjectName, getNotificationListener(), getNotificationFilter(), getHandback())__			}_		}_		catch (IOException ex) {_			throw new MBeanServerNotFoundException(_					"Could not connect to remote MBeanServer at URL [" + this.serviceUrl + "]", ex)__		}_		catch (Exception ex) {_			throw new JmxException("Unable to register NotificationListener", ex)__		}_	};registers,the,specified,code,notification,listener,p,ensures,that,an,code,mbean,server,connection,is,configured,and,attempts,to,detect,a,local,connection,if,one,is,not,supplied;public,void,prepare,if,this,server,null,this,server,this,connector,connect,this,service,url,this,environment,this,agent,id,try,this,actual,object,names,get,resolved,object,names,if,logger,is,debug,enabled,logger,debug,registering,notification,listener,for,mbeans,arrays,as,list,this,actual,object,names,for,object,name,actual,object,name,this,actual,object,names,this,server,add,notification,listener,actual,object,name,get,notification,listener,get,notification,filter,get,handback,catch,ioexception,ex,throw,new,mbean,server,not,found,exception,could,not,connect,to,remote,mbean,server,at,url,this,service,url,ex,catch,exception,ex,throw,new,jmx,exception,unable,to,register,notification,listener,ex
NotificationListenerRegistrar -> public void prepare();1498780456;Registers the specified {@code NotificationListener}._<p>Ensures that an {@code MBeanServerConnection} is configured and attempts_to detect a local connection if one is not supplied.;public void prepare() {_		if (this.server == null) {_			this.server = this.connector.connect(this.serviceUrl, this.environment, this.agentId)__		}_		try {_			this.actualObjectNames = getResolvedObjectNames()__			if (this.actualObjectNames != null) {_				if (logger.isDebugEnabled()) {_					logger.debug("Registering NotificationListener for MBeans " + Arrays.asList(this.actualObjectNames))__				}_				for (ObjectName actualObjectName : this.actualObjectNames) {_					this.server.addNotificationListener(_							actualObjectName, getNotificationListener(), getNotificationFilter(), getHandback())__				}_			}_		}_		catch (IOException ex) {_			throw new MBeanServerNotFoundException(_					"Could not connect to remote MBeanServer at URL [" + this.serviceUrl + "]", ex)__		}_		catch (Exception ex) {_			throw new JmxException("Unable to register NotificationListener", ex)__		}_	};registers,the,specified,code,notification,listener,p,ensures,that,an,code,mbean,server,connection,is,configured,and,attempts,to,detect,a,local,connection,if,one,is,not,supplied;public,void,prepare,if,this,server,null,this,server,this,connector,connect,this,service,url,this,environment,this,agent,id,try,this,actual,object,names,get,resolved,object,names,if,this,actual,object,names,null,if,logger,is,debug,enabled,logger,debug,registering,notification,listener,for,mbeans,arrays,as,list,this,actual,object,names,for,object,name,actual,object,name,this,actual,object,names,this,server,add,notification,listener,actual,object,name,get,notification,listener,get,notification,filter,get,handback,catch,ioexception,ex,throw,new,mbean,server,not,found,exception,could,not,connect,to,remote,mbean,server,at,url,this,service,url,ex,catch,exception,ex,throw,new,jmx,exception,unable,to,register,notification,listener,ex
NotificationListenerRegistrar -> public void prepare();1500448076;Registers the specified {@code NotificationListener}._<p>Ensures that an {@code MBeanServerConnection} is configured and attempts_to detect a local connection if one is not supplied.;public void prepare() {_		if (this.server == null) {_			this.server = this.connector.connect(this.serviceUrl, this.environment, this.agentId)__		}_		try {_			this.actualObjectNames = getResolvedObjectNames()__			if (this.actualObjectNames != null) {_				if (logger.isDebugEnabled()) {_					logger.debug("Registering NotificationListener for MBeans " + Arrays.asList(this.actualObjectNames))__				}_				for (ObjectName actualObjectName : this.actualObjectNames) {_					this.server.addNotificationListener(_							actualObjectName, getNotificationListener(), getNotificationFilter(), getHandback())__				}_			}_		}_		catch (IOException ex) {_			throw new MBeanServerNotFoundException(_					"Could not connect to remote MBeanServer at URL [" + this.serviceUrl + "]", ex)__		}_		catch (Exception ex) {_			throw new JmxException("Unable to register NotificationListener", ex)__		}_	};registers,the,specified,code,notification,listener,p,ensures,that,an,code,mbean,server,connection,is,configured,and,attempts,to,detect,a,local,connection,if,one,is,not,supplied;public,void,prepare,if,this,server,null,this,server,this,connector,connect,this,service,url,this,environment,this,agent,id,try,this,actual,object,names,get,resolved,object,names,if,this,actual,object,names,null,if,logger,is,debug,enabled,logger,debug,registering,notification,listener,for,mbeans,arrays,as,list,this,actual,object,names,for,object,name,actual,object,name,this,actual,object,names,this,server,add,notification,listener,actual,object,name,get,notification,listener,get,notification,filter,get,handback,catch,ioexception,ex,throw,new,mbean,server,not,found,exception,could,not,connect,to,remote,mbean,server,at,url,this,service,url,ex,catch,exception,ex,throw,new,jmx,exception,unable,to,register,notification,listener,ex
NotificationListenerRegistrar -> public void prepare();1530174524;Registers the specified {@code NotificationListener}._<p>Ensures that an {@code MBeanServerConnection} is configured and attempts_to detect a local connection if one is not supplied.;public void prepare() {_		if (this.server == null) {_			this.server = this.connector.connect(this.serviceUrl, this.environment, this.agentId)__		}_		try {_			this.actualObjectNames = getResolvedObjectNames()__			if (this.actualObjectNames != null) {_				if (logger.isDebugEnabled()) {_					logger.debug("Registering NotificationListener for MBeans " + Arrays.asList(this.actualObjectNames))__				}_				for (ObjectName actualObjectName : this.actualObjectNames) {_					this.server.addNotificationListener(_							actualObjectName, getNotificationListener(), getNotificationFilter(), getHandback())__				}_			}_		}_		catch (IOException ex) {_			throw new MBeanServerNotFoundException(_					"Could not connect to remote MBeanServer at URL [" + this.serviceUrl + "]", ex)__		}_		catch (Exception ex) {_			throw new JmxException("Unable to register NotificationListener", ex)__		}_	};registers,the,specified,code,notification,listener,p,ensures,that,an,code,mbean,server,connection,is,configured,and,attempts,to,detect,a,local,connection,if,one,is,not,supplied;public,void,prepare,if,this,server,null,this,server,this,connector,connect,this,service,url,this,environment,this,agent,id,try,this,actual,object,names,get,resolved,object,names,if,this,actual,object,names,null,if,logger,is,debug,enabled,logger,debug,registering,notification,listener,for,mbeans,arrays,as,list,this,actual,object,names,for,object,name,actual,object,name,this,actual,object,names,this,server,add,notification,listener,actual,object,name,get,notification,listener,get,notification,filter,get,handback,catch,ioexception,ex,throw,new,mbean,server,not,found,exception,could,not,connect,to,remote,mbean,server,at,url,this,service,url,ex,catch,exception,ex,throw,new,jmx,exception,unable,to,register,notification,listener,ex
