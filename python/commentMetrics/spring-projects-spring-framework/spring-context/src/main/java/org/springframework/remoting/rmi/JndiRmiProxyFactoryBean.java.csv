commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void setBeanClassLoader(ClassLoader classLoader) {     this.beanClassLoader = classLoader. }
false;public;0;7;;@Override public void afterPropertiesSet() throws NamingException {     super.afterPropertiesSet().     Class<?> ifc = getServiceInterface().     Assert.notNull(ifc, "Property 'serviceInterface' is required").     this.serviceProxy = new ProxyFactory(ifc, this).getProxy(this.beanClassLoader). }
false;public;0;4;;@Override public Object getObject() {     return this.serviceProxy. }
false;public;0;4;;@Override public Class<?> getObjectType() {     return getServiceInterface(). }
false;public;0;4;;@Override public boolean isSingleton() {     return true. }
