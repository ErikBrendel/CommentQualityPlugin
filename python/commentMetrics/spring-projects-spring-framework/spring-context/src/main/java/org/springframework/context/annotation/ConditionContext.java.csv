commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Return the {@link BeanDefinitionRegistry} that will hold the bean definition  * should the condition match.  * @throws IllegalStateException if no registry is available (which is unusual:  * only the case with a plain {@link ClassPathScanningCandidateComponentProvider})  */ ;/**  * Return the {@link BeanDefinitionRegistry} that will hold the bean definition  * should the condition match.  * @throws IllegalStateException if no registry is available (which is unusual:  * only the case with a plain {@link ClassPathScanningCandidateComponentProvider})  */ BeanDefinitionRegistry getRegistry().
true;;0;2;/**  * Return the {@link ConfigurableListableBeanFactory} that will hold the bean  * definition should the condition match, or {@code null} if the bean factory is  * not available (or not downcastable to {@code ConfigurableListableBeanFactory}).  */ ;/**  * Return the {@link ConfigurableListableBeanFactory} that will hold the bean  * definition should the condition match, or {@code null} if the bean factory is  * not available (or not downcastable to {@code ConfigurableListableBeanFactory}).  */ @Nullable ConfigurableListableBeanFactory getBeanFactory().
true;;0;1;/**  * Return the {@link Environment} for which the current application is running.  */ ;/**  * Return the {@link Environment} for which the current application is running.  */ Environment getEnvironment().
true;;0;1;/**  * Return the {@link ResourceLoader} currently being used.  */ ;/**  * Return the {@link ResourceLoader} currently being used.  */ ResourceLoader getResourceLoader().
true;;0;2;/**  * Return the {@link ClassLoader} that should be used to load additional classes  * (only {@code null} if even the system ClassLoader isn't accessible).  * @see org.springframework.util.ClassUtils#forName(String, ClassLoader)  */ ;/**  * Return the {@link ClassLoader} that should be used to load additional classes  * (only {@code null} if even the system ClassLoader isn't accessible).  * @see org.springframework.util.ClassUtils#forName(String, ClassLoader)  */ @Nullable ClassLoader getClassLoader().
