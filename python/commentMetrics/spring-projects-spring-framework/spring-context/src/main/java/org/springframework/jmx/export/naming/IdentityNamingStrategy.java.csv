# id;timestamp;commentText;codeText;commentWords;codeWords
IdentityNamingStrategy -> @Override 	public ObjectName getObjectName(Object managedBean, @Nullable String beanKey) throws MalformedObjectNameException;1496837955;Returns an instance of {@code ObjectName} based on the identity_of the managed resource.;@Override_	public ObjectName getObjectName(Object managedBean, @Nullable String beanKey) throws MalformedObjectNameException {_		String domain = ClassUtils.getPackageName(managedBean.getClass())__		Hashtable<String, String> keys = new Hashtable<>()__		keys.put(TYPE_KEY, ClassUtils.getShortName(managedBean.getClass()))__		keys.put(HASH_CODE_KEY, ObjectUtils.getIdentityHexString(managedBean))__		return ObjectNameManager.getInstance(domain, keys)__	};returns,an,instance,of,code,object,name,based,on,the,identity,of,the,managed,resource;override,public,object,name,get,object,name,object,managed,bean,nullable,string,bean,key,throws,malformed,object,name,exception,string,domain,class,utils,get,package,name,managed,bean,get,class,hashtable,string,string,keys,new,hashtable,keys,put,class,utils,get,short,name,managed,bean,get,class,keys,put,object,utils,get,identity,hex,string,managed,bean,return,object,name,manager,get,instance,domain,keys
IdentityNamingStrategy -> @Override 	public ObjectName getObjectName(Object managedBean, @Nullable String beanKey) throws MalformedObjectNameException;1530174524;Returns an instance of {@code ObjectName} based on the identity_of the managed resource.;@Override_	public ObjectName getObjectName(Object managedBean, @Nullable String beanKey) throws MalformedObjectNameException {_		String domain = ClassUtils.getPackageName(managedBean.getClass())__		Hashtable<String, String> keys = new Hashtable<>()__		keys.put(TYPE_KEY, ClassUtils.getShortName(managedBean.getClass()))__		keys.put(HASH_CODE_KEY, ObjectUtils.getIdentityHexString(managedBean))__		return ObjectNameManager.getInstance(domain, keys)__	};returns,an,instance,of,code,object,name,based,on,the,identity,of,the,managed,resource;override,public,object,name,get,object,name,object,managed,bean,nullable,string,bean,key,throws,malformed,object,name,exception,string,domain,class,utils,get,package,name,managed,bean,get,class,hashtable,string,string,keys,new,hashtable,keys,put,class,utils,get,short,name,managed,bean,get,class,keys,put,object,utils,get,identity,hex,string,managed,bean,return,object,name,manager,get,instance,domain,keys
IdentityNamingStrategy -> public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException;1328020251;Returns an instance of <code>ObjectName</code> based on the identity_of the managed resource.;public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException {_		String domain = ClassUtils.getPackageName(managedBean.getClass())__		Hashtable keys = new Hashtable()__		keys.put(TYPE_KEY, ClassUtils.getShortName(managedBean.getClass()))__		keys.put(HASH_CODE_KEY, ObjectUtils.getIdentityHexString(managedBean))__		return ObjectNameManager.getInstance(domain, keys)__	};returns,an,instance,of,code,object,name,code,based,on,the,identity,of,the,managed,resource;public,object,name,get,object,name,object,managed,bean,string,bean,key,throws,malformed,object,name,exception,string,domain,class,utils,get,package,name,managed,bean,get,class,hashtable,keys,new,hashtable,keys,put,class,utils,get,short,name,managed,bean,get,class,keys,put,object,utils,get,identity,hex,string,managed,bean,return,object,name,manager,get,instance,domain,keys
IdentityNamingStrategy -> public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException;1357119239;Returns an instance of {@code ObjectName} based on the identity_of the managed resource.;public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException {_		String domain = ClassUtils.getPackageName(managedBean.getClass())__		Hashtable keys = new Hashtable()__		keys.put(TYPE_KEY, ClassUtils.getShortName(managedBean.getClass()))__		keys.put(HASH_CODE_KEY, ObjectUtils.getIdentityHexString(managedBean))__		return ObjectNameManager.getInstance(domain, keys)__	};returns,an,instance,of,code,object,name,based,on,the,identity,of,the,managed,resource;public,object,name,get,object,name,object,managed,bean,string,bean,key,throws,malformed,object,name,exception,string,domain,class,utils,get,package,name,managed,bean,get,class,hashtable,keys,new,hashtable,keys,put,class,utils,get,short,name,managed,bean,get,class,keys,put,object,utils,get,identity,hex,string,managed,bean,return,object,name,manager,get,instance,domain,keys
IdentityNamingStrategy -> @Override 	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException;1356735495;Returns an instance of {@code ObjectName} based on the identity_of the managed resource.;@Override_	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException {_		String domain = ClassUtils.getPackageName(managedBean.getClass())__		Hashtable keys = new Hashtable()__		keys.put(TYPE_KEY, ClassUtils.getShortName(managedBean.getClass()))__		keys.put(HASH_CODE_KEY, ObjectUtils.getIdentityHexString(managedBean))__		return ObjectNameManager.getInstance(domain, keys)__	};returns,an,instance,of,code,object,name,based,on,the,identity,of,the,managed,resource;override,public,object,name,get,object,name,object,managed,bean,string,bean,key,throws,malformed,object,name,exception,string,domain,class,utils,get,package,name,managed,bean,get,class,hashtable,keys,new,hashtable,keys,put,class,utils,get,short,name,managed,bean,get,class,keys,put,object,utils,get,identity,hex,string,managed,bean,return,object,name,manager,get,instance,domain,keys
IdentityNamingStrategy -> @Override 	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException;1368482696;Returns an instance of {@code ObjectName} based on the identity_of the managed resource.;@Override_	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException {_		String domain = ClassUtils.getPackageName(managedBean.getClass())__		Hashtable keys = new Hashtable()__		keys.put(TYPE_KEY, ClassUtils.getShortName(managedBean.getClass()))__		keys.put(HASH_CODE_KEY, ObjectUtils.getIdentityHexString(managedBean))__		return ObjectNameManager.getInstance(domain, keys)__	};returns,an,instance,of,code,object,name,based,on,the,identity,of,the,managed,resource;override,public,object,name,get,object,name,object,managed,bean,string,bean,key,throws,malformed,object,name,exception,string,domain,class,utils,get,package,name,managed,bean,get,class,hashtable,keys,new,hashtable,keys,put,class,utils,get,short,name,managed,bean,get,class,keys,put,object,utils,get,identity,hex,string,managed,bean,return,object,name,manager,get,instance,domain,keys
IdentityNamingStrategy -> @Override 	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException;1385412762;Returns an instance of {@code ObjectName} based on the identity_of the managed resource.;@Override_	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException {_		String domain = ClassUtils.getPackageName(managedBean.getClass())__		Hashtable<String, String> keys = new Hashtable<String, String>()__		keys.put(TYPE_KEY, ClassUtils.getShortName(managedBean.getClass()))__		keys.put(HASH_CODE_KEY, ObjectUtils.getIdentityHexString(managedBean))__		return ObjectNameManager.getInstance(domain, keys)__	};returns,an,instance,of,code,object,name,based,on,the,identity,of,the,managed,resource;override,public,object,name,get,object,name,object,managed,bean,string,bean,key,throws,malformed,object,name,exception,string,domain,class,utils,get,package,name,managed,bean,get,class,hashtable,string,string,keys,new,hashtable,string,string,keys,put,class,utils,get,short,name,managed,bean,get,class,keys,put,object,utils,get,identity,hex,string,managed,bean,return,object,name,manager,get,instance,domain,keys
IdentityNamingStrategy -> @Override 	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException;1413848647;Returns an instance of {@code ObjectName} based on the identity_of the managed resource.;@Override_	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException {_		String domain = ClassUtils.getPackageName(managedBean.getClass())__		Hashtable<String, String> keys = new Hashtable<String, String>()__		keys.put(TYPE_KEY, ClassUtils.getShortName(managedBean.getClass()))__		keys.put(HASH_CODE_KEY, ObjectUtils.getIdentityHexString(managedBean))__		return ObjectNameManager.getInstance(domain, keys)__	};returns,an,instance,of,code,object,name,based,on,the,identity,of,the,managed,resource;override,public,object,name,get,object,name,object,managed,bean,string,bean,key,throws,malformed,object,name,exception,string,domain,class,utils,get,package,name,managed,bean,get,class,hashtable,string,string,keys,new,hashtable,string,string,keys,put,class,utils,get,short,name,managed,bean,get,class,keys,put,object,utils,get,identity,hex,string,managed,bean,return,object,name,manager,get,instance,domain,keys
IdentityNamingStrategy -> @Override 	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException;1461047077;Returns an instance of {@code ObjectName} based on the identity_of the managed resource.;@Override_	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException {_		String domain = ClassUtils.getPackageName(managedBean.getClass())__		Hashtable<String, String> keys = new Hashtable<String, String>()__		keys.put(TYPE_KEY, ClassUtils.getShortName(managedBean.getClass()))__		keys.put(HASH_CODE_KEY, ObjectUtils.getIdentityHexString(managedBean))__		return ObjectNameManager.getInstance(domain, keys)__	};returns,an,instance,of,code,object,name,based,on,the,identity,of,the,managed,resource;override,public,object,name,get,object,name,object,managed,bean,string,bean,key,throws,malformed,object,name,exception,string,domain,class,utils,get,package,name,managed,bean,get,class,hashtable,string,string,keys,new,hashtable,string,string,keys,put,class,utils,get,short,name,managed,bean,get,class,keys,put,object,utils,get,identity,hex,string,managed,bean,return,object,name,manager,get,instance,domain,keys
IdentityNamingStrategy -> @Override 	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException;1467730834;Returns an instance of {@code ObjectName} based on the identity_of the managed resource.;@Override_	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException {_		String domain = ClassUtils.getPackageName(managedBean.getClass())__		Hashtable<String, String> keys = new Hashtable<>()__		keys.put(TYPE_KEY, ClassUtils.getShortName(managedBean.getClass()))__		keys.put(HASH_CODE_KEY, ObjectUtils.getIdentityHexString(managedBean))__		return ObjectNameManager.getInstance(domain, keys)__	};returns,an,instance,of,code,object,name,based,on,the,identity,of,the,managed,resource;override,public,object,name,get,object,name,object,managed,bean,string,bean,key,throws,malformed,object,name,exception,string,domain,class,utils,get,package,name,managed,bean,get,class,hashtable,string,string,keys,new,hashtable,keys,put,class,utils,get,short,name,managed,bean,get,class,keys,put,object,utils,get,identity,hex,string,managed,bean,return,object,name,manager,get,instance,domain,keys
