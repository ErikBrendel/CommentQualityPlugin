# id;timestamp;commentText;codeText;commentWords;codeWords
FormatterRegistry -> void addFormatter(Formatter<?> formatter)_;1328020251;Adds a Formatter to format fields of a specific type._The field type is implied by the parameterized Formatter instance._@param formatter the formatter to add_@see #addFormatterForFieldType(Class, Formatter)_@since 3.1;void addFormatter(Formatter<?> formatter)_;adds,a,formatter,to,format,fields,of,a,specific,type,the,field,type,is,implied,by,the,parameterized,formatter,instance,param,formatter,the,formatter,to,add,see,add,formatter,for,field,type,class,formatter,since,3,1;void,add,formatter,formatter,formatter
FormatterRegistry -> void addFormatter(Formatter<?> formatter)_;1356735495;Adds a Formatter to format fields of a specific type._The field type is implied by the parameterized Formatter instance._@param formatter the formatter to add_@see #addFormatterForFieldType(Class, Formatter)_@since 3.1;void addFormatter(Formatter<?> formatter)_;adds,a,formatter,to,format,fields,of,a,specific,type,the,field,type,is,implied,by,the,parameterized,formatter,instance,param,formatter,the,formatter,to,add,see,add,formatter,for,field,type,class,formatter,since,3,1;void,add,formatter,formatter,formatter
FormatterRegistry -> void addFormatter(Formatter<?> formatter)_;1390495655;Adds a Formatter to format fields of a specific type._The field type is implied by the parameterized Formatter instance._@param formatter the formatter to add_@see #addFormatterForFieldType(Class, Formatter)_@since 3.1;void addFormatter(Formatter<?> formatter)_;adds,a,formatter,to,format,fields,of,a,specific,type,the,field,type,is,implied,by,the,parameterized,formatter,instance,param,formatter,the,formatter,to,add,see,add,formatter,for,field,type,class,formatter,since,3,1;void,add,formatter,formatter,formatter
FormatterRegistry -> void addFormatter(Formatter<?> formatter)_;1530174524;Adds a Formatter to format fields of a specific type._The field type is implied by the parameterized Formatter instance._@param formatter the formatter to add_@since 3.1_@see #addFormatterForFieldType(Class, Formatter);void addFormatter(Formatter<?> formatter)_;adds,a,formatter,to,format,fields,of,a,specific,type,the,field,type,is,implied,by,the,parameterized,formatter,instance,param,formatter,the,formatter,to,add,since,3,1,see,add,formatter,for,field,type,class,formatter;void,add,formatter,formatter,formatter
FormatterRegistry -> void addFormatterForFieldAnnotation(AnnotationFormatterFactory<? extends Annotation> annotationFormatterFactory)_;1328020251;Adds a Formatter to format fields annotated with a specific format annotation._@param annotationFormatterFactory the annotation formatter factory to add;void addFormatterForFieldAnnotation(AnnotationFormatterFactory<? extends Annotation> annotationFormatterFactory)_;adds,a,formatter,to,format,fields,annotated,with,a,specific,format,annotation,param,annotation,formatter,factory,the,annotation,formatter,factory,to,add;void,add,formatter,for,field,annotation,annotation,formatter,factory,extends,annotation,annotation,formatter,factory
FormatterRegistry -> void addFormatterForFieldAnnotation(AnnotationFormatterFactory<? extends Annotation> annotationFormatterFactory)_;1356735495;Adds a Formatter to format fields annotated with a specific format annotation._@param annotationFormatterFactory the annotation formatter factory to add;void addFormatterForFieldAnnotation(AnnotationFormatterFactory<? extends Annotation> annotationFormatterFactory)_;adds,a,formatter,to,format,fields,annotated,with,a,specific,format,annotation,param,annotation,formatter,factory,the,annotation,formatter,factory,to,add;void,add,formatter,for,field,annotation,annotation,formatter,factory,extends,annotation,annotation,formatter,factory
FormatterRegistry -> void addFormatterForFieldAnnotation(AnnotationFormatterFactory<? extends Annotation> annotationFormatterFactory)_;1390495655;Adds a Formatter to format fields annotated with a specific format annotation._@param annotationFormatterFactory the annotation formatter factory to add;void addFormatterForFieldAnnotation(AnnotationFormatterFactory<? extends Annotation> annotationFormatterFactory)_;adds,a,formatter,to,format,fields,annotated,with,a,specific,format,annotation,param,annotation,formatter,factory,the,annotation,formatter,factory,to,add;void,add,formatter,for,field,annotation,annotation,formatter,factory,extends,annotation,annotation,formatter,factory
FormatterRegistry -> void addFormatterForFieldAnnotation(AnnotationFormatterFactory<? extends Annotation> annotationFormatterFactory)_;1530174524;Adds a Formatter to format fields annotated with a specific format annotation._@param annotationFormatterFactory the annotation formatter factory to add;void addFormatterForFieldAnnotation(AnnotationFormatterFactory<? extends Annotation> annotationFormatterFactory)_;adds,a,formatter,to,format,fields,annotated,with,a,specific,format,annotation,param,annotation,formatter,factory,the,annotation,formatter,factory,to,add;void,add,formatter,for,field,annotation,annotation,formatter,factory,extends,annotation,annotation,formatter,factory
FormatterRegistry -> void addFormatterForFieldType(Class<?> fieldType, Formatter<?> formatter)_;1328020251;Adds a Formatter to format fields of the given type._<p>On print, if the Formatter's type T is declared and <code>fieldType</code> is not assignable to T,_a coersion to T will be attempted before delegating to <code>formatter</code> to print a field value._On parse, if the parsed object returned by <code>formatter</code> is not assignable to the runtime field type,_a coersion to the field type will be attempted before returning the parsed field value._@param fieldType the field type to format_@param formatter the formatter to add;void addFormatterForFieldType(Class<?> fieldType, Formatter<?> formatter)_;adds,a,formatter,to,format,fields,of,the,given,type,p,on,print,if,the,formatter,s,type,t,is,declared,and,code,field,type,code,is,not,assignable,to,t,a,coersion,to,t,will,be,attempted,before,delegating,to,code,formatter,code,to,print,a,field,value,on,parse,if,the,parsed,object,returned,by,code,formatter,code,is,not,assignable,to,the,runtime,field,type,a,coersion,to,the,field,type,will,be,attempted,before,returning,the,parsed,field,value,param,field,type,the,field,type,to,format,param,formatter,the,formatter,to,add;void,add,formatter,for,field,type,class,field,type,formatter,formatter
FormatterRegistry -> void addFormatterForFieldType(Class<?> fieldType, Formatter<?> formatter)_;1356735495;Adds a Formatter to format fields of the given type._<p>On print, if the Formatter's type T is declared and {@code fieldType} is not assignable to T,_a coersion to T will be attempted before delegating to {@code formatter} to print a field value._On parse, if the parsed object returned by {@code formatter} is not assignable to the runtime field type,_a coersion to the field type will be attempted before returning the parsed field value._@param fieldType the field type to format_@param formatter the formatter to add;void addFormatterForFieldType(Class<?> fieldType, Formatter<?> formatter)_;adds,a,formatter,to,format,fields,of,the,given,type,p,on,print,if,the,formatter,s,type,t,is,declared,and,code,field,type,is,not,assignable,to,t,a,coersion,to,t,will,be,attempted,before,delegating,to,code,formatter,to,print,a,field,value,on,parse,if,the,parsed,object,returned,by,code,formatter,is,not,assignable,to,the,runtime,field,type,a,coersion,to,the,field,type,will,be,attempted,before,returning,the,parsed,field,value,param,field,type,the,field,type,to,format,param,formatter,the,formatter,to,add;void,add,formatter,for,field,type,class,field,type,formatter,formatter
FormatterRegistry -> void addFormatterForFieldType(Class<?> fieldType, Formatter<?> formatter)_;1390495655;Adds a Formatter to format fields of the given type._<p>On print, if the Formatter's type T is declared and {@code fieldType} is not assignable to T,_a coercion to T will be attempted before delegating to {@code formatter} to print a field value._On parse, if the parsed object returned by {@code formatter} is not assignable to the runtime field type,_a coercion to the field type will be attempted before returning the parsed field value._@param fieldType the field type to format_@param formatter the formatter to add;void addFormatterForFieldType(Class<?> fieldType, Formatter<?> formatter)_;adds,a,formatter,to,format,fields,of,the,given,type,p,on,print,if,the,formatter,s,type,t,is,declared,and,code,field,type,is,not,assignable,to,t,a,coercion,to,t,will,be,attempted,before,delegating,to,code,formatter,to,print,a,field,value,on,parse,if,the,parsed,object,returned,by,code,formatter,is,not,assignable,to,the,runtime,field,type,a,coercion,to,the,field,type,will,be,attempted,before,returning,the,parsed,field,value,param,field,type,the,field,type,to,format,param,formatter,the,formatter,to,add;void,add,formatter,for,field,type,class,field,type,formatter,formatter
FormatterRegistry -> void addFormatterForFieldType(Class<?> fieldType, Formatter<?> formatter)_;1530174524;Adds a Formatter to format fields of the given type._<p>On print, if the Formatter's type T is declared and {@code fieldType} is not assignable to T,_a coercion to T will be attempted before delegating to {@code formatter} to print a field value._On parse, if the parsed object returned by {@code formatter} is not assignable to the runtime field type,_a coercion to the field type will be attempted before returning the parsed field value._@param fieldType the field type to format_@param formatter the formatter to add;void addFormatterForFieldType(Class<?> fieldType, Formatter<?> formatter)_;adds,a,formatter,to,format,fields,of,the,given,type,p,on,print,if,the,formatter,s,type,t,is,declared,and,code,field,type,is,not,assignable,to,t,a,coercion,to,t,will,be,attempted,before,delegating,to,code,formatter,to,print,a,field,value,on,parse,if,the,parsed,object,returned,by,code,formatter,is,not,assignable,to,the,runtime,field,type,a,coercion,to,the,field,type,will,be,attempted,before,returning,the,parsed,field,value,param,field,type,the,field,type,to,format,param,formatter,the,formatter,to,add;void,add,formatter,for,field,type,class,field,type,formatter,formatter
FormatterRegistry -> void addFormatterForFieldType(Class<?> fieldType, Printer<?> printer, Parser<?> parser)_;1328020251;Adds a Printer/Parser pair to format fields of a specific type._The formatter will delegate to the specified <code>printer</code> for printing_and the specified <code>parser</code> for parsing._<p>On print, if the Printer's type T is declared and <code>fieldType</code> is not assignable to T,_a coersion to T will be attempted before delegating to <code>printer</code> to print a field value._On parse, if the object returned by the Parser is not assignable to the runtime field type,_a coersion to the field type will be attempted before returning the parsed field value._@param fieldType the field type to format_@param printer the printing part of the formatter_@param parser the parsing part of the formatter;void addFormatterForFieldType(Class<?> fieldType, Printer<?> printer, Parser<?> parser)_;adds,a,printer,parser,pair,to,format,fields,of,a,specific,type,the,formatter,will,delegate,to,the,specified,code,printer,code,for,printing,and,the,specified,code,parser,code,for,parsing,p,on,print,if,the,printer,s,type,t,is,declared,and,code,field,type,code,is,not,assignable,to,t,a,coersion,to,t,will,be,attempted,before,delegating,to,code,printer,code,to,print,a,field,value,on,parse,if,the,object,returned,by,the,parser,is,not,assignable,to,the,runtime,field,type,a,coersion,to,the,field,type,will,be,attempted,before,returning,the,parsed,field,value,param,field,type,the,field,type,to,format,param,printer,the,printing,part,of,the,formatter,param,parser,the,parsing,part,of,the,formatter;void,add,formatter,for,field,type,class,field,type,printer,printer,parser,parser
FormatterRegistry -> void addFormatterForFieldType(Class<?> fieldType, Printer<?> printer, Parser<?> parser)_;1356735495;Adds a Printer/Parser pair to format fields of a specific type._The formatter will delegate to the specified {@code printer} for printing_and the specified {@code parser} for parsing._<p>On print, if the Printer's type T is declared and {@code fieldType} is not assignable to T,_a coersion to T will be attempted before delegating to {@code printer} to print a field value._On parse, if the object returned by the Parser is not assignable to the runtime field type,_a coersion to the field type will be attempted before returning the parsed field value._@param fieldType the field type to format_@param printer the printing part of the formatter_@param parser the parsing part of the formatter;void addFormatterForFieldType(Class<?> fieldType, Printer<?> printer, Parser<?> parser)_;adds,a,printer,parser,pair,to,format,fields,of,a,specific,type,the,formatter,will,delegate,to,the,specified,code,printer,for,printing,and,the,specified,code,parser,for,parsing,p,on,print,if,the,printer,s,type,t,is,declared,and,code,field,type,is,not,assignable,to,t,a,coersion,to,t,will,be,attempted,before,delegating,to,code,printer,to,print,a,field,value,on,parse,if,the,object,returned,by,the,parser,is,not,assignable,to,the,runtime,field,type,a,coersion,to,the,field,type,will,be,attempted,before,returning,the,parsed,field,value,param,field,type,the,field,type,to,format,param,printer,the,printing,part,of,the,formatter,param,parser,the,parsing,part,of,the,formatter;void,add,formatter,for,field,type,class,field,type,printer,printer,parser,parser
FormatterRegistry -> void addFormatterForFieldType(Class<?> fieldType, Printer<?> printer, Parser<?> parser)_;1390495655;Adds a Printer/Parser pair to format fields of a specific type._The formatter will delegate to the specified {@code printer} for printing_and the specified {@code parser} for parsing._<p>On print, if the Printer's type T is declared and {@code fieldType} is not assignable to T,_a coercion to T will be attempted before delegating to {@code printer} to print a field value._On parse, if the object returned by the Parser is not assignable to the runtime field type,_a coercion to the field type will be attempted before returning the parsed field value._@param fieldType the field type to format_@param printer the printing part of the formatter_@param parser the parsing part of the formatter;void addFormatterForFieldType(Class<?> fieldType, Printer<?> printer, Parser<?> parser)_;adds,a,printer,parser,pair,to,format,fields,of,a,specific,type,the,formatter,will,delegate,to,the,specified,code,printer,for,printing,and,the,specified,code,parser,for,parsing,p,on,print,if,the,printer,s,type,t,is,declared,and,code,field,type,is,not,assignable,to,t,a,coercion,to,t,will,be,attempted,before,delegating,to,code,printer,to,print,a,field,value,on,parse,if,the,object,returned,by,the,parser,is,not,assignable,to,the,runtime,field,type,a,coercion,to,the,field,type,will,be,attempted,before,returning,the,parsed,field,value,param,field,type,the,field,type,to,format,param,printer,the,printing,part,of,the,formatter,param,parser,the,parsing,part,of,the,formatter;void,add,formatter,for,field,type,class,field,type,printer,printer,parser,parser
FormatterRegistry -> void addFormatterForFieldType(Class<?> fieldType, Printer<?> printer, Parser<?> parser)_;1530174524;Adds a Printer/Parser pair to format fields of a specific type._The formatter will delegate to the specified {@code printer} for printing_and the specified {@code parser} for parsing._<p>On print, if the Printer's type T is declared and {@code fieldType} is not assignable to T,_a coercion to T will be attempted before delegating to {@code printer} to print a field value._On parse, if the object returned by the Parser is not assignable to the runtime field type,_a coercion to the field type will be attempted before returning the parsed field value._@param fieldType the field type to format_@param printer the printing part of the formatter_@param parser the parsing part of the formatter;void addFormatterForFieldType(Class<?> fieldType, Printer<?> printer, Parser<?> parser)_;adds,a,printer,parser,pair,to,format,fields,of,a,specific,type,the,formatter,will,delegate,to,the,specified,code,printer,for,printing,and,the,specified,code,parser,for,parsing,p,on,print,if,the,printer,s,type,t,is,declared,and,code,field,type,is,not,assignable,to,t,a,coercion,to,t,will,be,attempted,before,delegating,to,code,printer,to,print,a,field,value,on,parse,if,the,object,returned,by,the,parser,is,not,assignable,to,the,runtime,field,type,a,coercion,to,the,field,type,will,be,attempted,before,returning,the,parsed,field,value,param,field,type,the,field,type,to,format,param,printer,the,printing,part,of,the,formatter,param,parser,the,parsing,part,of,the,formatter;void,add,formatter,for,field,type,class,field,type,printer,printer,parser,parser
