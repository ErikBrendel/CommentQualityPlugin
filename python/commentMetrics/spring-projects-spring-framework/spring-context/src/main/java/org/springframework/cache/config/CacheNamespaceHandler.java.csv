commented;modifiers;parameterAmount;loc;comment;code
false;static;1;5;;static String extractCacheManager(Element element) {     return (element.hasAttribute(CacheNamespaceHandler.CACHE_MANAGER_ATTRIBUTE) ? element.getAttribute(CacheNamespaceHandler.CACHE_MANAGER_ATTRIBUTE) : CacheNamespaceHandler.DEFAULT_CACHE_MANAGER_BEAN_NAME). }
false;static;2;7;;static BeanDefinition parseKeyGenerator(Element element, BeanDefinition def) {     String name = element.getAttribute("key-generator").     if (StringUtils.hasText(name)) {         def.getPropertyValues().add("keyGenerator", new RuntimeBeanReference(name.trim())).     }     return def. }
false;public;0;5;;@Override public void init() {     registerBeanDefinitionParser("annotation-driven", new AnnotationDrivenCacheBeanDefinitionParser()).     registerBeanDefinitionParser("advice", new CacheAdviceParser()). }
