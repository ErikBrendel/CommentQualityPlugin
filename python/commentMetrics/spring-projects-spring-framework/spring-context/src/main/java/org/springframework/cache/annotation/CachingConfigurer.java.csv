# id;timestamp;commentText;codeText;commentWords;codeWords
CachingConfigurer -> CacheResolver cacheResolver()_;1396878069;Return the {@link CacheResolver} bean to use to resolve regular caches for_annotation-driven cache management. This is an alternative option to set_the {@link CacheManager} to use._<p>Implementations must explicitly declare_{@link org.springframework.context.annotation.Bean @Bean}, e.g._<pre class="code">_&#064_Configuration_&#064_EnableCaching_public class AppConfig extends CachingConfigurerSupport {_&#064_Bean // important!_&#064_Override_public CacheResolver cacheResolver() {_// configure and return CacheResolver instance__// ...__</pre>_See {@link EnableCaching} for more complete examples.;CacheResolver cacheResolver()_;return,the,link,cache,resolver,bean,to,use,to,resolve,regular,caches,for,annotation,driven,cache,management,this,is,an,alternative,option,to,set,the,link,cache,manager,to,use,p,implementations,must,explicitly,declare,link,org,springframework,context,annotation,bean,bean,e,g,pre,class,code,064,configuration,064,enable,caching,public,class,app,config,extends,caching,configurer,support,064,bean,important,064,override,public,cache,resolver,cache,resolver,configure,and,return,cache,resolver,instance,pre,see,link,enable,caching,for,more,complete,examples;cache,resolver,cache,resolver
CachingConfigurer -> CacheResolver cacheResolver()_;1400596774;Return the {@link CacheResolver} bean to use to resolve regular caches for_annotation-driven cache management. This is an alternative option to set_the {@link CacheManager} to use._<p>Implementations must explicitly declare_{@link org.springframework.context.annotation.Bean @Bean}, e.g._<pre class="code">_&#064_Configuration_&#064_EnableCaching_public class AppConfig extends CachingConfigurerSupport {_&#064_Bean // important!_&#064_Override_public CacheResolver cacheResolver() {_// configure and return CacheResolver instance__// ...__</pre>_See {@link EnableCaching} for more complete examples.;CacheResolver cacheResolver()_;return,the,link,cache,resolver,bean,to,use,to,resolve,regular,caches,for,annotation,driven,cache,management,this,is,an,alternative,option,to,set,the,link,cache,manager,to,use,p,implementations,must,explicitly,declare,link,org,springframework,context,annotation,bean,bean,e,g,pre,class,code,064,configuration,064,enable,caching,public,class,app,config,extends,caching,configurer,support,064,bean,important,064,override,public,cache,resolver,cache,resolver,configure,and,return,cache,resolver,instance,pre,see,link,enable,caching,for,more,complete,examples;cache,resolver,cache,resolver
CachingConfigurer -> CacheResolver cacheResolver()_;1400655798;Return the {@link CacheResolver} bean to use to resolve regular caches for_annotation-driven cache management. This is an alternative and more powerful_option of specifying the {@link CacheManager} to use._<p>If both a {@link #cacheManager()} and {@link #cacheResolver()} are set, the_cache manager is ignored._<p>Implementations must explicitly declare_{@link org.springframework.context.annotation.Bean @Bean}, e.g._<pre class="code">_&#064_Configuration_&#064_EnableCaching_public class AppConfig extends CachingConfigurerSupport {_&#064_Bean // important!_&#064_Override_public CacheResolver cacheResolver() {_// configure and return CacheResolver instance__// ...__</pre>_See {@link EnableCaching} for more complete examples.;CacheResolver cacheResolver()_;return,the,link,cache,resolver,bean,to,use,to,resolve,regular,caches,for,annotation,driven,cache,management,this,is,an,alternative,and,more,powerful,option,of,specifying,the,link,cache,manager,to,use,p,if,both,a,link,cache,manager,and,link,cache,resolver,are,set,the,cache,manager,is,ignored,p,implementations,must,explicitly,declare,link,org,springframework,context,annotation,bean,bean,e,g,pre,class,code,064,configuration,064,enable,caching,public,class,app,config,extends,caching,configurer,support,064,bean,important,064,override,public,cache,resolver,cache,resolver,configure,and,return,cache,resolver,instance,pre,see,link,enable,caching,for,more,complete,examples;cache,resolver,cache,resolver
CachingConfigurer -> CacheErrorHandler errorHandler()_;1400596774;Return the {@link CacheErrorHandler} to use to handle cache-related errors._<p>By default,{@link org.springframework.cache.interceptor.SimpleCacheErrorHandler}_is used and simply throws the exception back at the client._<p>Implementations must explicitly declare_{@link org.springframework.context.annotation.Bean @Bean}, e.g._<pre class="code">_&#064_Configuration_&#064_EnableCaching_public class AppConfig extends CachingConfigurerSupport {_&#064_Bean // important!_&#064_Override_public CacheErrorHandler errorHandler() {_// configure and return CacheErrorHandler instance__// ...__</pre>_See @{@link EnableCaching} for more complete examples.;CacheErrorHandler errorHandler()_;return,the,link,cache,error,handler,to,use,to,handle,cache,related,errors,p,by,default,link,org,springframework,cache,interceptor,simple,cache,error,handler,is,used,and,simply,throws,the,exception,back,at,the,client,p,implementations,must,explicitly,declare,link,org,springframework,context,annotation,bean,bean,e,g,pre,class,code,064,configuration,064,enable,caching,public,class,app,config,extends,caching,configurer,support,064,bean,important,064,override,public,cache,error,handler,error,handler,configure,and,return,cache,error,handler,instance,pre,see,link,enable,caching,for,more,complete,examples;cache,error,handler,error,handler
CachingConfigurer -> CacheErrorHandler errorHandler()_;1400655798;Return the {@link CacheErrorHandler} to use to handle cache-related errors._<p>By default,{@link org.springframework.cache.interceptor.SimpleCacheErrorHandler}_is used and simply throws the exception back at the client._<p>Implementations must explicitly declare_{@link org.springframework.context.annotation.Bean @Bean}, e.g._<pre class="code">_&#064_Configuration_&#064_EnableCaching_public class AppConfig extends CachingConfigurerSupport {_&#064_Bean // important!_&#064_Override_public CacheErrorHandler errorHandler() {_// configure and return CacheErrorHandler instance__// ...__</pre>_See @{@link EnableCaching} for more complete examples.;CacheErrorHandler errorHandler()_;return,the,link,cache,error,handler,to,use,to,handle,cache,related,errors,p,by,default,link,org,springframework,cache,interceptor,simple,cache,error,handler,is,used,and,simply,throws,the,exception,back,at,the,client,p,implementations,must,explicitly,declare,link,org,springframework,context,annotation,bean,bean,e,g,pre,class,code,064,configuration,064,enable,caching,public,class,app,config,extends,caching,configurer,support,064,bean,important,064,override,public,cache,error,handler,error,handler,configure,and,return,cache,error,handler,instance,pre,see,link,enable,caching,for,more,complete,examples;cache,error,handler,error,handler
CachingConfigurer -> CacheManager cacheManager()_;1328020251;Return the cache manager bean to use for annotation-driven cache management._Implementations must explicitly declare_{@link org.springframework.context.annotation.Bean @Bean}, e.g._<pre class="code">_&#064_Configuration_&#064_EnableCaching_public class AppConfig implements CachingConfigurer {_&#064_Bean // important!_&#064_Override_public CacheManager cacheManager() {_// configure and return CacheManager instance__// ...__</pre>_See @{@link EnableCaching} for more complete examples.;CacheManager cacheManager()_;return,the,cache,manager,bean,to,use,for,annotation,driven,cache,management,implementations,must,explicitly,declare,link,org,springframework,context,annotation,bean,bean,e,g,pre,class,code,064,configuration,064,enable,caching,public,class,app,config,implements,caching,configurer,064,bean,important,064,override,public,cache,manager,cache,manager,configure,and,return,cache,manager,instance,pre,see,link,enable,caching,for,more,complete,examples;cache,manager,cache,manager
CachingConfigurer -> CacheManager cacheManager()_;1396878069;Return the cache manager bean to use for annotation-driven cache_management. A default {@link CacheResolver} will be initialized_behind the scene with this cache manager. For more fine-grained_management of the cache resolution, consider setting the_{@link CacheResolver} directly._<p>Implementations must explicitly declare_{@link org.springframework.context.annotation.Bean @Bean}, e.g._<pre class="code">_&#064_Configuration_&#064_EnableCaching_public class AppConfig extends CachingConfigurerSupport {_&#064_Bean // important!_&#064_Override_public CacheManager cacheManager() {_// configure and return CacheManager instance__// ...__</pre>_See @{@link EnableCaching} for more complete examples.;CacheManager cacheManager()_;return,the,cache,manager,bean,to,use,for,annotation,driven,cache,management,a,default,link,cache,resolver,will,be,initialized,behind,the,scene,with,this,cache,manager,for,more,fine,grained,management,of,the,cache,resolution,consider,setting,the,link,cache,resolver,directly,p,implementations,must,explicitly,declare,link,org,springframework,context,annotation,bean,bean,e,g,pre,class,code,064,configuration,064,enable,caching,public,class,app,config,extends,caching,configurer,support,064,bean,important,064,override,public,cache,manager,cache,manager,configure,and,return,cache,manager,instance,pre,see,link,enable,caching,for,more,complete,examples;cache,manager,cache,manager
CachingConfigurer -> CacheManager cacheManager()_;1400596774;Return the cache manager bean to use for annotation-driven cache_management. A default {@link CacheResolver} will be initialized_behind the scene with this cache manager. For more fine-grained_management of the cache resolution, consider setting the_{@link CacheResolver} directly._<p>Implementations must explicitly declare_{@link org.springframework.context.annotation.Bean @Bean}, e.g._<pre class="code">_&#064_Configuration_&#064_EnableCaching_public class AppConfig extends CachingConfigurerSupport {_&#064_Bean // important!_&#064_Override_public CacheManager cacheManager() {_// configure and return CacheManager instance__// ...__</pre>_See @{@link EnableCaching} for more complete examples.;CacheManager cacheManager()_;return,the,cache,manager,bean,to,use,for,annotation,driven,cache,management,a,default,link,cache,resolver,will,be,initialized,behind,the,scene,with,this,cache,manager,for,more,fine,grained,management,of,the,cache,resolution,consider,setting,the,link,cache,resolver,directly,p,implementations,must,explicitly,declare,link,org,springframework,context,annotation,bean,bean,e,g,pre,class,code,064,configuration,064,enable,caching,public,class,app,config,extends,caching,configurer,support,064,bean,important,064,override,public,cache,manager,cache,manager,configure,and,return,cache,manager,instance,pre,see,link,enable,caching,for,more,complete,examples;cache,manager,cache,manager
CachingConfigurer -> CacheManager cacheManager()_;1400655798;Return the cache manager bean to use for annotation-driven cache_management. A default {@link CacheResolver} will be initialized_behind the scenes with this cache manager. For more fine-grained_management of the cache resolution, consider setting the_{@link CacheResolver} directly._<p>Implementations must explicitly declare_{@link org.springframework.context.annotation.Bean @Bean}, e.g._<pre class="code">_&#064_Configuration_&#064_EnableCaching_public class AppConfig extends CachingConfigurerSupport {_&#064_Bean // important!_&#064_Override_public CacheManager cacheManager() {_// configure and return CacheManager instance__// ...__</pre>_See @{@link EnableCaching} for more complete examples.;CacheManager cacheManager()_;return,the,cache,manager,bean,to,use,for,annotation,driven,cache,management,a,default,link,cache,resolver,will,be,initialized,behind,the,scenes,with,this,cache,manager,for,more,fine,grained,management,of,the,cache,resolution,consider,setting,the,link,cache,resolver,directly,p,implementations,must,explicitly,declare,link,org,springframework,context,annotation,bean,bean,e,g,pre,class,code,064,configuration,064,enable,caching,public,class,app,config,extends,caching,configurer,support,064,bean,important,064,override,public,cache,manager,cache,manager,configure,and,return,cache,manager,instance,pre,see,link,enable,caching,for,more,complete,examples;cache,manager,cache,manager
CachingConfigurer -> KeyGenerator keyGenerator()_;1328020251;Return the key generator bean to use for annotation-driven cache management._Implementations must explicitly declare_{@link org.springframework.context.annotation.Bean @Bean}, e.g._<pre class="code">_&#064_Configuration_&#064_EnableCaching_public class AppConfig implements CachingConfigurer {_&#064_Bean // important!_&#064_Override_public KeyGenerator keyGenerator() {_// configure and return KeyGenerator instance__// ...__</pre>_See @{@link EnableCaching} for more complete examples.;KeyGenerator keyGenerator()_;return,the,key,generator,bean,to,use,for,annotation,driven,cache,management,implementations,must,explicitly,declare,link,org,springframework,context,annotation,bean,bean,e,g,pre,class,code,064,configuration,064,enable,caching,public,class,app,config,implements,caching,configurer,064,bean,important,064,override,public,key,generator,key,generator,configure,and,return,key,generator,instance,pre,see,link,enable,caching,for,more,complete,examples;key,generator,key,generator
CachingConfigurer -> KeyGenerator keyGenerator()_;1396878069;Return the key generator bean to use for annotation-driven cache management._Implementations must explicitly declare_{@link org.springframework.context.annotation.Bean @Bean}, e.g._<pre class="code">_&#064_Configuration_&#064_EnableCaching_public class AppConfig extends CachingConfigurerSupport {_&#064_Bean // important!_&#064_Override_public KeyGenerator keyGenerator() {_// configure and return KeyGenerator instance__// ...__</pre>_See @{@link EnableCaching} for more complete examples.;KeyGenerator keyGenerator()_;return,the,key,generator,bean,to,use,for,annotation,driven,cache,management,implementations,must,explicitly,declare,link,org,springframework,context,annotation,bean,bean,e,g,pre,class,code,064,configuration,064,enable,caching,public,class,app,config,extends,caching,configurer,support,064,bean,important,064,override,public,key,generator,key,generator,configure,and,return,key,generator,instance,pre,see,link,enable,caching,for,more,complete,examples;key,generator,key,generator
CachingConfigurer -> KeyGenerator keyGenerator()_;1400596774;Return the key generator bean to use for annotation-driven cache management._Implementations must explicitly declare_{@link org.springframework.context.annotation.Bean @Bean}, e.g._<pre class="code">_&#064_Configuration_&#064_EnableCaching_public class AppConfig extends CachingConfigurerSupport {_&#064_Bean // important!_&#064_Override_public KeyGenerator keyGenerator() {_// configure and return KeyGenerator instance__// ...__</pre>_See @{@link EnableCaching} for more complete examples.;KeyGenerator keyGenerator()_;return,the,key,generator,bean,to,use,for,annotation,driven,cache,management,implementations,must,explicitly,declare,link,org,springframework,context,annotation,bean,bean,e,g,pre,class,code,064,configuration,064,enable,caching,public,class,app,config,extends,caching,configurer,support,064,bean,important,064,override,public,key,generator,key,generator,configure,and,return,key,generator,instance,pre,see,link,enable,caching,for,more,complete,examples;key,generator,key,generator
CachingConfigurer -> KeyGenerator keyGenerator()_;1400655798;Return the key generator bean to use for annotation-driven cache management._Implementations must explicitly declare_{@link org.springframework.context.annotation.Bean @Bean}, e.g._<pre class="code">_&#064_Configuration_&#064_EnableCaching_public class AppConfig extends CachingConfigurerSupport {_&#064_Bean // important!_&#064_Override_public KeyGenerator keyGenerator() {_// configure and return KeyGenerator instance__// ...__</pre>_See @{@link EnableCaching} for more complete examples.;KeyGenerator keyGenerator()_;return,the,key,generator,bean,to,use,for,annotation,driven,cache,management,implementations,must,explicitly,declare,link,org,springframework,context,annotation,bean,bean,e,g,pre,class,code,064,configuration,064,enable,caching,public,class,app,config,extends,caching,configurer,support,064,bean,important,064,override,public,key,generator,key,generator,configure,and,return,key,generator,instance,pre,see,link,enable,caching,for,more,complete,examples;key,generator,key,generator
CachingConfigurer -> @Nullable 	CacheManager cacheManager()_;1495868221;Return the cache manager bean to use for annotation-driven cache_management. A default {@link CacheResolver} will be initialized_behind the scenes with this cache manager. For more fine-grained_management of the cache resolution, consider setting the_{@link CacheResolver} directly._<p>Implementations must explicitly declare_{@link org.springframework.context.annotation.Bean @Bean}, e.g._<pre class="code">_&#064_Configuration_&#064_EnableCaching_public class AppConfig extends CachingConfigurerSupport {_&#064_Bean // important!_&#064_Override_public CacheManager cacheManager() {_// configure and return CacheManager instance__// ...__</pre>_See @{@link EnableCaching} for more complete examples.;@Nullable_	CacheManager cacheManager()_;return,the,cache,manager,bean,to,use,for,annotation,driven,cache,management,a,default,link,cache,resolver,will,be,initialized,behind,the,scenes,with,this,cache,manager,for,more,fine,grained,management,of,the,cache,resolution,consider,setting,the,link,cache,resolver,directly,p,implementations,must,explicitly,declare,link,org,springframework,context,annotation,bean,bean,e,g,pre,class,code,064,configuration,064,enable,caching,public,class,app,config,extends,caching,configurer,support,064,bean,important,064,override,public,cache,manager,cache,manager,configure,and,return,cache,manager,instance,pre,see,link,enable,caching,for,more,complete,examples;nullable,cache,manager,cache,manager
CachingConfigurer -> @Nullable 	CacheManager cacheManager()_;1516617801;Return the cache manager bean to use for annotation-driven cache_management. A default {@link CacheResolver} will be initialized_behind the scenes with this cache manager. For more fine-grained_management of the cache resolution, consider setting the_{@link CacheResolver} directly._<p>Implementations must explicitly declare_{@link org.springframework.context.annotation.Bean @Bean}, e.g._<pre class="code">_&#064_Configuration_&#064_EnableCaching_public class AppConfig extends CachingConfigurerSupport {_&#064_Bean // important!_&#064_Override_public CacheManager cacheManager() {_// configure and return CacheManager instance__// ...__</pre>_See @{@link EnableCaching} for more complete examples.;@Nullable_	CacheManager cacheManager()_;return,the,cache,manager,bean,to,use,for,annotation,driven,cache,management,a,default,link,cache,resolver,will,be,initialized,behind,the,scenes,with,this,cache,manager,for,more,fine,grained,management,of,the,cache,resolution,consider,setting,the,link,cache,resolver,directly,p,implementations,must,explicitly,declare,link,org,springframework,context,annotation,bean,bean,e,g,pre,class,code,064,configuration,064,enable,caching,public,class,app,config,extends,caching,configurer,support,064,bean,important,064,override,public,cache,manager,cache,manager,configure,and,return,cache,manager,instance,pre,see,link,enable,caching,for,more,complete,examples;nullable,cache,manager,cache,manager
CachingConfigurer -> @Nullable 	KeyGenerator keyGenerator()_;1495868221;Return the key generator bean to use for annotation-driven cache management._Implementations must explicitly declare_{@link org.springframework.context.annotation.Bean @Bean}, e.g._<pre class="code">_&#064_Configuration_&#064_EnableCaching_public class AppConfig extends CachingConfigurerSupport {_&#064_Bean // important!_&#064_Override_public KeyGenerator keyGenerator() {_// configure and return KeyGenerator instance__// ...__</pre>_See @{@link EnableCaching} for more complete examples.;@Nullable_	KeyGenerator keyGenerator()_;return,the,key,generator,bean,to,use,for,annotation,driven,cache,management,implementations,must,explicitly,declare,link,org,springframework,context,annotation,bean,bean,e,g,pre,class,code,064,configuration,064,enable,caching,public,class,app,config,extends,caching,configurer,support,064,bean,important,064,override,public,key,generator,key,generator,configure,and,return,key,generator,instance,pre,see,link,enable,caching,for,more,complete,examples;nullable,key,generator,key,generator
CachingConfigurer -> @Nullable 	KeyGenerator keyGenerator()_;1516617801;Return the key generator bean to use for annotation-driven cache management._Implementations must explicitly declare_{@link org.springframework.context.annotation.Bean @Bean}, e.g._<pre class="code">_&#064_Configuration_&#064_EnableCaching_public class AppConfig extends CachingConfigurerSupport {_&#064_Bean // important!_&#064_Override_public KeyGenerator keyGenerator() {_// configure and return KeyGenerator instance__// ...__</pre>_See @{@link EnableCaching} for more complete examples.;@Nullable_	KeyGenerator keyGenerator()_;return,the,key,generator,bean,to,use,for,annotation,driven,cache,management,implementations,must,explicitly,declare,link,org,springframework,context,annotation,bean,bean,e,g,pre,class,code,064,configuration,064,enable,caching,public,class,app,config,extends,caching,configurer,support,064,bean,important,064,override,public,key,generator,key,generator,configure,and,return,key,generator,instance,pre,see,link,enable,caching,for,more,complete,examples;nullable,key,generator,key,generator
CachingConfigurer -> @Nullable 	CacheResolver cacheResolver()_;1495868221;Return the {@link CacheResolver} bean to use to resolve regular caches for_annotation-driven cache management. This is an alternative and more powerful_option of specifying the {@link CacheManager} to use._<p>If both a {@link #cacheManager()} and {@link #cacheResolver()} are set, the_cache manager is ignored._<p>Implementations must explicitly declare_{@link org.springframework.context.annotation.Bean @Bean}, e.g._<pre class="code">_&#064_Configuration_&#064_EnableCaching_public class AppConfig extends CachingConfigurerSupport {_&#064_Bean // important!_&#064_Override_public CacheResolver cacheResolver() {_// configure and return CacheResolver instance__// ...__</pre>_See {@link EnableCaching} for more complete examples.;@Nullable_	CacheResolver cacheResolver()_;return,the,link,cache,resolver,bean,to,use,to,resolve,regular,caches,for,annotation,driven,cache,management,this,is,an,alternative,and,more,powerful,option,of,specifying,the,link,cache,manager,to,use,p,if,both,a,link,cache,manager,and,link,cache,resolver,are,set,the,cache,manager,is,ignored,p,implementations,must,explicitly,declare,link,org,springframework,context,annotation,bean,bean,e,g,pre,class,code,064,configuration,064,enable,caching,public,class,app,config,extends,caching,configurer,support,064,bean,important,064,override,public,cache,resolver,cache,resolver,configure,and,return,cache,resolver,instance,pre,see,link,enable,caching,for,more,complete,examples;nullable,cache,resolver,cache,resolver
CachingConfigurer -> @Nullable 	CacheResolver cacheResolver()_;1516617801;Return the {@link CacheResolver} bean to use to resolve regular caches for_annotation-driven cache management. This is an alternative and more powerful_option of specifying the {@link CacheManager} to use._<p>If both a {@link #cacheManager()} and {@code #cacheResolver()} are set,_the cache manager is ignored._<p>Implementations must explicitly declare_{@link org.springframework.context.annotation.Bean @Bean}, e.g._<pre class="code">_&#064_Configuration_&#064_EnableCaching_public class AppConfig extends CachingConfigurerSupport {_&#064_Bean // important!_&#064_Override_public CacheResolver cacheResolver() {_// configure and return CacheResolver instance__// ...__</pre>_See {@link EnableCaching} for more complete examples.;@Nullable_	CacheResolver cacheResolver()_;return,the,link,cache,resolver,bean,to,use,to,resolve,regular,caches,for,annotation,driven,cache,management,this,is,an,alternative,and,more,powerful,option,of,specifying,the,link,cache,manager,to,use,p,if,both,a,link,cache,manager,and,code,cache,resolver,are,set,the,cache,manager,is,ignored,p,implementations,must,explicitly,declare,link,org,springframework,context,annotation,bean,bean,e,g,pre,class,code,064,configuration,064,enable,caching,public,class,app,config,extends,caching,configurer,support,064,bean,important,064,override,public,cache,resolver,cache,resolver,configure,and,return,cache,resolver,instance,pre,see,link,enable,caching,for,more,complete,examples;nullable,cache,resolver,cache,resolver
CachingConfigurer -> @Nullable 	CacheErrorHandler errorHandler()_;1495868221;Return the {@link CacheErrorHandler} to use to handle cache-related errors._<p>By default,{@link org.springframework.cache.interceptor.SimpleCacheErrorHandler}_is used and simply throws the exception back at the client._<p>Implementations must explicitly declare_{@link org.springframework.context.annotation.Bean @Bean}, e.g._<pre class="code">_&#064_Configuration_&#064_EnableCaching_public class AppConfig extends CachingConfigurerSupport {_&#064_Bean // important!_&#064_Override_public CacheErrorHandler errorHandler() {_// configure and return CacheErrorHandler instance__// ...__</pre>_See @{@link EnableCaching} for more complete examples.;@Nullable_	CacheErrorHandler errorHandler()_;return,the,link,cache,error,handler,to,use,to,handle,cache,related,errors,p,by,default,link,org,springframework,cache,interceptor,simple,cache,error,handler,is,used,and,simply,throws,the,exception,back,at,the,client,p,implementations,must,explicitly,declare,link,org,springframework,context,annotation,bean,bean,e,g,pre,class,code,064,configuration,064,enable,caching,public,class,app,config,extends,caching,configurer,support,064,bean,important,064,override,public,cache,error,handler,error,handler,configure,and,return,cache,error,handler,instance,pre,see,link,enable,caching,for,more,complete,examples;nullable,cache,error,handler,error,handler
CachingConfigurer -> @Nullable 	CacheErrorHandler errorHandler()_;1516617801;Return the {@link CacheErrorHandler} to use to handle cache-related errors._<p>By default,{@link org.springframework.cache.interceptor.SimpleCacheErrorHandler}_is used and simply throws the exception back at the client._<p>Implementations must explicitly declare_{@link org.springframework.context.annotation.Bean @Bean}, e.g._<pre class="code">_&#064_Configuration_&#064_EnableCaching_public class AppConfig extends CachingConfigurerSupport {_&#064_Bean // important!_&#064_Override_public CacheErrorHandler errorHandler() {_// configure and return CacheErrorHandler instance__// ...__</pre>_See @{@link EnableCaching} for more complete examples.;@Nullable_	CacheErrorHandler errorHandler()_;return,the,link,cache,error,handler,to,use,to,handle,cache,related,errors,p,by,default,link,org,springframework,cache,interceptor,simple,cache,error,handler,is,used,and,simply,throws,the,exception,back,at,the,client,p,implementations,must,explicitly,declare,link,org,springframework,context,annotation,bean,bean,e,g,pre,class,code,064,configuration,064,enable,caching,public,class,app,config,extends,caching,configurer,support,064,bean,important,064,override,public,cache,error,handler,error,handler,configure,and,return,cache,error,handler,instance,pre,see,link,enable,caching,for,more,complete,examples;nullable,cache,error,handler,error,handler
