# id;timestamp;commentText;codeText;commentWords;codeWords
AsyncConfigurationSelector -> public String[] selectImports(AdviceMode adviceMode);1328020251;{@inheritDoc}_@return {@link ProxyAsyncConfiguration} or {@code AspectJAsyncConfiguration} for_{@code PROXY} and {@code ASPECTJ} values of {@link EnableAsync#mode()}, respectively;public String[] selectImports(AdviceMode adviceMode) {_		switch (adviceMode) {_			case PROXY:_				return new String[] { ProxyAsyncConfiguration.class.getName() }__			case ASPECTJ:_				return new String[] { AnnotationConfigUtils.ASYNC_EXECUTION_ASPECT_CONFIGURATION_CLASS_NAME }__			default:_				return null__		}_	};inherit,doc,return,link,proxy,async,configuration,or,code,aspect,jasync,configuration,for,code,proxy,and,code,aspectj,values,of,link,enable,async,mode,respectively;public,string,select,imports,advice,mode,advice,mode,switch,advice,mode,case,proxy,return,new,string,proxy,async,configuration,class,get,name,case,aspectj,return,new,string,annotation,config,utils,default,return,null
AsyncConfigurationSelector -> public String[] selectImports(AdviceMode adviceMode);1357119239;{@inheritDoc}_@return {@link ProxyAsyncConfiguration} or {@code AspectJAsyncConfiguration} for_{@code PROXY} and {@code ASPECTJ} values of {@link EnableAsync#mode()}, respectively;public String[] selectImports(AdviceMode adviceMode) {_		switch (adviceMode) {_			case PROXY:_				return new String[] { ProxyAsyncConfiguration.class.getName() }__			case ASPECTJ:_				return new String[] { AnnotationConfigUtils.ASYNC_EXECUTION_ASPECT_CONFIGURATION_CLASS_NAME }__			default:_				return null__		}_	};inherit,doc,return,link,proxy,async,configuration,or,code,aspect,jasync,configuration,for,code,proxy,and,code,aspectj,values,of,link,enable,async,mode,respectively;public,string,select,imports,advice,mode,advice,mode,switch,advice,mode,case,proxy,return,new,string,proxy,async,configuration,class,get,name,case,aspectj,return,new,string,annotation,config,utils,default,return,null
AsyncConfigurationSelector -> @Override 	public String[] selectImports(AdviceMode adviceMode);1356735495;{@inheritDoc}_@return {@link ProxyAsyncConfiguration} or {@code AspectJAsyncConfiguration} for_{@code PROXY} and {@code ASPECTJ} values of {@link EnableAsync#mode()}, respectively;@Override_	public String[] selectImports(AdviceMode adviceMode) {_		switch (adviceMode) {_			case PROXY:_				return new String[] { ProxyAsyncConfiguration.class.getName() }__			case ASPECTJ:_				return new String[] { AnnotationConfigUtils.ASYNC_EXECUTION_ASPECT_CONFIGURATION_CLASS_NAME }__			default:_				return null__		}_	};inherit,doc,return,link,proxy,async,configuration,or,code,aspect,jasync,configuration,for,code,proxy,and,code,aspectj,values,of,link,enable,async,mode,respectively;override,public,string,select,imports,advice,mode,advice,mode,switch,advice,mode,case,proxy,return,new,string,proxy,async,configuration,class,get,name,case,aspectj,return,new,string,annotation,config,utils,default,return,null
AsyncConfigurationSelector -> @Override 	public String[] selectImports(AdviceMode adviceMode);1368482696;{@inheritDoc}_@return {@link ProxyAsyncConfiguration} or {@code AspectJAsyncConfiguration} for_{@code PROXY} and {@code ASPECTJ} values of {@link EnableAsync#mode()}, respectively;@Override_	public String[] selectImports(AdviceMode adviceMode) {_		switch (adviceMode) {_			case PROXY:_				return new String[] { ProxyAsyncConfiguration.class.getName() }__			case ASPECTJ:_				return new String[] { AnnotationConfigUtils.ASYNC_EXECUTION_ASPECT_CONFIGURATION_CLASS_NAME }__			default:_				return null__		}_	};inherit,doc,return,link,proxy,async,configuration,or,code,aspect,jasync,configuration,for,code,proxy,and,code,aspectj,values,of,link,enable,async,mode,respectively;override,public,string,select,imports,advice,mode,advice,mode,switch,advice,mode,case,proxy,return,new,string,proxy,async,configuration,class,get,name,case,aspectj,return,new,string,annotation,config,utils,default,return,null
AsyncConfigurationSelector -> @Override 	public String[] selectImports(AdviceMode adviceMode);1406577501;{@inheritDoc}_@return {@link ProxyAsyncConfiguration} or {@code AspectJAsyncConfiguration} for_{@code PROXY} and {@code ASPECTJ} values of {@link EnableAsync#mode()}, respectively;@Override_	public String[] selectImports(AdviceMode adviceMode) {_		switch (adviceMode) {_			case PROXY:_				return new String[] { ProxyAsyncConfiguration.class.getName() }__			case ASPECTJ:_				return new String[] { ASYNC_EXECUTION_ASPECT_CONFIGURATION_CLASS_NAME }__			default:_				return null__		}_	};inherit,doc,return,link,proxy,async,configuration,or,code,aspect,jasync,configuration,for,code,proxy,and,code,aspectj,values,of,link,enable,async,mode,respectively;override,public,string,select,imports,advice,mode,advice,mode,switch,advice,mode,case,proxy,return,new,string,proxy,async,configuration,class,get,name,case,aspectj,return,new,string,default,return,null
AsyncConfigurationSelector -> @Override 	public String[] selectImports(AdviceMode adviceMode);1407154420;{@inheritDoc}_@return {@link ProxyAsyncConfiguration} or {@code AspectJAsyncConfiguration} for_{@code PROXY} and {@code ASPECTJ} values of {@link EnableAsync#mode()}, respectively;@Override_	public String[] selectImports(AdviceMode adviceMode) {_		switch (adviceMode) {_			case PROXY:_				return new String[] { ProxyAsyncConfiguration.class.getName() }__			case ASPECTJ:_				return new String[] { ASYNC_EXECUTION_ASPECT_CONFIGURATION_CLASS_NAME }__			default:_				return null__		}_	};inherit,doc,return,link,proxy,async,configuration,or,code,aspect,jasync,configuration,for,code,proxy,and,code,aspectj,values,of,link,enable,async,mode,respectively;override,public,string,select,imports,advice,mode,advice,mode,switch,advice,mode,case,proxy,return,new,string,proxy,async,configuration,class,get,name,case,aspectj,return,new,string,default,return,null
AsyncConfigurationSelector -> @Override 	@Nullable 	public String[] selectImports(AdviceMode adviceMode);1502974979;{@inheritDoc}_@return {@link ProxyAsyncConfiguration} or {@code AspectJAsyncConfiguration} for_{@code PROXY} and {@code ASPECTJ} values of {@link EnableAsync#mode()}, respectively;@Override_	@Nullable_	public String[] selectImports(AdviceMode adviceMode) {_		switch (adviceMode) {_			case PROXY:_				return new String[] { ProxyAsyncConfiguration.class.getName() }__			case ASPECTJ:_				return new String[] { ASYNC_EXECUTION_ASPECT_CONFIGURATION_CLASS_NAME }__			default:_				return null__		}_	};inherit,doc,return,link,proxy,async,configuration,or,code,aspect,jasync,configuration,for,code,proxy,and,code,aspectj,values,of,link,enable,async,mode,respectively;override,nullable,public,string,select,imports,advice,mode,advice,mode,switch,advice,mode,case,proxy,return,new,string,proxy,async,configuration,class,get,name,case,aspectj,return,new,string,default,return,null
AsyncConfigurationSelector -> @Override 	@Nullable 	public String[] selectImports(AdviceMode adviceMode);1532640050;Returns {@link ProxyAsyncConfiguration} or {@code AspectJAsyncConfiguration}_for {@code PROXY} and {@code ASPECTJ} values of {@link EnableAsync#mode()},_respectively.;@Override_	@Nullable_	public String[] selectImports(AdviceMode adviceMode) {_		switch (adviceMode) {_			case PROXY:_				return new String[] {ProxyAsyncConfiguration.class.getName()}__			case ASPECTJ:_				return new String[] {ASYNC_EXECUTION_ASPECT_CONFIGURATION_CLASS_NAME}__			default:_				return null__		}_	};returns,link,proxy,async,configuration,or,code,aspect,jasync,configuration,for,code,proxy,and,code,aspectj,values,of,link,enable,async,mode,respectively;override,nullable,public,string,select,imports,advice,mode,advice,mode,switch,advice,mode,case,proxy,return,new,string,proxy,async,configuration,class,get,name,case,aspectj,return,new,string,default,return,null
