# id;timestamp;commentText;codeText;commentWords;codeWords
SimpleRemoteSlsbInvokerInterceptor -> @Override 	public void destroy();1356735495;Remove the cached session bean instance, if necessary.;@Override_	public void destroy() {_		if (this.cacheSessionBean) {_			synchronized (this.beanInstanceMonitor) {_				if (this.beanInstance instanceof EJBObject) {_					removeSessionBeanInstance((EJBObject) this.beanInstance)__				}_			}_		}_	};remove,the,cached,session,bean,instance,if,necessary;override,public,void,destroy,if,this,cache,session,bean,synchronized,this,bean,instance,monitor,if,this,bean,instance,instanceof,ejbobject,remove,session,bean,instance,ejbobject,this,bean,instance
SimpleRemoteSlsbInvokerInterceptor -> @Override 	public void destroy();1368482696;Remove the cached session bean instance, if necessary.;@Override_	public void destroy() {_		if (this.cacheSessionBean) {_			synchronized (this.beanInstanceMonitor) {_				if (this.beanInstance instanceof EJBObject) {_					removeSessionBeanInstance((EJBObject) this.beanInstance)__				}_			}_		}_	};remove,the,cached,session,bean,instance,if,necessary;override,public,void,destroy,if,this,cache,session,bean,synchronized,this,bean,instance,monitor,if,this,bean,instance,instanceof,ejbobject,remove,session,bean,instance,ejbobject,this,bean,instance
SimpleRemoteSlsbInvokerInterceptor -> @Override 	public void destroy();1413848647;Remove the cached session bean instance, if necessary.;@Override_	public void destroy() {_		if (this.cacheSessionBean) {_			synchronized (this.beanInstanceMonitor) {_				if (this.beanInstance instanceof EJBObject) {_					removeSessionBeanInstance((EJBObject) this.beanInstance)__				}_			}_		}_	};remove,the,cached,session,bean,instance,if,necessary;override,public,void,destroy,if,this,cache,session,bean,synchronized,this,bean,instance,monitor,if,this,bean,instance,instanceof,ejbobject,remove,session,bean,instance,ejbobject,this,bean,instance
SimpleRemoteSlsbInvokerInterceptor -> @Override 	public void destroy();1498780456;Remove the cached session bean instance, if necessary.;@Override_	public void destroy() {_		if (this.cacheSessionBean) {_			synchronized (this.beanInstanceMonitor) {_				if (this.beanInstance instanceof EJBObject) {_					removeSessionBeanInstance((EJBObject) this.beanInstance)__				}_			}_		}_	};remove,the,cached,session,bean,instance,if,necessary;override,public,void,destroy,if,this,cache,session,bean,synchronized,this,bean,instance,monitor,if,this,bean,instance,instanceof,ejbobject,remove,session,bean,instance,ejbobject,this,bean,instance
SimpleRemoteSlsbInvokerInterceptor -> @Override 	public void destroy();1502974979;Remove the cached session bean instance, if necessary.;@Override_	public void destroy() {_		if (this.cacheSessionBean) {_			synchronized (this.beanInstanceMonitor) {_				if (this.beanInstance instanceof EJBObject) {_					removeSessionBeanInstance((EJBObject) this.beanInstance)__				}_			}_		}_	};remove,the,cached,session,bean,instance,if,necessary;override,public,void,destroy,if,this,cache,session,bean,synchronized,this,bean,instance,monitor,if,this,bean,instance,instanceof,ejbobject,remove,session,bean,instance,ejbobject,this,bean,instance
SimpleRemoteSlsbInvokerInterceptor -> protected void releaseSessionBeanInstance(EJBObject ejb);1328020251;Release the given EJB instance._<p>The default implementation delegates to {@link #removeSessionBeanInstance}._@param ejb the EJB component instance to release_@see #removeSessionBeanInstance;protected void releaseSessionBeanInstance(EJBObject ejb) {_		if (!this.cacheSessionBean) {_			removeSessionBeanInstance(ejb)__		}_	};release,the,given,ejb,instance,p,the,default,implementation,delegates,to,link,remove,session,bean,instance,param,ejb,the,ejb,component,instance,to,release,see,remove,session,bean,instance;protected,void,release,session,bean,instance,ejbobject,ejb,if,this,cache,session,bean,remove,session,bean,instance,ejb
SimpleRemoteSlsbInvokerInterceptor -> protected void releaseSessionBeanInstance(EJBObject ejb);1356735495;Release the given EJB instance._<p>The default implementation delegates to {@link #removeSessionBeanInstance}._@param ejb the EJB component instance to release_@see #removeSessionBeanInstance;protected void releaseSessionBeanInstance(EJBObject ejb) {_		if (!this.cacheSessionBean) {_			removeSessionBeanInstance(ejb)__		}_	};release,the,given,ejb,instance,p,the,default,implementation,delegates,to,link,remove,session,bean,instance,param,ejb,the,ejb,component,instance,to,release,see,remove,session,bean,instance;protected,void,release,session,bean,instance,ejbobject,ejb,if,this,cache,session,bean,remove,session,bean,instance,ejb
SimpleRemoteSlsbInvokerInterceptor -> protected void releaseSessionBeanInstance(EJBObject ejb);1357119239;Release the given EJB instance._<p>The default implementation delegates to {@link #removeSessionBeanInstance}._@param ejb the EJB component instance to release_@see #removeSessionBeanInstance;protected void releaseSessionBeanInstance(EJBObject ejb) {_		if (!this.cacheSessionBean) {_			removeSessionBeanInstance(ejb)__		}_	};release,the,given,ejb,instance,p,the,default,implementation,delegates,to,link,remove,session,bean,instance,param,ejb,the,ejb,component,instance,to,release,see,remove,session,bean,instance;protected,void,release,session,bean,instance,ejbobject,ejb,if,this,cache,session,bean,remove,session,bean,instance,ejb
SimpleRemoteSlsbInvokerInterceptor -> protected void releaseSessionBeanInstance(EJBObject ejb);1362408075;Release the given EJB instance._<p>The default implementation delegates to {@link #removeSessionBeanInstance}._@param ejb the EJB component instance to release_@see #removeSessionBeanInstance;protected void releaseSessionBeanInstance(EJBObject ejb) {_		if (!this.cacheSessionBean) {_			removeSessionBeanInstance(ejb)__		}_	};release,the,given,ejb,instance,p,the,default,implementation,delegates,to,link,remove,session,bean,instance,param,ejb,the,ejb,component,instance,to,release,see,remove,session,bean,instance;protected,void,release,session,bean,instance,ejbobject,ejb,if,this,cache,session,bean,remove,session,bean,instance,ejb
SimpleRemoteSlsbInvokerInterceptor -> protected void releaseSessionBeanInstance(EJBObject ejb);1368482696;Release the given EJB instance._<p>The default implementation delegates to {@link #removeSessionBeanInstance}._@param ejb the EJB component instance to release_@see #removeSessionBeanInstance;protected void releaseSessionBeanInstance(EJBObject ejb) {_		if (!this.cacheSessionBean) {_			removeSessionBeanInstance(ejb)__		}_	};release,the,given,ejb,instance,p,the,default,implementation,delegates,to,link,remove,session,bean,instance,param,ejb,the,ejb,component,instance,to,release,see,remove,session,bean,instance;protected,void,release,session,bean,instance,ejbobject,ejb,if,this,cache,session,bean,remove,session,bean,instance,ejb
SimpleRemoteSlsbInvokerInterceptor -> protected void releaseSessionBeanInstance(EJBObject ejb);1413848647;Release the given EJB instance._<p>The default implementation delegates to {@link #removeSessionBeanInstance}._@param ejb the EJB component instance to release_@see #removeSessionBeanInstance;protected void releaseSessionBeanInstance(EJBObject ejb) {_		if (!this.cacheSessionBean) {_			removeSessionBeanInstance(ejb)__		}_	};release,the,given,ejb,instance,p,the,default,implementation,delegates,to,link,remove,session,bean,instance,param,ejb,the,ejb,component,instance,to,release,see,remove,session,bean,instance;protected,void,release,session,bean,instance,ejbobject,ejb,if,this,cache,session,bean,remove,session,bean,instance,ejb
SimpleRemoteSlsbInvokerInterceptor -> protected void releaseSessionBeanInstance(EJBObject ejb);1498780456;Release the given EJB instance._<p>The default implementation delegates to {@link #removeSessionBeanInstance}._@param ejb the EJB component instance to release_@see #removeSessionBeanInstance;protected void releaseSessionBeanInstance(EJBObject ejb) {_		if (!this.cacheSessionBean) {_			removeSessionBeanInstance(ejb)__		}_	};release,the,given,ejb,instance,p,the,default,implementation,delegates,to,link,remove,session,bean,instance,param,ejb,the,ejb,component,instance,to,release,see,remove,session,bean,instance;protected,void,release,session,bean,instance,ejbobject,ejb,if,this,cache,session,bean,remove,session,bean,instance,ejb
SimpleRemoteSlsbInvokerInterceptor -> protected void releaseSessionBeanInstance(EJBObject ejb);1502974979;Release the given EJB instance._<p>The default implementation delegates to {@link #removeSessionBeanInstance}._@param ejb the EJB component instance to release_@see #removeSessionBeanInstance;protected void releaseSessionBeanInstance(EJBObject ejb) {_		if (!this.cacheSessionBean) {_			removeSessionBeanInstance(ejb)__		}_	};release,the,given,ejb,instance,p,the,default,implementation,delegates,to,link,remove,session,bean,instance,param,ejb,the,ejb,component,instance,to,release,see,remove,session,bean,instance;protected,void,release,session,bean,instance,ejbobject,ejb,if,this,cache,session,bean,remove,session,bean,instance,ejb
SimpleRemoteSlsbInvokerInterceptor -> public void setCacheSessionBean(boolean cacheSessionBean);1328020251;Set whether to cache the actual session bean object._<p>Off by default for standard EJB compliance. Turn this flag_on to optimize session bean access for servers that are_known to allow for caching the actual session bean object._@see #setCacheHome;public void setCacheSessionBean(boolean cacheSessionBean) {_		this.cacheSessionBean = cacheSessionBean__	};set,whether,to,cache,the,actual,session,bean,object,p,off,by,default,for,standard,ejb,compliance,turn,this,flag,on,to,optimize,session,bean,access,for,servers,that,are,known,to,allow,for,caching,the,actual,session,bean,object,see,set,cache,home;public,void,set,cache,session,bean,boolean,cache,session,bean,this,cache,session,bean,cache,session,bean
SimpleRemoteSlsbInvokerInterceptor -> public void setCacheSessionBean(boolean cacheSessionBean);1356735495;Set whether to cache the actual session bean object._<p>Off by default for standard EJB compliance. Turn this flag_on to optimize session bean access for servers that are_known to allow for caching the actual session bean object._@see #setCacheHome;public void setCacheSessionBean(boolean cacheSessionBean) {_		this.cacheSessionBean = cacheSessionBean__	};set,whether,to,cache,the,actual,session,bean,object,p,off,by,default,for,standard,ejb,compliance,turn,this,flag,on,to,optimize,session,bean,access,for,servers,that,are,known,to,allow,for,caching,the,actual,session,bean,object,see,set,cache,home;public,void,set,cache,session,bean,boolean,cache,session,bean,this,cache,session,bean,cache,session,bean
SimpleRemoteSlsbInvokerInterceptor -> public void setCacheSessionBean(boolean cacheSessionBean);1357119239;Set whether to cache the actual session bean object._<p>Off by default for standard EJB compliance. Turn this flag_on to optimize session bean access for servers that are_known to allow for caching the actual session bean object._@see #setCacheHome;public void setCacheSessionBean(boolean cacheSessionBean) {_		this.cacheSessionBean = cacheSessionBean__	};set,whether,to,cache,the,actual,session,bean,object,p,off,by,default,for,standard,ejb,compliance,turn,this,flag,on,to,optimize,session,bean,access,for,servers,that,are,known,to,allow,for,caching,the,actual,session,bean,object,see,set,cache,home;public,void,set,cache,session,bean,boolean,cache,session,bean,this,cache,session,bean,cache,session,bean
SimpleRemoteSlsbInvokerInterceptor -> public void setCacheSessionBean(boolean cacheSessionBean);1362408075;Set whether to cache the actual session bean object._<p>Off by default for standard EJB compliance. Turn this flag_on to optimize session bean access for servers that are_known to allow for caching the actual session bean object._@see #setCacheHome;public void setCacheSessionBean(boolean cacheSessionBean) {_		this.cacheSessionBean = cacheSessionBean__	};set,whether,to,cache,the,actual,session,bean,object,p,off,by,default,for,standard,ejb,compliance,turn,this,flag,on,to,optimize,session,bean,access,for,servers,that,are,known,to,allow,for,caching,the,actual,session,bean,object,see,set,cache,home;public,void,set,cache,session,bean,boolean,cache,session,bean,this,cache,session,bean,cache,session,bean
SimpleRemoteSlsbInvokerInterceptor -> public void setCacheSessionBean(boolean cacheSessionBean);1368482696;Set whether to cache the actual session bean object._<p>Off by default for standard EJB compliance. Turn this flag_on to optimize session bean access for servers that are_known to allow for caching the actual session bean object._@see #setCacheHome;public void setCacheSessionBean(boolean cacheSessionBean) {_		this.cacheSessionBean = cacheSessionBean__	};set,whether,to,cache,the,actual,session,bean,object,p,off,by,default,for,standard,ejb,compliance,turn,this,flag,on,to,optimize,session,bean,access,for,servers,that,are,known,to,allow,for,caching,the,actual,session,bean,object,see,set,cache,home;public,void,set,cache,session,bean,boolean,cache,session,bean,this,cache,session,bean,cache,session,bean
SimpleRemoteSlsbInvokerInterceptor -> public void setCacheSessionBean(boolean cacheSessionBean);1413848647;Set whether to cache the actual session bean object._<p>Off by default for standard EJB compliance. Turn this flag_on to optimize session bean access for servers that are_known to allow for caching the actual session bean object._@see #setCacheHome;public void setCacheSessionBean(boolean cacheSessionBean) {_		this.cacheSessionBean = cacheSessionBean__	};set,whether,to,cache,the,actual,session,bean,object,p,off,by,default,for,standard,ejb,compliance,turn,this,flag,on,to,optimize,session,bean,access,for,servers,that,are,known,to,allow,for,caching,the,actual,session,bean,object,see,set,cache,home;public,void,set,cache,session,bean,boolean,cache,session,bean,this,cache,session,bean,cache,session,bean
SimpleRemoteSlsbInvokerInterceptor -> public void setCacheSessionBean(boolean cacheSessionBean);1498780456;Set whether to cache the actual session bean object._<p>Off by default for standard EJB compliance. Turn this flag_on to optimize session bean access for servers that are_known to allow for caching the actual session bean object._@see #setCacheHome;public void setCacheSessionBean(boolean cacheSessionBean) {_		this.cacheSessionBean = cacheSessionBean__	};set,whether,to,cache,the,actual,session,bean,object,p,off,by,default,for,standard,ejb,compliance,turn,this,flag,on,to,optimize,session,bean,access,for,servers,that,are,known,to,allow,for,caching,the,actual,session,bean,object,see,set,cache,home;public,void,set,cache,session,bean,boolean,cache,session,bean,this,cache,session,bean,cache,session,bean
SimpleRemoteSlsbInvokerInterceptor -> public void setCacheSessionBean(boolean cacheSessionBean);1502974979;Set whether to cache the actual session bean object._<p>Off by default for standard EJB compliance. Turn this flag_on to optimize session bean access for servers that are_known to allow for caching the actual session bean object._@see #setCacheHome;public void setCacheSessionBean(boolean cacheSessionBean) {_		this.cacheSessionBean = cacheSessionBean__	};set,whether,to,cache,the,actual,session,bean,object,p,off,by,default,for,standard,ejb,compliance,turn,this,flag,on,to,optimize,session,bean,access,for,servers,that,are,known,to,allow,for,caching,the,actual,session,bean,object,see,set,cache,home;public,void,set,cache,session,bean,boolean,cache,session,bean,this,cache,session,bean,cache,session,bean
SimpleRemoteSlsbInvokerInterceptor -> protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException;1328020251;Return an EJB component instance to delegate the call to._<p>The default implementation delegates to {@link #newSessionBeanInstance}._@return the EJB component instance_@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #newSessionBeanInstance;protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException {_		if (this.cacheSessionBean) {_			synchronized (this.beanInstanceMonitor) {_				if (this.beanInstance == null) {_					this.beanInstance = newSessionBeanInstance()__				}_				return this.beanInstance__			}_		}_		else {_			return newSessionBeanInstance()__		}_	};return,an,ejb,component,instance,to,delegate,the,call,to,p,the,default,implementation,delegates,to,link,new,session,bean,instance,return,the,ejb,component,instance,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,new,session,bean,instance;protected,object,get,session,bean,instance,throws,naming,exception,invocation,target,exception,if,this,cache,session,bean,synchronized,this,bean,instance,monitor,if,this,bean,instance,null,this,bean,instance,new,session,bean,instance,return,this,bean,instance,else,return,new,session,bean,instance
SimpleRemoteSlsbInvokerInterceptor -> protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException;1356735495;Return an EJB component instance to delegate the call to._<p>The default implementation delegates to {@link #newSessionBeanInstance}._@return the EJB component instance_@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #newSessionBeanInstance;protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException {_		if (this.cacheSessionBean) {_			synchronized (this.beanInstanceMonitor) {_				if (this.beanInstance == null) {_					this.beanInstance = newSessionBeanInstance()__				}_				return this.beanInstance__			}_		}_		else {_			return newSessionBeanInstance()__		}_	};return,an,ejb,component,instance,to,delegate,the,call,to,p,the,default,implementation,delegates,to,link,new,session,bean,instance,return,the,ejb,component,instance,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,new,session,bean,instance;protected,object,get,session,bean,instance,throws,naming,exception,invocation,target,exception,if,this,cache,session,bean,synchronized,this,bean,instance,monitor,if,this,bean,instance,null,this,bean,instance,new,session,bean,instance,return,this,bean,instance,else,return,new,session,bean,instance
SimpleRemoteSlsbInvokerInterceptor -> protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException;1357119239;Return an EJB component instance to delegate the call to._<p>The default implementation delegates to {@link #newSessionBeanInstance}._@return the EJB component instance_@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #newSessionBeanInstance;protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException {_		if (this.cacheSessionBean) {_			synchronized (this.beanInstanceMonitor) {_				if (this.beanInstance == null) {_					this.beanInstance = newSessionBeanInstance()__				}_				return this.beanInstance__			}_		}_		else {_			return newSessionBeanInstance()__		}_	};return,an,ejb,component,instance,to,delegate,the,call,to,p,the,default,implementation,delegates,to,link,new,session,bean,instance,return,the,ejb,component,instance,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,new,session,bean,instance;protected,object,get,session,bean,instance,throws,naming,exception,invocation,target,exception,if,this,cache,session,bean,synchronized,this,bean,instance,monitor,if,this,bean,instance,null,this,bean,instance,new,session,bean,instance,return,this,bean,instance,else,return,new,session,bean,instance
SimpleRemoteSlsbInvokerInterceptor -> protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException;1362408075;Return an EJB component instance to delegate the call to._<p>The default implementation delegates to {@link #newSessionBeanInstance}._@return the EJB component instance_@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #newSessionBeanInstance;protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException {_		if (this.cacheSessionBean) {_			synchronized (this.beanInstanceMonitor) {_				if (this.beanInstance == null) {_					this.beanInstance = newSessionBeanInstance()__				}_				return this.beanInstance__			}_		}_		else {_			return newSessionBeanInstance()__		}_	};return,an,ejb,component,instance,to,delegate,the,call,to,p,the,default,implementation,delegates,to,link,new,session,bean,instance,return,the,ejb,component,instance,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,new,session,bean,instance;protected,object,get,session,bean,instance,throws,naming,exception,invocation,target,exception,if,this,cache,session,bean,synchronized,this,bean,instance,monitor,if,this,bean,instance,null,this,bean,instance,new,session,bean,instance,return,this,bean,instance,else,return,new,session,bean,instance
SimpleRemoteSlsbInvokerInterceptor -> protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException;1368482696;Return an EJB component instance to delegate the call to._<p>The default implementation delegates to {@link #newSessionBeanInstance}._@return the EJB component instance_@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #newSessionBeanInstance;protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException {_		if (this.cacheSessionBean) {_			synchronized (this.beanInstanceMonitor) {_				if (this.beanInstance == null) {_					this.beanInstance = newSessionBeanInstance()__				}_				return this.beanInstance__			}_		}_		else {_			return newSessionBeanInstance()__		}_	};return,an,ejb,component,instance,to,delegate,the,call,to,p,the,default,implementation,delegates,to,link,new,session,bean,instance,return,the,ejb,component,instance,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,new,session,bean,instance;protected,object,get,session,bean,instance,throws,naming,exception,invocation,target,exception,if,this,cache,session,bean,synchronized,this,bean,instance,monitor,if,this,bean,instance,null,this,bean,instance,new,session,bean,instance,return,this,bean,instance,else,return,new,session,bean,instance
SimpleRemoteSlsbInvokerInterceptor -> protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException;1413848647;Return an EJB component instance to delegate the call to._<p>The default implementation delegates to {@link #newSessionBeanInstance}._@return the EJB component instance_@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #newSessionBeanInstance;protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException {_		if (this.cacheSessionBean) {_			synchronized (this.beanInstanceMonitor) {_				if (this.beanInstance == null) {_					this.beanInstance = newSessionBeanInstance()__				}_				return this.beanInstance__			}_		}_		else {_			return newSessionBeanInstance()__		}_	};return,an,ejb,component,instance,to,delegate,the,call,to,p,the,default,implementation,delegates,to,link,new,session,bean,instance,return,the,ejb,component,instance,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,new,session,bean,instance;protected,object,get,session,bean,instance,throws,naming,exception,invocation,target,exception,if,this,cache,session,bean,synchronized,this,bean,instance,monitor,if,this,bean,instance,null,this,bean,instance,new,session,bean,instance,return,this,bean,instance,else,return,new,session,bean,instance
SimpleRemoteSlsbInvokerInterceptor -> protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException;1498780456;Return an EJB component instance to delegate the call to._<p>The default implementation delegates to {@link #newSessionBeanInstance}._@return the EJB component instance_@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #newSessionBeanInstance;protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException {_		if (this.cacheSessionBean) {_			synchronized (this.beanInstanceMonitor) {_				if (this.beanInstance == null) {_					this.beanInstance = newSessionBeanInstance()__				}_				return this.beanInstance__			}_		}_		else {_			return newSessionBeanInstance()__		}_	};return,an,ejb,component,instance,to,delegate,the,call,to,p,the,default,implementation,delegates,to,link,new,session,bean,instance,return,the,ejb,component,instance,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,new,session,bean,instance;protected,object,get,session,bean,instance,throws,naming,exception,invocation,target,exception,if,this,cache,session,bean,synchronized,this,bean,instance,monitor,if,this,bean,instance,null,this,bean,instance,new,session,bean,instance,return,this,bean,instance,else,return,new,session,bean,instance
SimpleRemoteSlsbInvokerInterceptor -> protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException;1502974979;Return an EJB component instance to delegate the call to._<p>The default implementation delegates to {@link #newSessionBeanInstance}._@return the EJB component instance_@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #newSessionBeanInstance;protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException {_		if (this.cacheSessionBean) {_			synchronized (this.beanInstanceMonitor) {_				if (this.beanInstance == null) {_					this.beanInstance = newSessionBeanInstance()__				}_				return this.beanInstance__			}_		}_		else {_			return newSessionBeanInstance()__		}_	};return,an,ejb,component,instance,to,delegate,the,call,to,p,the,default,implementation,delegates,to,link,new,session,bean,instance,return,the,ejb,component,instance,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,new,session,bean,instance;protected,object,get,session,bean,instance,throws,naming,exception,invocation,target,exception,if,this,cache,session,bean,synchronized,this,bean,instance,monitor,if,this,bean,instance,null,this,bean,instance,new,session,bean,instance,return,this,bean,instance,else,return,new,session,bean,instance
SimpleRemoteSlsbInvokerInterceptor -> @Override 	protected Object doInvoke(MethodInvocation invocation) throws Throwable;1328020251;This implementation "creates" a new EJB instance for each invocation._Can be overridden for custom invocation strategies._<p>Alternatively, override {@link #getSessionBeanInstance} and_{@link #releaseSessionBeanInstance} to change EJB instance creation,_for example to hold a single shared EJB component instance.;@Override_	protected Object doInvoke(MethodInvocation invocation) throws Throwable {_		Object ejb = null__		try {_			ejb = getSessionBeanInstance()__			return RmiClientInterceptorUtils.invokeRemoteMethod(invocation, ejb)__		}_		catch (NamingException ex) {_			throw new RemoteLookupFailureException("Failed to locate remote EJB [" + getJndiName() + "]", ex)__		}_		catch (InvocationTargetException ex) {_			Throwable targetEx = ex.getTargetException()__			if (targetEx instanceof RemoteException) {_				RemoteException rex = (RemoteException) targetEx__				throw RmiClientInterceptorUtils.convertRmiAccessException(_				    invocation.getMethod(), rex, isConnectFailure(rex), getJndiName())__			}_			else if (targetEx instanceof CreateException) {_				throw RmiClientInterceptorUtils.convertRmiAccessException(_				    invocation.getMethod(), targetEx, "Could not create remote EJB [" + getJndiName() + "]")__			}_			throw targetEx__		}_		finally {_			if (ejb instanceof EJBObject) {_				releaseSessionBeanInstance((EJBObject) ejb)__			}_		}_	};this,implementation,creates,a,new,ejb,instance,for,each,invocation,can,be,overridden,for,custom,invocation,strategies,p,alternatively,override,link,get,session,bean,instance,and,link,release,session,bean,instance,to,change,ejb,instance,creation,for,example,to,hold,a,single,shared,ejb,component,instance;override,protected,object,do,invoke,method,invocation,invocation,throws,throwable,object,ejb,null,try,ejb,get,session,bean,instance,return,rmi,client,interceptor,utils,invoke,remote,method,invocation,ejb,catch,naming,exception,ex,throw,new,remote,lookup,failure,exception,failed,to,locate,remote,ejb,get,jndi,name,ex,catch,invocation,target,exception,ex,throwable,target,ex,ex,get,target,exception,if,target,ex,instanceof,remote,exception,remote,exception,rex,remote,exception,target,ex,throw,rmi,client,interceptor,utils,convert,rmi,access,exception,invocation,get,method,rex,is,connect,failure,rex,get,jndi,name,else,if,target,ex,instanceof,create,exception,throw,rmi,client,interceptor,utils,convert,rmi,access,exception,invocation,get,method,target,ex,could,not,create,remote,ejb,get,jndi,name,throw,target,ex,finally,if,ejb,instanceof,ejbobject,release,session,bean,instance,ejbobject,ejb
SimpleRemoteSlsbInvokerInterceptor -> @Override 	protected Object doInvoke(MethodInvocation invocation) throws Throwable;1356735495;This implementation "creates" a new EJB instance for each invocation._Can be overridden for custom invocation strategies._<p>Alternatively, override {@link #getSessionBeanInstance} and_{@link #releaseSessionBeanInstance} to change EJB instance creation,_for example to hold a single shared EJB component instance.;@Override_	protected Object doInvoke(MethodInvocation invocation) throws Throwable {_		Object ejb = null__		try {_			ejb = getSessionBeanInstance()__			return RmiClientInterceptorUtils.invokeRemoteMethod(invocation, ejb)__		}_		catch (NamingException ex) {_			throw new RemoteLookupFailureException("Failed to locate remote EJB [" + getJndiName() + "]", ex)__		}_		catch (InvocationTargetException ex) {_			Throwable targetEx = ex.getTargetException()__			if (targetEx instanceof RemoteException) {_				RemoteException rex = (RemoteException) targetEx__				throw RmiClientInterceptorUtils.convertRmiAccessException(_					invocation.getMethod(), rex, isConnectFailure(rex), getJndiName())__			}_			else if (targetEx instanceof CreateException) {_				throw RmiClientInterceptorUtils.convertRmiAccessException(_				    invocation.getMethod(), targetEx, "Could not create remote EJB [" + getJndiName() + "]")__			}_			throw targetEx__		}_		finally {_			if (ejb instanceof EJBObject) {_				releaseSessionBeanInstance((EJBObject) ejb)__			}_		}_	};this,implementation,creates,a,new,ejb,instance,for,each,invocation,can,be,overridden,for,custom,invocation,strategies,p,alternatively,override,link,get,session,bean,instance,and,link,release,session,bean,instance,to,change,ejb,instance,creation,for,example,to,hold,a,single,shared,ejb,component,instance;override,protected,object,do,invoke,method,invocation,invocation,throws,throwable,object,ejb,null,try,ejb,get,session,bean,instance,return,rmi,client,interceptor,utils,invoke,remote,method,invocation,ejb,catch,naming,exception,ex,throw,new,remote,lookup,failure,exception,failed,to,locate,remote,ejb,get,jndi,name,ex,catch,invocation,target,exception,ex,throwable,target,ex,ex,get,target,exception,if,target,ex,instanceof,remote,exception,remote,exception,rex,remote,exception,target,ex,throw,rmi,client,interceptor,utils,convert,rmi,access,exception,invocation,get,method,rex,is,connect,failure,rex,get,jndi,name,else,if,target,ex,instanceof,create,exception,throw,rmi,client,interceptor,utils,convert,rmi,access,exception,invocation,get,method,target,ex,could,not,create,remote,ejb,get,jndi,name,throw,target,ex,finally,if,ejb,instanceof,ejbobject,release,session,bean,instance,ejbobject,ejb
SimpleRemoteSlsbInvokerInterceptor -> @Override 	protected Object doInvoke(MethodInvocation invocation) throws Throwable;1357119239;This implementation "creates" a new EJB instance for each invocation._Can be overridden for custom invocation strategies._<p>Alternatively, override {@link #getSessionBeanInstance} and_{@link #releaseSessionBeanInstance} to change EJB instance creation,_for example to hold a single shared EJB component instance.;@Override_	protected Object doInvoke(MethodInvocation invocation) throws Throwable {_		Object ejb = null__		try {_			ejb = getSessionBeanInstance()__			return RmiClientInterceptorUtils.invokeRemoteMethod(invocation, ejb)__		}_		catch (NamingException ex) {_			throw new RemoteLookupFailureException("Failed to locate remote EJB [" + getJndiName() + "]", ex)__		}_		catch (InvocationTargetException ex) {_			Throwable targetEx = ex.getTargetException()__			if (targetEx instanceof RemoteException) {_				RemoteException rex = (RemoteException) targetEx__				throw RmiClientInterceptorUtils.convertRmiAccessException(_					invocation.getMethod(), rex, isConnectFailure(rex), getJndiName())__			}_			else if (targetEx instanceof CreateException) {_				throw RmiClientInterceptorUtils.convertRmiAccessException(_				    invocation.getMethod(), targetEx, "Could not create remote EJB [" + getJndiName() + "]")__			}_			throw targetEx__		}_		finally {_			if (ejb instanceof EJBObject) {_				releaseSessionBeanInstance((EJBObject) ejb)__			}_		}_	};this,implementation,creates,a,new,ejb,instance,for,each,invocation,can,be,overridden,for,custom,invocation,strategies,p,alternatively,override,link,get,session,bean,instance,and,link,release,session,bean,instance,to,change,ejb,instance,creation,for,example,to,hold,a,single,shared,ejb,component,instance;override,protected,object,do,invoke,method,invocation,invocation,throws,throwable,object,ejb,null,try,ejb,get,session,bean,instance,return,rmi,client,interceptor,utils,invoke,remote,method,invocation,ejb,catch,naming,exception,ex,throw,new,remote,lookup,failure,exception,failed,to,locate,remote,ejb,get,jndi,name,ex,catch,invocation,target,exception,ex,throwable,target,ex,ex,get,target,exception,if,target,ex,instanceof,remote,exception,remote,exception,rex,remote,exception,target,ex,throw,rmi,client,interceptor,utils,convert,rmi,access,exception,invocation,get,method,rex,is,connect,failure,rex,get,jndi,name,else,if,target,ex,instanceof,create,exception,throw,rmi,client,interceptor,utils,convert,rmi,access,exception,invocation,get,method,target,ex,could,not,create,remote,ejb,get,jndi,name,throw,target,ex,finally,if,ejb,instanceof,ejbobject,release,session,bean,instance,ejbobject,ejb
SimpleRemoteSlsbInvokerInterceptor -> @Override 	protected Object doInvoke(MethodInvocation invocation) throws Throwable;1362408075;This implementation "creates" a new EJB instance for each invocation._Can be overridden for custom invocation strategies._<p>Alternatively, override {@link #getSessionBeanInstance} and_{@link #releaseSessionBeanInstance} to change EJB instance creation,_for example to hold a single shared EJB component instance.;@Override_	protected Object doInvoke(MethodInvocation invocation) throws Throwable {_		Object ejb = null__		try {_			ejb = getSessionBeanInstance()__			return RmiClientInterceptorUtils.invokeRemoteMethod(invocation, ejb)__		}_		catch (NamingException ex) {_			throw new RemoteLookupFailureException("Failed to locate remote EJB [" + getJndiName() + "]", ex)__		}_		catch (InvocationTargetException ex) {_			Throwable targetEx = ex.getTargetException()__			if (targetEx instanceof RemoteException) {_				RemoteException rex = (RemoteException) targetEx__				throw RmiClientInterceptorUtils.convertRmiAccessException(_					invocation.getMethod(), rex, isConnectFailure(rex), getJndiName())__			}_			else if (targetEx instanceof CreateException) {_				throw RmiClientInterceptorUtils.convertRmiAccessException(_					invocation.getMethod(), targetEx, "Could not create remote EJB [" + getJndiName() + "]")__			}_			throw targetEx__		}_		finally {_			if (ejb instanceof EJBObject) {_				releaseSessionBeanInstance((EJBObject) ejb)__			}_		}_	};this,implementation,creates,a,new,ejb,instance,for,each,invocation,can,be,overridden,for,custom,invocation,strategies,p,alternatively,override,link,get,session,bean,instance,and,link,release,session,bean,instance,to,change,ejb,instance,creation,for,example,to,hold,a,single,shared,ejb,component,instance;override,protected,object,do,invoke,method,invocation,invocation,throws,throwable,object,ejb,null,try,ejb,get,session,bean,instance,return,rmi,client,interceptor,utils,invoke,remote,method,invocation,ejb,catch,naming,exception,ex,throw,new,remote,lookup,failure,exception,failed,to,locate,remote,ejb,get,jndi,name,ex,catch,invocation,target,exception,ex,throwable,target,ex,ex,get,target,exception,if,target,ex,instanceof,remote,exception,remote,exception,rex,remote,exception,target,ex,throw,rmi,client,interceptor,utils,convert,rmi,access,exception,invocation,get,method,rex,is,connect,failure,rex,get,jndi,name,else,if,target,ex,instanceof,create,exception,throw,rmi,client,interceptor,utils,convert,rmi,access,exception,invocation,get,method,target,ex,could,not,create,remote,ejb,get,jndi,name,throw,target,ex,finally,if,ejb,instanceof,ejbobject,release,session,bean,instance,ejbobject,ejb
SimpleRemoteSlsbInvokerInterceptor -> @Override 	protected Object doInvoke(MethodInvocation invocation) throws Throwable;1368482696;This implementation "creates" a new EJB instance for each invocation._Can be overridden for custom invocation strategies._<p>Alternatively, override {@link #getSessionBeanInstance} and_{@link #releaseSessionBeanInstance} to change EJB instance creation,_for example to hold a single shared EJB component instance.;@Override_	protected Object doInvoke(MethodInvocation invocation) throws Throwable {_		Object ejb = null__		try {_			ejb = getSessionBeanInstance()__			return RmiClientInterceptorUtils.invokeRemoteMethod(invocation, ejb)__		}_		catch (NamingException ex) {_			throw new RemoteLookupFailureException("Failed to locate remote EJB [" + getJndiName() + "]", ex)__		}_		catch (InvocationTargetException ex) {_			Throwable targetEx = ex.getTargetException()__			if (targetEx instanceof RemoteException) {_				RemoteException rex = (RemoteException) targetEx__				throw RmiClientInterceptorUtils.convertRmiAccessException(_					invocation.getMethod(), rex, isConnectFailure(rex), getJndiName())__			}_			else if (targetEx instanceof CreateException) {_				throw RmiClientInterceptorUtils.convertRmiAccessException(_					invocation.getMethod(), targetEx, "Could not create remote EJB [" + getJndiName() + "]")__			}_			throw targetEx__		}_		finally {_			if (ejb instanceof EJBObject) {_				releaseSessionBeanInstance((EJBObject) ejb)__			}_		}_	};this,implementation,creates,a,new,ejb,instance,for,each,invocation,can,be,overridden,for,custom,invocation,strategies,p,alternatively,override,link,get,session,bean,instance,and,link,release,session,bean,instance,to,change,ejb,instance,creation,for,example,to,hold,a,single,shared,ejb,component,instance;override,protected,object,do,invoke,method,invocation,invocation,throws,throwable,object,ejb,null,try,ejb,get,session,bean,instance,return,rmi,client,interceptor,utils,invoke,remote,method,invocation,ejb,catch,naming,exception,ex,throw,new,remote,lookup,failure,exception,failed,to,locate,remote,ejb,get,jndi,name,ex,catch,invocation,target,exception,ex,throwable,target,ex,ex,get,target,exception,if,target,ex,instanceof,remote,exception,remote,exception,rex,remote,exception,target,ex,throw,rmi,client,interceptor,utils,convert,rmi,access,exception,invocation,get,method,rex,is,connect,failure,rex,get,jndi,name,else,if,target,ex,instanceof,create,exception,throw,rmi,client,interceptor,utils,convert,rmi,access,exception,invocation,get,method,target,ex,could,not,create,remote,ejb,get,jndi,name,throw,target,ex,finally,if,ejb,instanceof,ejbobject,release,session,bean,instance,ejbobject,ejb
SimpleRemoteSlsbInvokerInterceptor -> @Override 	protected Object doInvoke(MethodInvocation invocation) throws Throwable;1413848647;This implementation "creates" a new EJB instance for each invocation._Can be overridden for custom invocation strategies._<p>Alternatively, override {@link #getSessionBeanInstance} and_{@link #releaseSessionBeanInstance} to change EJB instance creation,_for example to hold a single shared EJB component instance.;@Override_	protected Object doInvoke(MethodInvocation invocation) throws Throwable {_		Object ejb = null__		try {_			ejb = getSessionBeanInstance()__			return RmiClientInterceptorUtils.invokeRemoteMethod(invocation, ejb)__		}_		catch (NamingException ex) {_			throw new RemoteLookupFailureException("Failed to locate remote EJB [" + getJndiName() + "]", ex)__		}_		catch (InvocationTargetException ex) {_			Throwable targetEx = ex.getTargetException()__			if (targetEx instanceof RemoteException) {_				RemoteException rex = (RemoteException) targetEx__				throw RmiClientInterceptorUtils.convertRmiAccessException(_					invocation.getMethod(), rex, isConnectFailure(rex), getJndiName())__			}_			else if (targetEx instanceof CreateException) {_				throw RmiClientInterceptorUtils.convertRmiAccessException(_					invocation.getMethod(), targetEx, "Could not create remote EJB [" + getJndiName() + "]")__			}_			throw targetEx__		}_		finally {_			if (ejb instanceof EJBObject) {_				releaseSessionBeanInstance((EJBObject) ejb)__			}_		}_	};this,implementation,creates,a,new,ejb,instance,for,each,invocation,can,be,overridden,for,custom,invocation,strategies,p,alternatively,override,link,get,session,bean,instance,and,link,release,session,bean,instance,to,change,ejb,instance,creation,for,example,to,hold,a,single,shared,ejb,component,instance;override,protected,object,do,invoke,method,invocation,invocation,throws,throwable,object,ejb,null,try,ejb,get,session,bean,instance,return,rmi,client,interceptor,utils,invoke,remote,method,invocation,ejb,catch,naming,exception,ex,throw,new,remote,lookup,failure,exception,failed,to,locate,remote,ejb,get,jndi,name,ex,catch,invocation,target,exception,ex,throwable,target,ex,ex,get,target,exception,if,target,ex,instanceof,remote,exception,remote,exception,rex,remote,exception,target,ex,throw,rmi,client,interceptor,utils,convert,rmi,access,exception,invocation,get,method,rex,is,connect,failure,rex,get,jndi,name,else,if,target,ex,instanceof,create,exception,throw,rmi,client,interceptor,utils,convert,rmi,access,exception,invocation,get,method,target,ex,could,not,create,remote,ejb,get,jndi,name,throw,target,ex,finally,if,ejb,instanceof,ejbobject,release,session,bean,instance,ejbobject,ejb
SimpleRemoteSlsbInvokerInterceptor -> @Override 	protected Object doInvoke(MethodInvocation invocation) throws Throwable;1498780456;This implementation "creates" a new EJB instance for each invocation._Can be overridden for custom invocation strategies._<p>Alternatively, override {@link #getSessionBeanInstance} and_{@link #releaseSessionBeanInstance} to change EJB instance creation,_for example to hold a single shared EJB component instance.;@Override_	protected Object doInvoke(MethodInvocation invocation) throws Throwable {_		Object ejb = null__		try {_			ejb = getSessionBeanInstance()__			return RmiClientInterceptorUtils.invokeRemoteMethod(invocation, ejb)__		}_		catch (NamingException ex) {_			throw new RemoteLookupFailureException("Failed to locate remote EJB [" + getJndiName() + "]", ex)__		}_		catch (InvocationTargetException ex) {_			Throwable targetEx = ex.getTargetException()__			if (targetEx instanceof RemoteException) {_				RemoteException rex = (RemoteException) targetEx__				throw RmiClientInterceptorUtils.convertRmiAccessException(_					invocation.getMethod(), rex, isConnectFailure(rex), getJndiName())__			}_			else if (targetEx instanceof CreateException) {_				throw RmiClientInterceptorUtils.convertRmiAccessException(_					invocation.getMethod(), targetEx, "Could not create remote EJB [" + getJndiName() + "]")__			}_			throw targetEx__		}_		finally {_			if (ejb instanceof EJBObject) {_				releaseSessionBeanInstance((EJBObject) ejb)__			}_		}_	};this,implementation,creates,a,new,ejb,instance,for,each,invocation,can,be,overridden,for,custom,invocation,strategies,p,alternatively,override,link,get,session,bean,instance,and,link,release,session,bean,instance,to,change,ejb,instance,creation,for,example,to,hold,a,single,shared,ejb,component,instance;override,protected,object,do,invoke,method,invocation,invocation,throws,throwable,object,ejb,null,try,ejb,get,session,bean,instance,return,rmi,client,interceptor,utils,invoke,remote,method,invocation,ejb,catch,naming,exception,ex,throw,new,remote,lookup,failure,exception,failed,to,locate,remote,ejb,get,jndi,name,ex,catch,invocation,target,exception,ex,throwable,target,ex,ex,get,target,exception,if,target,ex,instanceof,remote,exception,remote,exception,rex,remote,exception,target,ex,throw,rmi,client,interceptor,utils,convert,rmi,access,exception,invocation,get,method,rex,is,connect,failure,rex,get,jndi,name,else,if,target,ex,instanceof,create,exception,throw,rmi,client,interceptor,utils,convert,rmi,access,exception,invocation,get,method,target,ex,could,not,create,remote,ejb,get,jndi,name,throw,target,ex,finally,if,ejb,instanceof,ejbobject,release,session,bean,instance,ejbobject,ejb
SimpleRemoteSlsbInvokerInterceptor -> @Override 	protected void refreshHome() throws NamingException;1328020251;Reset the cached session bean instance, if necessary.;@Override_	protected void refreshHome() throws NamingException {_		super.refreshHome()__		if (this.cacheSessionBean) {_			synchronized (this.beanInstanceMonitor) {_				this.beanInstance = null__			}_		}_	};reset,the,cached,session,bean,instance,if,necessary;override,protected,void,refresh,home,throws,naming,exception,super,refresh,home,if,this,cache,session,bean,synchronized,this,bean,instance,monitor,this,bean,instance,null
SimpleRemoteSlsbInvokerInterceptor -> @Override 	protected void refreshHome() throws NamingException;1356735495;Reset the cached session bean instance, if necessary.;@Override_	protected void refreshHome() throws NamingException {_		super.refreshHome()__		if (this.cacheSessionBean) {_			synchronized (this.beanInstanceMonitor) {_				this.beanInstance = null__			}_		}_	};reset,the,cached,session,bean,instance,if,necessary;override,protected,void,refresh,home,throws,naming,exception,super,refresh,home,if,this,cache,session,bean,synchronized,this,bean,instance,monitor,this,bean,instance,null
SimpleRemoteSlsbInvokerInterceptor -> @Override 	protected void refreshHome() throws NamingException;1357119239;Reset the cached session bean instance, if necessary.;@Override_	protected void refreshHome() throws NamingException {_		super.refreshHome()__		if (this.cacheSessionBean) {_			synchronized (this.beanInstanceMonitor) {_				this.beanInstance = null__			}_		}_	};reset,the,cached,session,bean,instance,if,necessary;override,protected,void,refresh,home,throws,naming,exception,super,refresh,home,if,this,cache,session,bean,synchronized,this,bean,instance,monitor,this,bean,instance,null
SimpleRemoteSlsbInvokerInterceptor -> @Override 	protected void refreshHome() throws NamingException;1362408075;Reset the cached session bean instance, if necessary.;@Override_	protected void refreshHome() throws NamingException {_		super.refreshHome()__		if (this.cacheSessionBean) {_			synchronized (this.beanInstanceMonitor) {_				this.beanInstance = null__			}_		}_	};reset,the,cached,session,bean,instance,if,necessary;override,protected,void,refresh,home,throws,naming,exception,super,refresh,home,if,this,cache,session,bean,synchronized,this,bean,instance,monitor,this,bean,instance,null
SimpleRemoteSlsbInvokerInterceptor -> @Override 	protected void refreshHome() throws NamingException;1368482696;Reset the cached session bean instance, if necessary.;@Override_	protected void refreshHome() throws NamingException {_		super.refreshHome()__		if (this.cacheSessionBean) {_			synchronized (this.beanInstanceMonitor) {_				this.beanInstance = null__			}_		}_	};reset,the,cached,session,bean,instance,if,necessary;override,protected,void,refresh,home,throws,naming,exception,super,refresh,home,if,this,cache,session,bean,synchronized,this,bean,instance,monitor,this,bean,instance,null
SimpleRemoteSlsbInvokerInterceptor -> @Override 	protected void refreshHome() throws NamingException;1413848647;Reset the cached session bean instance, if necessary.;@Override_	protected void refreshHome() throws NamingException {_		super.refreshHome()__		if (this.cacheSessionBean) {_			synchronized (this.beanInstanceMonitor) {_				this.beanInstance = null__			}_		}_	};reset,the,cached,session,bean,instance,if,necessary;override,protected,void,refresh,home,throws,naming,exception,super,refresh,home,if,this,cache,session,bean,synchronized,this,bean,instance,monitor,this,bean,instance,null
SimpleRemoteSlsbInvokerInterceptor -> @Override 	protected void refreshHome() throws NamingException;1498780456;Reset the cached session bean instance, if necessary.;@Override_	protected void refreshHome() throws NamingException {_		super.refreshHome()__		if (this.cacheSessionBean) {_			synchronized (this.beanInstanceMonitor) {_				this.beanInstance = null__			}_		}_	};reset,the,cached,session,bean,instance,if,necessary;override,protected,void,refresh,home,throws,naming,exception,super,refresh,home,if,this,cache,session,bean,synchronized,this,bean,instance,monitor,this,bean,instance,null
SimpleRemoteSlsbInvokerInterceptor -> @Override 	protected void refreshHome() throws NamingException;1502974979;Reset the cached session bean instance, if necessary.;@Override_	protected void refreshHome() throws NamingException {_		super.refreshHome()__		if (this.cacheSessionBean) {_			synchronized (this.beanInstanceMonitor) {_				this.beanInstance = null__			}_		}_	};reset,the,cached,session,bean,instance,if,necessary;override,protected,void,refresh,home,throws,naming,exception,super,refresh,home,if,this,cache,session,bean,synchronized,this,bean,instance,monitor,this,bean,instance,null
SimpleRemoteSlsbInvokerInterceptor -> public void destroy();1328020251;Remove the cached session bean instance, if necessary.;public void destroy() {_		if (this.cacheSessionBean) {_			synchronized (this.beanInstanceMonitor) {_				if (this.beanInstance instanceof EJBObject) {_					removeSessionBeanInstance((EJBObject) this.beanInstance)__				}_			}_		}_	};remove,the,cached,session,bean,instance,if,necessary;public,void,destroy,if,this,cache,session,bean,synchronized,this,bean,instance,monitor,if,this,bean,instance,instanceof,ejbobject,remove,session,bean,instance,ejbobject,this,bean,instance
SimpleRemoteSlsbInvokerInterceptor -> public void destroy();1357119239;Remove the cached session bean instance, if necessary.;public void destroy() {_		if (this.cacheSessionBean) {_			synchronized (this.beanInstanceMonitor) {_				if (this.beanInstance instanceof EJBObject) {_					removeSessionBeanInstance((EJBObject) this.beanInstance)__				}_			}_		}_	};remove,the,cached,session,bean,instance,if,necessary;public,void,destroy,if,this,cache,session,bean,synchronized,this,bean,instance,monitor,if,this,bean,instance,instanceof,ejbobject,remove,session,bean,instance,ejbobject,this,bean,instance
SimpleRemoteSlsbInvokerInterceptor -> public void destroy();1362408075;Remove the cached session bean instance, if necessary.;public void destroy() {_		if (this.cacheSessionBean) {_			synchronized (this.beanInstanceMonitor) {_				if (this.beanInstance instanceof EJBObject) {_					removeSessionBeanInstance((EJBObject) this.beanInstance)__				}_			}_		}_	};remove,the,cached,session,bean,instance,if,necessary;public,void,destroy,if,this,cache,session,bean,synchronized,this,bean,instance,monitor,if,this,bean,instance,instanceof,ejbobject,remove,session,bean,instance,ejbobject,this,bean,instance
