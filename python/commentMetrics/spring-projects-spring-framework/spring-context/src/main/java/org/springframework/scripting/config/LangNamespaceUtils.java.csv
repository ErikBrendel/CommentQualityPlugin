commented;modifiers;parameterAmount;loc;comment;code
true;public,static;1;11;/**  * Register a {@link ScriptFactoryPostProcessor} bean definition in the supplied  * {@link BeanDefinitionRegistry} if the {@link ScriptFactoryPostProcessor} hasn't  * already been registered.  * @param registry the {@link BeanDefinitionRegistry} to register the script processor with  * @return the {@link ScriptFactoryPostProcessor} bean definition (new or already registered)  */ ;/**  * Register a {@link ScriptFactoryPostProcessor} bean definition in the supplied  * {@link BeanDefinitionRegistry} if the {@link ScriptFactoryPostProcessor} hasn't  * already been registered.  * @param registry the {@link BeanDefinitionRegistry} to register the script processor with  * @return the {@link ScriptFactoryPostProcessor} bean definition (new or already registered)  */ public static BeanDefinition registerScriptFactoryPostProcessorIfNecessary(BeanDefinitionRegistry registry) {     BeanDefinition beanDefinition.     if (registry.containsBeanDefinition(SCRIPT_FACTORY_POST_PROCESSOR_BEAN_NAME)) {         beanDefinition = registry.getBeanDefinition(SCRIPT_FACTORY_POST_PROCESSOR_BEAN_NAME).     } else {         beanDefinition = new RootBeanDefinition(ScriptFactoryPostProcessor.class).         registry.registerBeanDefinition(SCRIPT_FACTORY_POST_PROCESSOR_BEAN_NAME, beanDefinition).     }     return beanDefinition. }
