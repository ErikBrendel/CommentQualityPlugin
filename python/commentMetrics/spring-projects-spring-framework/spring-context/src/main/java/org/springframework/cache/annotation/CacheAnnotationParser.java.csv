commented;modifiers;parameterAmount;loc;comment;code
true;;1;2;/**  * Parse the cache definition for the given class,  * based on an annotation type understood by this parser.  * <p>This essentially parses a known cache annotation into Spring's metadata  * attribute class. Returns {@code null} if the class is not cacheable.  * @param type the annotated class  * @return the configured caching operation, or {@code null} if none found  * @see AnnotationCacheOperationSource#findCacheOperations(Class)  */ ;/**  * Parse the cache definition for the given class,  * based on an annotation type understood by this parser.  * <p>This essentially parses a known cache annotation into Spring's metadata  * attribute class. Returns {@code null} if the class is not cacheable.  * @param type the annotated class  * @return the configured caching operation, or {@code null} if none found  * @see AnnotationCacheOperationSource#findCacheOperations(Class)  */ @Nullable Collection<CacheOperation> parseCacheAnnotations(Class<?> type).
true;;1;2;/**  * Parse the cache definition for the given method,  * based on an annotation type understood by this parser.  * <p>This essentially parses a known cache annotation into Spring's metadata  * attribute class. Returns {@code null} if the method is not cacheable.  * @param method the annotated method  * @return the configured caching operation, or {@code null} if none found  * @see AnnotationCacheOperationSource#findCacheOperations(Method)  */ ;/**  * Parse the cache definition for the given method,  * based on an annotation type understood by this parser.  * <p>This essentially parses a known cache annotation into Spring's metadata  * attribute class. Returns {@code null} if the method is not cacheable.  * @param method the annotated method  * @return the configured caching operation, or {@code null} if none found  * @see AnnotationCacheOperationSource#findCacheOperations(Method)  */ @Nullable Collection<CacheOperation> parseCacheAnnotations(Method method).
