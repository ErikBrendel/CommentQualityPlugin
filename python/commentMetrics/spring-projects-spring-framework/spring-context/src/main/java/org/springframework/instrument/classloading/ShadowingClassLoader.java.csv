# id;timestamp;commentText;codeText;commentWords;codeWords
ShadowingClassLoader -> public ShadowingClassLoader(ClassLoader enclosingClassLoader);1328020251;Create a new ShadowingClassLoader, decorating the given ClassLoader._@param enclosingClassLoader the ClassLoader to decorate;public ShadowingClassLoader(ClassLoader enclosingClassLoader) {_		Assert.notNull(enclosingClassLoader, "Enclosing ClassLoader must not be null")__		this.enclosingClassLoader = enclosingClassLoader__		for (String excludedPackage : DEFAULT_EXCLUDED_PACKAGES) {_			excludePackage(excludedPackage)__		}_	};create,a,new,shadowing,class,loader,decorating,the,given,class,loader,param,enclosing,class,loader,the,class,loader,to,decorate;public,shadowing,class,loader,class,loader,enclosing,class,loader,assert,not,null,enclosing,class,loader,enclosing,class,loader,must,not,be,null,this,enclosing,class,loader,enclosing,class,loader,for,string,excluded,package,exclude,package,excluded,package
ShadowingClassLoader -> public ShadowingClassLoader(ClassLoader enclosingClassLoader);1344552803;Create a new ShadowingClassLoader, decorating the given ClassLoader._@param enclosingClassLoader the ClassLoader to decorate;public ShadowingClassLoader(ClassLoader enclosingClassLoader) {_		Assert.notNull(enclosingClassLoader, "Enclosing ClassLoader must not be null")__		this.enclosingClassLoader = enclosingClassLoader__		for (String excludedPackage : DEFAULT_EXCLUDED_PACKAGES) {_			excludePackage(excludedPackage)__		}_	};create,a,new,shadowing,class,loader,decorating,the,given,class,loader,param,enclosing,class,loader,the,class,loader,to,decorate;public,shadowing,class,loader,class,loader,enclosing,class,loader,assert,not,null,enclosing,class,loader,enclosing,class,loader,must,not,be,null,this,enclosing,class,loader,enclosing,class,loader,for,string,excluded,package,exclude,package,excluded,package
ShadowingClassLoader -> public ShadowingClassLoader(ClassLoader enclosingClassLoader);1385412762;Create a new ShadowingClassLoader, decorating the given ClassLoader._@param enclosingClassLoader the ClassLoader to decorate;public ShadowingClassLoader(ClassLoader enclosingClassLoader) {_		Assert.notNull(enclosingClassLoader, "Enclosing ClassLoader must not be null")__		this.enclosingClassLoader = enclosingClassLoader__		for (String excludedPackage : DEFAULT_EXCLUDED_PACKAGES) {_			excludePackage(excludedPackage)__		}_	};create,a,new,shadowing,class,loader,decorating,the,given,class,loader,param,enclosing,class,loader,the,class,loader,to,decorate;public,shadowing,class,loader,class,loader,enclosing,class,loader,assert,not,null,enclosing,class,loader,enclosing,class,loader,must,not,be,null,this,enclosing,class,loader,enclosing,class,loader,for,string,excluded,package,exclude,package,excluded,package
ShadowingClassLoader -> public ShadowingClassLoader(ClassLoader enclosingClassLoader);1467730834;Create a new ShadowingClassLoader, decorating the given ClassLoader._@param enclosingClassLoader the ClassLoader to decorate;public ShadowingClassLoader(ClassLoader enclosingClassLoader) {_		Assert.notNull(enclosingClassLoader, "Enclosing ClassLoader must not be null")__		this.enclosingClassLoader = enclosingClassLoader__		for (String excludedPackage : DEFAULT_EXCLUDED_PACKAGES) {_			excludePackage(excludedPackage)__		}_	};create,a,new,shadowing,class,loader,decorating,the,given,class,loader,param,enclosing,class,loader,the,class,loader,to,decorate;public,shadowing,class,loader,class,loader,enclosing,class,loader,assert,not,null,enclosing,class,loader,enclosing,class,loader,must,not,be,null,this,enclosing,class,loader,enclosing,class,loader,for,string,excluded,package,exclude,package,excluded,package
ShadowingClassLoader -> public ShadowingClassLoader(ClassLoader enclosingClassLoader);1492004090;Create a new ShadowingClassLoader, decorating the given ClassLoader,_applying {@link #DEFAULT_EXCLUDED_PACKAGES}._@param enclosingClassLoader the ClassLoader to decorate_@see #ShadowingClassLoader(ClassLoader, boolean);public ShadowingClassLoader(ClassLoader enclosingClassLoader) {_		this(enclosingClassLoader, true)__	};create,a,new,shadowing,class,loader,decorating,the,given,class,loader,applying,link,param,enclosing,class,loader,the,class,loader,to,decorate,see,shadowing,class,loader,class,loader,boolean;public,shadowing,class,loader,class,loader,enclosing,class,loader,this,enclosing,class,loader,true
ShadowingClassLoader -> public ShadowingClassLoader(ClassLoader enclosingClassLoader);1496837955;Create a new ShadowingClassLoader, decorating the given ClassLoader,_applying {@link #DEFAULT_EXCLUDED_PACKAGES}._@param enclosingClassLoader the ClassLoader to decorate_@see #ShadowingClassLoader(ClassLoader, boolean);public ShadowingClassLoader(ClassLoader enclosingClassLoader) {_		this(enclosingClassLoader, true)__	};create,a,new,shadowing,class,loader,decorating,the,given,class,loader,applying,link,param,enclosing,class,loader,the,class,loader,to,decorate,see,shadowing,class,loader,class,loader,boolean;public,shadowing,class,loader,class,loader,enclosing,class,loader,this,enclosing,class,loader,true
ShadowingClassLoader -> public ShadowingClassLoader(ClassLoader enclosingClassLoader);1530174524;Create a new ShadowingClassLoader, decorating the given ClassLoader,_applying {@link #DEFAULT_EXCLUDED_PACKAGES}._@param enclosingClassLoader the ClassLoader to decorate_@see #ShadowingClassLoader(ClassLoader, boolean);public ShadowingClassLoader(ClassLoader enclosingClassLoader) {_		this(enclosingClassLoader, true)__	};create,a,new,shadowing,class,loader,decorating,the,given,class,loader,applying,link,param,enclosing,class,loader,the,class,loader,to,decorate,see,shadowing,class,loader,class,loader,boolean;public,shadowing,class,loader,class,loader,enclosing,class,loader,this,enclosing,class,loader,true
ShadowingClassLoader -> public ShadowingClassLoader(ClassLoader enclosingClassLoader);1551283028;Create a new ShadowingClassLoader, decorating the given ClassLoader,_applying {@link #DEFAULT_EXCLUDED_PACKAGES}._@param enclosingClassLoader the ClassLoader to decorate_@see #ShadowingClassLoader(ClassLoader, boolean);public ShadowingClassLoader(ClassLoader enclosingClassLoader) {_		this(enclosingClassLoader, true)__	};create,a,new,shadowing,class,loader,decorating,the,given,class,loader,applying,link,param,enclosing,class,loader,the,class,loader,to,decorate,see,shadowing,class,loader,class,loader,boolean;public,shadowing,class,loader,class,loader,enclosing,class,loader,this,enclosing,class,loader,true
ShadowingClassLoader -> public void copyTransformers(ShadowingClassLoader other);1328020251;Copy all ClassFileTransformers from the given ClassLoader to the list of_transformers that this ClassLoader will apply._@param other the ClassLoader to copy from;public void copyTransformers(ShadowingClassLoader other) {_		Assert.notNull(other, "Other ClassLoader must not be null")__		this.classFileTransformers.addAll(other.classFileTransformers)__	};copy,all,class,file,transformers,from,the,given,class,loader,to,the,list,of,transformers,that,this,class,loader,will,apply,param,other,the,class,loader,to,copy,from;public,void,copy,transformers,shadowing,class,loader,other,assert,not,null,other,other,class,loader,must,not,be,null,this,class,file,transformers,add,all,other,class,file,transformers
ShadowingClassLoader -> public void copyTransformers(ShadowingClassLoader other);1344552803;Copy all ClassFileTransformers from the given ClassLoader to the list of_transformers that this ClassLoader will apply._@param other the ClassLoader to copy from;public void copyTransformers(ShadowingClassLoader other) {_		Assert.notNull(other, "Other ClassLoader must not be null")__		this.classFileTransformers.addAll(other.classFileTransformers)__	};copy,all,class,file,transformers,from,the,given,class,loader,to,the,list,of,transformers,that,this,class,loader,will,apply,param,other,the,class,loader,to,copy,from;public,void,copy,transformers,shadowing,class,loader,other,assert,not,null,other,other,class,loader,must,not,be,null,this,class,file,transformers,add,all,other,class,file,transformers
ShadowingClassLoader -> public void copyTransformers(ShadowingClassLoader other);1385412762;Copy all ClassFileTransformers from the given ClassLoader to the list of_transformers that this ClassLoader will apply._@param other the ClassLoader to copy from;public void copyTransformers(ShadowingClassLoader other) {_		Assert.notNull(other, "Other ClassLoader must not be null")__		this.classFileTransformers.addAll(other.classFileTransformers)__	};copy,all,class,file,transformers,from,the,given,class,loader,to,the,list,of,transformers,that,this,class,loader,will,apply,param,other,the,class,loader,to,copy,from;public,void,copy,transformers,shadowing,class,loader,other,assert,not,null,other,other,class,loader,must,not,be,null,this,class,file,transformers,add,all,other,class,file,transformers
ShadowingClassLoader -> public void copyTransformers(ShadowingClassLoader other);1467730834;Copy all ClassFileTransformers from the given ClassLoader to the list of_transformers that this ClassLoader will apply._@param other the ClassLoader to copy from;public void copyTransformers(ShadowingClassLoader other) {_		Assert.notNull(other, "Other ClassLoader must not be null")__		this.classFileTransformers.addAll(other.classFileTransformers)__	};copy,all,class,file,transformers,from,the,given,class,loader,to,the,list,of,transformers,that,this,class,loader,will,apply,param,other,the,class,loader,to,copy,from;public,void,copy,transformers,shadowing,class,loader,other,assert,not,null,other,other,class,loader,must,not,be,null,this,class,file,transformers,add,all,other,class,file,transformers
ShadowingClassLoader -> public void copyTransformers(ShadowingClassLoader other);1492004090;Copy all ClassFileTransformers from the given ClassLoader to the list of_transformers that this ClassLoader will apply._@param other the ClassLoader to copy from;public void copyTransformers(ShadowingClassLoader other) {_		Assert.notNull(other, "Other ClassLoader must not be null")__		this.classFileTransformers.addAll(other.classFileTransformers)__	};copy,all,class,file,transformers,from,the,given,class,loader,to,the,list,of,transformers,that,this,class,loader,will,apply,param,other,the,class,loader,to,copy,from;public,void,copy,transformers,shadowing,class,loader,other,assert,not,null,other,other,class,loader,must,not,be,null,this,class,file,transformers,add,all,other,class,file,transformers
ShadowingClassLoader -> public void copyTransformers(ShadowingClassLoader other);1496837955;Copy all ClassFileTransformers from the given ClassLoader to the list of_transformers that this ClassLoader will apply._@param other the ClassLoader to copy from;public void copyTransformers(ShadowingClassLoader other) {_		Assert.notNull(other, "Other ClassLoader must not be null")__		this.classFileTransformers.addAll(other.classFileTransformers)__	};copy,all,class,file,transformers,from,the,given,class,loader,to,the,list,of,transformers,that,this,class,loader,will,apply,param,other,the,class,loader,to,copy,from;public,void,copy,transformers,shadowing,class,loader,other,assert,not,null,other,other,class,loader,must,not,be,null,this,class,file,transformers,add,all,other,class,file,transformers
ShadowingClassLoader -> public void copyTransformers(ShadowingClassLoader other);1530174524;Copy all ClassFileTransformers from the given ClassLoader to the list of_transformers that this ClassLoader will apply._@param other the ClassLoader to copy from;public void copyTransformers(ShadowingClassLoader other) {_		Assert.notNull(other, "Other ClassLoader must not be null")__		this.classFileTransformers.addAll(other.classFileTransformers)__	};copy,all,class,file,transformers,from,the,given,class,loader,to,the,list,of,transformers,that,this,class,loader,will,apply,param,other,the,class,loader,to,copy,from;public,void,copy,transformers,shadowing,class,loader,other,assert,not,null,other,other,class,loader,must,not,be,null,this,class,file,transformers,add,all,other,class,file,transformers
ShadowingClassLoader -> public void copyTransformers(ShadowingClassLoader other);1551283028;Copy all ClassFileTransformers from the given ClassLoader to the list of_transformers that this ClassLoader will apply._@param other the ClassLoader to copy from;public void copyTransformers(ShadowingClassLoader other) {_		Assert.notNull(other, "Other ClassLoader must not be null")__		this.classFileTransformers.addAll(other.classFileTransformers)__	};copy,all,class,file,transformers,from,the,given,class,loader,to,the,list,of,transformers,that,this,class,loader,will,apply,param,other,the,class,loader,to,copy,from;public,void,copy,transformers,shadowing,class,loader,other,assert,not,null,other,other,class,loader,must,not,be,null,this,class,file,transformers,add,all,other,class,file,transformers
ShadowingClassLoader -> protected boolean isEligibleForShadowing(String className);1328020251;Determine whether the specified class is eligible for shadowing_by this class loader._@param className the class name to check_@return whether the specified class is eligible_@see #isExcluded;protected boolean isEligibleForShadowing(String className) {_		return !isExcluded(className)__	};determine,whether,the,specified,class,is,eligible,for,shadowing,by,this,class,loader,param,class,name,the,class,name,to,check,return,whether,the,specified,class,is,eligible,see,is,excluded;protected,boolean,is,eligible,for,shadowing,string,class,name,return,is,excluded,class,name
ShadowingClassLoader -> protected boolean isEligibleForShadowing(String className);1344552803;Determine whether the specified class is eligible for shadowing_by this class loader._@param className the class name to check_@return whether the specified class is eligible_@see #isExcluded;protected boolean isEligibleForShadowing(String className) {_		return !isExcluded(className)__	};determine,whether,the,specified,class,is,eligible,for,shadowing,by,this,class,loader,param,class,name,the,class,name,to,check,return,whether,the,specified,class,is,eligible,see,is,excluded;protected,boolean,is,eligible,for,shadowing,string,class,name,return,is,excluded,class,name
ShadowingClassLoader -> protected boolean isEligibleForShadowing(String className);1385412762;Determine whether the specified class is eligible for shadowing_by this class loader._@param className the class name to check_@return whether the specified class is eligible_@see #isExcluded;protected boolean isEligibleForShadowing(String className) {_		return !isExcluded(className)__	};determine,whether,the,specified,class,is,eligible,for,shadowing,by,this,class,loader,param,class,name,the,class,name,to,check,return,whether,the,specified,class,is,eligible,see,is,excluded;protected,boolean,is,eligible,for,shadowing,string,class,name,return,is,excluded,class,name
ShadowingClassLoader -> protected boolean isEligibleForShadowing(String className);1467730834;Determine whether the specified class is eligible for shadowing_by this class loader._@param className the class name to check_@return whether the specified class is eligible_@see #isExcluded;protected boolean isEligibleForShadowing(String className) {_		return !isExcluded(className)__	};determine,whether,the,specified,class,is,eligible,for,shadowing,by,this,class,loader,param,class,name,the,class,name,to,check,return,whether,the,specified,class,is,eligible,see,is,excluded;protected,boolean,is,eligible,for,shadowing,string,class,name,return,is,excluded,class,name
ShadowingClassLoader -> protected boolean isEligibleForShadowing(String className);1492004090;Determine whether the specified class is eligible for shadowing_by this class loader._@param className the class name to check_@return whether the specified class is eligible_@see #isExcluded;protected boolean isEligibleForShadowing(String className) {_		return !isExcluded(className)__	};determine,whether,the,specified,class,is,eligible,for,shadowing,by,this,class,loader,param,class,name,the,class,name,to,check,return,whether,the,specified,class,is,eligible,see,is,excluded;protected,boolean,is,eligible,for,shadowing,string,class,name,return,is,excluded,class,name
ShadowingClassLoader -> protected boolean isEligibleForShadowing(String className);1496837955;Determine whether the specified class is eligible for shadowing_by this class loader._@param className the class name to check_@return whether the specified class is eligible_@see #isExcluded;protected boolean isEligibleForShadowing(String className) {_		return !isExcluded(className)__	};determine,whether,the,specified,class,is,eligible,for,shadowing,by,this,class,loader,param,class,name,the,class,name,to,check,return,whether,the,specified,class,is,eligible,see,is,excluded;protected,boolean,is,eligible,for,shadowing,string,class,name,return,is,excluded,class,name
ShadowingClassLoader -> protected boolean isEligibleForShadowing(String className);1530174524;Determine whether the specified class is eligible for shadowing_by this class loader._@param className the class name to check_@return whether the specified class is eligible_@see #isExcluded;protected boolean isEligibleForShadowing(String className) {_		return !isExcluded(className)__	};determine,whether,the,specified,class,is,eligible,for,shadowing,by,this,class,loader,param,class,name,the,class,name,to,check,return,whether,the,specified,class,is,eligible,see,is,excluded;protected,boolean,is,eligible,for,shadowing,string,class,name,return,is,excluded,class,name
ShadowingClassLoader -> protected boolean isEligibleForShadowing(String className);1551283028;Determine whether the specified class is eligible for shadowing_by this class loader._@param className the class name to check_@return whether the specified class is eligible_@see #isExcluded;protected boolean isEligibleForShadowing(String className) {_		return !isExcluded(className)__	};determine,whether,the,specified,class,is,eligible,for,shadowing,by,this,class,loader,param,class,name,the,class,name,to,check,return,whether,the,specified,class,is,eligible,see,is,excluded;protected,boolean,is,eligible,for,shadowing,string,class,name,return,is,excluded,class,name
ShadowingClassLoader -> public ShadowingClassLoader(ClassLoader enclosingClassLoader, boolean defaultExcludes);1492004090;Create a new ShadowingClassLoader, decorating the given ClassLoader._@param enclosingClassLoader the ClassLoader to decorate_@param defaultExcludes whether to apply {@link #DEFAULT_EXCLUDED_PACKAGES}_@since 4.3.8;public ShadowingClassLoader(ClassLoader enclosingClassLoader, boolean defaultExcludes) {_		Assert.notNull(enclosingClassLoader, "Enclosing ClassLoader must not be null")__		this.enclosingClassLoader = enclosingClassLoader__		if (defaultExcludes) {_			for (String excludedPackage : DEFAULT_EXCLUDED_PACKAGES) {_				excludePackage(excludedPackage)__			}_		}_	};create,a,new,shadowing,class,loader,decorating,the,given,class,loader,param,enclosing,class,loader,the,class,loader,to,decorate,param,default,excludes,whether,to,apply,link,since,4,3,8;public,shadowing,class,loader,class,loader,enclosing,class,loader,boolean,default,excludes,assert,not,null,enclosing,class,loader,enclosing,class,loader,must,not,be,null,this,enclosing,class,loader,enclosing,class,loader,if,default,excludes,for,string,excluded,package,exclude,package,excluded,package
ShadowingClassLoader -> public ShadowingClassLoader(ClassLoader enclosingClassLoader, boolean defaultExcludes);1496837955;Create a new ShadowingClassLoader, decorating the given ClassLoader._@param enclosingClassLoader the ClassLoader to decorate_@param defaultExcludes whether to apply {@link #DEFAULT_EXCLUDED_PACKAGES}_@since 4.3.8;public ShadowingClassLoader(ClassLoader enclosingClassLoader, boolean defaultExcludes) {_		Assert.notNull(enclosingClassLoader, "Enclosing ClassLoader must not be null")__		this.enclosingClassLoader = enclosingClassLoader__		if (defaultExcludes) {_			for (String excludedPackage : DEFAULT_EXCLUDED_PACKAGES) {_				excludePackage(excludedPackage)__			}_		}_	};create,a,new,shadowing,class,loader,decorating,the,given,class,loader,param,enclosing,class,loader,the,class,loader,to,decorate,param,default,excludes,whether,to,apply,link,since,4,3,8;public,shadowing,class,loader,class,loader,enclosing,class,loader,boolean,default,excludes,assert,not,null,enclosing,class,loader,enclosing,class,loader,must,not,be,null,this,enclosing,class,loader,enclosing,class,loader,if,default,excludes,for,string,excluded,package,exclude,package,excluded,package
ShadowingClassLoader -> public ShadowingClassLoader(ClassLoader enclosingClassLoader, boolean defaultExcludes);1530174524;Create a new ShadowingClassLoader, decorating the given ClassLoader._@param enclosingClassLoader the ClassLoader to decorate_@param defaultExcludes whether to apply {@link #DEFAULT_EXCLUDED_PACKAGES}_@since 4.3.8;public ShadowingClassLoader(ClassLoader enclosingClassLoader, boolean defaultExcludes) {_		Assert.notNull(enclosingClassLoader, "Enclosing ClassLoader must not be null")__		this.enclosingClassLoader = enclosingClassLoader__		if (defaultExcludes) {_			for (String excludedPackage : DEFAULT_EXCLUDED_PACKAGES) {_				excludePackage(excludedPackage)__			}_		}_	};create,a,new,shadowing,class,loader,decorating,the,given,class,loader,param,enclosing,class,loader,the,class,loader,to,decorate,param,default,excludes,whether,to,apply,link,since,4,3,8;public,shadowing,class,loader,class,loader,enclosing,class,loader,boolean,default,excludes,assert,not,null,enclosing,class,loader,enclosing,class,loader,must,not,be,null,this,enclosing,class,loader,enclosing,class,loader,if,default,excludes,for,string,excluded,package,exclude,package,excluded,package
ShadowingClassLoader -> public ShadowingClassLoader(ClassLoader enclosingClassLoader, boolean defaultExcludes);1551283028;Create a new ShadowingClassLoader, decorating the given ClassLoader._@param enclosingClassLoader the ClassLoader to decorate_@param defaultExcludes whether to apply {@link #DEFAULT_EXCLUDED_PACKAGES}_@since 4.3.8;public ShadowingClassLoader(ClassLoader enclosingClassLoader, boolean defaultExcludes) {_		Assert.notNull(enclosingClassLoader, "Enclosing ClassLoader must not be null")__		this.enclosingClassLoader = enclosingClassLoader__		if (defaultExcludes) {_			for (String excludedPackage : DEFAULT_EXCLUDED_PACKAGES) {_				excludePackage(excludedPackage)__			}_		}_	};create,a,new,shadowing,class,loader,decorating,the,given,class,loader,param,enclosing,class,loader,the,class,loader,to,decorate,param,default,excludes,whether,to,apply,link,since,4,3,8;public,shadowing,class,loader,class,loader,enclosing,class,loader,boolean,default,excludes,assert,not,null,enclosing,class,loader,enclosing,class,loader,must,not,be,null,this,enclosing,class,loader,enclosing,class,loader,if,default,excludes,for,string,excluded,package,exclude,package,excluded,package
ShadowingClassLoader -> public void addTransformer(ClassFileTransformer transformer);1328020251;Add the given ClassFileTransformer to the list of transformers that this_ClassLoader will apply._@param transformer the ClassFileTransformer;public void addTransformer(ClassFileTransformer transformer) {_		Assert.notNull(transformer, "Transformer must not be null")__		this.classFileTransformers.add(transformer)__	};add,the,given,class,file,transformer,to,the,list,of,transformers,that,this,class,loader,will,apply,param,transformer,the,class,file,transformer;public,void,add,transformer,class,file,transformer,transformer,assert,not,null,transformer,transformer,must,not,be,null,this,class,file,transformers,add,transformer
ShadowingClassLoader -> public void addTransformer(ClassFileTransformer transformer);1344552803;Add the given ClassFileTransformer to the list of transformers that this_ClassLoader will apply._@param transformer the ClassFileTransformer;public void addTransformer(ClassFileTransformer transformer) {_		Assert.notNull(transformer, "Transformer must not be null")__		this.classFileTransformers.add(transformer)__	};add,the,given,class,file,transformer,to,the,list,of,transformers,that,this,class,loader,will,apply,param,transformer,the,class,file,transformer;public,void,add,transformer,class,file,transformer,transformer,assert,not,null,transformer,transformer,must,not,be,null,this,class,file,transformers,add,transformer
ShadowingClassLoader -> public void addTransformer(ClassFileTransformer transformer);1385412762;Add the given ClassFileTransformer to the list of transformers that this_ClassLoader will apply._@param transformer the ClassFileTransformer;public void addTransformer(ClassFileTransformer transformer) {_		Assert.notNull(transformer, "Transformer must not be null")__		this.classFileTransformers.add(transformer)__	};add,the,given,class,file,transformer,to,the,list,of,transformers,that,this,class,loader,will,apply,param,transformer,the,class,file,transformer;public,void,add,transformer,class,file,transformer,transformer,assert,not,null,transformer,transformer,must,not,be,null,this,class,file,transformers,add,transformer
ShadowingClassLoader -> public void addTransformer(ClassFileTransformer transformer);1467730834;Add the given ClassFileTransformer to the list of transformers that this_ClassLoader will apply._@param transformer the ClassFileTransformer;public void addTransformer(ClassFileTransformer transformer) {_		Assert.notNull(transformer, "Transformer must not be null")__		this.classFileTransformers.add(transformer)__	};add,the,given,class,file,transformer,to,the,list,of,transformers,that,this,class,loader,will,apply,param,transformer,the,class,file,transformer;public,void,add,transformer,class,file,transformer,transformer,assert,not,null,transformer,transformer,must,not,be,null,this,class,file,transformers,add,transformer
ShadowingClassLoader -> public void addTransformer(ClassFileTransformer transformer);1492004090;Add the given ClassFileTransformer to the list of transformers that this_ClassLoader will apply._@param transformer the ClassFileTransformer;public void addTransformer(ClassFileTransformer transformer) {_		Assert.notNull(transformer, "Transformer must not be null")__		this.classFileTransformers.add(transformer)__	};add,the,given,class,file,transformer,to,the,list,of,transformers,that,this,class,loader,will,apply,param,transformer,the,class,file,transformer;public,void,add,transformer,class,file,transformer,transformer,assert,not,null,transformer,transformer,must,not,be,null,this,class,file,transformers,add,transformer
ShadowingClassLoader -> public void addTransformer(ClassFileTransformer transformer);1496837955;Add the given ClassFileTransformer to the list of transformers that this_ClassLoader will apply._@param transformer the ClassFileTransformer;public void addTransformer(ClassFileTransformer transformer) {_		Assert.notNull(transformer, "Transformer must not be null")__		this.classFileTransformers.add(transformer)__	};add,the,given,class,file,transformer,to,the,list,of,transformers,that,this,class,loader,will,apply,param,transformer,the,class,file,transformer;public,void,add,transformer,class,file,transformer,transformer,assert,not,null,transformer,transformer,must,not,be,null,this,class,file,transformers,add,transformer
ShadowingClassLoader -> public void addTransformer(ClassFileTransformer transformer);1530174524;Add the given ClassFileTransformer to the list of transformers that this_ClassLoader will apply._@param transformer the ClassFileTransformer;public void addTransformer(ClassFileTransformer transformer) {_		Assert.notNull(transformer, "Transformer must not be null")__		this.classFileTransformers.add(transformer)__	};add,the,given,class,file,transformer,to,the,list,of,transformers,that,this,class,loader,will,apply,param,transformer,the,class,file,transformer;public,void,add,transformer,class,file,transformer,transformer,assert,not,null,transformer,transformer,must,not,be,null,this,class,file,transformers,add,transformer
ShadowingClassLoader -> public void addTransformer(ClassFileTransformer transformer);1551283028;Add the given ClassFileTransformer to the list of transformers that this_ClassLoader will apply._@param transformer the ClassFileTransformer;public void addTransformer(ClassFileTransformer transformer) {_		Assert.notNull(transformer, "Transformer must not be null")__		this.classFileTransformers.add(transformer)__	};add,the,given,class,file,transformer,to,the,list,of,transformers,that,this,class,loader,will,apply,param,transformer,the,class,file,transformer;public,void,add,transformer,class,file,transformer,transformer,assert,not,null,transformer,transformer,must,not,be,null,this,class,file,transformers,add,transformer
ShadowingClassLoader -> private boolean shouldShadow(String className);1328020251;Determine whether the given class should be excluded from shadowing._@param className the name of the class_@return whether the specified class should be shadowed;private boolean shouldShadow(String className) {_		return (!className.equals(getClass().getName()) && !className.endsWith("ShadowingClassLoader") &&_				isEligibleForShadowing(className))__	};determine,whether,the,given,class,should,be,excluded,from,shadowing,param,class,name,the,name,of,the,class,return,whether,the,specified,class,should,be,shadowed;private,boolean,should,shadow,string,class,name,return,class,name,equals,get,class,get,name,class,name,ends,with,shadowing,class,loader,is,eligible,for,shadowing,class,name
ShadowingClassLoader -> private boolean shouldShadow(String className);1344552803;Determine whether the given class should be excluded from shadowing._@param className the name of the class_@return whether the specified class should be shadowed;private boolean shouldShadow(String className) {_		return (!className.equals(getClass().getName()) && !className.endsWith("ShadowingClassLoader") &&_				isEligibleForShadowing(className))__	};determine,whether,the,given,class,should,be,excluded,from,shadowing,param,class,name,the,name,of,the,class,return,whether,the,specified,class,should,be,shadowed;private,boolean,should,shadow,string,class,name,return,class,name,equals,get,class,get,name,class,name,ends,with,shadowing,class,loader,is,eligible,for,shadowing,class,name
ShadowingClassLoader -> private boolean shouldShadow(String className);1385412762;Determine whether the given class should be excluded from shadowing._@param className the name of the class_@return whether the specified class should be shadowed;private boolean shouldShadow(String className) {_		return (!className.equals(getClass().getName()) && !className.endsWith("ShadowingClassLoader") &&_				isEligibleForShadowing(className))__	};determine,whether,the,given,class,should,be,excluded,from,shadowing,param,class,name,the,name,of,the,class,return,whether,the,specified,class,should,be,shadowed;private,boolean,should,shadow,string,class,name,return,class,name,equals,get,class,get,name,class,name,ends,with,shadowing,class,loader,is,eligible,for,shadowing,class,name
ShadowingClassLoader -> private boolean shouldShadow(String className);1467730834;Determine whether the given class should be excluded from shadowing._@param className the name of the class_@return whether the specified class should be shadowed;private boolean shouldShadow(String className) {_		return (!className.equals(getClass().getName()) && !className.endsWith("ShadowingClassLoader") &&_				isEligibleForShadowing(className))__	};determine,whether,the,given,class,should,be,excluded,from,shadowing,param,class,name,the,name,of,the,class,return,whether,the,specified,class,should,be,shadowed;private,boolean,should,shadow,string,class,name,return,class,name,equals,get,class,get,name,class,name,ends,with,shadowing,class,loader,is,eligible,for,shadowing,class,name
ShadowingClassLoader -> private boolean shouldShadow(String className);1492004090;Determine whether the given class should be excluded from shadowing._@param className the name of the class_@return whether the specified class should be shadowed;private boolean shouldShadow(String className) {_		return (!className.equals(getClass().getName()) && !className.endsWith("ShadowingClassLoader") &&_				isEligibleForShadowing(className))__	};determine,whether,the,given,class,should,be,excluded,from,shadowing,param,class,name,the,name,of,the,class,return,whether,the,specified,class,should,be,shadowed;private,boolean,should,shadow,string,class,name,return,class,name,equals,get,class,get,name,class,name,ends,with,shadowing,class,loader,is,eligible,for,shadowing,class,name
ShadowingClassLoader -> private boolean shouldShadow(String className);1496837955;Determine whether the given class should be excluded from shadowing._@param className the name of the class_@return whether the specified class should be shadowed;private boolean shouldShadow(String className) {_		return (!className.equals(getClass().getName()) && !className.endsWith("ShadowingClassLoader") &&_				isEligibleForShadowing(className))__	};determine,whether,the,given,class,should,be,excluded,from,shadowing,param,class,name,the,name,of,the,class,return,whether,the,specified,class,should,be,shadowed;private,boolean,should,shadow,string,class,name,return,class,name,equals,get,class,get,name,class,name,ends,with,shadowing,class,loader,is,eligible,for,shadowing,class,name
ShadowingClassLoader -> private boolean shouldShadow(String className);1530174524;Determine whether the given class should be excluded from shadowing._@param className the name of the class_@return whether the specified class should be shadowed;private boolean shouldShadow(String className) {_		return (!className.equals(getClass().getName()) && !className.endsWith("ShadowingClassLoader") &&_				isEligibleForShadowing(className))__	};determine,whether,the,given,class,should,be,excluded,from,shadowing,param,class,name,the,name,of,the,class,return,whether,the,specified,class,should,be,shadowed;private,boolean,should,shadow,string,class,name,return,class,name,equals,get,class,get,name,class,name,ends,with,shadowing,class,loader,is,eligible,for,shadowing,class,name
ShadowingClassLoader -> private boolean shouldShadow(String className);1551283028;Determine whether the given class should be excluded from shadowing._@param className the name of the class_@return whether the specified class should be shadowed;private boolean shouldShadow(String className) {_		return (!className.equals(getClass().getName()) && !className.endsWith("ShadowingClassLoader") &&_				isEligibleForShadowing(className))__	};determine,whether,the,given,class,should,be,excluded,from,shadowing,param,class,name,the,name,of,the,class,return,whether,the,specified,class,should,be,shadowed;private,boolean,should,shadow,string,class,name,return,class,name,equals,get,class,get,name,class,name,ends,with,shadowing,class,loader,is,eligible,for,shadowing,class,name
