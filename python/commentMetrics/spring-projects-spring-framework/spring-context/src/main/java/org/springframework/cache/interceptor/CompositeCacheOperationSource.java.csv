commented;modifiers;parameterAmount;loc;comment;code
true;public,final;0;3;/**  * Return the {@code CacheOperationSource} instances that this  * {@code CompositeCacheOperationSource} combines.  */ ;/**  * Return the {@code CacheOperationSource} instances that this  * {@code CompositeCacheOperationSource} combines.  */ public final CacheOperationSource[] getCacheOperationSources() {     return this.cacheOperationSources. }
false;public;2;17;;@Override @Nullable public Collection<CacheOperation> getCacheOperations(Method method, @Nullable Class<?> targetClass) {     Collection<CacheOperation> ops = null.     for (CacheOperationSource source : this.cacheOperationSources) {         Collection<CacheOperation> cacheOperations = source.getCacheOperations(method, targetClass).         if (cacheOperations != null) {             if (ops == null) {                 ops = new ArrayList<>().             }             ops.addAll(cacheOperations).         }     }     return ops. }
