# id;timestamp;commentText;codeText;commentWords;codeWords
StandardScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, @Nullable Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1496242568;Load and parse the script via JSR-223's ScriptEngine.;@Override_	public Object getScriptedObject(ScriptSource scriptSource, @Nullable Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		Object script = evaluateScript(scriptSource)___		if (!ObjectUtils.isEmpty(actualInterfaces)) {_			boolean adaptationRequired = false__			for (Class<?> requestedIfc : actualInterfaces) {_				if (script instanceof Class ? !requestedIfc.isAssignableFrom((Class<?>) script) :_						!requestedIfc.isInstance(script)) {_					adaptationRequired = true__				}_			}_			if (adaptationRequired) {_				script = adaptToInterfaces(script, scriptSource, actualInterfaces)__			}_		}__		if (script instanceof Class) {_			Class<?> scriptClass = (Class<?>) script__			try {_				return ReflectionUtils.accessibleConstructor(scriptClass).newInstance()__			}_			catch (NoSuchMethodException ex) {_				throw new ScriptCompilationException(_						"No default constructor on script class: " + scriptClass.getName(), ex)__			}_			catch (InstantiationException ex) {_				throw new ScriptCompilationException(_						scriptSource, "Unable to instantiate script class: " + scriptClass.getName(), ex)__			}_			catch (IllegalAccessException ex) {_				throw new ScriptCompilationException(_						scriptSource, "Could not access script constructor: " + scriptClass.getName(), ex)__			}_			catch (InvocationTargetException ex) {_				throw new ScriptCompilationException(_						"Failed to invoke script constructor: " + scriptClass.getName(), ex.getTargetException())__			}_		}__		return script__	};load,and,parse,the,script,via,jsr,223,s,script,engine;override,public,object,get,scripted,object,script,source,script,source,nullable,class,actual,interfaces,throws,ioexception,script,compilation,exception,object,script,evaluate,script,script,source,if,object,utils,is,empty,actual,interfaces,boolean,adaptation,required,false,for,class,requested,ifc,actual,interfaces,if,script,instanceof,class,requested,ifc,is,assignable,from,class,script,requested,ifc,is,instance,script,adaptation,required,true,if,adaptation,required,script,adapt,to,interfaces,script,script,source,actual,interfaces,if,script,instanceof,class,class,script,class,class,script,try,return,reflection,utils,accessible,constructor,script,class,new,instance,catch,no,such,method,exception,ex,throw,new,script,compilation,exception,no,default,constructor,on,script,class,script,class,get,name,ex,catch,instantiation,exception,ex,throw,new,script,compilation,exception,script,source,unable,to,instantiate,script,class,script,class,get,name,ex,catch,illegal,access,exception,ex,throw,new,script,compilation,exception,script,source,could,not,access,script,constructor,script,class,get,name,ex,catch,invocation,target,exception,ex,throw,new,script,compilation,exception,failed,to,invoke,script,constructor,script,class,get,name,ex,get,target,exception,return,script
StandardScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, @Nullable Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1496837955;Load and parse the script via JSR-223's ScriptEngine.;@Override_	public Object getScriptedObject(ScriptSource scriptSource, @Nullable Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		Object script = evaluateScript(scriptSource)___		if (!ObjectUtils.isEmpty(actualInterfaces)) {_			boolean adaptationRequired = false__			for (Class<?> requestedIfc : actualInterfaces) {_				if (script instanceof Class ? !requestedIfc.isAssignableFrom((Class<?>) script) :_						!requestedIfc.isInstance(script)) {_					adaptationRequired = true__				}_			}_			if (adaptationRequired) {_				script = adaptToInterfaces(script, scriptSource, actualInterfaces)__			}_		}__		if (script instanceof Class) {_			Class<?> scriptClass = (Class<?>) script__			try {_				return ReflectionUtils.accessibleConstructor(scriptClass).newInstance()__			}_			catch (NoSuchMethodException ex) {_				throw new ScriptCompilationException(_						"No default constructor on script class: " + scriptClass.getName(), ex)__			}_			catch (InstantiationException ex) {_				throw new ScriptCompilationException(_						scriptSource, "Unable to instantiate script class: " + scriptClass.getName(), ex)__			}_			catch (IllegalAccessException ex) {_				throw new ScriptCompilationException(_						scriptSource, "Could not access script constructor: " + scriptClass.getName(), ex)__			}_			catch (InvocationTargetException ex) {_				throw new ScriptCompilationException(_						"Failed to invoke script constructor: " + scriptClass.getName(), ex.getTargetException())__			}_		}__		return script__	};load,and,parse,the,script,via,jsr,223,s,script,engine;override,public,object,get,scripted,object,script,source,script,source,nullable,class,actual,interfaces,throws,ioexception,script,compilation,exception,object,script,evaluate,script,script,source,if,object,utils,is,empty,actual,interfaces,boolean,adaptation,required,false,for,class,requested,ifc,actual,interfaces,if,script,instanceof,class,requested,ifc,is,assignable,from,class,script,requested,ifc,is,instance,script,adaptation,required,true,if,adaptation,required,script,adapt,to,interfaces,script,script,source,actual,interfaces,if,script,instanceof,class,class,script,class,class,script,try,return,reflection,utils,accessible,constructor,script,class,new,instance,catch,no,such,method,exception,ex,throw,new,script,compilation,exception,no,default,constructor,on,script,class,script,class,get,name,ex,catch,instantiation,exception,ex,throw,new,script,compilation,exception,script,source,unable,to,instantiate,script,class,script,class,get,name,ex,catch,illegal,access,exception,ex,throw,new,script,compilation,exception,script,source,could,not,access,script,constructor,script,class,get,name,ex,catch,invocation,target,exception,ex,throw,new,script,compilation,exception,failed,to,invoke,script,constructor,script,class,get,name,ex,get,target,exception,return,script
StandardScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, @Nullable Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1498780456;Load and parse the script via JSR-223's ScriptEngine.;@Override_	public Object getScriptedObject(ScriptSource scriptSource, @Nullable Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		Object script = evaluateScript(scriptSource)___		if (!ObjectUtils.isEmpty(actualInterfaces)) {_			boolean adaptationRequired = false__			for (Class<?> requestedIfc : actualInterfaces) {_				if (script instanceof Class ? !requestedIfc.isAssignableFrom((Class<?>) script) :_						!requestedIfc.isInstance(script)) {_					adaptationRequired = true__				}_			}_			if (adaptationRequired) {_				script = adaptToInterfaces(script, scriptSource, actualInterfaces)__			}_		}__		if (script instanceof Class) {_			Class<?> scriptClass = (Class<?>) script__			try {_				return ReflectionUtils.accessibleConstructor(scriptClass).newInstance()__			}_			catch (NoSuchMethodException ex) {_				throw new ScriptCompilationException(_						"No default constructor on script class: " + scriptClass.getName(), ex)__			}_			catch (InstantiationException ex) {_				throw new ScriptCompilationException(_						scriptSource, "Unable to instantiate script class: " + scriptClass.getName(), ex)__			}_			catch (IllegalAccessException ex) {_				throw new ScriptCompilationException(_						scriptSource, "Could not access script constructor: " + scriptClass.getName(), ex)__			}_			catch (InvocationTargetException ex) {_				throw new ScriptCompilationException(_						"Failed to invoke script constructor: " + scriptClass.getName(), ex.getTargetException())__			}_		}__		return script__	};load,and,parse,the,script,via,jsr,223,s,script,engine;override,public,object,get,scripted,object,script,source,script,source,nullable,class,actual,interfaces,throws,ioexception,script,compilation,exception,object,script,evaluate,script,script,source,if,object,utils,is,empty,actual,interfaces,boolean,adaptation,required,false,for,class,requested,ifc,actual,interfaces,if,script,instanceof,class,requested,ifc,is,assignable,from,class,script,requested,ifc,is,instance,script,adaptation,required,true,if,adaptation,required,script,adapt,to,interfaces,script,script,source,actual,interfaces,if,script,instanceof,class,class,script,class,class,script,try,return,reflection,utils,accessible,constructor,script,class,new,instance,catch,no,such,method,exception,ex,throw,new,script,compilation,exception,no,default,constructor,on,script,class,script,class,get,name,ex,catch,instantiation,exception,ex,throw,new,script,compilation,exception,script,source,unable,to,instantiate,script,class,script,class,get,name,ex,catch,illegal,access,exception,ex,throw,new,script,compilation,exception,script,source,could,not,access,script,constructor,script,class,get,name,ex,catch,invocation,target,exception,ex,throw,new,script,compilation,exception,failed,to,invoke,script,constructor,script,class,get,name,ex,get,target,exception,return,script
StandardScriptFactory -> public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator, Class<?>... scriptInterfaces);1431122168;Create a new StandardScriptFactory for the given script source._@param scriptEngineName the name of the JSR-223 ScriptEngine to use_(explicitly given instead of inferred from the script source)_@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement;public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator, Class<?>... scriptInterfaces) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptEngineName = scriptEngineName__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = scriptInterfaces__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,engine,name,the,name,of,the,jsr,223,script,engine,to,use,explicitly,given,instead,of,inferred,from,the,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement;public,standard,script,factory,string,script,engine,name,string,script,source,locator,class,script,interfaces,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,engine,name,script,engine,name,this,script,source,locator,script,source,locator,this,script,interfaces,script,interfaces
StandardScriptFactory -> public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator, Class<?>... scriptInterfaces);1432018141;Create a new StandardScriptFactory for the given script source._@param scriptEngineName the name of the JSR-223 ScriptEngine to use_(explicitly given instead of inferred from the script source)_@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement;public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator, Class<?>... scriptInterfaces) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptEngineName = scriptEngineName__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = scriptInterfaces__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,engine,name,the,name,of,the,jsr,223,script,engine,to,use,explicitly,given,instead,of,inferred,from,the,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement;public,standard,script,factory,string,script,engine,name,string,script,source,locator,class,script,interfaces,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,engine,name,script,engine,name,this,script,source,locator,script,source,locator,this,script,interfaces,script,interfaces
StandardScriptFactory -> public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator, Class<?>... scriptInterfaces);1443040655;Create a new StandardScriptFactory for the given script source._@param scriptEngineName the name of the JSR-223 ScriptEngine to use_(explicitly given instead of inferred from the script source)_@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement;public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator, Class<?>... scriptInterfaces) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptEngineName = scriptEngineName__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = scriptInterfaces__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,engine,name,the,name,of,the,jsr,223,script,engine,to,use,explicitly,given,instead,of,inferred,from,the,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement;public,standard,script,factory,string,script,engine,name,string,script,source,locator,class,script,interfaces,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,engine,name,script,engine,name,this,script,source,locator,script,source,locator,this,script,interfaces,script,interfaces
StandardScriptFactory -> public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator, Class<?>... scriptInterfaces);1468948866;Create a new StandardScriptFactory for the given script source._@param scriptEngineName the name of the JSR-223 ScriptEngine to use_(explicitly given instead of inferred from the script source)_@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement;public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator, Class<?>... scriptInterfaces) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptEngineName = scriptEngineName__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = scriptInterfaces__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,engine,name,the,name,of,the,jsr,223,script,engine,to,use,explicitly,given,instead,of,inferred,from,the,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement;public,standard,script,factory,string,script,engine,name,string,script,source,locator,class,script,interfaces,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,engine,name,script,engine,name,this,script,source,locator,script,source,locator,this,script,interfaces,script,interfaces
StandardScriptFactory -> public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator, Class<?>... scriptInterfaces);1496242568;Create a new StandardScriptFactory for the given script source._@param scriptEngineName the name of the JSR-223 ScriptEngine to use_(explicitly given instead of inferred from the script source)_@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement;public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator, Class<?>... scriptInterfaces) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptEngineName = scriptEngineName__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = scriptInterfaces__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,engine,name,the,name,of,the,jsr,223,script,engine,to,use,explicitly,given,instead,of,inferred,from,the,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement;public,standard,script,factory,string,script,engine,name,string,script,source,locator,class,script,interfaces,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,engine,name,script,engine,name,this,script,source,locator,script,source,locator,this,script,interfaces,script,interfaces
StandardScriptFactory -> public StandardScriptFactory(String scriptSourceLocator);1431122168;Create a new StandardScriptFactory for the given script source._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public StandardScriptFactory(String scriptSourceLocator) {_		this(null, scriptSourceLocator, (Class<?>[]) null)__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,standard,script,factory,string,script,source,locator,this,null,script,source,locator,class,null
StandardScriptFactory -> public StandardScriptFactory(String scriptSourceLocator);1432018141;Create a new StandardScriptFactory for the given script source._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public StandardScriptFactory(String scriptSourceLocator) {_		this(null, scriptSourceLocator, (Class<?>[]) null)__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,standard,script,factory,string,script,source,locator,this,null,script,source,locator,class,null
StandardScriptFactory -> public StandardScriptFactory(String scriptSourceLocator);1443040655;Create a new StandardScriptFactory for the given script source._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public StandardScriptFactory(String scriptSourceLocator) {_		this(null, scriptSourceLocator, (Class<?>[]) null)__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,standard,script,factory,string,script,source,locator,this,null,script,source,locator,class,null
StandardScriptFactory -> public StandardScriptFactory(String scriptSourceLocator);1468948866;Create a new StandardScriptFactory for the given script source._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public StandardScriptFactory(String scriptSourceLocator) {_		this(null, scriptSourceLocator, (Class<?>[]) null)__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,standard,script,factory,string,script,source,locator,this,null,script,source,locator,class,null
StandardScriptFactory -> public StandardScriptFactory(String scriptSourceLocator);1496242568;Create a new StandardScriptFactory for the given script source._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public StandardScriptFactory(String scriptSourceLocator) {_		this(null, scriptSourceLocator, (Class<?>[]) null)__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,standard,script,factory,string,script,source,locator,this,null,script,source,locator,class,null
StandardScriptFactory -> public StandardScriptFactory(String scriptSourceLocator);1496837955;Create a new StandardScriptFactory for the given script source._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public StandardScriptFactory(String scriptSourceLocator) {_		this(null, scriptSourceLocator, (Class<?>[]) null)__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,standard,script,factory,string,script,source,locator,this,null,script,source,locator,class,null
StandardScriptFactory -> public StandardScriptFactory(String scriptSourceLocator);1498780456;Create a new StandardScriptFactory for the given script source._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public StandardScriptFactory(String scriptSourceLocator) {_		this(null, scriptSourceLocator, (Class<?>[]) null)__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,standard,script,factory,string,script,source,locator,this,null,script,source,locator,class,null
StandardScriptFactory -> public StandardScriptFactory(String scriptSourceLocator);1502974979;Create a new StandardScriptFactory for the given script source._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public StandardScriptFactory(String scriptSourceLocator) {_		this(null, scriptSourceLocator, (Class<?>[]) null)__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,standard,script,factory,string,script,source,locator,this,null,script,source,locator,class,null
StandardScriptFactory -> public StandardScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces);1431122168;Create a new StandardScriptFactory for the given script source._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement;public StandardScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces) {_		this(null, scriptSourceLocator, scriptInterfaces)__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement;public,standard,script,factory,string,script,source,locator,class,script,interfaces,this,null,script,source,locator,script,interfaces
StandardScriptFactory -> public StandardScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces);1432018141;Create a new StandardScriptFactory for the given script source._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement;public StandardScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces) {_		this(null, scriptSourceLocator, scriptInterfaces)__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement;public,standard,script,factory,string,script,source,locator,class,script,interfaces,this,null,script,source,locator,script,interfaces
StandardScriptFactory -> public StandardScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces);1443040655;Create a new StandardScriptFactory for the given script source._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement;public StandardScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces) {_		this(null, scriptSourceLocator, scriptInterfaces)__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement;public,standard,script,factory,string,script,source,locator,class,script,interfaces,this,null,script,source,locator,script,interfaces
StandardScriptFactory -> public StandardScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces);1468948866;Create a new StandardScriptFactory for the given script source._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement;public StandardScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces) {_		this(null, scriptSourceLocator, scriptInterfaces)__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement;public,standard,script,factory,string,script,source,locator,class,script,interfaces,this,null,script,source,locator,script,interfaces
StandardScriptFactory -> public StandardScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces);1496242568;Create a new StandardScriptFactory for the given script source._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement;public StandardScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces) {_		this(null, scriptSourceLocator, scriptInterfaces)__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement;public,standard,script,factory,string,script,source,locator,class,script,interfaces,this,null,script,source,locator,script,interfaces
StandardScriptFactory -> public StandardScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces);1496837955;Create a new StandardScriptFactory for the given script source._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement;public StandardScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces) {_		this(null, scriptSourceLocator, scriptInterfaces)__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement;public,standard,script,factory,string,script,source,locator,class,script,interfaces,this,null,script,source,locator,script,interfaces
StandardScriptFactory -> public StandardScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces);1498780456;Create a new StandardScriptFactory for the given script source._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement;public StandardScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces) {_		this(null, scriptSourceLocator, scriptInterfaces)__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement;public,standard,script,factory,string,script,source,locator,class,script,interfaces,this,null,script,source,locator,script,interfaces
StandardScriptFactory -> public StandardScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces);1502974979;Create a new StandardScriptFactory for the given script source._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement;public StandardScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces) {_		this(null, scriptSourceLocator, scriptInterfaces)__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement;public,standard,script,factory,string,script,source,locator,class,script,interfaces,this,null,script,source,locator,script,interfaces
StandardScriptFactory -> public StandardScriptFactory( 			@Nullable String scriptEngineName, String scriptSourceLocator, @Nullable Class<?>... scriptInterfaces);1496837955;Create a new StandardScriptFactory for the given script source._@param scriptEngineName the name of the JSR-223 ScriptEngine to use_(explicitly given instead of inferred from the script source)_@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement;public StandardScriptFactory(_			@Nullable String scriptEngineName, String scriptSourceLocator, @Nullable Class<?>... scriptInterfaces) {__		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptEngineName = scriptEngineName__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = scriptInterfaces__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,engine,name,the,name,of,the,jsr,223,script,engine,to,use,explicitly,given,instead,of,inferred,from,the,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement;public,standard,script,factory,nullable,string,script,engine,name,string,script,source,locator,nullable,class,script,interfaces,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,engine,name,script,engine,name,this,script,source,locator,script,source,locator,this,script,interfaces,script,interfaces
StandardScriptFactory -> public StandardScriptFactory( 			@Nullable String scriptEngineName, String scriptSourceLocator, @Nullable Class<?>... scriptInterfaces);1498780456;Create a new StandardScriptFactory for the given script source._@param scriptEngineName the name of the JSR-223 ScriptEngine to use_(explicitly given instead of inferred from the script source)_@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement;public StandardScriptFactory(_			@Nullable String scriptEngineName, String scriptSourceLocator, @Nullable Class<?>... scriptInterfaces) {__		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptEngineName = scriptEngineName__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = scriptInterfaces__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,engine,name,the,name,of,the,jsr,223,script,engine,to,use,explicitly,given,instead,of,inferred,from,the,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement;public,standard,script,factory,nullable,string,script,engine,name,string,script,source,locator,nullable,class,script,interfaces,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,engine,name,script,engine,name,this,script,source,locator,script,source,locator,this,script,interfaces,script,interfaces
StandardScriptFactory -> public StandardScriptFactory( 			@Nullable String scriptEngineName, String scriptSourceLocator, @Nullable Class<?>... scriptInterfaces);1502974979;Create a new StandardScriptFactory for the given script source._@param scriptEngineName the name of the JSR-223 ScriptEngine to use_(explicitly given instead of inferred from the script source)_@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement;public StandardScriptFactory(_			@Nullable String scriptEngineName, String scriptSourceLocator, @Nullable Class<?>... scriptInterfaces) {__		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptEngineName = scriptEngineName__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = scriptInterfaces__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,engine,name,the,name,of,the,jsr,223,script,engine,to,use,explicitly,given,instead,of,inferred,from,the,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement;public,standard,script,factory,nullable,string,script,engine,name,string,script,source,locator,nullable,class,script,interfaces,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,engine,name,script,engine,name,this,script,source,locator,script,source,locator,this,script,interfaces,script,interfaces
StandardScriptFactory -> public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator);1431122168;Create a new StandardScriptFactory for the given script source._@param scriptEngineName the name of the JSR-223 ScriptEngine to use_(explicitly given instead of inferred from the script source)_@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator) {_		this(scriptEngineName, scriptSourceLocator, (Class<?>[]) null)__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,engine,name,the,name,of,the,jsr,223,script,engine,to,use,explicitly,given,instead,of,inferred,from,the,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,standard,script,factory,string,script,engine,name,string,script,source,locator,this,script,engine,name,script,source,locator,class,null
StandardScriptFactory -> public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator);1432018141;Create a new StandardScriptFactory for the given script source._@param scriptEngineName the name of the JSR-223 ScriptEngine to use_(explicitly given instead of inferred from the script source)_@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator) {_		this(scriptEngineName, scriptSourceLocator, (Class<?>[]) null)__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,engine,name,the,name,of,the,jsr,223,script,engine,to,use,explicitly,given,instead,of,inferred,from,the,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,standard,script,factory,string,script,engine,name,string,script,source,locator,this,script,engine,name,script,source,locator,class,null
StandardScriptFactory -> public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator);1443040655;Create a new StandardScriptFactory for the given script source._@param scriptEngineName the name of the JSR-223 ScriptEngine to use_(explicitly given instead of inferred from the script source)_@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator) {_		this(scriptEngineName, scriptSourceLocator, (Class<?>[]) null)__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,engine,name,the,name,of,the,jsr,223,script,engine,to,use,explicitly,given,instead,of,inferred,from,the,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,standard,script,factory,string,script,engine,name,string,script,source,locator,this,script,engine,name,script,source,locator,class,null
StandardScriptFactory -> public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator);1468948866;Create a new StandardScriptFactory for the given script source._@param scriptEngineName the name of the JSR-223 ScriptEngine to use_(explicitly given instead of inferred from the script source)_@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator) {_		this(scriptEngineName, scriptSourceLocator, (Class<?>[]) null)__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,engine,name,the,name,of,the,jsr,223,script,engine,to,use,explicitly,given,instead,of,inferred,from,the,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,standard,script,factory,string,script,engine,name,string,script,source,locator,this,script,engine,name,script,source,locator,class,null
StandardScriptFactory -> public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator);1496242568;Create a new StandardScriptFactory for the given script source._@param scriptEngineName the name of the JSR-223 ScriptEngine to use_(explicitly given instead of inferred from the script source)_@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator) {_		this(scriptEngineName, scriptSourceLocator, (Class<?>[]) null)__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,engine,name,the,name,of,the,jsr,223,script,engine,to,use,explicitly,given,instead,of,inferred,from,the,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,standard,script,factory,string,script,engine,name,string,script,source,locator,this,script,engine,name,script,source,locator,class,null
StandardScriptFactory -> public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator);1496837955;Create a new StandardScriptFactory for the given script source._@param scriptEngineName the name of the JSR-223 ScriptEngine to use_(explicitly given instead of inferred from the script source)_@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator) {_		this(scriptEngineName, scriptSourceLocator, (Class<?>[]) null)__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,engine,name,the,name,of,the,jsr,223,script,engine,to,use,explicitly,given,instead,of,inferred,from,the,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,standard,script,factory,string,script,engine,name,string,script,source,locator,this,script,engine,name,script,source,locator,class,null
StandardScriptFactory -> public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator);1498780456;Create a new StandardScriptFactory for the given script source._@param scriptEngineName the name of the JSR-223 ScriptEngine to use_(explicitly given instead of inferred from the script source)_@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator) {_		this(scriptEngineName, scriptSourceLocator, (Class<?>[]) null)__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,engine,name,the,name,of,the,jsr,223,script,engine,to,use,explicitly,given,instead,of,inferred,from,the,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,standard,script,factory,string,script,engine,name,string,script,source,locator,this,script,engine,name,script,source,locator,class,null
StandardScriptFactory -> public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator);1502974979;Create a new StandardScriptFactory for the given script source._@param scriptEngineName the name of the JSR-223 ScriptEngine to use_(explicitly given instead of inferred from the script source)_@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public StandardScriptFactory(String scriptEngineName, String scriptSourceLocator) {_		this(scriptEngineName, scriptSourceLocator, (Class<?>[]) null)__	};create,a,new,standard,script,factory,for,the,given,script,source,param,script,engine,name,the,name,of,the,jsr,223,script,engine,to,use,explicitly,given,instead,of,inferred,from,the,script,source,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,standard,script,factory,string,script,engine,name,string,script,source,locator,this,script,engine,name,script,source,locator,class,null
StandardScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1431122168;Load and parse the script via JSR-223's ScriptEngine.;@Override_	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		Object script___		try {_			if (this.scriptEngine == null) {_				this.scriptEngine = retrieveScriptEngine(scriptSource)__				if (this.scriptEngine == null) {_					throw new IllegalStateException("Could not determine script engine for " + scriptSource)__				}_			}_			script = this.scriptEngine.eval(scriptSource.getScriptAsString())__		}_		catch (Exception ex) {_			throw new ScriptCompilationException(scriptSource, ex)__		}__		if (!ObjectUtils.isEmpty(actualInterfaces)) {_			boolean adaptationRequired = false__			for (Class<?> requestedIfc : actualInterfaces) {_				if (!requestedIfc.isInstance(script)) {_					adaptationRequired = true__				}_			}_			if (adaptationRequired) {_				Class<?> adaptedIfc__				if (actualInterfaces.length == 1) {_					adaptedIfc = actualInterfaces[0]__				}_				else {_					adaptedIfc = ClassUtils.createCompositeInterface(actualInterfaces, this.beanClassLoader)__				}_				if (adaptedIfc != null) {_					if (!(this.scriptEngine instanceof Invocable)) {_						throw new ScriptCompilationException(scriptSource,_								"ScriptEngine must implement Invocable in order to adapt it to an interface: " +_										this.scriptEngine)__					}_					Invocable invocable = (Invocable) this.scriptEngine__					if (script != null) {_						script = invocable.getInterface(script, adaptedIfc)__					}_					if (script == null) {_						script = invocable.getInterface(adaptedIfc)__						if (script == null) {_							throw new ScriptCompilationException(scriptSource,_									"Could not adapt script to interface [" + adaptedIfc.getName() + "]")__						}_					}_				}_			}_		}__		if (script instanceof Class) {_			Class<?> scriptClass = (Class<?>) script__			try {_				return scriptClass.newInstance()__			}_			catch (InstantiationException ex) {_				throw new ScriptCompilationException(_						scriptSource, "Could not instantiate script class: " + scriptClass.getName(), ex)__			}_			catch (IllegalAccessException ex) {_				throw new ScriptCompilationException(_						scriptSource, "Could not access script constructor: " + scriptClass.getName(), ex)__			}_		}__		return script__	};load,and,parse,the,script,via,jsr,223,s,script,engine;override,public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,object,script,try,if,this,script,engine,null,this,script,engine,retrieve,script,engine,script,source,if,this,script,engine,null,throw,new,illegal,state,exception,could,not,determine,script,engine,for,script,source,script,this,script,engine,eval,script,source,get,script,as,string,catch,exception,ex,throw,new,script,compilation,exception,script,source,ex,if,object,utils,is,empty,actual,interfaces,boolean,adaptation,required,false,for,class,requested,ifc,actual,interfaces,if,requested,ifc,is,instance,script,adaptation,required,true,if,adaptation,required,class,adapted,ifc,if,actual,interfaces,length,1,adapted,ifc,actual,interfaces,0,else,adapted,ifc,class,utils,create,composite,interface,actual,interfaces,this,bean,class,loader,if,adapted,ifc,null,if,this,script,engine,instanceof,invocable,throw,new,script,compilation,exception,script,source,script,engine,must,implement,invocable,in,order,to,adapt,it,to,an,interface,this,script,engine,invocable,invocable,invocable,this,script,engine,if,script,null,script,invocable,get,interface,script,adapted,ifc,if,script,null,script,invocable,get,interface,adapted,ifc,if,script,null,throw,new,script,compilation,exception,script,source,could,not,adapt,script,to,interface,adapted,ifc,get,name,if,script,instanceof,class,class,script,class,class,script,try,return,script,class,new,instance,catch,instantiation,exception,ex,throw,new,script,compilation,exception,script,source,could,not,instantiate,script,class,script,class,get,name,ex,catch,illegal,access,exception,ex,throw,new,script,compilation,exception,script,source,could,not,access,script,constructor,script,class,get,name,ex,return,script
StandardScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1432018141;Load and parse the script via JSR-223's ScriptEngine.;@Override_	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		Object script___		try {_			if (this.scriptEngine == null) {_				this.scriptEngine = retrieveScriptEngine(scriptSource)__				if (this.scriptEngine == null) {_					throw new IllegalStateException("Could not determine script engine for " + scriptSource)__				}_			}_			script = this.scriptEngine.eval(scriptSource.getScriptAsString())__		}_		catch (Exception ex) {_			throw new ScriptCompilationException(scriptSource, ex)__		}__		if (!ObjectUtils.isEmpty(actualInterfaces)) {_			boolean adaptationRequired = false__			for (Class<?> requestedIfc : actualInterfaces) {_				if (!requestedIfc.isInstance(script)) {_					adaptationRequired = true__				}_			}_			if (adaptationRequired) {_				Class<?> adaptedIfc__				if (actualInterfaces.length == 1) {_					adaptedIfc = actualInterfaces[0]__				}_				else {_					adaptedIfc = ClassUtils.createCompositeInterface(actualInterfaces, this.beanClassLoader)__				}_				if (adaptedIfc != null) {_					if (!(this.scriptEngine instanceof Invocable)) {_						throw new ScriptCompilationException(scriptSource,_								"ScriptEngine must implement Invocable in order to adapt it to an interface: " +_										this.scriptEngine)__					}_					Invocable invocable = (Invocable) this.scriptEngine__					if (script != null) {_						script = invocable.getInterface(script, adaptedIfc)__					}_					if (script == null) {_						script = invocable.getInterface(adaptedIfc)__						if (script == null) {_							throw new ScriptCompilationException(scriptSource,_									"Could not adapt script to interface [" + adaptedIfc.getName() + "]")__						}_					}_				}_			}_		}__		if (script instanceof Class) {_			Class<?> scriptClass = (Class<?>) script__			try {_				return scriptClass.newInstance()__			}_			catch (InstantiationException ex) {_				throw new ScriptCompilationException(_						scriptSource, "Could not instantiate script class: " + scriptClass.getName(), ex)__			}_			catch (IllegalAccessException ex) {_				throw new ScriptCompilationException(_						scriptSource, "Could not access script constructor: " + scriptClass.getName(), ex)__			}_		}__		return script__	};load,and,parse,the,script,via,jsr,223,s,script,engine;override,public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,object,script,try,if,this,script,engine,null,this,script,engine,retrieve,script,engine,script,source,if,this,script,engine,null,throw,new,illegal,state,exception,could,not,determine,script,engine,for,script,source,script,this,script,engine,eval,script,source,get,script,as,string,catch,exception,ex,throw,new,script,compilation,exception,script,source,ex,if,object,utils,is,empty,actual,interfaces,boolean,adaptation,required,false,for,class,requested,ifc,actual,interfaces,if,requested,ifc,is,instance,script,adaptation,required,true,if,adaptation,required,class,adapted,ifc,if,actual,interfaces,length,1,adapted,ifc,actual,interfaces,0,else,adapted,ifc,class,utils,create,composite,interface,actual,interfaces,this,bean,class,loader,if,adapted,ifc,null,if,this,script,engine,instanceof,invocable,throw,new,script,compilation,exception,script,source,script,engine,must,implement,invocable,in,order,to,adapt,it,to,an,interface,this,script,engine,invocable,invocable,invocable,this,script,engine,if,script,null,script,invocable,get,interface,script,adapted,ifc,if,script,null,script,invocable,get,interface,adapted,ifc,if,script,null,throw,new,script,compilation,exception,script,source,could,not,adapt,script,to,interface,adapted,ifc,get,name,if,script,instanceof,class,class,script,class,class,script,try,return,script,class,new,instance,catch,instantiation,exception,ex,throw,new,script,compilation,exception,script,source,could,not,instantiate,script,class,script,class,get,name,ex,catch,illegal,access,exception,ex,throw,new,script,compilation,exception,script,source,could,not,access,script,constructor,script,class,get,name,ex,return,script
StandardScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1443040655;Load and parse the script via JSR-223's ScriptEngine.;@Override_	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		Object script = evaluateScript(scriptSource)___		if (!ObjectUtils.isEmpty(actualInterfaces)) {_			boolean adaptationRequired = false__			for (Class<?> requestedIfc : actualInterfaces) {_				if (script instanceof Class ? !requestedIfc.isAssignableFrom((Class<?>) script) :_						!requestedIfc.isInstance(script)) {_					adaptationRequired = true__				}_			}_			if (adaptationRequired) {_				script = adaptToInterfaces(script, scriptSource, actualInterfaces)__			}_		}__		if (script instanceof Class) {_			Class<?> scriptClass = (Class<?>) script__			try {_				return scriptClass.newInstance()__			}_			catch (InstantiationException ex) {_				throw new ScriptCompilationException(_						scriptSource, "Could not instantiate script class: " + scriptClass.getName(), ex)__			}_			catch (IllegalAccessException ex) {_				throw new ScriptCompilationException(_						scriptSource, "Could not access script constructor: " + scriptClass.getName(), ex)__			}_		}__		return script__	};load,and,parse,the,script,via,jsr,223,s,script,engine;override,public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,object,script,evaluate,script,script,source,if,object,utils,is,empty,actual,interfaces,boolean,adaptation,required,false,for,class,requested,ifc,actual,interfaces,if,script,instanceof,class,requested,ifc,is,assignable,from,class,script,requested,ifc,is,instance,script,adaptation,required,true,if,adaptation,required,script,adapt,to,interfaces,script,script,source,actual,interfaces,if,script,instanceof,class,class,script,class,class,script,try,return,script,class,new,instance,catch,instantiation,exception,ex,throw,new,script,compilation,exception,script,source,could,not,instantiate,script,class,script,class,get,name,ex,catch,illegal,access,exception,ex,throw,new,script,compilation,exception,script,source,could,not,access,script,constructor,script,class,get,name,ex,return,script
StandardScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1468948866;Load and parse the script via JSR-223's ScriptEngine.;@Override_	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		Object script = evaluateScript(scriptSource)___		if (!ObjectUtils.isEmpty(actualInterfaces)) {_			boolean adaptationRequired = false__			for (Class<?> requestedIfc : actualInterfaces) {_				if (script instanceof Class ? !requestedIfc.isAssignableFrom((Class<?>) script) :_						!requestedIfc.isInstance(script)) {_					adaptationRequired = true__				}_			}_			if (adaptationRequired) {_				script = adaptToInterfaces(script, scriptSource, actualInterfaces)__			}_		}__		if (script instanceof Class) {_			Class<?> scriptClass = (Class<?>) script__			try {_				return ReflectionUtils.accessibleConstructor(scriptClass).newInstance()__			}_			catch (NoSuchMethodException ex) {_				throw new ScriptCompilationException(_						"No default constructor on script class: " + scriptClass.getName(), ex)__			}_			catch (InstantiationException ex) {_				throw new ScriptCompilationException(_						scriptSource, "Unable to instantiate script class: " + scriptClass.getName(), ex)__			}_			catch (IllegalAccessException ex) {_				throw new ScriptCompilationException(_						scriptSource, "Could not access script constructor: " + scriptClass.getName(), ex)__			}_			catch (InvocationTargetException ex) {_				throw new ScriptCompilationException(_						"Failed to invoke script constructor: " + scriptClass.getName(), ex.getTargetException())__			}_		}__		return script__	};load,and,parse,the,script,via,jsr,223,s,script,engine;override,public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,object,script,evaluate,script,script,source,if,object,utils,is,empty,actual,interfaces,boolean,adaptation,required,false,for,class,requested,ifc,actual,interfaces,if,script,instanceof,class,requested,ifc,is,assignable,from,class,script,requested,ifc,is,instance,script,adaptation,required,true,if,adaptation,required,script,adapt,to,interfaces,script,script,source,actual,interfaces,if,script,instanceof,class,class,script,class,class,script,try,return,reflection,utils,accessible,constructor,script,class,new,instance,catch,no,such,method,exception,ex,throw,new,script,compilation,exception,no,default,constructor,on,script,class,script,class,get,name,ex,catch,instantiation,exception,ex,throw,new,script,compilation,exception,script,source,unable,to,instantiate,script,class,script,class,get,name,ex,catch,illegal,access,exception,ex,throw,new,script,compilation,exception,script,source,could,not,access,script,constructor,script,class,get,name,ex,catch,invocation,target,exception,ex,throw,new,script,compilation,exception,failed,to,invoke,script,constructor,script,class,get,name,ex,get,target,exception,return,script
