# id;timestamp;commentText;codeText;commentWords;codeWords
CacheAspectSupport -> public void setCacheOperationSource(@Nullable CacheOperationSource cacheOperationSource);1531589372;Set the CacheOperationSource for this cache aspect._@since 5.1_@see #setCacheOperationSources;public void setCacheOperationSource(@Nullable CacheOperationSource cacheOperationSource) {_		this.cacheOperationSource = cacheOperationSource__	};set,the,cache,operation,source,for,this,cache,aspect,since,5,1,see,set,cache,operation,sources;public,void,set,cache,operation,source,nullable,cache,operation,source,cache,operation,source,this,cache,operation,source,cache,operation,source
CacheAspectSupport -> public void setCacheOperationSource(@Nullable CacheOperationSource cacheOperationSource);1531739054;Set the CacheOperationSource for this cache aspect._@since 5.1_@see #setCacheOperationSources;public void setCacheOperationSource(@Nullable CacheOperationSource cacheOperationSource) {_		this.cacheOperationSource = cacheOperationSource__	};set,the,cache,operation,source,for,this,cache,aspect,since,5,1,see,set,cache,operation,sources;public,void,set,cache,operation,source,nullable,cache,operation,source,cache,operation,source,this,cache,operation,source,cache,operation,source
CacheAspectSupport -> public void setCacheOperationSource(@Nullable CacheOperationSource cacheOperationSource);1532431622;Set the CacheOperationSource for this cache aspect._@since 5.1_@see #setCacheOperationSources;public void setCacheOperationSource(@Nullable CacheOperationSource cacheOperationSource) {_		this.cacheOperationSource = cacheOperationSource__	};set,the,cache,operation,source,for,this,cache,aspect,since,5,1,see,set,cache,operation,sources;public,void,set,cache,operation,source,nullable,cache,operation,source,cache,operation,source,this,cache,operation,source,cache,operation,source
CacheAspectSupport -> public void setCacheOperationSource(@Nullable CacheOperationSource cacheOperationSource);1532981251;Set the CacheOperationSource for this cache aspect._@since 5.1_@see #setCacheOperationSources;public void setCacheOperationSource(@Nullable CacheOperationSource cacheOperationSource) {_		this.cacheOperationSource = cacheOperationSource__	};set,the,cache,operation,source,for,this,cache,aspect,since,5,1,see,set,cache,operation,sources;public,void,set,cache,operation,source,nullable,cache,operation,source,cache,operation,source,this,cache,operation,source,cache,operation,source
CacheAspectSupport -> @Nullable 	public CacheOperationSource getCacheOperationSource();1496837955;Return the CacheOperationSource for this cache aspect.;@Nullable_	public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;nullable,public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> @Nullable 	public CacheOperationSource getCacheOperationSource();1500448076;Return the CacheOperationSource for this cache aspect.;@Nullable_	public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;nullable,public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> @Nullable 	public CacheOperationSource getCacheOperationSource();1500457438;Return the CacheOperationSource for this cache aspect.;@Nullable_	public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;nullable,public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> @Nullable 	public CacheOperationSource getCacheOperationSource();1515970101;Return the CacheOperationSource for this cache aspect.;@Nullable_	public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;nullable,public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> @Nullable 	public CacheOperationSource getCacheOperationSource();1518567721;Return the CacheOperationSource for this cache aspect.;@Nullable_	public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;nullable,public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> @Nullable 	public CacheOperationSource getCacheOperationSource();1524846222;Return the CacheOperationSource for this cache aspect.;@Nullable_	public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;nullable,public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> @Nullable 	public CacheOperationSource getCacheOperationSource();1530174524;Return the CacheOperationSource for this cache aspect.;@Nullable_	public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;nullable,public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> @Nullable 	public CacheOperationSource getCacheOperationSource();1531589372;Return the CacheOperationSource for this cache aspect.;@Nullable_	public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;nullable,public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> @Nullable 	public CacheOperationSource getCacheOperationSource();1531739054;Return the CacheOperationSource for this cache aspect.;@Nullable_	public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;nullable,public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> @Nullable 	public CacheOperationSource getCacheOperationSource();1532431622;Return the CacheOperationSource for this cache aspect.;@Nullable_	public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;nullable,public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> @Nullable 	public CacheOperationSource getCacheOperationSource();1532981251;Return the CacheOperationSource for this cache aspect.;@Nullable_	public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;nullable,public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata(CacheOperation operation, 															   Method method, Class<?> targetClass);1396878069;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(CacheOperation operation,_															   Method method, Class<?> targetClass) {_		final CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,final,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata(CacheOperation operation, 															   Method method, Class<?> targetClass);1397546081;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(CacheOperation operation,_															   Method method, Class<?> targetClass) {_		final CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,final,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata(CacheOperation operation, 															   Method method, Class<?> targetClass);1400596774;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(CacheOperation operation,_															   Method method, Class<?> targetClass) {_		final CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,final,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata(CacheOperation operation, 															   Method method, Class<?> targetClass);1401714051;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(CacheOperation operation,_															   Method method, Class<?> targetClass) {_		final CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,final,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata(CacheOperation operation, 															   Method method, Class<?> targetClass);1404735499;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(CacheOperation operation,_															   Method method, Class<?> targetClass) {_		final CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,final,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata(CacheOperation operation, 															   Method method, Class<?> targetClass);1413848647;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(CacheOperation operation,_															   Method method, Class<?> targetClass) {_		final CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,final,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata(CacheOperation operation, 															   Method method, Class<?> targetClass);1414762650;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(CacheOperation operation,_															   Method method, Class<?> targetClass) {_		final CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,final,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> @Nullable 	public CacheResolver getCacheResolver();1496837955;Return the default {@link CacheResolver} that this cache aspect delegates to.;@Nullable_	public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;nullable,public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> @Nullable 	public CacheResolver getCacheResolver();1500448076;Return the default {@link CacheResolver} that this cache aspect delegates to.;@Nullable_	public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;nullable,public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> @Nullable 	public CacheResolver getCacheResolver();1500457438;Return the default {@link CacheResolver} that this cache aspect delegates to.;@Nullable_	public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;nullable,public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> @Nullable 	public CacheResolver getCacheResolver();1515970101;Return the default {@link CacheResolver} that this cache aspect delegates to.;@Nullable_	public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;nullable,public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> @Nullable 	public CacheResolver getCacheResolver();1518567721;Return the default {@link CacheResolver} that this cache aspect delegates to.;@Nullable_	public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;nullable,public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> @Nullable 	public CacheResolver getCacheResolver();1524846222;Return the default {@link CacheResolver} that this cache aspect delegates to.;@Nullable_	public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;nullable,public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> @Nullable 	public CacheResolver getCacheResolver();1530174524;Return the default {@link CacheResolver} that this cache aspect delegates to.;@Nullable_	public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;nullable,public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> @Nullable 	public CacheResolver getCacheResolver();1531589372;Return the default {@link CacheResolver} that this cache aspect delegates to.;@Nullable_	public CacheResolver getCacheResolver() {_		return SupplierUtils.resolve(this.cacheResolver)__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;nullable,public,cache,resolver,get,cache,resolver,return,supplier,utils,resolve,this,cache,resolver
CacheAspectSupport -> @Nullable 	public CacheResolver getCacheResolver();1531739054;Return the default {@link CacheResolver} that this cache aspect delegates to.;@Nullable_	public CacheResolver getCacheResolver() {_		return SupplierUtils.resolve(this.cacheResolver)__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;nullable,public,cache,resolver,get,cache,resolver,return,supplier,utils,resolve,this,cache,resolver
CacheAspectSupport -> @Nullable 	public CacheResolver getCacheResolver();1532431622;Return the default {@link CacheResolver} that this cache aspect delegates to.;@Nullable_	public CacheResolver getCacheResolver() {_		return SupplierUtils.resolve(this.cacheResolver)__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;nullable,public,cache,resolver,get,cache,resolver,return,supplier,utils,resolve,this,cache,resolver
CacheAspectSupport -> @Nullable 	public CacheResolver getCacheResolver();1532981251;Return the default {@link CacheResolver} that this cache aspect delegates to.;@Nullable_	public CacheResolver getCacheResolver() {_		return SupplierUtils.resolve(this.cacheResolver)__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;nullable,public,cache,resolver,get,cache,resolver,return,supplier,utils,resolve,this,cache,resolver
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1328020251;Return the KeyGenerator for this cache aspect,;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,key,generator,for,this,cache,aspect;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1356735495;Return the KeyGenerator for this cache aspect,;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,key,generator,for,this,cache,aspect;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1357119239;Return the KeyGenerator for this cache aspect,;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,key,generator,for,this,cache,aspect;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1362408075;Return the KeyGenerator for this cache aspect,;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,key,generator,for,this,cache,aspect;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1368482696;Return the KeyGenerator for this cache aspect,;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,key,generator,for,this,cache,aspect;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1372363092;Return the KeyGenerator for this cache aspect,;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,key,generator,for,this,cache,aspect;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1375746308;Return the KeyGenerator for this cache aspect,;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,key,generator,for,this,cache,aspect;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1375747549;Return the KeyGenerator for this cache aspect,;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,key,generator,for,this,cache,aspect;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1379974498;Return the KeyGenerator for this cache aspect,;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,key,generator,for,this,cache,aspect;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1384168190;Return the KeyGenerator for this cache aspect,;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,key,generator,for,this,cache,aspect;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1385514795;Return the KeyGenerator for this cache aspect,;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,key,generator,for,this,cache,aspect;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1387476957;Return the KeyGenerator for this cache aspect,;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,key,generator,for,this,cache,aspect;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1395788176;Return the KeyGenerator for this cache aspect,;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,key,generator,for,this,cache,aspect;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1395790298;Return the KeyGenerator for this cache aspect,;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,key,generator,for,this,cache,aspect;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1396268127;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1396268274;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1396268765;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1396865240;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1396878069;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1397546081;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1400596774;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1401714051;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1404735499;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1413848647;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1414762650;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1414826808;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1418218451;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1422279854;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1423576035;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1428409663;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1428650451;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1450701275;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1450778724;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1458944925;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1458945978;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1458999130;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1461047077;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1461878203;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1467677340;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1467726769;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1467730834;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1470831642;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1474905889;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1477554435;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1495868221;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1496259743;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1496837955;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1500448076;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1500457438;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1515970101;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1518567721;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1524846222;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1530174524;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1531589372;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator.obtain()__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator,obtain
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1531739054;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator.obtain()__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator,obtain
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1532431622;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator.obtain()__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator,obtain
CacheAspectSupport -> public KeyGenerator getKeyGenerator();1532981251;Return the default {@link KeyGenerator} that this cache aspect delegates to.;public KeyGenerator getKeyGenerator() {_		return this.keyGenerator.obtain()__	};return,the,default,link,key,generator,that,this,cache,aspect,delegates,to;public,key,generator,get,key,generator,return,this,key,generator,obtain
CacheAspectSupport -> CacheOperationContext -> @Nullable 		protected Object generateKey(Object result);1495868221;Compute the key for the given caching operation._@return the generated key, or {@code null} if none can be generated;@Nullable_		protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation,return,the,generated,key,or,code,null,if,none,can,be,generated;nullable,protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> @Nullable 		protected Object generateKey(Object result);1496259743;Compute the key for the given caching operation._@return the generated key, or {@code null} if none can be generated;@Nullable_		protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation,return,the,generated,key,or,code,null,if,none,can,be,generated;nullable,protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> protected void clearMetadataCache();1396878069;Clear the cached metadata.;protected void clearMetadataCache() {_		metadataCache.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,metadata,cache,clear
CacheAspectSupport -> protected void clearMetadataCache();1397546081;Clear the cached metadata.;protected void clearMetadataCache() {_		metadataCache.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,metadata,cache,clear
CacheAspectSupport -> protected void clearMetadataCache();1400596774;Clear the cached metadata.;protected void clearMetadataCache() {_		metadataCache.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,metadata,cache,clear
CacheAspectSupport -> protected void clearMetadataCache();1401714051;Clear the cached metadata.;protected void clearMetadataCache() {_		metadataCache.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,metadata,cache,clear
CacheAspectSupport -> protected void clearMetadataCache();1404735499;Clear the cached metadata.;protected void clearMetadataCache() {_		metadataCache.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,metadata,cache,clear
CacheAspectSupport -> protected void clearMetadataCache();1413848647;Clear the cached metadata.;protected void clearMetadataCache() {_		metadataCache.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,metadata,cache,clear
CacheAspectSupport -> protected void clearMetadataCache();1414762650;Clear the cached metadata.;protected void clearMetadataCache() {_		metadataCache.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,metadata,cache,clear
CacheAspectSupport -> protected void clearMetadataCache();1414826808;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear
CacheAspectSupport -> protected void clearMetadataCache();1418218451;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear
CacheAspectSupport -> protected void clearMetadataCache();1422279854;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear
CacheAspectSupport -> protected void clearMetadataCache();1423576035;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1428409663;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1428650451;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1450701275;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1450778724;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1458944925;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1458945978;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1458999130;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1461047077;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1461878203;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1467677340;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1467726769;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1467730834;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1470831642;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1474905889;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1477554435;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1495868221;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1496259743;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1496837955;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1500448076;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1500457438;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1515970101;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1518567721;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1524846222;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1530174524;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1531589372;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1531739054;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1532431622;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected void clearMetadataCache();1532981251;Clear the cached metadata.;protected void clearMetadataCache() {_		this.metadataCache.clear()__		this.evaluator.clear()__	};clear,the,cached,metadata;protected,void,clear,metadata,cache,this,metadata,cache,clear,this,evaluator,clear
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1414826808;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1418218451;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1422279854;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1423576035;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1428409663;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1428650451;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1450701275;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1450778724;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1458944925;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1458945978;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1458999130;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1461047077;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1461878203;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1467677340;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1467726769;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1467730834;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1470831642;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1474905889;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1477554435;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1495868221;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1496259743;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1496837955;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__				Assert.state(operationCacheResolver != null, "No CacheResolver/CacheManager set")__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,assert,state,operation,cache,resolver,null,no,cache,resolver,cache,manager,set,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1500448076;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__				Assert.state(operationCacheResolver != null, "No CacheResolver/CacheManager set")__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,assert,state,operation,cache,resolver,null,no,cache,resolver,cache,manager,set,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1500457438;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__				Assert.state(operationCacheResolver != null, "No CacheResolver/CacheManager set")__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,assert,state,operation,cache,resolver,null,no,cache,resolver,cache,manager,set,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1515970101;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__				Assert.state(operationCacheResolver != null, "No CacheResolver/CacheManager set")__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,assert,state,operation,cache,resolver,null,no,cache,resolver,cache,manager,set,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1518567721;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__				Assert.state(operationCacheResolver != null, "No CacheResolver/CacheManager set")__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,assert,state,operation,cache,resolver,null,no,cache,resolver,cache,manager,set,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1524846222;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__				Assert.state(operationCacheResolver != null, "No CacheResolver/CacheManager set")__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,assert,state,operation,cache,resolver,null,no,cache,resolver,cache,manager,set,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1530174524;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__				Assert.state(operationCacheResolver != null, "No CacheResolver/CacheManager set")__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,assert,state,operation,cache,resolver,null,no,cache,resolver,cache,manager,set,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1531589372;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__				Assert.state(operationCacheResolver != null, "No CacheResolver/CacheManager set")__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,assert,state,operation,cache,resolver,null,no,cache,resolver,cache,manager,set,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1531739054;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__				Assert.state(operationCacheResolver != null, "No CacheResolver/CacheManager set")__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,assert,state,operation,cache,resolver,null,no,cache,resolver,cache,manager,set,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1532431622;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__				Assert.state(operationCacheResolver != null, "No CacheResolver/CacheManager set")__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,assert,state,operation,cache,resolver,null,no,cache,resolver,cache,manager,set,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> protected CacheOperationMetadata getCacheOperationMetadata( 			CacheOperation operation, Method method, Class<?> targetClass);1532981251;Return the {@link CacheOperationMetadata} for the specified operation._<p>Resolve the {@link CacheResolver} and the {@link KeyGenerator} to be_used for the operation._@param operation the operation_@param method the method on which the operation is invoked_@param targetClass the target type_@return the resolved metadata for the operation;protected CacheOperationMetadata getCacheOperationMetadata(_			CacheOperation operation, Method method, Class<?> targetClass) {__		CacheOperationCacheKey cacheKey = new CacheOperationCacheKey(operation, method, targetClass)__		CacheOperationMetadata metadata = this.metadataCache.get(cacheKey)__		if (metadata == null) {_			KeyGenerator operationKeyGenerator__			if (StringUtils.hasText(operation.getKeyGenerator())) {_				operationKeyGenerator = getBean(operation.getKeyGenerator(), KeyGenerator.class)__			}_			else {_				operationKeyGenerator = getKeyGenerator()__			}_			CacheResolver operationCacheResolver__			if (StringUtils.hasText(operation.getCacheResolver())) {_				operationCacheResolver = getBean(operation.getCacheResolver(), CacheResolver.class)__			}_			else if (StringUtils.hasText(operation.getCacheManager())) {_				CacheManager cacheManager = getBean(operation.getCacheManager(), CacheManager.class)__				operationCacheResolver = new SimpleCacheResolver(cacheManager)__			}_			else {_				operationCacheResolver = getCacheResolver()__				Assert.state(operationCacheResolver != null, "No CacheResolver/CacheManager set")__			}_			metadata = new CacheOperationMetadata(operation, method, targetClass,_					operationKeyGenerator, operationCacheResolver)__			this.metadataCache.put(cacheKey, metadata)__		}_		return metadata__	};return,the,link,cache,operation,metadata,for,the,specified,operation,p,resolve,the,link,cache,resolver,and,the,link,key,generator,to,be,used,for,the,operation,param,operation,the,operation,param,method,the,method,on,which,the,operation,is,invoked,param,target,class,the,target,type,return,the,resolved,metadata,for,the,operation;protected,cache,operation,metadata,get,cache,operation,metadata,cache,operation,operation,method,method,class,target,class,cache,operation,cache,key,cache,key,new,cache,operation,cache,key,operation,method,target,class,cache,operation,metadata,metadata,this,metadata,cache,get,cache,key,if,metadata,null,key,generator,operation,key,generator,if,string,utils,has,text,operation,get,key,generator,operation,key,generator,get,bean,operation,get,key,generator,key,generator,class,else,operation,key,generator,get,key,generator,cache,resolver,operation,cache,resolver,if,string,utils,has,text,operation,get,cache,resolver,operation,cache,resolver,get,bean,operation,get,cache,resolver,cache,resolver,class,else,if,string,utils,has,text,operation,get,cache,manager,cache,manager,cache,manager,get,bean,operation,get,cache,manager,cache,manager,class,operation,cache,resolver,new,simple,cache,resolver,cache,manager,else,operation,cache,resolver,get,cache,resolver,assert,state,operation,cache,resolver,null,no,cache,resolver,cache,manager,set,metadata,new,cache,operation,metadata,operation,method,target,class,operation,key,generator,operation,cache,resolver,this,metadata,cache,put,cache,key,metadata,return,metadata
CacheAspectSupport -> CacheOperationContext -> @Nullable 		protected Object generateKey(@Nullable Object result);1496837955;Compute the key for the given caching operation.;@Nullable_		protected Object generateKey(@Nullable Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation;nullable,protected,object,generate,key,nullable,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> @Nullable 		protected Object generateKey(@Nullable Object result);1500448076;Compute the key for the given caching operation.;@Nullable_		protected Object generateKey(@Nullable Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation;nullable,protected,object,generate,key,nullable,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> @Nullable 		protected Object generateKey(@Nullable Object result);1500457438;Compute the key for the given caching operation.;@Nullable_		protected Object generateKey(@Nullable Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation;nullable,protected,object,generate,key,nullable,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> @Nullable 		protected Object generateKey(@Nullable Object result);1515970101;Compute the key for the given caching operation.;@Nullable_		protected Object generateKey(@Nullable Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation;nullable,protected,object,generate,key,nullable,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> @Nullable 		protected Object generateKey(@Nullable Object result);1518567721;Compute the key for the given caching operation.;@Nullable_		protected Object generateKey(@Nullable Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation;nullable,protected,object,generate,key,nullable,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> @Nullable 		protected Object generateKey(@Nullable Object result);1524846222;Compute the key for the given caching operation.;@Nullable_		protected Object generateKey(@Nullable Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.metadata.methodKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation;nullable,protected,object,generate,key,nullable,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,metadata,method,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> @Nullable 		protected Object generateKey(@Nullable Object result);1530174524;Compute the key for the given caching operation.;@Nullable_		protected Object generateKey(@Nullable Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.metadata.methodKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation;nullable,protected,object,generate,key,nullable,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,metadata,method,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> @Nullable 		protected Object generateKey(@Nullable Object result);1531589372;Compute the key for the given caching operation.;@Nullable_		protected Object generateKey(@Nullable Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.metadata.methodKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation;nullable,protected,object,generate,key,nullable,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,metadata,method,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> @Nullable 		protected Object generateKey(@Nullable Object result);1531739054;Compute the key for the given caching operation.;@Nullable_		protected Object generateKey(@Nullable Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.metadata.methodKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation;nullable,protected,object,generate,key,nullable,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,metadata,method,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> @Nullable 		protected Object generateKey(@Nullable Object result);1532431622;Compute the key for the given caching operation.;@Nullable_		protected Object generateKey(@Nullable Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.metadata.methodKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation;nullable,protected,object,generate,key,nullable,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,metadata,method,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> @Nullable 		protected Object generateKey(@Nullable Object result);1532981251;Compute the key for the given caching operation.;@Nullable_		protected Object generateKey(@Nullable Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.metadata.methodKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation;nullable,protected,object,generate,key,nullable,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,metadata,method,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> @Deprecated 	public void setApplicationContext(ApplicationContext applicationContext);1461878203;@deprecated as of 4.3, in favor of {@link #setBeanFactory};@Deprecated_	public void setApplicationContext(ApplicationContext applicationContext) {_		this.beanFactory = applicationContext__	};deprecated,as,of,4,3,in,favor,of,link,set,bean,factory;deprecated,public,void,set,application,context,application,context,application,context,this,bean,factory,application,context
CacheAspectSupport -> @Deprecated 	public void setApplicationContext(ApplicationContext applicationContext);1467677340;@deprecated as of 4.3, in favor of {@link #setBeanFactory};@Deprecated_	public void setApplicationContext(ApplicationContext applicationContext) {_		this.beanFactory = applicationContext__	};deprecated,as,of,4,3,in,favor,of,link,set,bean,factory;deprecated,public,void,set,application,context,application,context,application,context,this,bean,factory,application,context
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1401714051;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1404735499;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1413848647;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1414762650;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1414826808;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1418218451;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1422279854;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1423576035;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1428409663;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1428650451;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1450701275;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1450778724;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1458944925;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1458945978;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1458999130;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1461047077;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1461878203;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1467677340;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1467726769;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1467730834;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1470831642;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1474905889;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1477554435;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1495868221;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1496259743;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1496837955;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1500448076;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1500457438;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1515970101;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1518567721;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1524846222;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1530174524;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1531589372;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1531739054;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1532431622;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> protected Object invokeOperation(CacheOperationInvoker invoker);1532981251;Execute the underlying operation (typically in case of cache miss) and return_the result of the invocation. If an exception occurs it will be wrapped in_a {@link CacheOperationInvoker.ThrowableWrapper}: the exception can be handled_or modified but it <em>must</em> be wrapped in a_{@link CacheOperationInvoker.ThrowableWrapper} as well._@param invoker the invoker handling the operation being cached_@return the result of the invocation_@see CacheOperationInvoker#invoke();protected Object invokeOperation(CacheOperationInvoker invoker) {_		return invoker.invoke()__	};execute,the,underlying,operation,typically,in,case,of,cache,miss,and,return,the,result,of,the,invocation,if,an,exception,occurs,it,will,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,the,exception,can,be,handled,or,modified,but,it,em,must,em,be,wrapped,in,a,link,cache,operation,invoker,throwable,wrapper,as,well,param,invoker,the,invoker,handling,the,operation,being,cached,return,the,result,of,the,invocation,see,cache,operation,invoker,invoke;protected,object,invoke,operation,cache,operation,invoker,invoker,return,invoker,invoke
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1328020251;Set the KeyGenerator for this cache aspect._Default is {@link DefaultKeyGenerator}.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,key,generator,for,this,cache,aspect,default,is,link,default,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1356735495;Set the KeyGenerator for this cache aspect._Default is {@link DefaultKeyGenerator}.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,key,generator,for,this,cache,aspect,default,is,link,default,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1357119239;Set the KeyGenerator for this cache aspect._Default is {@link DefaultKeyGenerator}.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,key,generator,for,this,cache,aspect,default,is,link,default,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1362408075;Set the KeyGenerator for this cache aspect._Default is {@link DefaultKeyGenerator}.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,key,generator,for,this,cache,aspect,default,is,link,default,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1368482696;Set the KeyGenerator for this cache aspect._Default is {@link DefaultKeyGenerator}.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,key,generator,for,this,cache,aspect,default,is,link,default,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1372363092;Set the KeyGenerator for this cache aspect._Default is {@link SimpleKeyGenerator}.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,key,generator,for,this,cache,aspect,default,is,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1375746308;Set the KeyGenerator for this cache aspect._Default is {@link DefaultKeyGenerator}.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,key,generator,for,this,cache,aspect,default,is,link,default,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1375747549;Set the KeyGenerator for this cache aspect._Default is {@link DefaultKeyGenerator}.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,key,generator,for,this,cache,aspect,default,is,link,default,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1379974498;Set the KeyGenerator for this cache aspect._Default is {@link DefaultKeyGenerator}.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,key,generator,for,this,cache,aspect,default,is,link,default,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1384168190;Set the KeyGenerator for this cache aspect._Default is {@link DefaultKeyGenerator}.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,key,generator,for,this,cache,aspect,default,is,link,default,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1385514795;Set the KeyGenerator for this cache aspect._Default is {@link DefaultKeyGenerator}.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,key,generator,for,this,cache,aspect,default,is,link,default,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1387476957;Set the KeyGenerator for this cache aspect._The default is a {@link SimpleKeyGenerator}.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,key,generator,for,this,cache,aspect,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1395788176;Set the KeyGenerator for this cache aspect._The default is a {@link SimpleKeyGenerator}.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,key,generator,for,this,cache,aspect,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1395790298;Set the KeyGenerator for this cache aspect._The default is a {@link SimpleKeyGenerator}.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,key,generator,for,this,cache,aspect,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1396268127;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1396268274;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1396268765;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1396865240;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1396878069;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1397546081;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1400596774;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1401714051;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1404735499;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1413848647;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1414762650;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1414826808;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1418218451;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1422279854;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1423576035;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1428409663;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1428650451;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1450701275;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1450778724;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1458944925;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1458945978;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1458999130;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1461047077;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1461878203;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1467677340;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1467726769;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1467730834;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1470831642;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1474905889;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1477554435;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1495868221;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1496259743;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1496837955;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1500448076;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1500457438;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator};public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1515970101;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator}.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1518567721;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator}.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1524846222;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator}.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1530174524;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator}.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = keyGenerator__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1531589372;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator}.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = SingletonSupplier.of(keyGenerator)__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,singleton,supplier,of,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1531739054;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator}.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = SingletonSupplier.of(keyGenerator)__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,singleton,supplier,of,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1532431622;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator}.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = SingletonSupplier.of(keyGenerator)__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,singleton,supplier,of,key,generator
CacheAspectSupport -> public void setKeyGenerator(KeyGenerator keyGenerator);1532981251;Set the default {@link KeyGenerator} that this cache aspect should delegate to_if no specific key generator has been set for the operation._<p>The default is a {@link SimpleKeyGenerator}.;public void setKeyGenerator(KeyGenerator keyGenerator) {_		this.keyGenerator = SingletonSupplier.of(keyGenerator)__	};set,the,default,link,key,generator,that,this,cache,aspect,should,delegate,to,if,no,specific,key,generator,has,been,set,for,the,operation,p,the,default,is,a,link,simple,key,generator;public,void,set,key,generator,key,generator,key,generator,this,key,generator,singleton,supplier,of,key,generator
CacheAspectSupport -> @Nullable 	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1495868221;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;@Nullable_	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = CacheOperationExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;nullable,private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,cache,operation,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> @Nullable 	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1496259743;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;@Nullable_	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = CacheOperationExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;nullable,private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,cache,operation,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> @Nullable 	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1496837955;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;@Nullable_	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = CacheOperationExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;nullable,private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,cache,operation,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> @Nullable 	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1500448076;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;@Nullable_	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = CacheOperationExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;nullable,private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,cache,operation,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> @Nullable 	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1500457438;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;@Nullable_	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = CacheOperationExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;nullable,private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,cache,operation,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> @Nullable 	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1515970101;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;@Nullable_	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = CacheOperationExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;nullable,private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,cache,operation,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> @Nullable 	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1518567721;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;@Nullable_	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = CacheOperationExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;nullable,private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,cache,operation,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> @Nullable 	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1524846222;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;@Nullable_	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = CacheOperationExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;nullable,private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,cache,operation,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> @Nullable 	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1530174524;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;@Nullable_	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = CacheOperationExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;nullable,private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,cache,operation,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> @Nullable 	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1531589372;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;@Nullable_	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = CacheOperationExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;nullable,private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,cache,operation,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> @Nullable 	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1531739054;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;@Nullable_	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = CacheOperationExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;nullable,private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,cache,operation,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> @Nullable 	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1532431622;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;@Nullable_	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = CacheOperationExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;nullable,private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,cache,operation,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> @Nullable 	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1532981251;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;@Nullable_	private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = CacheOperationExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;nullable,private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,cache,operation,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1328020251;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1356735495;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1357119239;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1362408075;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1368482696;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1372363092;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1375746308;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1375747549;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1379974498;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1384168190;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1385514795;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1387476957;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1395788176;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1395790298;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1396268127;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1396268274;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1396268765;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1396865240;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1396878069;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1397546081;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1400596774;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1401714051;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1404735499;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1413848647;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1414762650;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1414826808;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1418218451;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1422279854;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1423576035;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1428409663;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1428650451;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1450701275;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1450778724;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1458944925;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1458945978;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1458999130;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1461047077;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1461878203;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1467677340;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1467726769;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1467730834;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1470831642;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1474905889;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1477554435;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1495868221;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> public CacheOperationSource getCacheOperationSource();1496259743;Return the CacheOperationSource for this cache aspect.;public CacheOperationSource getCacheOperationSource() {_		return this.cacheOperationSource__	};return,the,cache,operation,source,for,this,cache,aspect;public,cache,operation,source,get,cache,operation,source,return,this,cache,operation,source
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1395788176;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = ExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1395790298;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = ExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1396268127;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = ExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1396268274;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = ExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1396268765;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = ExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1396865240;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = ExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1396878069;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = ExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1397546081;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = ExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1400596774;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = ExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1401714051;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = ExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1404735499;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = ExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1413848647;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = ExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1414762650;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = ExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1414826808;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = ExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1418218451;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = ExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1422279854;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = ExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1423576035;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = ExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1428409663;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = ExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1428650451;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = ExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1450701275;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = ExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1450778724;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = ExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1458944925;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = ExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1458945978;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = ExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1458999130;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = ExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1461047077;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = ExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1461878203;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = CacheOperationExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,cache,operation,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1467677340;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = CacheOperationExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,cache,operation,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1467726769;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = CacheOperationExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,cache,operation,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1467730834;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = CacheOperationExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,cache,operation,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1470831642;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = CacheOperationExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,cache,operation,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1474905889;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = CacheOperationExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,cache,operation,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts);1477554435;Find a cached item only for {@link CacheableOperation} that passes the condition._@param contexts the cacheable operations_@return a {@link Cache.ValueWrapper} holding the cached item,_or {@code null} if none is found;private Cache.ValueWrapper findCachedItem(Collection<CacheOperationContext> contexts) {_		Object result = CacheOperationExpressionEvaluator.NO_RESULT__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				Cache.ValueWrapper cached = findInCaches(context, key)__				if (cached != null) {_					return cached__				}_				else {_					if (logger.isTraceEnabled()) {_						logger.trace("No cache entry for key '" + key + "' in cache(s) " + context.getCacheNames())__					}_				}_			}_		}_		return null__	};find,a,cached,item,only,for,link,cacheable,operation,that,passes,the,condition,param,contexts,the,cacheable,operations,return,a,link,cache,value,wrapper,holding,the,cached,item,or,code,null,if,none,is,found;private,cache,value,wrapper,find,cached,item,collection,cache,operation,context,contexts,object,result,cache,operation,expression,evaluator,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,cache,value,wrapper,cached,find,in,caches,context,key,if,cached,null,return,cached,else,if,logger,is,trace,enabled,logger,trace,no,cache,entry,for,key,key,in,cache,s,context,get,cache,names,return,null
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1372363092;Computes the key for the given caching operation._@return generated key (null if none can be generated);protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return CacheAspectSupport.this.evaluator.key(this.operation.getKey(), this.method, evaluationContext)__			}_			return CacheAspectSupport.this.keyGenerator.generate(this.target, this.method, this.args)__		};computes,the,key,for,the,given,caching,operation,return,generated,key,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,cache,aspect,support,this,evaluator,key,this,operation,get,key,this,method,evaluation,context,return,cache,aspect,support,this,key,generator,generate,this,target,this,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1375746308;Computes the key for the given caching operation._@return generated key (null if none can be generated);protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.operation.getKey(), this.method, evaluationContext)__			}_			return keyGenerator.generate(this.target, this.method, this.args)__		};computes,the,key,for,the,given,caching,operation,return,generated,key,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,operation,get,key,this,method,evaluation,context,return,key,generator,generate,this,target,this,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1375747549;Computes the key for the given caching operation._@return generated key (null if none can be generated);protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.operation.getKey(), this.method, evaluationContext)__			}_			return keyGenerator.generate(this.target, this.method, this.args)__		};computes,the,key,for,the,given,caching,operation,return,generated,key,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,operation,get,key,this,method,evaluation,context,return,key,generator,generate,this,target,this,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1379974498;Computes the key for the given caching operation._@return generated key (null if none can be generated);protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.operation.getKey(), this.method, evaluationContext)__			}_			return keyGenerator.generate(this.target, this.method, this.args)__		};computes,the,key,for,the,given,caching,operation,return,generated,key,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,operation,get,key,this,method,evaluation,context,return,key,generator,generate,this,target,this,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1384168190;Computes the key for the given caching operation._@return generated key (null if none can be generated);protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.operation.getKey(), this.method, evaluationContext)__			}_			return keyGenerator.generate(this.target, this.method, this.args)__		};computes,the,key,for,the,given,caching,operation,return,generated,key,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,operation,get,key,this,method,evaluation,context,return,key,generator,generate,this,target,this,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1385514795;Computes the key for the given caching operation._@return generated key (null if none can be generated);protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.operation.getKey(), this.method, evaluationContext)__			}_			return keyGenerator.generate(this.target, this.method, this.args)__		};computes,the,key,for,the,given,caching,operation,return,generated,key,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,operation,get,key,this,method,evaluation,context,return,key,generator,generate,this,target,this,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1387476957;Computes the key for the given caching operation._@return generated key (null if none can be generated);protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.operation.getKey(), this.method, evaluationContext)__			}_			return keyGenerator.generate(this.target, this.method, this.args)__		};computes,the,key,for,the,given,caching,operation,return,generated,key,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,operation,get,key,this,method,evaluation,context,return,key,generator,generate,this,target,this,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1395788176;Computes the key for the given caching operation._@return generated key (null if none can be generated);protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.operation.getKey(), this.method, evaluationContext)__			}_			return keyGenerator.generate(this.target, this.method, this.args)__		};computes,the,key,for,the,given,caching,operation,return,generated,key,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,operation,get,key,this,method,evaluation,context,return,key,generator,generate,this,target,this,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1395790298;Computes the key for the given caching operation._@return generated key (null if none can be generated);protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.operation.getKey(), this.method, evaluationContext)__			}_			return keyGenerator.generate(this.target, this.method, this.args)__		};computes,the,key,for,the,given,caching,operation,return,generated,key,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,operation,get,key,this,method,evaluation,context,return,key,generator,generate,this,target,this,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1396268127;Computes the key for the given caching operation._@return generated key (null if none can be generated);protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.operation.getKey(), this.method, evaluationContext)__			}_			return operationKeyGenerator.generate(this.target, this.method, this.args)__		};computes,the,key,for,the,given,caching,operation,return,generated,key,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,operation,get,key,this,method,evaluation,context,return,operation,key,generator,generate,this,target,this,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1396268274;Computes the key for the given caching operation._@return generated key (null if none can be generated);protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.operation.getKey(), this.method, evaluationContext)__			}_			return operationKeyGenerator.generate(this.target, this.method, this.args)__		};computes,the,key,for,the,given,caching,operation,return,generated,key,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,operation,get,key,this,method,evaluation,context,return,operation,key,generator,generate,this,target,this,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1396268765;Computes the key for the given caching operation._@return generated key (null if none can be generated);protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.operation.getKey(), this.method, evaluationContext)__			}_			return operationKeyGenerator.generate(this.target, this.method, this.args)__		};computes,the,key,for,the,given,caching,operation,return,generated,key,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,operation,get,key,this,method,evaluation,context,return,operation,key,generator,generate,this,target,this,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1396865240;Computes the key for the given caching operation._@return generated key (null if none can be generated);protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.operation.getKey(), this.method, evaluationContext)__			}_			return operationKeyGenerator.generate(this.target, this.method, this.args)__		};computes,the,key,for,the,given,caching,operation,return,generated,key,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,operation,get,key,this,method,evaluation,context,return,operation,key,generator,generate,this,target,this,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1396878069;Computes the key for the given caching operation._@return generated key (null if none can be generated);protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.metadata.method, evaluationContext)__			}_			return metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};computes,the,key,for,the,given,caching,operation,return,generated,key,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,metadata,method,evaluation,context,return,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1397546081;Computes the key for the given caching operation._@return generated key (null if none can be generated);protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};computes,the,key,for,the,given,caching,operation,return,generated,key,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1400596774;Computes the key for the given caching operation._@return generated key (null if none can be generated);protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};computes,the,key,for,the,given,caching,operation,return,generated,key,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1401714051;Computes the key for the given caching operation._@return generated key (null if none can be generated);protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};computes,the,key,for,the,given,caching,operation,return,generated,key,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1404735499;Computes the key for the given caching operation._@return generated key (null if none can be generated);protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};computes,the,key,for,the,given,caching,operation,return,generated,key,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1413848647;Computes the key for the given caching operation._@return generated key (null if none can be generated);protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};computes,the,key,for,the,given,caching,operation,return,generated,key,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1414762650;Computes the key for the given caching operation._@return generated key (null if none can be generated);protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};computes,the,key,for,the,given,caching,operation,return,generated,key,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1414826808;Compute the key for the given caching operation._@return the generated key, or {@code null} if none can be generated;protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation,return,the,generated,key,or,code,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1418218451;Compute the key for the given caching operation._@return the generated key, or {@code null} if none can be generated;protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation,return,the,generated,key,or,code,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1422279854;Compute the key for the given caching operation._@return the generated key, or {@code null} if none can be generated;protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation,return,the,generated,key,or,code,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1423576035;Compute the key for the given caching operation._@return the generated key, or {@code null} if none can be generated;protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation,return,the,generated,key,or,code,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1428409663;Compute the key for the given caching operation._@return the generated key, or {@code null} if none can be generated;protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation,return,the,generated,key,or,code,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1428650451;Compute the key for the given caching operation._@return the generated key, or {@code null} if none can be generated;protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation,return,the,generated,key,or,code,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1450701275;Compute the key for the given caching operation._@return the generated key, or {@code null} if none can be generated;protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation,return,the,generated,key,or,code,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1450778724;Compute the key for the given caching operation._@return the generated key, or {@code null} if none can be generated;protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation,return,the,generated,key,or,code,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1458944925;Compute the key for the given caching operation._@return the generated key, or {@code null} if none can be generated;protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation,return,the,generated,key,or,code,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1458945978;Compute the key for the given caching operation._@return the generated key, or {@code null} if none can be generated;protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation,return,the,generated,key,or,code,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1458999130;Compute the key for the given caching operation._@return the generated key, or {@code null} if none can be generated;protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation,return,the,generated,key,or,code,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1461047077;Compute the key for the given caching operation._@return the generated key, or {@code null} if none can be generated;protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation,return,the,generated,key,or,code,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1461878203;Compute the key for the given caching operation._@return the generated key, or {@code null} if none can be generated;protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation,return,the,generated,key,or,code,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1467677340;Compute the key for the given caching operation._@return the generated key, or {@code null} if none can be generated;protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation,return,the,generated,key,or,code,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1467726769;Compute the key for the given caching operation._@return the generated key, or {@code null} if none can be generated;protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation,return,the,generated,key,or,code,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1467730834;Compute the key for the given caching operation._@return the generated key, or {@code null} if none can be generated;protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation,return,the,generated,key,or,code,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1470831642;Compute the key for the given caching operation._@return the generated key, or {@code null} if none can be generated;protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation,return,the,generated,key,or,code,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1474905889;Compute the key for the given caching operation._@return the generated key, or {@code null} if none can be generated;protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation,return,the,generated,key,or,code,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey(Object result);1477554435;Compute the key for the given caching operation._@return the generated key, or {@code null} if none can be generated;protected Object generateKey(Object result) {_			if (StringUtils.hasText(this.metadata.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(result)__				return evaluator.key(this.metadata.operation.getKey(), this.methodCacheKey, evaluationContext)__			}_			return this.metadata.keyGenerator.generate(this.target, this.metadata.method, this.args)__		};compute,the,key,for,the,given,caching,operation,return,the,generated,key,or,code,null,if,none,can,be,generated;protected,object,generate,key,object,result,if,string,utils,has,text,this,metadata,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,result,return,evaluator,key,this,metadata,operation,get,key,this,method,cache,key,evaluation,context,return,this,metadata,key,generator,generate,this,target,this,metadata,method,this,args
CacheAspectSupport -> @Override 	public void setBeanFactory(BeanFactory beanFactory);1461878203;Set the containing {@link BeanFactory} for {@link CacheManager} and other_service lookups._@since 4.3;@Override_	public void setBeanFactory(BeanFactory beanFactory) {_		this.beanFactory = beanFactory__	};set,the,containing,link,bean,factory,for,link,cache,manager,and,other,service,lookups,since,4,3;override,public,void,set,bean,factory,bean,factory,bean,factory,this,bean,factory,bean,factory
CacheAspectSupport -> @Override 	public void setBeanFactory(BeanFactory beanFactory);1467677340;Set the containing {@link BeanFactory} for {@link CacheManager} and other_service lookups._@since 4.3;@Override_	public void setBeanFactory(BeanFactory beanFactory) {_		this.beanFactory = beanFactory__	};set,the,containing,link,bean,factory,for,link,cache,manager,and,other,service,lookups,since,4,3;override,public,void,set,bean,factory,bean,factory,bean,factory,this,bean,factory,bean,factory
CacheAspectSupport -> @Override 	public void setBeanFactory(BeanFactory beanFactory);1467726769;Set the containing {@link BeanFactory} for {@link CacheManager} and other_service lookups._@since 4.3;@Override_	public void setBeanFactory(BeanFactory beanFactory) {_		this.beanFactory = beanFactory__	};set,the,containing,link,bean,factory,for,link,cache,manager,and,other,service,lookups,since,4,3;override,public,void,set,bean,factory,bean,factory,bean,factory,this,bean,factory,bean,factory
CacheAspectSupport -> @Override 	public void setBeanFactory(BeanFactory beanFactory);1467730834;Set the containing {@link BeanFactory} for {@link CacheManager} and other_service lookups._@since 4.3;@Override_	public void setBeanFactory(BeanFactory beanFactory) {_		this.beanFactory = beanFactory__	};set,the,containing,link,bean,factory,for,link,cache,manager,and,other,service,lookups,since,4,3;override,public,void,set,bean,factory,bean,factory,bean,factory,this,bean,factory,bean,factory
CacheAspectSupport -> @Override 	public void setBeanFactory(BeanFactory beanFactory);1470831642;Set the containing {@link BeanFactory} for {@link CacheManager} and other_service lookups._@since 4.3;@Override_	public void setBeanFactory(BeanFactory beanFactory) {_		this.beanFactory = beanFactory__	};set,the,containing,link,bean,factory,for,link,cache,manager,and,other,service,lookups,since,4,3;override,public,void,set,bean,factory,bean,factory,bean,factory,this,bean,factory,bean,factory
CacheAspectSupport -> @Override 	public void setBeanFactory(BeanFactory beanFactory);1474905889;Set the containing {@link BeanFactory} for {@link CacheManager} and other_service lookups._@since 4.3;@Override_	public void setBeanFactory(BeanFactory beanFactory) {_		this.beanFactory = beanFactory__	};set,the,containing,link,bean,factory,for,link,cache,manager,and,other,service,lookups,since,4,3;override,public,void,set,bean,factory,bean,factory,bean,factory,this,bean,factory,bean,factory
CacheAspectSupport -> @Override 	public void setBeanFactory(BeanFactory beanFactory);1477554435;Set the containing {@link BeanFactory} for {@link CacheManager} and other_service lookups._@since 4.3;@Override_	public void setBeanFactory(BeanFactory beanFactory) {_		this.beanFactory = beanFactory__	};set,the,containing,link,bean,factory,for,link,cache,manager,and,other,service,lookups,since,4,3;override,public,void,set,bean,factory,bean,factory,bean,factory,this,bean,factory,bean,factory
CacheAspectSupport -> @Override 	public void setBeanFactory(BeanFactory beanFactory);1495868221;Set the containing {@link BeanFactory} for {@link CacheManager} and other_service lookups._@since 4.3;@Override_	public void setBeanFactory(BeanFactory beanFactory) {_		this.beanFactory = beanFactory__	};set,the,containing,link,bean,factory,for,link,cache,manager,and,other,service,lookups,since,4,3;override,public,void,set,bean,factory,bean,factory,bean,factory,this,bean,factory,bean,factory
CacheAspectSupport -> @Override 	public void setBeanFactory(BeanFactory beanFactory);1496259743;Set the containing {@link BeanFactory} for {@link CacheManager} and other_service lookups._@since 4.3;@Override_	public void setBeanFactory(BeanFactory beanFactory) {_		this.beanFactory = beanFactory__	};set,the,containing,link,bean,factory,for,link,cache,manager,and,other,service,lookups,since,4,3;override,public,void,set,bean,factory,bean,factory,bean,factory,this,bean,factory,bean,factory
CacheAspectSupport -> @Override 	public void setBeanFactory(BeanFactory beanFactory);1496837955;Set the containing {@link BeanFactory} for {@link CacheManager} and other_service lookups._@since 4.3;@Override_	public void setBeanFactory(BeanFactory beanFactory) {_		this.beanFactory = beanFactory__	};set,the,containing,link,bean,factory,for,link,cache,manager,and,other,service,lookups,since,4,3;override,public,void,set,bean,factory,bean,factory,bean,factory,this,bean,factory,bean,factory
CacheAspectSupport -> @Override 	public void setBeanFactory(BeanFactory beanFactory);1500448076;Set the containing {@link BeanFactory} for {@link CacheManager} and other_service lookups._@since 4.3;@Override_	public void setBeanFactory(BeanFactory beanFactory) {_		this.beanFactory = beanFactory__	};set,the,containing,link,bean,factory,for,link,cache,manager,and,other,service,lookups,since,4,3;override,public,void,set,bean,factory,bean,factory,bean,factory,this,bean,factory,bean,factory
CacheAspectSupport -> @Override 	public void setBeanFactory(BeanFactory beanFactory);1500457438;Set the containing {@link BeanFactory} for {@link CacheManager} and other_service lookups._@since 4.3;@Override_	public void setBeanFactory(BeanFactory beanFactory) {_		this.beanFactory = beanFactory__	};set,the,containing,link,bean,factory,for,link,cache,manager,and,other,service,lookups,since,4,3;override,public,void,set,bean,factory,bean,factory,bean,factory,this,bean,factory,bean,factory
CacheAspectSupport -> @Override 	public void setBeanFactory(BeanFactory beanFactory);1515970101;Set the containing {@link BeanFactory} for {@link CacheManager} and other_service lookups._@since 4.3;@Override_	public void setBeanFactory(BeanFactory beanFactory) {_		this.beanFactory = beanFactory__	};set,the,containing,link,bean,factory,for,link,cache,manager,and,other,service,lookups,since,4,3;override,public,void,set,bean,factory,bean,factory,bean,factory,this,bean,factory,bean,factory
CacheAspectSupport -> @Override 	public void setBeanFactory(BeanFactory beanFactory);1518567721;Set the containing {@link BeanFactory} for {@link CacheManager} and other_service lookups._@since 4.3;@Override_	public void setBeanFactory(BeanFactory beanFactory) {_		this.beanFactory = beanFactory__	};set,the,containing,link,bean,factory,for,link,cache,manager,and,other,service,lookups,since,4,3;override,public,void,set,bean,factory,bean,factory,bean,factory,this,bean,factory,bean,factory
CacheAspectSupport -> @Override 	public void setBeanFactory(BeanFactory beanFactory);1524846222;Set the containing {@link BeanFactory} for {@link CacheManager} and other_service lookups._@since 4.3;@Override_	public void setBeanFactory(BeanFactory beanFactory) {_		this.beanFactory = beanFactory__	};set,the,containing,link,bean,factory,for,link,cache,manager,and,other,service,lookups,since,4,3;override,public,void,set,bean,factory,bean,factory,bean,factory,this,bean,factory,bean,factory
CacheAspectSupport -> @Override 	public void setBeanFactory(BeanFactory beanFactory);1530174524;Set the containing {@link BeanFactory} for {@link CacheManager} and other_service lookups._@since 4.3;@Override_	public void setBeanFactory(BeanFactory beanFactory) {_		this.beanFactory = beanFactory__	};set,the,containing,link,bean,factory,for,link,cache,manager,and,other,service,lookups,since,4,3;override,public,void,set,bean,factory,bean,factory,bean,factory,this,bean,factory,bean,factory
CacheAspectSupport -> @Override 	public void setBeanFactory(BeanFactory beanFactory);1531589372;Set the containing {@link BeanFactory} for {@link CacheManager} and other_service lookups._@since 4.3;@Override_	public void setBeanFactory(BeanFactory beanFactory) {_		this.beanFactory = beanFactory__	};set,the,containing,link,bean,factory,for,link,cache,manager,and,other,service,lookups,since,4,3;override,public,void,set,bean,factory,bean,factory,bean,factory,this,bean,factory,bean,factory
CacheAspectSupport -> @Override 	public void setBeanFactory(BeanFactory beanFactory);1531739054;Set the containing {@link BeanFactory} for {@link CacheManager} and other_service lookups._@since 4.3;@Override_	public void setBeanFactory(BeanFactory beanFactory) {_		this.beanFactory = beanFactory__	};set,the,containing,link,bean,factory,for,link,cache,manager,and,other,service,lookups,since,4,3;override,public,void,set,bean,factory,bean,factory,bean,factory,this,bean,factory,bean,factory
CacheAspectSupport -> @Override 	public void setBeanFactory(BeanFactory beanFactory);1532431622;Set the containing {@link BeanFactory} for {@link CacheManager} and other_service lookups._@since 4.3;@Override_	public void setBeanFactory(BeanFactory beanFactory) {_		this.beanFactory = beanFactory__	};set,the,containing,link,bean,factory,for,link,cache,manager,and,other,service,lookups,since,4,3;override,public,void,set,bean,factory,bean,factory,bean,factory,this,bean,factory,bean,factory
CacheAspectSupport -> @Override 	public void setBeanFactory(BeanFactory beanFactory);1532981251;Set the containing {@link BeanFactory} for {@link CacheManager} and other_service lookups._@since 4.3;@Override_	public void setBeanFactory(BeanFactory beanFactory) {_		this.beanFactory = beanFactory__	};set,the,containing,link,bean,factory,for,link,cache,manager,and,other,service,lookups,since,4,3;override,public,void,set,bean,factory,bean,factory,bean,factory,this,bean,factory,bean,factory
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1328020251;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated using a_{@link CompositeCacheOperationSource}._@param cacheOperationSources must not be {@code null};public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources)__		this.cacheOperationSource =_				(cacheOperationSources.length > 1 ?_						new CompositeCacheOperationSource(cacheOperationSources) :_						cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,param,cache,operation,sources,must,not,be,code,null;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1356735495;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated using a_{@link CompositeCacheOperationSource}._@param cacheOperationSources must not be {@code null};public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources)__		this.cacheOperationSource =_				(cacheOperationSources.length > 1 ?_						new CompositeCacheOperationSource(cacheOperationSources) :_						cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,param,cache,operation,sources,must,not,be,code,null;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1357119239;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated using a_{@link CompositeCacheOperationSource}._@param cacheOperationSources must not be {@code null};public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources)__		this.cacheOperationSource =_				(cacheOperationSources.length > 1 ?_						new CompositeCacheOperationSource(cacheOperationSources) :_						cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,param,cache,operation,sources,must,not,be,code,null;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1362408075;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated using a_{@link CompositeCacheOperationSource}._@param cacheOperationSources must not be {@code null};public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources)__		this.cacheOperationSource =_				(cacheOperationSources.length > 1 ?_						new CompositeCacheOperationSource(cacheOperationSources) :_						cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,param,cache,operation,sources,must,not,be,code,null;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1368482696;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated using a_{@link CompositeCacheOperationSource}._@param cacheOperationSources must not be {@code null};public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources)__		this.cacheOperationSource =_				(cacheOperationSources.length > 1 ?_						new CompositeCacheOperationSource(cacheOperationSources) :_						cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,param,cache,operation,sources,must,not,be,code,null;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1372363092;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated using a_{@link CompositeCacheOperationSource}._@param cacheOperationSources must not be {@code null};public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources)__		this.cacheOperationSource =_				(cacheOperationSources.length > 1 ?_						new CompositeCacheOperationSource(cacheOperationSources) :_						cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,param,cache,operation,sources,must,not,be,code,null;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1375746308;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated using a_{@link CompositeCacheOperationSource}._@param cacheOperationSources must not be {@code null};public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources)__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,param,cache,operation,sources,must,not,be,code,null;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1375747549;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated using a_{@link CompositeCacheOperationSource}._@param cacheOperationSources must not be {@code null};public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources)__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,param,cache,operation,sources,must,not,be,code,null;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1379974498;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated using a_{@link CompositeCacheOperationSource}._@param cacheOperationSources must not be {@code null};public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources)__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,param,cache,operation,sources,must,not,be,code,null;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1384168190;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated using a_{@link CompositeCacheOperationSource}._@param cacheOperationSources must not be {@code null};public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources)__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,param,cache,operation,sources,must,not,be,code,null;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1385514795;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated using a_{@link CompositeCacheOperationSource}._@param cacheOperationSources must not be {@code null};public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources)__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,param,cache,operation,sources,must,not,be,code,null;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1387476957;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated using a_{@link CompositeCacheOperationSource}._@param cacheOperationSources must not be {@code null};public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources)__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,param,cache,operation,sources,must,not,be,code,null;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1395788176;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated using a_{@link CompositeCacheOperationSource}._@param cacheOperationSources must not be {@code null};public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources)__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,param,cache,operation,sources,must,not,be,code,null;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1395790298;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated using a_{@link CompositeCacheOperationSource}._@param cacheOperationSources must not be {@code null};public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,param,cache,operation,sources,must,not,be,code,null;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1396268127;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated using a_{@link CompositeCacheOperationSource}._@param cacheOperationSources must not be {@code null};public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,param,cache,operation,sources,must,not,be,code,null;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1396268274;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated using a_{@link CompositeCacheOperationSource}._@param cacheOperationSources must not be {@code null};public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,param,cache,operation,sources,must,not,be,code,null;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1396268765;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated using a_{@link CompositeCacheOperationSource}._@param cacheOperationSources must not be {@code null};public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,param,cache,operation,sources,must,not,be,code,null;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1396865240;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated using a_{@link CompositeCacheOperationSource}._@param cacheOperationSources must not be {@code null};public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,param,cache,operation,sources,must,not,be,code,null;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1396878069;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated using a_{@link CompositeCacheOperationSource}._@param cacheOperationSources must not be {@code null};public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,param,cache,operation,sources,must,not,be,code,null;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1397546081;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated using a_{@link CompositeCacheOperationSource}._@param cacheOperationSources must not be {@code null};public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,param,cache,operation,sources,must,not,be,code,null;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1400596774;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated using a_{@link CompositeCacheOperationSource}._@param cacheOperationSources must not be {@code null};public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,param,cache,operation,sources,must,not,be,code,null;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1401714051;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated using a_{@link CompositeCacheOperationSource}._@param cacheOperationSources must not be {@code null};public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,param,cache,operation,sources,must,not,be,code,null;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1404735499;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated using a_{@link CompositeCacheOperationSource}._@param cacheOperationSources must not be {@code null};public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,param,cache,operation,sources,must,not,be,code,null;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1413848647;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated using a_{@link CompositeCacheOperationSource}._@param cacheOperationSources must not be {@code null};public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,param,cache,operation,sources,must,not,be,code,null;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1414762650;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated using a_{@link CompositeCacheOperationSource}._@param cacheOperationSources must not be {@code null};public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,param,cache,operation,sources,must,not,be,code,null;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1414826808;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1418218451;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1422279854;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1423576035;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1428409663;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1428650451;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1450701275;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1450778724;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1458944925;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1458945978;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1458999130;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1461047077;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1461878203;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1467677340;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1467726769;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1467730834;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1470831642;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1474905889;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1477554435;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1495868221;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1496259743;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1496837955;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1500448076;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1500457438;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1515970101;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1518567721;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1524846222;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1530174524;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}.;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1531589372;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}._@see #setCacheOperationSource;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,see,set,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1531739054;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}._@see #setCacheOperationSource;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,see,set,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1532431622;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}._@see #setCacheOperationSource;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,see,set,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> public void setCacheOperationSources(CacheOperationSource... cacheOperationSources);1532981251;Set one or more cache operation sources which are used to find the cache_attributes. If more than one source is provided, they will be aggregated_using a {@link CompositeCacheOperationSource}._@see #setCacheOperationSource;public void setCacheOperationSources(CacheOperationSource... cacheOperationSources) {_		Assert.notEmpty(cacheOperationSources, "At least 1 CacheOperationSource needs to be specified")__		this.cacheOperationSource = (cacheOperationSources.length > 1 ?_				new CompositeCacheOperationSource(cacheOperationSources) : cacheOperationSources[0])__	};set,one,or,more,cache,operation,sources,which,are,used,to,find,the,cache,attributes,if,more,than,one,source,is,provided,they,will,be,aggregated,using,a,link,composite,cache,operation,source,see,set,cache,operation,source;public,void,set,cache,operation,sources,cache,operation,source,cache,operation,sources,assert,not,empty,cache,operation,sources,at,least,1,cache,operation,source,needs,to,be,specified,this,cache,operation,source,cache,operation,sources,length,1,new,composite,cache,operation,source,cache,operation,sources,cache,operation,sources,0
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey();1328020251;Computes the key for the given caching operation._@return generated key (null if none can be generated);protected Object generateKey() {_			if (StringUtils.hasText(this.operation.getKey())) {_				return evaluator.key(this.operation.getKey(), this.method, this.evalContext)__			}_			return keyGenerator.generate(this.target, this.method, this.args)__		};computes,the,key,for,the,given,caching,operation,return,generated,key,null,if,none,can,be,generated;protected,object,generate,key,if,string,utils,has,text,this,operation,get,key,return,evaluator,key,this,operation,get,key,this,method,this,eval,context,return,key,generator,generate,this,target,this,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey();1356735495;Computes the key for the given caching operation._@return generated key (null if none can be generated);protected Object generateKey() {_			if (StringUtils.hasText(this.operation.getKey())) {_				return evaluator.key(this.operation.getKey(), this.method, this.evalContext)__			}_			return keyGenerator.generate(this.target, this.method, this.args)__		};computes,the,key,for,the,given,caching,operation,return,generated,key,null,if,none,can,be,generated;protected,object,generate,key,if,string,utils,has,text,this,operation,get,key,return,evaluator,key,this,operation,get,key,this,method,this,eval,context,return,key,generator,generate,this,target,this,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey();1357119239;Computes the key for the given caching operation._@return generated key (null if none can be generated);protected Object generateKey() {_			if (StringUtils.hasText(this.operation.getKey())) {_				return evaluator.key(this.operation.getKey(), this.method, this.evalContext)__			}_			return keyGenerator.generate(this.target, this.method, this.args)__		};computes,the,key,for,the,given,caching,operation,return,generated,key,null,if,none,can,be,generated;protected,object,generate,key,if,string,utils,has,text,this,operation,get,key,return,evaluator,key,this,operation,get,key,this,method,this,eval,context,return,key,generator,generate,this,target,this,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey();1362408075;Computes the key for the given caching operation._@return generated key (null if none can be generated);protected Object generateKey() {_			if (StringUtils.hasText(this.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(ExpressionEvaluator.NO_RESULT)__				return evaluator.key(this.operation.getKey(), this.method, evaluationContext)__			}_			return keyGenerator.generate(this.target, this.method, this.args)__		};computes,the,key,for,the,given,caching,operation,return,generated,key,null,if,none,can,be,generated;protected,object,generate,key,if,string,utils,has,text,this,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,expression,evaluator,return,evaluator,key,this,operation,get,key,this,method,evaluation,context,return,key,generator,generate,this,target,this,method,this,args
CacheAspectSupport -> CacheOperationContext -> protected Object generateKey();1368482696;Computes the key for the given caching operation._@return generated key (null if none can be generated);protected Object generateKey() {_			if (StringUtils.hasText(this.operation.getKey())) {_				EvaluationContext evaluationContext = createEvaluationContext(ExpressionEvaluator.NO_RESULT)__				return evaluator.key(this.operation.getKey(), this.method, evaluationContext)__			}_			return keyGenerator.generate(this.target, this.method, this.args)__		};computes,the,key,for,the,given,caching,operation,return,generated,key,null,if,none,can,be,generated;protected,object,generate,key,if,string,utils,has,text,this,operation,get,key,evaluation,context,evaluation,context,create,evaluation,context,expression,evaluator,return,evaluator,key,this,operation,get,key,this,method,evaluation,context,return,key,generator,generate,this,target,this,method,this,args
CacheAspectSupport -> public CacheManager getCacheManager();1328020251;Return the CacheManager that this cache aspect delegates to.;public CacheManager getCacheManager() {_		return this.cacheManager__	};return,the,cache,manager,that,this,cache,aspect,delegates,to;public,cache,manager,get,cache,manager,return,this,cache,manager
CacheAspectSupport -> public CacheManager getCacheManager();1356735495;Return the CacheManager that this cache aspect delegates to.;public CacheManager getCacheManager() {_		return this.cacheManager__	};return,the,cache,manager,that,this,cache,aspect,delegates,to;public,cache,manager,get,cache,manager,return,this,cache,manager
CacheAspectSupport -> public CacheManager getCacheManager();1357119239;Return the CacheManager that this cache aspect delegates to.;public CacheManager getCacheManager() {_		return this.cacheManager__	};return,the,cache,manager,that,this,cache,aspect,delegates,to;public,cache,manager,get,cache,manager,return,this,cache,manager
CacheAspectSupport -> public CacheManager getCacheManager();1362408075;Return the CacheManager that this cache aspect delegates to.;public CacheManager getCacheManager() {_		return this.cacheManager__	};return,the,cache,manager,that,this,cache,aspect,delegates,to;public,cache,manager,get,cache,manager,return,this,cache,manager
CacheAspectSupport -> public CacheManager getCacheManager();1368482696;Return the CacheManager that this cache aspect delegates to.;public CacheManager getCacheManager() {_		return this.cacheManager__	};return,the,cache,manager,that,this,cache,aspect,delegates,to;public,cache,manager,get,cache,manager,return,this,cache,manager
CacheAspectSupport -> public CacheManager getCacheManager();1372363092;Return the CacheManager that this cache aspect delegates to.;public CacheManager getCacheManager() {_		return this.cacheManager__	};return,the,cache,manager,that,this,cache,aspect,delegates,to;public,cache,manager,get,cache,manager,return,this,cache,manager
CacheAspectSupport -> public CacheManager getCacheManager();1375746308;Return the CacheManager that this cache aspect delegates to.;public CacheManager getCacheManager() {_		return this.cacheManager__	};return,the,cache,manager,that,this,cache,aspect,delegates,to;public,cache,manager,get,cache,manager,return,this,cache,manager
CacheAspectSupport -> public CacheManager getCacheManager();1375747549;Return the CacheManager that this cache aspect delegates to.;public CacheManager getCacheManager() {_		return this.cacheManager__	};return,the,cache,manager,that,this,cache,aspect,delegates,to;public,cache,manager,get,cache,manager,return,this,cache,manager
CacheAspectSupport -> public CacheManager getCacheManager();1379974498;Return the CacheManager that this cache aspect delegates to.;public CacheManager getCacheManager() {_		return this.cacheManager__	};return,the,cache,manager,that,this,cache,aspect,delegates,to;public,cache,manager,get,cache,manager,return,this,cache,manager
CacheAspectSupport -> public CacheManager getCacheManager();1384168190;Return the CacheManager that this cache aspect delegates to.;public CacheManager getCacheManager() {_		return this.cacheManager__	};return,the,cache,manager,that,this,cache,aspect,delegates,to;public,cache,manager,get,cache,manager,return,this,cache,manager
CacheAspectSupport -> public CacheManager getCacheManager();1385514795;Return the CacheManager that this cache aspect delegates to.;public CacheManager getCacheManager() {_		return this.cacheManager__	};return,the,cache,manager,that,this,cache,aspect,delegates,to;public,cache,manager,get,cache,manager,return,this,cache,manager
CacheAspectSupport -> public CacheManager getCacheManager();1387476957;Return the CacheManager that this cache aspect delegates to.;public CacheManager getCacheManager() {_		return this.cacheManager__	};return,the,cache,manager,that,this,cache,aspect,delegates,to;public,cache,manager,get,cache,manager,return,this,cache,manager
CacheAspectSupport -> public CacheManager getCacheManager();1395788176;Return the CacheManager that this cache aspect delegates to.;public CacheManager getCacheManager() {_		return this.cacheManager__	};return,the,cache,manager,that,this,cache,aspect,delegates,to;public,cache,manager,get,cache,manager,return,this,cache,manager
CacheAspectSupport -> public CacheManager getCacheManager();1395790298;Return the CacheManager that this cache aspect delegates to.;public CacheManager getCacheManager() {_		return this.cacheManager__	};return,the,cache,manager,that,this,cache,aspect,delegates,to;public,cache,manager,get,cache,manager,return,this,cache,manager
CacheAspectSupport -> public CacheManager getCacheManager();1396268127;Return the CacheManager that this cache aspect delegates to.;public CacheManager getCacheManager() {_		return this.cacheManager__	};return,the,cache,manager,that,this,cache,aspect,delegates,to;public,cache,manager,get,cache,manager,return,this,cache,manager
CacheAspectSupport -> public CacheManager getCacheManager();1396268274;Return the default {@link CacheManager} that this cache aspect delegates to.;public CacheManager getCacheManager() {_		return this.cacheManager__	};return,the,default,link,cache,manager,that,this,cache,aspect,delegates,to;public,cache,manager,get,cache,manager,return,this,cache,manager
CacheAspectSupport -> public CacheManager getCacheManager();1396268765;Return the default {@link CacheManager} that this cache aspect delegates to.;public CacheManager getCacheManager() {_		return this.cacheManager__	};return,the,default,link,cache,manager,that,this,cache,aspect,delegates,to;public,cache,manager,get,cache,manager,return,this,cache,manager
CacheAspectSupport -> public CacheManager getCacheManager();1396865240;Return the default {@link CacheManager} that this cache aspect delegates to.;public CacheManager getCacheManager() {_		return this.cacheManager__	};return,the,default,link,cache,manager,that,this,cache,aspect,delegates,to;public,cache,manager,get,cache,manager,return,this,cache,manager
CacheAspectSupport -> public void setCacheResolver(@Nullable CacheResolver cacheResolver);1500448076;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(@Nullable CacheResolver cacheResolver) {_		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,nullable,cache,resolver,cache,resolver,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(@Nullable CacheResolver cacheResolver);1500457438;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(@Nullable CacheResolver cacheResolver) {_		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,nullable,cache,resolver,cache,resolver,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(@Nullable CacheResolver cacheResolver);1515970101;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager_@see SimpleCacheResolver;public void setCacheResolver(@Nullable CacheResolver cacheResolver) {_		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,nullable,cache,resolver,cache,resolver,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(@Nullable CacheResolver cacheResolver);1518567721;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager_@see SimpleCacheResolver;public void setCacheResolver(@Nullable CacheResolver cacheResolver) {_		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,nullable,cache,resolver,cache,resolver,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(@Nullable CacheResolver cacheResolver);1524846222;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager_@see SimpleCacheResolver;public void setCacheResolver(@Nullable CacheResolver cacheResolver) {_		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,nullable,cache,resolver,cache,resolver,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(@Nullable CacheResolver cacheResolver);1530174524;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager_@see SimpleCacheResolver;public void setCacheResolver(@Nullable CacheResolver cacheResolver) {_		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,nullable,cache,resolver,cache,resolver,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(@Nullable CacheResolver cacheResolver);1531589372;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager_@see SimpleCacheResolver;public void setCacheResolver(@Nullable CacheResolver cacheResolver) {_		this.cacheResolver = SingletonSupplier.ofNullable(cacheResolver)__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,nullable,cache,resolver,cache,resolver,this,cache,resolver,singleton,supplier,of,nullable,cache,resolver
CacheAspectSupport -> public void setCacheResolver(@Nullable CacheResolver cacheResolver);1531739054;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager_@see SimpleCacheResolver;public void setCacheResolver(@Nullable CacheResolver cacheResolver) {_		this.cacheResolver = SingletonSupplier.ofNullable(cacheResolver)__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,nullable,cache,resolver,cache,resolver,this,cache,resolver,singleton,supplier,of,nullable,cache,resolver
CacheAspectSupport -> public void setCacheResolver(@Nullable CacheResolver cacheResolver);1532431622;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager_@see SimpleCacheResolver;public void setCacheResolver(@Nullable CacheResolver cacheResolver) {_		this.cacheResolver = SingletonSupplier.ofNullable(cacheResolver)__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,nullable,cache,resolver,cache,resolver,this,cache,resolver,singleton,supplier,of,nullable,cache,resolver
CacheAspectSupport -> public void setCacheResolver(@Nullable CacheResolver cacheResolver);1532981251;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager_@see SimpleCacheResolver;public void setCacheResolver(@Nullable CacheResolver cacheResolver) {_		this.cacheResolver = SingletonSupplier.ofNullable(cacheResolver)__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,nullable,cache,resolver,cache,resolver,this,cache,resolver,singleton,supplier,of,nullable,cache,resolver
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			@Nullable Object result, Collection<CachePutRequest> putRequests);1496837955;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			@Nullable Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,nullable,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			@Nullable Object result, Collection<CachePutRequest> putRequests);1500448076;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			@Nullable Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,nullable,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			@Nullable Object result, Collection<CachePutRequest> putRequests);1500457438;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			@Nullable Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,nullable,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			@Nullable Object result, Collection<CachePutRequest> putRequests);1515970101;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			@Nullable Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,nullable,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			@Nullable Object result, Collection<CachePutRequest> putRequests);1518567721;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			@Nullable Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,nullable,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			@Nullable Object result, Collection<CachePutRequest> putRequests);1524846222;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			@Nullable Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,nullable,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			@Nullable Object result, Collection<CachePutRequest> putRequests);1530174524;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			@Nullable Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,nullable,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			@Nullable Object result, Collection<CachePutRequest> putRequests);1531589372;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			@Nullable Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,nullable,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			@Nullable Object result, Collection<CachePutRequest> putRequests);1531739054;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			@Nullable Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,nullable,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			@Nullable Object result, Collection<CachePutRequest> putRequests);1532431622;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			@Nullable Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,nullable,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			@Nullable Object result, Collection<CachePutRequest> putRequests);1532981251;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			@Nullable Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,nullable,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1328020251;Set the CacheManager that this cache aspect should delegate to.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,cache,manager,that,this,cache,aspect,should,delegate,to;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1356735495;Set the CacheManager that this cache aspect should delegate to.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,cache,manager,that,this,cache,aspect,should,delegate,to;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1357119239;Set the CacheManager that this cache aspect should delegate to.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,cache,manager,that,this,cache,aspect,should,delegate,to;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1362408075;Set the CacheManager that this cache aspect should delegate to.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,cache,manager,that,this,cache,aspect,should,delegate,to;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1368482696;Set the CacheManager that this cache aspect should delegate to.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,cache,manager,that,this,cache,aspect,should,delegate,to;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1372363092;Set the CacheManager that this cache aspect should delegate to.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,cache,manager,that,this,cache,aspect,should,delegate,to;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1375746308;Set the CacheManager that this cache aspect should delegate to.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,cache,manager,that,this,cache,aspect,should,delegate,to;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1375747549;Set the CacheManager that this cache aspect should delegate to.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,cache,manager,that,this,cache,aspect,should,delegate,to;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1379974498;Set the CacheManager that this cache aspect should delegate to.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,cache,manager,that,this,cache,aspect,should,delegate,to;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1384168190;Set the CacheManager that this cache aspect should delegate to.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,cache,manager,that,this,cache,aspect,should,delegate,to;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1385514795;Set the CacheManager that this cache aspect should delegate to.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,cache,manager,that,this,cache,aspect,should,delegate,to;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1387476957;Set the CacheManager that this cache aspect should delegate to.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,cache,manager,that,this,cache,aspect,should,delegate,to;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1395788176;Set the CacheManager that this cache aspect should delegate to.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,cache,manager,that,this,cache,aspect,should,delegate,to;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1395790298;Set the CacheManager that this cache aspect should delegate to.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,cache,manager,that,this,cache,aspect,should,delegate,to;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1396268127;Set the CacheManager that this cache aspect should delegate to.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,cache,manager,that,this,cache,aspect,should,delegate,to;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1396268274;Set the default {@link CacheManager} that this cache aspect should delegate to_if no specific cache manager has been set for the operation.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,default,link,cache,manager,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,manager,has,been,set,for,the,operation;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1396268765;Set the default {@link CacheManager} that this cache aspect should delegate to_if no specific cache manager has been set for the operation.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,default,link,cache,manager,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,manager,has,been,set,for,the,operation;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1396865240;Set the default {@link CacheManager} that this cache aspect should delegate to_if no specific cache manager has been set for the operation.;public void setCacheManager(CacheManager cacheManager) {_		this.cacheManager = cacheManager__	};set,the,default,link,cache,manager,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,manager,has,been,set,for,the,operation;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,manager,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1396878069;Set the {@link CacheManager} to use to create a default {@link CacheResolver}. Replace_the current {@link CacheResolver}, if any.__@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1397546081;Set the {@link CacheManager} to use to create a default {@link CacheResolver}. Replace_the current {@link CacheResolver}, if any.__@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1400596774;Set the {@link CacheManager} to use to create a default {@link CacheResolver}. Replace_the current {@link CacheResolver}, if any.__@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1401714051;Set the {@link CacheManager} to use to create a default {@link CacheResolver}. Replace_the current {@link CacheResolver}, if any.__@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1404735499;Set the {@link CacheManager} to use to create a default {@link CacheResolver}. Replace_the current {@link CacheResolver}, if any.__@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1413848647;Set the {@link CacheManager} to use to create a default {@link CacheResolver}. Replace_the current {@link CacheResolver}, if any.__@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1414762650;Set the {@link CacheManager} to use to create a default {@link CacheResolver}. Replace_the current {@link CacheResolver}, if any.__@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1414826808;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1418218451;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1422279854;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1423576035;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1428409663;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1428650451;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1450701275;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1450778724;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1458944925;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1458945978;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1458999130;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1461047077;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1461878203;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1467677340;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1467726769;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1467730834;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1470831642;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1474905889;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1477554435;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1495868221;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1496259743;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1496837955;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1500448076;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1500457438;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver(CacheResolver)_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1515970101;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1518567721;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1524846222;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1530174524;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = new SimpleCacheResolver(cacheManager)__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1531589372;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = SingletonSupplier.of(new SimpleCacheResolver(cacheManager))__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,singleton,supplier,of,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1531739054;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = SingletonSupplier.of(new SimpleCacheResolver(cacheManager))__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,singleton,supplier,of,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1532431622;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = SingletonSupplier.of(new SimpleCacheResolver(cacheManager))__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,singleton,supplier,of,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheManager(CacheManager cacheManager);1532981251;Set the {@link CacheManager} to use to create a default {@link CacheResolver}._Replace the current {@link CacheResolver}, if any._@see #setCacheResolver_@see SimpleCacheResolver;public void setCacheManager(CacheManager cacheManager) {_		this.cacheResolver = SingletonSupplier.of(new SimpleCacheResolver(cacheManager))__	};set,the,link,cache,manager,to,use,to,create,a,default,link,cache,resolver,replace,the,current,link,cache,resolver,if,any,see,set,cache,resolver,see,simple,cache,resolver;public,void,set,cache,manager,cache,manager,cache,manager,this,cache,resolver,singleton,supplier,of,new,simple,cache,resolver,cache,manager
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1396878069;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver)__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1397546081;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver)__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1400596774;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver)__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1401714051;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver)__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1404735499;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver)__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1413848647;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver)__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1414762650;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver)__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1414826808;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver, "CacheResolver must not be null")__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,cache,resolver,must,not,be,null,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1418218451;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver, "CacheResolver must not be null")__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,cache,resolver,must,not,be,null,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1422279854;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver, "CacheResolver must not be null")__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,cache,resolver,must,not,be,null,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1423576035;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver, "CacheResolver must not be null")__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,cache,resolver,must,not,be,null,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1428409663;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver, "CacheResolver must not be null")__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,cache,resolver,must,not,be,null,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1428650451;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver, "CacheResolver must not be null")__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,cache,resolver,must,not,be,null,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1450701275;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver, "CacheResolver must not be null")__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,cache,resolver,must,not,be,null,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1450778724;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver, "CacheResolver must not be null")__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,cache,resolver,must,not,be,null,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1458944925;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver, "CacheResolver must not be null")__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,cache,resolver,must,not,be,null,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1458945978;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver, "CacheResolver must not be null")__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,cache,resolver,must,not,be,null,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1458999130;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver, "CacheResolver must not be null")__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,cache,resolver,must,not,be,null,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1461047077;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver, "CacheResolver must not be null")__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,cache,resolver,must,not,be,null,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1461878203;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver, "CacheResolver must not be null")__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,cache,resolver,must,not,be,null,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1467677340;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver, "CacheResolver must not be null")__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,cache,resolver,must,not,be,null,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1467726769;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver, "CacheResolver must not be null")__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,cache,resolver,must,not,be,null,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1467730834;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver, "CacheResolver must not be null")__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,cache,resolver,must,not,be,null,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1470831642;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver, "CacheResolver must not be null")__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,cache,resolver,must,not,be,null,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1474905889;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver, "CacheResolver must not be null")__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,cache,resolver,must,not,be,null,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1477554435;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver, "CacheResolver must not be null")__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,cache,resolver,must,not,be,null,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1495868221;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver, "CacheResolver must not be null")__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,cache,resolver,must,not,be,null,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1496259743;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver, "CacheResolver must not be null")__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,cache,resolver,must,not,be,null,this,cache,resolver,cache,resolver
CacheAspectSupport -> public void setCacheResolver(CacheResolver cacheResolver);1496837955;Set the default {@link CacheResolver} that this cache aspect should delegate_to if no specific cache resolver has been set for the operation._<p>The default resolver resolves the caches against their names and the_default cache manager._@see #setCacheManager(org.springframework.cache.CacheManager)_@see SimpleCacheResolver;public void setCacheResolver(CacheResolver cacheResolver) {_		Assert.notNull(cacheResolver, "CacheResolver must not be null")__		this.cacheResolver = cacheResolver__	};set,the,default,link,cache,resolver,that,this,cache,aspect,should,delegate,to,if,no,specific,cache,resolver,has,been,set,for,the,operation,p,the,default,resolver,resolves,the,caches,against,their,names,and,the,default,cache,manager,see,set,cache,manager,org,springframework,cache,cache,manager,see,simple,cache,resolver;public,void,set,cache,resolver,cache,resolver,cache,resolver,assert,not,null,cache,resolver,cache,resolver,must,not,be,null,this,cache,resolver,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1396878069;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1397546081;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1400596774;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1401714051;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1404735499;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1413848647;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1414762650;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1414826808;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1418218451;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1422279854;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1423576035;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1428409663;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1428650451;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1450701275;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1450778724;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1458944925;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1458945978;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1458999130;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1461047077;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1461878203;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1467677340;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1467726769;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1467730834;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1470831642;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1474905889;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1477554435;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1495868221;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> public CacheResolver getCacheResolver();1496259743;Return the default {@link CacheResolver} that this cache aspect delegates to.;public CacheResolver getCacheResolver() {_		return this.cacheResolver__	};return,the,default,link,cache,resolver,that,this,cache,aspect,delegates,to;public,cache,resolver,get,cache,resolver,return,this,cache,resolver
CacheAspectSupport -> public void configure( 			@Nullable Supplier<CacheErrorHandler> errorHandler, @Nullable Supplier<KeyGenerator> keyGenerator, 			@Nullable Supplier<CacheResolver> cacheResolver, @Nullable Supplier<CacheManager> cacheManager);1531589372;Configure this aspect with the given error handler, key generator and cache resolver/manager_suppliers, applying the corresponding default if a supplier is not resolvable._@since 5.1;public void configure(_			@Nullable Supplier<CacheErrorHandler> errorHandler, @Nullable Supplier<KeyGenerator> keyGenerator,_			@Nullable Supplier<CacheResolver> cacheResolver, @Nullable Supplier<CacheManager> cacheManager) {__		this.errorHandler = new SingletonSupplier<>(errorHandler, SimpleCacheErrorHandler::new)__		this.keyGenerator = new SingletonSupplier<>(keyGenerator, SimpleKeyGenerator::new)__		this.cacheResolver = new SingletonSupplier<>(cacheResolver,_				() -> SimpleCacheResolver.of(SupplierUtils.resolve(cacheManager)))__	};configure,this,aspect,with,the,given,error,handler,key,generator,and,cache,resolver,manager,suppliers,applying,the,corresponding,default,if,a,supplier,is,not,resolvable,since,5,1;public,void,configure,nullable,supplier,cache,error,handler,error,handler,nullable,supplier,key,generator,key,generator,nullable,supplier,cache,resolver,cache,resolver,nullable,supplier,cache,manager,cache,manager,this,error,handler,new,singleton,supplier,error,handler,simple,cache,error,handler,new,this,key,generator,new,singleton,supplier,key,generator,simple,key,generator,new,this,cache,resolver,new,singleton,supplier,cache,resolver,simple,cache,resolver,of,supplier,utils,resolve,cache,manager
CacheAspectSupport -> public void configure( 			@Nullable Supplier<CacheErrorHandler> errorHandler, @Nullable Supplier<KeyGenerator> keyGenerator, 			@Nullable Supplier<CacheResolver> cacheResolver, @Nullable Supplier<CacheManager> cacheManager);1531739054;Configure this aspect with the given error handler, key generator and cache resolver/manager_suppliers, applying the corresponding default if a supplier is not resolvable._@since 5.1;public void configure(_			@Nullable Supplier<CacheErrorHandler> errorHandler, @Nullable Supplier<KeyGenerator> keyGenerator,_			@Nullable Supplier<CacheResolver> cacheResolver, @Nullable Supplier<CacheManager> cacheManager) {__		this.errorHandler = new SingletonSupplier<>(errorHandler, SimpleCacheErrorHandler::new)__		this.keyGenerator = new SingletonSupplier<>(keyGenerator, SimpleKeyGenerator::new)__		this.cacheResolver = new SingletonSupplier<>(cacheResolver,_				() -> SimpleCacheResolver.of(SupplierUtils.resolve(cacheManager)))__	};configure,this,aspect,with,the,given,error,handler,key,generator,and,cache,resolver,manager,suppliers,applying,the,corresponding,default,if,a,supplier,is,not,resolvable,since,5,1;public,void,configure,nullable,supplier,cache,error,handler,error,handler,nullable,supplier,key,generator,key,generator,nullable,supplier,cache,resolver,cache,resolver,nullable,supplier,cache,manager,cache,manager,this,error,handler,new,singleton,supplier,error,handler,simple,cache,error,handler,new,this,key,generator,new,singleton,supplier,key,generator,simple,key,generator,new,this,cache,resolver,new,singleton,supplier,cache,resolver,simple,cache,resolver,of,supplier,utils,resolve,cache,manager
CacheAspectSupport -> public void configure( 			@Nullable Supplier<CacheErrorHandler> errorHandler, @Nullable Supplier<KeyGenerator> keyGenerator, 			@Nullable Supplier<CacheResolver> cacheResolver, @Nullable Supplier<CacheManager> cacheManager);1532431622;Configure this aspect with the given error handler, key generator and cache resolver/manager_suppliers, applying the corresponding default if a supplier is not resolvable._@since 5.1;public void configure(_			@Nullable Supplier<CacheErrorHandler> errorHandler, @Nullable Supplier<KeyGenerator> keyGenerator,_			@Nullable Supplier<CacheResolver> cacheResolver, @Nullable Supplier<CacheManager> cacheManager) {__		this.errorHandler = new SingletonSupplier<>(errorHandler, SimpleCacheErrorHandler::new)__		this.keyGenerator = new SingletonSupplier<>(keyGenerator, SimpleKeyGenerator::new)__		this.cacheResolver = new SingletonSupplier<>(cacheResolver,_				() -> SimpleCacheResolver.of(SupplierUtils.resolve(cacheManager)))__	};configure,this,aspect,with,the,given,error,handler,key,generator,and,cache,resolver,manager,suppliers,applying,the,corresponding,default,if,a,supplier,is,not,resolvable,since,5,1;public,void,configure,nullable,supplier,cache,error,handler,error,handler,nullable,supplier,key,generator,key,generator,nullable,supplier,cache,resolver,cache,resolver,nullable,supplier,cache,manager,cache,manager,this,error,handler,new,singleton,supplier,error,handler,simple,cache,error,handler,new,this,key,generator,new,singleton,supplier,key,generator,simple,key,generator,new,this,cache,resolver,new,singleton,supplier,cache,resolver,simple,cache,resolver,of,supplier,utils,resolve,cache,manager
CacheAspectSupport -> public void configure( 			@Nullable Supplier<CacheErrorHandler> errorHandler, @Nullable Supplier<KeyGenerator> keyGenerator, 			@Nullable Supplier<CacheResolver> cacheResolver, @Nullable Supplier<CacheManager> cacheManager);1532981251;Configure this aspect with the given error handler, key generator and cache resolver/manager_suppliers, applying the corresponding default if a supplier is not resolvable._@since 5.1;public void configure(_			@Nullable Supplier<CacheErrorHandler> errorHandler, @Nullable Supplier<KeyGenerator> keyGenerator,_			@Nullable Supplier<CacheResolver> cacheResolver, @Nullable Supplier<CacheManager> cacheManager) {__		this.errorHandler = new SingletonSupplier<>(errorHandler, SimpleCacheErrorHandler::new)__		this.keyGenerator = new SingletonSupplier<>(keyGenerator, SimpleKeyGenerator::new)__		this.cacheResolver = new SingletonSupplier<>(cacheResolver,_				() -> SimpleCacheResolver.of(SupplierUtils.resolve(cacheManager)))__	};configure,this,aspect,with,the,given,error,handler,key,generator,and,cache,resolver,manager,suppliers,applying,the,corresponding,default,if,a,supplier,is,not,resolvable,since,5,1;public,void,configure,nullable,supplier,cache,error,handler,error,handler,nullable,supplier,key,generator,key,generator,nullable,supplier,cache,resolver,cache,resolver,nullable,supplier,cache,manager,cache,manager,this,error,handler,new,singleton,supplier,error,handler,simple,cache,error,handler,new,this,key,generator,new,singleton,supplier,key,generator,simple,key,generator,new,this,cache,resolver,new,singleton,supplier,cache,resolver,simple,cache,resolver,of,supplier,utils,resolve,cache,manager
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1328020251;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1356735495;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1357119239;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1362408075;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1368482696;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1372363092;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1375746308;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1375747549;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1379974498;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1384168190;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1385514795;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1387476957;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1395788176;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1395790298;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1396268127;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1396268274;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1396268765;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1396865240;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1396878069;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1397546081;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1400596774;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1401714051;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1404735499;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1413848647;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1414762650;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1414826808;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1418218451;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1422279854;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1423576035;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1428409663;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1428650451;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1450701275;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1450778724;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1458944925;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1458945978;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1458999130;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1461047077;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1461878203;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1467677340;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1467726769;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1467730834;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1470831642;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1474905889;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1477554435;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1495868221;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1496259743;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1496837955;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1500448076;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1500457438;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1515970101;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1518567721;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1524846222;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1530174524;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1531589372;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1531739054;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1532431622;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> protected String methodIdentification(Method method, Class<?> targetClass);1532981251;Convenience method to return a String representation of this Method_for use in logging. Can be overridden in subclasses to provide a_different identifier for the given method._@param method the method we're interested in_@param targetClass class the method is on_@return log message identifying this method_@see org.springframework.util.ClassUtils#getQualifiedMethodName;protected String methodIdentification(Method method, Class<?> targetClass) {_		Method specificMethod = ClassUtils.getMostSpecificMethod(method, targetClass)__		return ClassUtils.getQualifiedMethodName(specificMethod)__	};convenience,method,to,return,a,string,representation,of,this,method,for,use,in,logging,can,be,overridden,in,subclasses,to,provide,a,different,identifier,for,the,given,method,param,method,the,method,we,re,interested,in,param,target,class,class,the,method,is,on,return,log,message,identifying,this,method,see,org,springframework,util,class,utils,get,qualified,method,name;protected,string,method,identification,method,method,class,target,class,method,specific,method,class,utils,get,most,specific,method,method,target,class,return,class,utils,get,qualified,method,name,specific,method
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1395788176;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1395790298;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1396268127;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1396268274;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1396268765;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1396865240;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1396878069;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1397546081;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1400596774;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1401714051;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1404735499;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1413848647;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1414762650;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1414826808;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1418218451;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1422279854;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1423576035;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1428409663;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1428650451;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1450701275;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1450778724;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1458944925;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1458945978;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1458999130;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1461047077;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1461878203;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1467677340;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1467726769;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1467730834;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1470831642;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1474905889;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1477554435;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1495868221;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> private void collectPutRequests(Collection<CacheOperationContext> contexts, 			Object result, Collection<CachePutRequest> putRequests);1496259743;Collect the {@link CachePutRequest} for all {@link CacheOperation} using_the specified result item._@param contexts the contexts to handle_@param result the result item (never {@code null})_@param putRequests the collection to update;private void collectPutRequests(Collection<CacheOperationContext> contexts,_			Object result, Collection<CachePutRequest> putRequests) {__		for (CacheOperationContext context : contexts) {_			if (isConditionPassing(context, result)) {_				Object key = generateKey(context, result)__				putRequests.add(new CachePutRequest(context, key))__			}_		}_	};collect,the,link,cache,put,request,for,all,link,cache,operation,using,the,specified,result,item,param,contexts,the,contexts,to,handle,param,result,the,result,item,never,code,null,param,put,requests,the,collection,to,update;private,void,collect,put,requests,collection,cache,operation,context,contexts,object,result,collection,cache,put,request,put,requests,for,cache,operation,context,context,contexts,if,is,condition,passing,context,result,object,key,generate,key,context,result,put,requests,add,new,cache,put,request,context,key
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1396878069;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}.__@param beanName the name of the bean, as defined by the operation_@param expectedType type type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(_				applicationContext, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,application,context,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1397546081;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}.__@param beanName the name of the bean, as defined by the operation_@param expectedType type type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(_				applicationContext, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,application,context,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1400596774;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}.__@param beanName the name of the bean, as defined by the operation_@param expectedType type type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(_				applicationContext, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,application,context,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1401714051;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}.__@param beanName the name of the bean, as defined by the operation_@param expectedType type type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(_				applicationContext, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,application,context,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1404735499;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}.__@param beanName the name of the bean, as defined by the operation_@param expectedType type type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(_				applicationContext, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,application,context,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1413848647;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}.__@param beanName the name of the bean, as defined by the operation_@param expectedType type type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(_				applicationContext, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,application,context,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1414762650;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}.__@param beanName the name of the bean, as defined by the operation_@param expectedType type type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(_				applicationContext, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,application,context,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1414826808;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.applicationContext, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,this,application,context,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1418218451;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.applicationContext, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,this,application,context,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1422279854;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.applicationContext, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,this,application,context,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1423576035;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.applicationContext, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,this,application,context,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1428409663;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.applicationContext, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,this,application,context,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1428650451;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.applicationContext, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,this,application,context,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1450701275;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.applicationContext, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,this,application,context,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1450778724;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.applicationContext, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,this,application,context,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1458944925;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.applicationContext, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,this,application,context,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1458945978;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.applicationContext, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,this,application,context,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1458999130;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.applicationContext, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,this,application,context,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1461047077;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.applicationContext, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,this,application,context,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1461878203;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.beanFactory, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,this,bean,factory,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1467677340;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.beanFactory, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,this,bean,factory,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1467726769;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.beanFactory, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,this,bean,factory,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1467730834;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.beanFactory, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,this,bean,factory,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1470831642;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.beanFactory, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,this,bean,factory,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1474905889;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.beanFactory, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,this,bean,factory,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1477554435;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.beanFactory, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,this,bean,factory,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1495868221;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.beanFactory, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,this,bean,factory,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1496259743;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.beanFactory, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,this,bean,factory,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1496837955;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.beanFactory, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,this,bean,factory,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1500448076;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.beanFactory, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,return,bean,factory,annotation,utils,qualified,bean,of,type,this,bean,factory,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1500457438;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		if (this.beanFactory == null) {_			throw new IllegalStateException(_					"BeanFactory must be set on cache aspect for " + expectedType.getSimpleName() + " retrieval")__		}_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.beanFactory, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,if,this,bean,factory,null,throw,new,illegal,state,exception,bean,factory,must,be,set,on,cache,aspect,for,expected,type,get,simple,name,retrieval,return,bean,factory,annotation,utils,qualified,bean,of,type,this,bean,factory,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1515970101;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		if (this.beanFactory == null) {_			throw new IllegalStateException(_					"BeanFactory must be set on cache aspect for " + expectedType.getSimpleName() + " retrieval")__		}_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.beanFactory, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,if,this,bean,factory,null,throw,new,illegal,state,exception,bean,factory,must,be,set,on,cache,aspect,for,expected,type,get,simple,name,retrieval,return,bean,factory,annotation,utils,qualified,bean,of,type,this,bean,factory,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1518567721;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		if (this.beanFactory == null) {_			throw new IllegalStateException(_					"BeanFactory must be set on cache aspect for " + expectedType.getSimpleName() + " retrieval")__		}_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.beanFactory, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,if,this,bean,factory,null,throw,new,illegal,state,exception,bean,factory,must,be,set,on,cache,aspect,for,expected,type,get,simple,name,retrieval,return,bean,factory,annotation,utils,qualified,bean,of,type,this,bean,factory,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1524846222;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		if (this.beanFactory == null) {_			throw new IllegalStateException(_					"BeanFactory must be set on cache aspect for " + expectedType.getSimpleName() + " retrieval")__		}_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.beanFactory, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,if,this,bean,factory,null,throw,new,illegal,state,exception,bean,factory,must,be,set,on,cache,aspect,for,expected,type,get,simple,name,retrieval,return,bean,factory,annotation,utils,qualified,bean,of,type,this,bean,factory,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1530174524;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		if (this.beanFactory == null) {_			throw new IllegalStateException(_					"BeanFactory must be set on cache aspect for " + expectedType.getSimpleName() + " retrieval")__		}_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.beanFactory, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,if,this,bean,factory,null,throw,new,illegal,state,exception,bean,factory,must,be,set,on,cache,aspect,for,expected,type,get,simple,name,retrieval,return,bean,factory,annotation,utils,qualified,bean,of,type,this,bean,factory,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1531589372;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		if (this.beanFactory == null) {_			throw new IllegalStateException(_					"BeanFactory must be set on cache aspect for " + expectedType.getSimpleName() + " retrieval")__		}_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.beanFactory, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,if,this,bean,factory,null,throw,new,illegal,state,exception,bean,factory,must,be,set,on,cache,aspect,for,expected,type,get,simple,name,retrieval,return,bean,factory,annotation,utils,qualified,bean,of,type,this,bean,factory,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1531739054;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		if (this.beanFactory == null) {_			throw new IllegalStateException(_					"BeanFactory must be set on cache aspect for " + expectedType.getSimpleName() + " retrieval")__		}_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.beanFactory, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,if,this,bean,factory,null,throw,new,illegal,state,exception,bean,factory,must,be,set,on,cache,aspect,for,expected,type,get,simple,name,retrieval,return,bean,factory,annotation,utils,qualified,bean,of,type,this,bean,factory,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1532431622;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		if (this.beanFactory == null) {_			throw new IllegalStateException(_					"BeanFactory must be set on cache aspect for " + expectedType.getSimpleName() + " retrieval")__		}_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.beanFactory, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,if,this,bean,factory,null,throw,new,illegal,state,exception,bean,factory,must,be,set,on,cache,aspect,for,expected,type,get,simple,name,retrieval,return,bean,factory,annotation,utils,qualified,bean,of,type,this,bean,factory,expected,type,bean,name
CacheAspectSupport -> protected <T> T getBean(String beanName, Class<T> expectedType);1532981251;Return a bean with the specified name and type. Used to resolve services that_are referenced by name in a {@link CacheOperation}._@param beanName the name of the bean, as defined by the operation_@param expectedType type for the bean_@return the bean matching that name_@throws org.springframework.beans.factory.NoSuchBeanDefinitionException if such bean does not exist_@see CacheOperation#keyGenerator_@see CacheOperation#cacheManager_@see CacheOperation#cacheResolver;protected <T> T getBean(String beanName, Class<T> expectedType) {_		if (this.beanFactory == null) {_			throw new IllegalStateException(_					"BeanFactory must be set on cache aspect for " + expectedType.getSimpleName() + " retrieval")__		}_		return BeanFactoryAnnotationUtils.qualifiedBeanOfType(this.beanFactory, expectedType, beanName)__	};return,a,bean,with,the,specified,name,and,type,used,to,resolve,services,that,are,referenced,by,name,in,a,link,cache,operation,param,bean,name,the,name,of,the,bean,as,defined,by,the,operation,param,expected,type,type,for,the,bean,return,the,bean,matching,that,name,throws,org,springframework,beans,factory,no,such,bean,definition,exception,if,such,bean,does,not,exist,see,cache,operation,key,generator,see,cache,operation,cache,manager,see,cache,operation,cache,resolver;protected,t,t,get,bean,string,bean,name,class,t,expected,type,if,this,bean,factory,null,throw,new,illegal,state,exception,bean,factory,must,be,set,on,cache,aspect,for,expected,type,get,simple,name,retrieval,return,bean,factory,annotation,utils,qualified,bean,of,type,this,bean,factory,expected,type,bean,name
