# id;timestamp;commentText;codeText;commentWords;codeWords
ConcurrentTaskScheduler -> public void setScheduledExecutor(@Nullable ScheduledExecutorService scheduledExecutor);1498780456;Specify the {@link java.util.concurrent.ScheduledExecutorService} to delegate to._<p>Autodetects a JSR-236 {@link javax.enterprise.concurrent.ManagedScheduledExecutorService}_in order to use it for trigger-based scheduling if possible,_instead of Spring's local trigger management._<p>Note: This will only apply to {@link TaskScheduler} invocations._If you want the given executor to apply to_{@link org.springframework.scheduling.SchedulingTaskExecutor} invocations_as well, pass the same executor reference to {@link #setConcurrentExecutor}._@see #setConcurrentExecutor;public void setScheduledExecutor(@Nullable ScheduledExecutorService scheduledExecutor) {_		initScheduledExecutor(scheduledExecutor)__	};specify,the,link,java,util,concurrent,scheduled,executor,service,to,delegate,to,p,autodetects,a,jsr,236,link,javax,enterprise,concurrent,managed,scheduled,executor,service,in,order,to,use,it,for,trigger,based,scheduling,if,possible,instead,of,spring,s,local,trigger,management,p,note,this,will,only,apply,to,link,task,scheduler,invocations,if,you,want,the,given,executor,to,apply,to,link,org,springframework,scheduling,scheduling,task,executor,invocations,as,well,pass,the,same,executor,reference,to,link,set,concurrent,executor,see,set,concurrent,executor;public,void,set,scheduled,executor,nullable,scheduled,executor,service,scheduled,executor,init,scheduled,executor,scheduled,executor
ConcurrentTaskScheduler -> public void setScheduledExecutor(@Nullable ScheduledExecutorService scheduledExecutor);1502974979;Specify the {@link java.util.concurrent.ScheduledExecutorService} to delegate to._<p>Autodetects a JSR-236 {@link javax.enterprise.concurrent.ManagedScheduledExecutorService}_in order to use it for trigger-based scheduling if possible,_instead of Spring's local trigger management._<p>Note: This will only apply to {@link TaskScheduler} invocations._If you want the given executor to apply to_{@link org.springframework.scheduling.SchedulingTaskExecutor} invocations_as well, pass the same executor reference to {@link #setConcurrentExecutor}._@see #setConcurrentExecutor;public void setScheduledExecutor(@Nullable ScheduledExecutorService scheduledExecutor) {_		initScheduledExecutor(scheduledExecutor)__	};specify,the,link,java,util,concurrent,scheduled,executor,service,to,delegate,to,p,autodetects,a,jsr,236,link,javax,enterprise,concurrent,managed,scheduled,executor,service,in,order,to,use,it,for,trigger,based,scheduling,if,possible,instead,of,spring,s,local,trigger,management,p,note,this,will,only,apply,to,link,task,scheduler,invocations,if,you,want,the,given,executor,to,apply,to,link,org,springframework,scheduling,scheduling,task,executor,invocations,as,well,pass,the,same,executor,reference,to,link,set,concurrent,executor,see,set,concurrent,executor;public,void,set,scheduled,executor,nullable,scheduled,executor,service,scheduled,executor,init,scheduled,executor,scheduled,executor
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler(ScheduledExecutorService scheduledExecutor);1328020251;Create a new ConcurrentTaskScheduler,_using the given JDK 1.5 executor as shared delegate._@param scheduledExecutor the JDK 1.5 scheduled executor to delegate to_for {@link org.springframework.scheduling.SchedulingTaskExecutor} as well_as {@link TaskScheduler} invocations;public ConcurrentTaskScheduler(ScheduledExecutorService scheduledExecutor) {_		super(scheduledExecutor)__		setScheduledExecutor(scheduledExecutor)__	};create,a,new,concurrent,task,scheduler,using,the,given,jdk,1,5,executor,as,shared,delegate,param,scheduled,executor,the,jdk,1,5,scheduled,executor,to,delegate,to,for,link,org,springframework,scheduling,scheduling,task,executor,as,well,as,link,task,scheduler,invocations;public,concurrent,task,scheduler,scheduled,executor,service,scheduled,executor,super,scheduled,executor,set,scheduled,executor,scheduled,executor
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler(ScheduledExecutorService scheduledExecutor);1356735495;Create a new ConcurrentTaskScheduler,_using the given JDK 1.5 executor as shared delegate._@param scheduledExecutor the JDK 1.5 scheduled executor to delegate to_for {@link org.springframework.scheduling.SchedulingTaskExecutor} as well_as {@link TaskScheduler} invocations;public ConcurrentTaskScheduler(ScheduledExecutorService scheduledExecutor) {_		super(scheduledExecutor)__		setScheduledExecutor(scheduledExecutor)__	};create,a,new,concurrent,task,scheduler,using,the,given,jdk,1,5,executor,as,shared,delegate,param,scheduled,executor,the,jdk,1,5,scheduled,executor,to,delegate,to,for,link,org,springframework,scheduling,scheduling,task,executor,as,well,as,link,task,scheduler,invocations;public,concurrent,task,scheduler,scheduled,executor,service,scheduled,executor,super,scheduled,executor,set,scheduled,executor,scheduled,executor
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler(ScheduledExecutorService scheduledExecutor);1357119239;Create a new ConcurrentTaskScheduler,_using the given JDK 1.5 executor as shared delegate._@param scheduledExecutor the JDK 1.5 scheduled executor to delegate to_for {@link org.springframework.scheduling.SchedulingTaskExecutor} as well_as {@link TaskScheduler} invocations;public ConcurrentTaskScheduler(ScheduledExecutorService scheduledExecutor) {_		super(scheduledExecutor)__		setScheduledExecutor(scheduledExecutor)__	};create,a,new,concurrent,task,scheduler,using,the,given,jdk,1,5,executor,as,shared,delegate,param,scheduled,executor,the,jdk,1,5,scheduled,executor,to,delegate,to,for,link,org,springframework,scheduling,scheduling,task,executor,as,well,as,link,task,scheduler,invocations;public,concurrent,task,scheduler,scheduled,executor,service,scheduled,executor,super,scheduled,executor,set,scheduled,executor,scheduled,executor
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler(ScheduledExecutorService scheduledExecutor);1364421156;Create a new ConcurrentTaskScheduler,_using the given JDK 1.5 executor as shared delegate._<p>Autodetects a JSR-236 {@link javax.enterprise.concurrent.ManagedScheduledExecutorService}_in order to use it for trigger-based scheduling if possible,_instead of Spring's local trigger management._@param scheduledExecutor the JDK 1.5 scheduled executor to delegate to_for {@link org.springframework.scheduling.SchedulingTaskExecutor} as well_as {@link TaskScheduler} invocations;public ConcurrentTaskScheduler(ScheduledExecutorService scheduledExecutor) {_		super(scheduledExecutor)__		setScheduledExecutor(scheduledExecutor)__	};create,a,new,concurrent,task,scheduler,using,the,given,jdk,1,5,executor,as,shared,delegate,p,autodetects,a,jsr,236,link,javax,enterprise,concurrent,managed,scheduled,executor,service,in,order,to,use,it,for,trigger,based,scheduling,if,possible,instead,of,spring,s,local,trigger,management,param,scheduled,executor,the,jdk,1,5,scheduled,executor,to,delegate,to,for,link,org,springframework,scheduling,scheduling,task,executor,as,well,as,link,task,scheduler,invocations;public,concurrent,task,scheduler,scheduled,executor,service,scheduled,executor,super,scheduled,executor,set,scheduled,executor,scheduled,executor
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler(ScheduledExecutorService scheduledExecutor);1368482696;Create a new ConcurrentTaskScheduler,_using the given JDK 1.5 executor as shared delegate._<p>Autodetects a JSR-236 {@link javax.enterprise.concurrent.ManagedScheduledExecutorService}_in order to use it for trigger-based scheduling if possible,_instead of Spring's local trigger management._@param scheduledExecutor the JDK 1.5 scheduled executor to delegate to_for {@link org.springframework.scheduling.SchedulingTaskExecutor} as well_as {@link TaskScheduler} invocations;public ConcurrentTaskScheduler(ScheduledExecutorService scheduledExecutor) {_		super(scheduledExecutor)__		setScheduledExecutor(scheduledExecutor)__	};create,a,new,concurrent,task,scheduler,using,the,given,jdk,1,5,executor,as,shared,delegate,p,autodetects,a,jsr,236,link,javax,enterprise,concurrent,managed,scheduled,executor,service,in,order,to,use,it,for,trigger,based,scheduling,if,possible,instead,of,spring,s,local,trigger,management,param,scheduled,executor,the,jdk,1,5,scheduled,executor,to,delegate,to,for,link,org,springframework,scheduling,scheduling,task,executor,as,well,as,link,task,scheduler,invocations;public,concurrent,task,scheduler,scheduled,executor,service,scheduled,executor,super,scheduled,executor,set,scheduled,executor,scheduled,executor
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler(ScheduledExecutorService scheduledExecutor);1383178438;Create a new ConcurrentTaskScheduler, using the given_{@link java.util.concurrent.ScheduledExecutorService} as shared delegate._<p>Autodetects a JSR-236 {@link javax.enterprise.concurrent.ManagedScheduledExecutorService}_in order to use it for trigger-based scheduling if possible,_instead of Spring's local trigger management._@param scheduledExecutor the {@link java.util.concurrent.ScheduledExecutorService}_to delegate to for {@link org.springframework.scheduling.SchedulingTaskExecutor}_as well as {@link TaskScheduler} invocations;public ConcurrentTaskScheduler(ScheduledExecutorService scheduledExecutor) {_		super(scheduledExecutor)__		setScheduledExecutor(scheduledExecutor)__	};create,a,new,concurrent,task,scheduler,using,the,given,link,java,util,concurrent,scheduled,executor,service,as,shared,delegate,p,autodetects,a,jsr,236,link,javax,enterprise,concurrent,managed,scheduled,executor,service,in,order,to,use,it,for,trigger,based,scheduling,if,possible,instead,of,spring,s,local,trigger,management,param,scheduled,executor,the,link,java,util,concurrent,scheduled,executor,service,to,delegate,to,for,link,org,springframework,scheduling,scheduling,task,executor,as,well,as,link,task,scheduler,invocations;public,concurrent,task,scheduler,scheduled,executor,service,scheduled,executor,super,scheduled,executor,set,scheduled,executor,scheduled,executor
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler(ScheduledExecutorService scheduledExecutor);1383419642;Create a new ConcurrentTaskScheduler, using the given_{@link java.util.concurrent.ScheduledExecutorService} as shared delegate._<p>Autodetects a JSR-236 {@link javax.enterprise.concurrent.ManagedScheduledExecutorService}_in order to use it for trigger-based scheduling if possible,_instead of Spring's local trigger management._@param scheduledExecutor the {@link java.util.concurrent.ScheduledExecutorService}_to delegate to for {@link org.springframework.scheduling.SchedulingTaskExecutor}_as well as {@link TaskScheduler} invocations;public ConcurrentTaskScheduler(ScheduledExecutorService scheduledExecutor) {_		super(scheduledExecutor)__		setScheduledExecutor(scheduledExecutor)__	};create,a,new,concurrent,task,scheduler,using,the,given,link,java,util,concurrent,scheduled,executor,service,as,shared,delegate,p,autodetects,a,jsr,236,link,javax,enterprise,concurrent,managed,scheduled,executor,service,in,order,to,use,it,for,trigger,based,scheduling,if,possible,instead,of,spring,s,local,trigger,management,param,scheduled,executor,the,link,java,util,concurrent,scheduled,executor,service,to,delegate,to,for,link,org,springframework,scheduling,scheduling,task,executor,as,well,as,link,task,scheduler,invocations;public,concurrent,task,scheduler,scheduled,executor,service,scheduled,executor,super,scheduled,executor,set,scheduled,executor,scheduled,executor
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler(ScheduledExecutorService scheduledExecutor);1385412762;Create a new ConcurrentTaskScheduler, using the given_{@link java.util.concurrent.ScheduledExecutorService} as shared delegate._<p>Autodetects a JSR-236 {@link javax.enterprise.concurrent.ManagedScheduledExecutorService}_in order to use it for trigger-based scheduling if possible,_instead of Spring's local trigger management._@param scheduledExecutor the {@link java.util.concurrent.ScheduledExecutorService}_to delegate to for {@link org.springframework.scheduling.SchedulingTaskExecutor}_as well as {@link TaskScheduler} invocations;public ConcurrentTaskScheduler(ScheduledExecutorService scheduledExecutor) {_		super(scheduledExecutor)__		setScheduledExecutor(scheduledExecutor)__	};create,a,new,concurrent,task,scheduler,using,the,given,link,java,util,concurrent,scheduled,executor,service,as,shared,delegate,p,autodetects,a,jsr,236,link,javax,enterprise,concurrent,managed,scheduled,executor,service,in,order,to,use,it,for,trigger,based,scheduling,if,possible,instead,of,spring,s,local,trigger,management,param,scheduled,executor,the,link,java,util,concurrent,scheduled,executor,service,to,delegate,to,for,link,org,springframework,scheduling,scheduling,task,executor,as,well,as,link,task,scheduler,invocations;public,concurrent,task,scheduler,scheduled,executor,service,scheduled,executor,super,scheduled,executor,set,scheduled,executor,scheduled,executor
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler(ScheduledExecutorService scheduledExecutor);1496837955;Create a new ConcurrentTaskScheduler, using the given_{@link java.util.concurrent.ScheduledExecutorService} as shared delegate._<p>Autodetects a JSR-236 {@link javax.enterprise.concurrent.ManagedScheduledExecutorService}_in order to use it for trigger-based scheduling if possible,_instead of Spring's local trigger management._@param scheduledExecutor the {@link java.util.concurrent.ScheduledExecutorService}_to delegate to for {@link org.springframework.scheduling.SchedulingTaskExecutor}_as well as {@link TaskScheduler} invocations;public ConcurrentTaskScheduler(ScheduledExecutorService scheduledExecutor) {_		super(scheduledExecutor)__		setScheduledExecutor(scheduledExecutor)__	};create,a,new,concurrent,task,scheduler,using,the,given,link,java,util,concurrent,scheduled,executor,service,as,shared,delegate,p,autodetects,a,jsr,236,link,javax,enterprise,concurrent,managed,scheduled,executor,service,in,order,to,use,it,for,trigger,based,scheduling,if,possible,instead,of,spring,s,local,trigger,management,param,scheduled,executor,the,link,java,util,concurrent,scheduled,executor,service,to,delegate,to,for,link,org,springframework,scheduling,scheduling,task,executor,as,well,as,link,task,scheduler,invocations;public,concurrent,task,scheduler,scheduled,executor,service,scheduled,executor,super,scheduled,executor,set,scheduled,executor,scheduled,executor
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler(ScheduledExecutorService scheduledExecutor);1498780456;Create a new ConcurrentTaskScheduler, using the given_{@link java.util.concurrent.ScheduledExecutorService} as shared delegate._<p>Autodetects a JSR-236 {@link javax.enterprise.concurrent.ManagedScheduledExecutorService}_in order to use it for trigger-based scheduling if possible,_instead of Spring's local trigger management._@param scheduledExecutor the {@link java.util.concurrent.ScheduledExecutorService}_to delegate to for {@link org.springframework.scheduling.SchedulingTaskExecutor}_as well as {@link TaskScheduler} invocations;public ConcurrentTaskScheduler(ScheduledExecutorService scheduledExecutor) {_		super(scheduledExecutor)__		this.scheduledExecutor = initScheduledExecutor(scheduledExecutor)__	};create,a,new,concurrent,task,scheduler,using,the,given,link,java,util,concurrent,scheduled,executor,service,as,shared,delegate,p,autodetects,a,jsr,236,link,javax,enterprise,concurrent,managed,scheduled,executor,service,in,order,to,use,it,for,trigger,based,scheduling,if,possible,instead,of,spring,s,local,trigger,management,param,scheduled,executor,the,link,java,util,concurrent,scheduled,executor,service,to,delegate,to,for,link,org,springframework,scheduling,scheduling,task,executor,as,well,as,link,task,scheduler,invocations;public,concurrent,task,scheduler,scheduled,executor,service,scheduled,executor,super,scheduled,executor,this,scheduled,executor,init,scheduled,executor,scheduled,executor
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler(ScheduledExecutorService scheduledExecutor);1502974979;Create a new ConcurrentTaskScheduler, using the given_{@link java.util.concurrent.ScheduledExecutorService} as shared delegate._<p>Autodetects a JSR-236 {@link javax.enterprise.concurrent.ManagedScheduledExecutorService}_in order to use it for trigger-based scheduling if possible,_instead of Spring's local trigger management._@param scheduledExecutor the {@link java.util.concurrent.ScheduledExecutorService}_to delegate to for {@link org.springframework.scheduling.SchedulingTaskExecutor}_as well as {@link TaskScheduler} invocations;public ConcurrentTaskScheduler(ScheduledExecutorService scheduledExecutor) {_		super(scheduledExecutor)__		this.scheduledExecutor = initScheduledExecutor(scheduledExecutor)__	};create,a,new,concurrent,task,scheduler,using,the,given,link,java,util,concurrent,scheduled,executor,service,as,shared,delegate,p,autodetects,a,jsr,236,link,javax,enterprise,concurrent,managed,scheduled,executor,service,in,order,to,use,it,for,trigger,based,scheduling,if,possible,instead,of,spring,s,local,trigger,management,param,scheduled,executor,the,link,java,util,concurrent,scheduled,executor,service,to,delegate,to,for,link,org,springframework,scheduling,scheduling,task,executor,as,well,as,link,task,scheduler,invocations;public,concurrent,task,scheduler,scheduled,executor,service,scheduled,executor,super,scheduled,executor,this,scheduled,executor,init,scheduled,executor,scheduled,executor
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler(Executor concurrentExecutor, ScheduledExecutorService scheduledExecutor);1328020251;Create a new ConcurrentTaskScheduler,_using the given JDK 1.5 executors as delegates._@param concurrentExecutor the JDK 1.5 concurrent executor to delegate to_for {@link org.springframework.scheduling.SchedulingTaskExecutor} invocations_@param scheduledExecutor the JDK 1.5 scheduled executor to delegate to_for {@link TaskScheduler} invocations;public ConcurrentTaskScheduler(Executor concurrentExecutor, ScheduledExecutorService scheduledExecutor) {_		super(concurrentExecutor)__		setScheduledExecutor(scheduledExecutor)__	};create,a,new,concurrent,task,scheduler,using,the,given,jdk,1,5,executors,as,delegates,param,concurrent,executor,the,jdk,1,5,concurrent,executor,to,delegate,to,for,link,org,springframework,scheduling,scheduling,task,executor,invocations,param,scheduled,executor,the,jdk,1,5,scheduled,executor,to,delegate,to,for,link,task,scheduler,invocations;public,concurrent,task,scheduler,executor,concurrent,executor,scheduled,executor,service,scheduled,executor,super,concurrent,executor,set,scheduled,executor,scheduled,executor
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler(Executor concurrentExecutor, ScheduledExecutorService scheduledExecutor);1356735495;Create a new ConcurrentTaskScheduler,_using the given JDK 1.5 executors as delegates._@param concurrentExecutor the JDK 1.5 concurrent executor to delegate to_for {@link org.springframework.scheduling.SchedulingTaskExecutor} invocations_@param scheduledExecutor the JDK 1.5 scheduled executor to delegate to_for {@link TaskScheduler} invocations;public ConcurrentTaskScheduler(Executor concurrentExecutor, ScheduledExecutorService scheduledExecutor) {_		super(concurrentExecutor)__		setScheduledExecutor(scheduledExecutor)__	};create,a,new,concurrent,task,scheduler,using,the,given,jdk,1,5,executors,as,delegates,param,concurrent,executor,the,jdk,1,5,concurrent,executor,to,delegate,to,for,link,org,springframework,scheduling,scheduling,task,executor,invocations,param,scheduled,executor,the,jdk,1,5,scheduled,executor,to,delegate,to,for,link,task,scheduler,invocations;public,concurrent,task,scheduler,executor,concurrent,executor,scheduled,executor,service,scheduled,executor,super,concurrent,executor,set,scheduled,executor,scheduled,executor
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler(Executor concurrentExecutor, ScheduledExecutorService scheduledExecutor);1357119239;Create a new ConcurrentTaskScheduler,_using the given JDK 1.5 executors as delegates._@param concurrentExecutor the JDK 1.5 concurrent executor to delegate to_for {@link org.springframework.scheduling.SchedulingTaskExecutor} invocations_@param scheduledExecutor the JDK 1.5 scheduled executor to delegate to_for {@link TaskScheduler} invocations;public ConcurrentTaskScheduler(Executor concurrentExecutor, ScheduledExecutorService scheduledExecutor) {_		super(concurrentExecutor)__		setScheduledExecutor(scheduledExecutor)__	};create,a,new,concurrent,task,scheduler,using,the,given,jdk,1,5,executors,as,delegates,param,concurrent,executor,the,jdk,1,5,concurrent,executor,to,delegate,to,for,link,org,springframework,scheduling,scheduling,task,executor,invocations,param,scheduled,executor,the,jdk,1,5,scheduled,executor,to,delegate,to,for,link,task,scheduler,invocations;public,concurrent,task,scheduler,executor,concurrent,executor,scheduled,executor,service,scheduled,executor,super,concurrent,executor,set,scheduled,executor,scheduled,executor
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler(Executor concurrentExecutor, ScheduledExecutorService scheduledExecutor);1364421156;Create a new ConcurrentTaskScheduler,_using the given JDK 1.5 executors as delegates._<p>Autodetects a JSR-236 {@link javax.enterprise.concurrent.ManagedScheduledExecutorService}_in order to use it for trigger-based scheduling if possible,_instead of Spring's local trigger management._@param concurrentExecutor the JDK 1.5 concurrent executor to delegate to_for {@link org.springframework.scheduling.SchedulingTaskExecutor} invocations_@param scheduledExecutor the JDK 1.5 scheduled executor to delegate to_for {@link TaskScheduler} invocations;public ConcurrentTaskScheduler(Executor concurrentExecutor, ScheduledExecutorService scheduledExecutor) {_		super(concurrentExecutor)__		setScheduledExecutor(scheduledExecutor)__	};create,a,new,concurrent,task,scheduler,using,the,given,jdk,1,5,executors,as,delegates,p,autodetects,a,jsr,236,link,javax,enterprise,concurrent,managed,scheduled,executor,service,in,order,to,use,it,for,trigger,based,scheduling,if,possible,instead,of,spring,s,local,trigger,management,param,concurrent,executor,the,jdk,1,5,concurrent,executor,to,delegate,to,for,link,org,springframework,scheduling,scheduling,task,executor,invocations,param,scheduled,executor,the,jdk,1,5,scheduled,executor,to,delegate,to,for,link,task,scheduler,invocations;public,concurrent,task,scheduler,executor,concurrent,executor,scheduled,executor,service,scheduled,executor,super,concurrent,executor,set,scheduled,executor,scheduled,executor
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler(Executor concurrentExecutor, ScheduledExecutorService scheduledExecutor);1368482696;Create a new ConcurrentTaskScheduler,_using the given JDK 1.5 executors as delegates._<p>Autodetects a JSR-236 {@link javax.enterprise.concurrent.ManagedScheduledExecutorService}_in order to use it for trigger-based scheduling if possible,_instead of Spring's local trigger management._@param concurrentExecutor the JDK 1.5 concurrent executor to delegate to_for {@link org.springframework.scheduling.SchedulingTaskExecutor} invocations_@param scheduledExecutor the JDK 1.5 scheduled executor to delegate to_for {@link TaskScheduler} invocations;public ConcurrentTaskScheduler(Executor concurrentExecutor, ScheduledExecutorService scheduledExecutor) {_		super(concurrentExecutor)__		setScheduledExecutor(scheduledExecutor)__	};create,a,new,concurrent,task,scheduler,using,the,given,jdk,1,5,executors,as,delegates,p,autodetects,a,jsr,236,link,javax,enterprise,concurrent,managed,scheduled,executor,service,in,order,to,use,it,for,trigger,based,scheduling,if,possible,instead,of,spring,s,local,trigger,management,param,concurrent,executor,the,jdk,1,5,concurrent,executor,to,delegate,to,for,link,org,springframework,scheduling,scheduling,task,executor,invocations,param,scheduled,executor,the,jdk,1,5,scheduled,executor,to,delegate,to,for,link,task,scheduler,invocations;public,concurrent,task,scheduler,executor,concurrent,executor,scheduled,executor,service,scheduled,executor,super,concurrent,executor,set,scheduled,executor,scheduled,executor
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler(Executor concurrentExecutor, ScheduledExecutorService scheduledExecutor);1383178438;Create a new ConcurrentTaskScheduler, using the given {@link java.util.concurrent.Executor}_and {@link java.util.concurrent.ScheduledExecutorService} as delegates._<p>Autodetects a JSR-236 {@link javax.enterprise.concurrent.ManagedScheduledExecutorService}_in order to use it for trigger-based scheduling if possible,_instead of Spring's local trigger management._@param concurrentExecutor the {@link java.util.concurrent.Executor} to delegate to_for {@link org.springframework.scheduling.SchedulingTaskExecutor} invocations_@param scheduledExecutor the {@link java.util.concurrent.ScheduledExecutorService}_to delegate to for {@link TaskScheduler} invocations;public ConcurrentTaskScheduler(Executor concurrentExecutor, ScheduledExecutorService scheduledExecutor) {_		super(concurrentExecutor)__		setScheduledExecutor(scheduledExecutor)__	};create,a,new,concurrent,task,scheduler,using,the,given,link,java,util,concurrent,executor,and,link,java,util,concurrent,scheduled,executor,service,as,delegates,p,autodetects,a,jsr,236,link,javax,enterprise,concurrent,managed,scheduled,executor,service,in,order,to,use,it,for,trigger,based,scheduling,if,possible,instead,of,spring,s,local,trigger,management,param,concurrent,executor,the,link,java,util,concurrent,executor,to,delegate,to,for,link,org,springframework,scheduling,scheduling,task,executor,invocations,param,scheduled,executor,the,link,java,util,concurrent,scheduled,executor,service,to,delegate,to,for,link,task,scheduler,invocations;public,concurrent,task,scheduler,executor,concurrent,executor,scheduled,executor,service,scheduled,executor,super,concurrent,executor,set,scheduled,executor,scheduled,executor
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler(Executor concurrentExecutor, ScheduledExecutorService scheduledExecutor);1383419642;Create a new ConcurrentTaskScheduler, using the given {@link java.util.concurrent.Executor}_and {@link java.util.concurrent.ScheduledExecutorService} as delegates._<p>Autodetects a JSR-236 {@link javax.enterprise.concurrent.ManagedScheduledExecutorService}_in order to use it for trigger-based scheduling if possible,_instead of Spring's local trigger management._@param concurrentExecutor the {@link java.util.concurrent.Executor} to delegate to_for {@link org.springframework.scheduling.SchedulingTaskExecutor} invocations_@param scheduledExecutor the {@link java.util.concurrent.ScheduledExecutorService}_to delegate to for {@link TaskScheduler} invocations;public ConcurrentTaskScheduler(Executor concurrentExecutor, ScheduledExecutorService scheduledExecutor) {_		super(concurrentExecutor)__		setScheduledExecutor(scheduledExecutor)__	};create,a,new,concurrent,task,scheduler,using,the,given,link,java,util,concurrent,executor,and,link,java,util,concurrent,scheduled,executor,service,as,delegates,p,autodetects,a,jsr,236,link,javax,enterprise,concurrent,managed,scheduled,executor,service,in,order,to,use,it,for,trigger,based,scheduling,if,possible,instead,of,spring,s,local,trigger,management,param,concurrent,executor,the,link,java,util,concurrent,executor,to,delegate,to,for,link,org,springframework,scheduling,scheduling,task,executor,invocations,param,scheduled,executor,the,link,java,util,concurrent,scheduled,executor,service,to,delegate,to,for,link,task,scheduler,invocations;public,concurrent,task,scheduler,executor,concurrent,executor,scheduled,executor,service,scheduled,executor,super,concurrent,executor,set,scheduled,executor,scheduled,executor
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler(Executor concurrentExecutor, ScheduledExecutorService scheduledExecutor);1385412762;Create a new ConcurrentTaskScheduler, using the given {@link java.util.concurrent.Executor}_and {@link java.util.concurrent.ScheduledExecutorService} as delegates._<p>Autodetects a JSR-236 {@link javax.enterprise.concurrent.ManagedScheduledExecutorService}_in order to use it for trigger-based scheduling if possible,_instead of Spring's local trigger management._@param concurrentExecutor the {@link java.util.concurrent.Executor} to delegate to_for {@link org.springframework.scheduling.SchedulingTaskExecutor} invocations_@param scheduledExecutor the {@link java.util.concurrent.ScheduledExecutorService}_to delegate to for {@link TaskScheduler} invocations;public ConcurrentTaskScheduler(Executor concurrentExecutor, ScheduledExecutorService scheduledExecutor) {_		super(concurrentExecutor)__		setScheduledExecutor(scheduledExecutor)__	};create,a,new,concurrent,task,scheduler,using,the,given,link,java,util,concurrent,executor,and,link,java,util,concurrent,scheduled,executor,service,as,delegates,p,autodetects,a,jsr,236,link,javax,enterprise,concurrent,managed,scheduled,executor,service,in,order,to,use,it,for,trigger,based,scheduling,if,possible,instead,of,spring,s,local,trigger,management,param,concurrent,executor,the,link,java,util,concurrent,executor,to,delegate,to,for,link,org,springframework,scheduling,scheduling,task,executor,invocations,param,scheduled,executor,the,link,java,util,concurrent,scheduled,executor,service,to,delegate,to,for,link,task,scheduler,invocations;public,concurrent,task,scheduler,executor,concurrent,executor,scheduled,executor,service,scheduled,executor,super,concurrent,executor,set,scheduled,executor,scheduled,executor
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler(Executor concurrentExecutor, ScheduledExecutorService scheduledExecutor);1496837955;Create a new ConcurrentTaskScheduler, using the given {@link java.util.concurrent.Executor}_and {@link java.util.concurrent.ScheduledExecutorService} as delegates._<p>Autodetects a JSR-236 {@link javax.enterprise.concurrent.ManagedScheduledExecutorService}_in order to use it for trigger-based scheduling if possible,_instead of Spring's local trigger management._@param concurrentExecutor the {@link java.util.concurrent.Executor} to delegate to_for {@link org.springframework.scheduling.SchedulingTaskExecutor} invocations_@param scheduledExecutor the {@link java.util.concurrent.ScheduledExecutorService}_to delegate to for {@link TaskScheduler} invocations;public ConcurrentTaskScheduler(Executor concurrentExecutor, ScheduledExecutorService scheduledExecutor) {_		super(concurrentExecutor)__		setScheduledExecutor(scheduledExecutor)__	};create,a,new,concurrent,task,scheduler,using,the,given,link,java,util,concurrent,executor,and,link,java,util,concurrent,scheduled,executor,service,as,delegates,p,autodetects,a,jsr,236,link,javax,enterprise,concurrent,managed,scheduled,executor,service,in,order,to,use,it,for,trigger,based,scheduling,if,possible,instead,of,spring,s,local,trigger,management,param,concurrent,executor,the,link,java,util,concurrent,executor,to,delegate,to,for,link,org,springframework,scheduling,scheduling,task,executor,invocations,param,scheduled,executor,the,link,java,util,concurrent,scheduled,executor,service,to,delegate,to,for,link,task,scheduler,invocations;public,concurrent,task,scheduler,executor,concurrent,executor,scheduled,executor,service,scheduled,executor,super,concurrent,executor,set,scheduled,executor,scheduled,executor
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler(Executor concurrentExecutor, ScheduledExecutorService scheduledExecutor);1498780456;Create a new ConcurrentTaskScheduler, using the given {@link java.util.concurrent.Executor}_and {@link java.util.concurrent.ScheduledExecutorService} as delegates._<p>Autodetects a JSR-236 {@link javax.enterprise.concurrent.ManagedScheduledExecutorService}_in order to use it for trigger-based scheduling if possible,_instead of Spring's local trigger management._@param concurrentExecutor the {@link java.util.concurrent.Executor} to delegate to_for {@link org.springframework.scheduling.SchedulingTaskExecutor} invocations_@param scheduledExecutor the {@link java.util.concurrent.ScheduledExecutorService}_to delegate to for {@link TaskScheduler} invocations;public ConcurrentTaskScheduler(Executor concurrentExecutor, ScheduledExecutorService scheduledExecutor) {_		super(concurrentExecutor)__		this.scheduledExecutor = initScheduledExecutor(scheduledExecutor)__	};create,a,new,concurrent,task,scheduler,using,the,given,link,java,util,concurrent,executor,and,link,java,util,concurrent,scheduled,executor,service,as,delegates,p,autodetects,a,jsr,236,link,javax,enterprise,concurrent,managed,scheduled,executor,service,in,order,to,use,it,for,trigger,based,scheduling,if,possible,instead,of,spring,s,local,trigger,management,param,concurrent,executor,the,link,java,util,concurrent,executor,to,delegate,to,for,link,org,springframework,scheduling,scheduling,task,executor,invocations,param,scheduled,executor,the,link,java,util,concurrent,scheduled,executor,service,to,delegate,to,for,link,task,scheduler,invocations;public,concurrent,task,scheduler,executor,concurrent,executor,scheduled,executor,service,scheduled,executor,super,concurrent,executor,this,scheduled,executor,init,scheduled,executor,scheduled,executor
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler(Executor concurrentExecutor, ScheduledExecutorService scheduledExecutor);1502974979;Create a new ConcurrentTaskScheduler, using the given {@link java.util.concurrent.Executor}_and {@link java.util.concurrent.ScheduledExecutorService} as delegates._<p>Autodetects a JSR-236 {@link javax.enterprise.concurrent.ManagedScheduledExecutorService}_in order to use it for trigger-based scheduling if possible,_instead of Spring's local trigger management._@param concurrentExecutor the {@link java.util.concurrent.Executor} to delegate to_for {@link org.springframework.scheduling.SchedulingTaskExecutor} invocations_@param scheduledExecutor the {@link java.util.concurrent.ScheduledExecutorService}_to delegate to for {@link TaskScheduler} invocations;public ConcurrentTaskScheduler(Executor concurrentExecutor, ScheduledExecutorService scheduledExecutor) {_		super(concurrentExecutor)__		this.scheduledExecutor = initScheduledExecutor(scheduledExecutor)__	};create,a,new,concurrent,task,scheduler,using,the,given,link,java,util,concurrent,executor,and,link,java,util,concurrent,scheduled,executor,service,as,delegates,p,autodetects,a,jsr,236,link,javax,enterprise,concurrent,managed,scheduled,executor,service,in,order,to,use,it,for,trigger,based,scheduling,if,possible,instead,of,spring,s,local,trigger,management,param,concurrent,executor,the,link,java,util,concurrent,executor,to,delegate,to,for,link,org,springframework,scheduling,scheduling,task,executor,invocations,param,scheduled,executor,the,link,java,util,concurrent,scheduled,executor,service,to,delegate,to,for,link,task,scheduler,invocations;public,concurrent,task,scheduler,executor,concurrent,executor,scheduled,executor,service,scheduled,executor,super,concurrent,executor,this,scheduled,executor,init,scheduled,executor,scheduled,executor
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler();1328020251;Create a new ConcurrentTaskScheduler,_using a single thread executor as default._@see java.util.concurrent.Executors#newSingleThreadScheduledExecutor();public ConcurrentTaskScheduler() {_		super()__		setScheduledExecutor(null)__	};create,a,new,concurrent,task,scheduler,using,a,single,thread,executor,as,default,see,java,util,concurrent,executors,new,single,thread,scheduled,executor;public,concurrent,task,scheduler,super,set,scheduled,executor,null
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler();1356735495;Create a new ConcurrentTaskScheduler,_using a single thread executor as default._@see java.util.concurrent.Executors#newSingleThreadScheduledExecutor();public ConcurrentTaskScheduler() {_		super()__		setScheduledExecutor(null)__	};create,a,new,concurrent,task,scheduler,using,a,single,thread,executor,as,default,see,java,util,concurrent,executors,new,single,thread,scheduled,executor;public,concurrent,task,scheduler,super,set,scheduled,executor,null
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler();1357119239;Create a new ConcurrentTaskScheduler,_using a single thread executor as default._@see java.util.concurrent.Executors#newSingleThreadScheduledExecutor();public ConcurrentTaskScheduler() {_		super()__		setScheduledExecutor(null)__	};create,a,new,concurrent,task,scheduler,using,a,single,thread,executor,as,default,see,java,util,concurrent,executors,new,single,thread,scheduled,executor;public,concurrent,task,scheduler,super,set,scheduled,executor,null
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler();1364421156;Create a new ConcurrentTaskScheduler,_using a single thread executor as default._@see java.util.concurrent.Executors#newSingleThreadScheduledExecutor();public ConcurrentTaskScheduler() {_		super()__		setScheduledExecutor(null)__	};create,a,new,concurrent,task,scheduler,using,a,single,thread,executor,as,default,see,java,util,concurrent,executors,new,single,thread,scheduled,executor;public,concurrent,task,scheduler,super,set,scheduled,executor,null
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler();1368482696;Create a new ConcurrentTaskScheduler,_using a single thread executor as default._@see java.util.concurrent.Executors#newSingleThreadScheduledExecutor();public ConcurrentTaskScheduler() {_		super()__		setScheduledExecutor(null)__	};create,a,new,concurrent,task,scheduler,using,a,single,thread,executor,as,default,see,java,util,concurrent,executors,new,single,thread,scheduled,executor;public,concurrent,task,scheduler,super,set,scheduled,executor,null
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler();1383178438;Create a new ConcurrentTaskScheduler,_using a single thread executor as default._@see java.util.concurrent.Executors#newSingleThreadScheduledExecutor();public ConcurrentTaskScheduler() {_		super()__		setScheduledExecutor(null)__	};create,a,new,concurrent,task,scheduler,using,a,single,thread,executor,as,default,see,java,util,concurrent,executors,new,single,thread,scheduled,executor;public,concurrent,task,scheduler,super,set,scheduled,executor,null
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler();1383419642;Create a new ConcurrentTaskScheduler,_using a single thread executor as default._@see java.util.concurrent.Executors#newSingleThreadScheduledExecutor();public ConcurrentTaskScheduler() {_		super()__		setScheduledExecutor(null)__	};create,a,new,concurrent,task,scheduler,using,a,single,thread,executor,as,default,see,java,util,concurrent,executors,new,single,thread,scheduled,executor;public,concurrent,task,scheduler,super,set,scheduled,executor,null
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler();1385412762;Create a new ConcurrentTaskScheduler,_using a single thread executor as default._@see java.util.concurrent.Executors#newSingleThreadScheduledExecutor();public ConcurrentTaskScheduler() {_		super()__		setScheduledExecutor(null)__	};create,a,new,concurrent,task,scheduler,using,a,single,thread,executor,as,default,see,java,util,concurrent,executors,new,single,thread,scheduled,executor;public,concurrent,task,scheduler,super,set,scheduled,executor,null
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler();1496837955;Create a new ConcurrentTaskScheduler,_using a single thread executor as default._@see java.util.concurrent.Executors#newSingleThreadScheduledExecutor();public ConcurrentTaskScheduler() {_		super()__		setScheduledExecutor(null)__	};create,a,new,concurrent,task,scheduler,using,a,single,thread,executor,as,default,see,java,util,concurrent,executors,new,single,thread,scheduled,executor;public,concurrent,task,scheduler,super,set,scheduled,executor,null
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler();1498780456;Create a new ConcurrentTaskScheduler,_using a single thread executor as default._@see java.util.concurrent.Executors#newSingleThreadScheduledExecutor();public ConcurrentTaskScheduler() {_		super()__		this.scheduledExecutor = initScheduledExecutor(null)__	};create,a,new,concurrent,task,scheduler,using,a,single,thread,executor,as,default,see,java,util,concurrent,executors,new,single,thread,scheduled,executor;public,concurrent,task,scheduler,super,this,scheduled,executor,init,scheduled,executor,null
ConcurrentTaskScheduler -> public ConcurrentTaskScheduler();1502974979;Create a new ConcurrentTaskScheduler,_using a single thread executor as default._@see java.util.concurrent.Executors#newSingleThreadScheduledExecutor();public ConcurrentTaskScheduler() {_		super()__		this.scheduledExecutor = initScheduledExecutor(null)__	};create,a,new,concurrent,task,scheduler,using,a,single,thread,executor,as,default,see,java,util,concurrent,executors,new,single,thread,scheduled,executor;public,concurrent,task,scheduler,super,this,scheduled,executor,init,scheduled,executor,null
ConcurrentTaskScheduler -> public final void setScheduledExecutor(ScheduledExecutorService scheduledExecutor);1328020251;Specify the JDK 1.5 scheduled executor to delegate to._<p>Note: This will only apply to {@link TaskScheduler} invocations._If you want the given executor to apply to_{@link org.springframework.scheduling.SchedulingTaskExecutor} invocations_as well, pass the same executor reference to {@link #setConcurrentExecutor}._@see #setConcurrentExecutor;public final void setScheduledExecutor(ScheduledExecutorService scheduledExecutor) {_		this.scheduledExecutor =_				(scheduledExecutor != null ? scheduledExecutor : Executors.newSingleThreadScheduledExecutor())__	};specify,the,jdk,1,5,scheduled,executor,to,delegate,to,p,note,this,will,only,apply,to,link,task,scheduler,invocations,if,you,want,the,given,executor,to,apply,to,link,org,springframework,scheduling,scheduling,task,executor,invocations,as,well,pass,the,same,executor,reference,to,link,set,concurrent,executor,see,set,concurrent,executor;public,final,void,set,scheduled,executor,scheduled,executor,service,scheduled,executor,this,scheduled,executor,scheduled,executor,null,scheduled,executor,executors,new,single,thread,scheduled,executor
ConcurrentTaskScheduler -> public final void setScheduledExecutor(ScheduledExecutorService scheduledExecutor);1356735495;Specify the JDK 1.5 scheduled executor to delegate to._<p>Note: This will only apply to {@link TaskScheduler} invocations._If you want the given executor to apply to_{@link org.springframework.scheduling.SchedulingTaskExecutor} invocations_as well, pass the same executor reference to {@link #setConcurrentExecutor}._@see #setConcurrentExecutor;public final void setScheduledExecutor(ScheduledExecutorService scheduledExecutor) {_		this.scheduledExecutor =_				(scheduledExecutor != null ? scheduledExecutor : Executors.newSingleThreadScheduledExecutor())__	};specify,the,jdk,1,5,scheduled,executor,to,delegate,to,p,note,this,will,only,apply,to,link,task,scheduler,invocations,if,you,want,the,given,executor,to,apply,to,link,org,springframework,scheduling,scheduling,task,executor,invocations,as,well,pass,the,same,executor,reference,to,link,set,concurrent,executor,see,set,concurrent,executor;public,final,void,set,scheduled,executor,scheduled,executor,service,scheduled,executor,this,scheduled,executor,scheduled,executor,null,scheduled,executor,executors,new,single,thread,scheduled,executor
ConcurrentTaskScheduler -> public final void setScheduledExecutor(ScheduledExecutorService scheduledExecutor);1357119239;Specify the JDK 1.5 scheduled executor to delegate to._<p>Note: This will only apply to {@link TaskScheduler} invocations._If you want the given executor to apply to_{@link org.springframework.scheduling.SchedulingTaskExecutor} invocations_as well, pass the same executor reference to {@link #setConcurrentExecutor}._@see #setConcurrentExecutor;public final void setScheduledExecutor(ScheduledExecutorService scheduledExecutor) {_		this.scheduledExecutor =_				(scheduledExecutor != null ? scheduledExecutor : Executors.newSingleThreadScheduledExecutor())__	};specify,the,jdk,1,5,scheduled,executor,to,delegate,to,p,note,this,will,only,apply,to,link,task,scheduler,invocations,if,you,want,the,given,executor,to,apply,to,link,org,springframework,scheduling,scheduling,task,executor,invocations,as,well,pass,the,same,executor,reference,to,link,set,concurrent,executor,see,set,concurrent,executor;public,final,void,set,scheduled,executor,scheduled,executor,service,scheduled,executor,this,scheduled,executor,scheduled,executor,null,scheduled,executor,executors,new,single,thread,scheduled,executor
ConcurrentTaskScheduler -> public final void setScheduledExecutor(ScheduledExecutorService scheduledExecutor);1364421156;Specify the JDK 1.5 scheduled executor to delegate to._<p>Autodetects a JSR-236 {@link javax.enterprise.concurrent.ManagedScheduledExecutorService}_in order to use it for trigger-based scheduling if possible,_instead of Spring's local trigger management._<p>Note: This will only apply to {@link TaskScheduler} invocations._If you want the given executor to apply to_{@link org.springframework.scheduling.SchedulingTaskExecutor} invocations_as well, pass the same executor reference to {@link #setConcurrentExecutor}._@see #setConcurrentExecutor;public final void setScheduledExecutor(ScheduledExecutorService scheduledExecutor) {_		if (scheduledExecutor != null) {_			this.scheduledExecutor = scheduledExecutor__			this.enterpriseConcurrentScheduler = (managedScheduledExecutorService != null &&_					managedScheduledExecutorService.isInstance(scheduledExecutor))__		}_		else {_			this.scheduledExecutor = Executors.newSingleThreadScheduledExecutor()__			this.enterpriseConcurrentScheduler = false__		}_	};specify,the,jdk,1,5,scheduled,executor,to,delegate,to,p,autodetects,a,jsr,236,link,javax,enterprise,concurrent,managed,scheduled,executor,service,in,order,to,use,it,for,trigger,based,scheduling,if,possible,instead,of,spring,s,local,trigger,management,p,note,this,will,only,apply,to,link,task,scheduler,invocations,if,you,want,the,given,executor,to,apply,to,link,org,springframework,scheduling,scheduling,task,executor,invocations,as,well,pass,the,same,executor,reference,to,link,set,concurrent,executor,see,set,concurrent,executor;public,final,void,set,scheduled,executor,scheduled,executor,service,scheduled,executor,if,scheduled,executor,null,this,scheduled,executor,scheduled,executor,this,enterprise,concurrent,scheduler,managed,scheduled,executor,service,null,managed,scheduled,executor,service,is,instance,scheduled,executor,else,this,scheduled,executor,executors,new,single,thread,scheduled,executor,this,enterprise,concurrent,scheduler,false
ConcurrentTaskScheduler -> public final void setScheduledExecutor(ScheduledExecutorService scheduledExecutor);1368482696;Specify the JDK 1.5 scheduled executor to delegate to._<p>Autodetects a JSR-236 {@link javax.enterprise.concurrent.ManagedScheduledExecutorService}_in order to use it for trigger-based scheduling if possible,_instead of Spring's local trigger management._<p>Note: This will only apply to {@link TaskScheduler} invocations._If you want the given executor to apply to_{@link org.springframework.scheduling.SchedulingTaskExecutor} invocations_as well, pass the same executor reference to {@link #setConcurrentExecutor}._@see #setConcurrentExecutor;public final void setScheduledExecutor(ScheduledExecutorService scheduledExecutor) {_		if (scheduledExecutor != null) {_			this.scheduledExecutor = scheduledExecutor__			this.enterpriseConcurrentScheduler = (managedScheduledExecutorService != null &&_					managedScheduledExecutorService.isInstance(scheduledExecutor))__		}_		else {_			this.scheduledExecutor = Executors.newSingleThreadScheduledExecutor()__			this.enterpriseConcurrentScheduler = false__		}_	};specify,the,jdk,1,5,scheduled,executor,to,delegate,to,p,autodetects,a,jsr,236,link,javax,enterprise,concurrent,managed,scheduled,executor,service,in,order,to,use,it,for,trigger,based,scheduling,if,possible,instead,of,spring,s,local,trigger,management,p,note,this,will,only,apply,to,link,task,scheduler,invocations,if,you,want,the,given,executor,to,apply,to,link,org,springframework,scheduling,scheduling,task,executor,invocations,as,well,pass,the,same,executor,reference,to,link,set,concurrent,executor,see,set,concurrent,executor;public,final,void,set,scheduled,executor,scheduled,executor,service,scheduled,executor,if,scheduled,executor,null,this,scheduled,executor,scheduled,executor,this,enterprise,concurrent,scheduler,managed,scheduled,executor,service,null,managed,scheduled,executor,service,is,instance,scheduled,executor,else,this,scheduled,executor,executors,new,single,thread,scheduled,executor,this,enterprise,concurrent,scheduler,false
ConcurrentTaskScheduler -> public final void setScheduledExecutor(ScheduledExecutorService scheduledExecutor);1383178438;Specify the {@link java.util.concurrent.ScheduledExecutorService} to delegate to._<p>Autodetects a JSR-236 {@link javax.enterprise.concurrent.ManagedScheduledExecutorService}_in order to use it for trigger-based scheduling if possible,_instead of Spring's local trigger management._<p>Note: This will only apply to {@link TaskScheduler} invocations._If you want the given executor to apply to_{@link org.springframework.scheduling.SchedulingTaskExecutor} invocations_as well, pass the same executor reference to {@link #setConcurrentExecutor}._@see #setConcurrentExecutor;public final void setScheduledExecutor(ScheduledExecutorService scheduledExecutor) {_		if (scheduledExecutor != null) {_			this.scheduledExecutor = scheduledExecutor__			this.enterpriseConcurrentScheduler = (managedScheduledExecutorService != null &&_					managedScheduledExecutorService.isInstance(scheduledExecutor))__		}_		else {_			this.scheduledExecutor = Executors.newSingleThreadScheduledExecutor()__			this.enterpriseConcurrentScheduler = false__		}_	};specify,the,link,java,util,concurrent,scheduled,executor,service,to,delegate,to,p,autodetects,a,jsr,236,link,javax,enterprise,concurrent,managed,scheduled,executor,service,in,order,to,use,it,for,trigger,based,scheduling,if,possible,instead,of,spring,s,local,trigger,management,p,note,this,will,only,apply,to,link,task,scheduler,invocations,if,you,want,the,given,executor,to,apply,to,link,org,springframework,scheduling,scheduling,task,executor,invocations,as,well,pass,the,same,executor,reference,to,link,set,concurrent,executor,see,set,concurrent,executor;public,final,void,set,scheduled,executor,scheduled,executor,service,scheduled,executor,if,scheduled,executor,null,this,scheduled,executor,scheduled,executor,this,enterprise,concurrent,scheduler,managed,scheduled,executor,service,null,managed,scheduled,executor,service,is,instance,scheduled,executor,else,this,scheduled,executor,executors,new,single,thread,scheduled,executor,this,enterprise,concurrent,scheduler,false
ConcurrentTaskScheduler -> public final void setScheduledExecutor(ScheduledExecutorService scheduledExecutor);1383419642;Specify the {@link java.util.concurrent.ScheduledExecutorService} to delegate to._<p>Autodetects a JSR-236 {@link javax.enterprise.concurrent.ManagedScheduledExecutorService}_in order to use it for trigger-based scheduling if possible,_instead of Spring's local trigger management._<p>Note: This will only apply to {@link TaskScheduler} invocations._If you want the given executor to apply to_{@link org.springframework.scheduling.SchedulingTaskExecutor} invocations_as well, pass the same executor reference to {@link #setConcurrentExecutor}._@see #setConcurrentExecutor;public final void setScheduledExecutor(ScheduledExecutorService scheduledExecutor) {_		if (scheduledExecutor != null) {_			this.scheduledExecutor = scheduledExecutor__			this.enterpriseConcurrentScheduler = (managedScheduledExecutorServiceClass != null &&_					managedScheduledExecutorServiceClass.isInstance(scheduledExecutor))__		}_		else {_			this.scheduledExecutor = Executors.newSingleThreadScheduledExecutor()__			this.enterpriseConcurrentScheduler = false__		}_	};specify,the,link,java,util,concurrent,scheduled,executor,service,to,delegate,to,p,autodetects,a,jsr,236,link,javax,enterprise,concurrent,managed,scheduled,executor,service,in,order,to,use,it,for,trigger,based,scheduling,if,possible,instead,of,spring,s,local,trigger,management,p,note,this,will,only,apply,to,link,task,scheduler,invocations,if,you,want,the,given,executor,to,apply,to,link,org,springframework,scheduling,scheduling,task,executor,invocations,as,well,pass,the,same,executor,reference,to,link,set,concurrent,executor,see,set,concurrent,executor;public,final,void,set,scheduled,executor,scheduled,executor,service,scheduled,executor,if,scheduled,executor,null,this,scheduled,executor,scheduled,executor,this,enterprise,concurrent,scheduler,managed,scheduled,executor,service,class,null,managed,scheduled,executor,service,class,is,instance,scheduled,executor,else,this,scheduled,executor,executors,new,single,thread,scheduled,executor,this,enterprise,concurrent,scheduler,false
ConcurrentTaskScheduler -> public final void setScheduledExecutor(ScheduledExecutorService scheduledExecutor);1385412762;Specify the {@link java.util.concurrent.ScheduledExecutorService} to delegate to._<p>Autodetects a JSR-236 {@link javax.enterprise.concurrent.ManagedScheduledExecutorService}_in order to use it for trigger-based scheduling if possible,_instead of Spring's local trigger management._<p>Note: This will only apply to {@link TaskScheduler} invocations._If you want the given executor to apply to_{@link org.springframework.scheduling.SchedulingTaskExecutor} invocations_as well, pass the same executor reference to {@link #setConcurrentExecutor}._@see #setConcurrentExecutor;public final void setScheduledExecutor(ScheduledExecutorService scheduledExecutor) {_		if (scheduledExecutor != null) {_			this.scheduledExecutor = scheduledExecutor__			this.enterpriseConcurrentScheduler = (managedScheduledExecutorServiceClass != null &&_					managedScheduledExecutorServiceClass.isInstance(scheduledExecutor))__		}_		else {_			this.scheduledExecutor = Executors.newSingleThreadScheduledExecutor()__			this.enterpriseConcurrentScheduler = false__		}_	};specify,the,link,java,util,concurrent,scheduled,executor,service,to,delegate,to,p,autodetects,a,jsr,236,link,javax,enterprise,concurrent,managed,scheduled,executor,service,in,order,to,use,it,for,trigger,based,scheduling,if,possible,instead,of,spring,s,local,trigger,management,p,note,this,will,only,apply,to,link,task,scheduler,invocations,if,you,want,the,given,executor,to,apply,to,link,org,springframework,scheduling,scheduling,task,executor,invocations,as,well,pass,the,same,executor,reference,to,link,set,concurrent,executor,see,set,concurrent,executor;public,final,void,set,scheduled,executor,scheduled,executor,service,scheduled,executor,if,scheduled,executor,null,this,scheduled,executor,scheduled,executor,this,enterprise,concurrent,scheduler,managed,scheduled,executor,service,class,null,managed,scheduled,executor,service,class,is,instance,scheduled,executor,else,this,scheduled,executor,executors,new,single,thread,scheduled,executor,this,enterprise,concurrent,scheduler,false
ConcurrentTaskScheduler -> public void setErrorHandler(ErrorHandler errorHandler);1328020251;Provide an {@link ErrorHandler} strategy.;public void setErrorHandler(ErrorHandler errorHandler) {_		Assert.notNull(errorHandler, "'errorHandler' must not be null")__		this.errorHandler = errorHandler__	};provide,an,link,error,handler,strategy;public,void,set,error,handler,error,handler,error,handler,assert,not,null,error,handler,error,handler,must,not,be,null,this,error,handler,error,handler
ConcurrentTaskScheduler -> public void setErrorHandler(ErrorHandler errorHandler);1356735495;Provide an {@link ErrorHandler} strategy.;public void setErrorHandler(ErrorHandler errorHandler) {_		Assert.notNull(errorHandler, "'errorHandler' must not be null")__		this.errorHandler = errorHandler__	};provide,an,link,error,handler,strategy;public,void,set,error,handler,error,handler,error,handler,assert,not,null,error,handler,error,handler,must,not,be,null,this,error,handler,error,handler
ConcurrentTaskScheduler -> public void setErrorHandler(ErrorHandler errorHandler);1357119239;Provide an {@link ErrorHandler} strategy.;public void setErrorHandler(ErrorHandler errorHandler) {_		Assert.notNull(errorHandler, "'errorHandler' must not be null")__		this.errorHandler = errorHandler__	};provide,an,link,error,handler,strategy;public,void,set,error,handler,error,handler,error,handler,assert,not,null,error,handler,error,handler,must,not,be,null,this,error,handler,error,handler
ConcurrentTaskScheduler -> public void setErrorHandler(ErrorHandler errorHandler);1364421156;Provide an {@link ErrorHandler} strategy.;public void setErrorHandler(ErrorHandler errorHandler) {_		Assert.notNull(errorHandler, "'errorHandler' must not be null")__		this.errorHandler = errorHandler__	};provide,an,link,error,handler,strategy;public,void,set,error,handler,error,handler,error,handler,assert,not,null,error,handler,error,handler,must,not,be,null,this,error,handler,error,handler
ConcurrentTaskScheduler -> public void setErrorHandler(ErrorHandler errorHandler);1368482696;Provide an {@link ErrorHandler} strategy.;public void setErrorHandler(ErrorHandler errorHandler) {_		Assert.notNull(errorHandler, "'errorHandler' must not be null")__		this.errorHandler = errorHandler__	};provide,an,link,error,handler,strategy;public,void,set,error,handler,error,handler,error,handler,assert,not,null,error,handler,error,handler,must,not,be,null,this,error,handler,error,handler
ConcurrentTaskScheduler -> public void setErrorHandler(ErrorHandler errorHandler);1383178438;Provide an {@link ErrorHandler} strategy.;public void setErrorHandler(ErrorHandler errorHandler) {_		Assert.notNull(errorHandler, "'errorHandler' must not be null")__		this.errorHandler = errorHandler__	};provide,an,link,error,handler,strategy;public,void,set,error,handler,error,handler,error,handler,assert,not,null,error,handler,error,handler,must,not,be,null,this,error,handler,error,handler
ConcurrentTaskScheduler -> public void setErrorHandler(ErrorHandler errorHandler);1383419642;Provide an {@link ErrorHandler} strategy.;public void setErrorHandler(ErrorHandler errorHandler) {_		Assert.notNull(errorHandler, "'errorHandler' must not be null")__		this.errorHandler = errorHandler__	};provide,an,link,error,handler,strategy;public,void,set,error,handler,error,handler,error,handler,assert,not,null,error,handler,error,handler,must,not,be,null,this,error,handler,error,handler
ConcurrentTaskScheduler -> public void setErrorHandler(ErrorHandler errorHandler);1385412762;Provide an {@link ErrorHandler} strategy.;public void setErrorHandler(ErrorHandler errorHandler) {_		Assert.notNull(errorHandler, "'errorHandler' must not be null")__		this.errorHandler = errorHandler__	};provide,an,link,error,handler,strategy;public,void,set,error,handler,error,handler,error,handler,assert,not,null,error,handler,error,handler,must,not,be,null,this,error,handler,error,handler
ConcurrentTaskScheduler -> public void setErrorHandler(ErrorHandler errorHandler);1496837955;Provide an {@link ErrorHandler} strategy.;public void setErrorHandler(ErrorHandler errorHandler) {_		Assert.notNull(errorHandler, "ErrorHandler must not be null")__		this.errorHandler = errorHandler__	};provide,an,link,error,handler,strategy;public,void,set,error,handler,error,handler,error,handler,assert,not,null,error,handler,error,handler,must,not,be,null,this,error,handler,error,handler
ConcurrentTaskScheduler -> public void setErrorHandler(ErrorHandler errorHandler);1498780456;Provide an {@link ErrorHandler} strategy.;public void setErrorHandler(ErrorHandler errorHandler) {_		Assert.notNull(errorHandler, "ErrorHandler must not be null")__		this.errorHandler = errorHandler__	};provide,an,link,error,handler,strategy;public,void,set,error,handler,error,handler,error,handler,assert,not,null,error,handler,error,handler,must,not,be,null,this,error,handler,error,handler
ConcurrentTaskScheduler -> public void setErrorHandler(ErrorHandler errorHandler);1502974979;Provide an {@link ErrorHandler} strategy.;public void setErrorHandler(ErrorHandler errorHandler) {_		Assert.notNull(errorHandler, "ErrorHandler must not be null")__		this.errorHandler = errorHandler__	};provide,an,link,error,handler,strategy;public,void,set,error,handler,error,handler,error,handler,assert,not,null,error,handler,error,handler,must,not,be,null,this,error,handler,error,handler
