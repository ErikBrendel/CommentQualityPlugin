# id;timestamp;commentText;codeText;commentWords;codeWords
BshScriptFactory -> @Override 	public boolean requiresConfigInterface();1356735495;BeanShell scripts do require a config interface.;@Override_	public boolean requiresConfigInterface() {_		return true__	};bean,shell,scripts,do,require,a,config,interface;override,public,boolean,requires,config,interface,return,true
BshScriptFactory -> @Override 	public boolean requiresConfigInterface();1368482696;BeanShell scripts do require a config interface.;@Override_	public boolean requiresConfigInterface() {_		return true__	};bean,shell,scripts,do,require,a,config,interface;override,public,boolean,requires,config,interface,return,true
BshScriptFactory -> @Override 	public boolean requiresConfigInterface();1382746895;BeanShell scripts do require a config interface.;@Override_	public boolean requiresConfigInterface() {_		return true__	};bean,shell,scripts,do,require,a,config,interface;override,public,boolean,requires,config,interface,return,true
BshScriptFactory -> @Override 	public boolean requiresConfigInterface();1385412762;BeanShell scripts do require a config interface.;@Override_	public boolean requiresConfigInterface() {_		return true__	};bean,shell,scripts,do,require,a,config,interface;override,public,boolean,requires,config,interface,return,true
BshScriptFactory -> @Override 	public boolean requiresConfigInterface();1389653154;BeanShell scripts do require a config interface.;@Override_	public boolean requiresConfigInterface() {_		return true__	};bean,shell,scripts,do,require,a,config,interface;override,public,boolean,requires,config,interface,return,true
BshScriptFactory -> @Override 	public boolean requiresConfigInterface();1457697320;BeanShell scripts do require a config interface.;@Override_	public boolean requiresConfigInterface() {_		return true__	};bean,shell,scripts,do,require,a,config,interface;override,public,boolean,requires,config,interface,return,true
BshScriptFactory -> @Override 	public boolean requiresConfigInterface();1468948866;BeanShell scripts do require a config interface.;@Override_	public boolean requiresConfigInterface() {_		return true__	};bean,shell,scripts,do,require,a,config,interface;override,public,boolean,requires,config,interface,return,true
BshScriptFactory -> @Override 	public boolean requiresConfigInterface();1495868221;BeanShell scripts do require a config interface.;@Override_	public boolean requiresConfigInterface() {_		return true__	};bean,shell,scripts,do,require,a,config,interface;override,public,boolean,requires,config,interface,return,true
BshScriptFactory -> @Override 	public boolean requiresConfigInterface();1496242568;BeanShell scripts do require a config interface.;@Override_	public boolean requiresConfigInterface() {_		return true__	};bean,shell,scripts,do,require,a,config,interface;override,public,boolean,requires,config,interface,return,true
BshScriptFactory -> @Override 	public boolean requiresConfigInterface();1496837955;BeanShell scripts do require a config interface.;@Override_	public boolean requiresConfigInterface() {_		return true__	};bean,shell,scripts,do,require,a,config,interface;override,public,boolean,requires,config,interface,return,true
BshScriptFactory -> @Override 	public boolean requiresConfigInterface();1498780456;BeanShell scripts do require a config interface.;@Override_	public boolean requiresConfigInterface() {_		return true__	};bean,shell,scripts,do,require,a,config,interface;override,public,boolean,requires,config,interface,return,true
BshScriptFactory -> @Override 	public boolean requiresConfigInterface();1502974979;BeanShell scripts do require a config interface.;@Override_	public boolean requiresConfigInterface() {_		return true__	};bean,shell,scripts,do,require,a,config,interface;override,public,boolean,requires,config,interface,return,true
BshScriptFactory -> public Object getScriptedObject(ScriptSource scriptSource, Class[] actualInterfaces) 			throws IOException, ScriptCompilationException;1328020251;Load and parse the BeanShell script via {@link BshScriptUtils}._@see BshScriptUtils#createBshObject(String, Class[], ClassLoader);public Object getScriptedObject(ScriptSource scriptSource, Class[] actualInterfaces)_			throws IOException, ScriptCompilationException {__		try {_			Class clazz = null___			synchronized (this.scriptClassMonitor) {_				boolean requiresScriptEvaluation = (this.wasModifiedForTypeCheck && this.scriptClass == null)__				this.wasModifiedForTypeCheck = false___				if (scriptSource.isModified() || requiresScriptEvaluation) {_					_					Object result = BshScriptUtils.evaluateBshScript(_							scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__					if (result instanceof Class) {_						_						_						this.scriptClass = (Class) result__					}_					else {_						_						_						_						_						return result__					}_				}_				clazz = this.scriptClass__			}__			if (clazz != null) {_				_				try {_					return clazz.newInstance()__				}_				catch (Throwable ex) {_					throw new ScriptCompilationException(_							scriptSource, "Could not instantiate script class: " + clazz.getName(), ex)__				}_			}_			else {_				_				return BshScriptUtils.createBshObject(_						scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__			}_		}_		catch (EvalError ex) {_			throw new ScriptCompilationException(scriptSource, ex)__		}_	};load,and,parse,the,bean,shell,script,via,link,bsh,script,utils,see,bsh,script,utils,create,bsh,object,string,class,class,loader;public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,try,class,clazz,null,synchronized,this,script,class,monitor,boolean,requires,script,evaluation,this,was,modified,for,type,check,this,script,class,null,this,was,modified,for,type,check,false,if,script,source,is,modified,requires,script,evaluation,object,result,bsh,script,utils,evaluate,bsh,script,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,if,result,instanceof,class,this,script,class,class,result,else,return,result,clazz,this,script,class,if,clazz,null,try,return,clazz,new,instance,catch,throwable,ex,throw,new,script,compilation,exception,script,source,could,not,instantiate,script,class,clazz,get,name,ex,else,return,bsh,script,utils,create,bsh,object,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,catch,eval,error,ex,throw,new,script,compilation,exception,script,source,ex
BshScriptFactory -> public Object getScriptedObject(ScriptSource scriptSource, Class[] actualInterfaces) 			throws IOException, ScriptCompilationException;1357119239;Load and parse the BeanShell script via {@link BshScriptUtils}._@see BshScriptUtils#createBshObject(String, Class[], ClassLoader);public Object getScriptedObject(ScriptSource scriptSource, Class[] actualInterfaces)_			throws IOException, ScriptCompilationException {__		try {_			Class clazz = null___			synchronized (this.scriptClassMonitor) {_				boolean requiresScriptEvaluation = (this.wasModifiedForTypeCheck && this.scriptClass == null)__				this.wasModifiedForTypeCheck = false___				if (scriptSource.isModified() || requiresScriptEvaluation) {_					_					Object result = BshScriptUtils.evaluateBshScript(_							scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__					if (result instanceof Class) {_						_						_						this.scriptClass = (Class) result__					}_					else {_						_						_						_						_						return result__					}_				}_				clazz = this.scriptClass__			}__			if (clazz != null) {_				_				try {_					return clazz.newInstance()__				}_				catch (Throwable ex) {_					throw new ScriptCompilationException(_							scriptSource, "Could not instantiate script class: " + clazz.getName(), ex)__				}_			}_			else {_				_				return BshScriptUtils.createBshObject(_						scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__			}_		}_		catch (EvalError ex) {_			throw new ScriptCompilationException(scriptSource, ex)__		}_	};load,and,parse,the,bean,shell,script,via,link,bsh,script,utils,see,bsh,script,utils,create,bsh,object,string,class,class,loader;public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,try,class,clazz,null,synchronized,this,script,class,monitor,boolean,requires,script,evaluation,this,was,modified,for,type,check,this,script,class,null,this,was,modified,for,type,check,false,if,script,source,is,modified,requires,script,evaluation,object,result,bsh,script,utils,evaluate,bsh,script,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,if,result,instanceof,class,this,script,class,class,result,else,return,result,clazz,this,script,class,if,clazz,null,try,return,clazz,new,instance,catch,throwable,ex,throw,new,script,compilation,exception,script,source,could,not,instantiate,script,class,clazz,get,name,ex,else,return,bsh,script,utils,create,bsh,object,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,catch,eval,error,ex,throw,new,script,compilation,exception,script,source,ex
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator, @Nullable Class<?>... scriptInterfaces);1495868221;Create a new BshScriptFactory for the given script source._<p>The script may either be a simple script that needs a corresponding proxy_generated (implementing the specified interfaces), or declare a full class_or return an actual instance of the scripted object (in which case the_specified interfaces, if any, need to be implemented by that class/instance)._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement (may be {@code null});public BshScriptFactory(String scriptSourceLocator, @Nullable Class<?>... scriptInterfaces) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = scriptInterfaces__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,the,script,may,either,be,a,simple,script,that,needs,a,corresponding,proxy,generated,implementing,the,specified,interfaces,or,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,in,which,case,the,specified,interfaces,if,any,need,to,be,implemented,by,that,class,instance,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement,may,be,code,null;public,bsh,script,factory,string,script,source,locator,nullable,class,script,interfaces,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,script,interfaces,script,interfaces
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator, @Nullable Class<?>... scriptInterfaces);1496242568;Create a new BshScriptFactory for the given script source._<p>The script may either be a simple script that needs a corresponding proxy_generated (implementing the specified interfaces), or declare a full class_or return an actual instance of the scripted object (in which case the_specified interfaces, if any, need to be implemented by that class/instance)._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement (may be {@code null});public BshScriptFactory(String scriptSourceLocator, @Nullable Class<?>... scriptInterfaces) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = scriptInterfaces__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,the,script,may,either,be,a,simple,script,that,needs,a,corresponding,proxy,generated,implementing,the,specified,interfaces,or,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,in,which,case,the,specified,interfaces,if,any,need,to,be,implemented,by,that,class,instance,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement,may,be,code,null;public,bsh,script,factory,string,script,source,locator,nullable,class,script,interfaces,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,script,interfaces,script,interfaces
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator, @Nullable Class<?>... scriptInterfaces);1496837955;Create a new BshScriptFactory for the given script source._<p>The script may either be a simple script that needs a corresponding proxy_generated (implementing the specified interfaces), or declare a full class_or return an actual instance of the scripted object (in which case the_specified interfaces, if any, need to be implemented by that class/instance)._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement (may be {@code null});public BshScriptFactory(String scriptSourceLocator, @Nullable Class<?>... scriptInterfaces) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = scriptInterfaces__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,the,script,may,either,be,a,simple,script,that,needs,a,corresponding,proxy,generated,implementing,the,specified,interfaces,or,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,in,which,case,the,specified,interfaces,if,any,need,to,be,implemented,by,that,class,instance,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement,may,be,code,null;public,bsh,script,factory,string,script,source,locator,nullable,class,script,interfaces,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,script,interfaces,script,interfaces
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator, @Nullable Class<?>... scriptInterfaces);1498780456;Create a new BshScriptFactory for the given script source._<p>The script may either be a simple script that needs a corresponding proxy_generated (implementing the specified interfaces), or declare a full class_or return an actual instance of the scripted object (in which case the_specified interfaces, if any, need to be implemented by that class/instance)._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement (may be {@code null});public BshScriptFactory(String scriptSourceLocator, @Nullable Class<?>... scriptInterfaces) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = scriptInterfaces__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,the,script,may,either,be,a,simple,script,that,needs,a,corresponding,proxy,generated,implementing,the,specified,interfaces,or,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,in,which,case,the,specified,interfaces,if,any,need,to,be,implemented,by,that,class,instance,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement,may,be,code,null;public,bsh,script,factory,string,script,source,locator,nullable,class,script,interfaces,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,script,interfaces,script,interfaces
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator, @Nullable Class<?>... scriptInterfaces);1502974979;Create a new BshScriptFactory for the given script source._<p>The script may either be a simple script that needs a corresponding proxy_generated (implementing the specified interfaces), or declare a full class_or return an actual instance of the scripted object (in which case the_specified interfaces, if any, need to be implemented by that class/instance)._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement (may be {@code null});public BshScriptFactory(String scriptSourceLocator, @Nullable Class<?>... scriptInterfaces) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = scriptInterfaces__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,the,script,may,either,be,a,simple,script,that,needs,a,corresponding,proxy,generated,implementing,the,specified,interfaces,or,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,in,which,case,the,specified,interfaces,if,any,need,to,be,implemented,by,that,class,instance,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement,may,be,code,null;public,bsh,script,factory,string,script,source,locator,nullable,class,script,interfaces,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,script,interfaces,script,interfaces
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator);1328020251;Create a new BshScriptFactory for the given script source._<p>With this <code>BshScriptFactory</code> variant, the script needs to_declare a full class or return an actual instance of the scripted object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public BshScriptFactory(String scriptSourceLocator) {_		this(scriptSourceLocator, null)__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,with,this,code,bsh,script,factory,code,variant,the,script,needs,to,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,bsh,script,factory,string,script,source,locator,this,script,source,locator,null
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator);1356735495;Create a new BshScriptFactory for the given script source._<p>With this {@code BshScriptFactory} variant, the script needs to_declare a full class or return an actual instance of the scripted object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public BshScriptFactory(String scriptSourceLocator) {_		this(scriptSourceLocator, null)__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,with,this,code,bsh,script,factory,variant,the,script,needs,to,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,bsh,script,factory,string,script,source,locator,this,script,source,locator,null
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator);1357119239;Create a new BshScriptFactory for the given script source._<p>With this {@code BshScriptFactory} variant, the script needs to_declare a full class or return an actual instance of the scripted object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public BshScriptFactory(String scriptSourceLocator) {_		this(scriptSourceLocator, null)__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,with,this,code,bsh,script,factory,variant,the,script,needs,to,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,bsh,script,factory,string,script,source,locator,this,script,source,locator,null
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator);1368482696;Create a new BshScriptFactory for the given script source._<p>With this {@code BshScriptFactory} variant, the script needs to_declare a full class or return an actual instance of the scripted object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public BshScriptFactory(String scriptSourceLocator) {_		this(scriptSourceLocator, null)__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,with,this,code,bsh,script,factory,variant,the,script,needs,to,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,bsh,script,factory,string,script,source,locator,this,script,source,locator,null
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator);1382746895;Create a new BshScriptFactory for the given script source._<p>With this {@code BshScriptFactory} variant, the script needs to_declare a full class or return an actual instance of the scripted object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public BshScriptFactory(String scriptSourceLocator) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = null__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,with,this,code,bsh,script,factory,variant,the,script,needs,to,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,bsh,script,factory,string,script,source,locator,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,script,interfaces,null
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator);1385412762;Create a new BshScriptFactory for the given script source._<p>With this {@code BshScriptFactory} variant, the script needs to_declare a full class or return an actual instance of the scripted object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public BshScriptFactory(String scriptSourceLocator) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = null__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,with,this,code,bsh,script,factory,variant,the,script,needs,to,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,bsh,script,factory,string,script,source,locator,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,script,interfaces,null
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator);1389653154;Create a new BshScriptFactory for the given script source._<p>With this {@code BshScriptFactory} variant, the script needs to_declare a full class or return an actual instance of the scripted object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public BshScriptFactory(String scriptSourceLocator) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = null__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,with,this,code,bsh,script,factory,variant,the,script,needs,to,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,bsh,script,factory,string,script,source,locator,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,script,interfaces,null
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator);1457697320;Create a new BshScriptFactory for the given script source._<p>With this {@code BshScriptFactory} variant, the script needs to_declare a full class or return an actual instance of the scripted object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public BshScriptFactory(String scriptSourceLocator) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = null__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,with,this,code,bsh,script,factory,variant,the,script,needs,to,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,bsh,script,factory,string,script,source,locator,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,script,interfaces,null
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator);1468948866;Create a new BshScriptFactory for the given script source._<p>With this {@code BshScriptFactory} variant, the script needs to_declare a full class or return an actual instance of the scripted object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public BshScriptFactory(String scriptSourceLocator) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = null__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,with,this,code,bsh,script,factory,variant,the,script,needs,to,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,bsh,script,factory,string,script,source,locator,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,script,interfaces,null
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator);1495868221;Create a new BshScriptFactory for the given script source._<p>With this {@code BshScriptFactory} variant, the script needs to_declare a full class or return an actual instance of the scripted object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public BshScriptFactory(String scriptSourceLocator) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = null__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,with,this,code,bsh,script,factory,variant,the,script,needs,to,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,bsh,script,factory,string,script,source,locator,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,script,interfaces,null
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator);1496242568;Create a new BshScriptFactory for the given script source._<p>With this {@code BshScriptFactory} variant, the script needs to_declare a full class or return an actual instance of the scripted object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public BshScriptFactory(String scriptSourceLocator) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = null__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,with,this,code,bsh,script,factory,variant,the,script,needs,to,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,bsh,script,factory,string,script,source,locator,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,script,interfaces,null
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator);1496837955;Create a new BshScriptFactory for the given script source._<p>With this {@code BshScriptFactory} variant, the script needs to_declare a full class or return an actual instance of the scripted object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public BshScriptFactory(String scriptSourceLocator) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = null__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,with,this,code,bsh,script,factory,variant,the,script,needs,to,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,bsh,script,factory,string,script,source,locator,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,script,interfaces,null
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator);1498780456;Create a new BshScriptFactory for the given script source._<p>With this {@code BshScriptFactory} variant, the script needs to_declare a full class or return an actual instance of the scripted object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public BshScriptFactory(String scriptSourceLocator) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = null__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,with,this,code,bsh,script,factory,variant,the,script,needs,to,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,bsh,script,factory,string,script,source,locator,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,script,interfaces,null
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator);1502974979;Create a new BshScriptFactory for the given script source._<p>With this {@code BshScriptFactory} variant, the script needs to_declare a full class or return an actual instance of the scripted object._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script.;public BshScriptFactory(String scriptSourceLocator) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = null__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,with,this,code,bsh,script,factory,variant,the,script,needs,to,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script;public,bsh,script,factory,string,script,source,locator,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,script,interfaces,null
BshScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1382746895;Load and parse the BeanShell script via {@link BshScriptUtils}._@see BshScriptUtils#createBshObject(String, Class[], ClassLoader);@Override_	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		try {_			Class<?> clazz___			synchronized (this.scriptClassMonitor) {_				boolean requiresScriptEvaluation = (this.wasModifiedForTypeCheck && this.scriptClass == null)__				this.wasModifiedForTypeCheck = false___				if (scriptSource.isModified() || requiresScriptEvaluation) {_					_					Object result = BshScriptUtils.evaluateBshScript(_							scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__					if (result instanceof Class) {_						_						_						this.scriptClass = (Class) result__					}_					else {_						_						_						_						_						return result__					}_				}_				clazz = this.scriptClass__			}__			if (clazz != null) {_				_				try {_					return clazz.newInstance()__				}_				catch (Throwable ex) {_					throw new ScriptCompilationException(_							scriptSource, "Could not instantiate script class: " + clazz.getName(), ex)__				}_			}_			else {_				_				return BshScriptUtils.createBshObject(_						scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__			}_		}_		catch (EvalError ex) {_			throw new ScriptCompilationException(scriptSource, ex)__		}_	};load,and,parse,the,bean,shell,script,via,link,bsh,script,utils,see,bsh,script,utils,create,bsh,object,string,class,class,loader;override,public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,try,class,clazz,synchronized,this,script,class,monitor,boolean,requires,script,evaluation,this,was,modified,for,type,check,this,script,class,null,this,was,modified,for,type,check,false,if,script,source,is,modified,requires,script,evaluation,object,result,bsh,script,utils,evaluate,bsh,script,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,if,result,instanceof,class,this,script,class,class,result,else,return,result,clazz,this,script,class,if,clazz,null,try,return,clazz,new,instance,catch,throwable,ex,throw,new,script,compilation,exception,script,source,could,not,instantiate,script,class,clazz,get,name,ex,else,return,bsh,script,utils,create,bsh,object,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,catch,eval,error,ex,throw,new,script,compilation,exception,script,source,ex
BshScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1385412762;Load and parse the BeanShell script via {@link BshScriptUtils}._@see BshScriptUtils#createBshObject(String, Class[], ClassLoader);@Override_	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		try {_			Class<?> clazz___			synchronized (this.scriptClassMonitor) {_				boolean requiresScriptEvaluation = (this.wasModifiedForTypeCheck && this.scriptClass == null)__				this.wasModifiedForTypeCheck = false___				if (scriptSource.isModified() || requiresScriptEvaluation) {_					_					Object result = BshScriptUtils.evaluateBshScript(_							scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__					if (result instanceof Class) {_						_						_						this.scriptClass = (Class<?>) result__					}_					else {_						_						_						_						_						return result__					}_				}_				clazz = this.scriptClass__			}__			if (clazz != null) {_				_				try {_					return clazz.newInstance()__				}_				catch (Throwable ex) {_					throw new ScriptCompilationException(_							scriptSource, "Could not instantiate script class: " + clazz.getName(), ex)__				}_			}_			else {_				_				return BshScriptUtils.createBshObject(_						scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__			}_		}_		catch (EvalError ex) {_			throw new ScriptCompilationException(scriptSource, ex)__		}_	};load,and,parse,the,bean,shell,script,via,link,bsh,script,utils,see,bsh,script,utils,create,bsh,object,string,class,class,loader;override,public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,try,class,clazz,synchronized,this,script,class,monitor,boolean,requires,script,evaluation,this,was,modified,for,type,check,this,script,class,null,this,was,modified,for,type,check,false,if,script,source,is,modified,requires,script,evaluation,object,result,bsh,script,utils,evaluate,bsh,script,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,if,result,instanceof,class,this,script,class,class,result,else,return,result,clazz,this,script,class,if,clazz,null,try,return,clazz,new,instance,catch,throwable,ex,throw,new,script,compilation,exception,script,source,could,not,instantiate,script,class,clazz,get,name,ex,else,return,bsh,script,utils,create,bsh,object,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,catch,eval,error,ex,throw,new,script,compilation,exception,script,source,ex
BshScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1389653154;Load and parse the BeanShell script via {@link BshScriptUtils}._@see BshScriptUtils#createBshObject(String, Class[], ClassLoader);@Override_	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		try {_			Class<?> clazz___			synchronized (this.scriptClassMonitor) {_				boolean requiresScriptEvaluation = (this.wasModifiedForTypeCheck && this.scriptClass == null)__				this.wasModifiedForTypeCheck = false___				if (scriptSource.isModified() || requiresScriptEvaluation) {_					_					Object result = BshScriptUtils.evaluateBshScript(_							scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__					if (result instanceof Class) {_						_						_						this.scriptClass = (Class<?>) result__					}_					else {_						_						_						_						_						return result__					}_				}_				clazz = this.scriptClass__			}__			if (clazz != null) {_				_				try {_					return clazz.newInstance()__				}_				catch (Throwable ex) {_					throw new ScriptCompilationException(_							scriptSource, "Could not instantiate script class: " + clazz.getName(), ex)__				}_			}_			else {_				_				return BshScriptUtils.createBshObject(_						scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__			}_		}_		catch (EvalError ex) {_			throw new ScriptCompilationException(scriptSource, ex)__		}_	};load,and,parse,the,bean,shell,script,via,link,bsh,script,utils,see,bsh,script,utils,create,bsh,object,string,class,class,loader;override,public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,try,class,clazz,synchronized,this,script,class,monitor,boolean,requires,script,evaluation,this,was,modified,for,type,check,this,script,class,null,this,was,modified,for,type,check,false,if,script,source,is,modified,requires,script,evaluation,object,result,bsh,script,utils,evaluate,bsh,script,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,if,result,instanceof,class,this,script,class,class,result,else,return,result,clazz,this,script,class,if,clazz,null,try,return,clazz,new,instance,catch,throwable,ex,throw,new,script,compilation,exception,script,source,could,not,instantiate,script,class,clazz,get,name,ex,else,return,bsh,script,utils,create,bsh,object,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,catch,eval,error,ex,throw,new,script,compilation,exception,script,source,ex
BshScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1457697320;Load and parse the BeanShell script via {@link BshScriptUtils}._@see BshScriptUtils#createBshObject(String, Class[], ClassLoader);@Override_	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		Class<?> clazz___		try {_			synchronized (this.scriptClassMonitor) {_				boolean requiresScriptEvaluation = (this.wasModifiedForTypeCheck && this.scriptClass == null)__				this.wasModifiedForTypeCheck = false___				if (scriptSource.isModified() || requiresScriptEvaluation) {_					_					Object result = BshScriptUtils.evaluateBshScript(_							scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__					if (result instanceof Class) {_						_						_						this.scriptClass = (Class<?>) result__					}_					else {_						_						_						_						_						return result__					}_				}_				clazz = this.scriptClass__			}_		}_		catch (EvalError ex) {_			this.scriptClass = null__			throw new ScriptCompilationException(scriptSource, ex)__		}__		if (clazz != null) {_			_			try {_				return clazz.newInstance()__			}_			catch (Throwable ex) {_				throw new ScriptCompilationException(_						scriptSource, "Could not instantiate script class: " + clazz.getName(), ex)__			}_		}_		else {_			_			try {_				return BshScriptUtils.createBshObject(_						scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__			}_			catch (EvalError ex) {_				throw new ScriptCompilationException(scriptSource, ex)__			}_		}_	};load,and,parse,the,bean,shell,script,via,link,bsh,script,utils,see,bsh,script,utils,create,bsh,object,string,class,class,loader;override,public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,class,clazz,try,synchronized,this,script,class,monitor,boolean,requires,script,evaluation,this,was,modified,for,type,check,this,script,class,null,this,was,modified,for,type,check,false,if,script,source,is,modified,requires,script,evaluation,object,result,bsh,script,utils,evaluate,bsh,script,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,if,result,instanceof,class,this,script,class,class,result,else,return,result,clazz,this,script,class,catch,eval,error,ex,this,script,class,null,throw,new,script,compilation,exception,script,source,ex,if,clazz,null,try,return,clazz,new,instance,catch,throwable,ex,throw,new,script,compilation,exception,script,source,could,not,instantiate,script,class,clazz,get,name,ex,else,try,return,bsh,script,utils,create,bsh,object,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,catch,eval,error,ex,throw,new,script,compilation,exception,script,source,ex
BshScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1468948866;Load and parse the BeanShell script via {@link BshScriptUtils}._@see BshScriptUtils#createBshObject(String, Class[], ClassLoader);@Override_	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		Class<?> clazz___		try {_			synchronized (this.scriptClassMonitor) {_				boolean requiresScriptEvaluation = (this.wasModifiedForTypeCheck && this.scriptClass == null)__				this.wasModifiedForTypeCheck = false___				if (scriptSource.isModified() || requiresScriptEvaluation) {_					_					Object result = BshScriptUtils.evaluateBshScript(_							scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__					if (result instanceof Class) {_						_						_						this.scriptClass = (Class<?>) result__					}_					else {_						_						_						_						_						return result__					}_				}_				clazz = this.scriptClass__			}_		}_		catch (EvalError ex) {_			this.scriptClass = null__			throw new ScriptCompilationException(scriptSource, ex)__		}__		if (clazz != null) {_			_			try {_				return ReflectionUtils.accessibleConstructor(clazz).newInstance()__			}_			catch (Throwable ex) {_				throw new ScriptCompilationException(_						scriptSource, "Could not instantiate script class: " + clazz.getName(), ex)__			}_		}_		else {_			_			try {_				return BshScriptUtils.createBshObject(_						scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__			}_			catch (EvalError ex) {_				throw new ScriptCompilationException(scriptSource, ex)__			}_		}_	};load,and,parse,the,bean,shell,script,via,link,bsh,script,utils,see,bsh,script,utils,create,bsh,object,string,class,class,loader;override,public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,class,clazz,try,synchronized,this,script,class,monitor,boolean,requires,script,evaluation,this,was,modified,for,type,check,this,script,class,null,this,was,modified,for,type,check,false,if,script,source,is,modified,requires,script,evaluation,object,result,bsh,script,utils,evaluate,bsh,script,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,if,result,instanceof,class,this,script,class,class,result,else,return,result,clazz,this,script,class,catch,eval,error,ex,this,script,class,null,throw,new,script,compilation,exception,script,source,ex,if,clazz,null,try,return,reflection,utils,accessible,constructor,clazz,new,instance,catch,throwable,ex,throw,new,script,compilation,exception,script,source,could,not,instantiate,script,class,clazz,get,name,ex,else,try,return,bsh,script,utils,create,bsh,object,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,catch,eval,error,ex,throw,new,script,compilation,exception,script,source,ex
BshScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1495868221;Load and parse the BeanShell script via {@link BshScriptUtils}._@see BshScriptUtils#createBshObject(String, Class[], ClassLoader);@Override_	public Object getScriptedObject(ScriptSource scriptSource, Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		Class<?> clazz___		try {_			synchronized (this.scriptClassMonitor) {_				boolean requiresScriptEvaluation = (this.wasModifiedForTypeCheck && this.scriptClass == null)__				this.wasModifiedForTypeCheck = false___				if (scriptSource.isModified() || requiresScriptEvaluation) {_					_					Object result = BshScriptUtils.evaluateBshScript(_							scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__					if (result instanceof Class) {_						_						_						this.scriptClass = (Class<?>) result__					}_					else {_						_						_						_						_						return result__					}_				}_				clazz = this.scriptClass__			}_		}_		catch (EvalError ex) {_			this.scriptClass = null__			throw new ScriptCompilationException(scriptSource, ex)__		}__		if (clazz != null) {_			_			try {_				return ReflectionUtils.accessibleConstructor(clazz).newInstance()__			}_			catch (Throwable ex) {_				throw new ScriptCompilationException(_						scriptSource, "Could not instantiate script class: " + clazz.getName(), ex)__			}_		}_		else {_			_			try {_				return BshScriptUtils.createBshObject(_						scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__			}_			catch (EvalError ex) {_				throw new ScriptCompilationException(scriptSource, ex)__			}_		}_	};load,and,parse,the,bean,shell,script,via,link,bsh,script,utils,see,bsh,script,utils,create,bsh,object,string,class,class,loader;override,public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,class,clazz,try,synchronized,this,script,class,monitor,boolean,requires,script,evaluation,this,was,modified,for,type,check,this,script,class,null,this,was,modified,for,type,check,false,if,script,source,is,modified,requires,script,evaluation,object,result,bsh,script,utils,evaluate,bsh,script,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,if,result,instanceof,class,this,script,class,class,result,else,return,result,clazz,this,script,class,catch,eval,error,ex,this,script,class,null,throw,new,script,compilation,exception,script,source,ex,if,clazz,null,try,return,reflection,utils,accessible,constructor,clazz,new,instance,catch,throwable,ex,throw,new,script,compilation,exception,script,source,could,not,instantiate,script,class,clazz,get,name,ex,else,try,return,bsh,script,utils,create,bsh,object,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,catch,eval,error,ex,throw,new,script,compilation,exception,script,source,ex
BshScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, @Nullable Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1496242568;Load and parse the BeanShell script via {@link BshScriptUtils}._@see BshScriptUtils#createBshObject(String, Class[], ClassLoader);@Override_	public Object getScriptedObject(ScriptSource scriptSource, @Nullable Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		Class<?> clazz___		try {_			synchronized (this.scriptClassMonitor) {_				boolean requiresScriptEvaluation = (this.wasModifiedForTypeCheck && this.scriptClass == null)__				this.wasModifiedForTypeCheck = false___				if (scriptSource.isModified() || requiresScriptEvaluation) {_					_					Object result = BshScriptUtils.evaluateBshScript(_							scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__					if (result instanceof Class) {_						_						_						this.scriptClass = (Class<?>) result__					}_					else {_						_						_						_						_						return result__					}_				}_				clazz = this.scriptClass__			}_		}_		catch (EvalError ex) {_			this.scriptClass = null__			throw new ScriptCompilationException(scriptSource, ex)__		}__		if (clazz != null) {_			_			try {_				return ReflectionUtils.accessibleConstructor(clazz).newInstance()__			}_			catch (Throwable ex) {_				throw new ScriptCompilationException(_						scriptSource, "Could not instantiate script class: " + clazz.getName(), ex)__			}_		}_		else {_			_			try {_				return BshScriptUtils.createBshObject(_						scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__			}_			catch (EvalError ex) {_				throw new ScriptCompilationException(scriptSource, ex)__			}_		}_	};load,and,parse,the,bean,shell,script,via,link,bsh,script,utils,see,bsh,script,utils,create,bsh,object,string,class,class,loader;override,public,object,get,scripted,object,script,source,script,source,nullable,class,actual,interfaces,throws,ioexception,script,compilation,exception,class,clazz,try,synchronized,this,script,class,monitor,boolean,requires,script,evaluation,this,was,modified,for,type,check,this,script,class,null,this,was,modified,for,type,check,false,if,script,source,is,modified,requires,script,evaluation,object,result,bsh,script,utils,evaluate,bsh,script,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,if,result,instanceof,class,this,script,class,class,result,else,return,result,clazz,this,script,class,catch,eval,error,ex,this,script,class,null,throw,new,script,compilation,exception,script,source,ex,if,clazz,null,try,return,reflection,utils,accessible,constructor,clazz,new,instance,catch,throwable,ex,throw,new,script,compilation,exception,script,source,could,not,instantiate,script,class,clazz,get,name,ex,else,try,return,bsh,script,utils,create,bsh,object,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,catch,eval,error,ex,throw,new,script,compilation,exception,script,source,ex
BshScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, @Nullable Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1496837955;Load and parse the BeanShell script via {@link BshScriptUtils}._@see BshScriptUtils#createBshObject(String, Class[], ClassLoader);@Override_	public Object getScriptedObject(ScriptSource scriptSource, @Nullable Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		Class<?> clazz___		try {_			synchronized (this.scriptClassMonitor) {_				boolean requiresScriptEvaluation = (this.wasModifiedForTypeCheck && this.scriptClass == null)__				this.wasModifiedForTypeCheck = false___				if (scriptSource.isModified() || requiresScriptEvaluation) {_					_					Object result = BshScriptUtils.evaluateBshScript(_							scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__					if (result instanceof Class) {_						_						_						this.scriptClass = (Class<?>) result__					}_					else {_						_						_						_						_						return result__					}_				}_				clazz = this.scriptClass__			}_		}_		catch (EvalError ex) {_			this.scriptClass = null__			throw new ScriptCompilationException(scriptSource, ex)__		}__		if (clazz != null) {_			_			try {_				return ReflectionUtils.accessibleConstructor(clazz).newInstance()__			}_			catch (Throwable ex) {_				throw new ScriptCompilationException(_						scriptSource, "Could not instantiate script class: " + clazz.getName(), ex)__			}_		}_		else {_			_			try {_				return BshScriptUtils.createBshObject(_						scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__			}_			catch (EvalError ex) {_				throw new ScriptCompilationException(scriptSource, ex)__			}_		}_	};load,and,parse,the,bean,shell,script,via,link,bsh,script,utils,see,bsh,script,utils,create,bsh,object,string,class,class,loader;override,public,object,get,scripted,object,script,source,script,source,nullable,class,actual,interfaces,throws,ioexception,script,compilation,exception,class,clazz,try,synchronized,this,script,class,monitor,boolean,requires,script,evaluation,this,was,modified,for,type,check,this,script,class,null,this,was,modified,for,type,check,false,if,script,source,is,modified,requires,script,evaluation,object,result,bsh,script,utils,evaluate,bsh,script,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,if,result,instanceof,class,this,script,class,class,result,else,return,result,clazz,this,script,class,catch,eval,error,ex,this,script,class,null,throw,new,script,compilation,exception,script,source,ex,if,clazz,null,try,return,reflection,utils,accessible,constructor,clazz,new,instance,catch,throwable,ex,throw,new,script,compilation,exception,script,source,could,not,instantiate,script,class,clazz,get,name,ex,else,try,return,bsh,script,utils,create,bsh,object,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,catch,eval,error,ex,throw,new,script,compilation,exception,script,source,ex
BshScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, @Nullable Class<?>... actualInterfaces) 			throws IOException, ScriptCompilationException;1498780456;Load and parse the BeanShell script via {@link BshScriptUtils}._@see BshScriptUtils#createBshObject(String, Class[], ClassLoader);@Override_	public Object getScriptedObject(ScriptSource scriptSource, @Nullable Class<?>... actualInterfaces)_			throws IOException, ScriptCompilationException {__		Class<?> clazz___		try {_			synchronized (this.scriptClassMonitor) {_				boolean requiresScriptEvaluation = (this.wasModifiedForTypeCheck && this.scriptClass == null)__				this.wasModifiedForTypeCheck = false___				if (scriptSource.isModified() || requiresScriptEvaluation) {_					_					Object result = BshScriptUtils.evaluateBshScript(_							scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__					if (result instanceof Class) {_						_						_						this.scriptClass = (Class<?>) result__					}_					else {_						_						_						_						_						return result__					}_				}_				clazz = this.scriptClass__			}_		}_		catch (EvalError ex) {_			this.scriptClass = null__			throw new ScriptCompilationException(scriptSource, ex)__		}__		if (clazz != null) {_			_			try {_				return ReflectionUtils.accessibleConstructor(clazz).newInstance()__			}_			catch (Throwable ex) {_				throw new ScriptCompilationException(_						scriptSource, "Could not instantiate script class: " + clazz.getName(), ex)__			}_		}_		else {_			_			try {_				return BshScriptUtils.createBshObject(_						scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__			}_			catch (EvalError ex) {_				throw new ScriptCompilationException(scriptSource, ex)__			}_		}_	};load,and,parse,the,bean,shell,script,via,link,bsh,script,utils,see,bsh,script,utils,create,bsh,object,string,class,class,loader;override,public,object,get,scripted,object,script,source,script,source,nullable,class,actual,interfaces,throws,ioexception,script,compilation,exception,class,clazz,try,synchronized,this,script,class,monitor,boolean,requires,script,evaluation,this,was,modified,for,type,check,this,script,class,null,this,was,modified,for,type,check,false,if,script,source,is,modified,requires,script,evaluation,object,result,bsh,script,utils,evaluate,bsh,script,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,if,result,instanceof,class,this,script,class,class,result,else,return,result,clazz,this,script,class,catch,eval,error,ex,this,script,class,null,throw,new,script,compilation,exception,script,source,ex,if,clazz,null,try,return,reflection,utils,accessible,constructor,clazz,new,instance,catch,throwable,ex,throw,new,script,compilation,exception,script,source,could,not,instantiate,script,class,clazz,get,name,ex,else,try,return,bsh,script,utils,create,bsh,object,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,catch,eval,error,ex,throw,new,script,compilation,exception,script,source,ex
BshScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, Class[] actualInterfaces) 			throws IOException, ScriptCompilationException;1356735495;Load and parse the BeanShell script via {@link BshScriptUtils}._@see BshScriptUtils#createBshObject(String, Class[], ClassLoader);@Override_	public Object getScriptedObject(ScriptSource scriptSource, Class[] actualInterfaces)_			throws IOException, ScriptCompilationException {__		try {_			Class clazz = null___			synchronized (this.scriptClassMonitor) {_				boolean requiresScriptEvaluation = (this.wasModifiedForTypeCheck && this.scriptClass == null)__				this.wasModifiedForTypeCheck = false___				if (scriptSource.isModified() || requiresScriptEvaluation) {_					_					Object result = BshScriptUtils.evaluateBshScript(_							scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__					if (result instanceof Class) {_						_						_						this.scriptClass = (Class) result__					}_					else {_						_						_						_						_						return result__					}_				}_				clazz = this.scriptClass__			}__			if (clazz != null) {_				_				try {_					return clazz.newInstance()__				}_				catch (Throwable ex) {_					throw new ScriptCompilationException(_							scriptSource, "Could not instantiate script class: " + clazz.getName(), ex)__				}_			}_			else {_				_				return BshScriptUtils.createBshObject(_						scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__			}_		}_		catch (EvalError ex) {_			throw new ScriptCompilationException(scriptSource, ex)__		}_	};load,and,parse,the,bean,shell,script,via,link,bsh,script,utils,see,bsh,script,utils,create,bsh,object,string,class,class,loader;override,public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,try,class,clazz,null,synchronized,this,script,class,monitor,boolean,requires,script,evaluation,this,was,modified,for,type,check,this,script,class,null,this,was,modified,for,type,check,false,if,script,source,is,modified,requires,script,evaluation,object,result,bsh,script,utils,evaluate,bsh,script,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,if,result,instanceof,class,this,script,class,class,result,else,return,result,clazz,this,script,class,if,clazz,null,try,return,clazz,new,instance,catch,throwable,ex,throw,new,script,compilation,exception,script,source,could,not,instantiate,script,class,clazz,get,name,ex,else,return,bsh,script,utils,create,bsh,object,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,catch,eval,error,ex,throw,new,script,compilation,exception,script,source,ex
BshScriptFactory -> @Override 	public Object getScriptedObject(ScriptSource scriptSource, Class[] actualInterfaces) 			throws IOException, ScriptCompilationException;1368482696;Load and parse the BeanShell script via {@link BshScriptUtils}._@see BshScriptUtils#createBshObject(String, Class[], ClassLoader);@Override_	public Object getScriptedObject(ScriptSource scriptSource, Class[] actualInterfaces)_			throws IOException, ScriptCompilationException {__		try {_			Class clazz = null___			synchronized (this.scriptClassMonitor) {_				boolean requiresScriptEvaluation = (this.wasModifiedForTypeCheck && this.scriptClass == null)__				this.wasModifiedForTypeCheck = false___				if (scriptSource.isModified() || requiresScriptEvaluation) {_					_					Object result = BshScriptUtils.evaluateBshScript(_							scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__					if (result instanceof Class) {_						_						_						this.scriptClass = (Class) result__					}_					else {_						_						_						_						_						return result__					}_				}_				clazz = this.scriptClass__			}__			if (clazz != null) {_				_				try {_					return clazz.newInstance()__				}_				catch (Throwable ex) {_					throw new ScriptCompilationException(_							scriptSource, "Could not instantiate script class: " + clazz.getName(), ex)__				}_			}_			else {_				_				return BshScriptUtils.createBshObject(_						scriptSource.getScriptAsString(), actualInterfaces, this.beanClassLoader)__			}_		}_		catch (EvalError ex) {_			throw new ScriptCompilationException(scriptSource, ex)__		}_	};load,and,parse,the,bean,shell,script,via,link,bsh,script,utils,see,bsh,script,utils,create,bsh,object,string,class,class,loader;override,public,object,get,scripted,object,script,source,script,source,class,actual,interfaces,throws,ioexception,script,compilation,exception,try,class,clazz,null,synchronized,this,script,class,monitor,boolean,requires,script,evaluation,this,was,modified,for,type,check,this,script,class,null,this,was,modified,for,type,check,false,if,script,source,is,modified,requires,script,evaluation,object,result,bsh,script,utils,evaluate,bsh,script,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,if,result,instanceof,class,this,script,class,class,result,else,return,result,clazz,this,script,class,if,clazz,null,try,return,clazz,new,instance,catch,throwable,ex,throw,new,script,compilation,exception,script,source,could,not,instantiate,script,class,clazz,get,name,ex,else,return,bsh,script,utils,create,bsh,object,script,source,get,script,as,string,actual,interfaces,this,bean,class,loader,catch,eval,error,ex,throw,new,script,compilation,exception,script,source,ex
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces);1382746895;Create a new BshScriptFactory for the given script source._<p>The script may either be a simple script that needs a corresponding proxy_generated (implementing the specified interfaces), or declare a full class_or return an actual instance of the scripted object (in which case the_specified interfaces, if any, need to be implemented by that class/instance)._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement (may be {@code null});public BshScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = scriptInterfaces__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,the,script,may,either,be,a,simple,script,that,needs,a,corresponding,proxy,generated,implementing,the,specified,interfaces,or,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,in,which,case,the,specified,interfaces,if,any,need,to,be,implemented,by,that,class,instance,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement,may,be,code,null;public,bsh,script,factory,string,script,source,locator,class,script,interfaces,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,script,interfaces,script,interfaces
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces);1385412762;Create a new BshScriptFactory for the given script source._<p>The script may either be a simple script that needs a corresponding proxy_generated (implementing the specified interfaces), or declare a full class_or return an actual instance of the scripted object (in which case the_specified interfaces, if any, need to be implemented by that class/instance)._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement (may be {@code null});public BshScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = scriptInterfaces__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,the,script,may,either,be,a,simple,script,that,needs,a,corresponding,proxy,generated,implementing,the,specified,interfaces,or,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,in,which,case,the,specified,interfaces,if,any,need,to,be,implemented,by,that,class,instance,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement,may,be,code,null;public,bsh,script,factory,string,script,source,locator,class,script,interfaces,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,script,interfaces,script,interfaces
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces);1389653154;Create a new BshScriptFactory for the given script source._<p>The script may either be a simple script that needs a corresponding proxy_generated (implementing the specified interfaces), or declare a full class_or return an actual instance of the scripted object (in which case the_specified interfaces, if any, need to be implemented by that class/instance)._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement (may be {@code null});public BshScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = scriptInterfaces__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,the,script,may,either,be,a,simple,script,that,needs,a,corresponding,proxy,generated,implementing,the,specified,interfaces,or,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,in,which,case,the,specified,interfaces,if,any,need,to,be,implemented,by,that,class,instance,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement,may,be,code,null;public,bsh,script,factory,string,script,source,locator,class,script,interfaces,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,script,interfaces,script,interfaces
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces);1457697320;Create a new BshScriptFactory for the given script source._<p>The script may either be a simple script that needs a corresponding proxy_generated (implementing the specified interfaces), or declare a full class_or return an actual instance of the scripted object (in which case the_specified interfaces, if any, need to be implemented by that class/instance)._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement (may be {@code null});public BshScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = scriptInterfaces__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,the,script,may,either,be,a,simple,script,that,needs,a,corresponding,proxy,generated,implementing,the,specified,interfaces,or,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,in,which,case,the,specified,interfaces,if,any,need,to,be,implemented,by,that,class,instance,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement,may,be,code,null;public,bsh,script,factory,string,script,source,locator,class,script,interfaces,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,script,interfaces,script,interfaces
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces);1468948866;Create a new BshScriptFactory for the given script source._<p>The script may either be a simple script that needs a corresponding proxy_generated (implementing the specified interfaces), or declare a full class_or return an actual instance of the scripted object (in which case the_specified interfaces, if any, need to be implemented by that class/instance)._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement (may be {@code null});public BshScriptFactory(String scriptSourceLocator, Class<?>... scriptInterfaces) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = scriptInterfaces__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,the,script,may,either,be,a,simple,script,that,needs,a,corresponding,proxy,generated,implementing,the,specified,interfaces,or,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,in,which,case,the,specified,interfaces,if,any,need,to,be,implemented,by,that,class,instance,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement,may,be,code,null;public,bsh,script,factory,string,script,source,locator,class,script,interfaces,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,script,interfaces,script,interfaces
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator, Class[] scriptInterfaces);1328020251;Create a new BshScriptFactory for the given script source._<p>The script may either be a simple script that needs a corresponding proxy_generated (implementing the specified interfaces), or declare a full class_or return an actual instance of the scripted object (in which case the_specified interfaces, if any, need to be implemented by that class/instance)._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement (may be <code>null</code>);public BshScriptFactory(String scriptSourceLocator, Class[] scriptInterfaces) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = scriptInterfaces__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,the,script,may,either,be,a,simple,script,that,needs,a,corresponding,proxy,generated,implementing,the,specified,interfaces,or,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,in,which,case,the,specified,interfaces,if,any,need,to,be,implemented,by,that,class,instance,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement,may,be,code,null,code;public,bsh,script,factory,string,script,source,locator,class,script,interfaces,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,script,interfaces,script,interfaces
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator, Class[] scriptInterfaces);1356735495;Create a new BshScriptFactory for the given script source._<p>The script may either be a simple script that needs a corresponding proxy_generated (implementing the specified interfaces), or declare a full class_or return an actual instance of the scripted object (in which case the_specified interfaces, if any, need to be implemented by that class/instance)._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement (may be {@code null});public BshScriptFactory(String scriptSourceLocator, Class[] scriptInterfaces) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = scriptInterfaces__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,the,script,may,either,be,a,simple,script,that,needs,a,corresponding,proxy,generated,implementing,the,specified,interfaces,or,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,in,which,case,the,specified,interfaces,if,any,need,to,be,implemented,by,that,class,instance,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement,may,be,code,null;public,bsh,script,factory,string,script,source,locator,class,script,interfaces,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,script,interfaces,script,interfaces
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator, Class[] scriptInterfaces);1357119239;Create a new BshScriptFactory for the given script source._<p>The script may either be a simple script that needs a corresponding proxy_generated (implementing the specified interfaces), or declare a full class_or return an actual instance of the scripted object (in which case the_specified interfaces, if any, need to be implemented by that class/instance)._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement (may be {@code null});public BshScriptFactory(String scriptSourceLocator, Class[] scriptInterfaces) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = scriptInterfaces__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,the,script,may,either,be,a,simple,script,that,needs,a,corresponding,proxy,generated,implementing,the,specified,interfaces,or,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,in,which,case,the,specified,interfaces,if,any,need,to,be,implemented,by,that,class,instance,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement,may,be,code,null;public,bsh,script,factory,string,script,source,locator,class,script,interfaces,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,script,interfaces,script,interfaces
BshScriptFactory -> public BshScriptFactory(String scriptSourceLocator, Class[] scriptInterfaces);1368482696;Create a new BshScriptFactory for the given script source._<p>The script may either be a simple script that needs a corresponding proxy_generated (implementing the specified interfaces), or declare a full class_or return an actual instance of the scripted object (in which case the_specified interfaces, if any, need to be implemented by that class/instance)._@param scriptSourceLocator a locator that points to the source of the script._Interpreted by the post-processor that actually creates the script._@param scriptInterfaces the Java interfaces that the scripted object_is supposed to implement (may be {@code null});public BshScriptFactory(String scriptSourceLocator, Class[] scriptInterfaces) {_		Assert.hasText(scriptSourceLocator, "'scriptSourceLocator' must not be empty")__		this.scriptSourceLocator = scriptSourceLocator__		this.scriptInterfaces = scriptInterfaces__	};create,a,new,bsh,script,factory,for,the,given,script,source,p,the,script,may,either,be,a,simple,script,that,needs,a,corresponding,proxy,generated,implementing,the,specified,interfaces,or,declare,a,full,class,or,return,an,actual,instance,of,the,scripted,object,in,which,case,the,specified,interfaces,if,any,need,to,be,implemented,by,that,class,instance,param,script,source,locator,a,locator,that,points,to,the,source,of,the,script,interpreted,by,the,post,processor,that,actually,creates,the,script,param,script,interfaces,the,java,interfaces,that,the,scripted,object,is,supposed,to,implement,may,be,code,null;public,bsh,script,factory,string,script,source,locator,class,script,interfaces,assert,has,text,script,source,locator,script,source,locator,must,not,be,empty,this,script,source,locator,script,source,locator,this,script,interfaces,script,interfaces
BshScriptFactory -> public boolean requiresConfigInterface();1328020251;BeanShell scripts do require a config interface.;public boolean requiresConfigInterface() {_		return true__	};bean,shell,scripts,do,require,a,config,interface;public,boolean,requires,config,interface,return,true
BshScriptFactory -> public boolean requiresConfigInterface();1357119239;BeanShell scripts do require a config interface.;public boolean requiresConfigInterface() {_		return true__	};bean,shell,scripts,do,require,a,config,interface;public,boolean,requires,config,interface,return,true
