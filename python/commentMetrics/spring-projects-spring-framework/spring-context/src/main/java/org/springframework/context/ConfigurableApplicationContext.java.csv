# id;timestamp;commentText;codeText;commentWords;codeWords
ConfigurableApplicationContext -> void setId(String id)_;1328020251;Set the unique id of this application context.;void setId(String id)_;set,the,unique,id,of,this,application,context;void,set,id,string,id
ConfigurableApplicationContext -> void setId(String id)_;1352414689;Set the unique id of this application context.;void setId(String id)_;set,the,unique,id,of,this,application,context;void,set,id,string,id
ConfigurableApplicationContext -> void setId(String id)_;1356735495;Set the unique id of this application context.;void setId(String id)_;set,the,unique,id,of,this,application,context;void,set,id,string,id
ConfigurableApplicationContext -> void setId(String id)_;1357119239;Set the unique id of this application context.;void setId(String id)_;set,the,unique,id,of,this,application,context;void,set,id,string,id
ConfigurableApplicationContext -> void setId(String id)_;1368482696;Set the unique id of this application context.;void setId(String id)_;set,the,unique,id,of,this,application,context;void,set,id,string,id
ConfigurableApplicationContext -> void setId(String id)_;1455225686;Set the unique id of this application context.;void setId(String id)_;set,the,unique,id,of,this,application,context;void,set,id,string,id
ConfigurableApplicationContext -> void setId(String id)_;1455227261;Set the unique id of this application context.;void setId(String id)_;set,the,unique,id,of,this,application,context;void,set,id,string,id
ConfigurableApplicationContext -> void setId(String id)_;1482260272;Set the unique id of this application context._@since 3.0;void setId(String id)_;set,the,unique,id,of,this,application,context,since,3,0;void,set,id,string,id
ConfigurableApplicationContext -> void setId(String id)_;1493321910;Set the unique id of this application context._@since 3.0;void setId(String id)_;set,the,unique,id,of,this,application,context,since,3,0;void,set,id,string,id
ConfigurableApplicationContext -> void setId(String id)_;1495868221;Set the unique id of this application context._@since 3.0;void setId(String id)_;set,the,unique,id,of,this,application,context,since,3,0;void,set,id,string,id
ConfigurableApplicationContext -> void setId(String id)_;1530174524;Set the unique id of this application context._@since 3.0;void setId(String id)_;set,the,unique,id,of,this,application,context,since,3,0;void,set,id,string,id
ConfigurableApplicationContext -> void setId(String id)_;1533725446;Set the unique id of this application context._@since 3.0;void setId(String id)_;set,the,unique,id,of,this,application,context,since,3,0;void,set,id,string,id
ConfigurableApplicationContext -> void close()_;1328020251;Close this application context, releasing all resources and locks that the_implementation might hold. This includes destroying all cached singleton beans._<p>Note: Does <i>not</i> invoke <code>close</code> on a parent context__parent contexts have their own, independent lifecycle._<p>This method can be called multiple times without side effects: Subsequent_<code>close</code> calls on an already closed context will be ignored.;void close()_;close,this,application,context,releasing,all,resources,and,locks,that,the,implementation,might,hold,this,includes,destroying,all,cached,singleton,beans,p,note,does,i,not,i,invoke,code,close,code,on,a,parent,context,parent,contexts,have,their,own,independent,lifecycle,p,this,method,can,be,called,multiple,times,without,side,effects,subsequent,code,close,code,calls,on,an,already,closed,context,will,be,ignored;void,close
ConfigurableApplicationContext -> void close()_;1352414689;Close this application context, releasing all resources and locks that the_implementation might hold. This includes destroying all cached singleton beans._<p>Note: Does <i>not</i> invoke <code>close</code> on a parent context__parent contexts have their own, independent lifecycle._<p>This method can be called multiple times without side effects: Subsequent_<code>close</code> calls on an already closed context will be ignored.;void close()_;close,this,application,context,releasing,all,resources,and,locks,that,the,implementation,might,hold,this,includes,destroying,all,cached,singleton,beans,p,note,does,i,not,i,invoke,code,close,code,on,a,parent,context,parent,contexts,have,their,own,independent,lifecycle,p,this,method,can,be,called,multiple,times,without,side,effects,subsequent,code,close,code,calls,on,an,already,closed,context,will,be,ignored;void,close
ConfigurableApplicationContext -> void close()_;1357119239;Close this application context, releasing all resources and locks that the_implementation might hold. This includes destroying all cached singleton beans._<p>Note: Does <i>not</i> invoke {@code close} on a parent context__parent contexts have their own, independent lifecycle._<p>This method can be called multiple times without side effects: Subsequent_{@code close} calls on an already closed context will be ignored.;void close()_;close,this,application,context,releasing,all,resources,and,locks,that,the,implementation,might,hold,this,includes,destroying,all,cached,singleton,beans,p,note,does,i,not,i,invoke,code,close,on,a,parent,context,parent,contexts,have,their,own,independent,lifecycle,p,this,method,can,be,called,multiple,times,without,side,effects,subsequent,code,close,calls,on,an,already,closed,context,will,be,ignored;void,close
ConfigurableApplicationContext -> boolean isActive()_;1328020251;Determine whether this application context is active, that is,_whether it has been refreshed at least once and has not been closed yet._@return whether the context is still active_@see #refresh()_@see #close()_@see #getBeanFactory();boolean isActive()_;determine,whether,this,application,context,is,active,that,is,whether,it,has,been,refreshed,at,least,once,and,has,not,been,closed,yet,return,whether,the,context,is,still,active,see,refresh,see,close,see,get,bean,factory;boolean,is,active
ConfigurableApplicationContext -> boolean isActive()_;1352414689;Determine whether this application context is active, that is,_whether it has been refreshed at least once and has not been closed yet._@return whether the context is still active_@see #refresh()_@see #close()_@see #getBeanFactory();boolean isActive()_;determine,whether,this,application,context,is,active,that,is,whether,it,has,been,refreshed,at,least,once,and,has,not,been,closed,yet,return,whether,the,context,is,still,active,see,refresh,see,close,see,get,bean,factory;boolean,is,active
ConfigurableApplicationContext -> boolean isActive()_;1356735495;Determine whether this application context is active, that is,_whether it has been refreshed at least once and has not been closed yet._@return whether the context is still active_@see #refresh()_@see #close()_@see #getBeanFactory();boolean isActive()_;determine,whether,this,application,context,is,active,that,is,whether,it,has,been,refreshed,at,least,once,and,has,not,been,closed,yet,return,whether,the,context,is,still,active,see,refresh,see,close,see,get,bean,factory;boolean,is,active
ConfigurableApplicationContext -> boolean isActive()_;1357119239;Determine whether this application context is active, that is,_whether it has been refreshed at least once and has not been closed yet._@return whether the context is still active_@see #refresh()_@see #close()_@see #getBeanFactory();boolean isActive()_;determine,whether,this,application,context,is,active,that,is,whether,it,has,been,refreshed,at,least,once,and,has,not,been,closed,yet,return,whether,the,context,is,still,active,see,refresh,see,close,see,get,bean,factory;boolean,is,active
ConfigurableApplicationContext -> boolean isActive()_;1368482696;Determine whether this application context is active, that is,_whether it has been refreshed at least once and has not been closed yet._@return whether the context is still active_@see #refresh()_@see #close()_@see #getBeanFactory();boolean isActive()_;determine,whether,this,application,context,is,active,that,is,whether,it,has,been,refreshed,at,least,once,and,has,not,been,closed,yet,return,whether,the,context,is,still,active,see,refresh,see,close,see,get,bean,factory;boolean,is,active
ConfigurableApplicationContext -> boolean isActive()_;1455225686;Determine whether this application context is active, that is,_whether it has been refreshed at least once and has not been closed yet._@return whether the context is still active_@see #refresh()_@see #close()_@see #getBeanFactory();boolean isActive()_;determine,whether,this,application,context,is,active,that,is,whether,it,has,been,refreshed,at,least,once,and,has,not,been,closed,yet,return,whether,the,context,is,still,active,see,refresh,see,close,see,get,bean,factory;boolean,is,active
ConfigurableApplicationContext -> boolean isActive()_;1455227261;Determine whether this application context is active, that is,_whether it has been refreshed at least once and has not been closed yet._@return whether the context is still active_@see #refresh()_@see #close()_@see #getBeanFactory();boolean isActive()_;determine,whether,this,application,context,is,active,that,is,whether,it,has,been,refreshed,at,least,once,and,has,not,been,closed,yet,return,whether,the,context,is,still,active,see,refresh,see,close,see,get,bean,factory;boolean,is,active
ConfigurableApplicationContext -> boolean isActive()_;1482260272;Determine whether this application context is active, that is,_whether it has been refreshed at least once and has not been closed yet._@return whether the context is still active_@see #refresh()_@see #close()_@see #getBeanFactory();boolean isActive()_;determine,whether,this,application,context,is,active,that,is,whether,it,has,been,refreshed,at,least,once,and,has,not,been,closed,yet,return,whether,the,context,is,still,active,see,refresh,see,close,see,get,bean,factory;boolean,is,active
ConfigurableApplicationContext -> boolean isActive()_;1493321910;Determine whether this application context is active, that is,_whether it has been refreshed at least once and has not been closed yet._@return whether the context is still active_@see #refresh()_@see #close()_@see #getBeanFactory();boolean isActive()_;determine,whether,this,application,context,is,active,that,is,whether,it,has,been,refreshed,at,least,once,and,has,not,been,closed,yet,return,whether,the,context,is,still,active,see,refresh,see,close,see,get,bean,factory;boolean,is,active
ConfigurableApplicationContext -> boolean isActive()_;1495868221;Determine whether this application context is active, that is,_whether it has been refreshed at least once and has not been closed yet._@return whether the context is still active_@see #refresh()_@see #close()_@see #getBeanFactory();boolean isActive()_;determine,whether,this,application,context,is,active,that,is,whether,it,has,been,refreshed,at,least,once,and,has,not,been,closed,yet,return,whether,the,context,is,still,active,see,refresh,see,close,see,get,bean,factory;boolean,is,active
ConfigurableApplicationContext -> boolean isActive()_;1530174524;Determine whether this application context is active, that is,_whether it has been refreshed at least once and has not been closed yet._@return whether the context is still active_@see #refresh()_@see #close()_@see #getBeanFactory();boolean isActive()_;determine,whether,this,application,context,is,active,that,is,whether,it,has,been,refreshed,at,least,once,and,has,not,been,closed,yet,return,whether,the,context,is,still,active,see,refresh,see,close,see,get,bean,factory;boolean,is,active
ConfigurableApplicationContext -> boolean isActive()_;1533725446;Determine whether this application context is active, that is,_whether it has been refreshed at least once and has not been closed yet._@return whether the context is still active_@see #refresh()_@see #close()_@see #getBeanFactory();boolean isActive()_;determine,whether,this,application,context,is,active,that,is,whether,it,has,been,refreshed,at,least,once,and,has,not,been,closed,yet,return,whether,the,context,is,still,active,see,refresh,see,close,see,get,bean,factory;boolean,is,active
ConfigurableApplicationContext -> void registerShutdownHook()_;1328020251;Register a shutdown hook with the JVM runtime, closing this context_on JVM shutdown unless it has already been closed at that time._<p>This method can be called multiple times. Only one shutdown hook_(at max) will be registered for each context instance._@see java.lang.Runtime#addShutdownHook_@see #close();void registerShutdownHook()_;register,a,shutdown,hook,with,the,jvm,runtime,closing,this,context,on,jvm,shutdown,unless,it,has,already,been,closed,at,that,time,p,this,method,can,be,called,multiple,times,only,one,shutdown,hook,at,max,will,be,registered,for,each,context,instance,see,java,lang,runtime,add,shutdown,hook,see,close;void,register,shutdown,hook
ConfigurableApplicationContext -> void registerShutdownHook()_;1352414689;Register a shutdown hook with the JVM runtime, closing this context_on JVM shutdown unless it has already been closed at that time._<p>This method can be called multiple times. Only one shutdown hook_(at max) will be registered for each context instance._@see java.lang.Runtime#addShutdownHook_@see #close();void registerShutdownHook()_;register,a,shutdown,hook,with,the,jvm,runtime,closing,this,context,on,jvm,shutdown,unless,it,has,already,been,closed,at,that,time,p,this,method,can,be,called,multiple,times,only,one,shutdown,hook,at,max,will,be,registered,for,each,context,instance,see,java,lang,runtime,add,shutdown,hook,see,close;void,register,shutdown,hook
ConfigurableApplicationContext -> void registerShutdownHook()_;1356735495;Register a shutdown hook with the JVM runtime, closing this context_on JVM shutdown unless it has already been closed at that time._<p>This method can be called multiple times. Only one shutdown hook_(at max) will be registered for each context instance._@see java.lang.Runtime#addShutdownHook_@see #close();void registerShutdownHook()_;register,a,shutdown,hook,with,the,jvm,runtime,closing,this,context,on,jvm,shutdown,unless,it,has,already,been,closed,at,that,time,p,this,method,can,be,called,multiple,times,only,one,shutdown,hook,at,max,will,be,registered,for,each,context,instance,see,java,lang,runtime,add,shutdown,hook,see,close;void,register,shutdown,hook
ConfigurableApplicationContext -> void registerShutdownHook()_;1357119239;Register a shutdown hook with the JVM runtime, closing this context_on JVM shutdown unless it has already been closed at that time._<p>This method can be called multiple times. Only one shutdown hook_(at max) will be registered for each context instance._@see java.lang.Runtime#addShutdownHook_@see #close();void registerShutdownHook()_;register,a,shutdown,hook,with,the,jvm,runtime,closing,this,context,on,jvm,shutdown,unless,it,has,already,been,closed,at,that,time,p,this,method,can,be,called,multiple,times,only,one,shutdown,hook,at,max,will,be,registered,for,each,context,instance,see,java,lang,runtime,add,shutdown,hook,see,close;void,register,shutdown,hook
ConfigurableApplicationContext -> void registerShutdownHook()_;1368482696;Register a shutdown hook with the JVM runtime, closing this context_on JVM shutdown unless it has already been closed at that time._<p>This method can be called multiple times. Only one shutdown hook_(at max) will be registered for each context instance._@see java.lang.Runtime#addShutdownHook_@see #close();void registerShutdownHook()_;register,a,shutdown,hook,with,the,jvm,runtime,closing,this,context,on,jvm,shutdown,unless,it,has,already,been,closed,at,that,time,p,this,method,can,be,called,multiple,times,only,one,shutdown,hook,at,max,will,be,registered,for,each,context,instance,see,java,lang,runtime,add,shutdown,hook,see,close;void,register,shutdown,hook
ConfigurableApplicationContext -> void registerShutdownHook()_;1455225686;Register a shutdown hook with the JVM runtime, closing this context_on JVM shutdown unless it has already been closed at that time._<p>This method can be called multiple times. Only one shutdown hook_(at max) will be registered for each context instance._@see java.lang.Runtime#addShutdownHook_@see #close();void registerShutdownHook()_;register,a,shutdown,hook,with,the,jvm,runtime,closing,this,context,on,jvm,shutdown,unless,it,has,already,been,closed,at,that,time,p,this,method,can,be,called,multiple,times,only,one,shutdown,hook,at,max,will,be,registered,for,each,context,instance,see,java,lang,runtime,add,shutdown,hook,see,close;void,register,shutdown,hook
ConfigurableApplicationContext -> void registerShutdownHook()_;1455227261;Register a shutdown hook with the JVM runtime, closing this context_on JVM shutdown unless it has already been closed at that time._<p>This method can be called multiple times. Only one shutdown hook_(at max) will be registered for each context instance._@see java.lang.Runtime#addShutdownHook_@see #close();void registerShutdownHook()_;register,a,shutdown,hook,with,the,jvm,runtime,closing,this,context,on,jvm,shutdown,unless,it,has,already,been,closed,at,that,time,p,this,method,can,be,called,multiple,times,only,one,shutdown,hook,at,max,will,be,registered,for,each,context,instance,see,java,lang,runtime,add,shutdown,hook,see,close;void,register,shutdown,hook
ConfigurableApplicationContext -> void registerShutdownHook()_;1482260272;Register a shutdown hook with the JVM runtime, closing this context_on JVM shutdown unless it has already been closed at that time._<p>This method can be called multiple times. Only one shutdown hook_(at max) will be registered for each context instance._@see java.lang.Runtime#addShutdownHook_@see #close();void registerShutdownHook()_;register,a,shutdown,hook,with,the,jvm,runtime,closing,this,context,on,jvm,shutdown,unless,it,has,already,been,closed,at,that,time,p,this,method,can,be,called,multiple,times,only,one,shutdown,hook,at,max,will,be,registered,for,each,context,instance,see,java,lang,runtime,add,shutdown,hook,see,close;void,register,shutdown,hook
ConfigurableApplicationContext -> void registerShutdownHook()_;1493321910;Register a shutdown hook with the JVM runtime, closing this context_on JVM shutdown unless it has already been closed at that time._<p>This method can be called multiple times. Only one shutdown hook_(at max) will be registered for each context instance._@see java.lang.Runtime#addShutdownHook_@see #close();void registerShutdownHook()_;register,a,shutdown,hook,with,the,jvm,runtime,closing,this,context,on,jvm,shutdown,unless,it,has,already,been,closed,at,that,time,p,this,method,can,be,called,multiple,times,only,one,shutdown,hook,at,max,will,be,registered,for,each,context,instance,see,java,lang,runtime,add,shutdown,hook,see,close;void,register,shutdown,hook
ConfigurableApplicationContext -> void registerShutdownHook()_;1495868221;Register a shutdown hook with the JVM runtime, closing this context_on JVM shutdown unless it has already been closed at that time._<p>This method can be called multiple times. Only one shutdown hook_(at max) will be registered for each context instance._@see java.lang.Runtime#addShutdownHook_@see #close();void registerShutdownHook()_;register,a,shutdown,hook,with,the,jvm,runtime,closing,this,context,on,jvm,shutdown,unless,it,has,already,been,closed,at,that,time,p,this,method,can,be,called,multiple,times,only,one,shutdown,hook,at,max,will,be,registered,for,each,context,instance,see,java,lang,runtime,add,shutdown,hook,see,close;void,register,shutdown,hook
ConfigurableApplicationContext -> void registerShutdownHook()_;1530174524;Register a shutdown hook with the JVM runtime, closing this context_on JVM shutdown unless it has already been closed at that time._<p>This method can be called multiple times. Only one shutdown hook_(at max) will be registered for each context instance._@see java.lang.Runtime#addShutdownHook_@see #close();void registerShutdownHook()_;register,a,shutdown,hook,with,the,jvm,runtime,closing,this,context,on,jvm,shutdown,unless,it,has,already,been,closed,at,that,time,p,this,method,can,be,called,multiple,times,only,one,shutdown,hook,at,max,will,be,registered,for,each,context,instance,see,java,lang,runtime,add,shutdown,hook,see,close;void,register,shutdown,hook
ConfigurableApplicationContext -> void registerShutdownHook()_;1533725446;Register a shutdown hook with the JVM runtime, closing this context_on JVM shutdown unless it has already been closed at that time._<p>This method can be called multiple times. Only one shutdown hook_(at max) will be registered for each context instance._@see java.lang.Runtime#addShutdownHook_@see #close();void registerShutdownHook()_;register,a,shutdown,hook,with,the,jvm,runtime,closing,this,context,on,jvm,shutdown,unless,it,has,already,been,closed,at,that,time,p,this,method,can,be,called,multiple,times,only,one,shutdown,hook,at,max,will,be,registered,for,each,context,instance,see,java,lang,runtime,add,shutdown,hook,see,close;void,register,shutdown,hook
ConfigurableApplicationContext -> void addApplicationListener(ApplicationListener<?> listener)_;1328020251;Add a new ApplicationListener that will be notified on context events_such as context refresh and context shutdown._<p>Note that any ApplicationListener registered here will be applied_on refresh if the context is not active yet, or on the fly with the_current event multicaster in case of a context that is already active._@param listener the ApplicationListener to register_@see org.springframework.context.event.ContextRefreshedEvent_@see org.springframework.context.event.ContextClosedEvent;void addApplicationListener(ApplicationListener<?> listener)_;add,a,new,application,listener,that,will,be,notified,on,context,events,such,as,context,refresh,and,context,shutdown,p,note,that,any,application,listener,registered,here,will,be,applied,on,refresh,if,the,context,is,not,active,yet,or,on,the,fly,with,the,current,event,multicaster,in,case,of,a,context,that,is,already,active,param,listener,the,application,listener,to,register,see,org,springframework,context,event,context,refreshed,event,see,org,springframework,context,event,context,closed,event;void,add,application,listener,application,listener,listener
ConfigurableApplicationContext -> void addApplicationListener(ApplicationListener<?> listener)_;1352414689;Add a new ApplicationListener that will be notified on context events_such as context refresh and context shutdown._<p>Note that any ApplicationListener registered here will be applied_on refresh if the context is not active yet, or on the fly with the_current event multicaster in case of a context that is already active._@param listener the ApplicationListener to register_@see org.springframework.context.event.ContextRefreshedEvent_@see org.springframework.context.event.ContextClosedEvent;void addApplicationListener(ApplicationListener<?> listener)_;add,a,new,application,listener,that,will,be,notified,on,context,events,such,as,context,refresh,and,context,shutdown,p,note,that,any,application,listener,registered,here,will,be,applied,on,refresh,if,the,context,is,not,active,yet,or,on,the,fly,with,the,current,event,multicaster,in,case,of,a,context,that,is,already,active,param,listener,the,application,listener,to,register,see,org,springframework,context,event,context,refreshed,event,see,org,springframework,context,event,context,closed,event;void,add,application,listener,application,listener,listener
ConfigurableApplicationContext -> void addApplicationListener(ApplicationListener<?> listener)_;1356735495;Add a new ApplicationListener that will be notified on context events_such as context refresh and context shutdown._<p>Note that any ApplicationListener registered here will be applied_on refresh if the context is not active yet, or on the fly with the_current event multicaster in case of a context that is already active._@param listener the ApplicationListener to register_@see org.springframework.context.event.ContextRefreshedEvent_@see org.springframework.context.event.ContextClosedEvent;void addApplicationListener(ApplicationListener<?> listener)_;add,a,new,application,listener,that,will,be,notified,on,context,events,such,as,context,refresh,and,context,shutdown,p,note,that,any,application,listener,registered,here,will,be,applied,on,refresh,if,the,context,is,not,active,yet,or,on,the,fly,with,the,current,event,multicaster,in,case,of,a,context,that,is,already,active,param,listener,the,application,listener,to,register,see,org,springframework,context,event,context,refreshed,event,see,org,springframework,context,event,context,closed,event;void,add,application,listener,application,listener,listener
ConfigurableApplicationContext -> void addApplicationListener(ApplicationListener<?> listener)_;1357119239;Add a new ApplicationListener that will be notified on context events_such as context refresh and context shutdown._<p>Note that any ApplicationListener registered here will be applied_on refresh if the context is not active yet, or on the fly with the_current event multicaster in case of a context that is already active._@param listener the ApplicationListener to register_@see org.springframework.context.event.ContextRefreshedEvent_@see org.springframework.context.event.ContextClosedEvent;void addApplicationListener(ApplicationListener<?> listener)_;add,a,new,application,listener,that,will,be,notified,on,context,events,such,as,context,refresh,and,context,shutdown,p,note,that,any,application,listener,registered,here,will,be,applied,on,refresh,if,the,context,is,not,active,yet,or,on,the,fly,with,the,current,event,multicaster,in,case,of,a,context,that,is,already,active,param,listener,the,application,listener,to,register,see,org,springframework,context,event,context,refreshed,event,see,org,springframework,context,event,context,closed,event;void,add,application,listener,application,listener,listener
ConfigurableApplicationContext -> void addApplicationListener(ApplicationListener<?> listener)_;1368482696;Add a new ApplicationListener that will be notified on context events_such as context refresh and context shutdown._<p>Note that any ApplicationListener registered here will be applied_on refresh if the context is not active yet, or on the fly with the_current event multicaster in case of a context that is already active._@param listener the ApplicationListener to register_@see org.springframework.context.event.ContextRefreshedEvent_@see org.springframework.context.event.ContextClosedEvent;void addApplicationListener(ApplicationListener<?> listener)_;add,a,new,application,listener,that,will,be,notified,on,context,events,such,as,context,refresh,and,context,shutdown,p,note,that,any,application,listener,registered,here,will,be,applied,on,refresh,if,the,context,is,not,active,yet,or,on,the,fly,with,the,current,event,multicaster,in,case,of,a,context,that,is,already,active,param,listener,the,application,listener,to,register,see,org,springframework,context,event,context,refreshed,event,see,org,springframework,context,event,context,closed,event;void,add,application,listener,application,listener,listener
ConfigurableApplicationContext -> void addApplicationListener(ApplicationListener<?> listener)_;1455225686;Add a new ApplicationListener that will be notified on context events_such as context refresh and context shutdown._<p>Note that any ApplicationListener registered here will be applied_on refresh if the context is not active yet, or on the fly with the_current event multicaster in case of a context that is already active._@param listener the ApplicationListener to register_@see org.springframework.context.event.ContextRefreshedEvent_@see org.springframework.context.event.ContextClosedEvent;void addApplicationListener(ApplicationListener<?> listener)_;add,a,new,application,listener,that,will,be,notified,on,context,events,such,as,context,refresh,and,context,shutdown,p,note,that,any,application,listener,registered,here,will,be,applied,on,refresh,if,the,context,is,not,active,yet,or,on,the,fly,with,the,current,event,multicaster,in,case,of,a,context,that,is,already,active,param,listener,the,application,listener,to,register,see,org,springframework,context,event,context,refreshed,event,see,org,springframework,context,event,context,closed,event;void,add,application,listener,application,listener,listener
ConfigurableApplicationContext -> void addApplicationListener(ApplicationListener<?> listener)_;1455227261;Add a new ApplicationListener that will be notified on context events_such as context refresh and context shutdown._<p>Note that any ApplicationListener registered here will be applied_on refresh if the context is not active yet, or on the fly with the_current event multicaster in case of a context that is already active._@param listener the ApplicationListener to register_@see org.springframework.context.event.ContextRefreshedEvent_@see org.springframework.context.event.ContextClosedEvent;void addApplicationListener(ApplicationListener<?> listener)_;add,a,new,application,listener,that,will,be,notified,on,context,events,such,as,context,refresh,and,context,shutdown,p,note,that,any,application,listener,registered,here,will,be,applied,on,refresh,if,the,context,is,not,active,yet,or,on,the,fly,with,the,current,event,multicaster,in,case,of,a,context,that,is,already,active,param,listener,the,application,listener,to,register,see,org,springframework,context,event,context,refreshed,event,see,org,springframework,context,event,context,closed,event;void,add,application,listener,application,listener,listener
ConfigurableApplicationContext -> void addApplicationListener(ApplicationListener<?> listener)_;1482260272;Add a new ApplicationListener that will be notified on context events_such as context refresh and context shutdown._<p>Note that any ApplicationListener registered here will be applied_on refresh if the context is not active yet, or on the fly with the_current event multicaster in case of a context that is already active._@param listener the ApplicationListener to register_@see org.springframework.context.event.ContextRefreshedEvent_@see org.springframework.context.event.ContextClosedEvent;void addApplicationListener(ApplicationListener<?> listener)_;add,a,new,application,listener,that,will,be,notified,on,context,events,such,as,context,refresh,and,context,shutdown,p,note,that,any,application,listener,registered,here,will,be,applied,on,refresh,if,the,context,is,not,active,yet,or,on,the,fly,with,the,current,event,multicaster,in,case,of,a,context,that,is,already,active,param,listener,the,application,listener,to,register,see,org,springframework,context,event,context,refreshed,event,see,org,springframework,context,event,context,closed,event;void,add,application,listener,application,listener,listener
ConfigurableApplicationContext -> void addApplicationListener(ApplicationListener<?> listener)_;1493321910;Add a new ApplicationListener that will be notified on context events_such as context refresh and context shutdown._<p>Note that any ApplicationListener registered here will be applied_on refresh if the context is not active yet, or on the fly with the_current event multicaster in case of a context that is already active._@param listener the ApplicationListener to register_@see org.springframework.context.event.ContextRefreshedEvent_@see org.springframework.context.event.ContextClosedEvent;void addApplicationListener(ApplicationListener<?> listener)_;add,a,new,application,listener,that,will,be,notified,on,context,events,such,as,context,refresh,and,context,shutdown,p,note,that,any,application,listener,registered,here,will,be,applied,on,refresh,if,the,context,is,not,active,yet,or,on,the,fly,with,the,current,event,multicaster,in,case,of,a,context,that,is,already,active,param,listener,the,application,listener,to,register,see,org,springframework,context,event,context,refreshed,event,see,org,springframework,context,event,context,closed,event;void,add,application,listener,application,listener,listener
ConfigurableApplicationContext -> void addApplicationListener(ApplicationListener<?> listener)_;1495868221;Add a new ApplicationListener that will be notified on context events_such as context refresh and context shutdown._<p>Note that any ApplicationListener registered here will be applied_on refresh if the context is not active yet, or on the fly with the_current event multicaster in case of a context that is already active._@param listener the ApplicationListener to register_@see org.springframework.context.event.ContextRefreshedEvent_@see org.springframework.context.event.ContextClosedEvent;void addApplicationListener(ApplicationListener<?> listener)_;add,a,new,application,listener,that,will,be,notified,on,context,events,such,as,context,refresh,and,context,shutdown,p,note,that,any,application,listener,registered,here,will,be,applied,on,refresh,if,the,context,is,not,active,yet,or,on,the,fly,with,the,current,event,multicaster,in,case,of,a,context,that,is,already,active,param,listener,the,application,listener,to,register,see,org,springframework,context,event,context,refreshed,event,see,org,springframework,context,event,context,closed,event;void,add,application,listener,application,listener,listener
ConfigurableApplicationContext -> void addApplicationListener(ApplicationListener<?> listener)_;1530174524;Add a new ApplicationListener that will be notified on context events_such as context refresh and context shutdown._<p>Note that any ApplicationListener registered here will be applied_on refresh if the context is not active yet, or on the fly with the_current event multicaster in case of a context that is already active._@param listener the ApplicationListener to register_@see org.springframework.context.event.ContextRefreshedEvent_@see org.springframework.context.event.ContextClosedEvent;void addApplicationListener(ApplicationListener<?> listener)_;add,a,new,application,listener,that,will,be,notified,on,context,events,such,as,context,refresh,and,context,shutdown,p,note,that,any,application,listener,registered,here,will,be,applied,on,refresh,if,the,context,is,not,active,yet,or,on,the,fly,with,the,current,event,multicaster,in,case,of,a,context,that,is,already,active,param,listener,the,application,listener,to,register,see,org,springframework,context,event,context,refreshed,event,see,org,springframework,context,event,context,closed,event;void,add,application,listener,application,listener,listener
ConfigurableApplicationContext -> void addApplicationListener(ApplicationListener<?> listener)_;1533725446;Add a new ApplicationListener that will be notified on context events_such as context refresh and context shutdown._<p>Note that any ApplicationListener registered here will be applied_on refresh if the context is not active yet, or on the fly with the_current event multicaster in case of a context that is already active._@param listener the ApplicationListener to register_@see org.springframework.context.event.ContextRefreshedEvent_@see org.springframework.context.event.ContextClosedEvent;void addApplicationListener(ApplicationListener<?> listener)_;add,a,new,application,listener,that,will,be,notified,on,context,events,such,as,context,refresh,and,context,shutdown,p,note,that,any,application,listener,registered,here,will,be,applied,on,refresh,if,the,context,is,not,active,yet,or,on,the,fly,with,the,current,event,multicaster,in,case,of,a,context,that,is,already,active,param,listener,the,application,listener,to,register,see,org,springframework,context,event,context,refreshed,event,see,org,springframework,context,event,context,closed,event;void,add,application,listener,application,listener,listener
ConfigurableApplicationContext -> ConfigurableEnvironment getEnvironment()_;1328020251;Return the Environment for this application context in configurable form.;ConfigurableEnvironment getEnvironment()_;return,the,environment,for,this,application,context,in,configurable,form;configurable,environment,get,environment
ConfigurableApplicationContext -> ConfigurableEnvironment getEnvironment()_;1352414689;Return the Environment for this application context in configurable form.;ConfigurableEnvironment getEnvironment()_;return,the,environment,for,this,application,context,in,configurable,form;configurable,environment,get,environment
ConfigurableApplicationContext -> ConfigurableEnvironment getEnvironment()_;1357119239;Return the Environment for this application context in configurable form.;ConfigurableEnvironment getEnvironment()_;return,the,environment,for,this,application,context,in,configurable,form;configurable,environment,get,environment
ConfigurableApplicationContext -> void addBeanFactoryPostProcessor(BeanFactoryPostProcessor beanFactoryPostProcessor)_;1328020251;Add a new BeanFactoryPostProcessor that will get applied to the internal_bean factory of this application context on refresh, before any of the_bean definitions get evaluated. To be invoked during context configuration._@param beanFactoryPostProcessor the factory processor to register;void addBeanFactoryPostProcessor(BeanFactoryPostProcessor beanFactoryPostProcessor)_;add,a,new,bean,factory,post,processor,that,will,get,applied,to,the,internal,bean,factory,of,this,application,context,on,refresh,before,any,of,the,bean,definitions,get,evaluated,to,be,invoked,during,context,configuration,param,bean,factory,post,processor,the,factory,processor,to,register;void,add,bean,factory,post,processor,bean,factory,post,processor,bean,factory,post,processor
ConfigurableApplicationContext -> void addBeanFactoryPostProcessor(BeanFactoryPostProcessor beanFactoryPostProcessor)_;1352414689;Add a new BeanFactoryPostProcessor that will get applied to the internal_bean factory of this application context on refresh, before any of the_bean definitions get evaluated. To be invoked during context configuration._@param beanFactoryPostProcessor the factory processor to register;void addBeanFactoryPostProcessor(BeanFactoryPostProcessor beanFactoryPostProcessor)_;add,a,new,bean,factory,post,processor,that,will,get,applied,to,the,internal,bean,factory,of,this,application,context,on,refresh,before,any,of,the,bean,definitions,get,evaluated,to,be,invoked,during,context,configuration,param,bean,factory,post,processor,the,factory,processor,to,register;void,add,bean,factory,post,processor,bean,factory,post,processor,bean,factory,post,processor
ConfigurableApplicationContext -> void addBeanFactoryPostProcessor(BeanFactoryPostProcessor beanFactoryPostProcessor)_;1356735495;Add a new BeanFactoryPostProcessor that will get applied to the internal_bean factory of this application context on refresh, before any of the_bean definitions get evaluated. To be invoked during context configuration._@param beanFactoryPostProcessor the factory processor to register;void addBeanFactoryPostProcessor(BeanFactoryPostProcessor beanFactoryPostProcessor)_;add,a,new,bean,factory,post,processor,that,will,get,applied,to,the,internal,bean,factory,of,this,application,context,on,refresh,before,any,of,the,bean,definitions,get,evaluated,to,be,invoked,during,context,configuration,param,bean,factory,post,processor,the,factory,processor,to,register;void,add,bean,factory,post,processor,bean,factory,post,processor,bean,factory,post,processor
ConfigurableApplicationContext -> void addBeanFactoryPostProcessor(BeanFactoryPostProcessor beanFactoryPostProcessor)_;1357119239;Add a new BeanFactoryPostProcessor that will get applied to the internal_bean factory of this application context on refresh, before any of the_bean definitions get evaluated. To be invoked during context configuration._@param beanFactoryPostProcessor the factory processor to register;void addBeanFactoryPostProcessor(BeanFactoryPostProcessor beanFactoryPostProcessor)_;add,a,new,bean,factory,post,processor,that,will,get,applied,to,the,internal,bean,factory,of,this,application,context,on,refresh,before,any,of,the,bean,definitions,get,evaluated,to,be,invoked,during,context,configuration,param,bean,factory,post,processor,the,factory,processor,to,register;void,add,bean,factory,post,processor,bean,factory,post,processor,bean,factory,post,processor
ConfigurableApplicationContext -> void addBeanFactoryPostProcessor(BeanFactoryPostProcessor beanFactoryPostProcessor)_;1368482696;Add a new BeanFactoryPostProcessor that will get applied to the internal_bean factory of this application context on refresh, before any of the_bean definitions get evaluated. To be invoked during context configuration._@param beanFactoryPostProcessor the factory processor to register;void addBeanFactoryPostProcessor(BeanFactoryPostProcessor beanFactoryPostProcessor)_;add,a,new,bean,factory,post,processor,that,will,get,applied,to,the,internal,bean,factory,of,this,application,context,on,refresh,before,any,of,the,bean,definitions,get,evaluated,to,be,invoked,during,context,configuration,param,bean,factory,post,processor,the,factory,processor,to,register;void,add,bean,factory,post,processor,bean,factory,post,processor,bean,factory,post,processor
ConfigurableApplicationContext -> ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException_;1328020251;Return the internal bean factory of this application context._Can be used to access specific functionality of the underlying factory._<p>Note: Do not use this to post-process the bean factory_ singletons_will already have been instantiated before. Use a BeanFactoryPostProcessor_to intercept the BeanFactory setup process before beans get touched._<p>Generally, this internal factory will only be accessible while the context_is active, that is, inbetween {@link #refresh()} and {@link #close()}._The {@link #isActive()} flag can be used to check whether the context_is in an appropriate state._@return the underlying bean factory_@throws IllegalStateException if the context does not hold an internal_bean factory (usually if {@link #refresh()} hasn't been called yet or_if {@link #close()} has already been called)_@see #isActive()_@see #refresh()_@see #close()_@see #addBeanFactoryPostProcessor;ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException_;return,the,internal,bean,factory,of,this,application,context,can,be,used,to,access,specific,functionality,of,the,underlying,factory,p,note,do,not,use,this,to,post,process,the,bean,factory,singletons,will,already,have,been,instantiated,before,use,a,bean,factory,post,processor,to,intercept,the,bean,factory,setup,process,before,beans,get,touched,p,generally,this,internal,factory,will,only,be,accessible,while,the,context,is,active,that,is,inbetween,link,refresh,and,link,close,the,link,is,active,flag,can,be,used,to,check,whether,the,context,is,in,an,appropriate,state,return,the,underlying,bean,factory,throws,illegal,state,exception,if,the,context,does,not,hold,an,internal,bean,factory,usually,if,link,refresh,hasn,t,been,called,yet,or,if,link,close,has,already,been,called,see,is,active,see,refresh,see,close,see,add,bean,factory,post,processor;configurable,listable,bean,factory,get,bean,factory,throws,illegal,state,exception
ConfigurableApplicationContext -> ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException_;1352414689;Return the internal bean factory of this application context._Can be used to access specific functionality of the underlying factory._<p>Note: Do not use this to post-process the bean factory_ singletons_will already have been instantiated before. Use a BeanFactoryPostProcessor_to intercept the BeanFactory setup process before beans get touched._<p>Generally, this internal factory will only be accessible while the context_is active, that is, inbetween {@link #refresh()} and {@link #close()}._The {@link #isActive()} flag can be used to check whether the context_is in an appropriate state._@return the underlying bean factory_@throws IllegalStateException if the context does not hold an internal_bean factory (usually if {@link #refresh()} hasn't been called yet or_if {@link #close()} has already been called)_@see #isActive()_@see #refresh()_@see #close()_@see #addBeanFactoryPostProcessor;ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException_;return,the,internal,bean,factory,of,this,application,context,can,be,used,to,access,specific,functionality,of,the,underlying,factory,p,note,do,not,use,this,to,post,process,the,bean,factory,singletons,will,already,have,been,instantiated,before,use,a,bean,factory,post,processor,to,intercept,the,bean,factory,setup,process,before,beans,get,touched,p,generally,this,internal,factory,will,only,be,accessible,while,the,context,is,active,that,is,inbetween,link,refresh,and,link,close,the,link,is,active,flag,can,be,used,to,check,whether,the,context,is,in,an,appropriate,state,return,the,underlying,bean,factory,throws,illegal,state,exception,if,the,context,does,not,hold,an,internal,bean,factory,usually,if,link,refresh,hasn,t,been,called,yet,or,if,link,close,has,already,been,called,see,is,active,see,refresh,see,close,see,add,bean,factory,post,processor;configurable,listable,bean,factory,get,bean,factory,throws,illegal,state,exception
ConfigurableApplicationContext -> ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException_;1356735495;Return the internal bean factory of this application context._Can be used to access specific functionality of the underlying factory._<p>Note: Do not use this to post-process the bean factory_ singletons_will already have been instantiated before. Use a BeanFactoryPostProcessor_to intercept the BeanFactory setup process before beans get touched._<p>Generally, this internal factory will only be accessible while the context_is active, that is, inbetween {@link #refresh()} and {@link #close()}._The {@link #isActive()} flag can be used to check whether the context_is in an appropriate state._@return the underlying bean factory_@throws IllegalStateException if the context does not hold an internal_bean factory (usually if {@link #refresh()} hasn't been called yet or_if {@link #close()} has already been called)_@see #isActive()_@see #refresh()_@see #close()_@see #addBeanFactoryPostProcessor;ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException_;return,the,internal,bean,factory,of,this,application,context,can,be,used,to,access,specific,functionality,of,the,underlying,factory,p,note,do,not,use,this,to,post,process,the,bean,factory,singletons,will,already,have,been,instantiated,before,use,a,bean,factory,post,processor,to,intercept,the,bean,factory,setup,process,before,beans,get,touched,p,generally,this,internal,factory,will,only,be,accessible,while,the,context,is,active,that,is,inbetween,link,refresh,and,link,close,the,link,is,active,flag,can,be,used,to,check,whether,the,context,is,in,an,appropriate,state,return,the,underlying,bean,factory,throws,illegal,state,exception,if,the,context,does,not,hold,an,internal,bean,factory,usually,if,link,refresh,hasn,t,been,called,yet,or,if,link,close,has,already,been,called,see,is,active,see,refresh,see,close,see,add,bean,factory,post,processor;configurable,listable,bean,factory,get,bean,factory,throws,illegal,state,exception
ConfigurableApplicationContext -> ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException_;1357119239;Return the internal bean factory of this application context._Can be used to access specific functionality of the underlying factory._<p>Note: Do not use this to post-process the bean factory_ singletons_will already have been instantiated before. Use a BeanFactoryPostProcessor_to intercept the BeanFactory setup process before beans get touched._<p>Generally, this internal factory will only be accessible while the context_is active, that is, inbetween {@link #refresh()} and {@link #close()}._The {@link #isActive()} flag can be used to check whether the context_is in an appropriate state._@return the underlying bean factory_@throws IllegalStateException if the context does not hold an internal_bean factory (usually if {@link #refresh()} hasn't been called yet or_if {@link #close()} has already been called)_@see #isActive()_@see #refresh()_@see #close()_@see #addBeanFactoryPostProcessor;ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException_;return,the,internal,bean,factory,of,this,application,context,can,be,used,to,access,specific,functionality,of,the,underlying,factory,p,note,do,not,use,this,to,post,process,the,bean,factory,singletons,will,already,have,been,instantiated,before,use,a,bean,factory,post,processor,to,intercept,the,bean,factory,setup,process,before,beans,get,touched,p,generally,this,internal,factory,will,only,be,accessible,while,the,context,is,active,that,is,inbetween,link,refresh,and,link,close,the,link,is,active,flag,can,be,used,to,check,whether,the,context,is,in,an,appropriate,state,return,the,underlying,bean,factory,throws,illegal,state,exception,if,the,context,does,not,hold,an,internal,bean,factory,usually,if,link,refresh,hasn,t,been,called,yet,or,if,link,close,has,already,been,called,see,is,active,see,refresh,see,close,see,add,bean,factory,post,processor;configurable,listable,bean,factory,get,bean,factory,throws,illegal,state,exception
ConfigurableApplicationContext -> ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException_;1368482696;Return the internal bean factory of this application context._Can be used to access specific functionality of the underlying factory._<p>Note: Do not use this to post-process the bean factory_ singletons_will already have been instantiated before. Use a BeanFactoryPostProcessor_to intercept the BeanFactory setup process before beans get touched._<p>Generally, this internal factory will only be accessible while the context_is active, that is, inbetween {@link #refresh()} and {@link #close()}._The {@link #isActive()} flag can be used to check whether the context_is in an appropriate state._@return the underlying bean factory_@throws IllegalStateException if the context does not hold an internal_bean factory (usually if {@link #refresh()} hasn't been called yet or_if {@link #close()} has already been called)_@see #isActive()_@see #refresh()_@see #close()_@see #addBeanFactoryPostProcessor;ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException_;return,the,internal,bean,factory,of,this,application,context,can,be,used,to,access,specific,functionality,of,the,underlying,factory,p,note,do,not,use,this,to,post,process,the,bean,factory,singletons,will,already,have,been,instantiated,before,use,a,bean,factory,post,processor,to,intercept,the,bean,factory,setup,process,before,beans,get,touched,p,generally,this,internal,factory,will,only,be,accessible,while,the,context,is,active,that,is,inbetween,link,refresh,and,link,close,the,link,is,active,flag,can,be,used,to,check,whether,the,context,is,in,an,appropriate,state,return,the,underlying,bean,factory,throws,illegal,state,exception,if,the,context,does,not,hold,an,internal,bean,factory,usually,if,link,refresh,hasn,t,been,called,yet,or,if,link,close,has,already,been,called,see,is,active,see,refresh,see,close,see,add,bean,factory,post,processor;configurable,listable,bean,factory,get,bean,factory,throws,illegal,state,exception
ConfigurableApplicationContext -> ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException_;1455225686;Return the internal bean factory of this application context._Can be used to access specific functionality of the underlying factory._<p>Note: Do not use this to post-process the bean factory_ singletons_will already have been instantiated before. Use a BeanFactoryPostProcessor_to intercept the BeanFactory setup process before beans get touched._<p>Generally, this internal factory will only be accessible while the context_is active, that is, inbetween {@link #refresh()} and {@link #close()}._The {@link #isActive()} flag can be used to check whether the context_is in an appropriate state._@return the underlying bean factory_@throws IllegalStateException if the context does not hold an internal_bean factory (usually if {@link #refresh()} hasn't been called yet or_if {@link #close()} has already been called)_@see #isActive()_@see #refresh()_@see #close()_@see #addBeanFactoryPostProcessor;ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException_;return,the,internal,bean,factory,of,this,application,context,can,be,used,to,access,specific,functionality,of,the,underlying,factory,p,note,do,not,use,this,to,post,process,the,bean,factory,singletons,will,already,have,been,instantiated,before,use,a,bean,factory,post,processor,to,intercept,the,bean,factory,setup,process,before,beans,get,touched,p,generally,this,internal,factory,will,only,be,accessible,while,the,context,is,active,that,is,inbetween,link,refresh,and,link,close,the,link,is,active,flag,can,be,used,to,check,whether,the,context,is,in,an,appropriate,state,return,the,underlying,bean,factory,throws,illegal,state,exception,if,the,context,does,not,hold,an,internal,bean,factory,usually,if,link,refresh,hasn,t,been,called,yet,or,if,link,close,has,already,been,called,see,is,active,see,refresh,see,close,see,add,bean,factory,post,processor;configurable,listable,bean,factory,get,bean,factory,throws,illegal,state,exception
ConfigurableApplicationContext -> ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException_;1455227261;Return the internal bean factory of this application context._Can be used to access specific functionality of the underlying factory._<p>Note: Do not use this to post-process the bean factory_ singletons_will already have been instantiated before. Use a BeanFactoryPostProcessor_to intercept the BeanFactory setup process before beans get touched._<p>Generally, this internal factory will only be accessible while the context_is active, that is, inbetween {@link #refresh()} and {@link #close()}._The {@link #isActive()} flag can be used to check whether the context_is in an appropriate state._@return the underlying bean factory_@throws IllegalStateException if the context does not hold an internal_bean factory (usually if {@link #refresh()} hasn't been called yet or_if {@link #close()} has already been called)_@see #isActive()_@see #refresh()_@see #close()_@see #addBeanFactoryPostProcessor;ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException_;return,the,internal,bean,factory,of,this,application,context,can,be,used,to,access,specific,functionality,of,the,underlying,factory,p,note,do,not,use,this,to,post,process,the,bean,factory,singletons,will,already,have,been,instantiated,before,use,a,bean,factory,post,processor,to,intercept,the,bean,factory,setup,process,before,beans,get,touched,p,generally,this,internal,factory,will,only,be,accessible,while,the,context,is,active,that,is,inbetween,link,refresh,and,link,close,the,link,is,active,flag,can,be,used,to,check,whether,the,context,is,in,an,appropriate,state,return,the,underlying,bean,factory,throws,illegal,state,exception,if,the,context,does,not,hold,an,internal,bean,factory,usually,if,link,refresh,hasn,t,been,called,yet,or,if,link,close,has,already,been,called,see,is,active,see,refresh,see,close,see,add,bean,factory,post,processor;configurable,listable,bean,factory,get,bean,factory,throws,illegal,state,exception
ConfigurableApplicationContext -> ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException_;1482260272;Return the internal bean factory of this application context._Can be used to access specific functionality of the underlying factory._<p>Note: Do not use this to post-process the bean factory_ singletons_will already have been instantiated before. Use a BeanFactoryPostProcessor_to intercept the BeanFactory setup process before beans get touched._<p>Generally, this internal factory will only be accessible while the context_is active, that is, inbetween {@link #refresh()} and {@link #close()}._The {@link #isActive()} flag can be used to check whether the context_is in an appropriate state._@return the underlying bean factory_@throws IllegalStateException if the context does not hold an internal_bean factory (usually if {@link #refresh()} hasn't been called yet or_if {@link #close()} has already been called)_@see #isActive()_@see #refresh()_@see #close()_@see #addBeanFactoryPostProcessor;ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException_;return,the,internal,bean,factory,of,this,application,context,can,be,used,to,access,specific,functionality,of,the,underlying,factory,p,note,do,not,use,this,to,post,process,the,bean,factory,singletons,will,already,have,been,instantiated,before,use,a,bean,factory,post,processor,to,intercept,the,bean,factory,setup,process,before,beans,get,touched,p,generally,this,internal,factory,will,only,be,accessible,while,the,context,is,active,that,is,inbetween,link,refresh,and,link,close,the,link,is,active,flag,can,be,used,to,check,whether,the,context,is,in,an,appropriate,state,return,the,underlying,bean,factory,throws,illegal,state,exception,if,the,context,does,not,hold,an,internal,bean,factory,usually,if,link,refresh,hasn,t,been,called,yet,or,if,link,close,has,already,been,called,see,is,active,see,refresh,see,close,see,add,bean,factory,post,processor;configurable,listable,bean,factory,get,bean,factory,throws,illegal,state,exception
ConfigurableApplicationContext -> ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException_;1493321910;Return the internal bean factory of this application context._Can be used to access specific functionality of the underlying factory._<p>Note: Do not use this to post-process the bean factory_ singletons_will already have been instantiated before. Use a BeanFactoryPostProcessor_to intercept the BeanFactory setup process before beans get touched._<p>Generally, this internal factory will only be accessible while the context_is active, that is, inbetween {@link #refresh()} and {@link #close()}._The {@link #isActive()} flag can be used to check whether the context_is in an appropriate state._@return the underlying bean factory_@throws IllegalStateException if the context does not hold an internal_bean factory (usually if {@link #refresh()} hasn't been called yet or_if {@link #close()} has already been called)_@see #isActive()_@see #refresh()_@see #close()_@see #addBeanFactoryPostProcessor;ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException_;return,the,internal,bean,factory,of,this,application,context,can,be,used,to,access,specific,functionality,of,the,underlying,factory,p,note,do,not,use,this,to,post,process,the,bean,factory,singletons,will,already,have,been,instantiated,before,use,a,bean,factory,post,processor,to,intercept,the,bean,factory,setup,process,before,beans,get,touched,p,generally,this,internal,factory,will,only,be,accessible,while,the,context,is,active,that,is,inbetween,link,refresh,and,link,close,the,link,is,active,flag,can,be,used,to,check,whether,the,context,is,in,an,appropriate,state,return,the,underlying,bean,factory,throws,illegal,state,exception,if,the,context,does,not,hold,an,internal,bean,factory,usually,if,link,refresh,hasn,t,been,called,yet,or,if,link,close,has,already,been,called,see,is,active,see,refresh,see,close,see,add,bean,factory,post,processor;configurable,listable,bean,factory,get,bean,factory,throws,illegal,state,exception
ConfigurableApplicationContext -> ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException_;1495868221;Return the internal bean factory of this application context._Can be used to access specific functionality of the underlying factory._<p>Note: Do not use this to post-process the bean factory_ singletons_will already have been instantiated before. Use a BeanFactoryPostProcessor_to intercept the BeanFactory setup process before beans get touched._<p>Generally, this internal factory will only be accessible while the context_is active, that is, inbetween {@link #refresh()} and {@link #close()}._The {@link #isActive()} flag can be used to check whether the context_is in an appropriate state._@return the underlying bean factory_@throws IllegalStateException if the context does not hold an internal_bean factory (usually if {@link #refresh()} hasn't been called yet or_if {@link #close()} has already been called)_@see #isActive()_@see #refresh()_@see #close()_@see #addBeanFactoryPostProcessor;ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException_;return,the,internal,bean,factory,of,this,application,context,can,be,used,to,access,specific,functionality,of,the,underlying,factory,p,note,do,not,use,this,to,post,process,the,bean,factory,singletons,will,already,have,been,instantiated,before,use,a,bean,factory,post,processor,to,intercept,the,bean,factory,setup,process,before,beans,get,touched,p,generally,this,internal,factory,will,only,be,accessible,while,the,context,is,active,that,is,inbetween,link,refresh,and,link,close,the,link,is,active,flag,can,be,used,to,check,whether,the,context,is,in,an,appropriate,state,return,the,underlying,bean,factory,throws,illegal,state,exception,if,the,context,does,not,hold,an,internal,bean,factory,usually,if,link,refresh,hasn,t,been,called,yet,or,if,link,close,has,already,been,called,see,is,active,see,refresh,see,close,see,add,bean,factory,post,processor;configurable,listable,bean,factory,get,bean,factory,throws,illegal,state,exception
ConfigurableApplicationContext -> ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException_;1530174524;Return the internal bean factory of this application context._Can be used to access specific functionality of the underlying factory._<p>Note: Do not use this to post-process the bean factory_ singletons_will already have been instantiated before. Use a BeanFactoryPostProcessor_to intercept the BeanFactory setup process before beans get touched._<p>Generally, this internal factory will only be accessible while the context_is active, that is, inbetween {@link #refresh()} and {@link #close()}._The {@link #isActive()} flag can be used to check whether the context_is in an appropriate state._@return the underlying bean factory_@throws IllegalStateException if the context does not hold an internal_bean factory (usually if {@link #refresh()} hasn't been called yet or_if {@link #close()} has already been called)_@see #isActive()_@see #refresh()_@see #close()_@see #addBeanFactoryPostProcessor;ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException_;return,the,internal,bean,factory,of,this,application,context,can,be,used,to,access,specific,functionality,of,the,underlying,factory,p,note,do,not,use,this,to,post,process,the,bean,factory,singletons,will,already,have,been,instantiated,before,use,a,bean,factory,post,processor,to,intercept,the,bean,factory,setup,process,before,beans,get,touched,p,generally,this,internal,factory,will,only,be,accessible,while,the,context,is,active,that,is,inbetween,link,refresh,and,link,close,the,link,is,active,flag,can,be,used,to,check,whether,the,context,is,in,an,appropriate,state,return,the,underlying,bean,factory,throws,illegal,state,exception,if,the,context,does,not,hold,an,internal,bean,factory,usually,if,link,refresh,hasn,t,been,called,yet,or,if,link,close,has,already,been,called,see,is,active,see,refresh,see,close,see,add,bean,factory,post,processor;configurable,listable,bean,factory,get,bean,factory,throws,illegal,state,exception
ConfigurableApplicationContext -> ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException_;1533725446;Return the internal bean factory of this application context._Can be used to access specific functionality of the underlying factory._<p>Note: Do not use this to post-process the bean factory_ singletons_will already have been instantiated before. Use a BeanFactoryPostProcessor_to intercept the BeanFactory setup process before beans get touched._<p>Generally, this internal factory will only be accessible while the context_is active, that is, in-between {@link #refresh()} and {@link #close()}._The {@link #isActive()} flag can be used to check whether the context_is in an appropriate state._@return the underlying bean factory_@throws IllegalStateException if the context does not hold an internal_bean factory (usually if {@link #refresh()} hasn't been called yet or_if {@link #close()} has already been called)_@see #isActive()_@see #refresh()_@see #close()_@see #addBeanFactoryPostProcessor;ConfigurableListableBeanFactory getBeanFactory() throws IllegalStateException_;return,the,internal,bean,factory,of,this,application,context,can,be,used,to,access,specific,functionality,of,the,underlying,factory,p,note,do,not,use,this,to,post,process,the,bean,factory,singletons,will,already,have,been,instantiated,before,use,a,bean,factory,post,processor,to,intercept,the,bean,factory,setup,process,before,beans,get,touched,p,generally,this,internal,factory,will,only,be,accessible,while,the,context,is,active,that,is,in,between,link,refresh,and,link,close,the,link,is,active,flag,can,be,used,to,check,whether,the,context,is,in,an,appropriate,state,return,the,underlying,bean,factory,throws,illegal,state,exception,if,the,context,does,not,hold,an,internal,bean,factory,usually,if,link,refresh,hasn,t,been,called,yet,or,if,link,close,has,already,been,called,see,is,active,see,refresh,see,close,see,add,bean,factory,post,processor;configurable,listable,bean,factory,get,bean,factory,throws,illegal,state,exception
ConfigurableApplicationContext -> void setParent(@Nullable ApplicationContext parent)_;1495868221;Set the parent of this application context._<p>Note that the parent shouldn't be changed: It should only be set outside_a constructor if it isn't available when an object of this class is created,_for example in case of WebApplicationContext setup._@param parent the parent context_@see org.springframework.web.context.ConfigurableWebApplicationContext;void setParent(@Nullable ApplicationContext parent)_;set,the,parent,of,this,application,context,p,note,that,the,parent,shouldn,t,be,changed,it,should,only,be,set,outside,a,constructor,if,it,isn,t,available,when,an,object,of,this,class,is,created,for,example,in,case,of,web,application,context,setup,param,parent,the,parent,context,see,org,springframework,web,context,configurable,web,application,context;void,set,parent,nullable,application,context,parent
ConfigurableApplicationContext -> void setParent(@Nullable ApplicationContext parent)_;1530174524;Set the parent of this application context._<p>Note that the parent shouldn't be changed: It should only be set outside_a constructor if it isn't available when an object of this class is created,_for example in case of WebApplicationContext setup._@param parent the parent context_@see org.springframework.web.context.ConfigurableWebApplicationContext;void setParent(@Nullable ApplicationContext parent)_;set,the,parent,of,this,application,context,p,note,that,the,parent,shouldn,t,be,changed,it,should,only,be,set,outside,a,constructor,if,it,isn,t,available,when,an,object,of,this,class,is,created,for,example,in,case,of,web,application,context,setup,param,parent,the,parent,context,see,org,springframework,web,context,configurable,web,application,context;void,set,parent,nullable,application,context,parent
ConfigurableApplicationContext -> void setParent(@Nullable ApplicationContext parent)_;1533725446;Set the parent of this application context._<p>Note that the parent shouldn't be changed: It should only be set outside_a constructor if it isn't available when an object of this class is created,_for example in case of WebApplicationContext setup._@param parent the parent context_@see org.springframework.web.context.ConfigurableWebApplicationContext;void setParent(@Nullable ApplicationContext parent)_;set,the,parent,of,this,application,context,p,note,that,the,parent,shouldn,t,be,changed,it,should,only,be,set,outside,a,constructor,if,it,isn,t,available,when,an,object,of,this,class,is,created,for,example,in,case,of,web,application,context,setup,param,parent,the,parent,context,see,org,springframework,web,context,configurable,web,application,context;void,set,parent,nullable,application,context,parent
ConfigurableApplicationContext -> @Override 	void close()_;1356735495;Close this application context, releasing all resources and locks that the_implementation might hold. This includes destroying all cached singleton beans._<p>Note: Does <i>not</i> invoke {@code close} on a parent context__parent contexts have their own, independent lifecycle._<p>This method can be called multiple times without side effects: Subsequent_{@code close} calls on an already closed context will be ignored.;@Override_	void close()_;close,this,application,context,releasing,all,resources,and,locks,that,the,implementation,might,hold,this,includes,destroying,all,cached,singleton,beans,p,note,does,i,not,i,invoke,code,close,on,a,parent,context,parent,contexts,have,their,own,independent,lifecycle,p,this,method,can,be,called,multiple,times,without,side,effects,subsequent,code,close,calls,on,an,already,closed,context,will,be,ignored;override,void,close
ConfigurableApplicationContext -> @Override 	void close()_;1368482696;Close this application context, releasing all resources and locks that the_implementation might hold. This includes destroying all cached singleton beans._<p>Note: Does <i>not</i> invoke {@code close} on a parent context__parent contexts have their own, independent lifecycle._<p>This method can be called multiple times without side effects: Subsequent_{@code close} calls on an already closed context will be ignored.;@Override_	void close()_;close,this,application,context,releasing,all,resources,and,locks,that,the,implementation,might,hold,this,includes,destroying,all,cached,singleton,beans,p,note,does,i,not,i,invoke,code,close,on,a,parent,context,parent,contexts,have,their,own,independent,lifecycle,p,this,method,can,be,called,multiple,times,without,side,effects,subsequent,code,close,calls,on,an,already,closed,context,will,be,ignored;override,void,close
ConfigurableApplicationContext -> @Override 	void close()_;1455225686;Close this application context, releasing all resources and locks that the_implementation might hold. This includes destroying all cached singleton beans._<p>Note: Does <i>not</i> invoke {@code close} on a parent context__parent contexts have their own, independent lifecycle._<p>This method can be called multiple times without side effects: Subsequent_{@code close} calls on an already closed context will be ignored.;@Override_	void close()_;close,this,application,context,releasing,all,resources,and,locks,that,the,implementation,might,hold,this,includes,destroying,all,cached,singleton,beans,p,note,does,i,not,i,invoke,code,close,on,a,parent,context,parent,contexts,have,their,own,independent,lifecycle,p,this,method,can,be,called,multiple,times,without,side,effects,subsequent,code,close,calls,on,an,already,closed,context,will,be,ignored;override,void,close
ConfigurableApplicationContext -> @Override 	void close()_;1455227261;Close this application context, releasing all resources and locks that the_implementation might hold. This includes destroying all cached singleton beans._<p>Note: Does <i>not</i> invoke {@code close} on a parent context__parent contexts have their own, independent lifecycle._<p>This method can be called multiple times without side effects: Subsequent_{@code close} calls on an already closed context will be ignored.;@Override_	void close()_;close,this,application,context,releasing,all,resources,and,locks,that,the,implementation,might,hold,this,includes,destroying,all,cached,singleton,beans,p,note,does,i,not,i,invoke,code,close,on,a,parent,context,parent,contexts,have,their,own,independent,lifecycle,p,this,method,can,be,called,multiple,times,without,side,effects,subsequent,code,close,calls,on,an,already,closed,context,will,be,ignored;override,void,close
ConfigurableApplicationContext -> @Override 	void close()_;1482260272;Close this application context, releasing all resources and locks that the_implementation might hold. This includes destroying all cached singleton beans._<p>Note: Does <i>not</i> invoke {@code close} on a parent context__parent contexts have their own, independent lifecycle._<p>This method can be called multiple times without side effects: Subsequent_{@code close} calls on an already closed context will be ignored.;@Override_	void close()_;close,this,application,context,releasing,all,resources,and,locks,that,the,implementation,might,hold,this,includes,destroying,all,cached,singleton,beans,p,note,does,i,not,i,invoke,code,close,on,a,parent,context,parent,contexts,have,their,own,independent,lifecycle,p,this,method,can,be,called,multiple,times,without,side,effects,subsequent,code,close,calls,on,an,already,closed,context,will,be,ignored;override,void,close
ConfigurableApplicationContext -> @Override 	void close()_;1493321910;Close this application context, releasing all resources and locks that the_implementation might hold. This includes destroying all cached singleton beans._<p>Note: Does <i>not</i> invoke {@code close} on a parent context__parent contexts have their own, independent lifecycle._<p>This method can be called multiple times without side effects: Subsequent_{@code close} calls on an already closed context will be ignored.;@Override_	void close()_;close,this,application,context,releasing,all,resources,and,locks,that,the,implementation,might,hold,this,includes,destroying,all,cached,singleton,beans,p,note,does,i,not,i,invoke,code,close,on,a,parent,context,parent,contexts,have,their,own,independent,lifecycle,p,this,method,can,be,called,multiple,times,without,side,effects,subsequent,code,close,calls,on,an,already,closed,context,will,be,ignored;override,void,close
ConfigurableApplicationContext -> @Override 	void close()_;1495868221;Close this application context, releasing all resources and locks that the_implementation might hold. This includes destroying all cached singleton beans._<p>Note: Does <i>not</i> invoke {@code close} on a parent context__parent contexts have their own, independent lifecycle._<p>This method can be called multiple times without side effects: Subsequent_{@code close} calls on an already closed context will be ignored.;@Override_	void close()_;close,this,application,context,releasing,all,resources,and,locks,that,the,implementation,might,hold,this,includes,destroying,all,cached,singleton,beans,p,note,does,i,not,i,invoke,code,close,on,a,parent,context,parent,contexts,have,their,own,independent,lifecycle,p,this,method,can,be,called,multiple,times,without,side,effects,subsequent,code,close,calls,on,an,already,closed,context,will,be,ignored;override,void,close
ConfigurableApplicationContext -> @Override 	void close()_;1530174524;Close this application context, releasing all resources and locks that the_implementation might hold. This includes destroying all cached singleton beans._<p>Note: Does <i>not</i> invoke {@code close} on a parent context__parent contexts have their own, independent lifecycle._<p>This method can be called multiple times without side effects: Subsequent_{@code close} calls on an already closed context will be ignored.;@Override_	void close()_;close,this,application,context,releasing,all,resources,and,locks,that,the,implementation,might,hold,this,includes,destroying,all,cached,singleton,beans,p,note,does,i,not,i,invoke,code,close,on,a,parent,context,parent,contexts,have,their,own,independent,lifecycle,p,this,method,can,be,called,multiple,times,without,side,effects,subsequent,code,close,calls,on,an,already,closed,context,will,be,ignored;override,void,close
ConfigurableApplicationContext -> @Override 	void close()_;1533725446;Close this application context, releasing all resources and locks that the_implementation might hold. This includes destroying all cached singleton beans._<p>Note: Does <i>not</i> invoke {@code close} on a parent context__parent contexts have their own, independent lifecycle._<p>This method can be called multiple times without side effects: Subsequent_{@code close} calls on an already closed context will be ignored.;@Override_	void close()_;close,this,application,context,releasing,all,resources,and,locks,that,the,implementation,might,hold,this,includes,destroying,all,cached,singleton,beans,p,note,does,i,not,i,invoke,code,close,on,a,parent,context,parent,contexts,have,their,own,independent,lifecycle,p,this,method,can,be,called,multiple,times,without,side,effects,subsequent,code,close,calls,on,an,already,closed,context,will,be,ignored;override,void,close
ConfigurableApplicationContext -> void setParent(ApplicationContext parent)_;1328020251;Set the parent of this application context._<p>Note that the parent shouldn't be changed: It should only be set outside_a constructor if it isn't available when an object of this class is created,_for example in case of WebApplicationContext setup._@param parent the parent context_@see org.springframework.web.context.ConfigurableWebApplicationContext;void setParent(ApplicationContext parent)_;set,the,parent,of,this,application,context,p,note,that,the,parent,shouldn,t,be,changed,it,should,only,be,set,outside,a,constructor,if,it,isn,t,available,when,an,object,of,this,class,is,created,for,example,in,case,of,web,application,context,setup,param,parent,the,parent,context,see,org,springframework,web,context,configurable,web,application,context;void,set,parent,application,context,parent
ConfigurableApplicationContext -> void setParent(ApplicationContext parent)_;1352414689;Set the parent of this application context._<p>Note that the parent shouldn't be changed: It should only be set outside_a constructor if it isn't available when an object of this class is created,_for example in case of WebApplicationContext setup._@param parent the parent context_@see org.springframework.web.context.ConfigurableWebApplicationContext;void setParent(ApplicationContext parent)_;set,the,parent,of,this,application,context,p,note,that,the,parent,shouldn,t,be,changed,it,should,only,be,set,outside,a,constructor,if,it,isn,t,available,when,an,object,of,this,class,is,created,for,example,in,case,of,web,application,context,setup,param,parent,the,parent,context,see,org,springframework,web,context,configurable,web,application,context;void,set,parent,application,context,parent
ConfigurableApplicationContext -> void setParent(ApplicationContext parent)_;1356735495;Set the parent of this application context._<p>Note that the parent shouldn't be changed: It should only be set outside_a constructor if it isn't available when an object of this class is created,_for example in case of WebApplicationContext setup._@param parent the parent context_@see org.springframework.web.context.ConfigurableWebApplicationContext;void setParent(ApplicationContext parent)_;set,the,parent,of,this,application,context,p,note,that,the,parent,shouldn,t,be,changed,it,should,only,be,set,outside,a,constructor,if,it,isn,t,available,when,an,object,of,this,class,is,created,for,example,in,case,of,web,application,context,setup,param,parent,the,parent,context,see,org,springframework,web,context,configurable,web,application,context;void,set,parent,application,context,parent
ConfigurableApplicationContext -> void setParent(ApplicationContext parent)_;1357119239;Set the parent of this application context._<p>Note that the parent shouldn't be changed: It should only be set outside_a constructor if it isn't available when an object of this class is created,_for example in case of WebApplicationContext setup._@param parent the parent context_@see org.springframework.web.context.ConfigurableWebApplicationContext;void setParent(ApplicationContext parent)_;set,the,parent,of,this,application,context,p,note,that,the,parent,shouldn,t,be,changed,it,should,only,be,set,outside,a,constructor,if,it,isn,t,available,when,an,object,of,this,class,is,created,for,example,in,case,of,web,application,context,setup,param,parent,the,parent,context,see,org,springframework,web,context,configurable,web,application,context;void,set,parent,application,context,parent
ConfigurableApplicationContext -> void setParent(ApplicationContext parent)_;1368482696;Set the parent of this application context._<p>Note that the parent shouldn't be changed: It should only be set outside_a constructor if it isn't available when an object of this class is created,_for example in case of WebApplicationContext setup._@param parent the parent context_@see org.springframework.web.context.ConfigurableWebApplicationContext;void setParent(ApplicationContext parent)_;set,the,parent,of,this,application,context,p,note,that,the,parent,shouldn,t,be,changed,it,should,only,be,set,outside,a,constructor,if,it,isn,t,available,when,an,object,of,this,class,is,created,for,example,in,case,of,web,application,context,setup,param,parent,the,parent,context,see,org,springframework,web,context,configurable,web,application,context;void,set,parent,application,context,parent
ConfigurableApplicationContext -> void setParent(ApplicationContext parent)_;1455225686;Set the parent of this application context._<p>Note that the parent shouldn't be changed: It should only be set outside_a constructor if it isn't available when an object of this class is created,_for example in case of WebApplicationContext setup._@param parent the parent context_@see org.springframework.web.context.ConfigurableWebApplicationContext;void setParent(ApplicationContext parent)_;set,the,parent,of,this,application,context,p,note,that,the,parent,shouldn,t,be,changed,it,should,only,be,set,outside,a,constructor,if,it,isn,t,available,when,an,object,of,this,class,is,created,for,example,in,case,of,web,application,context,setup,param,parent,the,parent,context,see,org,springframework,web,context,configurable,web,application,context;void,set,parent,application,context,parent
ConfigurableApplicationContext -> void setParent(ApplicationContext parent)_;1455227261;Set the parent of this application context._<p>Note that the parent shouldn't be changed: It should only be set outside_a constructor if it isn't available when an object of this class is created,_for example in case of WebApplicationContext setup._@param parent the parent context_@see org.springframework.web.context.ConfigurableWebApplicationContext;void setParent(ApplicationContext parent)_;set,the,parent,of,this,application,context,p,note,that,the,parent,shouldn,t,be,changed,it,should,only,be,set,outside,a,constructor,if,it,isn,t,available,when,an,object,of,this,class,is,created,for,example,in,case,of,web,application,context,setup,param,parent,the,parent,context,see,org,springframework,web,context,configurable,web,application,context;void,set,parent,application,context,parent
ConfigurableApplicationContext -> void setParent(ApplicationContext parent)_;1482260272;Set the parent of this application context._<p>Note that the parent shouldn't be changed: It should only be set outside_a constructor if it isn't available when an object of this class is created,_for example in case of WebApplicationContext setup._@param parent the parent context_@see org.springframework.web.context.ConfigurableWebApplicationContext;void setParent(ApplicationContext parent)_;set,the,parent,of,this,application,context,p,note,that,the,parent,shouldn,t,be,changed,it,should,only,be,set,outside,a,constructor,if,it,isn,t,available,when,an,object,of,this,class,is,created,for,example,in,case,of,web,application,context,setup,param,parent,the,parent,context,see,org,springframework,web,context,configurable,web,application,context;void,set,parent,application,context,parent
ConfigurableApplicationContext -> void setParent(ApplicationContext parent)_;1493321910;Set the parent of this application context._<p>Note that the parent shouldn't be changed: It should only be set outside_a constructor if it isn't available when an object of this class is created,_for example in case of WebApplicationContext setup._@param parent the parent context_@see org.springframework.web.context.ConfigurableWebApplicationContext;void setParent(ApplicationContext parent)_;set,the,parent,of,this,application,context,p,note,that,the,parent,shouldn,t,be,changed,it,should,only,be,set,outside,a,constructor,if,it,isn,t,available,when,an,object,of,this,class,is,created,for,example,in,case,of,web,application,context,setup,param,parent,the,parent,context,see,org,springframework,web,context,configurable,web,application,context;void,set,parent,application,context,parent
ConfigurableApplicationContext -> void addBeanFactoryPostProcessor(BeanFactoryPostProcessor postProcessor)_;1455225686;Add a new BeanFactoryPostProcessor that will get applied to the internal_bean factory of this application context on refresh, before any of the_bean definitions get evaluated. To be invoked during context configuration._@param postProcessor the factory processor to register;void addBeanFactoryPostProcessor(BeanFactoryPostProcessor postProcessor)_;add,a,new,bean,factory,post,processor,that,will,get,applied,to,the,internal,bean,factory,of,this,application,context,on,refresh,before,any,of,the,bean,definitions,get,evaluated,to,be,invoked,during,context,configuration,param,post,processor,the,factory,processor,to,register;void,add,bean,factory,post,processor,bean,factory,post,processor,post,processor
ConfigurableApplicationContext -> void addBeanFactoryPostProcessor(BeanFactoryPostProcessor postProcessor)_;1455227261;Add a new BeanFactoryPostProcessor that will get applied to the internal_bean factory of this application context on refresh, before any of the_bean definitions get evaluated. To be invoked during context configuration._@param postProcessor the factory processor to register;void addBeanFactoryPostProcessor(BeanFactoryPostProcessor postProcessor)_;add,a,new,bean,factory,post,processor,that,will,get,applied,to,the,internal,bean,factory,of,this,application,context,on,refresh,before,any,of,the,bean,definitions,get,evaluated,to,be,invoked,during,context,configuration,param,post,processor,the,factory,processor,to,register;void,add,bean,factory,post,processor,bean,factory,post,processor,post,processor
ConfigurableApplicationContext -> void addBeanFactoryPostProcessor(BeanFactoryPostProcessor postProcessor)_;1482260272;Add a new BeanFactoryPostProcessor that will get applied to the internal_bean factory of this application context on refresh, before any of the_bean definitions get evaluated. To be invoked during context configuration._@param postProcessor the factory processor to register;void addBeanFactoryPostProcessor(BeanFactoryPostProcessor postProcessor)_;add,a,new,bean,factory,post,processor,that,will,get,applied,to,the,internal,bean,factory,of,this,application,context,on,refresh,before,any,of,the,bean,definitions,get,evaluated,to,be,invoked,during,context,configuration,param,post,processor,the,factory,processor,to,register;void,add,bean,factory,post,processor,bean,factory,post,processor,post,processor
ConfigurableApplicationContext -> void addBeanFactoryPostProcessor(BeanFactoryPostProcessor postProcessor)_;1493321910;Add a new BeanFactoryPostProcessor that will get applied to the internal_bean factory of this application context on refresh, before any of the_bean definitions get evaluated. To be invoked during context configuration._@param postProcessor the factory processor to register;void addBeanFactoryPostProcessor(BeanFactoryPostProcessor postProcessor)_;add,a,new,bean,factory,post,processor,that,will,get,applied,to,the,internal,bean,factory,of,this,application,context,on,refresh,before,any,of,the,bean,definitions,get,evaluated,to,be,invoked,during,context,configuration,param,post,processor,the,factory,processor,to,register;void,add,bean,factory,post,processor,bean,factory,post,processor,post,processor
ConfigurableApplicationContext -> void addBeanFactoryPostProcessor(BeanFactoryPostProcessor postProcessor)_;1495868221;Add a new BeanFactoryPostProcessor that will get applied to the internal_bean factory of this application context on refresh, before any of the_bean definitions get evaluated. To be invoked during context configuration._@param postProcessor the factory processor to register;void addBeanFactoryPostProcessor(BeanFactoryPostProcessor postProcessor)_;add,a,new,bean,factory,post,processor,that,will,get,applied,to,the,internal,bean,factory,of,this,application,context,on,refresh,before,any,of,the,bean,definitions,get,evaluated,to,be,invoked,during,context,configuration,param,post,processor,the,factory,processor,to,register;void,add,bean,factory,post,processor,bean,factory,post,processor,post,processor
ConfigurableApplicationContext -> void addBeanFactoryPostProcessor(BeanFactoryPostProcessor postProcessor)_;1530174524;Add a new BeanFactoryPostProcessor that will get applied to the internal_bean factory of this application context on refresh, before any of the_bean definitions get evaluated. To be invoked during context configuration._@param postProcessor the factory processor to register;void addBeanFactoryPostProcessor(BeanFactoryPostProcessor postProcessor)_;add,a,new,bean,factory,post,processor,that,will,get,applied,to,the,internal,bean,factory,of,this,application,context,on,refresh,before,any,of,the,bean,definitions,get,evaluated,to,be,invoked,during,context,configuration,param,post,processor,the,factory,processor,to,register;void,add,bean,factory,post,processor,bean,factory,post,processor,post,processor
ConfigurableApplicationContext -> void addBeanFactoryPostProcessor(BeanFactoryPostProcessor postProcessor)_;1533725446;Add a new BeanFactoryPostProcessor that will get applied to the internal_bean factory of this application context on refresh, before any of the_bean definitions get evaluated. To be invoked during context configuration._@param postProcessor the factory processor to register;void addBeanFactoryPostProcessor(BeanFactoryPostProcessor postProcessor)_;add,a,new,bean,factory,post,processor,that,will,get,applied,to,the,internal,bean,factory,of,this,application,context,on,refresh,before,any,of,the,bean,definitions,get,evaluated,to,be,invoked,during,context,configuration,param,post,processor,the,factory,processor,to,register;void,add,bean,factory,post,processor,bean,factory,post,processor,post,processor
ConfigurableApplicationContext -> void setEnvironment(ConfigurableEnvironment environment)_;1328020251;Set the {@code Environment} for this application context._@param environment the new environment;void setEnvironment(ConfigurableEnvironment environment)_;set,the,code,environment,for,this,application,context,param,environment,the,new,environment;void,set,environment,configurable,environment,environment
ConfigurableApplicationContext -> void setEnvironment(ConfigurableEnvironment environment)_;1352414689;Set the {@code Environment} for this application context._@param environment the new environment;void setEnvironment(ConfigurableEnvironment environment)_;set,the,code,environment,for,this,application,context,param,environment,the,new,environment;void,set,environment,configurable,environment,environment
ConfigurableApplicationContext -> void setEnvironment(ConfigurableEnvironment environment)_;1356735495;Set the {@code Environment} for this application context._@param environment the new environment;void setEnvironment(ConfigurableEnvironment environment)_;set,the,code,environment,for,this,application,context,param,environment,the,new,environment;void,set,environment,configurable,environment,environment
ConfigurableApplicationContext -> void setEnvironment(ConfigurableEnvironment environment)_;1357119239;Set the {@code Environment} for this application context._@param environment the new environment;void setEnvironment(ConfigurableEnvironment environment)_;set,the,code,environment,for,this,application,context,param,environment,the,new,environment;void,set,environment,configurable,environment,environment
ConfigurableApplicationContext -> void setEnvironment(ConfigurableEnvironment environment)_;1368482696;Set the {@code Environment} for this application context._@param environment the new environment;void setEnvironment(ConfigurableEnvironment environment)_;set,the,code,environment,for,this,application,context,param,environment,the,new,environment;void,set,environment,configurable,environment,environment
ConfigurableApplicationContext -> void setEnvironment(ConfigurableEnvironment environment)_;1455225686;Set the {@code Environment} for this application context._@param environment the new environment;void setEnvironment(ConfigurableEnvironment environment)_;set,the,code,environment,for,this,application,context,param,environment,the,new,environment;void,set,environment,configurable,environment,environment
ConfigurableApplicationContext -> void setEnvironment(ConfigurableEnvironment environment)_;1455227261;Set the {@code Environment} for this application context._@param environment the new environment;void setEnvironment(ConfigurableEnvironment environment)_;set,the,code,environment,for,this,application,context,param,environment,the,new,environment;void,set,environment,configurable,environment,environment
ConfigurableApplicationContext -> void setEnvironment(ConfigurableEnvironment environment)_;1482260272;Set the {@code Environment} for this application context._@param environment the new environment_@since 3.1;void setEnvironment(ConfigurableEnvironment environment)_;set,the,code,environment,for,this,application,context,param,environment,the,new,environment,since,3,1;void,set,environment,configurable,environment,environment
ConfigurableApplicationContext -> void setEnvironment(ConfigurableEnvironment environment)_;1493321910;Set the {@code Environment} for this application context._@param environment the new environment_@since 3.1;void setEnvironment(ConfigurableEnvironment environment)_;set,the,code,environment,for,this,application,context,param,environment,the,new,environment,since,3,1;void,set,environment,configurable,environment,environment
ConfigurableApplicationContext -> void setEnvironment(ConfigurableEnvironment environment)_;1495868221;Set the {@code Environment} for this application context._@param environment the new environment_@since 3.1;void setEnvironment(ConfigurableEnvironment environment)_;set,the,code,environment,for,this,application,context,param,environment,the,new,environment,since,3,1;void,set,environment,configurable,environment,environment
ConfigurableApplicationContext -> void setEnvironment(ConfigurableEnvironment environment)_;1530174524;Set the {@code Environment} for this application context._@param environment the new environment_@since 3.1;void setEnvironment(ConfigurableEnvironment environment)_;set,the,code,environment,for,this,application,context,param,environment,the,new,environment,since,3,1;void,set,environment,configurable,environment,environment
ConfigurableApplicationContext -> void setEnvironment(ConfigurableEnvironment environment)_;1533725446;Set the {@code Environment} for this application context._@param environment the new environment_@since 3.1;void setEnvironment(ConfigurableEnvironment environment)_;set,the,code,environment,for,this,application,context,param,environment,the,new,environment,since,3,1;void,set,environment,configurable,environment,environment
ConfigurableApplicationContext -> @Override 	ConfigurableEnvironment getEnvironment()_;1356735495;Return the Environment for this application context in configurable form.;@Override_	ConfigurableEnvironment getEnvironment()_;return,the,environment,for,this,application,context,in,configurable,form;override,configurable,environment,get,environment
ConfigurableApplicationContext -> @Override 	ConfigurableEnvironment getEnvironment()_;1368482696;Return the Environment for this application context in configurable form.;@Override_	ConfigurableEnvironment getEnvironment()_;return,the,environment,for,this,application,context,in,configurable,form;override,configurable,environment,get,environment
ConfigurableApplicationContext -> @Override 	ConfigurableEnvironment getEnvironment()_;1455225686;Return the Environment for this application context in configurable form.;@Override_	ConfigurableEnvironment getEnvironment()_;return,the,environment,for,this,application,context,in,configurable,form;override,configurable,environment,get,environment
ConfigurableApplicationContext -> @Override 	ConfigurableEnvironment getEnvironment()_;1455227261;Return the Environment for this application context in configurable form.;@Override_	ConfigurableEnvironment getEnvironment()_;return,the,environment,for,this,application,context,in,configurable,form;override,configurable,environment,get,environment
ConfigurableApplicationContext -> @Override 	ConfigurableEnvironment getEnvironment()_;1482260272;Return the Environment for this application context in configurable form._@since 3.1;@Override_	ConfigurableEnvironment getEnvironment()_;return,the,environment,for,this,application,context,in,configurable,form,since,3,1;override,configurable,environment,get,environment
ConfigurableApplicationContext -> @Override 	ConfigurableEnvironment getEnvironment()_;1493321910;Return the {@code Environment} for this application context in configurable_form, allowing for further customization._@since 3.1;@Override_	ConfigurableEnvironment getEnvironment()_;return,the,code,environment,for,this,application,context,in,configurable,form,allowing,for,further,customization,since,3,1;override,configurable,environment,get,environment
ConfigurableApplicationContext -> @Override 	ConfigurableEnvironment getEnvironment()_;1495868221;Return the {@code Environment} for this application context in configurable_form, allowing for further customization._@since 3.1;@Override_	ConfigurableEnvironment getEnvironment()_;return,the,code,environment,for,this,application,context,in,configurable,form,allowing,for,further,customization,since,3,1;override,configurable,environment,get,environment
ConfigurableApplicationContext -> @Override 	ConfigurableEnvironment getEnvironment()_;1530174524;Return the {@code Environment} for this application context in configurable_form, allowing for further customization._@since 3.1;@Override_	ConfigurableEnvironment getEnvironment()_;return,the,code,environment,for,this,application,context,in,configurable,form,allowing,for,further,customization,since,3,1;override,configurable,environment,get,environment
ConfigurableApplicationContext -> @Override 	ConfigurableEnvironment getEnvironment()_;1533725446;Return the {@code Environment} for this application context in configurable_form, allowing for further customization._@since 3.1;@Override_	ConfigurableEnvironment getEnvironment()_;return,the,code,environment,for,this,application,context,in,configurable,form,allowing,for,further,customization,since,3,1;override,configurable,environment,get,environment
ConfigurableApplicationContext -> void refresh() throws BeansException, IllegalStateException_;1328020251;Load or refresh the persistent representation of the configuration,_which might an XML file, properties file, or relational database schema._<p>As this is a startup method, it should destroy already created singletons_if it fails, to avoid dangling resources. In other words, after invocation_of that method, either all or no singletons at all should be instantiated._@throws BeansException if the bean factory could not be initialized_@throws IllegalStateException if already initialized and multiple refresh_attempts are not supported;void refresh() throws BeansException, IllegalStateException_;load,or,refresh,the,persistent,representation,of,the,configuration,which,might,an,xml,file,properties,file,or,relational,database,schema,p,as,this,is,a,startup,method,it,should,destroy,already,created,singletons,if,it,fails,to,avoid,dangling,resources,in,other,words,after,invocation,of,that,method,either,all,or,no,singletons,at,all,should,be,instantiated,throws,beans,exception,if,the,bean,factory,could,not,be,initialized,throws,illegal,state,exception,if,already,initialized,and,multiple,refresh,attempts,are,not,supported;void,refresh,throws,beans,exception,illegal,state,exception
ConfigurableApplicationContext -> void refresh() throws BeansException, IllegalStateException_;1352414689;Load or refresh the persistent representation of the configuration,_which might an XML file, properties file, or relational database schema._<p>As this is a startup method, it should destroy already created singletons_if it fails, to avoid dangling resources. In other words, after invocation_of that method, either all or no singletons at all should be instantiated._@throws BeansException if the bean factory could not be initialized_@throws IllegalStateException if already initialized and multiple refresh_attempts are not supported;void refresh() throws BeansException, IllegalStateException_;load,or,refresh,the,persistent,representation,of,the,configuration,which,might,an,xml,file,properties,file,or,relational,database,schema,p,as,this,is,a,startup,method,it,should,destroy,already,created,singletons,if,it,fails,to,avoid,dangling,resources,in,other,words,after,invocation,of,that,method,either,all,or,no,singletons,at,all,should,be,instantiated,throws,beans,exception,if,the,bean,factory,could,not,be,initialized,throws,illegal,state,exception,if,already,initialized,and,multiple,refresh,attempts,are,not,supported;void,refresh,throws,beans,exception,illegal,state,exception
ConfigurableApplicationContext -> void refresh() throws BeansException, IllegalStateException_;1356735495;Load or refresh the persistent representation of the configuration,_which might an XML file, properties file, or relational database schema._<p>As this is a startup method, it should destroy already created singletons_if it fails, to avoid dangling resources. In other words, after invocation_of that method, either all or no singletons at all should be instantiated._@throws BeansException if the bean factory could not be initialized_@throws IllegalStateException if already initialized and multiple refresh_attempts are not supported;void refresh() throws BeansException, IllegalStateException_;load,or,refresh,the,persistent,representation,of,the,configuration,which,might,an,xml,file,properties,file,or,relational,database,schema,p,as,this,is,a,startup,method,it,should,destroy,already,created,singletons,if,it,fails,to,avoid,dangling,resources,in,other,words,after,invocation,of,that,method,either,all,or,no,singletons,at,all,should,be,instantiated,throws,beans,exception,if,the,bean,factory,could,not,be,initialized,throws,illegal,state,exception,if,already,initialized,and,multiple,refresh,attempts,are,not,supported;void,refresh,throws,beans,exception,illegal,state,exception
ConfigurableApplicationContext -> void refresh() throws BeansException, IllegalStateException_;1357119239;Load or refresh the persistent representation of the configuration,_which might an XML file, properties file, or relational database schema._<p>As this is a startup method, it should destroy already created singletons_if it fails, to avoid dangling resources. In other words, after invocation_of that method, either all or no singletons at all should be instantiated._@throws BeansException if the bean factory could not be initialized_@throws IllegalStateException if already initialized and multiple refresh_attempts are not supported;void refresh() throws BeansException, IllegalStateException_;load,or,refresh,the,persistent,representation,of,the,configuration,which,might,an,xml,file,properties,file,or,relational,database,schema,p,as,this,is,a,startup,method,it,should,destroy,already,created,singletons,if,it,fails,to,avoid,dangling,resources,in,other,words,after,invocation,of,that,method,either,all,or,no,singletons,at,all,should,be,instantiated,throws,beans,exception,if,the,bean,factory,could,not,be,initialized,throws,illegal,state,exception,if,already,initialized,and,multiple,refresh,attempts,are,not,supported;void,refresh,throws,beans,exception,illegal,state,exception
ConfigurableApplicationContext -> void refresh() throws BeansException, IllegalStateException_;1368482696;Load or refresh the persistent representation of the configuration,_which might an XML file, properties file, or relational database schema._<p>As this is a startup method, it should destroy already created singletons_if it fails, to avoid dangling resources. In other words, after invocation_of that method, either all or no singletons at all should be instantiated._@throws BeansException if the bean factory could not be initialized_@throws IllegalStateException if already initialized and multiple refresh_attempts are not supported;void refresh() throws BeansException, IllegalStateException_;load,or,refresh,the,persistent,representation,of,the,configuration,which,might,an,xml,file,properties,file,or,relational,database,schema,p,as,this,is,a,startup,method,it,should,destroy,already,created,singletons,if,it,fails,to,avoid,dangling,resources,in,other,words,after,invocation,of,that,method,either,all,or,no,singletons,at,all,should,be,instantiated,throws,beans,exception,if,the,bean,factory,could,not,be,initialized,throws,illegal,state,exception,if,already,initialized,and,multiple,refresh,attempts,are,not,supported;void,refresh,throws,beans,exception,illegal,state,exception
ConfigurableApplicationContext -> void refresh() throws BeansException, IllegalStateException_;1455225686;Load or refresh the persistent representation of the configuration,_which might an XML file, properties file, or relational database schema._<p>As this is a startup method, it should destroy already created singletons_if it fails, to avoid dangling resources. In other words, after invocation_of that method, either all or no singletons at all should be instantiated._@throws BeansException if the bean factory could not be initialized_@throws IllegalStateException if already initialized and multiple refresh_attempts are not supported;void refresh() throws BeansException, IllegalStateException_;load,or,refresh,the,persistent,representation,of,the,configuration,which,might,an,xml,file,properties,file,or,relational,database,schema,p,as,this,is,a,startup,method,it,should,destroy,already,created,singletons,if,it,fails,to,avoid,dangling,resources,in,other,words,after,invocation,of,that,method,either,all,or,no,singletons,at,all,should,be,instantiated,throws,beans,exception,if,the,bean,factory,could,not,be,initialized,throws,illegal,state,exception,if,already,initialized,and,multiple,refresh,attempts,are,not,supported;void,refresh,throws,beans,exception,illegal,state,exception
ConfigurableApplicationContext -> void refresh() throws BeansException, IllegalStateException_;1455227261;Load or refresh the persistent representation of the configuration,_which might an XML file, properties file, or relational database schema._<p>As this is a startup method, it should destroy already created singletons_if it fails, to avoid dangling resources. In other words, after invocation_of that method, either all or no singletons at all should be instantiated._@throws BeansException if the bean factory could not be initialized_@throws IllegalStateException if already initialized and multiple refresh_attempts are not supported;void refresh() throws BeansException, IllegalStateException_;load,or,refresh,the,persistent,representation,of,the,configuration,which,might,an,xml,file,properties,file,or,relational,database,schema,p,as,this,is,a,startup,method,it,should,destroy,already,created,singletons,if,it,fails,to,avoid,dangling,resources,in,other,words,after,invocation,of,that,method,either,all,or,no,singletons,at,all,should,be,instantiated,throws,beans,exception,if,the,bean,factory,could,not,be,initialized,throws,illegal,state,exception,if,already,initialized,and,multiple,refresh,attempts,are,not,supported;void,refresh,throws,beans,exception,illegal,state,exception
ConfigurableApplicationContext -> void refresh() throws BeansException, IllegalStateException_;1482260272;Load or refresh the persistent representation of the configuration,_which might an XML file, properties file, or relational database schema._<p>As this is a startup method, it should destroy already created singletons_if it fails, to avoid dangling resources. In other words, after invocation_of that method, either all or no singletons at all should be instantiated._@throws BeansException if the bean factory could not be initialized_@throws IllegalStateException if already initialized and multiple refresh_attempts are not supported;void refresh() throws BeansException, IllegalStateException_;load,or,refresh,the,persistent,representation,of,the,configuration,which,might,an,xml,file,properties,file,or,relational,database,schema,p,as,this,is,a,startup,method,it,should,destroy,already,created,singletons,if,it,fails,to,avoid,dangling,resources,in,other,words,after,invocation,of,that,method,either,all,or,no,singletons,at,all,should,be,instantiated,throws,beans,exception,if,the,bean,factory,could,not,be,initialized,throws,illegal,state,exception,if,already,initialized,and,multiple,refresh,attempts,are,not,supported;void,refresh,throws,beans,exception,illegal,state,exception
ConfigurableApplicationContext -> void refresh() throws BeansException, IllegalStateException_;1493321910;Load or refresh the persistent representation of the configuration,_which might an XML file, properties file, or relational database schema._<p>As this is a startup method, it should destroy already created singletons_if it fails, to avoid dangling resources. In other words, after invocation_of that method, either all or no singletons at all should be instantiated._@throws BeansException if the bean factory could not be initialized_@throws IllegalStateException if already initialized and multiple refresh_attempts are not supported;void refresh() throws BeansException, IllegalStateException_;load,or,refresh,the,persistent,representation,of,the,configuration,which,might,an,xml,file,properties,file,or,relational,database,schema,p,as,this,is,a,startup,method,it,should,destroy,already,created,singletons,if,it,fails,to,avoid,dangling,resources,in,other,words,after,invocation,of,that,method,either,all,or,no,singletons,at,all,should,be,instantiated,throws,beans,exception,if,the,bean,factory,could,not,be,initialized,throws,illegal,state,exception,if,already,initialized,and,multiple,refresh,attempts,are,not,supported;void,refresh,throws,beans,exception,illegal,state,exception
ConfigurableApplicationContext -> void refresh() throws BeansException, IllegalStateException_;1495868221;Load or refresh the persistent representation of the configuration,_which might an XML file, properties file, or relational database schema._<p>As this is a startup method, it should destroy already created singletons_if it fails, to avoid dangling resources. In other words, after invocation_of that method, either all or no singletons at all should be instantiated._@throws BeansException if the bean factory could not be initialized_@throws IllegalStateException if already initialized and multiple refresh_attempts are not supported;void refresh() throws BeansException, IllegalStateException_;load,or,refresh,the,persistent,representation,of,the,configuration,which,might,an,xml,file,properties,file,or,relational,database,schema,p,as,this,is,a,startup,method,it,should,destroy,already,created,singletons,if,it,fails,to,avoid,dangling,resources,in,other,words,after,invocation,of,that,method,either,all,or,no,singletons,at,all,should,be,instantiated,throws,beans,exception,if,the,bean,factory,could,not,be,initialized,throws,illegal,state,exception,if,already,initialized,and,multiple,refresh,attempts,are,not,supported;void,refresh,throws,beans,exception,illegal,state,exception
ConfigurableApplicationContext -> void refresh() throws BeansException, IllegalStateException_;1530174524;Load or refresh the persistent representation of the configuration,_which might an XML file, properties file, or relational database schema._<p>As this is a startup method, it should destroy already created singletons_if it fails, to avoid dangling resources. In other words, after invocation_of that method, either all or no singletons at all should be instantiated._@throws BeansException if the bean factory could not be initialized_@throws IllegalStateException if already initialized and multiple refresh_attempts are not supported;void refresh() throws BeansException, IllegalStateException_;load,or,refresh,the,persistent,representation,of,the,configuration,which,might,an,xml,file,properties,file,or,relational,database,schema,p,as,this,is,a,startup,method,it,should,destroy,already,created,singletons,if,it,fails,to,avoid,dangling,resources,in,other,words,after,invocation,of,that,method,either,all,or,no,singletons,at,all,should,be,instantiated,throws,beans,exception,if,the,bean,factory,could,not,be,initialized,throws,illegal,state,exception,if,already,initialized,and,multiple,refresh,attempts,are,not,supported;void,refresh,throws,beans,exception,illegal,state,exception
ConfigurableApplicationContext -> void refresh() throws BeansException, IllegalStateException_;1533725446;Load or refresh the persistent representation of the configuration,_which might an XML file, properties file, or relational database schema._<p>As this is a startup method, it should destroy already created singletons_if it fails, to avoid dangling resources. In other words, after invocation_of that method, either all or no singletons at all should be instantiated._@throws BeansException if the bean factory could not be initialized_@throws IllegalStateException if already initialized and multiple refresh_attempts are not supported;void refresh() throws BeansException, IllegalStateException_;load,or,refresh,the,persistent,representation,of,the,configuration,which,might,an,xml,file,properties,file,or,relational,database,schema,p,as,this,is,a,startup,method,it,should,destroy,already,created,singletons,if,it,fails,to,avoid,dangling,resources,in,other,words,after,invocation,of,that,method,either,all,or,no,singletons,at,all,should,be,instantiated,throws,beans,exception,if,the,bean,factory,could,not,be,initialized,throws,illegal,state,exception,if,already,initialized,and,multiple,refresh,attempts,are,not,supported;void,refresh,throws,beans,exception,illegal,state,exception
ConfigurableApplicationContext -> void addProtocolResolver(ProtocolResolver resolver)_;1455227261;Register the given protocol resolver with this application context,_allowing for additional resource protocols to be handled._<p>Any such resolver will be invoked ahead of this context's standard_resolution rules. It may therefore also override any default rules._@since 4.3;void addProtocolResolver(ProtocolResolver resolver)_;register,the,given,protocol,resolver,with,this,application,context,allowing,for,additional,resource,protocols,to,be,handled,p,any,such,resolver,will,be,invoked,ahead,of,this,context,s,standard,resolution,rules,it,may,therefore,also,override,any,default,rules,since,4,3;void,add,protocol,resolver,protocol,resolver,resolver
ConfigurableApplicationContext -> void addProtocolResolver(ProtocolResolver resolver)_;1482260272;Register the given protocol resolver with this application context,_allowing for additional resource protocols to be handled._<p>Any such resolver will be invoked ahead of this context's standard_resolution rules. It may therefore also override any default rules._@since 4.3;void addProtocolResolver(ProtocolResolver resolver)_;register,the,given,protocol,resolver,with,this,application,context,allowing,for,additional,resource,protocols,to,be,handled,p,any,such,resolver,will,be,invoked,ahead,of,this,context,s,standard,resolution,rules,it,may,therefore,also,override,any,default,rules,since,4,3;void,add,protocol,resolver,protocol,resolver,resolver
ConfigurableApplicationContext -> void addProtocolResolver(ProtocolResolver resolver)_;1493321910;Register the given protocol resolver with this application context,_allowing for additional resource protocols to be handled._<p>Any such resolver will be invoked ahead of this context's standard_resolution rules. It may therefore also override any default rules._@since 4.3;void addProtocolResolver(ProtocolResolver resolver)_;register,the,given,protocol,resolver,with,this,application,context,allowing,for,additional,resource,protocols,to,be,handled,p,any,such,resolver,will,be,invoked,ahead,of,this,context,s,standard,resolution,rules,it,may,therefore,also,override,any,default,rules,since,4,3;void,add,protocol,resolver,protocol,resolver,resolver
ConfigurableApplicationContext -> void addProtocolResolver(ProtocolResolver resolver)_;1495868221;Register the given protocol resolver with this application context,_allowing for additional resource protocols to be handled._<p>Any such resolver will be invoked ahead of this context's standard_resolution rules. It may therefore also override any default rules._@since 4.3;void addProtocolResolver(ProtocolResolver resolver)_;register,the,given,protocol,resolver,with,this,application,context,allowing,for,additional,resource,protocols,to,be,handled,p,any,such,resolver,will,be,invoked,ahead,of,this,context,s,standard,resolution,rules,it,may,therefore,also,override,any,default,rules,since,4,3;void,add,protocol,resolver,protocol,resolver,resolver
ConfigurableApplicationContext -> void addProtocolResolver(ProtocolResolver resolver)_;1530174524;Register the given protocol resolver with this application context,_allowing for additional resource protocols to be handled._<p>Any such resolver will be invoked ahead of this context's standard_resolution rules. It may therefore also override any default rules._@since 4.3;void addProtocolResolver(ProtocolResolver resolver)_;register,the,given,protocol,resolver,with,this,application,context,allowing,for,additional,resource,protocols,to,be,handled,p,any,such,resolver,will,be,invoked,ahead,of,this,context,s,standard,resolution,rules,it,may,therefore,also,override,any,default,rules,since,4,3;void,add,protocol,resolver,protocol,resolver,resolver
ConfigurableApplicationContext -> void addProtocolResolver(ProtocolResolver resolver)_;1533725446;Register the given protocol resolver with this application context,_allowing for additional resource protocols to be handled._<p>Any such resolver will be invoked ahead of this context's standard_resolution rules. It may therefore also override any default rules._@since 4.3;void addProtocolResolver(ProtocolResolver resolver)_;register,the,given,protocol,resolver,with,this,application,context,allowing,for,additional,resource,protocols,to,be,handled,p,any,such,resolver,will,be,invoked,ahead,of,this,context,s,standard,resolution,rules,it,may,therefore,also,override,any,default,rules,since,4,3;void,add,protocol,resolver,protocol,resolver,resolver
