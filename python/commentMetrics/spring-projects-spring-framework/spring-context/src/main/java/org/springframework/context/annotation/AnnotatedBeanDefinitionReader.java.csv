# id;timestamp;commentText;codeText;commentWords;codeWords
AnnotatedBeanDefinitionReader -> private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry);1328020251;Get the Environment from the given registry if possible, otherwise return a new_StandardEnvironment.;private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		if (registry instanceof EnvironmentCapable) {_			return ((EnvironmentCapable) registry).getEnvironment()__		}_		return new StandardEnvironment()__	};get,the,environment,from,the,given,registry,if,possible,otherwise,return,a,new,standard,environment;private,static,environment,get,or,create,environment,bean,definition,registry,registry,assert,not,null,registry,bean,definition,registry,must,not,be,null,if,registry,instanceof,environment,capable,return,environment,capable,registry,get,environment,return,new,standard,environment
AnnotatedBeanDefinitionReader -> private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry);1329142650;Get the Environment from the given registry if possible, otherwise return a new_StandardEnvironment.;private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		if (registry instanceof EnvironmentCapable) {_			return ((EnvironmentCapable) registry).getEnvironment()__		}_		return new StandardEnvironment()__	};get,the,environment,from,the,given,registry,if,possible,otherwise,return,a,new,standard,environment;private,static,environment,get,or,create,environment,bean,definition,registry,registry,assert,not,null,registry,bean,definition,registry,must,not,be,null,if,registry,instanceof,environment,capable,return,environment,capable,registry,get,environment,return,new,standard,environment
AnnotatedBeanDefinitionReader -> private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry);1347311780;Get the Environment from the given registry if possible, otherwise return a new_StandardEnvironment.;private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		if (registry instanceof EnvironmentCapable) {_			return ((EnvironmentCapable) registry).getEnvironment()__		}_		return new StandardEnvironment()__	};get,the,environment,from,the,given,registry,if,possible,otherwise,return,a,new,standard,environment;private,static,environment,get,or,create,environment,bean,definition,registry,registry,assert,not,null,registry,bean,definition,registry,must,not,be,null,if,registry,instanceof,environment,capable,return,environment,capable,registry,get,environment,return,new,standard,environment
AnnotatedBeanDefinitionReader -> private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry);1368068203;Get the Environment from the given registry if possible, otherwise return a new_StandardEnvironment.;private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		if (registry instanceof EnvironmentCapable) {_			return ((EnvironmentCapable) registry).getEnvironment()__		}_		return new StandardEnvironment()__	};get,the,environment,from,the,given,registry,if,possible,otherwise,return,a,new,standard,environment;private,static,environment,get,or,create,environment,bean,definition,registry,registry,assert,not,null,registry,bean,definition,registry,must,not,be,null,if,registry,instanceof,environment,capable,return,environment,capable,registry,get,environment,return,new,standard,environment
AnnotatedBeanDefinitionReader -> private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry);1372363092;Get the Environment from the given registry if possible, otherwise return a new_StandardEnvironment.;private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		if (registry instanceof EnvironmentCapable) {_			return ((EnvironmentCapable) registry).getEnvironment()__		}_		return new StandardEnvironment()__	};get,the,environment,from,the,given,registry,if,possible,otherwise,return,a,new,standard,environment;private,static,environment,get,or,create,environment,bean,definition,registry,registry,assert,not,null,registry,bean,definition,registry,must,not,be,null,if,registry,instanceof,environment,capable,return,environment,capable,registry,get,environment,return,new,standard,environment
AnnotatedBeanDefinitionReader -> private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry);1377562322;Get the Environment from the given registry if possible, otherwise return a new_StandardEnvironment.;private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		if (registry instanceof EnvironmentCapable) {_			return ((EnvironmentCapable) registry).getEnvironment()__		}_		return new StandardEnvironment()__	};get,the,environment,from,the,given,registry,if,possible,otherwise,return,a,new,standard,environment;private,static,environment,get,or,create,environment,bean,definition,registry,registry,assert,not,null,registry,bean,definition,registry,must,not,be,null,if,registry,instanceof,environment,capable,return,environment,capable,registry,get,environment,return,new,standard,environment
AnnotatedBeanDefinitionReader -> private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry);1377625191;Get the Environment from the given registry if possible, otherwise return a new_StandardEnvironment.;private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		if (registry instanceof EnvironmentCapable) {_			return ((EnvironmentCapable) registry).getEnvironment()__		}_		return new StandardEnvironment()__	};get,the,environment,from,the,given,registry,if,possible,otherwise,return,a,new,standard,environment;private,static,environment,get,or,create,environment,bean,definition,registry,registry,assert,not,null,registry,bean,definition,registry,must,not,be,null,if,registry,instanceof,environment,capable,return,environment,capable,registry,get,environment,return,new,standard,environment
AnnotatedBeanDefinitionReader -> private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry);1377640854;Get the Environment from the given registry if possible, otherwise return a new_StandardEnvironment.;private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		if (registry instanceof EnvironmentCapable) {_			return ((EnvironmentCapable) registry).getEnvironment()__		}_		return new StandardEnvironment()__	};get,the,environment,from,the,given,registry,if,possible,otherwise,return,a,new,standard,environment;private,static,environment,get,or,create,environment,bean,definition,registry,registry,assert,not,null,registry,bean,definition,registry,must,not,be,null,if,registry,instanceof,environment,capable,return,environment,capable,registry,get,environment,return,new,standard,environment
AnnotatedBeanDefinitionReader -> private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry);1385412762;Get the Environment from the given registry if possible, otherwise return a new_StandardEnvironment.;private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		if (registry instanceof EnvironmentCapable) {_			return ((EnvironmentCapable) registry).getEnvironment()__		}_		return new StandardEnvironment()__	};get,the,environment,from,the,given,registry,if,possible,otherwise,return,a,new,standard,environment;private,static,environment,get,or,create,environment,bean,definition,registry,registry,assert,not,null,registry,bean,definition,registry,must,not,be,null,if,registry,instanceof,environment,capable,return,environment,capable,registry,get,environment,return,new,standard,environment
AnnotatedBeanDefinitionReader -> private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry);1386197885;Get the Environment from the given registry if possible, otherwise return a new_StandardEnvironment.;private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		if (registry instanceof EnvironmentCapable) {_			return ((EnvironmentCapable) registry).getEnvironment()__		}_		return new StandardEnvironment()__	};get,the,environment,from,the,given,registry,if,possible,otherwise,return,a,new,standard,environment;private,static,environment,get,or,create,environment,bean,definition,registry,registry,assert,not,null,registry,bean,definition,registry,must,not,be,null,if,registry,instanceof,environment,capable,return,environment,capable,registry,get,environment,return,new,standard,environment
AnnotatedBeanDefinitionReader -> private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry);1432125256;Get the Environment from the given registry if possible, otherwise return a new_StandardEnvironment.;private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		if (registry instanceof EnvironmentCapable) {_			return ((EnvironmentCapable) registry).getEnvironment()__		}_		return new StandardEnvironment()__	};get,the,environment,from,the,given,registry,if,possible,otherwise,return,a,new,standard,environment;private,static,environment,get,or,create,environment,bean,definition,registry,registry,assert,not,null,registry,bean,definition,registry,must,not,be,null,if,registry,instanceof,environment,capable,return,environment,capable,registry,get,environment,return,new,standard,environment
AnnotatedBeanDefinitionReader -> private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry);1467667241;Get the Environment from the given registry if possible, otherwise return a new_StandardEnvironment.;private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		if (registry instanceof EnvironmentCapable) {_			return ((EnvironmentCapable) registry).getEnvironment()__		}_		return new StandardEnvironment()__	};get,the,environment,from,the,given,registry,if,possible,otherwise,return,a,new,standard,environment;private,static,environment,get,or,create,environment,bean,definition,registry,registry,assert,not,null,registry,bean,definition,registry,must,not,be,null,if,registry,instanceof,environment,capable,return,environment,capable,registry,get,environment,return,new,standard,environment
AnnotatedBeanDefinitionReader -> private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry);1482260264;Get the Environment from the given registry if possible, otherwise return a new_StandardEnvironment.;private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		if (registry instanceof EnvironmentCapable) {_			return ((EnvironmentCapable) registry).getEnvironment()__		}_		return new StandardEnvironment()__	};get,the,environment,from,the,given,registry,if,possible,otherwise,return,a,new,standard,environment;private,static,environment,get,or,create,environment,bean,definition,registry,registry,assert,not,null,registry,bean,definition,registry,must,not,be,null,if,registry,instanceof,environment,capable,return,environment,capable,registry,get,environment,return,new,standard,environment
AnnotatedBeanDefinitionReader -> private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry);1482492407;Get the Environment from the given registry if possible, otherwise return a new_StandardEnvironment.;private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		if (registry instanceof EnvironmentCapable) {_			return ((EnvironmentCapable) registry).getEnvironment()__		}_		return new StandardEnvironment()__	};get,the,environment,from,the,given,registry,if,possible,otherwise,return,a,new,standard,environment;private,static,environment,get,or,create,environment,bean,definition,registry,registry,assert,not,null,registry,bean,definition,registry,must,not,be,null,if,registry,instanceof,environment,capable,return,environment,capable,registry,get,environment,return,new,standard,environment
AnnotatedBeanDefinitionReader -> private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry);1495868221;Get the Environment from the given registry if possible, otherwise return a new_StandardEnvironment.;private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		if (registry instanceof EnvironmentCapable) {_			return ((EnvironmentCapable) registry).getEnvironment()__		}_		return new StandardEnvironment()__	};get,the,environment,from,the,given,registry,if,possible,otherwise,return,a,new,standard,environment;private,static,environment,get,or,create,environment,bean,definition,registry,registry,assert,not,null,registry,bean,definition,registry,must,not,be,null,if,registry,instanceof,environment,capable,return,environment,capable,registry,get,environment,return,new,standard,environment
AnnotatedBeanDefinitionReader -> private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry);1496259743;Get the Environment from the given registry if possible, otherwise return a new_StandardEnvironment.;private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		if (registry instanceof EnvironmentCapable) {_			return ((EnvironmentCapable) registry).getEnvironment()__		}_		return new StandardEnvironment()__	};get,the,environment,from,the,given,registry,if,possible,otherwise,return,a,new,standard,environment;private,static,environment,get,or,create,environment,bean,definition,registry,registry,assert,not,null,registry,bean,definition,registry,must,not,be,null,if,registry,instanceof,environment,capable,return,environment,capable,registry,get,environment,return,new,standard,environment
AnnotatedBeanDefinitionReader -> private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry);1496263893;Get the Environment from the given registry if possible, otherwise return a new_StandardEnvironment.;private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		if (registry instanceof EnvironmentCapable) {_			return ((EnvironmentCapable) registry).getEnvironment()__		}_		return new StandardEnvironment()__	};get,the,environment,from,the,given,registry,if,possible,otherwise,return,a,new,standard,environment;private,static,environment,get,or,create,environment,bean,definition,registry,registry,assert,not,null,registry,bean,definition,registry,must,not,be,null,if,registry,instanceof,environment,capable,return,environment,capable,registry,get,environment,return,new,standard,environment
AnnotatedBeanDefinitionReader -> private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry);1496837955;Get the Environment from the given registry if possible, otherwise return a new_StandardEnvironment.;private static Environment getOrCreateEnvironment(BeanDefinitionRegistry registry) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		if (registry instanceof EnvironmentCapable) {_			return ((EnvironmentCapable) registry).getEnvironment()__		}_		return new StandardEnvironment()__	};get,the,environment,from,the,given,registry,if,possible,otherwise,return,a,new,standard,environment;private,static,environment,get,or,create,environment,bean,definition,registry,registry,assert,not,null,registry,bean,definition,registry,must,not,be,null,if,registry,instanceof,environment,capable,return,environment,capable,registry,get,environment,return,new,standard,environment
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment);1328020251;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry and using_the given {@link Environment}._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@param environment the {@code Environment} to use when evaluating bean definition_profiles._@since 3.1;public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		Assert.notNull(environment, "Environment must not be null")___		this.registry = registry__		this.environment = environment___		AnnotationConfigUtils.registerAnnotationConfigProcessors(this.registry)__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,and,using,the,given,link,environment,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,param,environment,the,code,environment,to,use,when,evaluating,bean,definition,profiles,since,3,1;public,annotated,bean,definition,reader,bean,definition,registry,registry,environment,environment,assert,not,null,registry,bean,definition,registry,must,not,be,null,assert,not,null,environment,environment,must,not,be,null,this,registry,registry,this,environment,environment,annotation,config,utils,register,annotation,config,processors,this,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment);1329142650;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry and using_the given {@link Environment}._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@param environment the {@code Environment} to use when evaluating bean definition_profiles._@since 3.1;public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		Assert.notNull(environment, "Environment must not be null")___		this.registry = registry__		this.environment = environment___		AnnotationConfigUtils.registerAnnotationConfigProcessors(this.registry)__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,and,using,the,given,link,environment,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,param,environment,the,code,environment,to,use,when,evaluating,bean,definition,profiles,since,3,1;public,annotated,bean,definition,reader,bean,definition,registry,registry,environment,environment,assert,not,null,registry,bean,definition,registry,must,not,be,null,assert,not,null,environment,environment,must,not,be,null,this,registry,registry,this,environment,environment,annotation,config,utils,register,annotation,config,processors,this,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment);1347311780;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry and using_the given {@link Environment}._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@param environment the {@code Environment} to use when evaluating bean definition_profiles._@since 3.1;public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		Assert.notNull(environment, "Environment must not be null")__		this.registry = registry__		this.environment = environment__		AnnotationConfigUtils.registerAnnotationConfigProcessors(this.registry)__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,and,using,the,given,link,environment,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,param,environment,the,code,environment,to,use,when,evaluating,bean,definition,profiles,since,3,1;public,annotated,bean,definition,reader,bean,definition,registry,registry,environment,environment,assert,not,null,registry,bean,definition,registry,must,not,be,null,assert,not,null,environment,environment,must,not,be,null,this,registry,registry,this,environment,environment,annotation,config,utils,register,annotation,config,processors,this,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment);1368068203;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry and using_the given {@link Environment}._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@param environment the {@code Environment} to use when evaluating bean definition_profiles._@since 3.1;public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		Assert.notNull(environment, "Environment must not be null")__		this.registry = registry__		this.environment = environment__		AnnotationConfigUtils.registerAnnotationConfigProcessors(this.registry)__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,and,using,the,given,link,environment,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,param,environment,the,code,environment,to,use,when,evaluating,bean,definition,profiles,since,3,1;public,annotated,bean,definition,reader,bean,definition,registry,registry,environment,environment,assert,not,null,registry,bean,definition,registry,must,not,be,null,assert,not,null,environment,environment,must,not,be,null,this,registry,registry,this,environment,environment,annotation,config,utils,register,annotation,config,processors,this,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment);1372363092;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry and using_the given {@link Environment}._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@param environment the {@code Environment} to use when evaluating bean definition_profiles._@since 3.1;public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		Assert.notNull(environment, "Environment must not be null")__		this.registry = registry__		this.conditionEvaluator = new ConditionEvaluator(registry, environment,_				null, null, null)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(this.registry)__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,and,using,the,given,link,environment,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,param,environment,the,code,environment,to,use,when,evaluating,bean,definition,profiles,since,3,1;public,annotated,bean,definition,reader,bean,definition,registry,registry,environment,environment,assert,not,null,registry,bean,definition,registry,must,not,be,null,assert,not,null,environment,environment,must,not,be,null,this,registry,registry,this,condition,evaluator,new,condition,evaluator,registry,environment,null,null,null,annotation,config,utils,register,annotation,config,processors,this,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment);1377562322;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry and using_the given {@link Environment}._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@param environment the {@code Environment} to use when evaluating bean definition_profiles._@since 3.1;public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		Assert.notNull(environment, "Environment must not be null")__		this.registry = registry__		this.conditionEvaluator = new ConditionEvaluator(registry, environment,_				null, null, null)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(this.registry)__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,and,using,the,given,link,environment,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,param,environment,the,code,environment,to,use,when,evaluating,bean,definition,profiles,since,3,1;public,annotated,bean,definition,reader,bean,definition,registry,registry,environment,environment,assert,not,null,registry,bean,definition,registry,must,not,be,null,assert,not,null,environment,environment,must,not,be,null,this,registry,registry,this,condition,evaluator,new,condition,evaluator,registry,environment,null,null,null,annotation,config,utils,register,annotation,config,processors,this,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment);1377625191;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry and using_the given {@link Environment}._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@param environment the {@code Environment} to use when evaluating bean definition_profiles._@since 3.1;public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		Assert.notNull(environment, "Environment must not be null")__		this.registry = registry__		this.conditionEvaluator = new ConditionEvaluator(registry, environment,_				null, null, null)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(this.registry)__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,and,using,the,given,link,environment,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,param,environment,the,code,environment,to,use,when,evaluating,bean,definition,profiles,since,3,1;public,annotated,bean,definition,reader,bean,definition,registry,registry,environment,environment,assert,not,null,registry,bean,definition,registry,must,not,be,null,assert,not,null,environment,environment,must,not,be,null,this,registry,registry,this,condition,evaluator,new,condition,evaluator,registry,environment,null,null,null,annotation,config,utils,register,annotation,config,processors,this,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment);1377640854;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry and using_the given {@link Environment}._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@param environment the {@code Environment} to use when evaluating bean definition_profiles._@since 3.1;public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		Assert.notNull(environment, "Environment must not be null")__		this.registry = registry__		this.conditionEvaluator = new ConditionEvaluator(registry, environment, null)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(this.registry)__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,and,using,the,given,link,environment,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,param,environment,the,code,environment,to,use,when,evaluating,bean,definition,profiles,since,3,1;public,annotated,bean,definition,reader,bean,definition,registry,registry,environment,environment,assert,not,null,registry,bean,definition,registry,must,not,be,null,assert,not,null,environment,environment,must,not,be,null,this,registry,registry,this,condition,evaluator,new,condition,evaluator,registry,environment,null,annotation,config,utils,register,annotation,config,processors,this,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment);1385412762;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry and using_the given {@link Environment}._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@param environment the {@code Environment} to use when evaluating bean definition_profiles._@since 3.1;public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		Assert.notNull(environment, "Environment must not be null")__		this.registry = registry__		this.conditionEvaluator = new ConditionEvaluator(registry, environment, null)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(this.registry)__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,and,using,the,given,link,environment,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,param,environment,the,code,environment,to,use,when,evaluating,bean,definition,profiles,since,3,1;public,annotated,bean,definition,reader,bean,definition,registry,registry,environment,environment,assert,not,null,registry,bean,definition,registry,must,not,be,null,assert,not,null,environment,environment,must,not,be,null,this,registry,registry,this,condition,evaluator,new,condition,evaluator,registry,environment,null,annotation,config,utils,register,annotation,config,processors,this,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment);1386197885;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry and using_the given {@link Environment}._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@param environment the {@code Environment} to use when evaluating bean definition_profiles._@since 3.1;public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		Assert.notNull(environment, "Environment must not be null")__		this.registry = registry__		this.conditionEvaluator = new ConditionEvaluator(registry, environment, null)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(this.registry)__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,and,using,the,given,link,environment,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,param,environment,the,code,environment,to,use,when,evaluating,bean,definition,profiles,since,3,1;public,annotated,bean,definition,reader,bean,definition,registry,registry,environment,environment,assert,not,null,registry,bean,definition,registry,must,not,be,null,assert,not,null,environment,environment,must,not,be,null,this,registry,registry,this,condition,evaluator,new,condition,evaluator,registry,environment,null,annotation,config,utils,register,annotation,config,processors,this,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment);1432125256;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry and using_the given {@link Environment}._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@param environment the {@code Environment} to use when evaluating bean definition_profiles._@since 3.1;public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		Assert.notNull(environment, "Environment must not be null")__		this.registry = registry__		this.conditionEvaluator = new ConditionEvaluator(registry, environment, null)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(this.registry)__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,and,using,the,given,link,environment,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,param,environment,the,code,environment,to,use,when,evaluating,bean,definition,profiles,since,3,1;public,annotated,bean,definition,reader,bean,definition,registry,registry,environment,environment,assert,not,null,registry,bean,definition,registry,must,not,be,null,assert,not,null,environment,environment,must,not,be,null,this,registry,registry,this,condition,evaluator,new,condition,evaluator,registry,environment,null,annotation,config,utils,register,annotation,config,processors,this,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment);1467667241;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry and using_the given {@link Environment}._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@param environment the {@code Environment} to use when evaluating bean definition_profiles._@since 3.1;public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		Assert.notNull(environment, "Environment must not be null")__		this.registry = registry__		this.conditionEvaluator = new ConditionEvaluator(registry, environment, null)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(this.registry)__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,and,using,the,given,link,environment,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,param,environment,the,code,environment,to,use,when,evaluating,bean,definition,profiles,since,3,1;public,annotated,bean,definition,reader,bean,definition,registry,registry,environment,environment,assert,not,null,registry,bean,definition,registry,must,not,be,null,assert,not,null,environment,environment,must,not,be,null,this,registry,registry,this,condition,evaluator,new,condition,evaluator,registry,environment,null,annotation,config,utils,register,annotation,config,processors,this,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment);1482260264;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry and using_the given {@link Environment}._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@param environment the {@code Environment} to use when evaluating bean definition_profiles._@since 3.1;public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		Assert.notNull(environment, "Environment must not be null")__		this.registry = registry__		this.conditionEvaluator = new ConditionEvaluator(registry, environment, null)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(this.registry)__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,and,using,the,given,link,environment,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,param,environment,the,code,environment,to,use,when,evaluating,bean,definition,profiles,since,3,1;public,annotated,bean,definition,reader,bean,definition,registry,registry,environment,environment,assert,not,null,registry,bean,definition,registry,must,not,be,null,assert,not,null,environment,environment,must,not,be,null,this,registry,registry,this,condition,evaluator,new,condition,evaluator,registry,environment,null,annotation,config,utils,register,annotation,config,processors,this,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment);1482492407;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry and using_the given {@link Environment}._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@param environment the {@code Environment} to use when evaluating bean definition_profiles._@since 3.1;public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		Assert.notNull(environment, "Environment must not be null")__		this.registry = registry__		this.conditionEvaluator = new ConditionEvaluator(registry, environment, null)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(this.registry)__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,and,using,the,given,link,environment,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,param,environment,the,code,environment,to,use,when,evaluating,bean,definition,profiles,since,3,1;public,annotated,bean,definition,reader,bean,definition,registry,registry,environment,environment,assert,not,null,registry,bean,definition,registry,must,not,be,null,assert,not,null,environment,environment,must,not,be,null,this,registry,registry,this,condition,evaluator,new,condition,evaluator,registry,environment,null,annotation,config,utils,register,annotation,config,processors,this,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment);1495868221;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry and using_the given {@link Environment}._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@param environment the {@code Environment} to use when evaluating bean definition_profiles._@since 3.1;public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		Assert.notNull(environment, "Environment must not be null")__		this.registry = registry__		this.conditionEvaluator = new ConditionEvaluator(registry, environment, null)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(this.registry)__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,and,using,the,given,link,environment,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,param,environment,the,code,environment,to,use,when,evaluating,bean,definition,profiles,since,3,1;public,annotated,bean,definition,reader,bean,definition,registry,registry,environment,environment,assert,not,null,registry,bean,definition,registry,must,not,be,null,assert,not,null,environment,environment,must,not,be,null,this,registry,registry,this,condition,evaluator,new,condition,evaluator,registry,environment,null,annotation,config,utils,register,annotation,config,processors,this,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment);1496259743;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry and using_the given {@link Environment}._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@param environment the {@code Environment} to use when evaluating bean definition_profiles._@since 3.1;public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		Assert.notNull(environment, "Environment must not be null")__		this.registry = registry__		this.conditionEvaluator = new ConditionEvaluator(registry, environment, null)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(this.registry)__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,and,using,the,given,link,environment,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,param,environment,the,code,environment,to,use,when,evaluating,bean,definition,profiles,since,3,1;public,annotated,bean,definition,reader,bean,definition,registry,registry,environment,environment,assert,not,null,registry,bean,definition,registry,must,not,be,null,assert,not,null,environment,environment,must,not,be,null,this,registry,registry,this,condition,evaluator,new,condition,evaluator,registry,environment,null,annotation,config,utils,register,annotation,config,processors,this,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment);1496263893;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry and using_the given {@link Environment}._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@param environment the {@code Environment} to use when evaluating bean definition_profiles._@since 3.1;public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		Assert.notNull(environment, "Environment must not be null")__		this.registry = registry__		this.conditionEvaluator = new ConditionEvaluator(registry, environment, null)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(this.registry)__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,and,using,the,given,link,environment,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,param,environment,the,code,environment,to,use,when,evaluating,bean,definition,profiles,since,3,1;public,annotated,bean,definition,reader,bean,definition,registry,registry,environment,environment,assert,not,null,registry,bean,definition,registry,must,not,be,null,assert,not,null,environment,environment,must,not,be,null,this,registry,registry,this,condition,evaluator,new,condition,evaluator,registry,environment,null,annotation,config,utils,register,annotation,config,processors,this,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment);1496837955;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry and using_the given {@link Environment}._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@param environment the {@code Environment} to use when evaluating bean definition_profiles._@since 3.1;public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry, Environment environment) {_		Assert.notNull(registry, "BeanDefinitionRegistry must not be null")__		Assert.notNull(environment, "Environment must not be null")__		this.registry = registry__		this.conditionEvaluator = new ConditionEvaluator(registry, environment, null)__		AnnotationConfigUtils.registerAnnotationConfigProcessors(this.registry)__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,and,using,the,given,link,environment,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,param,environment,the,code,environment,to,use,when,evaluating,bean,definition,profiles,since,3,1;public,annotated,bean,definition,reader,bean,definition,registry,registry,environment,environment,assert,not,null,registry,bean,definition,registry,must,not,be,null,assert,not,null,environment,environment,must,not,be,null,this,registry,registry,this,condition,evaluator,new,condition,evaluator,registry,environment,null,annotation,config,utils,register,annotation,config,processors,this,registry
AnnotatedBeanDefinitionReader -> @SuppressWarnings("unchecked") 	public void registerBean(Class<?> annotatedClass, String name, Class<? extends Annotation>... qualifiers);1482260264;Register a bean from the given bean class, deriving its metadata from_class-declared annotations._@param annotatedClass the class of the bean_@param name an explicit name for the bean_@param qualifiers specific qualifier annotations to consider,_in addition to qualifiers at the bean class level;@SuppressWarnings("unchecked")_	public void registerBean(Class<?> annotatedClass, String name, Class<? extends Annotation>... qualifiers) {_		registerBean(annotatedClass, null, name, qualifiers)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,param,annotated,class,the,class,of,the,bean,param,name,an,explicit,name,for,the,bean,param,qualifiers,specific,qualifier,annotations,to,consider,in,addition,to,qualifiers,at,the,bean,class,level;suppress,warnings,unchecked,public,void,register,bean,class,annotated,class,string,name,class,extends,annotation,qualifiers,register,bean,annotated,class,null,name,qualifiers
AnnotatedBeanDefinitionReader -> @SuppressWarnings("unchecked") 	public void registerBean(Class<?> annotatedClass, String name, Class<? extends Annotation>... qualifiers);1482492407;Register a bean from the given bean class, deriving its metadata from_class-declared annotations._@param annotatedClass the class of the bean_@param name an explicit name for the bean_@param qualifiers specific qualifier annotations to consider,_in addition to qualifiers at the bean class level;@SuppressWarnings("unchecked")_	public void registerBean(Class<?> annotatedClass, String name, Class<? extends Annotation>... qualifiers) {_		doRegisterBean(annotatedClass, null, name, qualifiers)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,param,annotated,class,the,class,of,the,bean,param,name,an,explicit,name,for,the,bean,param,qualifiers,specific,qualifier,annotations,to,consider,in,addition,to,qualifiers,at,the,bean,class,level;suppress,warnings,unchecked,public,void,register,bean,class,annotated,class,string,name,class,extends,annotation,qualifiers,do,register,bean,annotated,class,null,name,qualifiers
AnnotatedBeanDefinitionReader -> @SuppressWarnings("unchecked") 	public void registerBean(Class<?> annotatedClass, String name, Class<? extends Annotation>... qualifiers);1495868221;Register a bean from the given bean class, deriving its metadata from_class-declared annotations._@param annotatedClass the class of the bean_@param name an explicit name for the bean_@param qualifiers specific qualifier annotations to consider,_in addition to qualifiers at the bean class level;@SuppressWarnings("unchecked")_	public void registerBean(Class<?> annotatedClass, String name, Class<? extends Annotation>... qualifiers) {_		doRegisterBean(annotatedClass, null, name, qualifiers)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,param,annotated,class,the,class,of,the,bean,param,name,an,explicit,name,for,the,bean,param,qualifiers,specific,qualifier,annotations,to,consider,in,addition,to,qualifiers,at,the,bean,class,level;suppress,warnings,unchecked,public,void,register,bean,class,annotated,class,string,name,class,extends,annotation,qualifiers,do,register,bean,annotated,class,null,name,qualifiers
AnnotatedBeanDefinitionReader -> @SuppressWarnings("unchecked") 	public void registerBean(Class<?> annotatedClass, String name, Class<? extends Annotation>... qualifiers);1496259743;Register a bean from the given bean class, deriving its metadata from_class-declared annotations._@param annotatedClass the class of the bean_@param name an explicit name for the bean_@param qualifiers specific qualifier annotations to consider,_in addition to qualifiers at the bean class level;@SuppressWarnings("unchecked")_	public void registerBean(Class<?> annotatedClass, String name, Class<? extends Annotation>... qualifiers) {_		doRegisterBean(annotatedClass, null, name, qualifiers)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,param,annotated,class,the,class,of,the,bean,param,name,an,explicit,name,for,the,bean,param,qualifiers,specific,qualifier,annotations,to,consider,in,addition,to,qualifiers,at,the,bean,class,level;suppress,warnings,unchecked,public,void,register,bean,class,annotated,class,string,name,class,extends,annotation,qualifiers,do,register,bean,annotated,class,null,name,qualifiers
AnnotatedBeanDefinitionReader -> @SuppressWarnings("unchecked") 	public void registerBean(Class<?> annotatedClass, String name, Class<? extends Annotation>... qualifiers);1496263893;Register a bean from the given bean class, deriving its metadata from_class-declared annotations._@param annotatedClass the class of the bean_@param name an explicit name for the bean_@param qualifiers specific qualifier annotations to consider,_in addition to qualifiers at the bean class level;@SuppressWarnings("unchecked")_	public void registerBean(Class<?> annotatedClass, String name, Class<? extends Annotation>... qualifiers) {_		doRegisterBean(annotatedClass, null, name, qualifiers)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,param,annotated,class,the,class,of,the,bean,param,name,an,explicit,name,for,the,bean,param,qualifiers,specific,qualifier,annotations,to,consider,in,addition,to,qualifiers,at,the,bean,class,level;suppress,warnings,unchecked,public,void,register,bean,class,annotated,class,string,name,class,extends,annotation,qualifiers,do,register,bean,annotated,class,null,name,qualifiers
AnnotatedBeanDefinitionReader -> @SuppressWarnings("unchecked") 	public void registerBean(Class<?> annotatedClass, String name, Class<? extends Annotation>... qualifiers);1496837955;Register a bean from the given bean class, deriving its metadata from_class-declared annotations._@param annotatedClass the class of the bean_@param name an explicit name for the bean_@param qualifiers specific qualifier annotations to consider,_in addition to qualifiers at the bean class level;@SuppressWarnings("unchecked")_	public void registerBean(Class<?> annotatedClass, String name, Class<? extends Annotation>... qualifiers) {_		doRegisterBean(annotatedClass, null, name, qualifiers)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,param,annotated,class,the,class,of,the,bean,param,name,an,explicit,name,for,the,bean,param,qualifiers,specific,qualifier,annotations,to,consider,in,addition,to,qualifiers,at,the,bean,class,level;suppress,warnings,unchecked,public,void,register,bean,class,annotated,class,string,name,class,extends,annotation,qualifiers,do,register,bean,annotated,class,null,name,qualifiers
AnnotatedBeanDefinitionReader -> public void register(Class<?>... annotatedClasses);1482260264;Register one or more annotated classes to be processed._<p>Calls to {@code register} are idempotent_ adding the same_annotated class more than once has no additional effect._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes;public void register(Class<?>... annotatedClasses) {_		for (Class<?> annotatedClass : annotatedClasses) {_			registerBean(annotatedClass)__		}_	};register,one,or,more,annotated,classes,to,be,processed,p,calls,to,code,register,are,idempotent,adding,the,same,annotated,class,more,than,once,has,no,additional,effect,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes;public,void,register,class,annotated,classes,for,class,annotated,class,annotated,classes,register,bean,annotated,class
AnnotatedBeanDefinitionReader -> public void register(Class<?>... annotatedClasses);1482492407;Register one or more annotated classes to be processed._<p>Calls to {@code register} are idempotent_ adding the same_annotated class more than once has no additional effect._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes;public void register(Class<?>... annotatedClasses) {_		for (Class<?> annotatedClass : annotatedClasses) {_			registerBean(annotatedClass)__		}_	};register,one,or,more,annotated,classes,to,be,processed,p,calls,to,code,register,are,idempotent,adding,the,same,annotated,class,more,than,once,has,no,additional,effect,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes;public,void,register,class,annotated,classes,for,class,annotated,class,annotated,classes,register,bean,annotated,class
AnnotatedBeanDefinitionReader -> public void register(Class<?>... annotatedClasses);1495868221;Register one or more annotated classes to be processed._<p>Calls to {@code register} are idempotent_ adding the same_annotated class more than once has no additional effect._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes;public void register(Class<?>... annotatedClasses) {_		for (Class<?> annotatedClass : annotatedClasses) {_			registerBean(annotatedClass)__		}_	};register,one,or,more,annotated,classes,to,be,processed,p,calls,to,code,register,are,idempotent,adding,the,same,annotated,class,more,than,once,has,no,additional,effect,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes;public,void,register,class,annotated,classes,for,class,annotated,class,annotated,classes,register,bean,annotated,class
AnnotatedBeanDefinitionReader -> public void register(Class<?>... annotatedClasses);1496259743;Register one or more annotated classes to be processed._<p>Calls to {@code register} are idempotent_ adding the same_annotated class more than once has no additional effect._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes;public void register(Class<?>... annotatedClasses) {_		for (Class<?> annotatedClass : annotatedClasses) {_			registerBean(annotatedClass)__		}_	};register,one,or,more,annotated,classes,to,be,processed,p,calls,to,code,register,are,idempotent,adding,the,same,annotated,class,more,than,once,has,no,additional,effect,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes;public,void,register,class,annotated,classes,for,class,annotated,class,annotated,classes,register,bean,annotated,class
AnnotatedBeanDefinitionReader -> public void register(Class<?>... annotatedClasses);1496263893;Register one or more annotated classes to be processed._<p>Calls to {@code register} are idempotent_ adding the same_annotated class more than once has no additional effect._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes;public void register(Class<?>... annotatedClasses) {_		for (Class<?> annotatedClass : annotatedClasses) {_			registerBean(annotatedClass)__		}_	};register,one,or,more,annotated,classes,to,be,processed,p,calls,to,code,register,are,idempotent,adding,the,same,annotated,class,more,than,once,has,no,additional,effect,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes;public,void,register,class,annotated,classes,for,class,annotated,class,annotated,classes,register,bean,annotated,class
AnnotatedBeanDefinitionReader -> public void register(Class<?>... annotatedClasses);1496837955;Register one or more annotated classes to be processed._<p>Calls to {@code register} are idempotent_ adding the same_annotated class more than once has no additional effect._@param annotatedClasses one or more annotated classes,_e.g. {@link Configuration @Configuration} classes;public void register(Class<?>... annotatedClasses) {_		for (Class<?> annotatedClass : annotatedClasses) {_			registerBean(annotatedClass)__		}_	};register,one,or,more,annotated,classes,to,be,processed,p,calls,to,code,register,are,idempotent,adding,the,same,annotated,class,more,than,once,has,no,additional,effect,param,annotated,classes,one,or,more,annotated,classes,e,g,link,configuration,configuration,classes;public,void,register,class,annotated,classes,for,class,annotated,class,annotated,classes,register,bean,annotated,class
AnnotatedBeanDefinitionReader -> public void setEnvironment(Environment environment);1328020251;Set the Environment to use when evaluating whether_{@link Profile @Profile}-annotated component classes should be registered._<p>The default is a {@link StandardEnvironment}._@see #registerBean(Class, String, Class...);public void setEnvironment(Environment environment) {_		this.environment = environment__	};set,the,environment,to,use,when,evaluating,whether,link,profile,profile,annotated,component,classes,should,be,registered,p,the,default,is,a,link,standard,environment,see,register,bean,class,string,class;public,void,set,environment,environment,environment,this,environment,environment
AnnotatedBeanDefinitionReader -> public void setEnvironment(Environment environment);1329142650;Set the Environment to use when evaluating whether_{@link Profile @Profile}-annotated component classes should be registered._<p>The default is a {@link StandardEnvironment}._@see #registerBean(Class, String, Class...);public void setEnvironment(Environment environment) {_		this.environment = environment__	};set,the,environment,to,use,when,evaluating,whether,link,profile,profile,annotated,component,classes,should,be,registered,p,the,default,is,a,link,standard,environment,see,register,bean,class,string,class;public,void,set,environment,environment,environment,this,environment,environment
AnnotatedBeanDefinitionReader -> public void setEnvironment(Environment environment);1347311780;Set the Environment to use when evaluating whether_{@link Profile @Profile}-annotated component classes should be registered._<p>The default is a {@link StandardEnvironment}._@see #registerBean(Class, String, Class...);public void setEnvironment(Environment environment) {_		this.environment = environment__	};set,the,environment,to,use,when,evaluating,whether,link,profile,profile,annotated,component,classes,should,be,registered,p,the,default,is,a,link,standard,environment,see,register,bean,class,string,class;public,void,set,environment,environment,environment,this,environment,environment
AnnotatedBeanDefinitionReader -> public void setEnvironment(Environment environment);1368068203;Set the Environment to use when evaluating whether_{@link Profile @Profile}-annotated component classes should be registered._<p>The default is a {@link StandardEnvironment}._@see #registerBean(Class, String, Class...);public void setEnvironment(Environment environment) {_		this.environment = environment__	};set,the,environment,to,use,when,evaluating,whether,link,profile,profile,annotated,component,classes,should,be,registered,p,the,default,is,a,link,standard,environment,see,register,bean,class,string,class;public,void,set,environment,environment,environment,this,environment,environment
AnnotatedBeanDefinitionReader -> public void setEnvironment(Environment environment);1372363092;Set the Environment to use when evaluating whether_{@link Conditional @Conditional}-annotated component classes should be registered._<p>The default is a {@link StandardEnvironment}._@see #registerBean(Class, String, Class...);public void setEnvironment(Environment environment) {_		this.conditionEvaluator = new ConditionEvaluator(this.registry, environment,_				null, null, null)__	};set,the,environment,to,use,when,evaluating,whether,link,conditional,conditional,annotated,component,classes,should,be,registered,p,the,default,is,a,link,standard,environment,see,register,bean,class,string,class;public,void,set,environment,environment,environment,this,condition,evaluator,new,condition,evaluator,this,registry,environment,null,null,null
AnnotatedBeanDefinitionReader -> public void setEnvironment(Environment environment);1377562322;Set the Environment to use when evaluating whether_{@link Conditional @Conditional}-annotated component classes should be registered._<p>The default is a {@link StandardEnvironment}._@see #registerBean(Class, String, Class...);public void setEnvironment(Environment environment) {_		this.conditionEvaluator = new ConditionEvaluator(this.registry, environment,_				null, null, null)__	};set,the,environment,to,use,when,evaluating,whether,link,conditional,conditional,annotated,component,classes,should,be,registered,p,the,default,is,a,link,standard,environment,see,register,bean,class,string,class;public,void,set,environment,environment,environment,this,condition,evaluator,new,condition,evaluator,this,registry,environment,null,null,null
AnnotatedBeanDefinitionReader -> public void setEnvironment(Environment environment);1377625191;Set the Environment to use when evaluating whether_{@link Conditional @Conditional}-annotated component classes should be registered._<p>The default is a {@link StandardEnvironment}._@see #registerBean(Class, String, Class...);public void setEnvironment(Environment environment) {_		this.conditionEvaluator = new ConditionEvaluator(this.registry, environment,_				null, null, null)__	};set,the,environment,to,use,when,evaluating,whether,link,conditional,conditional,annotated,component,classes,should,be,registered,p,the,default,is,a,link,standard,environment,see,register,bean,class,string,class;public,void,set,environment,environment,environment,this,condition,evaluator,new,condition,evaluator,this,registry,environment,null,null,null
AnnotatedBeanDefinitionReader -> public void setEnvironment(Environment environment);1377640854;Set the Environment to use when evaluating whether_{@link Conditional @Conditional}-annotated component classes should be registered._<p>The default is a {@link StandardEnvironment}._@see #registerBean(Class, String, Class...);public void setEnvironment(Environment environment) {_		this.conditionEvaluator = new ConditionEvaluator(this.registry, environment, null)__	};set,the,environment,to,use,when,evaluating,whether,link,conditional,conditional,annotated,component,classes,should,be,registered,p,the,default,is,a,link,standard,environment,see,register,bean,class,string,class;public,void,set,environment,environment,environment,this,condition,evaluator,new,condition,evaluator,this,registry,environment,null
AnnotatedBeanDefinitionReader -> public void setEnvironment(Environment environment);1385412762;Set the Environment to use when evaluating whether_{@link Conditional @Conditional}-annotated component classes should be registered._<p>The default is a {@link StandardEnvironment}._@see #registerBean(Class, String, Class...);public void setEnvironment(Environment environment) {_		this.conditionEvaluator = new ConditionEvaluator(this.registry, environment, null)__	};set,the,environment,to,use,when,evaluating,whether,link,conditional,conditional,annotated,component,classes,should,be,registered,p,the,default,is,a,link,standard,environment,see,register,bean,class,string,class;public,void,set,environment,environment,environment,this,condition,evaluator,new,condition,evaluator,this,registry,environment,null
AnnotatedBeanDefinitionReader -> public void setEnvironment(Environment environment);1386197885;Set the Environment to use when evaluating whether_{@link Conditional @Conditional}-annotated component classes should be registered._<p>The default is a {@link StandardEnvironment}._@see #registerBean(Class, String, Class...);public void setEnvironment(Environment environment) {_		this.conditionEvaluator = new ConditionEvaluator(this.registry, environment, null)__	};set,the,environment,to,use,when,evaluating,whether,link,conditional,conditional,annotated,component,classes,should,be,registered,p,the,default,is,a,link,standard,environment,see,register,bean,class,string,class;public,void,set,environment,environment,environment,this,condition,evaluator,new,condition,evaluator,this,registry,environment,null
AnnotatedBeanDefinitionReader -> public void setEnvironment(Environment environment);1432125256;Set the Environment to use when evaluating whether_{@link Conditional @Conditional}-annotated component classes should be registered._<p>The default is a {@link StandardEnvironment}._@see #registerBean(Class, String, Class...);public void setEnvironment(Environment environment) {_		this.conditionEvaluator = new ConditionEvaluator(this.registry, environment, null)__	};set,the,environment,to,use,when,evaluating,whether,link,conditional,conditional,annotated,component,classes,should,be,registered,p,the,default,is,a,link,standard,environment,see,register,bean,class,string,class;public,void,set,environment,environment,environment,this,condition,evaluator,new,condition,evaluator,this,registry,environment,null
AnnotatedBeanDefinitionReader -> public void setEnvironment(Environment environment);1467667241;Set the Environment to use when evaluating whether_{@link Conditional @Conditional}-annotated component classes should be registered._<p>The default is a {@link StandardEnvironment}._@see #registerBean(Class, String, Class...);public void setEnvironment(Environment environment) {_		this.conditionEvaluator = new ConditionEvaluator(this.registry, environment, null)__	};set,the,environment,to,use,when,evaluating,whether,link,conditional,conditional,annotated,component,classes,should,be,registered,p,the,default,is,a,link,standard,environment,see,register,bean,class,string,class;public,void,set,environment,environment,environment,this,condition,evaluator,new,condition,evaluator,this,registry,environment,null
AnnotatedBeanDefinitionReader -> public void setEnvironment(Environment environment);1482260264;Set the Environment to use when evaluating whether_{@link Conditional @Conditional}-annotated component classes should be registered._<p>The default is a {@link StandardEnvironment}._@see #registerBean(Class, String, Class...);public void setEnvironment(Environment environment) {_		this.conditionEvaluator = new ConditionEvaluator(this.registry, environment, null)__	};set,the,environment,to,use,when,evaluating,whether,link,conditional,conditional,annotated,component,classes,should,be,registered,p,the,default,is,a,link,standard,environment,see,register,bean,class,string,class;public,void,set,environment,environment,environment,this,condition,evaluator,new,condition,evaluator,this,registry,environment,null
AnnotatedBeanDefinitionReader -> public void setEnvironment(Environment environment);1482492407;Set the Environment to use when evaluating whether_{@link Conditional @Conditional}-annotated component classes should be registered._<p>The default is a {@link StandardEnvironment}._@see #registerBean(Class, String, Class...);public void setEnvironment(Environment environment) {_		this.conditionEvaluator = new ConditionEvaluator(this.registry, environment, null)__	};set,the,environment,to,use,when,evaluating,whether,link,conditional,conditional,annotated,component,classes,should,be,registered,p,the,default,is,a,link,standard,environment,see,register,bean,class,string,class;public,void,set,environment,environment,environment,this,condition,evaluator,new,condition,evaluator,this,registry,environment,null
AnnotatedBeanDefinitionReader -> public void setEnvironment(Environment environment);1495868221;Set the Environment to use when evaluating whether_{@link Conditional @Conditional}-annotated component classes should be registered._<p>The default is a {@link StandardEnvironment}._@see #registerBean(Class, String, Class...);public void setEnvironment(Environment environment) {_		this.conditionEvaluator = new ConditionEvaluator(this.registry, environment, null)__	};set,the,environment,to,use,when,evaluating,whether,link,conditional,conditional,annotated,component,classes,should,be,registered,p,the,default,is,a,link,standard,environment,see,register,bean,class,string,class;public,void,set,environment,environment,environment,this,condition,evaluator,new,condition,evaluator,this,registry,environment,null
AnnotatedBeanDefinitionReader -> public void setEnvironment(Environment environment);1496259743;Set the Environment to use when evaluating whether_{@link Conditional @Conditional}-annotated component classes should be registered._<p>The default is a {@link StandardEnvironment}._@see #registerBean(Class, String, Class...);public void setEnvironment(Environment environment) {_		this.conditionEvaluator = new ConditionEvaluator(this.registry, environment, null)__	};set,the,environment,to,use,when,evaluating,whether,link,conditional,conditional,annotated,component,classes,should,be,registered,p,the,default,is,a,link,standard,environment,see,register,bean,class,string,class;public,void,set,environment,environment,environment,this,condition,evaluator,new,condition,evaluator,this,registry,environment,null
AnnotatedBeanDefinitionReader -> public void setEnvironment(Environment environment);1496263893;Set the Environment to use when evaluating whether_{@link Conditional @Conditional}-annotated component classes should be registered._<p>The default is a {@link StandardEnvironment}._@see #registerBean(Class, String, Class...);public void setEnvironment(Environment environment) {_		this.conditionEvaluator = new ConditionEvaluator(this.registry, environment, null)__	};set,the,environment,to,use,when,evaluating,whether,link,conditional,conditional,annotated,component,classes,should,be,registered,p,the,default,is,a,link,standard,environment,see,register,bean,class,string,class;public,void,set,environment,environment,environment,this,condition,evaluator,new,condition,evaluator,this,registry,environment,null
AnnotatedBeanDefinitionReader -> public void setEnvironment(Environment environment);1496837955;Set the Environment to use when evaluating whether_{@link Conditional @Conditional}-annotated component classes should be registered._<p>The default is a {@link StandardEnvironment}._@see #registerBean(Class, String, Class...);public void setEnvironment(Environment environment) {_		this.conditionEvaluator = new ConditionEvaluator(this.registry, environment, null)__	};set,the,environment,to,use,when,evaluating,whether,link,conditional,conditional,annotated,component,classes,should,be,registered,p,the,default,is,a,link,standard,environment,see,register,bean,class,string,class;public,void,set,environment,environment,environment,this,condition,evaluator,new,condition,evaluator,this,registry,environment,null
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry);1328020251;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry._If the registry is {@link EnvironmentCapable}, e.g. is an {@code ApplicationContext},_the {@link Environment} will be inherited, otherwise a new_{@link StandardEnvironment} will be created and used._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@see #AnnotatedBeanDefinitionReader(BeanDefinitionRegistry, Environment)_@see #setEnvironment(Environment);public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry) {_		this(registry, getOrCreateEnvironment(registry))__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,if,the,registry,is,link,environment,capable,e,g,is,an,code,application,context,the,link,environment,will,be,inherited,otherwise,a,new,link,standard,environment,will,be,created,and,used,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,see,annotated,bean,definition,reader,bean,definition,registry,environment,see,set,environment,environment;public,annotated,bean,definition,reader,bean,definition,registry,registry,this,registry,get,or,create,environment,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry);1329142650;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry._If the registry is {@link EnvironmentCapable}, e.g. is an {@code ApplicationContext},_the {@link Environment} will be inherited, otherwise a new_{@link StandardEnvironment} will be created and used._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@see #AnnotatedBeanDefinitionReader(BeanDefinitionRegistry, Environment)_@see #setEnvironment(Environment);public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry) {_		this(registry, getOrCreateEnvironment(registry))__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,if,the,registry,is,link,environment,capable,e,g,is,an,code,application,context,the,link,environment,will,be,inherited,otherwise,a,new,link,standard,environment,will,be,created,and,used,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,see,annotated,bean,definition,reader,bean,definition,registry,environment,see,set,environment,environment;public,annotated,bean,definition,reader,bean,definition,registry,registry,this,registry,get,or,create,environment,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry);1347311780;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry._If the registry is {@link EnvironmentCapable}, e.g. is an {@code ApplicationContext},_the {@link Environment} will be inherited, otherwise a new_{@link StandardEnvironment} will be created and used._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@see #AnnotatedBeanDefinitionReader(BeanDefinitionRegistry, Environment)_@see #setEnvironment(Environment);public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry) {_		this(registry, getOrCreateEnvironment(registry))__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,if,the,registry,is,link,environment,capable,e,g,is,an,code,application,context,the,link,environment,will,be,inherited,otherwise,a,new,link,standard,environment,will,be,created,and,used,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,see,annotated,bean,definition,reader,bean,definition,registry,environment,see,set,environment,environment;public,annotated,bean,definition,reader,bean,definition,registry,registry,this,registry,get,or,create,environment,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry);1368068203;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry._If the registry is {@link EnvironmentCapable}, e.g. is an {@code ApplicationContext},_the {@link Environment} will be inherited, otherwise a new_{@link StandardEnvironment} will be created and used._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@see #AnnotatedBeanDefinitionReader(BeanDefinitionRegistry, Environment)_@see #setEnvironment(Environment);public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry) {_		this(registry, getOrCreateEnvironment(registry))__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,if,the,registry,is,link,environment,capable,e,g,is,an,code,application,context,the,link,environment,will,be,inherited,otherwise,a,new,link,standard,environment,will,be,created,and,used,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,see,annotated,bean,definition,reader,bean,definition,registry,environment,see,set,environment,environment;public,annotated,bean,definition,reader,bean,definition,registry,registry,this,registry,get,or,create,environment,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry);1372363092;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry._If the registry is {@link EnvironmentCapable}, e.g. is an {@code ApplicationContext},_the {@link Environment} will be inherited, otherwise a new_{@link StandardEnvironment} will be created and used._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@see #AnnotatedBeanDefinitionReader(BeanDefinitionRegistry, Environment)_@see #setEnvironment(Environment);public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry) {_		this(registry, getOrCreateEnvironment(registry))__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,if,the,registry,is,link,environment,capable,e,g,is,an,code,application,context,the,link,environment,will,be,inherited,otherwise,a,new,link,standard,environment,will,be,created,and,used,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,see,annotated,bean,definition,reader,bean,definition,registry,environment,see,set,environment,environment;public,annotated,bean,definition,reader,bean,definition,registry,registry,this,registry,get,or,create,environment,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry);1377562322;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry._If the registry is {@link EnvironmentCapable}, e.g. is an {@code ApplicationContext},_the {@link Environment} will be inherited, otherwise a new_{@link StandardEnvironment} will be created and used._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@see #AnnotatedBeanDefinitionReader(BeanDefinitionRegistry, Environment)_@see #setEnvironment(Environment);public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry) {_		this(registry, getOrCreateEnvironment(registry))__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,if,the,registry,is,link,environment,capable,e,g,is,an,code,application,context,the,link,environment,will,be,inherited,otherwise,a,new,link,standard,environment,will,be,created,and,used,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,see,annotated,bean,definition,reader,bean,definition,registry,environment,see,set,environment,environment;public,annotated,bean,definition,reader,bean,definition,registry,registry,this,registry,get,or,create,environment,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry);1377625191;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry._If the registry is {@link EnvironmentCapable}, e.g. is an {@code ApplicationContext},_the {@link Environment} will be inherited, otherwise a new_{@link StandardEnvironment} will be created and used._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@see #AnnotatedBeanDefinitionReader(BeanDefinitionRegistry, Environment)_@see #setEnvironment(Environment);public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry) {_		this(registry, getOrCreateEnvironment(registry))__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,if,the,registry,is,link,environment,capable,e,g,is,an,code,application,context,the,link,environment,will,be,inherited,otherwise,a,new,link,standard,environment,will,be,created,and,used,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,see,annotated,bean,definition,reader,bean,definition,registry,environment,see,set,environment,environment;public,annotated,bean,definition,reader,bean,definition,registry,registry,this,registry,get,or,create,environment,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry);1377640854;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry._If the registry is {@link EnvironmentCapable}, e.g. is an {@code ApplicationContext},_the {@link Environment} will be inherited, otherwise a new_{@link StandardEnvironment} will be created and used._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@see #AnnotatedBeanDefinitionReader(BeanDefinitionRegistry, Environment)_@see #setEnvironment(Environment);public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry) {_		this(registry, getOrCreateEnvironment(registry))__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,if,the,registry,is,link,environment,capable,e,g,is,an,code,application,context,the,link,environment,will,be,inherited,otherwise,a,new,link,standard,environment,will,be,created,and,used,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,see,annotated,bean,definition,reader,bean,definition,registry,environment,see,set,environment,environment;public,annotated,bean,definition,reader,bean,definition,registry,registry,this,registry,get,or,create,environment,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry);1385412762;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry._If the registry is {@link EnvironmentCapable}, e.g. is an {@code ApplicationContext},_the {@link Environment} will be inherited, otherwise a new_{@link StandardEnvironment} will be created and used._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@see #AnnotatedBeanDefinitionReader(BeanDefinitionRegistry, Environment)_@see #setEnvironment(Environment);public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry) {_		this(registry, getOrCreateEnvironment(registry))__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,if,the,registry,is,link,environment,capable,e,g,is,an,code,application,context,the,link,environment,will,be,inherited,otherwise,a,new,link,standard,environment,will,be,created,and,used,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,see,annotated,bean,definition,reader,bean,definition,registry,environment,see,set,environment,environment;public,annotated,bean,definition,reader,bean,definition,registry,registry,this,registry,get,or,create,environment,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry);1386197885;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry._If the registry is {@link EnvironmentCapable}, e.g. is an {@code ApplicationContext},_the {@link Environment} will be inherited, otherwise a new_{@link StandardEnvironment} will be created and used._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@see #AnnotatedBeanDefinitionReader(BeanDefinitionRegistry, Environment)_@see #setEnvironment(Environment);public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry) {_		this(registry, getOrCreateEnvironment(registry))__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,if,the,registry,is,link,environment,capable,e,g,is,an,code,application,context,the,link,environment,will,be,inherited,otherwise,a,new,link,standard,environment,will,be,created,and,used,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,see,annotated,bean,definition,reader,bean,definition,registry,environment,see,set,environment,environment;public,annotated,bean,definition,reader,bean,definition,registry,registry,this,registry,get,or,create,environment,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry);1432125256;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry._If the registry is {@link EnvironmentCapable}, e.g. is an {@code ApplicationContext},_the {@link Environment} will be inherited, otherwise a new_{@link StandardEnvironment} will be created and used._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@see #AnnotatedBeanDefinitionReader(BeanDefinitionRegistry, Environment)_@see #setEnvironment(Environment);public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry) {_		this(registry, getOrCreateEnvironment(registry))__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,if,the,registry,is,link,environment,capable,e,g,is,an,code,application,context,the,link,environment,will,be,inherited,otherwise,a,new,link,standard,environment,will,be,created,and,used,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,see,annotated,bean,definition,reader,bean,definition,registry,environment,see,set,environment,environment;public,annotated,bean,definition,reader,bean,definition,registry,registry,this,registry,get,or,create,environment,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry);1467667241;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry._If the registry is {@link EnvironmentCapable}, e.g. is an {@code ApplicationContext},_the {@link Environment} will be inherited, otherwise a new_{@link StandardEnvironment} will be created and used._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@see #AnnotatedBeanDefinitionReader(BeanDefinitionRegistry, Environment)_@see #setEnvironment(Environment);public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry) {_		this(registry, getOrCreateEnvironment(registry))__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,if,the,registry,is,link,environment,capable,e,g,is,an,code,application,context,the,link,environment,will,be,inherited,otherwise,a,new,link,standard,environment,will,be,created,and,used,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,see,annotated,bean,definition,reader,bean,definition,registry,environment,see,set,environment,environment;public,annotated,bean,definition,reader,bean,definition,registry,registry,this,registry,get,or,create,environment,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry);1482260264;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry._If the registry is {@link EnvironmentCapable}, e.g. is an {@code ApplicationContext},_the {@link Environment} will be inherited, otherwise a new_{@link StandardEnvironment} will be created and used._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@see #AnnotatedBeanDefinitionReader(BeanDefinitionRegistry, Environment)_@see #setEnvironment(Environment);public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry) {_		this(registry, getOrCreateEnvironment(registry))__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,if,the,registry,is,link,environment,capable,e,g,is,an,code,application,context,the,link,environment,will,be,inherited,otherwise,a,new,link,standard,environment,will,be,created,and,used,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,see,annotated,bean,definition,reader,bean,definition,registry,environment,see,set,environment,environment;public,annotated,bean,definition,reader,bean,definition,registry,registry,this,registry,get,or,create,environment,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry);1482492407;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry._If the registry is {@link EnvironmentCapable}, e.g. is an {@code ApplicationContext},_the {@link Environment} will be inherited, otherwise a new_{@link StandardEnvironment} will be created and used._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@see #AnnotatedBeanDefinitionReader(BeanDefinitionRegistry, Environment)_@see #setEnvironment(Environment);public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry) {_		this(registry, getOrCreateEnvironment(registry))__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,if,the,registry,is,link,environment,capable,e,g,is,an,code,application,context,the,link,environment,will,be,inherited,otherwise,a,new,link,standard,environment,will,be,created,and,used,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,see,annotated,bean,definition,reader,bean,definition,registry,environment,see,set,environment,environment;public,annotated,bean,definition,reader,bean,definition,registry,registry,this,registry,get,or,create,environment,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry);1495868221;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry._If the registry is {@link EnvironmentCapable}, e.g. is an {@code ApplicationContext},_the {@link Environment} will be inherited, otherwise a new_{@link StandardEnvironment} will be created and used._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@see #AnnotatedBeanDefinitionReader(BeanDefinitionRegistry, Environment)_@see #setEnvironment(Environment);public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry) {_		this(registry, getOrCreateEnvironment(registry))__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,if,the,registry,is,link,environment,capable,e,g,is,an,code,application,context,the,link,environment,will,be,inherited,otherwise,a,new,link,standard,environment,will,be,created,and,used,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,see,annotated,bean,definition,reader,bean,definition,registry,environment,see,set,environment,environment;public,annotated,bean,definition,reader,bean,definition,registry,registry,this,registry,get,or,create,environment,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry);1496259743;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry._If the registry is {@link EnvironmentCapable}, e.g. is an {@code ApplicationContext},_the {@link Environment} will be inherited, otherwise a new_{@link StandardEnvironment} will be created and used._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@see #AnnotatedBeanDefinitionReader(BeanDefinitionRegistry, Environment)_@see #setEnvironment(Environment);public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry) {_		this(registry, getOrCreateEnvironment(registry))__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,if,the,registry,is,link,environment,capable,e,g,is,an,code,application,context,the,link,environment,will,be,inherited,otherwise,a,new,link,standard,environment,will,be,created,and,used,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,see,annotated,bean,definition,reader,bean,definition,registry,environment,see,set,environment,environment;public,annotated,bean,definition,reader,bean,definition,registry,registry,this,registry,get,or,create,environment,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry);1496263893;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry._If the registry is {@link EnvironmentCapable}, e.g. is an {@code ApplicationContext},_the {@link Environment} will be inherited, otherwise a new_{@link StandardEnvironment} will be created and used._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@see #AnnotatedBeanDefinitionReader(BeanDefinitionRegistry, Environment)_@see #setEnvironment(Environment);public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry) {_		this(registry, getOrCreateEnvironment(registry))__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,if,the,registry,is,link,environment,capable,e,g,is,an,code,application,context,the,link,environment,will,be,inherited,otherwise,a,new,link,standard,environment,will,be,created,and,used,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,see,annotated,bean,definition,reader,bean,definition,registry,environment,see,set,environment,environment;public,annotated,bean,definition,reader,bean,definition,registry,registry,this,registry,get,or,create,environment,registry
AnnotatedBeanDefinitionReader -> public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry);1496837955;Create a new {@code AnnotatedBeanDefinitionReader} for the given registry._If the registry is {@link EnvironmentCapable}, e.g. is an {@code ApplicationContext},_the {@link Environment} will be inherited, otherwise a new_{@link StandardEnvironment} will be created and used._@param registry the {@code BeanFactory} to load bean definitions into,_in the form of a {@code BeanDefinitionRegistry}_@see #AnnotatedBeanDefinitionReader(BeanDefinitionRegistry, Environment)_@see #setEnvironment(Environment);public AnnotatedBeanDefinitionReader(BeanDefinitionRegistry registry) {_		this(registry, getOrCreateEnvironment(registry))__	};create,a,new,code,annotated,bean,definition,reader,for,the,given,registry,if,the,registry,is,link,environment,capable,e,g,is,an,code,application,context,the,link,environment,will,be,inherited,otherwise,a,new,link,standard,environment,will,be,created,and,used,param,registry,the,code,bean,factory,to,load,bean,definitions,into,in,the,form,of,a,code,bean,definition,registry,see,annotated,bean,definition,reader,bean,definition,registry,environment,see,set,environment,environment;public,annotated,bean,definition,reader,bean,definition,registry,registry,this,registry,get,or,create,environment,registry
AnnotatedBeanDefinitionReader -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1328020251;Set the BeanNameGenerator to use for detected bean classes._<p>The default is a {@link AnnotationBeanNameGenerator}.;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = (beanNameGenerator != null ? beanNameGenerator : new AnnotationBeanNameGenerator())__	};set,the,bean,name,generator,to,use,for,detected,bean,classes,p,the,default,is,a,link,annotation,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator,null,bean,name,generator,new,annotation,bean,name,generator
AnnotatedBeanDefinitionReader -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1329142650;Set the BeanNameGenerator to use for detected bean classes._<p>The default is a {@link AnnotationBeanNameGenerator}.;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = (beanNameGenerator != null ? beanNameGenerator : new AnnotationBeanNameGenerator())__	};set,the,bean,name,generator,to,use,for,detected,bean,classes,p,the,default,is,a,link,annotation,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator,null,bean,name,generator,new,annotation,bean,name,generator
AnnotatedBeanDefinitionReader -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1347311780;Set the BeanNameGenerator to use for detected bean classes._<p>The default is a {@link AnnotationBeanNameGenerator}.;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = (beanNameGenerator != null ? beanNameGenerator : new AnnotationBeanNameGenerator())__	};set,the,bean,name,generator,to,use,for,detected,bean,classes,p,the,default,is,a,link,annotation,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator,null,bean,name,generator,new,annotation,bean,name,generator
AnnotatedBeanDefinitionReader -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1368068203;Set the BeanNameGenerator to use for detected bean classes._<p>The default is a {@link AnnotationBeanNameGenerator}.;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = (beanNameGenerator != null ? beanNameGenerator : new AnnotationBeanNameGenerator())__	};set,the,bean,name,generator,to,use,for,detected,bean,classes,p,the,default,is,a,link,annotation,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator,null,bean,name,generator,new,annotation,bean,name,generator
AnnotatedBeanDefinitionReader -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1372363092;Set the BeanNameGenerator to use for detected bean classes._<p>The default is a {@link AnnotationBeanNameGenerator}.;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = (beanNameGenerator != null ? beanNameGenerator : new AnnotationBeanNameGenerator())__	};set,the,bean,name,generator,to,use,for,detected,bean,classes,p,the,default,is,a,link,annotation,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator,null,bean,name,generator,new,annotation,bean,name,generator
AnnotatedBeanDefinitionReader -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1377562322;Set the BeanNameGenerator to use for detected bean classes._<p>The default is a {@link AnnotationBeanNameGenerator}.;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = (beanNameGenerator != null ? beanNameGenerator : new AnnotationBeanNameGenerator())__	};set,the,bean,name,generator,to,use,for,detected,bean,classes,p,the,default,is,a,link,annotation,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator,null,bean,name,generator,new,annotation,bean,name,generator
AnnotatedBeanDefinitionReader -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1377625191;Set the BeanNameGenerator to use for detected bean classes._<p>The default is a {@link AnnotationBeanNameGenerator}.;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = (beanNameGenerator != null ? beanNameGenerator : new AnnotationBeanNameGenerator())__	};set,the,bean,name,generator,to,use,for,detected,bean,classes,p,the,default,is,a,link,annotation,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator,null,bean,name,generator,new,annotation,bean,name,generator
AnnotatedBeanDefinitionReader -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1377640854;Set the BeanNameGenerator to use for detected bean classes._<p>The default is a {@link AnnotationBeanNameGenerator}.;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = (beanNameGenerator != null ? beanNameGenerator : new AnnotationBeanNameGenerator())__	};set,the,bean,name,generator,to,use,for,detected,bean,classes,p,the,default,is,a,link,annotation,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator,null,bean,name,generator,new,annotation,bean,name,generator
AnnotatedBeanDefinitionReader -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1385412762;Set the BeanNameGenerator to use for detected bean classes._<p>The default is a {@link AnnotationBeanNameGenerator}.;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = (beanNameGenerator != null ? beanNameGenerator : new AnnotationBeanNameGenerator())__	};set,the,bean,name,generator,to,use,for,detected,bean,classes,p,the,default,is,a,link,annotation,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator,null,bean,name,generator,new,annotation,bean,name,generator
AnnotatedBeanDefinitionReader -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1386197885;Set the BeanNameGenerator to use for detected bean classes._<p>The default is a {@link AnnotationBeanNameGenerator}.;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = (beanNameGenerator != null ? beanNameGenerator : new AnnotationBeanNameGenerator())__	};set,the,bean,name,generator,to,use,for,detected,bean,classes,p,the,default,is,a,link,annotation,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator,null,bean,name,generator,new,annotation,bean,name,generator
AnnotatedBeanDefinitionReader -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1432125256;Set the BeanNameGenerator to use for detected bean classes._<p>The default is a {@link AnnotationBeanNameGenerator}.;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = (beanNameGenerator != null ? beanNameGenerator : new AnnotationBeanNameGenerator())__	};set,the,bean,name,generator,to,use,for,detected,bean,classes,p,the,default,is,a,link,annotation,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator,null,bean,name,generator,new,annotation,bean,name,generator
AnnotatedBeanDefinitionReader -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1467667241;Set the BeanNameGenerator to use for detected bean classes._<p>The default is a {@link AnnotationBeanNameGenerator}.;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = (beanNameGenerator != null ? beanNameGenerator : new AnnotationBeanNameGenerator())__	};set,the,bean,name,generator,to,use,for,detected,bean,classes,p,the,default,is,a,link,annotation,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator,null,bean,name,generator,new,annotation,bean,name,generator
AnnotatedBeanDefinitionReader -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1482260264;Set the BeanNameGenerator to use for detected bean classes._<p>The default is a {@link AnnotationBeanNameGenerator}.;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = (beanNameGenerator != null ? beanNameGenerator : new AnnotationBeanNameGenerator())__	};set,the,bean,name,generator,to,use,for,detected,bean,classes,p,the,default,is,a,link,annotation,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator,null,bean,name,generator,new,annotation,bean,name,generator
AnnotatedBeanDefinitionReader -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1482492407;Set the BeanNameGenerator to use for detected bean classes._<p>The default is a {@link AnnotationBeanNameGenerator}.;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = (beanNameGenerator != null ? beanNameGenerator : new AnnotationBeanNameGenerator())__	};set,the,bean,name,generator,to,use,for,detected,bean,classes,p,the,default,is,a,link,annotation,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator,null,bean,name,generator,new,annotation,bean,name,generator
AnnotatedBeanDefinitionReader -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1495868221;Set the BeanNameGenerator to use for detected bean classes._<p>The default is a {@link AnnotationBeanNameGenerator}.;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = (beanNameGenerator != null ? beanNameGenerator : new AnnotationBeanNameGenerator())__	};set,the,bean,name,generator,to,use,for,detected,bean,classes,p,the,default,is,a,link,annotation,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator,null,bean,name,generator,new,annotation,bean,name,generator
AnnotatedBeanDefinitionReader -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1496259743;Set the BeanNameGenerator to use for detected bean classes._<p>The default is a {@link AnnotationBeanNameGenerator}.;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = (beanNameGenerator != null ? beanNameGenerator : new AnnotationBeanNameGenerator())__	};set,the,bean,name,generator,to,use,for,detected,bean,classes,p,the,default,is,a,link,annotation,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator,null,bean,name,generator,new,annotation,bean,name,generator
AnnotatedBeanDefinitionReader -> public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator);1496263893;Set the BeanNameGenerator to use for detected bean classes._<p>The default is a {@link AnnotationBeanNameGenerator}.;public void setBeanNameGenerator(BeanNameGenerator beanNameGenerator) {_		this.beanNameGenerator = (beanNameGenerator != null ? beanNameGenerator : new AnnotationBeanNameGenerator())__	};set,the,bean,name,generator,to,use,for,detected,bean,classes,p,the,default,is,a,link,annotation,bean,name,generator;public,void,set,bean,name,generator,bean,name,generator,bean,name,generator,this,bean,name,generator,bean,name,generator,null,bean,name,generator,new,annotation,bean,name,generator
AnnotatedBeanDefinitionReader -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1328020251;Set the ScopeMetadataResolver to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.scopeMetadataResolver = (scopeMetadataResolver != null ? scopeMetadataResolver_				: new AnnotationScopeMetadataResolver())__	};set,the,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,scope,metadata,resolver,scope,metadata,resolver,null,scope,metadata,resolver,new,annotation,scope,metadata,resolver
AnnotatedBeanDefinitionReader -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1329142650;Set the ScopeMetadataResolver to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.scopeMetadataResolver = (scopeMetadataResolver != null ? scopeMetadataResolver_				: new AnnotationScopeMetadataResolver())__	};set,the,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,scope,metadata,resolver,scope,metadata,resolver,null,scope,metadata,resolver,new,annotation,scope,metadata,resolver
AnnotatedBeanDefinitionReader -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1347311780;Set the ScopeMetadataResolver to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.scopeMetadataResolver =_				(scopeMetadataResolver != null ? scopeMetadataResolver : new AnnotationScopeMetadataResolver())__	};set,the,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,scope,metadata,resolver,scope,metadata,resolver,null,scope,metadata,resolver,new,annotation,scope,metadata,resolver
AnnotatedBeanDefinitionReader -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1368068203;Set the ScopeMetadataResolver to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.scopeMetadataResolver =_				(scopeMetadataResolver != null ? scopeMetadataResolver : new AnnotationScopeMetadataResolver())__	};set,the,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,scope,metadata,resolver,scope,metadata,resolver,null,scope,metadata,resolver,new,annotation,scope,metadata,resolver
AnnotatedBeanDefinitionReader -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1372363092;Set the ScopeMetadataResolver to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.scopeMetadataResolver =_				(scopeMetadataResolver != null ? scopeMetadataResolver : new AnnotationScopeMetadataResolver())__	};set,the,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,scope,metadata,resolver,scope,metadata,resolver,null,scope,metadata,resolver,new,annotation,scope,metadata,resolver
AnnotatedBeanDefinitionReader -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1377562322;Set the ScopeMetadataResolver to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.scopeMetadataResolver =_				(scopeMetadataResolver != null ? scopeMetadataResolver : new AnnotationScopeMetadataResolver())__	};set,the,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,scope,metadata,resolver,scope,metadata,resolver,null,scope,metadata,resolver,new,annotation,scope,metadata,resolver
AnnotatedBeanDefinitionReader -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1377625191;Set the ScopeMetadataResolver to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.scopeMetadataResolver =_				(scopeMetadataResolver != null ? scopeMetadataResolver : new AnnotationScopeMetadataResolver())__	};set,the,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,scope,metadata,resolver,scope,metadata,resolver,null,scope,metadata,resolver,new,annotation,scope,metadata,resolver
AnnotatedBeanDefinitionReader -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1377640854;Set the ScopeMetadataResolver to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.scopeMetadataResolver =_				(scopeMetadataResolver != null ? scopeMetadataResolver : new AnnotationScopeMetadataResolver())__	};set,the,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,scope,metadata,resolver,scope,metadata,resolver,null,scope,metadata,resolver,new,annotation,scope,metadata,resolver
AnnotatedBeanDefinitionReader -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1385412762;Set the ScopeMetadataResolver to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.scopeMetadataResolver =_				(scopeMetadataResolver != null ? scopeMetadataResolver : new AnnotationScopeMetadataResolver())__	};set,the,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,scope,metadata,resolver,scope,metadata,resolver,null,scope,metadata,resolver,new,annotation,scope,metadata,resolver
AnnotatedBeanDefinitionReader -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1386197885;Set the ScopeMetadataResolver to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.scopeMetadataResolver =_				(scopeMetadataResolver != null ? scopeMetadataResolver : new AnnotationScopeMetadataResolver())__	};set,the,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,scope,metadata,resolver,scope,metadata,resolver,null,scope,metadata,resolver,new,annotation,scope,metadata,resolver
AnnotatedBeanDefinitionReader -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1432125256;Set the ScopeMetadataResolver to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.scopeMetadataResolver =_				(scopeMetadataResolver != null ? scopeMetadataResolver : new AnnotationScopeMetadataResolver())__	};set,the,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,scope,metadata,resolver,scope,metadata,resolver,null,scope,metadata,resolver,new,annotation,scope,metadata,resolver
AnnotatedBeanDefinitionReader -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1467667241;Set the ScopeMetadataResolver to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.scopeMetadataResolver =_				(scopeMetadataResolver != null ? scopeMetadataResolver : new AnnotationScopeMetadataResolver())__	};set,the,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,scope,metadata,resolver,scope,metadata,resolver,null,scope,metadata,resolver,new,annotation,scope,metadata,resolver
AnnotatedBeanDefinitionReader -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1482260264;Set the ScopeMetadataResolver to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.scopeMetadataResolver =_				(scopeMetadataResolver != null ? scopeMetadataResolver : new AnnotationScopeMetadataResolver())__	};set,the,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,scope,metadata,resolver,scope,metadata,resolver,null,scope,metadata,resolver,new,annotation,scope,metadata,resolver
AnnotatedBeanDefinitionReader -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1482492407;Set the ScopeMetadataResolver to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.scopeMetadataResolver =_				(scopeMetadataResolver != null ? scopeMetadataResolver : new AnnotationScopeMetadataResolver())__	};set,the,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,scope,metadata,resolver,scope,metadata,resolver,null,scope,metadata,resolver,new,annotation,scope,metadata,resolver
AnnotatedBeanDefinitionReader -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1495868221;Set the ScopeMetadataResolver to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.scopeMetadataResolver =_				(scopeMetadataResolver != null ? scopeMetadataResolver : new AnnotationScopeMetadataResolver())__	};set,the,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,scope,metadata,resolver,scope,metadata,resolver,null,scope,metadata,resolver,new,annotation,scope,metadata,resolver
AnnotatedBeanDefinitionReader -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1496259743;Set the ScopeMetadataResolver to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.scopeMetadataResolver =_				(scopeMetadataResolver != null ? scopeMetadataResolver : new AnnotationScopeMetadataResolver())__	};set,the,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,scope,metadata,resolver,scope,metadata,resolver,null,scope,metadata,resolver,new,annotation,scope,metadata,resolver
AnnotatedBeanDefinitionReader -> public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver);1496263893;Set the ScopeMetadataResolver to use for detected bean classes._<p>The default is an {@link AnnotationScopeMetadataResolver}.;public void setScopeMetadataResolver(ScopeMetadataResolver scopeMetadataResolver) {_		this.scopeMetadataResolver =_				(scopeMetadataResolver != null ? scopeMetadataResolver : new AnnotationScopeMetadataResolver())__	};set,the,scope,metadata,resolver,to,use,for,detected,bean,classes,p,the,default,is,an,link,annotation,scope,metadata,resolver;public,void,set,scope,metadata,resolver,scope,metadata,resolver,scope,metadata,resolver,this,scope,metadata,resolver,scope,metadata,resolver,null,scope,metadata,resolver,new,annotation,scope,metadata,resolver
AnnotatedBeanDefinitionReader -> public void registerBean(Class<?> annotatedClass);1482492407;Register a bean from the given bean class, deriving its metadata from_class-declared annotations._@param annotatedClass the class of the bean;public void registerBean(Class<?> annotatedClass) {_		doRegisterBean(annotatedClass, null, null, null)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,param,annotated,class,the,class,of,the,bean;public,void,register,bean,class,annotated,class,do,register,bean,annotated,class,null,null,null
AnnotatedBeanDefinitionReader -> public void registerBean(Class<?> annotatedClass);1495868221;Register a bean from the given bean class, deriving its metadata from_class-declared annotations._@param annotatedClass the class of the bean;public void registerBean(Class<?> annotatedClass) {_		doRegisterBean(annotatedClass, null, null, null)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,param,annotated,class,the,class,of,the,bean;public,void,register,bean,class,annotated,class,do,register,bean,annotated,class,null,null,null
AnnotatedBeanDefinitionReader -> public void registerBean(Class<?> annotatedClass);1496259743;Register a bean from the given bean class, deriving its metadata from_class-declared annotations._@param annotatedClass the class of the bean;public void registerBean(Class<?> annotatedClass) {_		doRegisterBean(annotatedClass, null, null, null)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,param,annotated,class,the,class,of,the,bean;public,void,register,bean,class,annotated,class,do,register,bean,annotated,class,null,null,null
AnnotatedBeanDefinitionReader -> public void registerBean(Class<?> annotatedClass);1496263893;Register a bean from the given bean class, deriving its metadata from_class-declared annotations._@param annotatedClass the class of the bean;public void registerBean(Class<?> annotatedClass) {_		doRegisterBean(annotatedClass, null, null, null)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,param,annotated,class,the,class,of,the,bean;public,void,register,bean,class,annotated,class,do,register,bean,annotated,class,null,null,null
AnnotatedBeanDefinitionReader -> public void registerBean(Class<?> annotatedClass);1496837955;Register a bean from the given bean class, deriving its metadata from_class-declared annotations._@param annotatedClass the class of the bean;public void registerBean(Class<?> annotatedClass) {_		doRegisterBean(annotatedClass, null, null, null)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,param,annotated,class,the,class,of,the,bean;public,void,register,bean,class,annotated,class,do,register,bean,annotated,class,null,null,null
AnnotatedBeanDefinitionReader -> public <T> void registerBean(Class<T> annotatedClass, @Nullable Supplier<T> instanceSupplier);1495868221;Register a bean from the given bean class, deriving its metadata from_class-declared annotations, using the given supplier for obtaining a new_instance (possibly declared as a lambda expression or method reference)._@param annotatedClass the class of the bean_@param instanceSupplier a callback for creating an instance of the bean_(may be {@code null})_@since 5.0;public <T> void registerBean(Class<T> annotatedClass, @Nullable Supplier<T> instanceSupplier) {_		doRegisterBean(annotatedClass, instanceSupplier, null, null)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,using,the,given,supplier,for,obtaining,a,new,instance,possibly,declared,as,a,lambda,expression,or,method,reference,param,annotated,class,the,class,of,the,bean,param,instance,supplier,a,callback,for,creating,an,instance,of,the,bean,may,be,code,null,since,5,0;public,t,void,register,bean,class,t,annotated,class,nullable,supplier,t,instance,supplier,do,register,bean,annotated,class,instance,supplier,null,null
AnnotatedBeanDefinitionReader -> public <T> void registerBean(Class<T> annotatedClass, @Nullable Supplier<T> instanceSupplier);1496259743;Register a bean from the given bean class, deriving its metadata from_class-declared annotations, using the given supplier for obtaining a new_instance (possibly declared as a lambda expression or method reference)._@param annotatedClass the class of the bean_@param instanceSupplier a callback for creating an instance of the bean_(may be {@code null})_@since 5.0;public <T> void registerBean(Class<T> annotatedClass, @Nullable Supplier<T> instanceSupplier) {_		doRegisterBean(annotatedClass, instanceSupplier, null, null)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,using,the,given,supplier,for,obtaining,a,new,instance,possibly,declared,as,a,lambda,expression,or,method,reference,param,annotated,class,the,class,of,the,bean,param,instance,supplier,a,callback,for,creating,an,instance,of,the,bean,may,be,code,null,since,5,0;public,t,void,register,bean,class,t,annotated,class,nullable,supplier,t,instance,supplier,do,register,bean,annotated,class,instance,supplier,null,null
AnnotatedBeanDefinitionReader -> public <T> void registerBean(Class<T> annotatedClass, @Nullable Supplier<T> instanceSupplier);1496263893;Register a bean from the given bean class, deriving its metadata from_class-declared annotations, using the given supplier for obtaining a new_instance (possibly declared as a lambda expression or method reference)._@param annotatedClass the class of the bean_@param instanceSupplier a callback for creating an instance of the bean_(may be {@code null})_@since 5.0;public <T> void registerBean(Class<T> annotatedClass, @Nullable Supplier<T> instanceSupplier) {_		doRegisterBean(annotatedClass, instanceSupplier, null, null)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,using,the,given,supplier,for,obtaining,a,new,instance,possibly,declared,as,a,lambda,expression,or,method,reference,param,annotated,class,the,class,of,the,bean,param,instance,supplier,a,callback,for,creating,an,instance,of,the,bean,may,be,code,null,since,5,0;public,t,void,register,bean,class,t,annotated,class,nullable,supplier,t,instance,supplier,do,register,bean,annotated,class,instance,supplier,null,null
AnnotatedBeanDefinitionReader -> public <T> void registerBean(Class<T> annotatedClass, @Nullable Supplier<T> instanceSupplier);1496837955;Register a bean from the given bean class, deriving its metadata from_class-declared annotations, using the given supplier for obtaining a new_instance (possibly declared as a lambda expression or method reference)._@param annotatedClass the class of the bean_@param instanceSupplier a callback for creating an instance of the bean_(may be {@code null})_@since 5.0;public <T> void registerBean(Class<T> annotatedClass, @Nullable Supplier<T> instanceSupplier) {_		doRegisterBean(annotatedClass, instanceSupplier, null, null)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,using,the,given,supplier,for,obtaining,a,new,instance,possibly,declared,as,a,lambda,expression,or,method,reference,param,annotated,class,the,class,of,the,bean,param,instance,supplier,a,callback,for,creating,an,instance,of,the,bean,may,be,code,null,since,5,0;public,t,void,register,bean,class,t,annotated,class,nullable,supplier,t,instance,supplier,do,register,bean,annotated,class,instance,supplier,null,null
AnnotatedBeanDefinitionReader -> public <T> void registerBean(Class<T> annotatedClass, String name, @Nullable Supplier<T> instanceSupplier);1495868221;Register a bean from the given bean class, deriving its metadata from_class-declared annotations, using the given supplier for obtaining a new_instance (possibly declared as a lambda expression or method reference)._@param annotatedClass the class of the bean_@param name an explicit name for the bean_@param instanceSupplier a callback for creating an instance of the bean_(may be {@code null})_@since 5.0;public <T> void registerBean(Class<T> annotatedClass, String name, @Nullable Supplier<T> instanceSupplier) {_		doRegisterBean(annotatedClass, instanceSupplier, name, null)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,using,the,given,supplier,for,obtaining,a,new,instance,possibly,declared,as,a,lambda,expression,or,method,reference,param,annotated,class,the,class,of,the,bean,param,name,an,explicit,name,for,the,bean,param,instance,supplier,a,callback,for,creating,an,instance,of,the,bean,may,be,code,null,since,5,0;public,t,void,register,bean,class,t,annotated,class,string,name,nullable,supplier,t,instance,supplier,do,register,bean,annotated,class,instance,supplier,name,null
AnnotatedBeanDefinitionReader -> public <T> void registerBean(Class<T> annotatedClass, String name, @Nullable Supplier<T> instanceSupplier);1496259743;Register a bean from the given bean class, deriving its metadata from_class-declared annotations, using the given supplier for obtaining a new_instance (possibly declared as a lambda expression or method reference)._@param annotatedClass the class of the bean_@param name an explicit name for the bean_@param instanceSupplier a callback for creating an instance of the bean_(may be {@code null})_@since 5.0;public <T> void registerBean(Class<T> annotatedClass, String name, @Nullable Supplier<T> instanceSupplier) {_		doRegisterBean(annotatedClass, instanceSupplier, name, null)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,using,the,given,supplier,for,obtaining,a,new,instance,possibly,declared,as,a,lambda,expression,or,method,reference,param,annotated,class,the,class,of,the,bean,param,name,an,explicit,name,for,the,bean,param,instance,supplier,a,callback,for,creating,an,instance,of,the,bean,may,be,code,null,since,5,0;public,t,void,register,bean,class,t,annotated,class,string,name,nullable,supplier,t,instance,supplier,do,register,bean,annotated,class,instance,supplier,name,null
AnnotatedBeanDefinitionReader -> public <T> void registerBean(Class<T> annotatedClass, String name, @Nullable Supplier<T> instanceSupplier);1496263893;Register a bean from the given bean class, deriving its metadata from_class-declared annotations, using the given supplier for obtaining a new_instance (possibly declared as a lambda expression or method reference)._@param annotatedClass the class of the bean_@param name an explicit name for the bean_@param instanceSupplier a callback for creating an instance of the bean_(may be {@code null})_@since 5.0;public <T> void registerBean(Class<T> annotatedClass, String name, @Nullable Supplier<T> instanceSupplier) {_		doRegisterBean(annotatedClass, instanceSupplier, name, null)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,using,the,given,supplier,for,obtaining,a,new,instance,possibly,declared,as,a,lambda,expression,or,method,reference,param,annotated,class,the,class,of,the,bean,param,name,an,explicit,name,for,the,bean,param,instance,supplier,a,callback,for,creating,an,instance,of,the,bean,may,be,code,null,since,5,0;public,t,void,register,bean,class,t,annotated,class,string,name,nullable,supplier,t,instance,supplier,do,register,bean,annotated,class,instance,supplier,name,null
AnnotatedBeanDefinitionReader -> public <T> void registerBean(Class<T> annotatedClass, String name, @Nullable Supplier<T> instanceSupplier);1496837955;Register a bean from the given bean class, deriving its metadata from_class-declared annotations, using the given supplier for obtaining a new_instance (possibly declared as a lambda expression or method reference)._@param annotatedClass the class of the bean_@param name an explicit name for the bean_@param instanceSupplier a callback for creating an instance of the bean_(may be {@code null})_@since 5.0;public <T> void registerBean(Class<T> annotatedClass, String name, @Nullable Supplier<T> instanceSupplier) {_		doRegisterBean(annotatedClass, instanceSupplier, name, null)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,using,the,given,supplier,for,obtaining,a,new,instance,possibly,declared,as,a,lambda,expression,or,method,reference,param,annotated,class,the,class,of,the,bean,param,name,an,explicit,name,for,the,bean,param,instance,supplier,a,callback,for,creating,an,instance,of,the,bean,may,be,code,null,since,5,0;public,t,void,register,bean,class,t,annotated,class,string,name,nullable,supplier,t,instance,supplier,do,register,bean,annotated,class,instance,supplier,name,null
AnnotatedBeanDefinitionReader -> public final BeanDefinitionRegistry getRegistry();1328020251;Return the BeanDefinitionRegistry that this scanner operates on.;public final BeanDefinitionRegistry getRegistry() {_		return this.registry__	};return,the,bean,definition,registry,that,this,scanner,operates,on;public,final,bean,definition,registry,get,registry,return,this,registry
AnnotatedBeanDefinitionReader -> public final BeanDefinitionRegistry getRegistry();1329142650;Return the BeanDefinitionRegistry that this scanner operates on.;public final BeanDefinitionRegistry getRegistry() {_		return this.registry__	};return,the,bean,definition,registry,that,this,scanner,operates,on;public,final,bean,definition,registry,get,registry,return,this,registry
AnnotatedBeanDefinitionReader -> public final BeanDefinitionRegistry getRegistry();1347311780;Return the BeanDefinitionRegistry that this scanner operates on.;public final BeanDefinitionRegistry getRegistry() {_		return this.registry__	};return,the,bean,definition,registry,that,this,scanner,operates,on;public,final,bean,definition,registry,get,registry,return,this,registry
AnnotatedBeanDefinitionReader -> public final BeanDefinitionRegistry getRegistry();1368068203;Return the BeanDefinitionRegistry that this scanner operates on.;public final BeanDefinitionRegistry getRegistry() {_		return this.registry__	};return,the,bean,definition,registry,that,this,scanner,operates,on;public,final,bean,definition,registry,get,registry,return,this,registry
AnnotatedBeanDefinitionReader -> public final BeanDefinitionRegistry getRegistry();1372363092;Return the BeanDefinitionRegistry that this scanner operates on.;public final BeanDefinitionRegistry getRegistry() {_		return this.registry__	};return,the,bean,definition,registry,that,this,scanner,operates,on;public,final,bean,definition,registry,get,registry,return,this,registry
AnnotatedBeanDefinitionReader -> public final BeanDefinitionRegistry getRegistry();1377562322;Return the BeanDefinitionRegistry that this scanner operates on.;public final BeanDefinitionRegistry getRegistry() {_		return this.registry__	};return,the,bean,definition,registry,that,this,scanner,operates,on;public,final,bean,definition,registry,get,registry,return,this,registry
AnnotatedBeanDefinitionReader -> public final BeanDefinitionRegistry getRegistry();1377625191;Return the BeanDefinitionRegistry that this scanner operates on.;public final BeanDefinitionRegistry getRegistry() {_		return this.registry__	};return,the,bean,definition,registry,that,this,scanner,operates,on;public,final,bean,definition,registry,get,registry,return,this,registry
AnnotatedBeanDefinitionReader -> public final BeanDefinitionRegistry getRegistry();1377640854;Return the BeanDefinitionRegistry that this scanner operates on.;public final BeanDefinitionRegistry getRegistry() {_		return this.registry__	};return,the,bean,definition,registry,that,this,scanner,operates,on;public,final,bean,definition,registry,get,registry,return,this,registry
AnnotatedBeanDefinitionReader -> public final BeanDefinitionRegistry getRegistry();1385412762;Return the BeanDefinitionRegistry that this scanner operates on.;public final BeanDefinitionRegistry getRegistry() {_		return this.registry__	};return,the,bean,definition,registry,that,this,scanner,operates,on;public,final,bean,definition,registry,get,registry,return,this,registry
AnnotatedBeanDefinitionReader -> public final BeanDefinitionRegistry getRegistry();1386197885;Return the BeanDefinitionRegistry that this scanner operates on.;public final BeanDefinitionRegistry getRegistry() {_		return this.registry__	};return,the,bean,definition,registry,that,this,scanner,operates,on;public,final,bean,definition,registry,get,registry,return,this,registry
AnnotatedBeanDefinitionReader -> public final BeanDefinitionRegistry getRegistry();1432125256;Return the BeanDefinitionRegistry that this scanner operates on.;public final BeanDefinitionRegistry getRegistry() {_		return this.registry__	};return,the,bean,definition,registry,that,this,scanner,operates,on;public,final,bean,definition,registry,get,registry,return,this,registry
AnnotatedBeanDefinitionReader -> public final BeanDefinitionRegistry getRegistry();1467667241;Return the BeanDefinitionRegistry that this scanner operates on.;public final BeanDefinitionRegistry getRegistry() {_		return this.registry__	};return,the,bean,definition,registry,that,this,scanner,operates,on;public,final,bean,definition,registry,get,registry,return,this,registry
AnnotatedBeanDefinitionReader -> public final BeanDefinitionRegistry getRegistry();1482260264;Return the BeanDefinitionRegistry that this scanner operates on.;public final BeanDefinitionRegistry getRegistry() {_		return this.registry__	};return,the,bean,definition,registry,that,this,scanner,operates,on;public,final,bean,definition,registry,get,registry,return,this,registry
AnnotatedBeanDefinitionReader -> public final BeanDefinitionRegistry getRegistry();1482492407;Return the BeanDefinitionRegistry that this scanner operates on.;public final BeanDefinitionRegistry getRegistry() {_		return this.registry__	};return,the,bean,definition,registry,that,this,scanner,operates,on;public,final,bean,definition,registry,get,registry,return,this,registry
AnnotatedBeanDefinitionReader -> public final BeanDefinitionRegistry getRegistry();1495868221;Return the BeanDefinitionRegistry that this scanner operates on.;public final BeanDefinitionRegistry getRegistry() {_		return this.registry__	};return,the,bean,definition,registry,that,this,scanner,operates,on;public,final,bean,definition,registry,get,registry,return,this,registry
AnnotatedBeanDefinitionReader -> public final BeanDefinitionRegistry getRegistry();1496259743;Return the BeanDefinitionRegistry that this scanner operates on.;public final BeanDefinitionRegistry getRegistry() {_		return this.registry__	};return,the,bean,definition,registry,that,this,scanner,operates,on;public,final,bean,definition,registry,get,registry,return,this,registry
AnnotatedBeanDefinitionReader -> public final BeanDefinitionRegistry getRegistry();1496263893;Return the BeanDefinitionRegistry that this scanner operates on.;public final BeanDefinitionRegistry getRegistry() {_		return this.registry__	};return,the,bean,definition,registry,that,this,scanner,operates,on;public,final,bean,definition,registry,get,registry,return,this,registry
AnnotatedBeanDefinitionReader -> public final BeanDefinitionRegistry getRegistry();1496837955;Return the BeanDefinitionRegistry that this scanner operates on.;public final BeanDefinitionRegistry getRegistry() {_		return this.registry__	};return,the,bean,definition,registry,that,this,scanner,operates,on;public,final,bean,definition,registry,get,registry,return,this,registry
AnnotatedBeanDefinitionReader -> <T> void doRegisterBean(Class<T> annotatedClass, @Nullable Supplier<T> instanceSupplier, @Nullable String name, 			@Nullable Class<? extends Annotation>[] qualifiers, BeanDefinitionCustomizer... definitionCustomizers);1496259743;Register a bean from the given bean class, deriving its metadata from_class-declared annotations._@param annotatedClass the class of the bean_@param instanceSupplier a callback for creating an instance of the bean_(may be {@code null})_@param name an explicit name for the bean_@param qualifiers specific qualifier annotations to consider, if any,_in addition to qualifiers at the bean class level_@param definitionCustomizers one or more callbacks for customizing the_factory's {@link BeanDefinition}, e.g. setting a lazy-init or primary flag_@since 5.0;<T> void doRegisterBean(Class<T> annotatedClass, @Nullable Supplier<T> instanceSupplier, @Nullable String name,_			@Nullable Class<? extends Annotation>[] qualifiers, BeanDefinitionCustomizer... definitionCustomizers) {__		AnnotatedGenericBeanDefinition abd = new AnnotatedGenericBeanDefinition(annotatedClass)__		if (this.conditionEvaluator.shouldSkip(abd.getMetadata())) {_			return__		}__		abd.setInstanceSupplier(instanceSupplier)__		ScopeMetadata scopeMetadata = this.scopeMetadataResolver.resolveScopeMetadata(abd)__		abd.setScope(scopeMetadata.getScopeName())__		String beanName = (name != null ? name : this.beanNameGenerator.generateBeanName(abd, this.registry))___		AnnotationConfigUtils.processCommonDefinitionAnnotations(abd)__		if (qualifiers != null) {_			for (Class<? extends Annotation> qualifier : qualifiers) {_				if (Primary.class == qualifier) {_					abd.setPrimary(true)__				}_				else if (Lazy.class == qualifier) {_					abd.setLazyInit(true)__				}_				else {_					abd.addQualifier(new AutowireCandidateQualifier(qualifier))__				}_			}_		}_		if (definitionCustomizers != null) {_			for (BeanDefinitionCustomizer customizer : definitionCustomizers) {_				customizer.customize(abd)__			}_		}__		BeanDefinitionHolder definitionHolder = new BeanDefinitionHolder(abd, beanName)__		definitionHolder = AnnotationConfigUtils.applyScopedProxyMode(scopeMetadata, definitionHolder, this.registry)__		BeanDefinitionReaderUtils.registerBeanDefinition(definitionHolder, this.registry)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,param,annotated,class,the,class,of,the,bean,param,instance,supplier,a,callback,for,creating,an,instance,of,the,bean,may,be,code,null,param,name,an,explicit,name,for,the,bean,param,qualifiers,specific,qualifier,annotations,to,consider,if,any,in,addition,to,qualifiers,at,the,bean,class,level,param,definition,customizers,one,or,more,callbacks,for,customizing,the,factory,s,link,bean,definition,e,g,setting,a,lazy,init,or,primary,flag,since,5,0;t,void,do,register,bean,class,t,annotated,class,nullable,supplier,t,instance,supplier,nullable,string,name,nullable,class,extends,annotation,qualifiers,bean,definition,customizer,definition,customizers,annotated,generic,bean,definition,abd,new,annotated,generic,bean,definition,annotated,class,if,this,condition,evaluator,should,skip,abd,get,metadata,return,abd,set,instance,supplier,instance,supplier,scope,metadata,scope,metadata,this,scope,metadata,resolver,resolve,scope,metadata,abd,abd,set,scope,scope,metadata,get,scope,name,string,bean,name,name,null,name,this,bean,name,generator,generate,bean,name,abd,this,registry,annotation,config,utils,process,common,definition,annotations,abd,if,qualifiers,null,for,class,extends,annotation,qualifier,qualifiers,if,primary,class,qualifier,abd,set,primary,true,else,if,lazy,class,qualifier,abd,set,lazy,init,true,else,abd,add,qualifier,new,autowire,candidate,qualifier,qualifier,if,definition,customizers,null,for,bean,definition,customizer,customizer,definition,customizers,customizer,customize,abd,bean,definition,holder,definition,holder,new,bean,definition,holder,abd,bean,name,definition,holder,annotation,config,utils,apply,scoped,proxy,mode,scope,metadata,definition,holder,this,registry,bean,definition,reader,utils,register,bean,definition,definition,holder,this,registry
AnnotatedBeanDefinitionReader -> <T> void doRegisterBean(Class<T> annotatedClass, @Nullable Supplier<T> instanceSupplier, @Nullable String name, 			@Nullable Class<? extends Annotation>[] qualifiers, BeanDefinitionCustomizer... definitionCustomizers);1496263893;Register a bean from the given bean class, deriving its metadata from_class-declared annotations._@param annotatedClass the class of the bean_@param instanceSupplier a callback for creating an instance of the bean_(may be {@code null})_@param name an explicit name for the bean_@param qualifiers specific qualifier annotations to consider, if any,_in addition to qualifiers at the bean class level_@param definitionCustomizers one or more callbacks for customizing the_factory's {@link BeanDefinition}, e.g. setting a lazy-init or primary flag_@since 5.0;<T> void doRegisterBean(Class<T> annotatedClass, @Nullable Supplier<T> instanceSupplier, @Nullable String name,_			@Nullable Class<? extends Annotation>[] qualifiers, BeanDefinitionCustomizer... definitionCustomizers) {__		AnnotatedGenericBeanDefinition abd = new AnnotatedGenericBeanDefinition(annotatedClass)__		if (this.conditionEvaluator.shouldSkip(abd.getMetadata())) {_			return__		}__		abd.setInstanceSupplier(instanceSupplier)__		ScopeMetadata scopeMetadata = this.scopeMetadataResolver.resolveScopeMetadata(abd)__		abd.setScope(scopeMetadata.getScopeName())__		String beanName = (name != null ? name : this.beanNameGenerator.generateBeanName(abd, this.registry))___		AnnotationConfigUtils.processCommonDefinitionAnnotations(abd)__		if (qualifiers != null) {_			for (Class<? extends Annotation> qualifier : qualifiers) {_				if (Primary.class == qualifier) {_					abd.setPrimary(true)__				}_				else if (Lazy.class == qualifier) {_					abd.setLazyInit(true)__				}_				else {_					abd.addQualifier(new AutowireCandidateQualifier(qualifier))__				}_			}_		}_		if (definitionCustomizers != null) {_			for (BeanDefinitionCustomizer customizer : definitionCustomizers) {_				customizer.customize(abd)__			}_		}__		BeanDefinitionHolder definitionHolder = new BeanDefinitionHolder(abd, beanName)__		definitionHolder = AnnotationConfigUtils.applyScopedProxyMode(scopeMetadata, definitionHolder, this.registry)__		BeanDefinitionReaderUtils.registerBeanDefinition(definitionHolder, this.registry)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,param,annotated,class,the,class,of,the,bean,param,instance,supplier,a,callback,for,creating,an,instance,of,the,bean,may,be,code,null,param,name,an,explicit,name,for,the,bean,param,qualifiers,specific,qualifier,annotations,to,consider,if,any,in,addition,to,qualifiers,at,the,bean,class,level,param,definition,customizers,one,or,more,callbacks,for,customizing,the,factory,s,link,bean,definition,e,g,setting,a,lazy,init,or,primary,flag,since,5,0;t,void,do,register,bean,class,t,annotated,class,nullable,supplier,t,instance,supplier,nullable,string,name,nullable,class,extends,annotation,qualifiers,bean,definition,customizer,definition,customizers,annotated,generic,bean,definition,abd,new,annotated,generic,bean,definition,annotated,class,if,this,condition,evaluator,should,skip,abd,get,metadata,return,abd,set,instance,supplier,instance,supplier,scope,metadata,scope,metadata,this,scope,metadata,resolver,resolve,scope,metadata,abd,abd,set,scope,scope,metadata,get,scope,name,string,bean,name,name,null,name,this,bean,name,generator,generate,bean,name,abd,this,registry,annotation,config,utils,process,common,definition,annotations,abd,if,qualifiers,null,for,class,extends,annotation,qualifier,qualifiers,if,primary,class,qualifier,abd,set,primary,true,else,if,lazy,class,qualifier,abd,set,lazy,init,true,else,abd,add,qualifier,new,autowire,candidate,qualifier,qualifier,if,definition,customizers,null,for,bean,definition,customizer,customizer,definition,customizers,customizer,customize,abd,bean,definition,holder,definition,holder,new,bean,definition,holder,abd,bean,name,definition,holder,annotation,config,utils,apply,scoped,proxy,mode,scope,metadata,definition,holder,this,registry,bean,definition,reader,utils,register,bean,definition,definition,holder,this,registry
AnnotatedBeanDefinitionReader -> <T> void doRegisterBean(Class<T> annotatedClass, @Nullable Supplier<T> instanceSupplier, @Nullable String name, 			@Nullable Class<? extends Annotation>[] qualifiers, BeanDefinitionCustomizer... definitionCustomizers);1496837955;Register a bean from the given bean class, deriving its metadata from_class-declared annotations._@param annotatedClass the class of the bean_@param instanceSupplier a callback for creating an instance of the bean_(may be {@code null})_@param name an explicit name for the bean_@param qualifiers specific qualifier annotations to consider, if any,_in addition to qualifiers at the bean class level_@param definitionCustomizers one or more callbacks for customizing the_factory's {@link BeanDefinition}, e.g. setting a lazy-init or primary flag_@since 5.0;<T> void doRegisterBean(Class<T> annotatedClass, @Nullable Supplier<T> instanceSupplier, @Nullable String name,_			@Nullable Class<? extends Annotation>[] qualifiers, BeanDefinitionCustomizer... definitionCustomizers) {__		AnnotatedGenericBeanDefinition abd = new AnnotatedGenericBeanDefinition(annotatedClass)__		if (this.conditionEvaluator.shouldSkip(abd.getMetadata())) {_			return__		}__		abd.setInstanceSupplier(instanceSupplier)__		ScopeMetadata scopeMetadata = this.scopeMetadataResolver.resolveScopeMetadata(abd)__		abd.setScope(scopeMetadata.getScopeName())__		String beanName = (name != null ? name : this.beanNameGenerator.generateBeanName(abd, this.registry))___		AnnotationConfigUtils.processCommonDefinitionAnnotations(abd)__		if (qualifiers != null) {_			for (Class<? extends Annotation> qualifier : qualifiers) {_				if (Primary.class == qualifier) {_					abd.setPrimary(true)__				}_				else if (Lazy.class == qualifier) {_					abd.setLazyInit(true)__				}_				else {_					abd.addQualifier(new AutowireCandidateQualifier(qualifier))__				}_			}_		}_		for (BeanDefinitionCustomizer customizer : definitionCustomizers) {_			customizer.customize(abd)__		}__		BeanDefinitionHolder definitionHolder = new BeanDefinitionHolder(abd, beanName)__		definitionHolder = AnnotationConfigUtils.applyScopedProxyMode(scopeMetadata, definitionHolder, this.registry)__		BeanDefinitionReaderUtils.registerBeanDefinition(definitionHolder, this.registry)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,param,annotated,class,the,class,of,the,bean,param,instance,supplier,a,callback,for,creating,an,instance,of,the,bean,may,be,code,null,param,name,an,explicit,name,for,the,bean,param,qualifiers,specific,qualifier,annotations,to,consider,if,any,in,addition,to,qualifiers,at,the,bean,class,level,param,definition,customizers,one,or,more,callbacks,for,customizing,the,factory,s,link,bean,definition,e,g,setting,a,lazy,init,or,primary,flag,since,5,0;t,void,do,register,bean,class,t,annotated,class,nullable,supplier,t,instance,supplier,nullable,string,name,nullable,class,extends,annotation,qualifiers,bean,definition,customizer,definition,customizers,annotated,generic,bean,definition,abd,new,annotated,generic,bean,definition,annotated,class,if,this,condition,evaluator,should,skip,abd,get,metadata,return,abd,set,instance,supplier,instance,supplier,scope,metadata,scope,metadata,this,scope,metadata,resolver,resolve,scope,metadata,abd,abd,set,scope,scope,metadata,get,scope,name,string,bean,name,name,null,name,this,bean,name,generator,generate,bean,name,abd,this,registry,annotation,config,utils,process,common,definition,annotations,abd,if,qualifiers,null,for,class,extends,annotation,qualifier,qualifiers,if,primary,class,qualifier,abd,set,primary,true,else,if,lazy,class,qualifier,abd,set,lazy,init,true,else,abd,add,qualifier,new,autowire,candidate,qualifier,qualifier,for,bean,definition,customizer,customizer,definition,customizers,customizer,customize,abd,bean,definition,holder,definition,holder,new,bean,definition,holder,abd,bean,name,definition,holder,annotation,config,utils,apply,scoped,proxy,mode,scope,metadata,definition,holder,this,registry,bean,definition,reader,utils,register,bean,definition,definition,holder,this,registry
AnnotatedBeanDefinitionReader -> @SuppressWarnings("unchecked") 	public void registerBean(Class<?> annotatedClass, Class<? extends Annotation>... qualifiers);1482260264;Register a bean from the given bean class, deriving its metadata from_class-declared annotations._@param annotatedClass the class of the bean_@param qualifiers specific qualifier annotations to consider,_in addition to qualifiers at the bean class level;@SuppressWarnings("unchecked")_	public void registerBean(Class<?> annotatedClass, Class<? extends Annotation>... qualifiers) {_		registerBean(annotatedClass, null, null, qualifiers)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,param,annotated,class,the,class,of,the,bean,param,qualifiers,specific,qualifier,annotations,to,consider,in,addition,to,qualifiers,at,the,bean,class,level;suppress,warnings,unchecked,public,void,register,bean,class,annotated,class,class,extends,annotation,qualifiers,register,bean,annotated,class,null,null,qualifiers
AnnotatedBeanDefinitionReader -> @SuppressWarnings("unchecked") 	public void registerBean(Class<?> annotatedClass, Class<? extends Annotation>... qualifiers);1482492407;Register a bean from the given bean class, deriving its metadata from_class-declared annotations._@param annotatedClass the class of the bean_@param qualifiers specific qualifier annotations to consider,_in addition to qualifiers at the bean class level;@SuppressWarnings("unchecked")_	public void registerBean(Class<?> annotatedClass, Class<? extends Annotation>... qualifiers) {_		doRegisterBean(annotatedClass, null, null, qualifiers)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,param,annotated,class,the,class,of,the,bean,param,qualifiers,specific,qualifier,annotations,to,consider,in,addition,to,qualifiers,at,the,bean,class,level;suppress,warnings,unchecked,public,void,register,bean,class,annotated,class,class,extends,annotation,qualifiers,do,register,bean,annotated,class,null,null,qualifiers
AnnotatedBeanDefinitionReader -> @SuppressWarnings("unchecked") 	public void registerBean(Class<?> annotatedClass, Class<? extends Annotation>... qualifiers);1495868221;Register a bean from the given bean class, deriving its metadata from_class-declared annotations._@param annotatedClass the class of the bean_@param qualifiers specific qualifier annotations to consider,_in addition to qualifiers at the bean class level;@SuppressWarnings("unchecked")_	public void registerBean(Class<?> annotatedClass, Class<? extends Annotation>... qualifiers) {_		doRegisterBean(annotatedClass, null, null, qualifiers)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,param,annotated,class,the,class,of,the,bean,param,qualifiers,specific,qualifier,annotations,to,consider,in,addition,to,qualifiers,at,the,bean,class,level;suppress,warnings,unchecked,public,void,register,bean,class,annotated,class,class,extends,annotation,qualifiers,do,register,bean,annotated,class,null,null,qualifiers
AnnotatedBeanDefinitionReader -> @SuppressWarnings("unchecked") 	public void registerBean(Class<?> annotatedClass, Class<? extends Annotation>... qualifiers);1496259743;Register a bean from the given bean class, deriving its metadata from_class-declared annotations._@param annotatedClass the class of the bean_@param qualifiers specific qualifier annotations to consider,_in addition to qualifiers at the bean class level;@SuppressWarnings("unchecked")_	public void registerBean(Class<?> annotatedClass, Class<? extends Annotation>... qualifiers) {_		doRegisterBean(annotatedClass, null, null, qualifiers)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,param,annotated,class,the,class,of,the,bean,param,qualifiers,specific,qualifier,annotations,to,consider,in,addition,to,qualifiers,at,the,bean,class,level;suppress,warnings,unchecked,public,void,register,bean,class,annotated,class,class,extends,annotation,qualifiers,do,register,bean,annotated,class,null,null,qualifiers
AnnotatedBeanDefinitionReader -> @SuppressWarnings("unchecked") 	public void registerBean(Class<?> annotatedClass, Class<? extends Annotation>... qualifiers);1496263893;Register a bean from the given bean class, deriving its metadata from_class-declared annotations._@param annotatedClass the class of the bean_@param qualifiers specific qualifier annotations to consider,_in addition to qualifiers at the bean class level;@SuppressWarnings("unchecked")_	public void registerBean(Class<?> annotatedClass, Class<? extends Annotation>... qualifiers) {_		doRegisterBean(annotatedClass, null, null, qualifiers)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,param,annotated,class,the,class,of,the,bean,param,qualifiers,specific,qualifier,annotations,to,consider,in,addition,to,qualifiers,at,the,bean,class,level;suppress,warnings,unchecked,public,void,register,bean,class,annotated,class,class,extends,annotation,qualifiers,do,register,bean,annotated,class,null,null,qualifiers
AnnotatedBeanDefinitionReader -> @SuppressWarnings("unchecked") 	public void registerBean(Class<?> annotatedClass, Class<? extends Annotation>... qualifiers);1496837955;Register a bean from the given bean class, deriving its metadata from_class-declared annotations._@param annotatedClass the class of the bean_@param qualifiers specific qualifier annotations to consider,_in addition to qualifiers at the bean class level;@SuppressWarnings("unchecked")_	public void registerBean(Class<?> annotatedClass, Class<? extends Annotation>... qualifiers) {_		doRegisterBean(annotatedClass, null, null, qualifiers)__	};register,a,bean,from,the,given,bean,class,deriving,its,metadata,from,class,declared,annotations,param,annotated,class,the,class,of,the,bean,param,qualifiers,specific,qualifier,annotations,to,consider,in,addition,to,qualifiers,at,the,bean,class,level;suppress,warnings,unchecked,public,void,register,bean,class,annotated,class,class,extends,annotation,qualifiers,do,register,bean,annotated,class,null,null,qualifiers
