commented;modifiers;parameterAmount;loc;comment;code
false;public;1;12;;@Override public void addTransformer(ClassFileTransformer transformer) {     try {         this.addTransformerMethod.invoke(this.classLoader, transformer).     } catch (InvocationTargetException ex) {         throw new IllegalStateException("GlassFish addTransformer method threw exception", ex.getCause()).     } catch (Throwable ex) {         throw new IllegalStateException("Could not invoke GlassFish addTransformer method", ex).     } }
false;public;0;4;;@Override public ClassLoader getInstrumentableClassLoader() {     return this.classLoader. }
false;public;0;12;;@Override public ClassLoader getThrowawayClassLoader() {     try {         return new OverridingClassLoader(this.classLoader, (ClassLoader) this.copyMethod.invoke(this.classLoader)).     } catch (InvocationTargetException ex) {         throw new IllegalStateException("GlassFish copy method threw exception", ex.getCause()).     } catch (Throwable ex) {         throw new IllegalStateException("Could not invoke GlassFish copy method", ex).     } }
