# id;timestamp;commentText;codeText;commentWords;codeWords
MBeanServerFactoryBean -> public void afterPropertiesSet() throws MBeanServerNotFoundException;1328020251;Creates the <code>MBeanServer</code> instance.;public void afterPropertiesSet() throws MBeanServerNotFoundException {_		_		if (this.locateExistingServerIfPossible || this.agentId != null) {_			try {_				this.server = locateMBeanServer(this.agentId)__			}_			catch (MBeanServerNotFoundException ex) {_				_				_				if (this.agentId != null) {_					throw ex__				}_				logger.info("No existing MBeanServer found - creating new one")__			}_		}__		_		if (this.server == null) {_			this.server = createMBeanServer(this.defaultDomain, this.registerWithFactory)__			this.newlyRegistered = this.registerWithFactory__		}_	};creates,the,code,mbean,server,code,instance;public,void,after,properties,set,throws,mbean,server,not,found,exception,if,this,locate,existing,server,if,possible,this,agent,id,null,try,this,server,locate,mbean,server,this,agent,id,catch,mbean,server,not,found,exception,ex,if,this,agent,id,null,throw,ex,logger,info,no,existing,mbean,server,found,creating,new,one,if,this,server,null,this,server,create,mbean,server,this,default,domain,this,register,with,factory,this,newly,registered,this,register,with,factory
MBeanServerFactoryBean -> public void afterPropertiesSet() throws MBeanServerNotFoundException;1357119239;Creates the {@code MBeanServer} instance.;public void afterPropertiesSet() throws MBeanServerNotFoundException {_		_		if (this.locateExistingServerIfPossible || this.agentId != null) {_			try {_				this.server = locateMBeanServer(this.agentId)__			}_			catch (MBeanServerNotFoundException ex) {_				_				_				if (this.agentId != null) {_					throw ex__				}_				logger.info("No existing MBeanServer found - creating new one")__			}_		}__		_		if (this.server == null) {_			this.server = createMBeanServer(this.defaultDomain, this.registerWithFactory)__			this.newlyRegistered = this.registerWithFactory__		}_	};creates,the,code,mbean,server,instance;public,void,after,properties,set,throws,mbean,server,not,found,exception,if,this,locate,existing,server,if,possible,this,agent,id,null,try,this,server,locate,mbean,server,this,agent,id,catch,mbean,server,not,found,exception,ex,if,this,agent,id,null,throw,ex,logger,info,no,existing,mbean,server,found,creating,new,one,if,this,server,null,this,server,create,mbean,server,this,default,domain,this,register,with,factory,this,newly,registered,this,register,with,factory
MBeanServerFactoryBean -> public void setAgentId(String agentId);1328020251;Set the agent id of the <code>MBeanServer</code> to locate._<p>Default is none. If specified, this will result in an_automatic attempt being made to locate the attendant MBeanServer,_and (importantly) if said MBeanServer cannot be located no_attempt will be made to create a new MBeanServer (and an_MBeanServerNotFoundException will be thrown at resolution time)._<p>Specifying the empty String indicates the platform MBeanServer._@see javax.management.MBeanServerFactory#findMBeanServer(String);public void setAgentId(String agentId) {_		this.agentId = agentId__	};set,the,agent,id,of,the,code,mbean,server,code,to,locate,p,default,is,none,if,specified,this,will,result,in,an,automatic,attempt,being,made,to,locate,the,attendant,mbean,server,and,importantly,if,said,mbean,server,cannot,be,located,no,attempt,will,be,made,to,create,a,new,mbean,server,and,an,mbean,server,not,found,exception,will,be,thrown,at,resolution,time,p,specifying,the,empty,string,indicates,the,platform,mbean,server,see,javax,management,mbean,server,factory,find,mbean,server,string;public,void,set,agent,id,string,agent,id,this,agent,id,agent,id
MBeanServerFactoryBean -> public void setAgentId(String agentId);1356735495;Set the agent id of the {@code MBeanServer} to locate._<p>Default is none. If specified, this will result in an_automatic attempt being made to locate the attendant MBeanServer,_and (importantly) if said MBeanServer cannot be located no_attempt will be made to create a new MBeanServer (and an_MBeanServerNotFoundException will be thrown at resolution time)._<p>Specifying the empty String indicates the platform MBeanServer._@see javax.management.MBeanServerFactory#findMBeanServer(String);public void setAgentId(String agentId) {_		this.agentId = agentId__	};set,the,agent,id,of,the,code,mbean,server,to,locate,p,default,is,none,if,specified,this,will,result,in,an,automatic,attempt,being,made,to,locate,the,attendant,mbean,server,and,importantly,if,said,mbean,server,cannot,be,located,no,attempt,will,be,made,to,create,a,new,mbean,server,and,an,mbean,server,not,found,exception,will,be,thrown,at,resolution,time,p,specifying,the,empty,string,indicates,the,platform,mbean,server,see,javax,management,mbean,server,factory,find,mbean,server,string;public,void,set,agent,id,string,agent,id,this,agent,id,agent,id
MBeanServerFactoryBean -> public void setAgentId(String agentId);1357119239;Set the agent id of the {@code MBeanServer} to locate._<p>Default is none. If specified, this will result in an_automatic attempt being made to locate the attendant MBeanServer,_and (importantly) if said MBeanServer cannot be located no_attempt will be made to create a new MBeanServer (and an_MBeanServerNotFoundException will be thrown at resolution time)._<p>Specifying the empty String indicates the platform MBeanServer._@see javax.management.MBeanServerFactory#findMBeanServer(String);public void setAgentId(String agentId) {_		this.agentId = agentId__	};set,the,agent,id,of,the,code,mbean,server,to,locate,p,default,is,none,if,specified,this,will,result,in,an,automatic,attempt,being,made,to,locate,the,attendant,mbean,server,and,importantly,if,said,mbean,server,cannot,be,located,no,attempt,will,be,made,to,create,a,new,mbean,server,and,an,mbean,server,not,found,exception,will,be,thrown,at,resolution,time,p,specifying,the,empty,string,indicates,the,platform,mbean,server,see,javax,management,mbean,server,factory,find,mbean,server,string;public,void,set,agent,id,string,agent,id,this,agent,id,agent,id
MBeanServerFactoryBean -> public void setAgentId(String agentId);1368482696;Set the agent id of the {@code MBeanServer} to locate._<p>Default is none. If specified, this will result in an_automatic attempt being made to locate the attendant MBeanServer,_and (importantly) if said MBeanServer cannot be located no_attempt will be made to create a new MBeanServer (and an_MBeanServerNotFoundException will be thrown at resolution time)._<p>Specifying the empty String indicates the platform MBeanServer._@see javax.management.MBeanServerFactory#findMBeanServer(String);public void setAgentId(String agentId) {_		this.agentId = agentId__	};set,the,agent,id,of,the,code,mbean,server,to,locate,p,default,is,none,if,specified,this,will,result,in,an,automatic,attempt,being,made,to,locate,the,attendant,mbean,server,and,importantly,if,said,mbean,server,cannot,be,located,no,attempt,will,be,made,to,create,a,new,mbean,server,and,an,mbean,server,not,found,exception,will,be,thrown,at,resolution,time,p,specifying,the,empty,string,indicates,the,platform,mbean,server,see,javax,management,mbean,server,factory,find,mbean,server,string;public,void,set,agent,id,string,agent,id,this,agent,id,agent,id
MBeanServerFactoryBean -> public void setAgentId(String agentId);1495868221;Set the agent id of the {@code MBeanServer} to locate._<p>Default is none. If specified, this will result in an_automatic attempt being made to locate the attendant MBeanServer,_and (importantly) if said MBeanServer cannot be located no_attempt will be made to create a new MBeanServer (and an_MBeanServerNotFoundException will be thrown at resolution time)._<p>Specifying the empty String indicates the platform MBeanServer._@see javax.management.MBeanServerFactory#findMBeanServer(String);public void setAgentId(String agentId) {_		this.agentId = agentId__	};set,the,agent,id,of,the,code,mbean,server,to,locate,p,default,is,none,if,specified,this,will,result,in,an,automatic,attempt,being,made,to,locate,the,attendant,mbean,server,and,importantly,if,said,mbean,server,cannot,be,located,no,attempt,will,be,made,to,create,a,new,mbean,server,and,an,mbean,server,not,found,exception,will,be,thrown,at,resolution,time,p,specifying,the,empty,string,indicates,the,platform,mbean,server,see,javax,management,mbean,server,factory,find,mbean,server,string;public,void,set,agent,id,string,agent,id,this,agent,id,agent,id
MBeanServerFactoryBean -> public void setAgentId(String agentId);1498780456;Set the agent id of the {@code MBeanServer} to locate._<p>Default is none. If specified, this will result in an_automatic attempt being made to locate the attendant MBeanServer,_and (importantly) if said MBeanServer cannot be located no_attempt will be made to create a new MBeanServer (and an_MBeanServerNotFoundException will be thrown at resolution time)._<p>Specifying the empty String indicates the platform MBeanServer._@see javax.management.MBeanServerFactory#findMBeanServer(String);public void setAgentId(String agentId) {_		this.agentId = agentId__	};set,the,agent,id,of,the,code,mbean,server,to,locate,p,default,is,none,if,specified,this,will,result,in,an,automatic,attempt,being,made,to,locate,the,attendant,mbean,server,and,importantly,if,said,mbean,server,cannot,be,located,no,attempt,will,be,made,to,create,a,new,mbean,server,and,an,mbean,server,not,found,exception,will,be,thrown,at,resolution,time,p,specifying,the,empty,string,indicates,the,platform,mbean,server,see,javax,management,mbean,server,factory,find,mbean,server,string;public,void,set,agent,id,string,agent,id,this,agent,id,agent,id
MBeanServerFactoryBean -> public void setAgentId(String agentId);1502974979;Set the agent id of the {@code MBeanServer} to locate._<p>Default is none. If specified, this will result in an_automatic attempt being made to locate the attendant MBeanServer,_and (importantly) if said MBeanServer cannot be located no_attempt will be made to create a new MBeanServer (and an_MBeanServerNotFoundException will be thrown at resolution time)._<p>Specifying the empty String indicates the platform MBeanServer._@see javax.management.MBeanServerFactory#findMBeanServer(String);public void setAgentId(String agentId) {_		this.agentId = agentId__	};set,the,agent,id,of,the,code,mbean,server,to,locate,p,default,is,none,if,specified,this,will,result,in,an,automatic,attempt,being,made,to,locate,the,attendant,mbean,server,and,importantly,if,said,mbean,server,cannot,be,located,no,attempt,will,be,made,to,create,a,new,mbean,server,and,an,mbean,server,not,found,exception,will,be,thrown,at,resolution,time,p,specifying,the,empty,string,indicates,the,platform,mbean,server,see,javax,management,mbean,server,factory,find,mbean,server,string;public,void,set,agent,id,string,agent,id,this,agent,id,agent,id
MBeanServerFactoryBean -> public void setAgentId(String agentId);1532091916;Set the agent id of the {@code MBeanServer} to locate._<p>Default is none. If specified, this will result in an_automatic attempt being made to locate the attendant MBeanServer,_and (importantly) if said MBeanServer cannot be located no_attempt will be made to create a new MBeanServer (and an_MBeanServerNotFoundException will be thrown at resolution time)._<p>Specifying the empty String indicates the platform MBeanServer._@see javax.management.MBeanServerFactory#findMBeanServer(String);public void setAgentId(String agentId) {_		this.agentId = agentId__	};set,the,agent,id,of,the,code,mbean,server,to,locate,p,default,is,none,if,specified,this,will,result,in,an,automatic,attempt,being,made,to,locate,the,attendant,mbean,server,and,importantly,if,said,mbean,server,cannot,be,located,no,attempt,will,be,made,to,create,a,new,mbean,server,and,an,mbean,server,not,found,exception,will,be,thrown,at,resolution,time,p,specifying,the,empty,string,indicates,the,platform,mbean,server,see,javax,management,mbean,server,factory,find,mbean,server,string;public,void,set,agent,id,string,agent,id,this,agent,id,agent,id
MBeanServerFactoryBean -> @Override 	public void afterPropertiesSet() throws MBeanServerNotFoundException;1356735495;Creates the {@code MBeanServer} instance.;@Override_	public void afterPropertiesSet() throws MBeanServerNotFoundException {_		_		if (this.locateExistingServerIfPossible || this.agentId != null) {_			try {_				this.server = locateMBeanServer(this.agentId)__			}_			catch (MBeanServerNotFoundException ex) {_				_				_				if (this.agentId != null) {_					throw ex__				}_				logger.info("No existing MBeanServer found - creating new one")__			}_		}__		_		if (this.server == null) {_			this.server = createMBeanServer(this.defaultDomain, this.registerWithFactory)__			this.newlyRegistered = this.registerWithFactory__		}_	};creates,the,code,mbean,server,instance;override,public,void,after,properties,set,throws,mbean,server,not,found,exception,if,this,locate,existing,server,if,possible,this,agent,id,null,try,this,server,locate,mbean,server,this,agent,id,catch,mbean,server,not,found,exception,ex,if,this,agent,id,null,throw,ex,logger,info,no,existing,mbean,server,found,creating,new,one,if,this,server,null,this,server,create,mbean,server,this,default,domain,this,register,with,factory,this,newly,registered,this,register,with,factory
MBeanServerFactoryBean -> @Override 	public void afterPropertiesSet() throws MBeanServerNotFoundException;1368482696;Creates the {@code MBeanServer} instance.;@Override_	public void afterPropertiesSet() throws MBeanServerNotFoundException {_		_		if (this.locateExistingServerIfPossible || this.agentId != null) {_			try {_				this.server = locateMBeanServer(this.agentId)__			}_			catch (MBeanServerNotFoundException ex) {_				_				_				if (this.agentId != null) {_					throw ex__				}_				logger.info("No existing MBeanServer found - creating new one")__			}_		}__		_		if (this.server == null) {_			this.server = createMBeanServer(this.defaultDomain, this.registerWithFactory)__			this.newlyRegistered = this.registerWithFactory__		}_	};creates,the,code,mbean,server,instance;override,public,void,after,properties,set,throws,mbean,server,not,found,exception,if,this,locate,existing,server,if,possible,this,agent,id,null,try,this,server,locate,mbean,server,this,agent,id,catch,mbean,server,not,found,exception,ex,if,this,agent,id,null,throw,ex,logger,info,no,existing,mbean,server,found,creating,new,one,if,this,server,null,this,server,create,mbean,server,this,default,domain,this,register,with,factory,this,newly,registered,this,register,with,factory
MBeanServerFactoryBean -> @Override 	public void afterPropertiesSet() throws MBeanServerNotFoundException;1495868221;Creates the {@code MBeanServer} instance.;@Override_	public void afterPropertiesSet() throws MBeanServerNotFoundException {_		_		if (this.locateExistingServerIfPossible || this.agentId != null) {_			try {_				this.server = locateMBeanServer(this.agentId)__			}_			catch (MBeanServerNotFoundException ex) {_				_				_				if (this.agentId != null) {_					throw ex__				}_				logger.info("No existing MBeanServer found - creating new one")__			}_		}__		_		if (this.server == null) {_			this.server = createMBeanServer(this.defaultDomain, this.registerWithFactory)__			this.newlyRegistered = this.registerWithFactory__		}_	};creates,the,code,mbean,server,instance;override,public,void,after,properties,set,throws,mbean,server,not,found,exception,if,this,locate,existing,server,if,possible,this,agent,id,null,try,this,server,locate,mbean,server,this,agent,id,catch,mbean,server,not,found,exception,ex,if,this,agent,id,null,throw,ex,logger,info,no,existing,mbean,server,found,creating,new,one,if,this,server,null,this,server,create,mbean,server,this,default,domain,this,register,with,factory,this,newly,registered,this,register,with,factory
MBeanServerFactoryBean -> @Override 	public void afterPropertiesSet() throws MBeanServerNotFoundException;1498780456;Creates the {@code MBeanServer} instance.;@Override_	public void afterPropertiesSet() throws MBeanServerNotFoundException {_		_		if (this.locateExistingServerIfPossible || this.agentId != null) {_			try {_				this.server = locateMBeanServer(this.agentId)__			}_			catch (MBeanServerNotFoundException ex) {_				_				_				if (this.agentId != null) {_					throw ex__				}_				logger.info("No existing MBeanServer found - creating new one")__			}_		}__		_		if (this.server == null) {_			this.server = createMBeanServer(this.defaultDomain, this.registerWithFactory)__			this.newlyRegistered = this.registerWithFactory__		}_	};creates,the,code,mbean,server,instance;override,public,void,after,properties,set,throws,mbean,server,not,found,exception,if,this,locate,existing,server,if,possible,this,agent,id,null,try,this,server,locate,mbean,server,this,agent,id,catch,mbean,server,not,found,exception,ex,if,this,agent,id,null,throw,ex,logger,info,no,existing,mbean,server,found,creating,new,one,if,this,server,null,this,server,create,mbean,server,this,default,domain,this,register,with,factory,this,newly,registered,this,register,with,factory
MBeanServerFactoryBean -> @Override 	public void afterPropertiesSet() throws MBeanServerNotFoundException;1502974979;Creates the {@code MBeanServer} instance.;@Override_	public void afterPropertiesSet() throws MBeanServerNotFoundException {_		_		if (this.locateExistingServerIfPossible || this.agentId != null) {_			try {_				this.server = locateMBeanServer(this.agentId)__			}_			catch (MBeanServerNotFoundException ex) {_				_				_				if (this.agentId != null) {_					throw ex__				}_				logger.info("No existing MBeanServer found - creating new one")__			}_		}__		_		if (this.server == null) {_			this.server = createMBeanServer(this.defaultDomain, this.registerWithFactory)__			this.newlyRegistered = this.registerWithFactory__		}_	};creates,the,code,mbean,server,instance;override,public,void,after,properties,set,throws,mbean,server,not,found,exception,if,this,locate,existing,server,if,possible,this,agent,id,null,try,this,server,locate,mbean,server,this,agent,id,catch,mbean,server,not,found,exception,ex,if,this,agent,id,null,throw,ex,logger,info,no,existing,mbean,server,found,creating,new,one,if,this,server,null,this,server,create,mbean,server,this,default,domain,this,register,with,factory,this,newly,registered,this,register,with,factory
MBeanServerFactoryBean -> @Override 	public void afterPropertiesSet() throws MBeanServerNotFoundException;1532091916;Creates the {@code MBeanServer} instance.;@Override_	public void afterPropertiesSet() throws MBeanServerNotFoundException {_		_		if (this.locateExistingServerIfPossible || this.agentId != null) {_			try {_				this.server = locateMBeanServer(this.agentId)__			}_			catch (MBeanServerNotFoundException ex) {_				_				_				if (this.agentId != null) {_					throw ex__				}_				logger.debug("No existing MBeanServer found - creating new one")__			}_		}__		_		if (this.server == null) {_			this.server = createMBeanServer(this.defaultDomain, this.registerWithFactory)__			this.newlyRegistered = this.registerWithFactory__		}_	};creates,the,code,mbean,server,instance;override,public,void,after,properties,set,throws,mbean,server,not,found,exception,if,this,locate,existing,server,if,possible,this,agent,id,null,try,this,server,locate,mbean,server,this,agent,id,catch,mbean,server,not,found,exception,ex,if,this,agent,id,null,throw,ex,logger,debug,no,existing,mbean,server,found,creating,new,one,if,this,server,null,this,server,create,mbean,server,this,default,domain,this,register,with,factory,this,newly,registered,this,register,with,factory
MBeanServerFactoryBean -> protected MBeanServer locateMBeanServer(@Nullable String agentId) throws MBeanServerNotFoundException;1495868221;Attempt to locate an existing {@code MBeanServer}._Called if {@code locateExistingServerIfPossible} is set to {@code true}._<p>The default implementation attempts to find an {@code MBeanServer} using_a standard lookup. Subclasses may override to add additional location logic._@param agentId the agent identifier of the MBeanServer to retrieve._If this parameter is {@code null}, all registered MBeanServers are_considered._@return the {@code MBeanServer} if found_@throws org.springframework.jmx.MBeanServerNotFoundException_if no {@code MBeanServer} could be found_@see #setLocateExistingServerIfPossible_@see JmxUtils#locateMBeanServer(String)_@see javax.management.MBeanServerFactory#findMBeanServer(String);protected MBeanServer locateMBeanServer(@Nullable String agentId) throws MBeanServerNotFoundException {_		return JmxUtils.locateMBeanServer(agentId)__	};attempt,to,locate,an,existing,code,mbean,server,called,if,code,locate,existing,server,if,possible,is,set,to,code,true,p,the,default,implementation,attempts,to,find,an,code,mbean,server,using,a,standard,lookup,subclasses,may,override,to,add,additional,location,logic,param,agent,id,the,agent,identifier,of,the,mbean,server,to,retrieve,if,this,parameter,is,code,null,all,registered,mbean,servers,are,considered,return,the,code,mbean,server,if,found,throws,org,springframework,jmx,mbean,server,not,found,exception,if,no,code,mbean,server,could,be,found,see,set,locate,existing,server,if,possible,see,jmx,utils,locate,mbean,server,string,see,javax,management,mbean,server,factory,find,mbean,server,string;protected,mbean,server,locate,mbean,server,nullable,string,agent,id,throws,mbean,server,not,found,exception,return,jmx,utils,locate,mbean,server,agent,id
MBeanServerFactoryBean -> protected MBeanServer locateMBeanServer(@Nullable String agentId) throws MBeanServerNotFoundException;1498780456;Attempt to locate an existing {@code MBeanServer}._Called if {@code locateExistingServerIfPossible} is set to {@code true}._<p>The default implementation attempts to find an {@code MBeanServer} using_a standard lookup. Subclasses may override to add additional location logic._@param agentId the agent identifier of the MBeanServer to retrieve._If this parameter is {@code null}, all registered MBeanServers are_considered._@return the {@code MBeanServer} if found_@throws org.springframework.jmx.MBeanServerNotFoundException_if no {@code MBeanServer} could be found_@see #setLocateExistingServerIfPossible_@see JmxUtils#locateMBeanServer(String)_@see javax.management.MBeanServerFactory#findMBeanServer(String);protected MBeanServer locateMBeanServer(@Nullable String agentId) throws MBeanServerNotFoundException {_		return JmxUtils.locateMBeanServer(agentId)__	};attempt,to,locate,an,existing,code,mbean,server,called,if,code,locate,existing,server,if,possible,is,set,to,code,true,p,the,default,implementation,attempts,to,find,an,code,mbean,server,using,a,standard,lookup,subclasses,may,override,to,add,additional,location,logic,param,agent,id,the,agent,identifier,of,the,mbean,server,to,retrieve,if,this,parameter,is,code,null,all,registered,mbean,servers,are,considered,return,the,code,mbean,server,if,found,throws,org,springframework,jmx,mbean,server,not,found,exception,if,no,code,mbean,server,could,be,found,see,set,locate,existing,server,if,possible,see,jmx,utils,locate,mbean,server,string,see,javax,management,mbean,server,factory,find,mbean,server,string;protected,mbean,server,locate,mbean,server,nullable,string,agent,id,throws,mbean,server,not,found,exception,return,jmx,utils,locate,mbean,server,agent,id
MBeanServerFactoryBean -> protected MBeanServer locateMBeanServer(@Nullable String agentId) throws MBeanServerNotFoundException;1502974979;Attempt to locate an existing {@code MBeanServer}._Called if {@code locateExistingServerIfPossible} is set to {@code true}._<p>The default implementation attempts to find an {@code MBeanServer} using_a standard lookup. Subclasses may override to add additional location logic._@param agentId the agent identifier of the MBeanServer to retrieve._If this parameter is {@code null}, all registered MBeanServers are_considered._@return the {@code MBeanServer} if found_@throws org.springframework.jmx.MBeanServerNotFoundException_if no {@code MBeanServer} could be found_@see #setLocateExistingServerIfPossible_@see JmxUtils#locateMBeanServer(String)_@see javax.management.MBeanServerFactory#findMBeanServer(String);protected MBeanServer locateMBeanServer(@Nullable String agentId) throws MBeanServerNotFoundException {_		return JmxUtils.locateMBeanServer(agentId)__	};attempt,to,locate,an,existing,code,mbean,server,called,if,code,locate,existing,server,if,possible,is,set,to,code,true,p,the,default,implementation,attempts,to,find,an,code,mbean,server,using,a,standard,lookup,subclasses,may,override,to,add,additional,location,logic,param,agent,id,the,agent,identifier,of,the,mbean,server,to,retrieve,if,this,parameter,is,code,null,all,registered,mbean,servers,are,considered,return,the,code,mbean,server,if,found,throws,org,springframework,jmx,mbean,server,not,found,exception,if,no,code,mbean,server,could,be,found,see,set,locate,existing,server,if,possible,see,jmx,utils,locate,mbean,server,string,see,javax,management,mbean,server,factory,find,mbean,server,string;protected,mbean,server,locate,mbean,server,nullable,string,agent,id,throws,mbean,server,not,found,exception,return,jmx,utils,locate,mbean,server,agent,id
MBeanServerFactoryBean -> protected MBeanServer locateMBeanServer(@Nullable String agentId) throws MBeanServerNotFoundException;1532091916;Attempt to locate an existing {@code MBeanServer}._Called if {@code locateExistingServerIfPossible} is set to {@code true}._<p>The default implementation attempts to find an {@code MBeanServer} using_a standard lookup. Subclasses may override to add additional location logic._@param agentId the agent identifier of the MBeanServer to retrieve._If this parameter is {@code null}, all registered MBeanServers are_considered._@return the {@code MBeanServer} if found_@throws org.springframework.jmx.MBeanServerNotFoundException_if no {@code MBeanServer} could be found_@see #setLocateExistingServerIfPossible_@see JmxUtils#locateMBeanServer(String)_@see javax.management.MBeanServerFactory#findMBeanServer(String);protected MBeanServer locateMBeanServer(@Nullable String agentId) throws MBeanServerNotFoundException {_		return JmxUtils.locateMBeanServer(agentId)__	};attempt,to,locate,an,existing,code,mbean,server,called,if,code,locate,existing,server,if,possible,is,set,to,code,true,p,the,default,implementation,attempts,to,find,an,code,mbean,server,using,a,standard,lookup,subclasses,may,override,to,add,additional,location,logic,param,agent,id,the,agent,identifier,of,the,mbean,server,to,retrieve,if,this,parameter,is,code,null,all,registered,mbean,servers,are,considered,return,the,code,mbean,server,if,found,throws,org,springframework,jmx,mbean,server,not,found,exception,if,no,code,mbean,server,could,be,found,see,set,locate,existing,server,if,possible,see,jmx,utils,locate,mbean,server,string,see,javax,management,mbean,server,factory,find,mbean,server,string;protected,mbean,server,locate,mbean,server,nullable,string,agent,id,throws,mbean,server,not,found,exception,return,jmx,utils,locate,mbean,server,agent,id
MBeanServerFactoryBean -> protected MBeanServer createMBeanServer(@Nullable String defaultDomain, boolean registerWithFactory);1495868221;Create a new {@code MBeanServer} instance and register it with the_{@code MBeanServerFactory}, if desired._@param defaultDomain the default domain, or {@code null} if none_@param registerWithFactory whether to register the {@code MBeanServer}_with the {@code MBeanServerFactory}_@see javax.management.MBeanServerFactory#createMBeanServer_@see javax.management.MBeanServerFactory#newMBeanServer;protected MBeanServer createMBeanServer(@Nullable String defaultDomain, boolean registerWithFactory) {_		if (registerWithFactory) {_			return MBeanServerFactory.createMBeanServer(defaultDomain)__		}_		else {_			return MBeanServerFactory.newMBeanServer(defaultDomain)__		}_	};create,a,new,code,mbean,server,instance,and,register,it,with,the,code,mbean,server,factory,if,desired,param,default,domain,the,default,domain,or,code,null,if,none,param,register,with,factory,whether,to,register,the,code,mbean,server,with,the,code,mbean,server,factory,see,javax,management,mbean,server,factory,create,mbean,server,see,javax,management,mbean,server,factory,new,mbean,server;protected,mbean,server,create,mbean,server,nullable,string,default,domain,boolean,register,with,factory,if,register,with,factory,return,mbean,server,factory,create,mbean,server,default,domain,else,return,mbean,server,factory,new,mbean,server,default,domain
MBeanServerFactoryBean -> protected MBeanServer createMBeanServer(@Nullable String defaultDomain, boolean registerWithFactory);1498780456;Create a new {@code MBeanServer} instance and register it with the_{@code MBeanServerFactory}, if desired._@param defaultDomain the default domain, or {@code null} if none_@param registerWithFactory whether to register the {@code MBeanServer}_with the {@code MBeanServerFactory}_@see javax.management.MBeanServerFactory#createMBeanServer_@see javax.management.MBeanServerFactory#newMBeanServer;protected MBeanServer createMBeanServer(@Nullable String defaultDomain, boolean registerWithFactory) {_		if (registerWithFactory) {_			return MBeanServerFactory.createMBeanServer(defaultDomain)__		}_		else {_			return MBeanServerFactory.newMBeanServer(defaultDomain)__		}_	};create,a,new,code,mbean,server,instance,and,register,it,with,the,code,mbean,server,factory,if,desired,param,default,domain,the,default,domain,or,code,null,if,none,param,register,with,factory,whether,to,register,the,code,mbean,server,with,the,code,mbean,server,factory,see,javax,management,mbean,server,factory,create,mbean,server,see,javax,management,mbean,server,factory,new,mbean,server;protected,mbean,server,create,mbean,server,nullable,string,default,domain,boolean,register,with,factory,if,register,with,factory,return,mbean,server,factory,create,mbean,server,default,domain,else,return,mbean,server,factory,new,mbean,server,default,domain
MBeanServerFactoryBean -> protected MBeanServer createMBeanServer(@Nullable String defaultDomain, boolean registerWithFactory);1502974979;Create a new {@code MBeanServer} instance and register it with the_{@code MBeanServerFactory}, if desired._@param defaultDomain the default domain, or {@code null} if none_@param registerWithFactory whether to register the {@code MBeanServer}_with the {@code MBeanServerFactory}_@see javax.management.MBeanServerFactory#createMBeanServer_@see javax.management.MBeanServerFactory#newMBeanServer;protected MBeanServer createMBeanServer(@Nullable String defaultDomain, boolean registerWithFactory) {_		if (registerWithFactory) {_			return MBeanServerFactory.createMBeanServer(defaultDomain)__		}_		else {_			return MBeanServerFactory.newMBeanServer(defaultDomain)__		}_	};create,a,new,code,mbean,server,instance,and,register,it,with,the,code,mbean,server,factory,if,desired,param,default,domain,the,default,domain,or,code,null,if,none,param,register,with,factory,whether,to,register,the,code,mbean,server,with,the,code,mbean,server,factory,see,javax,management,mbean,server,factory,create,mbean,server,see,javax,management,mbean,server,factory,new,mbean,server;protected,mbean,server,create,mbean,server,nullable,string,default,domain,boolean,register,with,factory,if,register,with,factory,return,mbean,server,factory,create,mbean,server,default,domain,else,return,mbean,server,factory,new,mbean,server,default,domain
MBeanServerFactoryBean -> protected MBeanServer createMBeanServer(@Nullable String defaultDomain, boolean registerWithFactory);1532091916;Create a new {@code MBeanServer} instance and register it with the_{@code MBeanServerFactory}, if desired._@param defaultDomain the default domain, or {@code null} if none_@param registerWithFactory whether to register the {@code MBeanServer}_with the {@code MBeanServerFactory}_@see javax.management.MBeanServerFactory#createMBeanServer_@see javax.management.MBeanServerFactory#newMBeanServer;protected MBeanServer createMBeanServer(@Nullable String defaultDomain, boolean registerWithFactory) {_		if (registerWithFactory) {_			return MBeanServerFactory.createMBeanServer(defaultDomain)__		}_		else {_			return MBeanServerFactory.newMBeanServer(defaultDomain)__		}_	};create,a,new,code,mbean,server,instance,and,register,it,with,the,code,mbean,server,factory,if,desired,param,default,domain,the,default,domain,or,code,null,if,none,param,register,with,factory,whether,to,register,the,code,mbean,server,with,the,code,mbean,server,factory,see,javax,management,mbean,server,factory,create,mbean,server,see,javax,management,mbean,server,factory,new,mbean,server;protected,mbean,server,create,mbean,server,nullable,string,default,domain,boolean,register,with,factory,if,register,with,factory,return,mbean,server,factory,create,mbean,server,default,domain,else,return,mbean,server,factory,new,mbean,server,default,domain
MBeanServerFactoryBean -> public void setRegisterWithFactory(boolean registerWithFactory);1328020251;Set whether to register the <code>MBeanServer</code> with the_<code>MBeanServerFactory</code>, making it available through_<code>MBeanServerFactory.findMBeanServer()<code>._@see javax.management.MBeanServerFactory#createMBeanServer_@see javax.management.MBeanServerFactory#findMBeanServer;public void setRegisterWithFactory(boolean registerWithFactory) {_		this.registerWithFactory = registerWithFactory__	};set,whether,to,register,the,code,mbean,server,code,with,the,code,mbean,server,factory,code,making,it,available,through,code,mbean,server,factory,find,mbean,server,code,see,javax,management,mbean,server,factory,create,mbean,server,see,javax,management,mbean,server,factory,find,mbean,server;public,void,set,register,with,factory,boolean,register,with,factory,this,register,with,factory,register,with,factory
MBeanServerFactoryBean -> public void setRegisterWithFactory(boolean registerWithFactory);1356735495;Set whether to register the {@code MBeanServer} with the_{@code MBeanServerFactory}, making it available through_{@code MBeanServerFactory.findMBeanServer()}._@see javax.management.MBeanServerFactory#createMBeanServer_@see javax.management.MBeanServerFactory#findMBeanServer;public void setRegisterWithFactory(boolean registerWithFactory) {_		this.registerWithFactory = registerWithFactory__	};set,whether,to,register,the,code,mbean,server,with,the,code,mbean,server,factory,making,it,available,through,code,mbean,server,factory,find,mbean,server,see,javax,management,mbean,server,factory,create,mbean,server,see,javax,management,mbean,server,factory,find,mbean,server;public,void,set,register,with,factory,boolean,register,with,factory,this,register,with,factory,register,with,factory
MBeanServerFactoryBean -> public void setRegisterWithFactory(boolean registerWithFactory);1357119239;Set whether to register the {@code MBeanServer} with the_{@code MBeanServerFactory}, making it available through_{@code MBeanServerFactory.findMBeanServer()}._@see javax.management.MBeanServerFactory#createMBeanServer_@see javax.management.MBeanServerFactory#findMBeanServer;public void setRegisterWithFactory(boolean registerWithFactory) {_		this.registerWithFactory = registerWithFactory__	};set,whether,to,register,the,code,mbean,server,with,the,code,mbean,server,factory,making,it,available,through,code,mbean,server,factory,find,mbean,server,see,javax,management,mbean,server,factory,create,mbean,server,see,javax,management,mbean,server,factory,find,mbean,server;public,void,set,register,with,factory,boolean,register,with,factory,this,register,with,factory,register,with,factory
MBeanServerFactoryBean -> public void setRegisterWithFactory(boolean registerWithFactory);1368482696;Set whether to register the {@code MBeanServer} with the_{@code MBeanServerFactory}, making it available through_{@code MBeanServerFactory.findMBeanServer()}._@see javax.management.MBeanServerFactory#createMBeanServer_@see javax.management.MBeanServerFactory#findMBeanServer;public void setRegisterWithFactory(boolean registerWithFactory) {_		this.registerWithFactory = registerWithFactory__	};set,whether,to,register,the,code,mbean,server,with,the,code,mbean,server,factory,making,it,available,through,code,mbean,server,factory,find,mbean,server,see,javax,management,mbean,server,factory,create,mbean,server,see,javax,management,mbean,server,factory,find,mbean,server;public,void,set,register,with,factory,boolean,register,with,factory,this,register,with,factory,register,with,factory
MBeanServerFactoryBean -> public void setRegisterWithFactory(boolean registerWithFactory);1495868221;Set whether to register the {@code MBeanServer} with the_{@code MBeanServerFactory}, making it available through_{@code MBeanServerFactory.findMBeanServer()}._@see javax.management.MBeanServerFactory#createMBeanServer_@see javax.management.MBeanServerFactory#findMBeanServer;public void setRegisterWithFactory(boolean registerWithFactory) {_		this.registerWithFactory = registerWithFactory__	};set,whether,to,register,the,code,mbean,server,with,the,code,mbean,server,factory,making,it,available,through,code,mbean,server,factory,find,mbean,server,see,javax,management,mbean,server,factory,create,mbean,server,see,javax,management,mbean,server,factory,find,mbean,server;public,void,set,register,with,factory,boolean,register,with,factory,this,register,with,factory,register,with,factory
MBeanServerFactoryBean -> public void setRegisterWithFactory(boolean registerWithFactory);1498780456;Set whether to register the {@code MBeanServer} with the_{@code MBeanServerFactory}, making it available through_{@code MBeanServerFactory.findMBeanServer()}._@see javax.management.MBeanServerFactory#createMBeanServer_@see javax.management.MBeanServerFactory#findMBeanServer;public void setRegisterWithFactory(boolean registerWithFactory) {_		this.registerWithFactory = registerWithFactory__	};set,whether,to,register,the,code,mbean,server,with,the,code,mbean,server,factory,making,it,available,through,code,mbean,server,factory,find,mbean,server,see,javax,management,mbean,server,factory,create,mbean,server,see,javax,management,mbean,server,factory,find,mbean,server;public,void,set,register,with,factory,boolean,register,with,factory,this,register,with,factory,register,with,factory
MBeanServerFactoryBean -> public void setRegisterWithFactory(boolean registerWithFactory);1502974979;Set whether to register the {@code MBeanServer} with the_{@code MBeanServerFactory}, making it available through_{@code MBeanServerFactory.findMBeanServer()}._@see javax.management.MBeanServerFactory#createMBeanServer_@see javax.management.MBeanServerFactory#findMBeanServer;public void setRegisterWithFactory(boolean registerWithFactory) {_		this.registerWithFactory = registerWithFactory__	};set,whether,to,register,the,code,mbean,server,with,the,code,mbean,server,factory,making,it,available,through,code,mbean,server,factory,find,mbean,server,see,javax,management,mbean,server,factory,create,mbean,server,see,javax,management,mbean,server,factory,find,mbean,server;public,void,set,register,with,factory,boolean,register,with,factory,this,register,with,factory,register,with,factory
MBeanServerFactoryBean -> public void setRegisterWithFactory(boolean registerWithFactory);1532091916;Set whether to register the {@code MBeanServer} with the_{@code MBeanServerFactory}, making it available through_{@code MBeanServerFactory.findMBeanServer()}._@see javax.management.MBeanServerFactory#createMBeanServer_@see javax.management.MBeanServerFactory#findMBeanServer;public void setRegisterWithFactory(boolean registerWithFactory) {_		this.registerWithFactory = registerWithFactory__	};set,whether,to,register,the,code,mbean,server,with,the,code,mbean,server,factory,making,it,available,through,code,mbean,server,factory,find,mbean,server,see,javax,management,mbean,server,factory,create,mbean,server,see,javax,management,mbean,server,factory,find,mbean,server;public,void,set,register,with,factory,boolean,register,with,factory,this,register,with,factory,register,with,factory
MBeanServerFactoryBean -> protected MBeanServer createMBeanServer(String defaultDomain, boolean registerWithFactory);1328020251;Create a new <code>MBeanServer</code> instance and register it with the_<code>MBeanServerFactory</code>, if desired._@param defaultDomain the default domain, or <code>null</code> if none_@param registerWithFactory whether to register the <code>MBeanServer</code>_with the <code>MBeanServerFactory</code>_@see javax.management.MBeanServerFactory#createMBeanServer_@see javax.management.MBeanServerFactory#newMBeanServer;protected MBeanServer createMBeanServer(String defaultDomain, boolean registerWithFactory) {_		if (registerWithFactory) {_			return MBeanServerFactory.createMBeanServer(defaultDomain)__		}_		else {_			return MBeanServerFactory.newMBeanServer(defaultDomain)__		}_	};create,a,new,code,mbean,server,code,instance,and,register,it,with,the,code,mbean,server,factory,code,if,desired,param,default,domain,the,default,domain,or,code,null,code,if,none,param,register,with,factory,whether,to,register,the,code,mbean,server,code,with,the,code,mbean,server,factory,code,see,javax,management,mbean,server,factory,create,mbean,server,see,javax,management,mbean,server,factory,new,mbean,server;protected,mbean,server,create,mbean,server,string,default,domain,boolean,register,with,factory,if,register,with,factory,return,mbean,server,factory,create,mbean,server,default,domain,else,return,mbean,server,factory,new,mbean,server,default,domain
MBeanServerFactoryBean -> protected MBeanServer createMBeanServer(String defaultDomain, boolean registerWithFactory);1356735495;Create a new {@code MBeanServer} instance and register it with the_{@code MBeanServerFactory}, if desired._@param defaultDomain the default domain, or {@code null} if none_@param registerWithFactory whether to register the {@code MBeanServer}_with the {@code MBeanServerFactory}_@see javax.management.MBeanServerFactory#createMBeanServer_@see javax.management.MBeanServerFactory#newMBeanServer;protected MBeanServer createMBeanServer(String defaultDomain, boolean registerWithFactory) {_		if (registerWithFactory) {_			return MBeanServerFactory.createMBeanServer(defaultDomain)__		}_		else {_			return MBeanServerFactory.newMBeanServer(defaultDomain)__		}_	};create,a,new,code,mbean,server,instance,and,register,it,with,the,code,mbean,server,factory,if,desired,param,default,domain,the,default,domain,or,code,null,if,none,param,register,with,factory,whether,to,register,the,code,mbean,server,with,the,code,mbean,server,factory,see,javax,management,mbean,server,factory,create,mbean,server,see,javax,management,mbean,server,factory,new,mbean,server;protected,mbean,server,create,mbean,server,string,default,domain,boolean,register,with,factory,if,register,with,factory,return,mbean,server,factory,create,mbean,server,default,domain,else,return,mbean,server,factory,new,mbean,server,default,domain
MBeanServerFactoryBean -> protected MBeanServer createMBeanServer(String defaultDomain, boolean registerWithFactory);1357119239;Create a new {@code MBeanServer} instance and register it with the_{@code MBeanServerFactory}, if desired._@param defaultDomain the default domain, or {@code null} if none_@param registerWithFactory whether to register the {@code MBeanServer}_with the {@code MBeanServerFactory}_@see javax.management.MBeanServerFactory#createMBeanServer_@see javax.management.MBeanServerFactory#newMBeanServer;protected MBeanServer createMBeanServer(String defaultDomain, boolean registerWithFactory) {_		if (registerWithFactory) {_			return MBeanServerFactory.createMBeanServer(defaultDomain)__		}_		else {_			return MBeanServerFactory.newMBeanServer(defaultDomain)__		}_	};create,a,new,code,mbean,server,instance,and,register,it,with,the,code,mbean,server,factory,if,desired,param,default,domain,the,default,domain,or,code,null,if,none,param,register,with,factory,whether,to,register,the,code,mbean,server,with,the,code,mbean,server,factory,see,javax,management,mbean,server,factory,create,mbean,server,see,javax,management,mbean,server,factory,new,mbean,server;protected,mbean,server,create,mbean,server,string,default,domain,boolean,register,with,factory,if,register,with,factory,return,mbean,server,factory,create,mbean,server,default,domain,else,return,mbean,server,factory,new,mbean,server,default,domain
MBeanServerFactoryBean -> protected MBeanServer createMBeanServer(String defaultDomain, boolean registerWithFactory);1368482696;Create a new {@code MBeanServer} instance and register it with the_{@code MBeanServerFactory}, if desired._@param defaultDomain the default domain, or {@code null} if none_@param registerWithFactory whether to register the {@code MBeanServer}_with the {@code MBeanServerFactory}_@see javax.management.MBeanServerFactory#createMBeanServer_@see javax.management.MBeanServerFactory#newMBeanServer;protected MBeanServer createMBeanServer(String defaultDomain, boolean registerWithFactory) {_		if (registerWithFactory) {_			return MBeanServerFactory.createMBeanServer(defaultDomain)__		}_		else {_			return MBeanServerFactory.newMBeanServer(defaultDomain)__		}_	};create,a,new,code,mbean,server,instance,and,register,it,with,the,code,mbean,server,factory,if,desired,param,default,domain,the,default,domain,or,code,null,if,none,param,register,with,factory,whether,to,register,the,code,mbean,server,with,the,code,mbean,server,factory,see,javax,management,mbean,server,factory,create,mbean,server,see,javax,management,mbean,server,factory,new,mbean,server;protected,mbean,server,create,mbean,server,string,default,domain,boolean,register,with,factory,if,register,with,factory,return,mbean,server,factory,create,mbean,server,default,domain,else,return,mbean,server,factory,new,mbean,server,default,domain
MBeanServerFactoryBean -> @Override 	public void destroy();1356735495;Unregisters the {@code MBeanServer} instance, if necessary.;@Override_	public void destroy() {_		if (this.newlyRegistered) {_			MBeanServerFactory.releaseMBeanServer(this.server)__		}_	};unregisters,the,code,mbean,server,instance,if,necessary;override,public,void,destroy,if,this,newly,registered,mbean,server,factory,release,mbean,server,this,server
MBeanServerFactoryBean -> @Override 	public void destroy();1368482696;Unregisters the {@code MBeanServer} instance, if necessary.;@Override_	public void destroy() {_		if (this.newlyRegistered) {_			MBeanServerFactory.releaseMBeanServer(this.server)__		}_	};unregisters,the,code,mbean,server,instance,if,necessary;override,public,void,destroy,if,this,newly,registered,mbean,server,factory,release,mbean,server,this,server
MBeanServerFactoryBean -> @Override 	public void destroy();1495868221;Unregisters the {@code MBeanServer} instance, if necessary.;@Override_	public void destroy() {_		if (this.newlyRegistered) {_			MBeanServerFactory.releaseMBeanServer(this.server)__		}_	};unregisters,the,code,mbean,server,instance,if,necessary;override,public,void,destroy,if,this,newly,registered,mbean,server,factory,release,mbean,server,this,server
MBeanServerFactoryBean -> @Override 	public void destroy();1498780456;Unregisters the {@code MBeanServer} instance, if necessary.;@Override_	public void destroy() {_		if (this.newlyRegistered) {_			MBeanServerFactory.releaseMBeanServer(this.server)__		}_	};unregisters,the,code,mbean,server,instance,if,necessary;override,public,void,destroy,if,this,newly,registered,mbean,server,factory,release,mbean,server,this,server
MBeanServerFactoryBean -> @Override 	public void destroy();1502974979;Unregisters the {@code MBeanServer} instance, if necessary.;@Override_	public void destroy() {_		if (this.newlyRegistered) {_			MBeanServerFactory.releaseMBeanServer(this.server)__		}_	};unregisters,the,code,mbean,server,instance,if,necessary;override,public,void,destroy,if,this,newly,registered,mbean,server,factory,release,mbean,server,this,server
MBeanServerFactoryBean -> @Override 	public void destroy();1532091916;Unregisters the {@code MBeanServer} instance, if necessary.;@Override_	public void destroy() {_		if (this.newlyRegistered) {_			MBeanServerFactory.releaseMBeanServer(this.server)__		}_	};unregisters,the,code,mbean,server,instance,if,necessary;override,public,void,destroy,if,this,newly,registered,mbean,server,factory,release,mbean,server,this,server
MBeanServerFactoryBean -> public void destroy();1328020251;Unregisters the <code>MBeanServer</code> instance, if necessary.;public void destroy() {_		if (this.newlyRegistered) {_			MBeanServerFactory.releaseMBeanServer(this.server)__		}_	};unregisters,the,code,mbean,server,code,instance,if,necessary;public,void,destroy,if,this,newly,registered,mbean,server,factory,release,mbean,server,this,server
MBeanServerFactoryBean -> public void destroy();1357119239;Unregisters the {@code MBeanServer} instance, if necessary.;public void destroy() {_		if (this.newlyRegistered) {_			MBeanServerFactory.releaseMBeanServer(this.server)__		}_	};unregisters,the,code,mbean,server,instance,if,necessary;public,void,destroy,if,this,newly,registered,mbean,server,factory,release,mbean,server,this,server
MBeanServerFactoryBean -> public void setDefaultDomain(String defaultDomain);1328020251;Set the default domain to be used by the <code>MBeanServer</code>,_to be passed to <code>MBeanServerFactory.createMBeanServer()</code>_or <code>MBeanServerFactory.findMBeanServer()<code>._<p>Default is none._@see javax.management.MBeanServerFactory#createMBeanServer(String)_@see javax.management.MBeanServerFactory#findMBeanServer(String);public void setDefaultDomain(String defaultDomain) {_		this.defaultDomain = defaultDomain__	};set,the,default,domain,to,be,used,by,the,code,mbean,server,code,to,be,passed,to,code,mbean,server,factory,create,mbean,server,code,or,code,mbean,server,factory,find,mbean,server,code,p,default,is,none,see,javax,management,mbean,server,factory,create,mbean,server,string,see,javax,management,mbean,server,factory,find,mbean,server,string;public,void,set,default,domain,string,default,domain,this,default,domain,default,domain
MBeanServerFactoryBean -> public void setDefaultDomain(String defaultDomain);1356735495;Set the default domain to be used by the {@code MBeanServer},_to be passed to {@code MBeanServerFactory.createMBeanServer()}_or {@code MBeanServerFactory.findMBeanServer()}._<p>Default is none._@see javax.management.MBeanServerFactory#createMBeanServer(String)_@see javax.management.MBeanServerFactory#findMBeanServer(String);public void setDefaultDomain(String defaultDomain) {_		this.defaultDomain = defaultDomain__	};set,the,default,domain,to,be,used,by,the,code,mbean,server,to,be,passed,to,code,mbean,server,factory,create,mbean,server,or,code,mbean,server,factory,find,mbean,server,p,default,is,none,see,javax,management,mbean,server,factory,create,mbean,server,string,see,javax,management,mbean,server,factory,find,mbean,server,string;public,void,set,default,domain,string,default,domain,this,default,domain,default,domain
MBeanServerFactoryBean -> public void setDefaultDomain(String defaultDomain);1357119239;Set the default domain to be used by the {@code MBeanServer},_to be passed to {@code MBeanServerFactory.createMBeanServer()}_or {@code MBeanServerFactory.findMBeanServer()}._<p>Default is none._@see javax.management.MBeanServerFactory#createMBeanServer(String)_@see javax.management.MBeanServerFactory#findMBeanServer(String);public void setDefaultDomain(String defaultDomain) {_		this.defaultDomain = defaultDomain__	};set,the,default,domain,to,be,used,by,the,code,mbean,server,to,be,passed,to,code,mbean,server,factory,create,mbean,server,or,code,mbean,server,factory,find,mbean,server,p,default,is,none,see,javax,management,mbean,server,factory,create,mbean,server,string,see,javax,management,mbean,server,factory,find,mbean,server,string;public,void,set,default,domain,string,default,domain,this,default,domain,default,domain
MBeanServerFactoryBean -> public void setDefaultDomain(String defaultDomain);1368482696;Set the default domain to be used by the {@code MBeanServer},_to be passed to {@code MBeanServerFactory.createMBeanServer()}_or {@code MBeanServerFactory.findMBeanServer()}._<p>Default is none._@see javax.management.MBeanServerFactory#createMBeanServer(String)_@see javax.management.MBeanServerFactory#findMBeanServer(String);public void setDefaultDomain(String defaultDomain) {_		this.defaultDomain = defaultDomain__	};set,the,default,domain,to,be,used,by,the,code,mbean,server,to,be,passed,to,code,mbean,server,factory,create,mbean,server,or,code,mbean,server,factory,find,mbean,server,p,default,is,none,see,javax,management,mbean,server,factory,create,mbean,server,string,see,javax,management,mbean,server,factory,find,mbean,server,string;public,void,set,default,domain,string,default,domain,this,default,domain,default,domain
MBeanServerFactoryBean -> public void setDefaultDomain(String defaultDomain);1495868221;Set the default domain to be used by the {@code MBeanServer},_to be passed to {@code MBeanServerFactory.createMBeanServer()}_or {@code MBeanServerFactory.findMBeanServer()}._<p>Default is none._@see javax.management.MBeanServerFactory#createMBeanServer(String)_@see javax.management.MBeanServerFactory#findMBeanServer(String);public void setDefaultDomain(String defaultDomain) {_		this.defaultDomain = defaultDomain__	};set,the,default,domain,to,be,used,by,the,code,mbean,server,to,be,passed,to,code,mbean,server,factory,create,mbean,server,or,code,mbean,server,factory,find,mbean,server,p,default,is,none,see,javax,management,mbean,server,factory,create,mbean,server,string,see,javax,management,mbean,server,factory,find,mbean,server,string;public,void,set,default,domain,string,default,domain,this,default,domain,default,domain
MBeanServerFactoryBean -> public void setDefaultDomain(String defaultDomain);1498780456;Set the default domain to be used by the {@code MBeanServer},_to be passed to {@code MBeanServerFactory.createMBeanServer()}_or {@code MBeanServerFactory.findMBeanServer()}._<p>Default is none._@see javax.management.MBeanServerFactory#createMBeanServer(String)_@see javax.management.MBeanServerFactory#findMBeanServer(String);public void setDefaultDomain(String defaultDomain) {_		this.defaultDomain = defaultDomain__	};set,the,default,domain,to,be,used,by,the,code,mbean,server,to,be,passed,to,code,mbean,server,factory,create,mbean,server,or,code,mbean,server,factory,find,mbean,server,p,default,is,none,see,javax,management,mbean,server,factory,create,mbean,server,string,see,javax,management,mbean,server,factory,find,mbean,server,string;public,void,set,default,domain,string,default,domain,this,default,domain,default,domain
MBeanServerFactoryBean -> public void setDefaultDomain(String defaultDomain);1502974979;Set the default domain to be used by the {@code MBeanServer},_to be passed to {@code MBeanServerFactory.createMBeanServer()}_or {@code MBeanServerFactory.findMBeanServer()}._<p>Default is none._@see javax.management.MBeanServerFactory#createMBeanServer(String)_@see javax.management.MBeanServerFactory#findMBeanServer(String);public void setDefaultDomain(String defaultDomain) {_		this.defaultDomain = defaultDomain__	};set,the,default,domain,to,be,used,by,the,code,mbean,server,to,be,passed,to,code,mbean,server,factory,create,mbean,server,or,code,mbean,server,factory,find,mbean,server,p,default,is,none,see,javax,management,mbean,server,factory,create,mbean,server,string,see,javax,management,mbean,server,factory,find,mbean,server,string;public,void,set,default,domain,string,default,domain,this,default,domain,default,domain
MBeanServerFactoryBean -> public void setDefaultDomain(String defaultDomain);1532091916;Set the default domain to be used by the {@code MBeanServer},_to be passed to {@code MBeanServerFactory.createMBeanServer()}_or {@code MBeanServerFactory.findMBeanServer()}._<p>Default is none._@see javax.management.MBeanServerFactory#createMBeanServer(String)_@see javax.management.MBeanServerFactory#findMBeanServer(String);public void setDefaultDomain(String defaultDomain) {_		this.defaultDomain = defaultDomain__	};set,the,default,domain,to,be,used,by,the,code,mbean,server,to,be,passed,to,code,mbean,server,factory,create,mbean,server,or,code,mbean,server,factory,find,mbean,server,p,default,is,none,see,javax,management,mbean,server,factory,create,mbean,server,string,see,javax,management,mbean,server,factory,find,mbean,server,string;public,void,set,default,domain,string,default,domain,this,default,domain,default,domain
MBeanServerFactoryBean -> public void setLocateExistingServerIfPossible(boolean locateExistingServerIfPossible);1328020251;Set whether or not the <code>MBeanServerFactoryBean</code> should attempt_to locate a running <code>MBeanServer</code> before creating one._<p>Default is <code>false</code>.;public void setLocateExistingServerIfPossible(boolean locateExistingServerIfPossible) {_		this.locateExistingServerIfPossible = locateExistingServerIfPossible__	};set,whether,or,not,the,code,mbean,server,factory,bean,code,should,attempt,to,locate,a,running,code,mbean,server,code,before,creating,one,p,default,is,code,false,code;public,void,set,locate,existing,server,if,possible,boolean,locate,existing,server,if,possible,this,locate,existing,server,if,possible,locate,existing,server,if,possible
MBeanServerFactoryBean -> public void setLocateExistingServerIfPossible(boolean locateExistingServerIfPossible);1356735495;Set whether or not the {@code MBeanServerFactoryBean} should attempt_to locate a running {@code MBeanServer} before creating one._<p>Default is {@code false}.;public void setLocateExistingServerIfPossible(boolean locateExistingServerIfPossible) {_		this.locateExistingServerIfPossible = locateExistingServerIfPossible__	};set,whether,or,not,the,code,mbean,server,factory,bean,should,attempt,to,locate,a,running,code,mbean,server,before,creating,one,p,default,is,code,false;public,void,set,locate,existing,server,if,possible,boolean,locate,existing,server,if,possible,this,locate,existing,server,if,possible,locate,existing,server,if,possible
MBeanServerFactoryBean -> public void setLocateExistingServerIfPossible(boolean locateExistingServerIfPossible);1357119239;Set whether or not the {@code MBeanServerFactoryBean} should attempt_to locate a running {@code MBeanServer} before creating one._<p>Default is {@code false}.;public void setLocateExistingServerIfPossible(boolean locateExistingServerIfPossible) {_		this.locateExistingServerIfPossible = locateExistingServerIfPossible__	};set,whether,or,not,the,code,mbean,server,factory,bean,should,attempt,to,locate,a,running,code,mbean,server,before,creating,one,p,default,is,code,false;public,void,set,locate,existing,server,if,possible,boolean,locate,existing,server,if,possible,this,locate,existing,server,if,possible,locate,existing,server,if,possible
MBeanServerFactoryBean -> public void setLocateExistingServerIfPossible(boolean locateExistingServerIfPossible);1368482696;Set whether or not the {@code MBeanServerFactoryBean} should attempt_to locate a running {@code MBeanServer} before creating one._<p>Default is {@code false}.;public void setLocateExistingServerIfPossible(boolean locateExistingServerIfPossible) {_		this.locateExistingServerIfPossible = locateExistingServerIfPossible__	};set,whether,or,not,the,code,mbean,server,factory,bean,should,attempt,to,locate,a,running,code,mbean,server,before,creating,one,p,default,is,code,false;public,void,set,locate,existing,server,if,possible,boolean,locate,existing,server,if,possible,this,locate,existing,server,if,possible,locate,existing,server,if,possible
MBeanServerFactoryBean -> public void setLocateExistingServerIfPossible(boolean locateExistingServerIfPossible);1495868221;Set whether or not the {@code MBeanServerFactoryBean} should attempt_to locate a running {@code MBeanServer} before creating one._<p>Default is {@code false}.;public void setLocateExistingServerIfPossible(boolean locateExistingServerIfPossible) {_		this.locateExistingServerIfPossible = locateExistingServerIfPossible__	};set,whether,or,not,the,code,mbean,server,factory,bean,should,attempt,to,locate,a,running,code,mbean,server,before,creating,one,p,default,is,code,false;public,void,set,locate,existing,server,if,possible,boolean,locate,existing,server,if,possible,this,locate,existing,server,if,possible,locate,existing,server,if,possible
MBeanServerFactoryBean -> public void setLocateExistingServerIfPossible(boolean locateExistingServerIfPossible);1498780456;Set whether or not the {@code MBeanServerFactoryBean} should attempt_to locate a running {@code MBeanServer} before creating one._<p>Default is {@code false}.;public void setLocateExistingServerIfPossible(boolean locateExistingServerIfPossible) {_		this.locateExistingServerIfPossible = locateExistingServerIfPossible__	};set,whether,or,not,the,code,mbean,server,factory,bean,should,attempt,to,locate,a,running,code,mbean,server,before,creating,one,p,default,is,code,false;public,void,set,locate,existing,server,if,possible,boolean,locate,existing,server,if,possible,this,locate,existing,server,if,possible,locate,existing,server,if,possible
MBeanServerFactoryBean -> public void setLocateExistingServerIfPossible(boolean locateExistingServerIfPossible);1502974979;Set whether or not the {@code MBeanServerFactoryBean} should attempt_to locate a running {@code MBeanServer} before creating one._<p>Default is {@code false}.;public void setLocateExistingServerIfPossible(boolean locateExistingServerIfPossible) {_		this.locateExistingServerIfPossible = locateExistingServerIfPossible__	};set,whether,or,not,the,code,mbean,server,factory,bean,should,attempt,to,locate,a,running,code,mbean,server,before,creating,one,p,default,is,code,false;public,void,set,locate,existing,server,if,possible,boolean,locate,existing,server,if,possible,this,locate,existing,server,if,possible,locate,existing,server,if,possible
MBeanServerFactoryBean -> public void setLocateExistingServerIfPossible(boolean locateExistingServerIfPossible);1532091916;Set whether or not the {@code MBeanServerFactoryBean} should attempt_to locate a running {@code MBeanServer} before creating one._<p>Default is {@code false}.;public void setLocateExistingServerIfPossible(boolean locateExistingServerIfPossible) {_		this.locateExistingServerIfPossible = locateExistingServerIfPossible__	};set,whether,or,not,the,code,mbean,server,factory,bean,should,attempt,to,locate,a,running,code,mbean,server,before,creating,one,p,default,is,code,false;public,void,set,locate,existing,server,if,possible,boolean,locate,existing,server,if,possible,this,locate,existing,server,if,possible,locate,existing,server,if,possible
MBeanServerFactoryBean -> protected MBeanServer locateMBeanServer(String agentId) throws MBeanServerNotFoundException;1328020251;Attempt to locate an existing <code>MBeanServer</code>._Called if <code>locateExistingServerIfPossible</code> is set to <code>true</code>._<p>The default implementation attempts to find an <code>MBeanServer</code> using_a standard lookup. Subclasses may override to add additional location logic._@param agentId the agent identifier of the MBeanServer to retrieve._If this parameter is <code>null</code>, all registered MBeanServers are_considered._@return the <code>MBeanServer</code> if found_@throws org.springframework.jmx.MBeanServerNotFoundException_if no <code>MBeanServer</code> could be found_@see #setLocateExistingServerIfPossible_@see JmxUtils#locateMBeanServer(String)_@see javax.management.MBeanServerFactory#findMBeanServer(String);protected MBeanServer locateMBeanServer(String agentId) throws MBeanServerNotFoundException {_		return JmxUtils.locateMBeanServer(agentId)__	};attempt,to,locate,an,existing,code,mbean,server,code,called,if,code,locate,existing,server,if,possible,code,is,set,to,code,true,code,p,the,default,implementation,attempts,to,find,an,code,mbean,server,code,using,a,standard,lookup,subclasses,may,override,to,add,additional,location,logic,param,agent,id,the,agent,identifier,of,the,mbean,server,to,retrieve,if,this,parameter,is,code,null,code,all,registered,mbean,servers,are,considered,return,the,code,mbean,server,code,if,found,throws,org,springframework,jmx,mbean,server,not,found,exception,if,no,code,mbean,server,code,could,be,found,see,set,locate,existing,server,if,possible,see,jmx,utils,locate,mbean,server,string,see,javax,management,mbean,server,factory,find,mbean,server,string;protected,mbean,server,locate,mbean,server,string,agent,id,throws,mbean,server,not,found,exception,return,jmx,utils,locate,mbean,server,agent,id
MBeanServerFactoryBean -> protected MBeanServer locateMBeanServer(String agentId) throws MBeanServerNotFoundException;1356735495;Attempt to locate an existing {@code MBeanServer}._Called if {@code locateExistingServerIfPossible} is set to {@code true}._<p>The default implementation attempts to find an {@code MBeanServer} using_a standard lookup. Subclasses may override to add additional location logic._@param agentId the agent identifier of the MBeanServer to retrieve._If this parameter is {@code null}, all registered MBeanServers are_considered._@return the {@code MBeanServer} if found_@throws org.springframework.jmx.MBeanServerNotFoundException_if no {@code MBeanServer} could be found_@see #setLocateExistingServerIfPossible_@see JmxUtils#locateMBeanServer(String)_@see javax.management.MBeanServerFactory#findMBeanServer(String);protected MBeanServer locateMBeanServer(String agentId) throws MBeanServerNotFoundException {_		return JmxUtils.locateMBeanServer(agentId)__	};attempt,to,locate,an,existing,code,mbean,server,called,if,code,locate,existing,server,if,possible,is,set,to,code,true,p,the,default,implementation,attempts,to,find,an,code,mbean,server,using,a,standard,lookup,subclasses,may,override,to,add,additional,location,logic,param,agent,id,the,agent,identifier,of,the,mbean,server,to,retrieve,if,this,parameter,is,code,null,all,registered,mbean,servers,are,considered,return,the,code,mbean,server,if,found,throws,org,springframework,jmx,mbean,server,not,found,exception,if,no,code,mbean,server,could,be,found,see,set,locate,existing,server,if,possible,see,jmx,utils,locate,mbean,server,string,see,javax,management,mbean,server,factory,find,mbean,server,string;protected,mbean,server,locate,mbean,server,string,agent,id,throws,mbean,server,not,found,exception,return,jmx,utils,locate,mbean,server,agent,id
MBeanServerFactoryBean -> protected MBeanServer locateMBeanServer(String agentId) throws MBeanServerNotFoundException;1357119239;Attempt to locate an existing {@code MBeanServer}._Called if {@code locateExistingServerIfPossible} is set to {@code true}._<p>The default implementation attempts to find an {@code MBeanServer} using_a standard lookup. Subclasses may override to add additional location logic._@param agentId the agent identifier of the MBeanServer to retrieve._If this parameter is {@code null}, all registered MBeanServers are_considered._@return the {@code MBeanServer} if found_@throws org.springframework.jmx.MBeanServerNotFoundException_if no {@code MBeanServer} could be found_@see #setLocateExistingServerIfPossible_@see JmxUtils#locateMBeanServer(String)_@see javax.management.MBeanServerFactory#findMBeanServer(String);protected MBeanServer locateMBeanServer(String agentId) throws MBeanServerNotFoundException {_		return JmxUtils.locateMBeanServer(agentId)__	};attempt,to,locate,an,existing,code,mbean,server,called,if,code,locate,existing,server,if,possible,is,set,to,code,true,p,the,default,implementation,attempts,to,find,an,code,mbean,server,using,a,standard,lookup,subclasses,may,override,to,add,additional,location,logic,param,agent,id,the,agent,identifier,of,the,mbean,server,to,retrieve,if,this,parameter,is,code,null,all,registered,mbean,servers,are,considered,return,the,code,mbean,server,if,found,throws,org,springframework,jmx,mbean,server,not,found,exception,if,no,code,mbean,server,could,be,found,see,set,locate,existing,server,if,possible,see,jmx,utils,locate,mbean,server,string,see,javax,management,mbean,server,factory,find,mbean,server,string;protected,mbean,server,locate,mbean,server,string,agent,id,throws,mbean,server,not,found,exception,return,jmx,utils,locate,mbean,server,agent,id
MBeanServerFactoryBean -> protected MBeanServer locateMBeanServer(String agentId) throws MBeanServerNotFoundException;1368482696;Attempt to locate an existing {@code MBeanServer}._Called if {@code locateExistingServerIfPossible} is set to {@code true}._<p>The default implementation attempts to find an {@code MBeanServer} using_a standard lookup. Subclasses may override to add additional location logic._@param agentId the agent identifier of the MBeanServer to retrieve._If this parameter is {@code null}, all registered MBeanServers are_considered._@return the {@code MBeanServer} if found_@throws org.springframework.jmx.MBeanServerNotFoundException_if no {@code MBeanServer} could be found_@see #setLocateExistingServerIfPossible_@see JmxUtils#locateMBeanServer(String)_@see javax.management.MBeanServerFactory#findMBeanServer(String);protected MBeanServer locateMBeanServer(String agentId) throws MBeanServerNotFoundException {_		return JmxUtils.locateMBeanServer(agentId)__	};attempt,to,locate,an,existing,code,mbean,server,called,if,code,locate,existing,server,if,possible,is,set,to,code,true,p,the,default,implementation,attempts,to,find,an,code,mbean,server,using,a,standard,lookup,subclasses,may,override,to,add,additional,location,logic,param,agent,id,the,agent,identifier,of,the,mbean,server,to,retrieve,if,this,parameter,is,code,null,all,registered,mbean,servers,are,considered,return,the,code,mbean,server,if,found,throws,org,springframework,jmx,mbean,server,not,found,exception,if,no,code,mbean,server,could,be,found,see,set,locate,existing,server,if,possible,see,jmx,utils,locate,mbean,server,string,see,javax,management,mbean,server,factory,find,mbean,server,string;protected,mbean,server,locate,mbean,server,string,agent,id,throws,mbean,server,not,found,exception,return,jmx,utils,locate,mbean,server,agent,id
