# id;timestamp;commentText;codeText;commentWords;codeWords
ConnectorDelegate -> public MBeanServerConnection connect(JMXServiceURL serviceUrl, Map<String, ?> environment, String agentId) 			throws MBeanServerNotFoundException;1328020251;Connects to the remote <code>MBeanServer</code> using the configured <code>JMXServiceURL</code>:_to the specified JMX service, or to a local MBeanServer if no service URL specified._@param serviceUrl the JMX service URL to connect to (may be <code>null</code>)_@param environment the JMX environment for the connector (may be <code>null</code>)_@param agentId the local JMX MBeanServer's agent id (may be <code>null</code>);public MBeanServerConnection connect(JMXServiceURL serviceUrl, Map<String, ?> environment, String agentId)_			throws MBeanServerNotFoundException {__		if (serviceUrl != null) {_			if (logger.isDebugEnabled()) {_				logger.debug("Connecting to remote MBeanServer at URL [" + serviceUrl + "]")__			}_			try {_				this.connector = JMXConnectorFactory.connect(serviceUrl, environment)__				return this.connector.getMBeanServerConnection()__			}_			catch (IOException ex) {_				throw new MBeanServerNotFoundException("Could not connect to remote MBeanServer [" + serviceUrl + "]", ex)__			}_		}_		else {_			logger.debug("Attempting to locate local MBeanServer")__			return JmxUtils.locateMBeanServer(agentId)__		}_	};connects,to,the,remote,code,mbean,server,code,using,the,configured,code,jmxservice,url,code,to,the,specified,jmx,service,or,to,a,local,mbean,server,if,no,service,url,specified,param,service,url,the,jmx,service,url,to,connect,to,may,be,code,null,code,param,environment,the,jmx,environment,for,the,connector,may,be,code,null,code,param,agent,id,the,local,jmx,mbean,server,s,agent,id,may,be,code,null,code;public,mbean,server,connection,connect,jmxservice,url,service,url,map,string,environment,string,agent,id,throws,mbean,server,not,found,exception,if,service,url,null,if,logger,is,debug,enabled,logger,debug,connecting,to,remote,mbean,server,at,url,service,url,try,this,connector,jmxconnector,factory,connect,service,url,environment,return,this,connector,get,mbean,server,connection,catch,ioexception,ex,throw,new,mbean,server,not,found,exception,could,not,connect,to,remote,mbean,server,service,url,ex,else,logger,debug,attempting,to,locate,local,mbean,server,return,jmx,utils,locate,mbean,server,agent,id
ConnectorDelegate -> public MBeanServerConnection connect(JMXServiceURL serviceUrl, Map<String, ?> environment, String agentId) 			throws MBeanServerNotFoundException;1356735495;Connects to the remote {@code MBeanServer} using the configured {@code JMXServiceURL}:_to the specified JMX service, or to a local MBeanServer if no service URL specified._@param serviceUrl the JMX service URL to connect to (may be {@code null})_@param environment the JMX environment for the connector (may be {@code null})_@param agentId the local JMX MBeanServer's agent id (may be {@code null});public MBeanServerConnection connect(JMXServiceURL serviceUrl, Map<String, ?> environment, String agentId)_			throws MBeanServerNotFoundException {__		if (serviceUrl != null) {_			if (logger.isDebugEnabled()) {_				logger.debug("Connecting to remote MBeanServer at URL [" + serviceUrl + "]")__			}_			try {_				this.connector = JMXConnectorFactory.connect(serviceUrl, environment)__				return this.connector.getMBeanServerConnection()__			}_			catch (IOException ex) {_				throw new MBeanServerNotFoundException("Could not connect to remote MBeanServer [" + serviceUrl + "]", ex)__			}_		}_		else {_			logger.debug("Attempting to locate local MBeanServer")__			return JmxUtils.locateMBeanServer(agentId)__		}_	};connects,to,the,remote,code,mbean,server,using,the,configured,code,jmxservice,url,to,the,specified,jmx,service,or,to,a,local,mbean,server,if,no,service,url,specified,param,service,url,the,jmx,service,url,to,connect,to,may,be,code,null,param,environment,the,jmx,environment,for,the,connector,may,be,code,null,param,agent,id,the,local,jmx,mbean,server,s,agent,id,may,be,code,null;public,mbean,server,connection,connect,jmxservice,url,service,url,map,string,environment,string,agent,id,throws,mbean,server,not,found,exception,if,service,url,null,if,logger,is,debug,enabled,logger,debug,connecting,to,remote,mbean,server,at,url,service,url,try,this,connector,jmxconnector,factory,connect,service,url,environment,return,this,connector,get,mbean,server,connection,catch,ioexception,ex,throw,new,mbean,server,not,found,exception,could,not,connect,to,remote,mbean,server,service,url,ex,else,logger,debug,attempting,to,locate,local,mbean,server,return,jmx,utils,locate,mbean,server,agent,id
ConnectorDelegate -> public MBeanServerConnection connect(JMXServiceURL serviceUrl, Map<String, ?> environment, String agentId) 			throws MBeanServerNotFoundException;1413848647;Connects to the remote {@code MBeanServer} using the configured {@code JMXServiceURL}:_to the specified JMX service, or to a local MBeanServer if no service URL specified._@param serviceUrl the JMX service URL to connect to (may be {@code null})_@param environment the JMX environment for the connector (may be {@code null})_@param agentId the local JMX MBeanServer's agent id (may be {@code null});public MBeanServerConnection connect(JMXServiceURL serviceUrl, Map<String, ?> environment, String agentId)_			throws MBeanServerNotFoundException {__		if (serviceUrl != null) {_			if (logger.isDebugEnabled()) {_				logger.debug("Connecting to remote MBeanServer at URL [" + serviceUrl + "]")__			}_			try {_				this.connector = JMXConnectorFactory.connect(serviceUrl, environment)__				return this.connector.getMBeanServerConnection()__			}_			catch (IOException ex) {_				throw new MBeanServerNotFoundException("Could not connect to remote MBeanServer [" + serviceUrl + "]", ex)__			}_		}_		else {_			logger.debug("Attempting to locate local MBeanServer")__			return JmxUtils.locateMBeanServer(agentId)__		}_	};connects,to,the,remote,code,mbean,server,using,the,configured,code,jmxservice,url,to,the,specified,jmx,service,or,to,a,local,mbean,server,if,no,service,url,specified,param,service,url,the,jmx,service,url,to,connect,to,may,be,code,null,param,environment,the,jmx,environment,for,the,connector,may,be,code,null,param,agent,id,the,local,jmx,mbean,server,s,agent,id,may,be,code,null;public,mbean,server,connection,connect,jmxservice,url,service,url,map,string,environment,string,agent,id,throws,mbean,server,not,found,exception,if,service,url,null,if,logger,is,debug,enabled,logger,debug,connecting,to,remote,mbean,server,at,url,service,url,try,this,connector,jmxconnector,factory,connect,service,url,environment,return,this,connector,get,mbean,server,connection,catch,ioexception,ex,throw,new,mbean,server,not,found,exception,could,not,connect,to,remote,mbean,server,service,url,ex,else,logger,debug,attempting,to,locate,local,mbean,server,return,jmx,utils,locate,mbean,server,agent,id
ConnectorDelegate -> public MBeanServerConnection connect(JMXServiceURL serviceUrl, Map<String, ?> environment, String agentId) 			throws MBeanServerNotFoundException;1450295040;Connects to the remote {@code MBeanServer} using the configured {@code JMXServiceURL}:_to the specified JMX service, or to a local MBeanServer if no service URL specified._@param serviceUrl the JMX service URL to connect to (may be {@code null})_@param environment the JMX environment for the connector (may be {@code null})_@param agentId the local JMX MBeanServer's agent id (may be {@code null});public MBeanServerConnection connect(JMXServiceURL serviceUrl, Map<String, ?> environment, String agentId)_			throws MBeanServerNotFoundException {__		if (serviceUrl != null) {_			if (logger.isDebugEnabled()) {_				logger.debug("Connecting to remote MBeanServer at URL [" + serviceUrl + "]")__			}_			try {_				this.connector = JMXConnectorFactory.connect(serviceUrl, environment)__				return this.connector.getMBeanServerConnection()__			}_			catch (IOException ex) {_				throw new MBeanServerNotFoundException("Could not connect to remote MBeanServer [" + serviceUrl + "]", ex)__			}_		}_		else {_			logger.debug("Attempting to locate local MBeanServer")__			return JmxUtils.locateMBeanServer(agentId)__		}_	};connects,to,the,remote,code,mbean,server,using,the,configured,code,jmxservice,url,to,the,specified,jmx,service,or,to,a,local,mbean,server,if,no,service,url,specified,param,service,url,the,jmx,service,url,to,connect,to,may,be,code,null,param,environment,the,jmx,environment,for,the,connector,may,be,code,null,param,agent,id,the,local,jmx,mbean,server,s,agent,id,may,be,code,null;public,mbean,server,connection,connect,jmxservice,url,service,url,map,string,environment,string,agent,id,throws,mbean,server,not,found,exception,if,service,url,null,if,logger,is,debug,enabled,logger,debug,connecting,to,remote,mbean,server,at,url,service,url,try,this,connector,jmxconnector,factory,connect,service,url,environment,return,this,connector,get,mbean,server,connection,catch,ioexception,ex,throw,new,mbean,server,not,found,exception,could,not,connect,to,remote,mbean,server,service,url,ex,else,logger,debug,attempting,to,locate,local,mbean,server,return,jmx,utils,locate,mbean,server,agent,id
ConnectorDelegate -> public MBeanServerConnection connect(@Nullable JMXServiceURL serviceUrl, @Nullable Map<String, ?> environment, @Nullable String agentId) 			throws MBeanServerNotFoundException;1495868221;Connects to the remote {@code MBeanServer} using the configured {@code JMXServiceURL}:_to the specified JMX service, or to a local MBeanServer if no service URL specified._@param serviceUrl the JMX service URL to connect to (may be {@code null})_@param environment the JMX environment for the connector (may be {@code null})_@param agentId the local JMX MBeanServer's agent id (may be {@code null});public MBeanServerConnection connect(@Nullable JMXServiceURL serviceUrl, @Nullable Map<String, ?> environment, @Nullable String agentId)_			throws MBeanServerNotFoundException {__		if (serviceUrl != null) {_			if (logger.isDebugEnabled()) {_				logger.debug("Connecting to remote MBeanServer at URL [" + serviceUrl + "]")__			}_			try {_				this.connector = JMXConnectorFactory.connect(serviceUrl, environment)__				return this.connector.getMBeanServerConnection()__			}_			catch (IOException ex) {_				throw new MBeanServerNotFoundException("Could not connect to remote MBeanServer [" + serviceUrl + "]", ex)__			}_		}_		else {_			logger.debug("Attempting to locate local MBeanServer")__			return JmxUtils.locateMBeanServer(agentId)__		}_	};connects,to,the,remote,code,mbean,server,using,the,configured,code,jmxservice,url,to,the,specified,jmx,service,or,to,a,local,mbean,server,if,no,service,url,specified,param,service,url,the,jmx,service,url,to,connect,to,may,be,code,null,param,environment,the,jmx,environment,for,the,connector,may,be,code,null,param,agent,id,the,local,jmx,mbean,server,s,agent,id,may,be,code,null;public,mbean,server,connection,connect,nullable,jmxservice,url,service,url,nullable,map,string,environment,nullable,string,agent,id,throws,mbean,server,not,found,exception,if,service,url,null,if,logger,is,debug,enabled,logger,debug,connecting,to,remote,mbean,server,at,url,service,url,try,this,connector,jmxconnector,factory,connect,service,url,environment,return,this,connector,get,mbean,server,connection,catch,ioexception,ex,throw,new,mbean,server,not,found,exception,could,not,connect,to,remote,mbean,server,service,url,ex,else,logger,debug,attempting,to,locate,local,mbean,server,return,jmx,utils,locate,mbean,server,agent,id
ConnectorDelegate -> public MBeanServerConnection connect(@Nullable JMXServiceURL serviceUrl, @Nullable Map<String, ?> environment, @Nullable String agentId) 			throws MBeanServerNotFoundException;1498780456;Connects to the remote {@code MBeanServer} using the configured {@code JMXServiceURL}:_to the specified JMX service, or to a local MBeanServer if no service URL specified._@param serviceUrl the JMX service URL to connect to (may be {@code null})_@param environment the JMX environment for the connector (may be {@code null})_@param agentId the local JMX MBeanServer's agent id (may be {@code null});public MBeanServerConnection connect(@Nullable JMXServiceURL serviceUrl, @Nullable Map<String, ?> environment, @Nullable String agentId)_			throws MBeanServerNotFoundException {__		if (serviceUrl != null) {_			if (logger.isDebugEnabled()) {_				logger.debug("Connecting to remote MBeanServer at URL [" + serviceUrl + "]")__			}_			try {_				this.connector = JMXConnectorFactory.connect(serviceUrl, environment)__				return this.connector.getMBeanServerConnection()__			}_			catch (IOException ex) {_				throw new MBeanServerNotFoundException("Could not connect to remote MBeanServer [" + serviceUrl + "]", ex)__			}_		}_		else {_			logger.debug("Attempting to locate local MBeanServer")__			return JmxUtils.locateMBeanServer(agentId)__		}_	};connects,to,the,remote,code,mbean,server,using,the,configured,code,jmxservice,url,to,the,specified,jmx,service,or,to,a,local,mbean,server,if,no,service,url,specified,param,service,url,the,jmx,service,url,to,connect,to,may,be,code,null,param,environment,the,jmx,environment,for,the,connector,may,be,code,null,param,agent,id,the,local,jmx,mbean,server,s,agent,id,may,be,code,null;public,mbean,server,connection,connect,nullable,jmxservice,url,service,url,nullable,map,string,environment,nullable,string,agent,id,throws,mbean,server,not,found,exception,if,service,url,null,if,logger,is,debug,enabled,logger,debug,connecting,to,remote,mbean,server,at,url,service,url,try,this,connector,jmxconnector,factory,connect,service,url,environment,return,this,connector,get,mbean,server,connection,catch,ioexception,ex,throw,new,mbean,server,not,found,exception,could,not,connect,to,remote,mbean,server,service,url,ex,else,logger,debug,attempting,to,locate,local,mbean,server,return,jmx,utils,locate,mbean,server,agent,id
ConnectorDelegate -> public void close();1328020251;Closes any <code>JMXConnector</code> that may be managed by this interceptor.;public void close() {_		if (this.connector != null) {_			try {_				this.connector.close()__			}_			catch (IOException ex) {_				logger.debug("Could not close JMX connector", ex)__			}_		}_	};closes,any,code,jmxconnector,code,that,may,be,managed,by,this,interceptor;public,void,close,if,this,connector,null,try,this,connector,close,catch,ioexception,ex,logger,debug,could,not,close,jmx,connector,ex
ConnectorDelegate -> public void close();1356735495;Closes any {@code JMXConnector} that may be managed by this interceptor.;public void close() {_		if (this.connector != null) {_			try {_				this.connector.close()__			}_			catch (IOException ex) {_				logger.debug("Could not close JMX connector", ex)__			}_		}_	};closes,any,code,jmxconnector,that,may,be,managed,by,this,interceptor;public,void,close,if,this,connector,null,try,this,connector,close,catch,ioexception,ex,logger,debug,could,not,close,jmx,connector,ex
ConnectorDelegate -> public void close();1413848647;Closes any {@code JMXConnector} that may be managed by this interceptor.;public void close() {_		if (this.connector != null) {_			try {_				this.connector.close()__			}_			catch (IOException ex) {_				logger.debug("Could not close JMX connector", ex)__			}_		}_	};closes,any,code,jmxconnector,that,may,be,managed,by,this,interceptor;public,void,close,if,this,connector,null,try,this,connector,close,catch,ioexception,ex,logger,debug,could,not,close,jmx,connector,ex
ConnectorDelegate -> public void close();1450295040;Closes any {@code JMXConnector} that may be managed by this interceptor.;public void close() {_		if (this.connector != null) {_			try {_				this.connector.close()__			}_			catch (IOException ex) {_				logger.debug("Could not close JMX connector", ex)__			}_		}_	};closes,any,code,jmxconnector,that,may,be,managed,by,this,interceptor;public,void,close,if,this,connector,null,try,this,connector,close,catch,ioexception,ex,logger,debug,could,not,close,jmx,connector,ex
ConnectorDelegate -> public void close();1495868221;Closes any {@code JMXConnector} that may be managed by this interceptor.;public void close() {_		if (this.connector != null) {_			try {_				this.connector.close()__			}_			catch (IOException ex) {_				logger.debug("Could not close JMX connector", ex)__			}_		}_	};closes,any,code,jmxconnector,that,may,be,managed,by,this,interceptor;public,void,close,if,this,connector,null,try,this,connector,close,catch,ioexception,ex,logger,debug,could,not,close,jmx,connector,ex
ConnectorDelegate -> public void close();1498780456;Closes any {@code JMXConnector} that may be managed by this interceptor.;public void close() {_		if (this.connector != null) {_			try {_				this.connector.close()__			}_			catch (IOException ex) {_				logger.debug("Could not close JMX connector", ex)__			}_		}_	};closes,any,code,jmxconnector,that,may,be,managed,by,this,interceptor;public,void,close,if,this,connector,null,try,this,connector,close,catch,ioexception,ex,logger,debug,could,not,close,jmx,connector,ex
