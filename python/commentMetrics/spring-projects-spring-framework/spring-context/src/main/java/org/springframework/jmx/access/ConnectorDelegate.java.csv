commented;modifiers;parameterAmount;loc;comment;code
true;public;3;20;/**  * Connects to the remote {@code MBeanServer} using the configured {@code JMXServiceURL}:  * to the specified JMX service, or to a local MBeanServer if no service URL specified.  * @param serviceUrl the JMX service URL to connect to (may be {@code null})  * @param environment the JMX environment for the connector (may be {@code null})  * @param agentId the local JMX MBeanServer's agent id (may be {@code null})  */ ;/**  * Connects to the remote {@code MBeanServer} using the configured {@code JMXServiceURL}:  * to the specified JMX service, or to a local MBeanServer if no service URL specified.  * @param serviceUrl the JMX service URL to connect to (may be {@code null})  * @param environment the JMX environment for the connector (may be {@code null})  * @param agentId the local JMX MBeanServer's agent id (may be {@code null})  */ public MBeanServerConnection connect(@Nullable JMXServiceURL serviceUrl, @Nullable Map<String, ?> environment, @Nullable String agentId) throws MBeanServerNotFoundException {     if (serviceUrl != null) {         if (logger.isDebugEnabled()) {             logger.debug("Connecting to remote MBeanServer at URL [" + serviceUrl + "]").         }         try {             this.connector = JMXConnectorFactory.connect(serviceUrl, environment).             return this.connector.getMBeanServerConnection().         } catch (IOException ex) {             throw new MBeanServerNotFoundException("Could not connect to remote MBeanServer [" + serviceUrl + "]", ex).         }     } else {         logger.debug("Attempting to locate local MBeanServer").         return JmxUtils.locateMBeanServer(agentId).     } }
true;public;0;10;/**  * Closes any {@code JMXConnector} that may be managed by this interceptor.  */ ;/**  * Closes any {@code JMXConnector} that may be managed by this interceptor.  */ public void close() {     if (this.connector != null) {         try {             this.connector.close().         } catch (IOException ex) {             logger.debug("Could not close JMX connector", ex).         }     } }
