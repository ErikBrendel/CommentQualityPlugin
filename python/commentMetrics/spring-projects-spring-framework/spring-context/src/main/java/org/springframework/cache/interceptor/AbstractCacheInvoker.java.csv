# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractCacheInvoker -> protected void doPut(Cache cache, Object key, @Nullable Object result);1496837955;Execute {@link Cache#put(Object, Object)} on the specified {@link Cache}_and invoke the error handler if an exception occurs.;protected void doPut(Cache cache, Object key, @Nullable Object result) {_		try {_			cache.put(key, result)__		}_		catch (RuntimeException ex) {_			getErrorHandler().handleCachePutError(ex, cache, key, result)__		}_	};execute,link,cache,put,object,object,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs;protected,void,do,put,cache,cache,object,key,nullable,object,result,try,cache,put,key,result,catch,runtime,exception,ex,get,error,handler,handle,cache,put,error,ex,cache,key,result
AbstractCacheInvoker -> protected void doPut(Cache cache, Object key, @Nullable Object result);1500495740;Execute {@link Cache#put(Object, Object)} on the specified {@link Cache}_and invoke the error handler if an exception occurs.;protected void doPut(Cache cache, Object key, @Nullable Object result) {_		try {_			cache.put(key, result)__		}_		catch (RuntimeException ex) {_			getErrorHandler().handleCachePutError(ex, cache, key, result)__		}_	};execute,link,cache,put,object,object,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs;protected,void,do,put,cache,cache,object,key,nullable,object,result,try,cache,put,key,result,catch,runtime,exception,ex,get,error,handler,handle,cache,put,error,ex,cache,key,result
AbstractCacheInvoker -> protected void doPut(Cache cache, Object key, @Nullable Object result);1531589372;Execute {@link Cache#put(Object, Object)} on the specified {@link Cache}_and invoke the error handler if an exception occurs.;protected void doPut(Cache cache, Object key, @Nullable Object result) {_		try {_			cache.put(key, result)__		}_		catch (RuntimeException ex) {_			getErrorHandler().handleCachePutError(ex, cache, key, result)__		}_	};execute,link,cache,put,object,object,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs;protected,void,do,put,cache,cache,object,key,nullable,object,result,try,cache,put,key,result,catch,runtime,exception,ex,get,error,handler,handle,cache,put,error,ex,cache,key,result
AbstractCacheInvoker -> public void setErrorHandler(CacheErrorHandler errorHandler);1400596774;Set the {@link CacheErrorHandler} instance to use to handle errors_thrown by the cache provider. By default, a {@link SimpleCacheErrorHandler}_is used who throws any exception as is.;public void setErrorHandler(CacheErrorHandler errorHandler) {_		this.errorHandler = errorHandler__	};set,the,link,cache,error,handler,instance,to,use,to,handle,errors,thrown,by,the,cache,provider,by,default,a,link,simple,cache,error,handler,is,used,who,throws,any,exception,as,is;public,void,set,error,handler,cache,error,handler,error,handler,this,error,handler,error,handler
AbstractCacheInvoker -> public void setErrorHandler(CacheErrorHandler errorHandler);1470831642;Set the {@link CacheErrorHandler} instance to use to handle errors_thrown by the cache provider. By default, a {@link SimpleCacheErrorHandler}_is used who throws any exception as is.;public void setErrorHandler(CacheErrorHandler errorHandler) {_		this.errorHandler = errorHandler__	};set,the,link,cache,error,handler,instance,to,use,to,handle,errors,thrown,by,the,cache,provider,by,default,a,link,simple,cache,error,handler,is,used,who,throws,any,exception,as,is;public,void,set,error,handler,cache,error,handler,error,handler,this,error,handler,error,handler
AbstractCacheInvoker -> public void setErrorHandler(CacheErrorHandler errorHandler);1485523053;Set the {@link CacheErrorHandler} instance to use to handle errors_thrown by the cache provider. By default, a {@link SimpleCacheErrorHandler}_is used who throws any exception as is.;public void setErrorHandler(CacheErrorHandler errorHandler) {_		this.errorHandler = errorHandler__	};set,the,link,cache,error,handler,instance,to,use,to,handle,errors,thrown,by,the,cache,provider,by,default,a,link,simple,cache,error,handler,is,used,who,throws,any,exception,as,is;public,void,set,error,handler,cache,error,handler,error,handler,this,error,handler,error,handler
AbstractCacheInvoker -> public void setErrorHandler(CacheErrorHandler errorHandler);1495868221;Set the {@link CacheErrorHandler} instance to use to handle errors_thrown by the cache provider. By default, a {@link SimpleCacheErrorHandler}_is used who throws any exception as is.;public void setErrorHandler(CacheErrorHandler errorHandler) {_		this.errorHandler = errorHandler__	};set,the,link,cache,error,handler,instance,to,use,to,handle,errors,thrown,by,the,cache,provider,by,default,a,link,simple,cache,error,handler,is,used,who,throws,any,exception,as,is;public,void,set,error,handler,cache,error,handler,error,handler,this,error,handler,error,handler
AbstractCacheInvoker -> public void setErrorHandler(CacheErrorHandler errorHandler);1496837955;Set the {@link CacheErrorHandler} instance to use to handle errors_thrown by the cache provider. By default, a {@link SimpleCacheErrorHandler}_is used who throws any exception as is.;public void setErrorHandler(CacheErrorHandler errorHandler) {_		Assert.notNull(errorHandler, "CacheErrorHandler must not be null")__		this.errorHandler = errorHandler__	};set,the,link,cache,error,handler,instance,to,use,to,handle,errors,thrown,by,the,cache,provider,by,default,a,link,simple,cache,error,handler,is,used,who,throws,any,exception,as,is;public,void,set,error,handler,cache,error,handler,error,handler,assert,not,null,error,handler,cache,error,handler,must,not,be,null,this,error,handler,error,handler
AbstractCacheInvoker -> public void setErrorHandler(CacheErrorHandler errorHandler);1500495740;Set the {@link CacheErrorHandler} instance to use to handle errors_thrown by the cache provider. By default, a {@link SimpleCacheErrorHandler}_is used who throws any exception as is.;public void setErrorHandler(CacheErrorHandler errorHandler) {_		Assert.notNull(errorHandler, "CacheErrorHandler must not be null")__		this.errorHandler = errorHandler__	};set,the,link,cache,error,handler,instance,to,use,to,handle,errors,thrown,by,the,cache,provider,by,default,a,link,simple,cache,error,handler,is,used,who,throws,any,exception,as,is;public,void,set,error,handler,cache,error,handler,error,handler,assert,not,null,error,handler,cache,error,handler,must,not,be,null,this,error,handler,error,handler
AbstractCacheInvoker -> public void setErrorHandler(CacheErrorHandler errorHandler);1531589372;Set the {@link CacheErrorHandler} instance to use to handle errors_thrown by the cache provider. By default, a {@link SimpleCacheErrorHandler}_is used who throws any exception as is.;public void setErrorHandler(CacheErrorHandler errorHandler) {_		this.errorHandler = SingletonSupplier.of(errorHandler)__	};set,the,link,cache,error,handler,instance,to,use,to,handle,errors,thrown,by,the,cache,provider,by,default,a,link,simple,cache,error,handler,is,used,who,throws,any,exception,as,is;public,void,set,error,handler,cache,error,handler,error,handler,this,error,handler,singleton,supplier,of,error,handler
AbstractCacheInvoker -> @Nullable 	protected Cache.ValueWrapper doGet(Cache cache, Object key);1495868221;Execute {@link Cache#get(Object)} on the specified {@link Cache} and_invoke the error handler if an exception occurs. Return {@code null}_if the handler does not throw any exception, which simulates a cache_miss in case of error._@see Cache#get(Object);@Nullable_	protected Cache.ValueWrapper doGet(Cache cache, Object key) {_		try {_			return cache.get(key)__		}_		catch (RuntimeException ex) {_			getErrorHandler().handleCacheGetError(ex, cache, key)__			return null_  _		}_	};execute,link,cache,get,object,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs,return,code,null,if,the,handler,does,not,throw,any,exception,which,simulates,a,cache,miss,in,case,of,error,see,cache,get,object;nullable,protected,cache,value,wrapper,do,get,cache,cache,object,key,try,return,cache,get,key,catch,runtime,exception,ex,get,error,handler,handle,cache,get,error,ex,cache,key,return,null
AbstractCacheInvoker -> @Nullable 	protected Cache.ValueWrapper doGet(Cache cache, Object key);1496837955;Execute {@link Cache#get(Object)} on the specified {@link Cache} and_invoke the error handler if an exception occurs. Return {@code null}_if the handler does not throw any exception, which simulates a cache_miss in case of error._@see Cache#get(Object);@Nullable_	protected Cache.ValueWrapper doGet(Cache cache, Object key) {_		try {_			return cache.get(key)__		}_		catch (RuntimeException ex) {_			getErrorHandler().handleCacheGetError(ex, cache, key)__			return null_  _		}_	};execute,link,cache,get,object,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs,return,code,null,if,the,handler,does,not,throw,any,exception,which,simulates,a,cache,miss,in,case,of,error,see,cache,get,object;nullable,protected,cache,value,wrapper,do,get,cache,cache,object,key,try,return,cache,get,key,catch,runtime,exception,ex,get,error,handler,handle,cache,get,error,ex,cache,key,return,null
AbstractCacheInvoker -> @Nullable 	protected Cache.ValueWrapper doGet(Cache cache, Object key);1500495740;Execute {@link Cache#get(Object)} on the specified {@link Cache} and_invoke the error handler if an exception occurs. Return {@code null}_if the handler does not throw any exception, which simulates a cache_miss in case of error._@see Cache#get(Object);@Nullable_	protected Cache.ValueWrapper doGet(Cache cache, Object key) {_		try {_			return cache.get(key)__		}_		catch (RuntimeException ex) {_			getErrorHandler().handleCacheGetError(ex, cache, key)__			return null_  _		}_	};execute,link,cache,get,object,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs,return,code,null,if,the,handler,does,not,throw,any,exception,which,simulates,a,cache,miss,in,case,of,error,see,cache,get,object;nullable,protected,cache,value,wrapper,do,get,cache,cache,object,key,try,return,cache,get,key,catch,runtime,exception,ex,get,error,handler,handle,cache,get,error,ex,cache,key,return,null
AbstractCacheInvoker -> @Nullable 	protected Cache.ValueWrapper doGet(Cache cache, Object key);1531589372;Execute {@link Cache#get(Object)} on the specified {@link Cache} and_invoke the error handler if an exception occurs. Return {@code null}_if the handler does not throw any exception, which simulates a cache_miss in case of error._@see Cache#get(Object);@Nullable_	protected Cache.ValueWrapper doGet(Cache cache, Object key) {_		try {_			return cache.get(key)__		}_		catch (RuntimeException ex) {_			getErrorHandler().handleCacheGetError(ex, cache, key)__			return null_  _		}_	};execute,link,cache,get,object,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs,return,code,null,if,the,handler,does,not,throw,any,exception,which,simulates,a,cache,miss,in,case,of,error,see,cache,get,object;nullable,protected,cache,value,wrapper,do,get,cache,cache,object,key,try,return,cache,get,key,catch,runtime,exception,ex,get,error,handler,handle,cache,get,error,ex,cache,key,return,null
AbstractCacheInvoker -> protected Cache.ValueWrapper doGet(Cache cache, Object key);1400596774;Execute {@link Cache#get(Object)} on the specified {@link Cache} and_invoke the error handler if an exception occurs. Return {@code null}_if the handler does not throw any exception, which simulates a cache_miss in case of error._@see Cache#get(Object);protected Cache.ValueWrapper doGet(Cache cache, Object key) {_		try {_			return cache.get(key)__		}_		catch (RuntimeException e) {_			getErrorHandler().handleCacheGetError(e, cache, key)__			return null_ _		}_	};execute,link,cache,get,object,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs,return,code,null,if,the,handler,does,not,throw,any,exception,which,simulates,a,cache,miss,in,case,of,error,see,cache,get,object;protected,cache,value,wrapper,do,get,cache,cache,object,key,try,return,cache,get,key,catch,runtime,exception,e,get,error,handler,handle,cache,get,error,e,cache,key,return,null
AbstractCacheInvoker -> protected Cache.ValueWrapper doGet(Cache cache, Object key);1470831642;Execute {@link Cache#get(Object)} on the specified {@link Cache} and_invoke the error handler if an exception occurs. Return {@code null}_if the handler does not throw any exception, which simulates a cache_miss in case of error._@see Cache#get(Object);protected Cache.ValueWrapper doGet(Cache cache, Object key) {_		try {_			return cache.get(key)__		}_		catch (RuntimeException ex) {_			getErrorHandler().handleCacheGetError(ex, cache, key)__			return null_  _		}_	};execute,link,cache,get,object,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs,return,code,null,if,the,handler,does,not,throw,any,exception,which,simulates,a,cache,miss,in,case,of,error,see,cache,get,object;protected,cache,value,wrapper,do,get,cache,cache,object,key,try,return,cache,get,key,catch,runtime,exception,ex,get,error,handler,handle,cache,get,error,ex,cache,key,return,null
AbstractCacheInvoker -> protected Cache.ValueWrapper doGet(Cache cache, Object key);1485523053;Execute {@link Cache#get(Object)} on the specified {@link Cache} and_invoke the error handler if an exception occurs. Return {@code null}_if the handler does not throw any exception, which simulates a cache_miss in case of error._@see Cache#get(Object);protected Cache.ValueWrapper doGet(Cache cache, Object key) {_		try {_			return cache.get(key)__		}_		catch (RuntimeException ex) {_			getErrorHandler().handleCacheGetError(ex, cache, key)__			return null_  _		}_	};execute,link,cache,get,object,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs,return,code,null,if,the,handler,does,not,throw,any,exception,which,simulates,a,cache,miss,in,case,of,error,see,cache,get,object;protected,cache,value,wrapper,do,get,cache,cache,object,key,try,return,cache,get,key,catch,runtime,exception,ex,get,error,handler,handle,cache,get,error,ex,cache,key,return,null
AbstractCacheInvoker -> protected void doClear(Cache cache);1400596774;Execute {@link Cache#clear()} on the specified {@link Cache} and_invoke the error handler if an exception occurs.;protected void doClear(Cache cache) {_		try {_			cache.clear()__		}_		catch (RuntimeException e) {_			getErrorHandler().handleCacheClearError(e, cache)__		}_	};execute,link,cache,clear,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs;protected,void,do,clear,cache,cache,try,cache,clear,catch,runtime,exception,e,get,error,handler,handle,cache,clear,error,e,cache
AbstractCacheInvoker -> protected void doClear(Cache cache);1470831642;Execute {@link Cache#clear()} on the specified {@link Cache} and_invoke the error handler if an exception occurs.;protected void doClear(Cache cache) {_		try {_			cache.clear()__		}_		catch (RuntimeException ex) {_			getErrorHandler().handleCacheClearError(ex, cache)__		}_	};execute,link,cache,clear,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs;protected,void,do,clear,cache,cache,try,cache,clear,catch,runtime,exception,ex,get,error,handler,handle,cache,clear,error,ex,cache
AbstractCacheInvoker -> protected void doClear(Cache cache);1485523053;Execute {@link Cache#clear()} on the specified {@link Cache} and_invoke the error handler if an exception occurs.;protected void doClear(Cache cache) {_		try {_			cache.clear()__		}_		catch (RuntimeException ex) {_			getErrorHandler().handleCacheClearError(ex, cache)__		}_	};execute,link,cache,clear,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs;protected,void,do,clear,cache,cache,try,cache,clear,catch,runtime,exception,ex,get,error,handler,handle,cache,clear,error,ex,cache
AbstractCacheInvoker -> protected void doClear(Cache cache);1495868221;Execute {@link Cache#clear()} on the specified {@link Cache} and_invoke the error handler if an exception occurs.;protected void doClear(Cache cache) {_		try {_			cache.clear()__		}_		catch (RuntimeException ex) {_			getErrorHandler().handleCacheClearError(ex, cache)__		}_	};execute,link,cache,clear,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs;protected,void,do,clear,cache,cache,try,cache,clear,catch,runtime,exception,ex,get,error,handler,handle,cache,clear,error,ex,cache
AbstractCacheInvoker -> protected void doClear(Cache cache);1496837955;Execute {@link Cache#clear()} on the specified {@link Cache} and_invoke the error handler if an exception occurs.;protected void doClear(Cache cache) {_		try {_			cache.clear()__		}_		catch (RuntimeException ex) {_			getErrorHandler().handleCacheClearError(ex, cache)__		}_	};execute,link,cache,clear,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs;protected,void,do,clear,cache,cache,try,cache,clear,catch,runtime,exception,ex,get,error,handler,handle,cache,clear,error,ex,cache
AbstractCacheInvoker -> protected void doClear(Cache cache);1500495740;Execute {@link Cache#clear()} on the specified {@link Cache} and_invoke the error handler if an exception occurs.;protected void doClear(Cache cache) {_		try {_			cache.clear()__		}_		catch (RuntimeException ex) {_			getErrorHandler().handleCacheClearError(ex, cache)__		}_	};execute,link,cache,clear,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs;protected,void,do,clear,cache,cache,try,cache,clear,catch,runtime,exception,ex,get,error,handler,handle,cache,clear,error,ex,cache
AbstractCacheInvoker -> protected void doClear(Cache cache);1531589372;Execute {@link Cache#clear()} on the specified {@link Cache} and_invoke the error handler if an exception occurs.;protected void doClear(Cache cache) {_		try {_			cache.clear()__		}_		catch (RuntimeException ex) {_			getErrorHandler().handleCacheClearError(ex, cache)__		}_	};execute,link,cache,clear,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs;protected,void,do,clear,cache,cache,try,cache,clear,catch,runtime,exception,ex,get,error,handler,handle,cache,clear,error,ex,cache
AbstractCacheInvoker -> protected void doPut(Cache cache, Object key, Object result);1400596774;Execute {@link Cache#put(Object, Object)} on the specified {@link Cache}_and invoke the error handler if an exception occurs.;protected void doPut(Cache cache, Object key, Object result) {_		try {_			cache.put(key, result)__		}_		catch (RuntimeException e) {_			getErrorHandler().handleCachePutError(e, cache, key, result)__		}_	};execute,link,cache,put,object,object,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs;protected,void,do,put,cache,cache,object,key,object,result,try,cache,put,key,result,catch,runtime,exception,e,get,error,handler,handle,cache,put,error,e,cache,key,result
AbstractCacheInvoker -> protected void doPut(Cache cache, Object key, Object result);1470831642;Execute {@link Cache#put(Object, Object)} on the specified {@link Cache}_and invoke the error handler if an exception occurs.;protected void doPut(Cache cache, Object key, Object result) {_		try {_			cache.put(key, result)__		}_		catch (RuntimeException ex) {_			getErrorHandler().handleCachePutError(ex, cache, key, result)__		}_	};execute,link,cache,put,object,object,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs;protected,void,do,put,cache,cache,object,key,object,result,try,cache,put,key,result,catch,runtime,exception,ex,get,error,handler,handle,cache,put,error,ex,cache,key,result
AbstractCacheInvoker -> protected void doPut(Cache cache, Object key, Object result);1485523053;Execute {@link Cache#put(Object, Object)} on the specified {@link Cache}_and invoke the error handler if an exception occurs.;protected void doPut(Cache cache, Object key, Object result) {_		try {_			cache.put(key, result)__		}_		catch (RuntimeException ex) {_			getErrorHandler().handleCachePutError(ex, cache, key, result)__		}_	};execute,link,cache,put,object,object,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs;protected,void,do,put,cache,cache,object,key,object,result,try,cache,put,key,result,catch,runtime,exception,ex,get,error,handler,handle,cache,put,error,ex,cache,key,result
AbstractCacheInvoker -> protected void doPut(Cache cache, Object key, Object result);1495868221;Execute {@link Cache#put(Object, Object)} on the specified {@link Cache}_and invoke the error handler if an exception occurs.;protected void doPut(Cache cache, Object key, Object result) {_		try {_			cache.put(key, result)__		}_		catch (RuntimeException ex) {_			getErrorHandler().handleCachePutError(ex, cache, key, result)__		}_	};execute,link,cache,put,object,object,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs;protected,void,do,put,cache,cache,object,key,object,result,try,cache,put,key,result,catch,runtime,exception,ex,get,error,handler,handle,cache,put,error,ex,cache,key,result
AbstractCacheInvoker -> public CacheErrorHandler getErrorHandler();1400596774;Return the {@link CacheErrorHandler} to use.;public CacheErrorHandler getErrorHandler() {_		return this.errorHandler__	};return,the,link,cache,error,handler,to,use;public,cache,error,handler,get,error,handler,return,this,error,handler
AbstractCacheInvoker -> public CacheErrorHandler getErrorHandler();1470831642;Return the {@link CacheErrorHandler} to use.;public CacheErrorHandler getErrorHandler() {_		return this.errorHandler__	};return,the,link,cache,error,handler,to,use;public,cache,error,handler,get,error,handler,return,this,error,handler
AbstractCacheInvoker -> public CacheErrorHandler getErrorHandler();1485523053;Return the {@link CacheErrorHandler} to use.;public CacheErrorHandler getErrorHandler() {_		return this.errorHandler__	};return,the,link,cache,error,handler,to,use;public,cache,error,handler,get,error,handler,return,this,error,handler
AbstractCacheInvoker -> public CacheErrorHandler getErrorHandler();1495868221;Return the {@link CacheErrorHandler} to use.;public CacheErrorHandler getErrorHandler() {_		return this.errorHandler__	};return,the,link,cache,error,handler,to,use;public,cache,error,handler,get,error,handler,return,this,error,handler
AbstractCacheInvoker -> public CacheErrorHandler getErrorHandler();1496837955;Return the {@link CacheErrorHandler} to use.;public CacheErrorHandler getErrorHandler() {_		return this.errorHandler__	};return,the,link,cache,error,handler,to,use;public,cache,error,handler,get,error,handler,return,this,error,handler
AbstractCacheInvoker -> public CacheErrorHandler getErrorHandler();1500495740;Return the {@link CacheErrorHandler} to use.;public CacheErrorHandler getErrorHandler() {_		return this.errorHandler__	};return,the,link,cache,error,handler,to,use;public,cache,error,handler,get,error,handler,return,this,error,handler
AbstractCacheInvoker -> public CacheErrorHandler getErrorHandler();1531589372;Return the {@link CacheErrorHandler} to use.;public CacheErrorHandler getErrorHandler() {_		return this.errorHandler.obtain()__	};return,the,link,cache,error,handler,to,use;public,cache,error,handler,get,error,handler,return,this,error,handler,obtain
AbstractCacheInvoker -> protected void doEvict(Cache cache, Object key);1400596774;Execute {@link Cache#evict(Object)} on the specified {@link Cache} and_invoke the error handler if an exception occurs.;protected void doEvict(Cache cache, Object key) {_		try {_			cache.evict(key)__		}_		catch (RuntimeException e) {_			getErrorHandler().handleCacheEvictError(e, cache, key)__		}_	};execute,link,cache,evict,object,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs;protected,void,do,evict,cache,cache,object,key,try,cache,evict,key,catch,runtime,exception,e,get,error,handler,handle,cache,evict,error,e,cache,key
AbstractCacheInvoker -> protected void doEvict(Cache cache, Object key);1470831642;Execute {@link Cache#evict(Object)} on the specified {@link Cache} and_invoke the error handler if an exception occurs.;protected void doEvict(Cache cache, Object key) {_		try {_			cache.evict(key)__		}_		catch (RuntimeException ex) {_			getErrorHandler().handleCacheEvictError(ex, cache, key)__		}_	};execute,link,cache,evict,object,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs;protected,void,do,evict,cache,cache,object,key,try,cache,evict,key,catch,runtime,exception,ex,get,error,handler,handle,cache,evict,error,ex,cache,key
AbstractCacheInvoker -> protected void doEvict(Cache cache, Object key);1485523053;Execute {@link Cache#evict(Object)} on the specified {@link Cache} and_invoke the error handler if an exception occurs.;protected void doEvict(Cache cache, Object key) {_		try {_			cache.evict(key)__		}_		catch (RuntimeException ex) {_			getErrorHandler().handleCacheEvictError(ex, cache, key)__		}_	};execute,link,cache,evict,object,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs;protected,void,do,evict,cache,cache,object,key,try,cache,evict,key,catch,runtime,exception,ex,get,error,handler,handle,cache,evict,error,ex,cache,key
AbstractCacheInvoker -> protected void doEvict(Cache cache, Object key);1495868221;Execute {@link Cache#evict(Object)} on the specified {@link Cache} and_invoke the error handler if an exception occurs.;protected void doEvict(Cache cache, Object key) {_		try {_			cache.evict(key)__		}_		catch (RuntimeException ex) {_			getErrorHandler().handleCacheEvictError(ex, cache, key)__		}_	};execute,link,cache,evict,object,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs;protected,void,do,evict,cache,cache,object,key,try,cache,evict,key,catch,runtime,exception,ex,get,error,handler,handle,cache,evict,error,ex,cache,key
AbstractCacheInvoker -> protected void doEvict(Cache cache, Object key);1496837955;Execute {@link Cache#evict(Object)} on the specified {@link Cache} and_invoke the error handler if an exception occurs.;protected void doEvict(Cache cache, Object key) {_		try {_			cache.evict(key)__		}_		catch (RuntimeException ex) {_			getErrorHandler().handleCacheEvictError(ex, cache, key)__		}_	};execute,link,cache,evict,object,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs;protected,void,do,evict,cache,cache,object,key,try,cache,evict,key,catch,runtime,exception,ex,get,error,handler,handle,cache,evict,error,ex,cache,key
AbstractCacheInvoker -> protected void doEvict(Cache cache, Object key);1500495740;Execute {@link Cache#evict(Object)} on the specified {@link Cache} and_invoke the error handler if an exception occurs.;protected void doEvict(Cache cache, Object key) {_		try {_			cache.evict(key)__		}_		catch (RuntimeException ex) {_			getErrorHandler().handleCacheEvictError(ex, cache, key)__		}_	};execute,link,cache,evict,object,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs;protected,void,do,evict,cache,cache,object,key,try,cache,evict,key,catch,runtime,exception,ex,get,error,handler,handle,cache,evict,error,ex,cache,key
AbstractCacheInvoker -> protected void doEvict(Cache cache, Object key);1531589372;Execute {@link Cache#evict(Object)} on the specified {@link Cache} and_invoke the error handler if an exception occurs.;protected void doEvict(Cache cache, Object key) {_		try {_			cache.evict(key)__		}_		catch (RuntimeException ex) {_			getErrorHandler().handleCacheEvictError(ex, cache, key)__		}_	};execute,link,cache,evict,object,on,the,specified,link,cache,and,invoke,the,error,handler,if,an,exception,occurs;protected,void,do,evict,cache,cache,object,key,try,cache,evict,key,catch,runtime,exception,ex,get,error,handler,handle,cache,evict,error,ex,cache,key
