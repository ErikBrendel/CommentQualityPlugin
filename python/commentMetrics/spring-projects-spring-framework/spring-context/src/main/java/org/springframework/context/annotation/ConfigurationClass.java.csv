# id;timestamp;commentText;codeText;commentWords;codeWords
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy);1368068203;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param clazz the underlying {@link Class} to represent_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy) {_		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.importedBy = importedBy__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,clazz,the,underlying,link,class,to,represent,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,class,clazz,configuration,class,imported,by,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,imported,by,imported,by
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy);1368621032;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param clazz the underlying {@link Class} to represent_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy) {_		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.importedBy = importedBy__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,clazz,the,underlying,link,class,to,represent,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,class,clazz,configuration,class,imported,by,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,imported,by,imported,by
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy);1372363092;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param clazz the underlying {@link Class} to represent_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy) {_		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.importedBy = importedBy__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,clazz,the,underlying,link,class,to,represent,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,class,clazz,configuration,class,imported,by,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,imported,by,imported,by
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy);1374666015;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param clazz the underlying {@link Class} to represent_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy) {_		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.importedBy = importedBy__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,clazz,the,underlying,link,class,to,represent,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,class,clazz,configuration,class,imported,by,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,imported,by,imported,by
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy);1377562322;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param clazz the underlying {@link Class} to represent_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy) {_		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.importedBy = importedBy__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,clazz,the,underlying,link,class,to,represent,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,class,clazz,configuration,class,imported,by,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,imported,by,imported,by
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy);1377625191;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param clazz the underlying {@link Class} to represent_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy) {_		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.importedBy = importedBy__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,clazz,the,underlying,link,class,to,represent,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,class,clazz,configuration,class,imported,by,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,imported,by,imported,by
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy);1383604440;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param clazz the underlying {@link Class} to represent_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy) {_		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.importedBy = importedBy__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,clazz,the,underlying,link,class,to,represent,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,class,clazz,configuration,class,imported,by,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,imported,by,imported,by
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy);1385507683;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param clazz the underlying {@link Class} to represent_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy) {_		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.importedBy = importedBy__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,clazz,the,underlying,link,class,to,represent,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,class,clazz,configuration,class,imported,by,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,imported,by,imported,by
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy);1385978370;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param clazz the underlying {@link Class} to represent_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy) {_		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.importedBy = importedBy__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,clazz,the,underlying,link,class,to,represent,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,class,clazz,configuration,class,imported,by,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,imported,by,imported,by
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy);1398153432;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param clazz the underlying {@link Class} to represent_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy) {_		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.importedBy = importedBy__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,clazz,the,underlying,link,class,to,represent,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,class,clazz,configuration,class,imported,by,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,imported,by,imported,by
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy);1400245582;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param clazz the underlying {@link Class} to represent_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy) {_		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.importedBy.add(importedBy)__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,clazz,the,underlying,link,class,to,represent,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,class,clazz,configuration,class,imported,by,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,imported,by,add,imported,by
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy);1414616928;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param clazz the underlying {@link Class} to represent_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy) {_		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.importedBy.add(importedBy)__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,clazz,the,underlying,link,class,to,represent,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,class,clazz,configuration,class,imported,by,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,imported,by,add,imported,by
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy);1423592779;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param clazz the underlying {@link Class} to represent_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy) {_		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.importedBy.add(importedBy)__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,clazz,the,underlying,link,class,to,represent,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,class,clazz,configuration,class,imported,by,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,imported,by,add,imported,by
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy);1424886328;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param clazz the underlying {@link Class} to represent_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy) {_		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.importedBy.add(importedBy)__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,clazz,the,underlying,link,class,to,represent,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,class,clazz,configuration,class,imported,by,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,imported,by,add,imported,by
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy);1455869350;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param clazz the underlying {@link Class} to represent_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy) {_		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.getName())__		this.importedBy.add(importedBy)__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,clazz,the,underlying,link,class,to,represent,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,class,clazz,configuration,class,imported,by,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,get,name,this,imported,by,add,imported,by
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy);1467730834;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param clazz the underlying {@link Class} to represent_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy) {_		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.getName())__		this.importedBy.add(importedBy)__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,clazz,the,underlying,link,class,to,represent,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,class,clazz,configuration,class,imported,by,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,get,name,this,imported,by,add,imported,by
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy);1469657173;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param clazz the underlying {@link Class} to represent_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(Class<?> clazz, ConfigurationClass importedBy) {_		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.getName())__		this.importedBy.add(importedBy)__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,clazz,the,underlying,link,class,to,represent,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,class,clazz,configuration,class,imported,by,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,get,name,this,imported,by,add,imported,by
ConfigurationClass -> public ConfigurationClass(AnnotationMetadata metadata, String beanName);1414616928;Create a new {@link ConfigurationClass} with the given name._@param metadata the metadata for the underlying class to represent_@param beanName name of the {@code @Configuration} class bean_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(AnnotationMetadata metadata, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = metadata__		this.resource = new DescriptiveResource(metadata.getClassName())__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,the,metadata,for,the,underlying,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,annotation,metadata,metadata,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,this,resource,new,descriptive,resource,metadata,get,class,name,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(AnnotationMetadata metadata, String beanName);1423592779;Create a new {@link ConfigurationClass} with the given name._@param metadata the metadata for the underlying class to represent_@param beanName name of the {@code @Configuration} class bean_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(AnnotationMetadata metadata, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = metadata__		this.resource = new DescriptiveResource(metadata.getClassName())__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,the,metadata,for,the,underlying,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,annotation,metadata,metadata,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,this,resource,new,descriptive,resource,metadata,get,class,name,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(AnnotationMetadata metadata, String beanName);1424886328;Create a new {@link ConfigurationClass} with the given name._@param metadata the metadata for the underlying class to represent_@param beanName name of the {@code @Configuration} class bean_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(AnnotationMetadata metadata, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = metadata__		this.resource = new DescriptiveResource(metadata.getClassName())__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,the,metadata,for,the,underlying,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,annotation,metadata,metadata,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,this,resource,new,descriptive,resource,metadata,get,class,name,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(AnnotationMetadata metadata, String beanName);1455869350;Create a new {@link ConfigurationClass} with the given name._@param metadata the metadata for the underlying class to represent_@param beanName name of the {@code @Configuration} class bean_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(AnnotationMetadata metadata, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = metadata__		this.resource = new DescriptiveResource(metadata.getClassName())__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,the,metadata,for,the,underlying,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,annotation,metadata,metadata,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,this,resource,new,descriptive,resource,metadata,get,class,name,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(AnnotationMetadata metadata, String beanName);1467730834;Create a new {@link ConfigurationClass} with the given name._@param metadata the metadata for the underlying class to represent_@param beanName name of the {@code @Configuration} class bean_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(AnnotationMetadata metadata, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = metadata__		this.resource = new DescriptiveResource(metadata.getClassName())__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,the,metadata,for,the,underlying,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,annotation,metadata,metadata,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,this,resource,new,descriptive,resource,metadata,get,class,name,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(AnnotationMetadata metadata, String beanName);1469657173;Create a new {@link ConfigurationClass} with the given name._@param metadata the metadata for the underlying class to represent_@param beanName name of the {@code @Configuration} class bean_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(AnnotationMetadata metadata, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = metadata__		this.resource = new DescriptiveResource(metadata.getClassName())__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,the,metadata,for,the,underlying,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,annotation,metadata,metadata,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,this,resource,new,descriptive,resource,metadata,get,class,name,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(AnnotationMetadata metadata, String beanName);1495868221;Create a new {@link ConfigurationClass} with the given name._@param metadata the metadata for the underlying class to represent_@param beanName name of the {@code @Configuration} class bean_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(AnnotationMetadata metadata, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = metadata__		this.resource = new DescriptiveResource(metadata.getClassName())__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,the,metadata,for,the,underlying,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,annotation,metadata,metadata,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,this,resource,new,descriptive,resource,metadata,get,class,name,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(AnnotationMetadata metadata, String beanName);1496263893;Create a new {@link ConfigurationClass} with the given name._@param metadata the metadata for the underlying class to represent_@param beanName name of the {@code @Configuration} class bean_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(AnnotationMetadata metadata, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = metadata__		this.resource = new DescriptiveResource(metadata.getClassName())__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,the,metadata,for,the,underlying,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,annotation,metadata,metadata,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,this,resource,new,descriptive,resource,metadata,get,class,name,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(AnnotationMetadata metadata, String beanName);1496837955;Create a new {@link ConfigurationClass} with the given name._@param metadata the metadata for the underlying class to represent_@param beanName name of the {@code @Configuration} class bean_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(AnnotationMetadata metadata, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = metadata__		this.resource = new DescriptiveResource(metadata.getClassName())__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,the,metadata,for,the,underlying,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,annotation,metadata,metadata,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,this,resource,new,descriptive,resource,metadata,get,class,name,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(AnnotationMetadata metadata, String beanName);1500495740;Create a new {@link ConfigurationClass} with the given name._@param metadata the metadata for the underlying class to represent_@param beanName name of the {@code @Configuration} class bean_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(AnnotationMetadata metadata, String beanName) {_		Assert.notNull(beanName, "Bean name must not be null")__		this.metadata = metadata__		this.resource = new DescriptiveResource(metadata.getClassName())__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,the,metadata,for,the,underlying,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,annotation,metadata,metadata,string,bean,name,assert,not,null,bean,name,bean,name,must,not,be,null,this,metadata,metadata,this,resource,new,descriptive,resource,metadata,get,class,name,this,bean,name,bean,name
ConfigurationClass -> public Set<ConfigurationClass> getImportedBy();1400245582;Return the configuration classes that imported this class,_or an empty Set if this configuration was not imported._@since 4.0.5_@see #isImported();public Set<ConfigurationClass> getImportedBy() {_		return this.importedBy__	};return,the,configuration,classes,that,imported,this,class,or,an,empty,set,if,this,configuration,was,not,imported,since,4,0,5,see,is,imported;public,set,configuration,class,get,imported,by,return,this,imported,by
ConfigurationClass -> public Set<ConfigurationClass> getImportedBy();1414616928;Return the configuration classes that imported this class,_or an empty Set if this configuration was not imported._@since 4.0.5_@see #isImported();public Set<ConfigurationClass> getImportedBy() {_		return this.importedBy__	};return,the,configuration,classes,that,imported,this,class,or,an,empty,set,if,this,configuration,was,not,imported,since,4,0,5,see,is,imported;public,set,configuration,class,get,imported,by,return,this,imported,by
ConfigurationClass -> public Set<ConfigurationClass> getImportedBy();1423592779;Return the configuration classes that imported this class,_or an empty Set if this configuration was not imported._@since 4.0.5_@see #isImported();public Set<ConfigurationClass> getImportedBy() {_		return this.importedBy__	};return,the,configuration,classes,that,imported,this,class,or,an,empty,set,if,this,configuration,was,not,imported,since,4,0,5,see,is,imported;public,set,configuration,class,get,imported,by,return,this,imported,by
ConfigurationClass -> public Set<ConfigurationClass> getImportedBy();1424886328;Return the configuration classes that imported this class,_or an empty Set if this configuration was not imported._@since 4.0.5_@see #isImported();public Set<ConfigurationClass> getImportedBy() {_		return this.importedBy__	};return,the,configuration,classes,that,imported,this,class,or,an,empty,set,if,this,configuration,was,not,imported,since,4,0,5,see,is,imported;public,set,configuration,class,get,imported,by,return,this,imported,by
ConfigurationClass -> public Set<ConfigurationClass> getImportedBy();1455869350;Return the configuration classes that imported this class,_or an empty Set if this configuration was not imported._@since 4.0.5_@see #isImported();public Set<ConfigurationClass> getImportedBy() {_		return this.importedBy__	};return,the,configuration,classes,that,imported,this,class,or,an,empty,set,if,this,configuration,was,not,imported,since,4,0,5,see,is,imported;public,set,configuration,class,get,imported,by,return,this,imported,by
ConfigurationClass -> public Set<ConfigurationClass> getImportedBy();1467730834;Return the configuration classes that imported this class,_or an empty Set if this configuration was not imported._@since 4.0.5_@see #isImported();public Set<ConfigurationClass> getImportedBy() {_		return this.importedBy__	};return,the,configuration,classes,that,imported,this,class,or,an,empty,set,if,this,configuration,was,not,imported,since,4,0,5,see,is,imported;public,set,configuration,class,get,imported,by,return,this,imported,by
ConfigurationClass -> public Set<ConfigurationClass> getImportedBy();1469657173;Return the configuration classes that imported this class,_or an empty Set if this configuration was not imported._@since 4.0.5_@see #isImported();public Set<ConfigurationClass> getImportedBy() {_		return this.importedBy__	};return,the,configuration,classes,that,imported,this,class,or,an,empty,set,if,this,configuration,was,not,imported,since,4,0,5,see,is,imported;public,set,configuration,class,get,imported,by,return,this,imported,by
ConfigurationClass -> public Set<ConfigurationClass> getImportedBy();1495868221;Return the configuration classes that imported this class,_or an empty Set if this configuration was not imported._@since 4.0.5_@see #isImported();public Set<ConfigurationClass> getImportedBy() {_		return this.importedBy__	};return,the,configuration,classes,that,imported,this,class,or,an,empty,set,if,this,configuration,was,not,imported,since,4,0,5,see,is,imported;public,set,configuration,class,get,imported,by,return,this,imported,by
ConfigurationClass -> public Set<ConfigurationClass> getImportedBy();1496263893;Return the configuration classes that imported this class,_or an empty Set if this configuration was not imported._@since 4.0.5_@see #isImported();public Set<ConfigurationClass> getImportedBy() {_		return this.importedBy__	};return,the,configuration,classes,that,imported,this,class,or,an,empty,set,if,this,configuration,was,not,imported,since,4,0,5,see,is,imported;public,set,configuration,class,get,imported,by,return,this,imported,by
ConfigurationClass -> public Set<ConfigurationClass> getImportedBy();1496837955;Return the configuration classes that imported this class,_or an empty Set if this configuration was not imported._@since 4.0.5_@see #isImported();public Set<ConfigurationClass> getImportedBy() {_		return this.importedBy__	};return,the,configuration,classes,that,imported,this,class,or,an,empty,set,if,this,configuration,was,not,imported,since,4,0,5,see,is,imported;public,set,configuration,class,get,imported,by,return,this,imported,by
ConfigurationClass -> public Set<ConfigurationClass> getImportedBy();1500495740;Return the configuration classes that imported this class,_or an empty Set if this configuration was not imported._@since 4.0.5_@see #isImported();public Set<ConfigurationClass> getImportedBy() {_		return this.importedBy__	};return,the,configuration,classes,that,imported,this,class,or,an,empty,set,if,this,configuration,was,not,imported,since,4,0,5,see,is,imported;public,set,configuration,class,get,imported,by,return,this,imported,by
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, @Nullable ConfigurationClass importedBy);1495868221;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param clazz the underlying {@link Class} to represent_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(Class<?> clazz, @Nullable ConfigurationClass importedBy) {_		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.getName())__		this.importedBy.add(importedBy)__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,clazz,the,underlying,link,class,to,represent,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,class,clazz,nullable,configuration,class,imported,by,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,get,name,this,imported,by,add,imported,by
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, @Nullable ConfigurationClass importedBy);1496263893;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param clazz the underlying {@link Class} to represent_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(Class<?> clazz, @Nullable ConfigurationClass importedBy) {_		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.getName())__		this.importedBy.add(importedBy)__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,clazz,the,underlying,link,class,to,represent,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,class,clazz,nullable,configuration,class,imported,by,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,get,name,this,imported,by,add,imported,by
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, @Nullable ConfigurationClass importedBy);1496837955;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param clazz the underlying {@link Class} to represent_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(Class<?> clazz, @Nullable ConfigurationClass importedBy) {_		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.getName())__		this.importedBy.add(importedBy)__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,clazz,the,underlying,link,class,to,represent,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,class,clazz,nullable,configuration,class,imported,by,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,get,name,this,imported,by,add,imported,by
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, @Nullable ConfigurationClass importedBy);1500495740;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param clazz the underlying {@link Class} to represent_@param importedBy the configuration class importing this one (or {@code null})_@since 3.1.1;public ConfigurationClass(Class<?> clazz, @Nullable ConfigurationClass importedBy) {_		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.getName())__		this.importedBy.add(importedBy)__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,clazz,the,underlying,link,class,to,represent,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,class,clazz,nullable,configuration,class,imported,by,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,get,name,this,imported,by,add,imported,by
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy);1368068203;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if importedBy is not {@code null})._@param metadataReader reader used to parse the underlying {@link Class}_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy) {_		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.importedBy = importedBy__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,by,is,not,code,null,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,metadata,reader,metadata,reader,configuration,class,imported,by,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,imported,by,imported,by
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy);1368621032;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if importedBy is not {@code null})._@param metadataReader reader used to parse the underlying {@link Class}_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy) {_		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.importedBy = importedBy__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,by,is,not,code,null,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,metadata,reader,metadata,reader,configuration,class,imported,by,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,imported,by,imported,by
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy);1372363092;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if importedBy is not {@code null})._@param metadataReader reader used to parse the underlying {@link Class}_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy) {_		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.importedBy = importedBy__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,by,is,not,code,null,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,metadata,reader,metadata,reader,configuration,class,imported,by,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,imported,by,imported,by
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy);1374666015;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if importedBy is not {@code null})._@param metadataReader reader used to parse the underlying {@link Class}_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy) {_		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.importedBy = importedBy__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,by,is,not,code,null,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,metadata,reader,metadata,reader,configuration,class,imported,by,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,imported,by,imported,by
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy);1377562322;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if importedBy is not {@code null})._@param metadataReader reader used to parse the underlying {@link Class}_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy) {_		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.importedBy = importedBy__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,by,is,not,code,null,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,metadata,reader,metadata,reader,configuration,class,imported,by,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,imported,by,imported,by
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy);1377625191;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if importedBy is not {@code null})._@param metadataReader reader used to parse the underlying {@link Class}_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy) {_		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.importedBy = importedBy__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,by,is,not,code,null,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,metadata,reader,metadata,reader,configuration,class,imported,by,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,imported,by,imported,by
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy);1383604440;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if importedBy is not {@code null})._@param metadataReader reader used to parse the underlying {@link Class}_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy) {_		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.importedBy = importedBy__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,by,is,not,code,null,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,metadata,reader,metadata,reader,configuration,class,imported,by,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,imported,by,imported,by
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy);1385507683;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if importedBy is not {@code null})._@param metadataReader reader used to parse the underlying {@link Class}_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy) {_		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.importedBy = importedBy__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,by,is,not,code,null,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,metadata,reader,metadata,reader,configuration,class,imported,by,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,imported,by,imported,by
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy);1385978370;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if importedBy is not {@code null})._@param metadataReader reader used to parse the underlying {@link Class}_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy) {_		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.importedBy = importedBy__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,by,is,not,code,null,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,metadata,reader,metadata,reader,configuration,class,imported,by,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,imported,by,imported,by
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy);1398153432;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if importedBy is not {@code null})._@param metadataReader reader used to parse the underlying {@link Class}_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy) {_		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.importedBy = importedBy__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,by,is,not,code,null,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,metadata,reader,metadata,reader,configuration,class,imported,by,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,imported,by,imported,by
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy);1400245582;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if importedBy is not {@code null})._@param metadataReader reader used to parse the underlying {@link Class}_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy) {_		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.importedBy.add(importedBy)__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,by,is,not,code,null,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,metadata,reader,metadata,reader,configuration,class,imported,by,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,imported,by,add,imported,by
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy);1414616928;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if importedBy is not {@code null})._@param metadataReader reader used to parse the underlying {@link Class}_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy) {_		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.importedBy.add(importedBy)__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,by,is,not,code,null,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,metadata,reader,metadata,reader,configuration,class,imported,by,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,imported,by,add,imported,by
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy);1423592779;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if importedBy is not {@code null})._@param metadataReader reader used to parse the underlying {@link Class}_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy) {_		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.importedBy.add(importedBy)__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,by,is,not,code,null,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,metadata,reader,metadata,reader,configuration,class,imported,by,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,imported,by,add,imported,by
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy);1424886328;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if importedBy is not {@code null})._@param metadataReader reader used to parse the underlying {@link Class}_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy) {_		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.importedBy.add(importedBy)__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,by,is,not,code,null,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,metadata,reader,metadata,reader,configuration,class,imported,by,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,imported,by,add,imported,by
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy);1455869350;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if importedBy is not {@code null})._@param metadataReader reader used to parse the underlying {@link Class}_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy) {_		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.importedBy.add(importedBy)__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,by,is,not,code,null,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,metadata,reader,metadata,reader,configuration,class,imported,by,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,imported,by,add,imported,by
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy);1467730834;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if importedBy is not {@code null})._@param metadataReader reader used to parse the underlying {@link Class}_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy) {_		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.importedBy.add(importedBy)__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,by,is,not,code,null,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,metadata,reader,metadata,reader,configuration,class,imported,by,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,imported,by,add,imported,by
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy);1469657173;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if importedBy is not {@code null})._@param metadataReader reader used to parse the underlying {@link Class}_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(MetadataReader metadataReader, ConfigurationClass importedBy) {_		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.importedBy.add(importedBy)__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,by,is,not,code,null,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,metadata,reader,metadata,reader,configuration,class,imported,by,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,imported,by,add,imported,by
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, @Nullable ConfigurationClass importedBy);1495868221;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if importedBy is not {@code null})._@param metadataReader reader used to parse the underlying {@link Class}_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(MetadataReader metadataReader, @Nullable ConfigurationClass importedBy) {_		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.importedBy.add(importedBy)__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,by,is,not,code,null,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,metadata,reader,metadata,reader,nullable,configuration,class,imported,by,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,imported,by,add,imported,by
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, @Nullable ConfigurationClass importedBy);1496263893;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if importedBy is not {@code null})._@param metadataReader reader used to parse the underlying {@link Class}_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(MetadataReader metadataReader, @Nullable ConfigurationClass importedBy) {_		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.importedBy.add(importedBy)__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,by,is,not,code,null,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,metadata,reader,metadata,reader,nullable,configuration,class,imported,by,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,imported,by,add,imported,by
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, @Nullable ConfigurationClass importedBy);1496837955;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if importedBy is not {@code null})._@param metadataReader reader used to parse the underlying {@link Class}_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(MetadataReader metadataReader, @Nullable ConfigurationClass importedBy) {_		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.importedBy.add(importedBy)__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,by,is,not,code,null,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,metadata,reader,metadata,reader,nullable,configuration,class,imported,by,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,imported,by,add,imported,by
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, @Nullable ConfigurationClass importedBy);1500495740;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if importedBy is not {@code null})._@param metadataReader reader used to parse the underlying {@link Class}_@param importedBy the configuration class importing this one or {@code null}_@since 3.1.1;public ConfigurationClass(MetadataReader metadataReader, @Nullable ConfigurationClass importedBy) {_		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.importedBy.add(importedBy)__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,by,is,not,code,null,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,imported,by,the,configuration,class,importing,this,one,or,code,null,since,3,1,1;public,configuration,class,metadata,reader,metadata,reader,nullable,configuration,class,imported,by,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,imported,by,add,imported,by
ConfigurationClass -> public boolean isImported();1329142650;Return whether this configuration class was registered via @{@link Import} or_automatically registered due to being nested within another configuration class._@since 3.1.1;public boolean isImported() {_		return this.imported__	};return,whether,this,configuration,class,was,registered,via,link,import,or,automatically,registered,due,to,being,nested,within,another,configuration,class,since,3,1,1;public,boolean,is,imported,return,this,imported
ConfigurationClass -> public boolean isImported();1356735495;Return whether this configuration class was registered via @{@link Import} or_automatically registered due to being nested within another configuration class._@since 3.1.1;public boolean isImported() {_		return this.imported__	};return,whether,this,configuration,class,was,registered,via,link,import,or,automatically,registered,due,to,being,nested,within,another,configuration,class,since,3,1,1;public,boolean,is,imported,return,this,imported
ConfigurationClass -> public boolean isImported();1366717765;Return whether this configuration class was registered via @{@link Import} or_automatically registered due to being nested within another configuration class._@since 3.1.1;public boolean isImported() {_		return this.imported__	};return,whether,this,configuration,class,was,registered,via,link,import,or,automatically,registered,due,to,being,nested,within,another,configuration,class,since,3,1,1;public,boolean,is,imported,return,this,imported
ConfigurationClass -> public boolean isImported();1368068203;Return whether this configuration class was registered via @{@link Import} or_automatically registered due to being nested within another configuration class._@since 3.1.1_@see #getImportedBy();public boolean isImported() {_		return this.importedBy != null__	};return,whether,this,configuration,class,was,registered,via,link,import,or,automatically,registered,due,to,being,nested,within,another,configuration,class,since,3,1,1,see,get,imported,by;public,boolean,is,imported,return,this,imported,by,null
ConfigurationClass -> public boolean isImported();1368621032;Return whether this configuration class was registered via @{@link Import} or_automatically registered due to being nested within another configuration class._@since 3.1.1_@see #getImportedBy();public boolean isImported() {_		return this.importedBy != null__	};return,whether,this,configuration,class,was,registered,via,link,import,or,automatically,registered,due,to,being,nested,within,another,configuration,class,since,3,1,1,see,get,imported,by;public,boolean,is,imported,return,this,imported,by,null
ConfigurationClass -> public boolean isImported();1372363092;Return whether this configuration class was registered via @{@link Import} or_automatically registered due to being nested within another configuration class._@since 3.1.1_@see #getImportedBy();public boolean isImported() {_		return this.importedBy != null__	};return,whether,this,configuration,class,was,registered,via,link,import,or,automatically,registered,due,to,being,nested,within,another,configuration,class,since,3,1,1,see,get,imported,by;public,boolean,is,imported,return,this,imported,by,null
ConfigurationClass -> public boolean isImported();1374666015;Return whether this configuration class was registered via @{@link Import} or_automatically registered due to being nested within another configuration class._@since 3.1.1_@see #getImportedBy();public boolean isImported() {_		return (this.importedBy != null)__	};return,whether,this,configuration,class,was,registered,via,link,import,or,automatically,registered,due,to,being,nested,within,another,configuration,class,since,3,1,1,see,get,imported,by;public,boolean,is,imported,return,this,imported,by,null
ConfigurationClass -> public boolean isImported();1377562322;Return whether this configuration class was registered via @{@link Import} or_automatically registered due to being nested within another configuration class._@since 3.1.1_@see #getImportedBy();public boolean isImported() {_		return (this.importedBy != null)__	};return,whether,this,configuration,class,was,registered,via,link,import,or,automatically,registered,due,to,being,nested,within,another,configuration,class,since,3,1,1,see,get,imported,by;public,boolean,is,imported,return,this,imported,by,null
ConfigurationClass -> public boolean isImported();1377625191;Return whether this configuration class was registered via @{@link Import} or_automatically registered due to being nested within another configuration class._@since 3.1.1_@see #getImportedBy();public boolean isImported() {_		return (this.importedBy != null)__	};return,whether,this,configuration,class,was,registered,via,link,import,or,automatically,registered,due,to,being,nested,within,another,configuration,class,since,3,1,1,see,get,imported,by;public,boolean,is,imported,return,this,imported,by,null
ConfigurationClass -> public boolean isImported();1383604440;Return whether this configuration class was registered via @{@link Import} or_automatically registered due to being nested within another configuration class._@since 3.1.1_@see #getImportedBy();public boolean isImported() {_		return (this.importedBy != null)__	};return,whether,this,configuration,class,was,registered,via,link,import,or,automatically,registered,due,to,being,nested,within,another,configuration,class,since,3,1,1,see,get,imported,by;public,boolean,is,imported,return,this,imported,by,null
ConfigurationClass -> public boolean isImported();1385507683;Return whether this configuration class was registered via @{@link Import} or_automatically registered due to being nested within another configuration class._@since 3.1.1_@see #getImportedBy();public boolean isImported() {_		return (this.importedBy != null)__	};return,whether,this,configuration,class,was,registered,via,link,import,or,automatically,registered,due,to,being,nested,within,another,configuration,class,since,3,1,1,see,get,imported,by;public,boolean,is,imported,return,this,imported,by,null
ConfigurationClass -> public boolean isImported();1385978370;Return whether this configuration class was registered via @{@link Import} or_automatically registered due to being nested within another configuration class._@since 3.1.1_@see #getImportedBy();public boolean isImported() {_		return (this.importedBy != null)__	};return,whether,this,configuration,class,was,registered,via,link,import,or,automatically,registered,due,to,being,nested,within,another,configuration,class,since,3,1,1,see,get,imported,by;public,boolean,is,imported,return,this,imported,by,null
ConfigurationClass -> public boolean isImported();1398153432;Return whether this configuration class was registered via @{@link Import} or_automatically registered due to being nested within another configuration class._@since 3.1.1_@see #getImportedBy();public boolean isImported() {_		return (this.importedBy != null)__	};return,whether,this,configuration,class,was,registered,via,link,import,or,automatically,registered,due,to,being,nested,within,another,configuration,class,since,3,1,1,see,get,imported,by;public,boolean,is,imported,return,this,imported,by,null
ConfigurationClass -> public boolean isImported();1400245582;Return whether this configuration class was registered via @{@link Import} or_automatically registered due to being nested within another configuration class._@since 3.1.1_@see #getImportedBy();public boolean isImported() {_		return !this.importedBy.isEmpty()__	};return,whether,this,configuration,class,was,registered,via,link,import,or,automatically,registered,due,to,being,nested,within,another,configuration,class,since,3,1,1,see,get,imported,by;public,boolean,is,imported,return,this,imported,by,is,empty
ConfigurationClass -> public boolean isImported();1414616928;Return whether this configuration class was registered via @{@link Import} or_automatically registered due to being nested within another configuration class._@since 3.1.1_@see #getImportedBy();public boolean isImported() {_		return !this.importedBy.isEmpty()__	};return,whether,this,configuration,class,was,registered,via,link,import,or,automatically,registered,due,to,being,nested,within,another,configuration,class,since,3,1,1,see,get,imported,by;public,boolean,is,imported,return,this,imported,by,is,empty
ConfigurationClass -> public boolean isImported();1423592779;Return whether this configuration class was registered via @{@link Import} or_automatically registered due to being nested within another configuration class._@since 3.1.1_@see #getImportedBy();public boolean isImported() {_		return !this.importedBy.isEmpty()__	};return,whether,this,configuration,class,was,registered,via,link,import,or,automatically,registered,due,to,being,nested,within,another,configuration,class,since,3,1,1,see,get,imported,by;public,boolean,is,imported,return,this,imported,by,is,empty
ConfigurationClass -> public boolean isImported();1424886328;Return whether this configuration class was registered via @{@link Import} or_automatically registered due to being nested within another configuration class._@since 3.1.1_@see #getImportedBy();public boolean isImported() {_		return !this.importedBy.isEmpty()__	};return,whether,this,configuration,class,was,registered,via,link,import,or,automatically,registered,due,to,being,nested,within,another,configuration,class,since,3,1,1,see,get,imported,by;public,boolean,is,imported,return,this,imported,by,is,empty
ConfigurationClass -> public boolean isImported();1455869350;Return whether this configuration class was registered via @{@link Import} or_automatically registered due to being nested within another configuration class._@since 3.1.1_@see #getImportedBy();public boolean isImported() {_		return !this.importedBy.isEmpty()__	};return,whether,this,configuration,class,was,registered,via,link,import,or,automatically,registered,due,to,being,nested,within,another,configuration,class,since,3,1,1,see,get,imported,by;public,boolean,is,imported,return,this,imported,by,is,empty
ConfigurationClass -> public boolean isImported();1467730834;Return whether this configuration class was registered via @{@link Import} or_automatically registered due to being nested within another configuration class._@since 3.1.1_@see #getImportedBy();public boolean isImported() {_		return !this.importedBy.isEmpty()__	};return,whether,this,configuration,class,was,registered,via,link,import,or,automatically,registered,due,to,being,nested,within,another,configuration,class,since,3,1,1,see,get,imported,by;public,boolean,is,imported,return,this,imported,by,is,empty
ConfigurationClass -> public boolean isImported();1469657173;Return whether this configuration class was registered via @{@link Import} or_automatically registered due to being nested within another configuration class._@since 3.1.1_@see #getImportedBy();public boolean isImported() {_		return !this.importedBy.isEmpty()__	};return,whether,this,configuration,class,was,registered,via,link,import,or,automatically,registered,due,to,being,nested,within,another,configuration,class,since,3,1,1,see,get,imported,by;public,boolean,is,imported,return,this,imported,by,is,empty
ConfigurationClass -> public boolean isImported();1495868221;Return whether this configuration class was registered via @{@link Import} or_automatically registered due to being nested within another configuration class._@since 3.1.1_@see #getImportedBy();public boolean isImported() {_		return !this.importedBy.isEmpty()__	};return,whether,this,configuration,class,was,registered,via,link,import,or,automatically,registered,due,to,being,nested,within,another,configuration,class,since,3,1,1,see,get,imported,by;public,boolean,is,imported,return,this,imported,by,is,empty
ConfigurationClass -> public boolean isImported();1496263893;Return whether this configuration class was registered via @{@link Import} or_automatically registered due to being nested within another configuration class._@since 3.1.1_@see #getImportedBy();public boolean isImported() {_		return !this.importedBy.isEmpty()__	};return,whether,this,configuration,class,was,registered,via,link,import,or,automatically,registered,due,to,being,nested,within,another,configuration,class,since,3,1,1,see,get,imported,by;public,boolean,is,imported,return,this,imported,by,is,empty
ConfigurationClass -> public boolean isImported();1496837955;Return whether this configuration class was registered via @{@link Import} or_automatically registered due to being nested within another configuration class._@since 3.1.1_@see #getImportedBy();public boolean isImported() {_		return !this.importedBy.isEmpty()__	};return,whether,this,configuration,class,was,registered,via,link,import,or,automatically,registered,due,to,being,nested,within,another,configuration,class,since,3,1,1,see,get,imported,by;public,boolean,is,imported,return,this,imported,by,is,empty
ConfigurationClass -> public boolean isImported();1500495740;Return whether this configuration class was registered via @{@link Import} or_automatically registered due to being nested within another configuration class._@since 3.1.1_@see #getImportedBy();public boolean isImported() {_		return !this.importedBy.isEmpty()__	};return,whether,this,configuration,class,was,registered,via,link,import,or,automatically,registered,due,to,being,nested,within,another,configuration,class,since,3,1,1,see,get,imported,by;public,boolean,is,imported,return,this,imported,by,is,empty
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, String beanName);1329142650;Create a new {@link ConfigurationClass} with the given name._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName must not be {@code null}_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, boolean);public ConfigurationClass(MetadataReader metadataReader, String beanName) {_		Assert.hasText(beanName, "bean name must not be null")__		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.beanName = beanName__		this.imported = false__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,must,not,be,code,null,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,boolean;public,configuration,class,metadata,reader,metadata,reader,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,bean,name,bean,name,this,imported,false
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, String beanName);1356735495;Create a new {@link ConfigurationClass} with the given name._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName must not be {@code null}_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, boolean);public ConfigurationClass(MetadataReader metadataReader, String beanName) {_		Assert.hasText(beanName, "bean name must not be null")__		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.beanName = beanName__		this.imported = false__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,must,not,be,code,null,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,boolean;public,configuration,class,metadata,reader,metadata,reader,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,bean,name,bean,name,this,imported,false
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, String beanName);1366717765;Create a new {@link ConfigurationClass} with the given name._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName must not be {@code null}_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, boolean);public ConfigurationClass(MetadataReader metadataReader, String beanName) {_		Assert.hasText(beanName, "bean name must not be null")__		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.beanName = beanName__		this.imported = false__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,must,not,be,code,null,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,boolean;public,configuration,class,metadata,reader,metadata,reader,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,bean,name,bean,name,this,imported,false
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, String beanName);1368068203;Create a new {@link ConfigurationClass} with the given name._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName must not be {@code null}_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(MetadataReader metadataReader, String beanName) {_		Assert.hasText(beanName, "bean name must not be null")__		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.beanName = beanName__		this.importedBy = null__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,must,not,be,code,null,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,metadata,reader,metadata,reader,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,bean,name,bean,name,this,imported,by,null
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, String beanName);1368621032;Create a new {@link ConfigurationClass} with the given name._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName must not be {@code null}_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(MetadataReader metadataReader, String beanName) {_		Assert.hasText(beanName, "bean name must not be null")__		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.beanName = beanName__		this.importedBy = null__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,must,not,be,code,null,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,metadata,reader,metadata,reader,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,bean,name,bean,name,this,imported,by,null
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, String beanName);1372363092;Create a new {@link ConfigurationClass} with the given name._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName must not be {@code null}_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(MetadataReader metadataReader, String beanName) {_		Assert.hasText(beanName, "bean name must not be null")__		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.beanName = beanName__		this.importedBy = null__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,must,not,be,code,null,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,metadata,reader,metadata,reader,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,bean,name,bean,name,this,imported,by,null
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, String beanName);1374666015;Create a new {@link ConfigurationClass} with the given name._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName must not be {@code null}_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(MetadataReader metadataReader, String beanName) {_		Assert.hasText(beanName, "bean name must not be null")__		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.beanName = beanName__		this.importedBy = null__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,must,not,be,code,null,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,metadata,reader,metadata,reader,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,bean,name,bean,name,this,imported,by,null
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, String beanName);1377562322;Create a new {@link ConfigurationClass} with the given name._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName must not be {@code null}_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(MetadataReader metadataReader, String beanName) {_		Assert.hasText(beanName, "bean name must not be null")__		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.beanName = beanName__		this.importedBy = null__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,must,not,be,code,null,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,metadata,reader,metadata,reader,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,bean,name,bean,name,this,imported,by,null
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, String beanName);1377625191;Create a new {@link ConfigurationClass} with the given name._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName must not be {@code null}_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(MetadataReader metadataReader, String beanName) {_		Assert.hasText(beanName, "bean name must not be null")__		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.beanName = beanName__		this.importedBy = null__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,must,not,be,code,null,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,metadata,reader,metadata,reader,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,bean,name,bean,name,this,imported,by,null
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, String beanName);1383604440;Create a new {@link ConfigurationClass} with the given name._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName must not be {@code null}_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(MetadataReader metadataReader, String beanName) {_		Assert.hasText(beanName, "bean name must not be null")__		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.beanName = beanName__		this.importedBy = null__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,must,not,be,code,null,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,metadata,reader,metadata,reader,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,bean,name,bean,name,this,imported,by,null
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, String beanName);1385507683;Create a new {@link ConfigurationClass} with the given name._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName must not be {@code null}_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(MetadataReader metadataReader, String beanName) {_		Assert.hasText(beanName, "bean name must not be null")__		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.beanName = beanName__		this.importedBy = null__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,must,not,be,code,null,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,metadata,reader,metadata,reader,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,bean,name,bean,name,this,imported,by,null
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, String beanName);1385978370;Create a new {@link ConfigurationClass} with the given name._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName must not be {@code null}_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(MetadataReader metadataReader, String beanName) {_		Assert.hasText(beanName, "bean name must not be null")__		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.beanName = beanName__		this.importedBy = null__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,must,not,be,code,null,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,metadata,reader,metadata,reader,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,bean,name,bean,name,this,imported,by,null
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, String beanName);1398153432;Create a new {@link ConfigurationClass} with the given name._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName must not be {@code null}_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(MetadataReader metadataReader, String beanName) {_		Assert.hasText(beanName, "bean name must not be null")__		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.beanName = beanName__		this.importedBy = null__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,must,not,be,code,null,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,metadata,reader,metadata,reader,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,bean,name,bean,name,this,imported,by,null
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, String beanName);1400245582;Create a new {@link ConfigurationClass} with the given name._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName must not be {@code null}_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(MetadataReader metadataReader, String beanName) {_		Assert.hasText(beanName, "bean name must not be null")__		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,must,not,be,code,null,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,metadata,reader,metadata,reader,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, String beanName);1414616928;Create a new {@link ConfigurationClass} with the given name._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName must not be {@code null}_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(MetadataReader metadataReader, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,must,not,be,code,null,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,metadata,reader,metadata,reader,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, String beanName);1423592779;Create a new {@link ConfigurationClass} with the given name._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName must not be {@code null}_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(MetadataReader metadataReader, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,must,not,be,code,null,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,metadata,reader,metadata,reader,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, String beanName);1424886328;Create a new {@link ConfigurationClass} with the given name._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName must not be {@code null}_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(MetadataReader metadataReader, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,must,not,be,code,null,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,metadata,reader,metadata,reader,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, String beanName);1455869350;Create a new {@link ConfigurationClass} with the given name._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName must not be {@code null}_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(MetadataReader metadataReader, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,must,not,be,code,null,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,metadata,reader,metadata,reader,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, String beanName);1467730834;Create a new {@link ConfigurationClass} with the given name._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName must not be {@code null}_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(MetadataReader metadataReader, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,must,not,be,code,null,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,metadata,reader,metadata,reader,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, String beanName);1469657173;Create a new {@link ConfigurationClass} with the given name._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName must not be {@code null}_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(MetadataReader metadataReader, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,must,not,be,code,null,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,metadata,reader,metadata,reader,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, String beanName);1495868221;Create a new {@link ConfigurationClass} with the given name._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName must not be {@code null}_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(MetadataReader metadataReader, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,must,not,be,code,null,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,metadata,reader,metadata,reader,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, String beanName);1496263893;Create a new {@link ConfigurationClass} with the given name._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName must not be {@code null}_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(MetadataReader metadataReader, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,must,not,be,code,null,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,metadata,reader,metadata,reader,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, String beanName);1496837955;Create a new {@link ConfigurationClass} with the given name._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName must not be {@code null}_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(MetadataReader metadataReader, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,must,not,be,code,null,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,metadata,reader,metadata,reader,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, String beanName);1500495740;Create a new {@link ConfigurationClass} with the given name._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName must not be {@code null}_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(MetadataReader metadataReader, String beanName) {_		Assert.notNull(beanName, "Bean name must not be null")__		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,must,not,be,code,null,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,metadata,reader,metadata,reader,string,bean,name,assert,not,null,bean,name,bean,name,must,not,be,null,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, boolean imported);1329142650;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName name of the {@code @Configuration} class bean_@since 3.1.1;public ConfigurationClass(MetadataReader metadataReader, boolean imported) {_		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.imported = imported__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,name,of,the,code,configuration,class,bean,since,3,1,1;public,configuration,class,metadata,reader,metadata,reader,boolean,imported,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,imported,imported
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, boolean imported);1356735495;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param metadataReader reader used to parse the underlying {@link Class}_@param beanName name of the {@code @Configuration} class bean_@since 3.1.1;public ConfigurationClass(MetadataReader metadataReader, boolean imported) {_		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.imported = imported__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,bean,name,name,of,the,code,configuration,class,bean,since,3,1,1;public,configuration,class,metadata,reader,metadata,reader,boolean,imported,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,imported,imported
ConfigurationClass -> public ConfigurationClass(MetadataReader metadataReader, boolean imported);1366717765;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param metadataReader reader used to parse the underlying {@link Class}_@param imported whether the given configuration class is being imported_@since 3.1.1;public ConfigurationClass(MetadataReader metadataReader, boolean imported) {_		this.metadata = metadataReader.getAnnotationMetadata()__		this.resource = metadataReader.getResource()__		this.imported = imported__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,metadata,reader,reader,used,to,parse,the,underlying,link,class,param,imported,whether,the,given,configuration,class,is,being,imported,since,3,1,1;public,configuration,class,metadata,reader,metadata,reader,boolean,imported,this,metadata,metadata,reader,get,annotation,metadata,this,resource,metadata,reader,get,resource,this,imported,imported
ConfigurationClass -> public ConfigurationClass getImportedBy();1368068203;Returns the configuration class that imported this class or {@code null} if_this configuration was not imported._@since 4.0_@see #isImported();public ConfigurationClass getImportedBy() {_		return importedBy__	};returns,the,configuration,class,that,imported,this,class,or,code,null,if,this,configuration,was,not,imported,since,4,0,see,is,imported;public,configuration,class,get,imported,by,return,imported,by
ConfigurationClass -> public ConfigurationClass getImportedBy();1368621032;Returns the configuration class that imported this class or {@code null} if_this configuration was not imported._@since 4.0_@see #isImported();public ConfigurationClass getImportedBy() {_		return importedBy__	};returns,the,configuration,class,that,imported,this,class,or,code,null,if,this,configuration,was,not,imported,since,4,0,see,is,imported;public,configuration,class,get,imported,by,return,imported,by
ConfigurationClass -> public ConfigurationClass getImportedBy();1372363092;Returns the configuration class that imported this class or {@code null} if_this configuration was not imported._@since 4.0_@see #isImported();public ConfigurationClass getImportedBy() {_		return importedBy__	};returns,the,configuration,class,that,imported,this,class,or,code,null,if,this,configuration,was,not,imported,since,4,0,see,is,imported;public,configuration,class,get,imported,by,return,imported,by
ConfigurationClass -> public ConfigurationClass getImportedBy();1374666015;Returns the configuration class that imported this class or {@code null} if_this configuration was not imported._@since 4.0_@see #isImported();public ConfigurationClass getImportedBy() {_		return this.importedBy__	};returns,the,configuration,class,that,imported,this,class,or,code,null,if,this,configuration,was,not,imported,since,4,0,see,is,imported;public,configuration,class,get,imported,by,return,this,imported,by
ConfigurationClass -> public ConfigurationClass getImportedBy();1377562322;Returns the configuration class that imported this class or {@code null} if_this configuration was not imported._@since 4.0_@see #isImported();public ConfigurationClass getImportedBy() {_		return this.importedBy__	};returns,the,configuration,class,that,imported,this,class,or,code,null,if,this,configuration,was,not,imported,since,4,0,see,is,imported;public,configuration,class,get,imported,by,return,this,imported,by
ConfigurationClass -> public ConfigurationClass getImportedBy();1377625191;Returns the configuration class that imported this class or {@code null} if_this configuration was not imported._@since 4.0_@see #isImported();public ConfigurationClass getImportedBy() {_		return this.importedBy__	};returns,the,configuration,class,that,imported,this,class,or,code,null,if,this,configuration,was,not,imported,since,4,0,see,is,imported;public,configuration,class,get,imported,by,return,this,imported,by
ConfigurationClass -> public ConfigurationClass getImportedBy();1383604440;Return the configuration class that imported this class,_or {@code null} if this configuration was not imported._@since 4.0_@see #isImported();public ConfigurationClass getImportedBy() {_		return this.importedBy__	};return,the,configuration,class,that,imported,this,class,or,code,null,if,this,configuration,was,not,imported,since,4,0,see,is,imported;public,configuration,class,get,imported,by,return,this,imported,by
ConfigurationClass -> public ConfigurationClass getImportedBy();1385507683;Return the configuration class that imported this class,_or {@code null} if this configuration was not imported._@since 4.0_@see #isImported();public ConfigurationClass getImportedBy() {_		return this.importedBy__	};return,the,configuration,class,that,imported,this,class,or,code,null,if,this,configuration,was,not,imported,since,4,0,see,is,imported;public,configuration,class,get,imported,by,return,this,imported,by
ConfigurationClass -> public ConfigurationClass getImportedBy();1385978370;Return the configuration class that imported this class,_or {@code null} if this configuration was not imported._@since 4.0_@see #isImported();public ConfigurationClass getImportedBy() {_		return this.importedBy__	};return,the,configuration,class,that,imported,this,class,or,code,null,if,this,configuration,was,not,imported,since,4,0,see,is,imported;public,configuration,class,get,imported,by,return,this,imported,by
ConfigurationClass -> public ConfigurationClass getImportedBy();1398153432;Return the configuration class that imported this class,_or {@code null} if this configuration was not imported._@since 4.0_@see #isImported();public ConfigurationClass getImportedBy() {_		return this.importedBy__	};return,the,configuration,class,that,imported,this,class,or,code,null,if,this,configuration,was,not,imported,since,4,0,see,is,imported;public,configuration,class,get,imported,by,return,this,imported,by
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, boolean imported);1329142650;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@since 3.1.1;public ConfigurationClass(Class<?> clazz, boolean imported) {_		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.imported = imported__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,since,3,1,1;public,configuration,class,class,clazz,boolean,imported,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,imported,imported
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, boolean imported);1356735495;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@since 3.1.1;public ConfigurationClass(Class<?> clazz, boolean imported) {_		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.imported = imported__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,since,3,1,1;public,configuration,class,class,clazz,boolean,imported,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,imported,imported
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, boolean imported);1366717765;Create a new {@link ConfigurationClass} representing a class that was imported_using the {@link Import} annotation or automatically processed as a nested_configuration class (if imported is {@code true})._@param clazz the underlying {@link Class} to represent_@param imported whether the given configuration class is being imported_@since 3.1.1;public ConfigurationClass(Class<?> clazz, boolean imported) {_		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.imported = imported__	};create,a,new,link,configuration,class,representing,a,class,that,was,imported,using,the,link,import,annotation,or,automatically,processed,as,a,nested,configuration,class,if,imported,is,code,true,param,clazz,the,underlying,link,class,to,represent,param,imported,whether,the,given,configuration,class,is,being,imported,since,3,1,1;public,configuration,class,class,clazz,boolean,imported,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,imported,imported
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, String beanName);1329142650;Create a new {@link ConfigurationClass} with the given name._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, boolean);public ConfigurationClass(Class<?> clazz, String beanName) {_		Assert.hasText(beanName, "bean name must not be null")__		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.beanName = beanName__		this.imported = false__	};create,a,new,link,configuration,class,with,the,given,name,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,boolean;public,configuration,class,class,clazz,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,bean,name,bean,name,this,imported,false
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, String beanName);1356735495;Create a new {@link ConfigurationClass} with the given name._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, boolean);public ConfigurationClass(Class<?> clazz, String beanName) {_		Assert.hasText(beanName, "bean name must not be null")__		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.beanName = beanName__		this.imported = false__	};create,a,new,link,configuration,class,with,the,given,name,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,boolean;public,configuration,class,class,clazz,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,bean,name,bean,name,this,imported,false
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, String beanName);1366717765;Create a new {@link ConfigurationClass} with the given name._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, boolean);public ConfigurationClass(Class<?> clazz, String beanName) {_		Assert.hasText(beanName, "bean name must not be null")__		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.beanName = beanName__		this.imported = false__	};create,a,new,link,configuration,class,with,the,given,name,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,boolean;public,configuration,class,class,clazz,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,bean,name,bean,name,this,imported,false
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, String beanName);1368068203;Create a new {@link ConfigurationClass} with the given name._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(Class<?> clazz, String beanName) {_		Assert.hasText(beanName, "bean name must not be null")__		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.beanName = beanName__		this.importedBy = null__	};create,a,new,link,configuration,class,with,the,given,name,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,class,clazz,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,bean,name,bean,name,this,imported,by,null
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, String beanName);1368621032;Create a new {@link ConfigurationClass} with the given name._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(Class<?> clazz, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.beanName = beanName__		this.importedBy = null__	};create,a,new,link,configuration,class,with,the,given,name,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,class,clazz,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,bean,name,bean,name,this,imported,by,null
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, String beanName);1372363092;Create a new {@link ConfigurationClass} with the given name._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(Class<?> clazz, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.beanName = beanName__		this.importedBy = null__	};create,a,new,link,configuration,class,with,the,given,name,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,class,clazz,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,bean,name,bean,name,this,imported,by,null
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, String beanName);1374666015;Create a new {@link ConfigurationClass} with the given name._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(Class<?> clazz, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.beanName = beanName__		this.importedBy = null__	};create,a,new,link,configuration,class,with,the,given,name,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,class,clazz,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,bean,name,bean,name,this,imported,by,null
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, String beanName);1377562322;Create a new {@link ConfigurationClass} with the given name._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(Class<?> clazz, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.beanName = beanName__		this.importedBy = null__	};create,a,new,link,configuration,class,with,the,given,name,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,class,clazz,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,bean,name,bean,name,this,imported,by,null
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, String beanName);1377625191;Create a new {@link ConfigurationClass} with the given name._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(Class<?> clazz, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.beanName = beanName__		this.importedBy = null__	};create,a,new,link,configuration,class,with,the,given,name,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,class,clazz,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,bean,name,bean,name,this,imported,by,null
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, String beanName);1383604440;Create a new {@link ConfigurationClass} with the given name._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(Class<?> clazz, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.beanName = beanName__		this.importedBy = null__	};create,a,new,link,configuration,class,with,the,given,name,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,class,clazz,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,bean,name,bean,name,this,imported,by,null
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, String beanName);1385507683;Create a new {@link ConfigurationClass} with the given name._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(Class<?> clazz, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.beanName = beanName__		this.importedBy = null__	};create,a,new,link,configuration,class,with,the,given,name,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,class,clazz,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,bean,name,bean,name,this,imported,by,null
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, String beanName);1385978370;Create a new {@link ConfigurationClass} with the given name._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(Class<?> clazz, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.beanName = beanName__		this.importedBy = null__	};create,a,new,link,configuration,class,with,the,given,name,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,class,clazz,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,bean,name,bean,name,this,imported,by,null
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, String beanName);1398153432;Create a new {@link ConfigurationClass} with the given name._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(Class<?> clazz, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.beanName = beanName__		this.importedBy = null__	};create,a,new,link,configuration,class,with,the,given,name,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,class,clazz,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,bean,name,bean,name,this,imported,by,null
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, String beanName);1400245582;Create a new {@link ConfigurationClass} with the given name._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@throws IllegalArgumentException if beanName is null (as of Spring 3.1.1)_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(Class<?> clazz, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,throws,illegal,argument,exception,if,bean,name,is,null,as,of,spring,3,1,1,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,class,clazz,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, String beanName);1414616928;Create a new {@link ConfigurationClass} with the given name._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(Class<?> clazz, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,class,clazz,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, String beanName);1423592779;Create a new {@link ConfigurationClass} with the given name._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(Class<?> clazz, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,class,clazz,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, String beanName);1424886328;Create a new {@link ConfigurationClass} with the given name._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(Class<?> clazz, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.toString())__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,class,clazz,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,to,string,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, String beanName);1455869350;Create a new {@link ConfigurationClass} with the given name._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(Class<?> clazz, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.getName())__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,class,clazz,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,get,name,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, String beanName);1467730834;Create a new {@link ConfigurationClass} with the given name._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(Class<?> clazz, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.getName())__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,class,clazz,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,get,name,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, String beanName);1469657173;Create a new {@link ConfigurationClass} with the given name._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(Class<?> clazz, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.getName())__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,class,clazz,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,get,name,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, String beanName);1495868221;Create a new {@link ConfigurationClass} with the given name._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(Class<?> clazz, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.getName())__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,class,clazz,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,get,name,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, String beanName);1496263893;Create a new {@link ConfigurationClass} with the given name._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(Class<?> clazz, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.getName())__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,class,clazz,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,get,name,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, String beanName);1496837955;Create a new {@link ConfigurationClass} with the given name._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(Class<?> clazz, String beanName) {_		Assert.hasText(beanName, "Bean name must not be null")__		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.getName())__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,class,clazz,string,bean,name,assert,has,text,bean,name,bean,name,must,not,be,null,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,get,name,this,bean,name,bean,name
ConfigurationClass -> public ConfigurationClass(Class<?> clazz, String beanName);1500495740;Create a new {@link ConfigurationClass} with the given name._@param clazz the underlying {@link Class} to represent_@param beanName name of the {@code @Configuration} class bean_@see ConfigurationClass#ConfigurationClass(Class, ConfigurationClass);public ConfigurationClass(Class<?> clazz, String beanName) {_		Assert.notNull(beanName, "Bean name must not be null")__		this.metadata = new StandardAnnotationMetadata(clazz, true)__		this.resource = new DescriptiveResource(clazz.getName())__		this.beanName = beanName__	};create,a,new,link,configuration,class,with,the,given,name,param,clazz,the,underlying,link,class,to,represent,param,bean,name,name,of,the,code,configuration,class,bean,see,configuration,class,configuration,class,class,configuration,class;public,configuration,class,class,clazz,string,bean,name,assert,not,null,bean,name,bean,name,must,not,be,null,this,metadata,new,standard,annotation,metadata,clazz,true,this,resource,new,descriptive,resource,clazz,get,name,this,bean,name,bean,name
ConfigurationClass -> public void mergeImportedBy(ConfigurationClass otherConfigClass);1400245582;Merge the imported-by declarations from the given configuration class into this one._@since 4.0.5;public void mergeImportedBy(ConfigurationClass otherConfigClass) {_		this.importedBy.addAll(otherConfigClass.importedBy)__	};merge,the,imported,by,declarations,from,the,given,configuration,class,into,this,one,since,4,0,5;public,void,merge,imported,by,configuration,class,other,config,class,this,imported,by,add,all,other,config,class,imported,by
ConfigurationClass -> public void mergeImportedBy(ConfigurationClass otherConfigClass);1414616928;Merge the imported-by declarations from the given configuration class into this one._@since 4.0.5;public void mergeImportedBy(ConfigurationClass otherConfigClass) {_		this.importedBy.addAll(otherConfigClass.importedBy)__	};merge,the,imported,by,declarations,from,the,given,configuration,class,into,this,one,since,4,0,5;public,void,merge,imported,by,configuration,class,other,config,class,this,imported,by,add,all,other,config,class,imported,by
ConfigurationClass -> public void mergeImportedBy(ConfigurationClass otherConfigClass);1423592779;Merge the imported-by declarations from the given configuration class into this one._@since 4.0.5;public void mergeImportedBy(ConfigurationClass otherConfigClass) {_		this.importedBy.addAll(otherConfigClass.importedBy)__	};merge,the,imported,by,declarations,from,the,given,configuration,class,into,this,one,since,4,0,5;public,void,merge,imported,by,configuration,class,other,config,class,this,imported,by,add,all,other,config,class,imported,by
ConfigurationClass -> public void mergeImportedBy(ConfigurationClass otherConfigClass);1424886328;Merge the imported-by declarations from the given configuration class into this one._@since 4.0.5;public void mergeImportedBy(ConfigurationClass otherConfigClass) {_		this.importedBy.addAll(otherConfigClass.importedBy)__	};merge,the,imported,by,declarations,from,the,given,configuration,class,into,this,one,since,4,0,5;public,void,merge,imported,by,configuration,class,other,config,class,this,imported,by,add,all,other,config,class,imported,by
ConfigurationClass -> public void mergeImportedBy(ConfigurationClass otherConfigClass);1455869350;Merge the imported-by declarations from the given configuration class into this one._@since 4.0.5;public void mergeImportedBy(ConfigurationClass otherConfigClass) {_		this.importedBy.addAll(otherConfigClass.importedBy)__	};merge,the,imported,by,declarations,from,the,given,configuration,class,into,this,one,since,4,0,5;public,void,merge,imported,by,configuration,class,other,config,class,this,imported,by,add,all,other,config,class,imported,by
ConfigurationClass -> public void mergeImportedBy(ConfigurationClass otherConfigClass);1467730834;Merge the imported-by declarations from the given configuration class into this one._@since 4.0.5;public void mergeImportedBy(ConfigurationClass otherConfigClass) {_		this.importedBy.addAll(otherConfigClass.importedBy)__	};merge,the,imported,by,declarations,from,the,given,configuration,class,into,this,one,since,4,0,5;public,void,merge,imported,by,configuration,class,other,config,class,this,imported,by,add,all,other,config,class,imported,by
ConfigurationClass -> public void mergeImportedBy(ConfigurationClass otherConfigClass);1469657173;Merge the imported-by declarations from the given configuration class into this one._@since 4.0.5;public void mergeImportedBy(ConfigurationClass otherConfigClass) {_		this.importedBy.addAll(otherConfigClass.importedBy)__	};merge,the,imported,by,declarations,from,the,given,configuration,class,into,this,one,since,4,0,5;public,void,merge,imported,by,configuration,class,other,config,class,this,imported,by,add,all,other,config,class,imported,by
ConfigurationClass -> public void mergeImportedBy(ConfigurationClass otherConfigClass);1495868221;Merge the imported-by declarations from the given configuration class into this one._@since 4.0.5;public void mergeImportedBy(ConfigurationClass otherConfigClass) {_		this.importedBy.addAll(otherConfigClass.importedBy)__	};merge,the,imported,by,declarations,from,the,given,configuration,class,into,this,one,since,4,0,5;public,void,merge,imported,by,configuration,class,other,config,class,this,imported,by,add,all,other,config,class,imported,by
ConfigurationClass -> public void mergeImportedBy(ConfigurationClass otherConfigClass);1496263893;Merge the imported-by declarations from the given configuration class into this one._@since 4.0.5;public void mergeImportedBy(ConfigurationClass otherConfigClass) {_		this.importedBy.addAll(otherConfigClass.importedBy)__	};merge,the,imported,by,declarations,from,the,given,configuration,class,into,this,one,since,4,0,5;public,void,merge,imported,by,configuration,class,other,config,class,this,imported,by,add,all,other,config,class,imported,by
ConfigurationClass -> public void mergeImportedBy(ConfigurationClass otherConfigClass);1496837955;Merge the imported-by declarations from the given configuration class into this one._@since 4.0.5;public void mergeImportedBy(ConfigurationClass otherConfigClass) {_		this.importedBy.addAll(otherConfigClass.importedBy)__	};merge,the,imported,by,declarations,from,the,given,configuration,class,into,this,one,since,4,0,5;public,void,merge,imported,by,configuration,class,other,config,class,this,imported,by,add,all,other,config,class,imported,by
ConfigurationClass -> public void mergeImportedBy(ConfigurationClass otherConfigClass);1500495740;Merge the imported-by declarations from the given configuration class into this one._@since 4.0.5;public void mergeImportedBy(ConfigurationClass otherConfigClass) {_		this.importedBy.addAll(otherConfigClass.importedBy)__	};merge,the,imported,by,declarations,from,the,given,configuration,class,into,this,one,since,4,0,5;public,void,merge,imported,by,configuration,class,other,config,class,this,imported,by,add,all,other,config,class,imported,by
