# id;timestamp;commentText;codeText;commentWords;codeWords
ConnectorServerFactoryBean -> public void setDaemon(boolean daemon);1328020251;Set whether any threads started for the <code>JMXConnectorServer</code> should be_started as daemon threads.;public void setDaemon(boolean daemon) {_		this.daemon = daemon__	};set,whether,any,threads,started,for,the,code,jmxconnector,server,code,should,be,started,as,daemon,threads;public,void,set,daemon,boolean,daemon,this,daemon,daemon
ConnectorServerFactoryBean -> public void setDaemon(boolean daemon);1356735495;Set whether any threads started for the {@code JMXConnectorServer} should be_started as daemon threads.;public void setDaemon(boolean daemon) {_		this.daemon = daemon__	};set,whether,any,threads,started,for,the,code,jmxconnector,server,should,be,started,as,daemon,threads;public,void,set,daemon,boolean,daemon,this,daemon,daemon
ConnectorServerFactoryBean -> public void setDaemon(boolean daemon);1357119239;Set whether any threads started for the {@code JMXConnectorServer} should be_started as daemon threads.;public void setDaemon(boolean daemon) {_		this.daemon = daemon__	};set,whether,any,threads,started,for,the,code,jmxconnector,server,should,be,started,as,daemon,threads;public,void,set,daemon,boolean,daemon,this,daemon,daemon
ConnectorServerFactoryBean -> public void setDaemon(boolean daemon);1368482696;Set whether any threads started for the {@code JMXConnectorServer} should be_started as daemon threads.;public void setDaemon(boolean daemon) {_		this.daemon = daemon__	};set,whether,any,threads,started,for,the,code,jmxconnector,server,should,be,started,as,daemon,threads;public,void,set,daemon,boolean,daemon,this,daemon,daemon
ConnectorServerFactoryBean -> public void setDaemon(boolean daemon);1467730834;Set whether any threads started for the {@code JMXConnectorServer} should be_started as daemon threads.;public void setDaemon(boolean daemon) {_		this.daemon = daemon__	};set,whether,any,threads,started,for,the,code,jmxconnector,server,should,be,started,as,daemon,threads;public,void,set,daemon,boolean,daemon,this,daemon,daemon
ConnectorServerFactoryBean -> public void setDaemon(boolean daemon);1467983536;Set whether any threads started for the {@code JMXConnectorServer} should be_started as daemon threads.;public void setDaemon(boolean daemon) {_		this.daemon = daemon__	};set,whether,any,threads,started,for,the,code,jmxconnector,server,should,be,started,as,daemon,threads;public,void,set,daemon,boolean,daemon,this,daemon,daemon
ConnectorServerFactoryBean -> public void setDaemon(boolean daemon);1479931801;Set whether any threads started for the {@code JMXConnectorServer} should be_started as daemon threads.;public void setDaemon(boolean daemon) {_		this.daemon = daemon__	};set,whether,any,threads,started,for,the,code,jmxconnector,server,should,be,started,as,daemon,threads;public,void,set,daemon,boolean,daemon,this,daemon,daemon
ConnectorServerFactoryBean -> public void setDaemon(boolean daemon);1496837955;Set whether any threads started for the {@code JMXConnectorServer} should be_started as daemon threads.;public void setDaemon(boolean daemon) {_		this.daemon = daemon__	};set,whether,any,threads,started,for,the,code,jmxconnector,server,should,be,started,as,daemon,threads;public,void,set,daemon,boolean,daemon,this,daemon,daemon
ConnectorServerFactoryBean -> public void setDaemon(boolean daemon);1498780456;Set whether any threads started for the {@code JMXConnectorServer} should be_started as daemon threads.;public void setDaemon(boolean daemon) {_		this.daemon = daemon__	};set,whether,any,threads,started,for,the,code,jmxconnector,server,should,be,started,as,daemon,threads;public,void,set,daemon,boolean,daemon,this,daemon,daemon
ConnectorServerFactoryBean -> public void setDaemon(boolean daemon);1502974979;Set whether any threads started for the {@code JMXConnectorServer} should be_started as daemon threads.;public void setDaemon(boolean daemon) {_		this.daemon = daemon__	};set,whether,any,threads,started,for,the,code,jmxconnector,server,should,be,started,as,daemon,threads;public,void,set,daemon,boolean,daemon,this,daemon,daemon
ConnectorServerFactoryBean -> public void setDaemon(boolean daemon);1530174524;Set whether any threads started for the {@code JMXConnectorServer} should be_started as daemon threads.;public void setDaemon(boolean daemon) {_		this.daemon = daemon__	};set,whether,any,threads,started,for,the,code,jmxconnector,server,should,be,started,as,daemon,threads;public,void,set,daemon,boolean,daemon,this,daemon,daemon
ConnectorServerFactoryBean -> public void setDaemon(boolean daemon);1542899558;Set whether any threads started for the {@code JMXConnectorServer} should be_started as daemon threads.;public void setDaemon(boolean daemon) {_		this.daemon = daemon__	};set,whether,any,threads,started,for,the,code,jmxconnector,server,should,be,started,as,daemon,threads;public,void,set,daemon,boolean,daemon,this,daemon,daemon
ConnectorServerFactoryBean -> public void setThreaded(boolean threaded);1328020251;Set whether the <code>JMXConnectorServer</code> should be started in a separate thread.;public void setThreaded(boolean threaded) {_		this.threaded = threaded__	};set,whether,the,code,jmxconnector,server,code,should,be,started,in,a,separate,thread;public,void,set,threaded,boolean,threaded,this,threaded,threaded
ConnectorServerFactoryBean -> public void setThreaded(boolean threaded);1356735495;Set whether the {@code JMXConnectorServer} should be started in a separate thread.;public void setThreaded(boolean threaded) {_		this.threaded = threaded__	};set,whether,the,code,jmxconnector,server,should,be,started,in,a,separate,thread;public,void,set,threaded,boolean,threaded,this,threaded,threaded
ConnectorServerFactoryBean -> public void setThreaded(boolean threaded);1357119239;Set whether the {@code JMXConnectorServer} should be started in a separate thread.;public void setThreaded(boolean threaded) {_		this.threaded = threaded__	};set,whether,the,code,jmxconnector,server,should,be,started,in,a,separate,thread;public,void,set,threaded,boolean,threaded,this,threaded,threaded
ConnectorServerFactoryBean -> public void setThreaded(boolean threaded);1368482696;Set whether the {@code JMXConnectorServer} should be started in a separate thread.;public void setThreaded(boolean threaded) {_		this.threaded = threaded__	};set,whether,the,code,jmxconnector,server,should,be,started,in,a,separate,thread;public,void,set,threaded,boolean,threaded,this,threaded,threaded
ConnectorServerFactoryBean -> public void setThreaded(boolean threaded);1467730834;Set whether the {@code JMXConnectorServer} should be started in a separate thread.;public void setThreaded(boolean threaded) {_		this.threaded = threaded__	};set,whether,the,code,jmxconnector,server,should,be,started,in,a,separate,thread;public,void,set,threaded,boolean,threaded,this,threaded,threaded
ConnectorServerFactoryBean -> public void setThreaded(boolean threaded);1467983536;Set whether the {@code JMXConnectorServer} should be started in a separate thread.;public void setThreaded(boolean threaded) {_		this.threaded = threaded__	};set,whether,the,code,jmxconnector,server,should,be,started,in,a,separate,thread;public,void,set,threaded,boolean,threaded,this,threaded,threaded
ConnectorServerFactoryBean -> public void setThreaded(boolean threaded);1479931801;Set whether the {@code JMXConnectorServer} should be started in a separate thread.;public void setThreaded(boolean threaded) {_		this.threaded = threaded__	};set,whether,the,code,jmxconnector,server,should,be,started,in,a,separate,thread;public,void,set,threaded,boolean,threaded,this,threaded,threaded
ConnectorServerFactoryBean -> public void setThreaded(boolean threaded);1496837955;Set whether the {@code JMXConnectorServer} should be started in a separate thread.;public void setThreaded(boolean threaded) {_		this.threaded = threaded__	};set,whether,the,code,jmxconnector,server,should,be,started,in,a,separate,thread;public,void,set,threaded,boolean,threaded,this,threaded,threaded
ConnectorServerFactoryBean -> public void setThreaded(boolean threaded);1498780456;Set whether the {@code JMXConnectorServer} should be started in a separate thread.;public void setThreaded(boolean threaded) {_		this.threaded = threaded__	};set,whether,the,code,jmxconnector,server,should,be,started,in,a,separate,thread;public,void,set,threaded,boolean,threaded,this,threaded,threaded
ConnectorServerFactoryBean -> public void setThreaded(boolean threaded);1502974979;Set whether the {@code JMXConnectorServer} should be started in a separate thread.;public void setThreaded(boolean threaded) {_		this.threaded = threaded__	};set,whether,the,code,jmxconnector,server,should,be,started,in,a,separate,thread;public,void,set,threaded,boolean,threaded,this,threaded,threaded
ConnectorServerFactoryBean -> public void setThreaded(boolean threaded);1530174524;Set whether the {@code JMXConnectorServer} should be started in a separate thread.;public void setThreaded(boolean threaded) {_		this.threaded = threaded__	};set,whether,the,code,jmxconnector,server,should,be,started,in,a,separate,thread;public,void,set,threaded,boolean,threaded,this,threaded,threaded
ConnectorServerFactoryBean -> public void setThreaded(boolean threaded);1542899558;Set whether the {@code JMXConnectorServer} should be started in a separate thread.;public void setThreaded(boolean threaded) {_		this.threaded = threaded__	};set,whether,the,code,jmxconnector,server,should,be,started,in,a,separate,thread;public,void,set,threaded,boolean,threaded,this,threaded,threaded
ConnectorServerFactoryBean -> public void destroy() throws IOException;1328020251;Stop the <code>JMXConnectorServer</code> managed by an instance of this class._Automatically called on <code>ApplicationContext</code> shutdown._@throws IOException if there is an error stopping the connector server;public void destroy() throws IOException {_		if (logger.isInfoEnabled()) {_			logger.info("Stopping JMX connector server: " + this.connectorServer)__		}_		try {_			this.connectorServer.stop()__		}_		finally {_			unregisterBeans()__		}_	};stop,the,code,jmxconnector,server,code,managed,by,an,instance,of,this,class,automatically,called,on,code,application,context,code,shutdown,throws,ioexception,if,there,is,an,error,stopping,the,connector,server;public,void,destroy,throws,ioexception,if,logger,is,info,enabled,logger,info,stopping,jmx,connector,server,this,connector,server,try,this,connector,server,stop,finally,unregister,beans
ConnectorServerFactoryBean -> public void destroy() throws IOException;1357119239;Stop the {@code JMXConnectorServer} managed by an instance of this class._Automatically called on {@code ApplicationContext} shutdown._@throws IOException if there is an error stopping the connector server;public void destroy() throws IOException {_		if (logger.isInfoEnabled()) {_			logger.info("Stopping JMX connector server: " + this.connectorServer)__		}_		try {_			this.connectorServer.stop()__		}_		finally {_			unregisterBeans()__		}_	};stop,the,code,jmxconnector,server,managed,by,an,instance,of,this,class,automatically,called,on,code,application,context,shutdown,throws,ioexception,if,there,is,an,error,stopping,the,connector,server;public,void,destroy,throws,ioexception,if,logger,is,info,enabled,logger,info,stopping,jmx,connector,server,this,connector,server,try,this,connector,server,stop,finally,unregister,beans
ConnectorServerFactoryBean -> public void setEnvironment(@Nullable Properties environment);1496837955;Set the environment properties used to construct the {@code JMXConnectorServer}_as {@code java.util.Properties} (String key/value pairs).;public void setEnvironment(@Nullable Properties environment) {_		CollectionUtils.mergePropertiesIntoMap(environment, this.environment)__	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,server,as,code,java,util,properties,string,key,value,pairs;public,void,set,environment,nullable,properties,environment,collection,utils,merge,properties,into,map,environment,this,environment
ConnectorServerFactoryBean -> public void setEnvironment(@Nullable Properties environment);1498780456;Set the environment properties used to construct the {@code JMXConnectorServer}_as {@code java.util.Properties} (String key/value pairs).;public void setEnvironment(@Nullable Properties environment) {_		CollectionUtils.mergePropertiesIntoMap(environment, this.environment)__	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,server,as,code,java,util,properties,string,key,value,pairs;public,void,set,environment,nullable,properties,environment,collection,utils,merge,properties,into,map,environment,this,environment
ConnectorServerFactoryBean -> public void setEnvironment(@Nullable Properties environment);1502974979;Set the environment properties used to construct the {@code JMXConnectorServer}_as {@code java.util.Properties} (String key/value pairs).;public void setEnvironment(@Nullable Properties environment) {_		CollectionUtils.mergePropertiesIntoMap(environment, this.environment)__	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,server,as,code,java,util,properties,string,key,value,pairs;public,void,set,environment,nullable,properties,environment,collection,utils,merge,properties,into,map,environment,this,environment
ConnectorServerFactoryBean -> public void setEnvironment(@Nullable Properties environment);1530174524;Set the environment properties used to construct the {@code JMXConnectorServer}_as {@code java.util.Properties} (String key/value pairs).;public void setEnvironment(@Nullable Properties environment) {_		CollectionUtils.mergePropertiesIntoMap(environment, this.environment)__	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,server,as,code,java,util,properties,string,key,value,pairs;public,void,set,environment,nullable,properties,environment,collection,utils,merge,properties,into,map,environment,this,environment
ConnectorServerFactoryBean -> public void setEnvironment(@Nullable Properties environment);1542899558;Set the environment properties used to construct the {@code JMXConnectorServer}_as {@code java.util.Properties} (String key/value pairs).;public void setEnvironment(@Nullable Properties environment) {_		CollectionUtils.mergePropertiesIntoMap(environment, this.environment)__	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,server,as,code,java,util,properties,string,key,value,pairs;public,void,set,environment,nullable,properties,environment,collection,utils,merge,properties,into,map,environment,this,environment
ConnectorServerFactoryBean -> public void afterPropertiesSet() throws JMException, IOException;1328020251;Start the connector server. If the <code>threaded</code> flag is set to <code>true</code>,_the <code>JMXConnectorServer</code> will be started in a separate thread._If the <code>daemon</code> flag is set to <code>true</code>, that thread will be_started as a daemon thread._@throws JMException if a problem occured when registering the connector server_with the <code>MBeanServer</code>_@throws IOException if there is a problem starting the connector server;public void afterPropertiesSet() throws JMException, IOException {_		if (this.server == null) {_			this.server = JmxUtils.locateMBeanServer()__		}__		_		JMXServiceURL url = new JMXServiceURL(this.serviceUrl)___		_		this.connectorServer = JMXConnectorServerFactory.newJMXConnectorServer(url, this.environment, this.server)___		_		if (this.forwarder != null) {_			this.connectorServer.setMBeanServerForwarder(this.forwarder)__		}__		_		if (this.objectName != null) {_			doRegister(this.connectorServer, this.objectName)__		}__		try {_			if (this.threaded) {_				_				Thread connectorThread = new Thread() {_					@Override_					public void run() {_						try {_							connectorServer.start()__						}_						catch (IOException ex) {_							throw new JmxException("Could not start JMX connector server after delay", ex)__						}_					}_				}___				connectorThread.setName("JMX Connector Thread [" + this.serviceUrl + "]")__				connectorThread.setDaemon(this.daemon)__				connectorThread.start()__			}_			else {_				_				this.connectorServer.start()__			}__			if (logger.isInfoEnabled()) {_				logger.info("JMX connector server started: " + this.connectorServer)__			}_		}__		catch (IOException ex) {_			_			unregisterBeans()__			throw ex__		}_	};start,the,connector,server,if,the,code,threaded,code,flag,is,set,to,code,true,code,the,code,jmxconnector,server,code,will,be,started,in,a,separate,thread,if,the,code,daemon,code,flag,is,set,to,code,true,code,that,thread,will,be,started,as,a,daemon,thread,throws,jmexception,if,a,problem,occured,when,registering,the,connector,server,with,the,code,mbean,server,code,throws,ioexception,if,there,is,a,problem,starting,the,connector,server;public,void,after,properties,set,throws,jmexception,ioexception,if,this,server,null,this,server,jmx,utils,locate,mbean,server,jmxservice,url,url,new,jmxservice,url,this,service,url,this,connector,server,jmxconnector,server,factory,new,jmxconnector,server,url,this,environment,this,server,if,this,forwarder,null,this,connector,server,set,mbean,server,forwarder,this,forwarder,if,this,object,name,null,do,register,this,connector,server,this,object,name,try,if,this,threaded,thread,connector,thread,new,thread,override,public,void,run,try,connector,server,start,catch,ioexception,ex,throw,new,jmx,exception,could,not,start,jmx,connector,server,after,delay,ex,connector,thread,set,name,jmx,connector,thread,this,service,url,connector,thread,set,daemon,this,daemon,connector,thread,start,else,this,connector,server,start,if,logger,is,info,enabled,logger,info,jmx,connector,server,started,this,connector,server,catch,ioexception,ex,unregister,beans,throw,ex
ConnectorServerFactoryBean -> public void afterPropertiesSet() throws JMException, IOException;1357119239;Start the connector server. If the {@code threaded} flag is set to {@code true},_the {@code JMXConnectorServer} will be started in a separate thread._If the {@code daemon} flag is set to {@code true}, that thread will be_started as a daemon thread._@throws JMException if a problem occured when registering the connector server_with the {@code MBeanServer}_@throws IOException if there is a problem starting the connector server;public void afterPropertiesSet() throws JMException, IOException {_		if (this.server == null) {_			this.server = JmxUtils.locateMBeanServer()__		}__		_		JMXServiceURL url = new JMXServiceURL(this.serviceUrl)___		_		this.connectorServer = JMXConnectorServerFactory.newJMXConnectorServer(url, this.environment, this.server)___		_		if (this.forwarder != null) {_			this.connectorServer.setMBeanServerForwarder(this.forwarder)__		}__		_		if (this.objectName != null) {_			doRegister(this.connectorServer, this.objectName)__		}__		try {_			if (this.threaded) {_				_				Thread connectorThread = new Thread() {_					@Override_					public void run() {_						try {_							connectorServer.start()__						}_						catch (IOException ex) {_							throw new JmxException("Could not start JMX connector server after delay", ex)__						}_					}_				}___				connectorThread.setName("JMX Connector Thread [" + this.serviceUrl + "]")__				connectorThread.setDaemon(this.daemon)__				connectorThread.start()__			}_			else {_				_				this.connectorServer.start()__			}__			if (logger.isInfoEnabled()) {_				logger.info("JMX connector server started: " + this.connectorServer)__			}_		}__		catch (IOException ex) {_			_			unregisterBeans()__			throw ex__		}_	};start,the,connector,server,if,the,code,threaded,flag,is,set,to,code,true,the,code,jmxconnector,server,will,be,started,in,a,separate,thread,if,the,code,daemon,flag,is,set,to,code,true,that,thread,will,be,started,as,a,daemon,thread,throws,jmexception,if,a,problem,occured,when,registering,the,connector,server,with,the,code,mbean,server,throws,ioexception,if,there,is,a,problem,starting,the,connector,server;public,void,after,properties,set,throws,jmexception,ioexception,if,this,server,null,this,server,jmx,utils,locate,mbean,server,jmxservice,url,url,new,jmxservice,url,this,service,url,this,connector,server,jmxconnector,server,factory,new,jmxconnector,server,url,this,environment,this,server,if,this,forwarder,null,this,connector,server,set,mbean,server,forwarder,this,forwarder,if,this,object,name,null,do,register,this,connector,server,this,object,name,try,if,this,threaded,thread,connector,thread,new,thread,override,public,void,run,try,connector,server,start,catch,ioexception,ex,throw,new,jmx,exception,could,not,start,jmx,connector,server,after,delay,ex,connector,thread,set,name,jmx,connector,thread,this,service,url,connector,thread,set,daemon,this,daemon,connector,thread,start,else,this,connector,server,start,if,logger,is,info,enabled,logger,info,jmx,connector,server,started,this,connector,server,catch,ioexception,ex,unregister,beans,throw,ex
ConnectorServerFactoryBean -> public void setEnvironmentMap(Map<String, ?> environment);1328020251;Set the environment properties used to construct the <code>JMXConnector</code>_as a <code>Map</code> of String keys and arbitrary Object values.;public void setEnvironmentMap(Map<String, ?> environment) {_		if (environment != null) {_			this.environment.putAll(environment)__		}_	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,code,as,a,code,map,code,of,string,keys,and,arbitrary,object,values;public,void,set,environment,map,map,string,environment,if,environment,null,this,environment,put,all,environment
ConnectorServerFactoryBean -> public void setEnvironmentMap(Map<String, ?> environment);1356735495;Set the environment properties used to construct the {@code JMXConnector}_as a {@code Map} of String keys and arbitrary Object values.;public void setEnvironmentMap(Map<String, ?> environment) {_		if (environment != null) {_			this.environment.putAll(environment)__		}_	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,a,code,map,of,string,keys,and,arbitrary,object,values;public,void,set,environment,map,map,string,environment,if,environment,null,this,environment,put,all,environment
ConnectorServerFactoryBean -> public void setEnvironmentMap(Map<String, ?> environment);1357119239;Set the environment properties used to construct the {@code JMXConnector}_as a {@code Map} of String keys and arbitrary Object values.;public void setEnvironmentMap(Map<String, ?> environment) {_		if (environment != null) {_			this.environment.putAll(environment)__		}_	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,a,code,map,of,string,keys,and,arbitrary,object,values;public,void,set,environment,map,map,string,environment,if,environment,null,this,environment,put,all,environment
ConnectorServerFactoryBean -> public void setEnvironmentMap(Map<String, ?> environment);1368482696;Set the environment properties used to construct the {@code JMXConnector}_as a {@code Map} of String keys and arbitrary Object values.;public void setEnvironmentMap(Map<String, ?> environment) {_		if (environment != null) {_			this.environment.putAll(environment)__		}_	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,a,code,map,of,string,keys,and,arbitrary,object,values;public,void,set,environment,map,map,string,environment,if,environment,null,this,environment,put,all,environment
ConnectorServerFactoryBean -> public void setEnvironmentMap(Map<String, ?> environment);1467730834;Set the environment properties used to construct the {@code JMXConnector}_as a {@code Map} of String keys and arbitrary Object values.;public void setEnvironmentMap(Map<String, ?> environment) {_		if (environment != null) {_			this.environment.putAll(environment)__		}_	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,a,code,map,of,string,keys,and,arbitrary,object,values;public,void,set,environment,map,map,string,environment,if,environment,null,this,environment,put,all,environment
ConnectorServerFactoryBean -> public void setEnvironmentMap(Map<String, ?> environment);1467983536;Set the environment properties used to construct the {@code JMXConnector}_as a {@code Map} of String keys and arbitrary Object values.;public void setEnvironmentMap(Map<String, ?> environment) {_		if (environment != null) {_			this.environment.putAll(environment)__		}_	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,a,code,map,of,string,keys,and,arbitrary,object,values;public,void,set,environment,map,map,string,environment,if,environment,null,this,environment,put,all,environment
ConnectorServerFactoryBean -> public void setEnvironmentMap(Map<String, ?> environment);1479931801;Set the environment properties used to construct the {@code JMXConnector}_as a {@code Map} of String keys and arbitrary Object values.;public void setEnvironmentMap(Map<String, ?> environment) {_		if (environment != null) {_			this.environment.putAll(environment)__		}_	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,a,code,map,of,string,keys,and,arbitrary,object,values;public,void,set,environment,map,map,string,environment,if,environment,null,this,environment,put,all,environment
ConnectorServerFactoryBean -> public void setEnvironment(Properties environment);1328020251;Set the environment properties used to construct the <code>JMXConnectorServer</code>_as <code>java.util.Properties</code> (String key/value pairs).;public void setEnvironment(Properties environment) {_		CollectionUtils.mergePropertiesIntoMap(environment, this.environment)__	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,server,code,as,code,java,util,properties,code,string,key,value,pairs;public,void,set,environment,properties,environment,collection,utils,merge,properties,into,map,environment,this,environment
ConnectorServerFactoryBean -> public void setEnvironment(Properties environment);1356735495;Set the environment properties used to construct the {@code JMXConnectorServer}_as {@code java.util.Properties} (String key/value pairs).;public void setEnvironment(Properties environment) {_		CollectionUtils.mergePropertiesIntoMap(environment, this.environment)__	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,server,as,code,java,util,properties,string,key,value,pairs;public,void,set,environment,properties,environment,collection,utils,merge,properties,into,map,environment,this,environment
ConnectorServerFactoryBean -> public void setEnvironment(Properties environment);1357119239;Set the environment properties used to construct the {@code JMXConnectorServer}_as {@code java.util.Properties} (String key/value pairs).;public void setEnvironment(Properties environment) {_		CollectionUtils.mergePropertiesIntoMap(environment, this.environment)__	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,server,as,code,java,util,properties,string,key,value,pairs;public,void,set,environment,properties,environment,collection,utils,merge,properties,into,map,environment,this,environment
ConnectorServerFactoryBean -> public void setEnvironment(Properties environment);1368482696;Set the environment properties used to construct the {@code JMXConnectorServer}_as {@code java.util.Properties} (String key/value pairs).;public void setEnvironment(Properties environment) {_		CollectionUtils.mergePropertiesIntoMap(environment, this.environment)__	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,server,as,code,java,util,properties,string,key,value,pairs;public,void,set,environment,properties,environment,collection,utils,merge,properties,into,map,environment,this,environment
ConnectorServerFactoryBean -> public void setEnvironment(Properties environment);1467730834;Set the environment properties used to construct the {@code JMXConnectorServer}_as {@code java.util.Properties} (String key/value pairs).;public void setEnvironment(Properties environment) {_		CollectionUtils.mergePropertiesIntoMap(environment, this.environment)__	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,server,as,code,java,util,properties,string,key,value,pairs;public,void,set,environment,properties,environment,collection,utils,merge,properties,into,map,environment,this,environment
ConnectorServerFactoryBean -> public void setEnvironment(Properties environment);1467983536;Set the environment properties used to construct the {@code JMXConnectorServer}_as {@code java.util.Properties} (String key/value pairs).;public void setEnvironment(Properties environment) {_		CollectionUtils.mergePropertiesIntoMap(environment, this.environment)__	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,server,as,code,java,util,properties,string,key,value,pairs;public,void,set,environment,properties,environment,collection,utils,merge,properties,into,map,environment,this,environment
ConnectorServerFactoryBean -> public void setEnvironment(Properties environment);1479931801;Set the environment properties used to construct the {@code JMXConnectorServer}_as {@code java.util.Properties} (String key/value pairs).;public void setEnvironment(Properties environment) {_		CollectionUtils.mergePropertiesIntoMap(environment, this.environment)__	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,server,as,code,java,util,properties,string,key,value,pairs;public,void,set,environment,properties,environment,collection,utils,merge,properties,into,map,environment,this,environment
ConnectorServerFactoryBean -> public void setForwarder(MBeanServerForwarder forwarder);1328020251;Set an MBeanServerForwarder to be applied to the <code>JMXConnectorServer</code>.;public void setForwarder(MBeanServerForwarder forwarder) {_		this.forwarder = forwarder__	};set,an,mbean,server,forwarder,to,be,applied,to,the,code,jmxconnector,server,code;public,void,set,forwarder,mbean,server,forwarder,forwarder,this,forwarder,forwarder
ConnectorServerFactoryBean -> public void setForwarder(MBeanServerForwarder forwarder);1356735495;Set an MBeanServerForwarder to be applied to the {@code JMXConnectorServer}.;public void setForwarder(MBeanServerForwarder forwarder) {_		this.forwarder = forwarder__	};set,an,mbean,server,forwarder,to,be,applied,to,the,code,jmxconnector,server;public,void,set,forwarder,mbean,server,forwarder,forwarder,this,forwarder,forwarder
ConnectorServerFactoryBean -> public void setForwarder(MBeanServerForwarder forwarder);1357119239;Set an MBeanServerForwarder to be applied to the {@code JMXConnectorServer}.;public void setForwarder(MBeanServerForwarder forwarder) {_		this.forwarder = forwarder__	};set,an,mbean,server,forwarder,to,be,applied,to,the,code,jmxconnector,server;public,void,set,forwarder,mbean,server,forwarder,forwarder,this,forwarder,forwarder
ConnectorServerFactoryBean -> public void setForwarder(MBeanServerForwarder forwarder);1368482696;Set an MBeanServerForwarder to be applied to the {@code JMXConnectorServer}.;public void setForwarder(MBeanServerForwarder forwarder) {_		this.forwarder = forwarder__	};set,an,mbean,server,forwarder,to,be,applied,to,the,code,jmxconnector,server;public,void,set,forwarder,mbean,server,forwarder,forwarder,this,forwarder,forwarder
ConnectorServerFactoryBean -> public void setForwarder(MBeanServerForwarder forwarder);1467730834;Set an MBeanServerForwarder to be applied to the {@code JMXConnectorServer}.;public void setForwarder(MBeanServerForwarder forwarder) {_		this.forwarder = forwarder__	};set,an,mbean,server,forwarder,to,be,applied,to,the,code,jmxconnector,server;public,void,set,forwarder,mbean,server,forwarder,forwarder,this,forwarder,forwarder
ConnectorServerFactoryBean -> public void setForwarder(MBeanServerForwarder forwarder);1467983536;Set an MBeanServerForwarder to be applied to the {@code JMXConnectorServer}.;public void setForwarder(MBeanServerForwarder forwarder) {_		this.forwarder = forwarder__	};set,an,mbean,server,forwarder,to,be,applied,to,the,code,jmxconnector,server;public,void,set,forwarder,mbean,server,forwarder,forwarder,this,forwarder,forwarder
ConnectorServerFactoryBean -> public void setForwarder(MBeanServerForwarder forwarder);1479931801;Set an MBeanServerForwarder to be applied to the {@code JMXConnectorServer}.;public void setForwarder(MBeanServerForwarder forwarder) {_		this.forwarder = forwarder__	};set,an,mbean,server,forwarder,to,be,applied,to,the,code,jmxconnector,server;public,void,set,forwarder,mbean,server,forwarder,forwarder,this,forwarder,forwarder
ConnectorServerFactoryBean -> public void setForwarder(MBeanServerForwarder forwarder);1496837955;Set an MBeanServerForwarder to be applied to the {@code JMXConnectorServer}.;public void setForwarder(MBeanServerForwarder forwarder) {_		this.forwarder = forwarder__	};set,an,mbean,server,forwarder,to,be,applied,to,the,code,jmxconnector,server;public,void,set,forwarder,mbean,server,forwarder,forwarder,this,forwarder,forwarder
ConnectorServerFactoryBean -> public void setForwarder(MBeanServerForwarder forwarder);1498780456;Set an MBeanServerForwarder to be applied to the {@code JMXConnectorServer}.;public void setForwarder(MBeanServerForwarder forwarder) {_		this.forwarder = forwarder__	};set,an,mbean,server,forwarder,to,be,applied,to,the,code,jmxconnector,server;public,void,set,forwarder,mbean,server,forwarder,forwarder,this,forwarder,forwarder
ConnectorServerFactoryBean -> public void setForwarder(MBeanServerForwarder forwarder);1502974979;Set an MBeanServerForwarder to be applied to the {@code JMXConnectorServer}.;public void setForwarder(MBeanServerForwarder forwarder) {_		this.forwarder = forwarder__	};set,an,mbean,server,forwarder,to,be,applied,to,the,code,jmxconnector,server;public,void,set,forwarder,mbean,server,forwarder,forwarder,this,forwarder,forwarder
ConnectorServerFactoryBean -> public void setForwarder(MBeanServerForwarder forwarder);1530174524;Set an MBeanServerForwarder to be applied to the {@code JMXConnectorServer}.;public void setForwarder(MBeanServerForwarder forwarder) {_		this.forwarder = forwarder__	};set,an,mbean,server,forwarder,to,be,applied,to,the,code,jmxconnector,server;public,void,set,forwarder,mbean,server,forwarder,forwarder,this,forwarder,forwarder
ConnectorServerFactoryBean -> public void setForwarder(MBeanServerForwarder forwarder);1542899558;Set an MBeanServerForwarder to be applied to the {@code JMXConnectorServer}.;public void setForwarder(MBeanServerForwarder forwarder) {_		this.forwarder = forwarder__	};set,an,mbean,server,forwarder,to,be,applied,to,the,code,jmxconnector,server;public,void,set,forwarder,mbean,server,forwarder,forwarder,this,forwarder,forwarder
ConnectorServerFactoryBean -> @Override 	public void afterPropertiesSet() throws JMException, IOException;1356735495;Start the connector server. If the {@code threaded} flag is set to {@code true},_the {@code JMXConnectorServer} will be started in a separate thread._If the {@code daemon} flag is set to {@code true}, that thread will be_started as a daemon thread._@throws JMException if a problem occured when registering the connector server_with the {@code MBeanServer}_@throws IOException if there is a problem starting the connector server;@Override_	public void afterPropertiesSet() throws JMException, IOException {_		if (this.server == null) {_			this.server = JmxUtils.locateMBeanServer()__		}__		_		JMXServiceURL url = new JMXServiceURL(this.serviceUrl)___		_		this.connectorServer = JMXConnectorServerFactory.newJMXConnectorServer(url, this.environment, this.server)___		_		if (this.forwarder != null) {_			this.connectorServer.setMBeanServerForwarder(this.forwarder)__		}__		_		if (this.objectName != null) {_			doRegister(this.connectorServer, this.objectName)__		}__		try {_			if (this.threaded) {_				_				Thread connectorThread = new Thread() {_					@Override_					public void run() {_						try {_							connectorServer.start()__						}_						catch (IOException ex) {_							throw new JmxException("Could not start JMX connector server after delay", ex)__						}_					}_				}___				connectorThread.setName("JMX Connector Thread [" + this.serviceUrl + "]")__				connectorThread.setDaemon(this.daemon)__				connectorThread.start()__			}_			else {_				_				this.connectorServer.start()__			}__			if (logger.isInfoEnabled()) {_				logger.info("JMX connector server started: " + this.connectorServer)__			}_		}__		catch (IOException ex) {_			_			unregisterBeans()__			throw ex__		}_	};start,the,connector,server,if,the,code,threaded,flag,is,set,to,code,true,the,code,jmxconnector,server,will,be,started,in,a,separate,thread,if,the,code,daemon,flag,is,set,to,code,true,that,thread,will,be,started,as,a,daemon,thread,throws,jmexception,if,a,problem,occured,when,registering,the,connector,server,with,the,code,mbean,server,throws,ioexception,if,there,is,a,problem,starting,the,connector,server;override,public,void,after,properties,set,throws,jmexception,ioexception,if,this,server,null,this,server,jmx,utils,locate,mbean,server,jmxservice,url,url,new,jmxservice,url,this,service,url,this,connector,server,jmxconnector,server,factory,new,jmxconnector,server,url,this,environment,this,server,if,this,forwarder,null,this,connector,server,set,mbean,server,forwarder,this,forwarder,if,this,object,name,null,do,register,this,connector,server,this,object,name,try,if,this,threaded,thread,connector,thread,new,thread,override,public,void,run,try,connector,server,start,catch,ioexception,ex,throw,new,jmx,exception,could,not,start,jmx,connector,server,after,delay,ex,connector,thread,set,name,jmx,connector,thread,this,service,url,connector,thread,set,daemon,this,daemon,connector,thread,start,else,this,connector,server,start,if,logger,is,info,enabled,logger,info,jmx,connector,server,started,this,connector,server,catch,ioexception,ex,unregister,beans,throw,ex
ConnectorServerFactoryBean -> @Override 	public void afterPropertiesSet() throws JMException, IOException;1368482696;Start the connector server. If the {@code threaded} flag is set to {@code true},_the {@code JMXConnectorServer} will be started in a separate thread._If the {@code daemon} flag is set to {@code true}, that thread will be_started as a daemon thread._@throws JMException if a problem occured when registering the connector server_with the {@code MBeanServer}_@throws IOException if there is a problem starting the connector server;@Override_	public void afterPropertiesSet() throws JMException, IOException {_		if (this.server == null) {_			this.server = JmxUtils.locateMBeanServer()__		}__		_		JMXServiceURL url = new JMXServiceURL(this.serviceUrl)___		_		this.connectorServer = JMXConnectorServerFactory.newJMXConnectorServer(url, this.environment, this.server)___		_		if (this.forwarder != null) {_			this.connectorServer.setMBeanServerForwarder(this.forwarder)__		}__		_		if (this.objectName != null) {_			doRegister(this.connectorServer, this.objectName)__		}__		try {_			if (this.threaded) {_				_				Thread connectorThread = new Thread() {_					@Override_					public void run() {_						try {_							connectorServer.start()__						}_						catch (IOException ex) {_							throw new JmxException("Could not start JMX connector server after delay", ex)__						}_					}_				}___				connectorThread.setName("JMX Connector Thread [" + this.serviceUrl + "]")__				connectorThread.setDaemon(this.daemon)__				connectorThread.start()__			}_			else {_				_				this.connectorServer.start()__			}__			if (logger.isInfoEnabled()) {_				logger.info("JMX connector server started: " + this.connectorServer)__			}_		}__		catch (IOException ex) {_			_			unregisterBeans()__			throw ex__		}_	};start,the,connector,server,if,the,code,threaded,flag,is,set,to,code,true,the,code,jmxconnector,server,will,be,started,in,a,separate,thread,if,the,code,daemon,flag,is,set,to,code,true,that,thread,will,be,started,as,a,daemon,thread,throws,jmexception,if,a,problem,occured,when,registering,the,connector,server,with,the,code,mbean,server,throws,ioexception,if,there,is,a,problem,starting,the,connector,server;override,public,void,after,properties,set,throws,jmexception,ioexception,if,this,server,null,this,server,jmx,utils,locate,mbean,server,jmxservice,url,url,new,jmxservice,url,this,service,url,this,connector,server,jmxconnector,server,factory,new,jmxconnector,server,url,this,environment,this,server,if,this,forwarder,null,this,connector,server,set,mbean,server,forwarder,this,forwarder,if,this,object,name,null,do,register,this,connector,server,this,object,name,try,if,this,threaded,thread,connector,thread,new,thread,override,public,void,run,try,connector,server,start,catch,ioexception,ex,throw,new,jmx,exception,could,not,start,jmx,connector,server,after,delay,ex,connector,thread,set,name,jmx,connector,thread,this,service,url,connector,thread,set,daemon,this,daemon,connector,thread,start,else,this,connector,server,start,if,logger,is,info,enabled,logger,info,jmx,connector,server,started,this,connector,server,catch,ioexception,ex,unregister,beans,throw,ex
ConnectorServerFactoryBean -> @Override 	public void afterPropertiesSet() throws JMException, IOException;1467730834;Start the connector server. If the {@code threaded} flag is set to {@code true},_the {@code JMXConnectorServer} will be started in a separate thread._If the {@code daemon} flag is set to {@code true}, that thread will be_started as a daemon thread._@throws JMException if a problem occured when registering the connector server_with the {@code MBeanServer}_@throws IOException if there is a problem starting the connector server;@Override_	public void afterPropertiesSet() throws JMException, IOException {_		if (this.server == null) {_			this.server = JmxUtils.locateMBeanServer()__		}__		_		JMXServiceURL url = new JMXServiceURL(this.serviceUrl)___		_		this.connectorServer = JMXConnectorServerFactory.newJMXConnectorServer(url, this.environment, this.server)___		_		if (this.forwarder != null) {_			this.connectorServer.setMBeanServerForwarder(this.forwarder)__		}__		_		if (this.objectName != null) {_			doRegister(this.connectorServer, this.objectName)__		}__		try {_			if (this.threaded) {_				_				Thread connectorThread = new Thread() {_					@Override_					public void run() {_						try {_							connectorServer.start()__						}_						catch (IOException ex) {_							throw new JmxException("Could not start JMX connector server after delay", ex)__						}_					}_				}___				connectorThread.setName("JMX Connector Thread [" + this.serviceUrl + "]")__				connectorThread.setDaemon(this.daemon)__				connectorThread.start()__			}_			else {_				_				this.connectorServer.start()__			}__			if (logger.isInfoEnabled()) {_				logger.info("JMX connector server started: " + this.connectorServer)__			}_		}__		catch (IOException ex) {_			_			unregisterBeans()__			throw ex__		}_	};start,the,connector,server,if,the,code,threaded,flag,is,set,to,code,true,the,code,jmxconnector,server,will,be,started,in,a,separate,thread,if,the,code,daemon,flag,is,set,to,code,true,that,thread,will,be,started,as,a,daemon,thread,throws,jmexception,if,a,problem,occured,when,registering,the,connector,server,with,the,code,mbean,server,throws,ioexception,if,there,is,a,problem,starting,the,connector,server;override,public,void,after,properties,set,throws,jmexception,ioexception,if,this,server,null,this,server,jmx,utils,locate,mbean,server,jmxservice,url,url,new,jmxservice,url,this,service,url,this,connector,server,jmxconnector,server,factory,new,jmxconnector,server,url,this,environment,this,server,if,this,forwarder,null,this,connector,server,set,mbean,server,forwarder,this,forwarder,if,this,object,name,null,do,register,this,connector,server,this,object,name,try,if,this,threaded,thread,connector,thread,new,thread,override,public,void,run,try,connector,server,start,catch,ioexception,ex,throw,new,jmx,exception,could,not,start,jmx,connector,server,after,delay,ex,connector,thread,set,name,jmx,connector,thread,this,service,url,connector,thread,set,daemon,this,daemon,connector,thread,start,else,this,connector,server,start,if,logger,is,info,enabled,logger,info,jmx,connector,server,started,this,connector,server,catch,ioexception,ex,unregister,beans,throw,ex
ConnectorServerFactoryBean -> @Override 	public void afterPropertiesSet() throws JMException, IOException;1467983536;Start the connector server. If the {@code threaded} flag is set to {@code true},_the {@code JMXConnectorServer} will be started in a separate thread._If the {@code daemon} flag is set to {@code true}, that thread will be_started as a daemon thread._@throws JMException if a problem occurred when registering the connector server_with the {@code MBeanServer}_@throws IOException if there is a problem starting the connector server;@Override_	public void afterPropertiesSet() throws JMException, IOException {_		if (this.server == null) {_			this.server = JmxUtils.locateMBeanServer()__		}__		_		JMXServiceURL url = new JMXServiceURL(this.serviceUrl)___		_		this.connectorServer = JMXConnectorServerFactory.newJMXConnectorServer(url, this.environment, this.server)___		_		if (this.forwarder != null) {_			this.connectorServer.setMBeanServerForwarder(this.forwarder)__		}__		_		if (this.objectName != null) {_			doRegister(this.connectorServer, this.objectName)__		}__		try {_			if (this.threaded) {_				_				Thread connectorThread = new Thread() {_					@Override_					public void run() {_						try {_							connectorServer.start()__						}_						catch (IOException ex) {_							throw new JmxException("Could not start JMX connector server after delay", ex)__						}_					}_				}___				connectorThread.setName("JMX Connector Thread [" + this.serviceUrl + "]")__				connectorThread.setDaemon(this.daemon)__				connectorThread.start()__			}_			else {_				_				this.connectorServer.start()__			}__			if (logger.isInfoEnabled()) {_				logger.info("JMX connector server started: " + this.connectorServer)__			}_		}__		catch (IOException ex) {_			_			unregisterBeans()__			throw ex__		}_	};start,the,connector,server,if,the,code,threaded,flag,is,set,to,code,true,the,code,jmxconnector,server,will,be,started,in,a,separate,thread,if,the,code,daemon,flag,is,set,to,code,true,that,thread,will,be,started,as,a,daemon,thread,throws,jmexception,if,a,problem,occurred,when,registering,the,connector,server,with,the,code,mbean,server,throws,ioexception,if,there,is,a,problem,starting,the,connector,server;override,public,void,after,properties,set,throws,jmexception,ioexception,if,this,server,null,this,server,jmx,utils,locate,mbean,server,jmxservice,url,url,new,jmxservice,url,this,service,url,this,connector,server,jmxconnector,server,factory,new,jmxconnector,server,url,this,environment,this,server,if,this,forwarder,null,this,connector,server,set,mbean,server,forwarder,this,forwarder,if,this,object,name,null,do,register,this,connector,server,this,object,name,try,if,this,threaded,thread,connector,thread,new,thread,override,public,void,run,try,connector,server,start,catch,ioexception,ex,throw,new,jmx,exception,could,not,start,jmx,connector,server,after,delay,ex,connector,thread,set,name,jmx,connector,thread,this,service,url,connector,thread,set,daemon,this,daemon,connector,thread,start,else,this,connector,server,start,if,logger,is,info,enabled,logger,info,jmx,connector,server,started,this,connector,server,catch,ioexception,ex,unregister,beans,throw,ex
ConnectorServerFactoryBean -> @Override 	public void afterPropertiesSet() throws JMException, IOException;1479931801;Start the connector server. If the {@code threaded} flag is set to {@code true},_the {@code JMXConnectorServer} will be started in a separate thread._If the {@code daemon} flag is set to {@code true}, that thread will be_started as a daemon thread._@throws JMException if a problem occurred when registering the connector server_with the {@code MBeanServer}_@throws IOException if there is a problem starting the connector server;@Override_	public void afterPropertiesSet() throws JMException, IOException {_		if (this.server == null) {_			this.server = JmxUtils.locateMBeanServer()__		}__		_		JMXServiceURL url = new JMXServiceURL(this.serviceUrl)___		_		this.connectorServer = JMXConnectorServerFactory.newJMXConnectorServer(url, this.environment, this.server)___		_		if (this.forwarder != null) {_			this.connectorServer.setMBeanServerForwarder(this.forwarder)__		}__		_		if (this.objectName != null) {_			doRegister(this.connectorServer, this.objectName)__		}__		try {_			if (this.threaded) {_				_				Thread connectorThread = new Thread() {_					@Override_					public void run() {_						try {_							connectorServer.start()__						}_						catch (IOException ex) {_							throw new JmxException("Could not start JMX connector server after delay", ex)__						}_					}_				}___				connectorThread.setName("JMX Connector Thread [" + this.serviceUrl + "]")__				connectorThread.setDaemon(this.daemon)__				connectorThread.start()__			}_			else {_				_				this.connectorServer.start()__			}__			if (logger.isInfoEnabled()) {_				logger.info("JMX connector server started: " + this.connectorServer)__			}_		}__		catch (IOException ex) {_			_			unregisterBeans()__			throw ex__		}_	};start,the,connector,server,if,the,code,threaded,flag,is,set,to,code,true,the,code,jmxconnector,server,will,be,started,in,a,separate,thread,if,the,code,daemon,flag,is,set,to,code,true,that,thread,will,be,started,as,a,daemon,thread,throws,jmexception,if,a,problem,occurred,when,registering,the,connector,server,with,the,code,mbean,server,throws,ioexception,if,there,is,a,problem,starting,the,connector,server;override,public,void,after,properties,set,throws,jmexception,ioexception,if,this,server,null,this,server,jmx,utils,locate,mbean,server,jmxservice,url,url,new,jmxservice,url,this,service,url,this,connector,server,jmxconnector,server,factory,new,jmxconnector,server,url,this,environment,this,server,if,this,forwarder,null,this,connector,server,set,mbean,server,forwarder,this,forwarder,if,this,object,name,null,do,register,this,connector,server,this,object,name,try,if,this,threaded,thread,connector,thread,new,thread,override,public,void,run,try,connector,server,start,catch,ioexception,ex,throw,new,jmx,exception,could,not,start,jmx,connector,server,after,delay,ex,connector,thread,set,name,jmx,connector,thread,this,service,url,connector,thread,set,daemon,this,daemon,connector,thread,start,else,this,connector,server,start,if,logger,is,info,enabled,logger,info,jmx,connector,server,started,this,connector,server,catch,ioexception,ex,unregister,beans,throw,ex
ConnectorServerFactoryBean -> @Override 	public void afterPropertiesSet() throws JMException, IOException;1496837955;Start the connector server. If the {@code threaded} flag is set to {@code true},_the {@code JMXConnectorServer} will be started in a separate thread._If the {@code daemon} flag is set to {@code true}, that thread will be_started as a daemon thread._@throws JMException if a problem occurred when registering the connector server_with the {@code MBeanServer}_@throws IOException if there is a problem starting the connector server;@Override_	public void afterPropertiesSet() throws JMException, IOException {_		if (this.server == null) {_			this.server = JmxUtils.locateMBeanServer()__		}__		_		JMXServiceURL url = new JMXServiceURL(this.serviceUrl)___		_		this.connectorServer = JMXConnectorServerFactory.newJMXConnectorServer(url, this.environment, this.server)___		_		if (this.forwarder != null) {_			this.connectorServer.setMBeanServerForwarder(this.forwarder)__		}__		_		if (this.objectName != null) {_			doRegister(this.connectorServer, this.objectName)__		}__		try {_			if (this.threaded) {_				_				Thread connectorThread = new Thread() {_					@Override_					public void run() {_						try {_							connectorServer.start()__						}_						catch (IOException ex) {_							throw new JmxException("Could not start JMX connector server after delay", ex)__						}_					}_				}___				connectorThread.setName("JMX Connector Thread [" + this.serviceUrl + "]")__				connectorThread.setDaemon(this.daemon)__				connectorThread.start()__			}_			else {_				_				this.connectorServer.start()__			}__			if (logger.isInfoEnabled()) {_				logger.info("JMX connector server started: " + this.connectorServer)__			}_		}__		catch (IOException ex) {_			_			unregisterBeans()__			throw ex__		}_	};start,the,connector,server,if,the,code,threaded,flag,is,set,to,code,true,the,code,jmxconnector,server,will,be,started,in,a,separate,thread,if,the,code,daemon,flag,is,set,to,code,true,that,thread,will,be,started,as,a,daemon,thread,throws,jmexception,if,a,problem,occurred,when,registering,the,connector,server,with,the,code,mbean,server,throws,ioexception,if,there,is,a,problem,starting,the,connector,server;override,public,void,after,properties,set,throws,jmexception,ioexception,if,this,server,null,this,server,jmx,utils,locate,mbean,server,jmxservice,url,url,new,jmxservice,url,this,service,url,this,connector,server,jmxconnector,server,factory,new,jmxconnector,server,url,this,environment,this,server,if,this,forwarder,null,this,connector,server,set,mbean,server,forwarder,this,forwarder,if,this,object,name,null,do,register,this,connector,server,this,object,name,try,if,this,threaded,thread,connector,thread,new,thread,override,public,void,run,try,connector,server,start,catch,ioexception,ex,throw,new,jmx,exception,could,not,start,jmx,connector,server,after,delay,ex,connector,thread,set,name,jmx,connector,thread,this,service,url,connector,thread,set,daemon,this,daemon,connector,thread,start,else,this,connector,server,start,if,logger,is,info,enabled,logger,info,jmx,connector,server,started,this,connector,server,catch,ioexception,ex,unregister,beans,throw,ex
ConnectorServerFactoryBean -> @Override 	public void afterPropertiesSet() throws JMException, IOException;1498780456;Start the connector server. If the {@code threaded} flag is set to {@code true},_the {@code JMXConnectorServer} will be started in a separate thread._If the {@code daemon} flag is set to {@code true}, that thread will be_started as a daemon thread._@throws JMException if a problem occurred when registering the connector server_with the {@code MBeanServer}_@throws IOException if there is a problem starting the connector server;@Override_	public void afterPropertiesSet() throws JMException, IOException {_		if (this.server == null) {_			this.server = JmxUtils.locateMBeanServer()__		}__		_		JMXServiceURL url = new JMXServiceURL(this.serviceUrl)___		_		this.connectorServer = JMXConnectorServerFactory.newJMXConnectorServer(url, this.environment, this.server)___		_		if (this.forwarder != null) {_			this.connectorServer.setMBeanServerForwarder(this.forwarder)__		}__		_		if (this.objectName != null) {_			doRegister(this.connectorServer, this.objectName)__		}__		try {_			if (this.threaded) {_				_				Thread connectorThread = new Thread() {_					@Override_					public void run() {_						try {_							connectorServer.start()__						}_						catch (IOException ex) {_							throw new JmxException("Could not start JMX connector server after delay", ex)__						}_					}_				}___				connectorThread.setName("JMX Connector Thread [" + this.serviceUrl + "]")__				connectorThread.setDaemon(this.daemon)__				connectorThread.start()__			}_			else {_				_				this.connectorServer.start()__			}__			if (logger.isInfoEnabled()) {_				logger.info("JMX connector server started: " + this.connectorServer)__			}_		}__		catch (IOException ex) {_			_			unregisterBeans()__			throw ex__		}_	};start,the,connector,server,if,the,code,threaded,flag,is,set,to,code,true,the,code,jmxconnector,server,will,be,started,in,a,separate,thread,if,the,code,daemon,flag,is,set,to,code,true,that,thread,will,be,started,as,a,daemon,thread,throws,jmexception,if,a,problem,occurred,when,registering,the,connector,server,with,the,code,mbean,server,throws,ioexception,if,there,is,a,problem,starting,the,connector,server;override,public,void,after,properties,set,throws,jmexception,ioexception,if,this,server,null,this,server,jmx,utils,locate,mbean,server,jmxservice,url,url,new,jmxservice,url,this,service,url,this,connector,server,jmxconnector,server,factory,new,jmxconnector,server,url,this,environment,this,server,if,this,forwarder,null,this,connector,server,set,mbean,server,forwarder,this,forwarder,if,this,object,name,null,do,register,this,connector,server,this,object,name,try,if,this,threaded,thread,connector,thread,new,thread,override,public,void,run,try,connector,server,start,catch,ioexception,ex,throw,new,jmx,exception,could,not,start,jmx,connector,server,after,delay,ex,connector,thread,set,name,jmx,connector,thread,this,service,url,connector,thread,set,daemon,this,daemon,connector,thread,start,else,this,connector,server,start,if,logger,is,info,enabled,logger,info,jmx,connector,server,started,this,connector,server,catch,ioexception,ex,unregister,beans,throw,ex
ConnectorServerFactoryBean -> @Override 	public void afterPropertiesSet() throws JMException, IOException;1502974979;Start the connector server. If the {@code threaded} flag is set to {@code true},_the {@code JMXConnectorServer} will be started in a separate thread._If the {@code daemon} flag is set to {@code true}, that thread will be_started as a daemon thread._@throws JMException if a problem occurred when registering the connector server_with the {@code MBeanServer}_@throws IOException if there is a problem starting the connector server;@Override_	public void afterPropertiesSet() throws JMException, IOException {_		if (this.server == null) {_			this.server = JmxUtils.locateMBeanServer()__		}__		_		JMXServiceURL url = new JMXServiceURL(this.serviceUrl)___		_		this.connectorServer = JMXConnectorServerFactory.newJMXConnectorServer(url, this.environment, this.server)___		_		if (this.forwarder != null) {_			this.connectorServer.setMBeanServerForwarder(this.forwarder)__		}__		_		if (this.objectName != null) {_			doRegister(this.connectorServer, this.objectName)__		}__		try {_			if (this.threaded) {_				_				Thread connectorThread = new Thread() {_					@Override_					public void run() {_						try {_							connectorServer.start()__						}_						catch (IOException ex) {_							throw new JmxException("Could not start JMX connector server after delay", ex)__						}_					}_				}___				connectorThread.setName("JMX Connector Thread [" + this.serviceUrl + "]")__				connectorThread.setDaemon(this.daemon)__				connectorThread.start()__			}_			else {_				_				this.connectorServer.start()__			}__			if (logger.isInfoEnabled()) {_				logger.info("JMX connector server started: " + this.connectorServer)__			}_		}__		catch (IOException ex) {_			_			unregisterBeans()__			throw ex__		}_	};start,the,connector,server,if,the,code,threaded,flag,is,set,to,code,true,the,code,jmxconnector,server,will,be,started,in,a,separate,thread,if,the,code,daemon,flag,is,set,to,code,true,that,thread,will,be,started,as,a,daemon,thread,throws,jmexception,if,a,problem,occurred,when,registering,the,connector,server,with,the,code,mbean,server,throws,ioexception,if,there,is,a,problem,starting,the,connector,server;override,public,void,after,properties,set,throws,jmexception,ioexception,if,this,server,null,this,server,jmx,utils,locate,mbean,server,jmxservice,url,url,new,jmxservice,url,this,service,url,this,connector,server,jmxconnector,server,factory,new,jmxconnector,server,url,this,environment,this,server,if,this,forwarder,null,this,connector,server,set,mbean,server,forwarder,this,forwarder,if,this,object,name,null,do,register,this,connector,server,this,object,name,try,if,this,threaded,thread,connector,thread,new,thread,override,public,void,run,try,connector,server,start,catch,ioexception,ex,throw,new,jmx,exception,could,not,start,jmx,connector,server,after,delay,ex,connector,thread,set,name,jmx,connector,thread,this,service,url,connector,thread,set,daemon,this,daemon,connector,thread,start,else,this,connector,server,start,if,logger,is,info,enabled,logger,info,jmx,connector,server,started,this,connector,server,catch,ioexception,ex,unregister,beans,throw,ex
ConnectorServerFactoryBean -> @Override 	public void afterPropertiesSet() throws JMException, IOException;1530174524;Start the connector server. If the {@code threaded} flag is set to {@code true},_the {@code JMXConnectorServer} will be started in a separate thread._If the {@code daemon} flag is set to {@code true}, that thread will be_started as a daemon thread._@throws JMException if a problem occurred when registering the connector server_with the {@code MBeanServer}_@throws IOException if there is a problem starting the connector server;@Override_	public void afterPropertiesSet() throws JMException, IOException {_		if (this.server == null) {_			this.server = JmxUtils.locateMBeanServer()__		}__		_		JMXServiceURL url = new JMXServiceURL(this.serviceUrl)___		_		this.connectorServer = JMXConnectorServerFactory.newJMXConnectorServer(url, this.environment, this.server)___		_		if (this.forwarder != null) {_			this.connectorServer.setMBeanServerForwarder(this.forwarder)__		}__		_		if (this.objectName != null) {_			doRegister(this.connectorServer, this.objectName)__		}__		try {_			if (this.threaded) {_				_				Thread connectorThread = new Thread() {_					@Override_					public void run() {_						try {_							connectorServer.start()__						}_						catch (IOException ex) {_							throw new JmxException("Could not start JMX connector server after delay", ex)__						}_					}_				}___				connectorThread.setName("JMX Connector Thread [" + this.serviceUrl + "]")__				connectorThread.setDaemon(this.daemon)__				connectorThread.start()__			}_			else {_				_				this.connectorServer.start()__			}__			if (logger.isInfoEnabled()) {_				logger.info("JMX connector server started: " + this.connectorServer)__			}_		}__		catch (IOException ex) {_			_			unregisterBeans()__			throw ex__		}_	};start,the,connector,server,if,the,code,threaded,flag,is,set,to,code,true,the,code,jmxconnector,server,will,be,started,in,a,separate,thread,if,the,code,daemon,flag,is,set,to,code,true,that,thread,will,be,started,as,a,daemon,thread,throws,jmexception,if,a,problem,occurred,when,registering,the,connector,server,with,the,code,mbean,server,throws,ioexception,if,there,is,a,problem,starting,the,connector,server;override,public,void,after,properties,set,throws,jmexception,ioexception,if,this,server,null,this,server,jmx,utils,locate,mbean,server,jmxservice,url,url,new,jmxservice,url,this,service,url,this,connector,server,jmxconnector,server,factory,new,jmxconnector,server,url,this,environment,this,server,if,this,forwarder,null,this,connector,server,set,mbean,server,forwarder,this,forwarder,if,this,object,name,null,do,register,this,connector,server,this,object,name,try,if,this,threaded,thread,connector,thread,new,thread,override,public,void,run,try,connector,server,start,catch,ioexception,ex,throw,new,jmx,exception,could,not,start,jmx,connector,server,after,delay,ex,connector,thread,set,name,jmx,connector,thread,this,service,url,connector,thread,set,daemon,this,daemon,connector,thread,start,else,this,connector,server,start,if,logger,is,info,enabled,logger,info,jmx,connector,server,started,this,connector,server,catch,ioexception,ex,unregister,beans,throw,ex
ConnectorServerFactoryBean -> @Override 	public void afterPropertiesSet() throws JMException, IOException;1542899558;Start the connector server. If the {@code threaded} flag is set to {@code true},_the {@code JMXConnectorServer} will be started in a separate thread._If the {@code daemon} flag is set to {@code true}, that thread will be_started as a daemon thread._@throws JMException if a problem occurred when registering the connector server_with the {@code MBeanServer}_@throws IOException if there is a problem starting the connector server;@Override_	public void afterPropertiesSet() throws JMException, IOException {_		if (this.server == null) {_			this.server = JmxUtils.locateMBeanServer()__		}__		_		JMXServiceURL url = new JMXServiceURL(this.serviceUrl)___		_		this.connectorServer = JMXConnectorServerFactory.newJMXConnectorServer(url, this.environment, this.server)___		_		if (this.forwarder != null) {_			this.connectorServer.setMBeanServerForwarder(this.forwarder)__		}__		_		if (this.objectName != null) {_			doRegister(this.connectorServer, this.objectName)__		}__		try {_			if (this.threaded) {_				_				final JMXConnectorServer serverToStart = this.connectorServer__				Thread connectorThread = new Thread() {_					@Override_					public void run() {_						try {_							serverToStart.start()__						}_						catch (IOException ex) {_							throw new JmxException("Could not start JMX connector server after delay", ex)__						}_					}_				}___				connectorThread.setName("JMX Connector Thread [" + this.serviceUrl + "]")__				connectorThread.setDaemon(this.daemon)__				connectorThread.start()__			}_			else {_				_				this.connectorServer.start()__			}__			if (logger.isInfoEnabled()) {_				logger.info("JMX connector server started: " + this.connectorServer)__			}_		}__		catch (IOException ex) {_			_			unregisterBeans()__			throw ex__		}_	};start,the,connector,server,if,the,code,threaded,flag,is,set,to,code,true,the,code,jmxconnector,server,will,be,started,in,a,separate,thread,if,the,code,daemon,flag,is,set,to,code,true,that,thread,will,be,started,as,a,daemon,thread,throws,jmexception,if,a,problem,occurred,when,registering,the,connector,server,with,the,code,mbean,server,throws,ioexception,if,there,is,a,problem,starting,the,connector,server;override,public,void,after,properties,set,throws,jmexception,ioexception,if,this,server,null,this,server,jmx,utils,locate,mbean,server,jmxservice,url,url,new,jmxservice,url,this,service,url,this,connector,server,jmxconnector,server,factory,new,jmxconnector,server,url,this,environment,this,server,if,this,forwarder,null,this,connector,server,set,mbean,server,forwarder,this,forwarder,if,this,object,name,null,do,register,this,connector,server,this,object,name,try,if,this,threaded,final,jmxconnector,server,server,to,start,this,connector,server,thread,connector,thread,new,thread,override,public,void,run,try,server,to,start,start,catch,ioexception,ex,throw,new,jmx,exception,could,not,start,jmx,connector,server,after,delay,ex,connector,thread,set,name,jmx,connector,thread,this,service,url,connector,thread,set,daemon,this,daemon,connector,thread,start,else,this,connector,server,start,if,logger,is,info,enabled,logger,info,jmx,connector,server,started,this,connector,server,catch,ioexception,ex,unregister,beans,throw,ex
ConnectorServerFactoryBean -> public void setServiceUrl(String serviceUrl);1328020251;Set the service URL for the <code>JMXConnectorServer</code>.;public void setServiceUrl(String serviceUrl) {_		this.serviceUrl = serviceUrl__	};set,the,service,url,for,the,code,jmxconnector,server,code;public,void,set,service,url,string,service,url,this,service,url,service,url
ConnectorServerFactoryBean -> public void setServiceUrl(String serviceUrl);1356735495;Set the service URL for the {@code JMXConnectorServer}.;public void setServiceUrl(String serviceUrl) {_		this.serviceUrl = serviceUrl__	};set,the,service,url,for,the,code,jmxconnector,server;public,void,set,service,url,string,service,url,this,service,url,service,url
ConnectorServerFactoryBean -> public void setServiceUrl(String serviceUrl);1357119239;Set the service URL for the {@code JMXConnectorServer}.;public void setServiceUrl(String serviceUrl) {_		this.serviceUrl = serviceUrl__	};set,the,service,url,for,the,code,jmxconnector,server;public,void,set,service,url,string,service,url,this,service,url,service,url
ConnectorServerFactoryBean -> public void setServiceUrl(String serviceUrl);1368482696;Set the service URL for the {@code JMXConnectorServer}.;public void setServiceUrl(String serviceUrl) {_		this.serviceUrl = serviceUrl__	};set,the,service,url,for,the,code,jmxconnector,server;public,void,set,service,url,string,service,url,this,service,url,service,url
ConnectorServerFactoryBean -> public void setServiceUrl(String serviceUrl);1467730834;Set the service URL for the {@code JMXConnectorServer}.;public void setServiceUrl(String serviceUrl) {_		this.serviceUrl = serviceUrl__	};set,the,service,url,for,the,code,jmxconnector,server;public,void,set,service,url,string,service,url,this,service,url,service,url
ConnectorServerFactoryBean -> public void setServiceUrl(String serviceUrl);1467983536;Set the service URL for the {@code JMXConnectorServer}.;public void setServiceUrl(String serviceUrl) {_		this.serviceUrl = serviceUrl__	};set,the,service,url,for,the,code,jmxconnector,server;public,void,set,service,url,string,service,url,this,service,url,service,url
ConnectorServerFactoryBean -> public void setServiceUrl(String serviceUrl);1479931801;Set the service URL for the {@code JMXConnectorServer}.;public void setServiceUrl(String serviceUrl) {_		this.serviceUrl = serviceUrl__	};set,the,service,url,for,the,code,jmxconnector,server;public,void,set,service,url,string,service,url,this,service,url,service,url
ConnectorServerFactoryBean -> public void setServiceUrl(String serviceUrl);1496837955;Set the service URL for the {@code JMXConnectorServer}.;public void setServiceUrl(String serviceUrl) {_		this.serviceUrl = serviceUrl__	};set,the,service,url,for,the,code,jmxconnector,server;public,void,set,service,url,string,service,url,this,service,url,service,url
ConnectorServerFactoryBean -> public void setServiceUrl(String serviceUrl);1498780456;Set the service URL for the {@code JMXConnectorServer}.;public void setServiceUrl(String serviceUrl) {_		this.serviceUrl = serviceUrl__	};set,the,service,url,for,the,code,jmxconnector,server;public,void,set,service,url,string,service,url,this,service,url,service,url
ConnectorServerFactoryBean -> public void setServiceUrl(String serviceUrl);1502974979;Set the service URL for the {@code JMXConnectorServer}.;public void setServiceUrl(String serviceUrl) {_		this.serviceUrl = serviceUrl__	};set,the,service,url,for,the,code,jmxconnector,server;public,void,set,service,url,string,service,url,this,service,url,service,url
ConnectorServerFactoryBean -> public void setServiceUrl(String serviceUrl);1530174524;Set the service URL for the {@code JMXConnectorServer}.;public void setServiceUrl(String serviceUrl) {_		this.serviceUrl = serviceUrl__	};set,the,service,url,for,the,code,jmxconnector,server;public,void,set,service,url,string,service,url,this,service,url,service,url
ConnectorServerFactoryBean -> public void setServiceUrl(String serviceUrl);1542899558;Set the service URL for the {@code JMXConnectorServer}.;public void setServiceUrl(String serviceUrl) {_		this.serviceUrl = serviceUrl__	};set,the,service,url,for,the,code,jmxconnector,server;public,void,set,service,url,string,service,url,this,service,url,service,url
ConnectorServerFactoryBean -> @Override 	public void destroy() throws IOException;1356735495;Stop the {@code JMXConnectorServer} managed by an instance of this class._Automatically called on {@code ApplicationContext} shutdown._@throws IOException if there is an error stopping the connector server;@Override_	public void destroy() throws IOException {_		if (logger.isInfoEnabled()) {_			logger.info("Stopping JMX connector server: " + this.connectorServer)__		}_		try {_			this.connectorServer.stop()__		}_		finally {_			unregisterBeans()__		}_	};stop,the,code,jmxconnector,server,managed,by,an,instance,of,this,class,automatically,called,on,code,application,context,shutdown,throws,ioexception,if,there,is,an,error,stopping,the,connector,server;override,public,void,destroy,throws,ioexception,if,logger,is,info,enabled,logger,info,stopping,jmx,connector,server,this,connector,server,try,this,connector,server,stop,finally,unregister,beans
ConnectorServerFactoryBean -> @Override 	public void destroy() throws IOException;1368482696;Stop the {@code JMXConnectorServer} managed by an instance of this class._Automatically called on {@code ApplicationContext} shutdown._@throws IOException if there is an error stopping the connector server;@Override_	public void destroy() throws IOException {_		if (logger.isInfoEnabled()) {_			logger.info("Stopping JMX connector server: " + this.connectorServer)__		}_		try {_			this.connectorServer.stop()__		}_		finally {_			unregisterBeans()__		}_	};stop,the,code,jmxconnector,server,managed,by,an,instance,of,this,class,automatically,called,on,code,application,context,shutdown,throws,ioexception,if,there,is,an,error,stopping,the,connector,server;override,public,void,destroy,throws,ioexception,if,logger,is,info,enabled,logger,info,stopping,jmx,connector,server,this,connector,server,try,this,connector,server,stop,finally,unregister,beans
ConnectorServerFactoryBean -> @Override 	public void destroy() throws IOException;1467730834;Stop the {@code JMXConnectorServer} managed by an instance of this class._Automatically called on {@code ApplicationContext} shutdown._@throws IOException if there is an error stopping the connector server;@Override_	public void destroy() throws IOException {_		if (logger.isInfoEnabled()) {_			logger.info("Stopping JMX connector server: " + this.connectorServer)__		}_		try {_			this.connectorServer.stop()__		}_		finally {_			unregisterBeans()__		}_	};stop,the,code,jmxconnector,server,managed,by,an,instance,of,this,class,automatically,called,on,code,application,context,shutdown,throws,ioexception,if,there,is,an,error,stopping,the,connector,server;override,public,void,destroy,throws,ioexception,if,logger,is,info,enabled,logger,info,stopping,jmx,connector,server,this,connector,server,try,this,connector,server,stop,finally,unregister,beans
ConnectorServerFactoryBean -> @Override 	public void destroy() throws IOException;1467983536;Stop the {@code JMXConnectorServer} managed by an instance of this class._Automatically called on {@code ApplicationContext} shutdown._@throws IOException if there is an error stopping the connector server;@Override_	public void destroy() throws IOException {_		if (logger.isInfoEnabled()) {_			logger.info("Stopping JMX connector server: " + this.connectorServer)__		}_		try {_			this.connectorServer.stop()__		}_		finally {_			unregisterBeans()__		}_	};stop,the,code,jmxconnector,server,managed,by,an,instance,of,this,class,automatically,called,on,code,application,context,shutdown,throws,ioexception,if,there,is,an,error,stopping,the,connector,server;override,public,void,destroy,throws,ioexception,if,logger,is,info,enabled,logger,info,stopping,jmx,connector,server,this,connector,server,try,this,connector,server,stop,finally,unregister,beans
ConnectorServerFactoryBean -> @Override 	public void destroy() throws IOException;1479931801;Stop the {@code JMXConnectorServer} managed by an instance of this class._Automatically called on {@code ApplicationContext} shutdown._@throws IOException if there is an error stopping the connector server;@Override_	public void destroy() throws IOException {_		if (logger.isInfoEnabled()) {_			logger.info("Stopping JMX connector server: " + this.connectorServer)__		}_		try {_			this.connectorServer.stop()__		}_		finally {_			unregisterBeans()__		}_	};stop,the,code,jmxconnector,server,managed,by,an,instance,of,this,class,automatically,called,on,code,application,context,shutdown,throws,ioexception,if,there,is,an,error,stopping,the,connector,server;override,public,void,destroy,throws,ioexception,if,logger,is,info,enabled,logger,info,stopping,jmx,connector,server,this,connector,server,try,this,connector,server,stop,finally,unregister,beans
ConnectorServerFactoryBean -> @Override 	public void destroy() throws IOException;1496837955;Stop the {@code JMXConnectorServer} managed by an instance of this class._Automatically called on {@code ApplicationContext} shutdown._@throws IOException if there is an error stopping the connector server;@Override_	public void destroy() throws IOException {_		if (logger.isInfoEnabled()) {_			logger.info("Stopping JMX connector server: " + this.connectorServer)__		}_		try {_			this.connectorServer.stop()__		}_		finally {_			unregisterBeans()__		}_	};stop,the,code,jmxconnector,server,managed,by,an,instance,of,this,class,automatically,called,on,code,application,context,shutdown,throws,ioexception,if,there,is,an,error,stopping,the,connector,server;override,public,void,destroy,throws,ioexception,if,logger,is,info,enabled,logger,info,stopping,jmx,connector,server,this,connector,server,try,this,connector,server,stop,finally,unregister,beans
ConnectorServerFactoryBean -> @Override 	public void destroy() throws IOException;1498780456;Stop the {@code JMXConnectorServer} managed by an instance of this class._Automatically called on {@code ApplicationContext} shutdown._@throws IOException if there is an error stopping the connector server;@Override_	public void destroy() throws IOException {_		try {_			if (this.connectorServer != null) {_				if (logger.isInfoEnabled()) {_					logger.info("Stopping JMX connector server: " + this.connectorServer)__				}_				this.connectorServer.stop()__			}_		}_		finally {_			unregisterBeans()__		}_	};stop,the,code,jmxconnector,server,managed,by,an,instance,of,this,class,automatically,called,on,code,application,context,shutdown,throws,ioexception,if,there,is,an,error,stopping,the,connector,server;override,public,void,destroy,throws,ioexception,try,if,this,connector,server,null,if,logger,is,info,enabled,logger,info,stopping,jmx,connector,server,this,connector,server,this,connector,server,stop,finally,unregister,beans
ConnectorServerFactoryBean -> @Override 	public void destroy() throws IOException;1502974979;Stop the {@code JMXConnectorServer} managed by an instance of this class._Automatically called on {@code ApplicationContext} shutdown._@throws IOException if there is an error stopping the connector server;@Override_	public void destroy() throws IOException {_		try {_			if (this.connectorServer != null) {_				if (logger.isInfoEnabled()) {_					logger.info("Stopping JMX connector server: " + this.connectorServer)__				}_				this.connectorServer.stop()__			}_		}_		finally {_			unregisterBeans()__		}_	};stop,the,code,jmxconnector,server,managed,by,an,instance,of,this,class,automatically,called,on,code,application,context,shutdown,throws,ioexception,if,there,is,an,error,stopping,the,connector,server;override,public,void,destroy,throws,ioexception,try,if,this,connector,server,null,if,logger,is,info,enabled,logger,info,stopping,jmx,connector,server,this,connector,server,this,connector,server,stop,finally,unregister,beans
ConnectorServerFactoryBean -> @Override 	public void destroy() throws IOException;1530174524;Stop the {@code JMXConnectorServer} managed by an instance of this class._Automatically called on {@code ApplicationContext} shutdown._@throws IOException if there is an error stopping the connector server;@Override_	public void destroy() throws IOException {_		try {_			if (this.connectorServer != null) {_				if (logger.isInfoEnabled()) {_					logger.info("Stopping JMX connector server: " + this.connectorServer)__				}_				this.connectorServer.stop()__			}_		}_		finally {_			unregisterBeans()__		}_	};stop,the,code,jmxconnector,server,managed,by,an,instance,of,this,class,automatically,called,on,code,application,context,shutdown,throws,ioexception,if,there,is,an,error,stopping,the,connector,server;override,public,void,destroy,throws,ioexception,try,if,this,connector,server,null,if,logger,is,info,enabled,logger,info,stopping,jmx,connector,server,this,connector,server,this,connector,server,stop,finally,unregister,beans
ConnectorServerFactoryBean -> @Override 	public void destroy() throws IOException;1542899558;Stop the {@code JMXConnectorServer} managed by an instance of this class._Automatically called on {@code ApplicationContext} shutdown._@throws IOException if there is an error stopping the connector server;@Override_	public void destroy() throws IOException {_		try {_			if (this.connectorServer != null) {_				if (logger.isInfoEnabled()) {_					logger.info("Stopping JMX connector server: " + this.connectorServer)__				}_				this.connectorServer.stop()__			}_		}_		finally {_			unregisterBeans()__		}_	};stop,the,code,jmxconnector,server,managed,by,an,instance,of,this,class,automatically,called,on,code,application,context,shutdown,throws,ioexception,if,there,is,an,error,stopping,the,connector,server;override,public,void,destroy,throws,ioexception,try,if,this,connector,server,null,if,logger,is,info,enabled,logger,info,stopping,jmx,connector,server,this,connector,server,this,connector,server,stop,finally,unregister,beans
ConnectorServerFactoryBean -> public void setObjectName(Object objectName) throws MalformedObjectNameException;1328020251;Set the <code>ObjectName</code> used to register the <code>JMXConnectorServer</code>_itself with the <code>MBeanServer</code>, as <code>ObjectName</code> instance_or as <code>String</code>._@throws MalformedObjectNameException if the <code>ObjectName</code> is malformed;public void setObjectName(Object objectName) throws MalformedObjectNameException {_		this.objectName = ObjectNameManager.getInstance(objectName)__	};set,the,code,object,name,code,used,to,register,the,code,jmxconnector,server,code,itself,with,the,code,mbean,server,code,as,code,object,name,code,instance,or,as,code,string,code,throws,malformed,object,name,exception,if,the,code,object,name,code,is,malformed;public,void,set,object,name,object,object,name,throws,malformed,object,name,exception,this,object,name,object,name,manager,get,instance,object,name
ConnectorServerFactoryBean -> public void setObjectName(Object objectName) throws MalformedObjectNameException;1356735495;Set the {@code ObjectName} used to register the {@code JMXConnectorServer}_itself with the {@code MBeanServer}, as {@code ObjectName} instance_or as {@code String}._@throws MalformedObjectNameException if the {@code ObjectName} is malformed;public void setObjectName(Object objectName) throws MalformedObjectNameException {_		this.objectName = ObjectNameManager.getInstance(objectName)__	};set,the,code,object,name,used,to,register,the,code,jmxconnector,server,itself,with,the,code,mbean,server,as,code,object,name,instance,or,as,code,string,throws,malformed,object,name,exception,if,the,code,object,name,is,malformed;public,void,set,object,name,object,object,name,throws,malformed,object,name,exception,this,object,name,object,name,manager,get,instance,object,name
ConnectorServerFactoryBean -> public void setObjectName(Object objectName) throws MalformedObjectNameException;1357119239;Set the {@code ObjectName} used to register the {@code JMXConnectorServer}_itself with the {@code MBeanServer}, as {@code ObjectName} instance_or as {@code String}._@throws MalformedObjectNameException if the {@code ObjectName} is malformed;public void setObjectName(Object objectName) throws MalformedObjectNameException {_		this.objectName = ObjectNameManager.getInstance(objectName)__	};set,the,code,object,name,used,to,register,the,code,jmxconnector,server,itself,with,the,code,mbean,server,as,code,object,name,instance,or,as,code,string,throws,malformed,object,name,exception,if,the,code,object,name,is,malformed;public,void,set,object,name,object,object,name,throws,malformed,object,name,exception,this,object,name,object,name,manager,get,instance,object,name
ConnectorServerFactoryBean -> public void setObjectName(Object objectName) throws MalformedObjectNameException;1368482696;Set the {@code ObjectName} used to register the {@code JMXConnectorServer}_itself with the {@code MBeanServer}, as {@code ObjectName} instance_or as {@code String}._@throws MalformedObjectNameException if the {@code ObjectName} is malformed;public void setObjectName(Object objectName) throws MalformedObjectNameException {_		this.objectName = ObjectNameManager.getInstance(objectName)__	};set,the,code,object,name,used,to,register,the,code,jmxconnector,server,itself,with,the,code,mbean,server,as,code,object,name,instance,or,as,code,string,throws,malformed,object,name,exception,if,the,code,object,name,is,malformed;public,void,set,object,name,object,object,name,throws,malformed,object,name,exception,this,object,name,object,name,manager,get,instance,object,name
ConnectorServerFactoryBean -> public void setObjectName(Object objectName) throws MalformedObjectNameException;1467730834;Set the {@code ObjectName} used to register the {@code JMXConnectorServer}_itself with the {@code MBeanServer}, as {@code ObjectName} instance_or as {@code String}._@throws MalformedObjectNameException if the {@code ObjectName} is malformed;public void setObjectName(Object objectName) throws MalformedObjectNameException {_		this.objectName = ObjectNameManager.getInstance(objectName)__	};set,the,code,object,name,used,to,register,the,code,jmxconnector,server,itself,with,the,code,mbean,server,as,code,object,name,instance,or,as,code,string,throws,malformed,object,name,exception,if,the,code,object,name,is,malformed;public,void,set,object,name,object,object,name,throws,malformed,object,name,exception,this,object,name,object,name,manager,get,instance,object,name
ConnectorServerFactoryBean -> public void setObjectName(Object objectName) throws MalformedObjectNameException;1467983536;Set the {@code ObjectName} used to register the {@code JMXConnectorServer}_itself with the {@code MBeanServer}, as {@code ObjectName} instance_or as {@code String}._@throws MalformedObjectNameException if the {@code ObjectName} is malformed;public void setObjectName(Object objectName) throws MalformedObjectNameException {_		this.objectName = ObjectNameManager.getInstance(objectName)__	};set,the,code,object,name,used,to,register,the,code,jmxconnector,server,itself,with,the,code,mbean,server,as,code,object,name,instance,or,as,code,string,throws,malformed,object,name,exception,if,the,code,object,name,is,malformed;public,void,set,object,name,object,object,name,throws,malformed,object,name,exception,this,object,name,object,name,manager,get,instance,object,name
ConnectorServerFactoryBean -> public void setObjectName(Object objectName) throws MalformedObjectNameException;1479931801;Set the {@code ObjectName} used to register the {@code JMXConnectorServer}_itself with the {@code MBeanServer}, as {@code ObjectName} instance_or as {@code String}._@throws MalformedObjectNameException if the {@code ObjectName} is malformed;public void setObjectName(Object objectName) throws MalformedObjectNameException {_		this.objectName = ObjectNameManager.getInstance(objectName)__	};set,the,code,object,name,used,to,register,the,code,jmxconnector,server,itself,with,the,code,mbean,server,as,code,object,name,instance,or,as,code,string,throws,malformed,object,name,exception,if,the,code,object,name,is,malformed;public,void,set,object,name,object,object,name,throws,malformed,object,name,exception,this,object,name,object,name,manager,get,instance,object,name
ConnectorServerFactoryBean -> public void setObjectName(Object objectName) throws MalformedObjectNameException;1496837955;Set the {@code ObjectName} used to register the {@code JMXConnectorServer}_itself with the {@code MBeanServer}, as {@code ObjectName} instance_or as {@code String}._@throws MalformedObjectNameException if the {@code ObjectName} is malformed;public void setObjectName(Object objectName) throws MalformedObjectNameException {_		this.objectName = ObjectNameManager.getInstance(objectName)__	};set,the,code,object,name,used,to,register,the,code,jmxconnector,server,itself,with,the,code,mbean,server,as,code,object,name,instance,or,as,code,string,throws,malformed,object,name,exception,if,the,code,object,name,is,malformed;public,void,set,object,name,object,object,name,throws,malformed,object,name,exception,this,object,name,object,name,manager,get,instance,object,name
ConnectorServerFactoryBean -> public void setObjectName(Object objectName) throws MalformedObjectNameException;1498780456;Set the {@code ObjectName} used to register the {@code JMXConnectorServer}_itself with the {@code MBeanServer}, as {@code ObjectName} instance_or as {@code String}._@throws MalformedObjectNameException if the {@code ObjectName} is malformed;public void setObjectName(Object objectName) throws MalformedObjectNameException {_		this.objectName = ObjectNameManager.getInstance(objectName)__	};set,the,code,object,name,used,to,register,the,code,jmxconnector,server,itself,with,the,code,mbean,server,as,code,object,name,instance,or,as,code,string,throws,malformed,object,name,exception,if,the,code,object,name,is,malformed;public,void,set,object,name,object,object,name,throws,malformed,object,name,exception,this,object,name,object,name,manager,get,instance,object,name
ConnectorServerFactoryBean -> public void setObjectName(Object objectName) throws MalformedObjectNameException;1502974979;Set the {@code ObjectName} used to register the {@code JMXConnectorServer}_itself with the {@code MBeanServer}, as {@code ObjectName} instance_or as {@code String}._@throws MalformedObjectNameException if the {@code ObjectName} is malformed;public void setObjectName(Object objectName) throws MalformedObjectNameException {_		this.objectName = ObjectNameManager.getInstance(objectName)__	};set,the,code,object,name,used,to,register,the,code,jmxconnector,server,itself,with,the,code,mbean,server,as,code,object,name,instance,or,as,code,string,throws,malformed,object,name,exception,if,the,code,object,name,is,malformed;public,void,set,object,name,object,object,name,throws,malformed,object,name,exception,this,object,name,object,name,manager,get,instance,object,name
ConnectorServerFactoryBean -> public void setObjectName(Object objectName) throws MalformedObjectNameException;1530174524;Set the {@code ObjectName} used to register the {@code JMXConnectorServer}_itself with the {@code MBeanServer}, as {@code ObjectName} instance_or as {@code String}._@throws MalformedObjectNameException if the {@code ObjectName} is malformed;public void setObjectName(Object objectName) throws MalformedObjectNameException {_		this.objectName = ObjectNameManager.getInstance(objectName)__	};set,the,code,object,name,used,to,register,the,code,jmxconnector,server,itself,with,the,code,mbean,server,as,code,object,name,instance,or,as,code,string,throws,malformed,object,name,exception,if,the,code,object,name,is,malformed;public,void,set,object,name,object,object,name,throws,malformed,object,name,exception,this,object,name,object,name,manager,get,instance,object,name
ConnectorServerFactoryBean -> public void setObjectName(Object objectName) throws MalformedObjectNameException;1542899558;Set the {@code ObjectName} used to register the {@code JMXConnectorServer}_itself with the {@code MBeanServer}, as {@code ObjectName} instance_or as {@code String}._@throws MalformedObjectNameException if the {@code ObjectName} is malformed;public void setObjectName(Object objectName) throws MalformedObjectNameException {_		this.objectName = ObjectNameManager.getInstance(objectName)__	};set,the,code,object,name,used,to,register,the,code,jmxconnector,server,itself,with,the,code,mbean,server,as,code,object,name,instance,or,as,code,string,throws,malformed,object,name,exception,if,the,code,object,name,is,malformed;public,void,set,object,name,object,object,name,throws,malformed,object,name,exception,this,object,name,object,name,manager,get,instance,object,name
ConnectorServerFactoryBean -> public void setEnvironmentMap(@Nullable Map<String, ?> environment);1496837955;Set the environment properties used to construct the {@code JMXConnector}_as a {@code Map} of String keys and arbitrary Object values.;public void setEnvironmentMap(@Nullable Map<String, ?> environment) {_		if (environment != null) {_			this.environment.putAll(environment)__		}_	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,a,code,map,of,string,keys,and,arbitrary,object,values;public,void,set,environment,map,nullable,map,string,environment,if,environment,null,this,environment,put,all,environment
ConnectorServerFactoryBean -> public void setEnvironmentMap(@Nullable Map<String, ?> environment);1498780456;Set the environment properties used to construct the {@code JMXConnector}_as a {@code Map} of String keys and arbitrary Object values.;public void setEnvironmentMap(@Nullable Map<String, ?> environment) {_		if (environment != null) {_			this.environment.putAll(environment)__		}_	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,a,code,map,of,string,keys,and,arbitrary,object,values;public,void,set,environment,map,nullable,map,string,environment,if,environment,null,this,environment,put,all,environment
ConnectorServerFactoryBean -> public void setEnvironmentMap(@Nullable Map<String, ?> environment);1502974979;Set the environment properties used to construct the {@code JMXConnector}_as a {@code Map} of String keys and arbitrary Object values.;public void setEnvironmentMap(@Nullable Map<String, ?> environment) {_		if (environment != null) {_			this.environment.putAll(environment)__		}_	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,a,code,map,of,string,keys,and,arbitrary,object,values;public,void,set,environment,map,nullable,map,string,environment,if,environment,null,this,environment,put,all,environment
ConnectorServerFactoryBean -> public void setEnvironmentMap(@Nullable Map<String, ?> environment);1530174524;Set the environment properties used to construct the {@code JMXConnector}_as a {@code Map} of String keys and arbitrary Object values.;public void setEnvironmentMap(@Nullable Map<String, ?> environment) {_		if (environment != null) {_			this.environment.putAll(environment)__		}_	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,a,code,map,of,string,keys,and,arbitrary,object,values;public,void,set,environment,map,nullable,map,string,environment,if,environment,null,this,environment,put,all,environment
ConnectorServerFactoryBean -> public void setEnvironmentMap(@Nullable Map<String, ?> environment);1542899558;Set the environment properties used to construct the {@code JMXConnector}_as a {@code Map} of String keys and arbitrary Object values.;public void setEnvironmentMap(@Nullable Map<String, ?> environment) {_		if (environment != null) {_			this.environment.putAll(environment)__		}_	};set,the,environment,properties,used,to,construct,the,code,jmxconnector,as,a,code,map,of,string,keys,and,arbitrary,object,values;public,void,set,environment,map,nullable,map,string,environment,if,environment,null,this,environment,put,all,environment
