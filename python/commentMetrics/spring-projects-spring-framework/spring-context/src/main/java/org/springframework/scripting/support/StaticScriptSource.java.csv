commented;modifiers;parameterAmount;loc;comment;code
true;public,synchronized;1;5;/**  * Set a fresh script String, overriding the previous script.  * @param script the script String  */ ;/**  * Set a fresh script String, overriding the previous script.  * @param script the script String  */ public synchronized void setScript(String script) {     Assert.hasText(script, "Script must not be empty").     this.modified = !script.equals(this.script).     this.script = script. }
false;public,synchronized;0;5;;@Override public synchronized String getScriptAsString() {     this.modified = false.     return this.script. }
false;public,synchronized;0;4;;@Override public synchronized boolean isModified() {     return this.modified. }
false;public;0;5;;@Override @Nullable public String suggestedClassName() {     return this.className. }
false;public;0;4;;@Override public String toString() {     return "static script" + (this.className != null ? " [" + this.className + "]" : ""). }
