# id;timestamp;commentText;codeText;commentWords;codeWords
LocalSlsbInvokerInterceptor -> @Override 	public Object invokeInContext(MethodInvocation invocation) throws Throwable;1328020251;This implementation "creates" a new EJB instance for each invocation._Can be overridden for custom invocation strategies._<p>Alternatively, override {@link #getSessionBeanInstance} and_{@link #releaseSessionBeanInstance} to change EJB instance creation,_for example to hold a single shared EJB instance.;@Override_	public Object invokeInContext(MethodInvocation invocation) throws Throwable {_		Object ejb = null__		try {_			ejb = getSessionBeanInstance()__			Method method = invocation.getMethod()__			if (method.getDeclaringClass().isInstance(ejb)) {_				_				return method.invoke(ejb, invocation.getArguments())__			}_			else {_				_				Method ejbMethod = ejb.getClass().getMethod(method.getName(), method.getParameterTypes())__				return ejbMethod.invoke(ejb, invocation.getArguments())__			}_		}_		catch (InvocationTargetException ex) {_			Throwable targetEx = ex.getTargetException()__			if (logger.isDebugEnabled()) {_				logger.debug("Method of local EJB [" + getJndiName() + "] threw exception", targetEx)__			}_			if (targetEx instanceof CreateException) {_				throw new EjbAccessException("Could not create local EJB [" + getJndiName() + "]", targetEx)__			}_			else {_				throw targetEx__			}_		}_		catch (NamingException ex) {_			throw new EjbAccessException("Failed to locate local EJB [" + getJndiName() + "]", ex)__		}_		catch (IllegalAccessException ex) {_			throw new EjbAccessException("Could not access method [" + invocation.getMethod().getName() +_			    "] of local EJB [" + getJndiName() + "]", ex)__		}_		finally {_			if (ejb instanceof EJBLocalObject) {_				releaseSessionBeanInstance((EJBLocalObject) ejb)__			}_		}_	};this,implementation,creates,a,new,ejb,instance,for,each,invocation,can,be,overridden,for,custom,invocation,strategies,p,alternatively,override,link,get,session,bean,instance,and,link,release,session,bean,instance,to,change,ejb,instance,creation,for,example,to,hold,a,single,shared,ejb,instance;override,public,object,invoke,in,context,method,invocation,invocation,throws,throwable,object,ejb,null,try,ejb,get,session,bean,instance,method,method,invocation,get,method,if,method,get,declaring,class,is,instance,ejb,return,method,invoke,ejb,invocation,get,arguments,else,method,ejb,method,ejb,get,class,get,method,method,get,name,method,get,parameter,types,return,ejb,method,invoke,ejb,invocation,get,arguments,catch,invocation,target,exception,ex,throwable,target,ex,ex,get,target,exception,if,logger,is,debug,enabled,logger,debug,method,of,local,ejb,get,jndi,name,threw,exception,target,ex,if,target,ex,instanceof,create,exception,throw,new,ejb,access,exception,could,not,create,local,ejb,get,jndi,name,target,ex,else,throw,target,ex,catch,naming,exception,ex,throw,new,ejb,access,exception,failed,to,locate,local,ejb,get,jndi,name,ex,catch,illegal,access,exception,ex,throw,new,ejb,access,exception,could,not,access,method,invocation,get,method,get,name,of,local,ejb,get,jndi,name,ex,finally,if,ejb,instanceof,ejblocal,object,release,session,bean,instance,ejblocal,object,ejb
LocalSlsbInvokerInterceptor -> @Override 	public Object invokeInContext(MethodInvocation invocation) throws Throwable;1356735495;This implementation "creates" a new EJB instance for each invocation._Can be overridden for custom invocation strategies._<p>Alternatively, override {@link #getSessionBeanInstance} and_{@link #releaseSessionBeanInstance} to change EJB instance creation,_for example to hold a single shared EJB instance.;@Override_	public Object invokeInContext(MethodInvocation invocation) throws Throwable {_		Object ejb = null__		try {_			ejb = getSessionBeanInstance()__			Method method = invocation.getMethod()__			if (method.getDeclaringClass().isInstance(ejb)) {_				_				return method.invoke(ejb, invocation.getArguments())__			}_			else {_				_				Method ejbMethod = ejb.getClass().getMethod(method.getName(), method.getParameterTypes())__				return ejbMethod.invoke(ejb, invocation.getArguments())__			}_		}_		catch (InvocationTargetException ex) {_			Throwable targetEx = ex.getTargetException()__			if (logger.isDebugEnabled()) {_				logger.debug("Method of local EJB [" + getJndiName() + "] threw exception", targetEx)__			}_			if (targetEx instanceof CreateException) {_				throw new EjbAccessException("Could not create local EJB [" + getJndiName() + "]", targetEx)__			}_			else {_				throw targetEx__			}_		}_		catch (NamingException ex) {_			throw new EjbAccessException("Failed to locate local EJB [" + getJndiName() + "]", ex)__		}_		catch (IllegalAccessException ex) {_			throw new EjbAccessException("Could not access method [" + invocation.getMethod().getName() +_				"] of local EJB [" + getJndiName() + "]", ex)__		}_		finally {_			if (ejb instanceof EJBLocalObject) {_				releaseSessionBeanInstance((EJBLocalObject) ejb)__			}_		}_	};this,implementation,creates,a,new,ejb,instance,for,each,invocation,can,be,overridden,for,custom,invocation,strategies,p,alternatively,override,link,get,session,bean,instance,and,link,release,session,bean,instance,to,change,ejb,instance,creation,for,example,to,hold,a,single,shared,ejb,instance;override,public,object,invoke,in,context,method,invocation,invocation,throws,throwable,object,ejb,null,try,ejb,get,session,bean,instance,method,method,invocation,get,method,if,method,get,declaring,class,is,instance,ejb,return,method,invoke,ejb,invocation,get,arguments,else,method,ejb,method,ejb,get,class,get,method,method,get,name,method,get,parameter,types,return,ejb,method,invoke,ejb,invocation,get,arguments,catch,invocation,target,exception,ex,throwable,target,ex,ex,get,target,exception,if,logger,is,debug,enabled,logger,debug,method,of,local,ejb,get,jndi,name,threw,exception,target,ex,if,target,ex,instanceof,create,exception,throw,new,ejb,access,exception,could,not,create,local,ejb,get,jndi,name,target,ex,else,throw,target,ex,catch,naming,exception,ex,throw,new,ejb,access,exception,failed,to,locate,local,ejb,get,jndi,name,ex,catch,illegal,access,exception,ex,throw,new,ejb,access,exception,could,not,access,method,invocation,get,method,get,name,of,local,ejb,get,jndi,name,ex,finally,if,ejb,instanceof,ejblocal,object,release,session,bean,instance,ejblocal,object,ejb
LocalSlsbInvokerInterceptor -> @Override 	public Object invokeInContext(MethodInvocation invocation) throws Throwable;1413848647;This implementation "creates" a new EJB instance for each invocation._Can be overridden for custom invocation strategies._<p>Alternatively, override {@link #getSessionBeanInstance} and_{@link #releaseSessionBeanInstance} to change EJB instance creation,_for example to hold a single shared EJB instance.;@Override_	public Object invokeInContext(MethodInvocation invocation) throws Throwable {_		Object ejb = null__		try {_			ejb = getSessionBeanInstance()__			Method method = invocation.getMethod()__			if (method.getDeclaringClass().isInstance(ejb)) {_				_				return method.invoke(ejb, invocation.getArguments())__			}_			else {_				_				Method ejbMethod = ejb.getClass().getMethod(method.getName(), method.getParameterTypes())__				return ejbMethod.invoke(ejb, invocation.getArguments())__			}_		}_		catch (InvocationTargetException ex) {_			Throwable targetEx = ex.getTargetException()__			if (logger.isDebugEnabled()) {_				logger.debug("Method of local EJB [" + getJndiName() + "] threw exception", targetEx)__			}_			if (targetEx instanceof CreateException) {_				throw new EjbAccessException("Could not create local EJB [" + getJndiName() + "]", targetEx)__			}_			else {_				throw targetEx__			}_		}_		catch (NamingException ex) {_			throw new EjbAccessException("Failed to locate local EJB [" + getJndiName() + "]", ex)__		}_		catch (IllegalAccessException ex) {_			throw new EjbAccessException("Could not access method [" + invocation.getMethod().getName() +_				"] of local EJB [" + getJndiName() + "]", ex)__		}_		finally {_			if (ejb instanceof EJBLocalObject) {_				releaseSessionBeanInstance((EJBLocalObject) ejb)__			}_		}_	};this,implementation,creates,a,new,ejb,instance,for,each,invocation,can,be,overridden,for,custom,invocation,strategies,p,alternatively,override,link,get,session,bean,instance,and,link,release,session,bean,instance,to,change,ejb,instance,creation,for,example,to,hold,a,single,shared,ejb,instance;override,public,object,invoke,in,context,method,invocation,invocation,throws,throwable,object,ejb,null,try,ejb,get,session,bean,instance,method,method,invocation,get,method,if,method,get,declaring,class,is,instance,ejb,return,method,invoke,ejb,invocation,get,arguments,else,method,ejb,method,ejb,get,class,get,method,method,get,name,method,get,parameter,types,return,ejb,method,invoke,ejb,invocation,get,arguments,catch,invocation,target,exception,ex,throwable,target,ex,ex,get,target,exception,if,logger,is,debug,enabled,logger,debug,method,of,local,ejb,get,jndi,name,threw,exception,target,ex,if,target,ex,instanceof,create,exception,throw,new,ejb,access,exception,could,not,create,local,ejb,get,jndi,name,target,ex,else,throw,target,ex,catch,naming,exception,ex,throw,new,ejb,access,exception,failed,to,locate,local,ejb,get,jndi,name,ex,catch,illegal,access,exception,ex,throw,new,ejb,access,exception,could,not,access,method,invocation,get,method,get,name,of,local,ejb,get,jndi,name,ex,finally,if,ejb,instanceof,ejblocal,object,release,session,bean,instance,ejblocal,object,ejb
LocalSlsbInvokerInterceptor -> @Override 	public Object invokeInContext(MethodInvocation invocation) throws Throwable;1496837955;This implementation "creates" a new EJB instance for each invocation._Can be overridden for custom invocation strategies._<p>Alternatively, override {@link #getSessionBeanInstance} and_{@link #releaseSessionBeanInstance} to change EJB instance creation,_for example to hold a single shared EJB instance.;@Override_	public Object invokeInContext(MethodInvocation invocation) throws Throwable {_		Object ejb = null__		try {_			ejb = getSessionBeanInstance()__			Method method = invocation.getMethod()__			if (method.getDeclaringClass().isInstance(ejb)) {_				_				return method.invoke(ejb, invocation.getArguments())__			}_			else {_				_				Method ejbMethod = ejb.getClass().getMethod(method.getName(), method.getParameterTypes())__				return ejbMethod.invoke(ejb, invocation.getArguments())__			}_		}_		catch (InvocationTargetException ex) {_			Throwable targetEx = ex.getTargetException()__			if (logger.isDebugEnabled()) {_				logger.debug("Method of local EJB [" + getJndiName() + "] threw exception", targetEx)__			}_			if (targetEx instanceof CreateException) {_				throw new EjbAccessException("Could not create local EJB [" + getJndiName() + "]", targetEx)__			}_			else {_				throw targetEx__			}_		}_		catch (NamingException ex) {_			throw new EjbAccessException("Failed to locate local EJB [" + getJndiName() + "]", ex)__		}_		catch (IllegalAccessException ex) {_			throw new EjbAccessException("Could not access method [" + invocation.getMethod().getName() +_				"] of local EJB [" + getJndiName() + "]", ex)__		}_		finally {_			if (ejb instanceof EJBLocalObject) {_				releaseSessionBeanInstance((EJBLocalObject) ejb)__			}_		}_	};this,implementation,creates,a,new,ejb,instance,for,each,invocation,can,be,overridden,for,custom,invocation,strategies,p,alternatively,override,link,get,session,bean,instance,and,link,release,session,bean,instance,to,change,ejb,instance,creation,for,example,to,hold,a,single,shared,ejb,instance;override,public,object,invoke,in,context,method,invocation,invocation,throws,throwable,object,ejb,null,try,ejb,get,session,bean,instance,method,method,invocation,get,method,if,method,get,declaring,class,is,instance,ejb,return,method,invoke,ejb,invocation,get,arguments,else,method,ejb,method,ejb,get,class,get,method,method,get,name,method,get,parameter,types,return,ejb,method,invoke,ejb,invocation,get,arguments,catch,invocation,target,exception,ex,throwable,target,ex,ex,get,target,exception,if,logger,is,debug,enabled,logger,debug,method,of,local,ejb,get,jndi,name,threw,exception,target,ex,if,target,ex,instanceof,create,exception,throw,new,ejb,access,exception,could,not,create,local,ejb,get,jndi,name,target,ex,else,throw,target,ex,catch,naming,exception,ex,throw,new,ejb,access,exception,failed,to,locate,local,ejb,get,jndi,name,ex,catch,illegal,access,exception,ex,throw,new,ejb,access,exception,could,not,access,method,invocation,get,method,get,name,of,local,ejb,get,jndi,name,ex,finally,if,ejb,instanceof,ejblocal,object,release,session,bean,instance,ejblocal,object,ejb
LocalSlsbInvokerInterceptor -> protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException;1328020251;Return an EJB instance to delegate the call to._Default implementation delegates to newSessionBeanInstance._@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #newSessionBeanInstance;protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException {_		return newSessionBeanInstance()__	};return,an,ejb,instance,to,delegate,the,call,to,default,implementation,delegates,to,new,session,bean,instance,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,new,session,bean,instance;protected,object,get,session,bean,instance,throws,naming,exception,invocation,target,exception,return,new,session,bean,instance
LocalSlsbInvokerInterceptor -> protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException;1356735495;Return an EJB instance to delegate the call to._Default implementation delegates to newSessionBeanInstance._@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #newSessionBeanInstance;protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException {_		return newSessionBeanInstance()__	};return,an,ejb,instance,to,delegate,the,call,to,default,implementation,delegates,to,new,session,bean,instance,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,new,session,bean,instance;protected,object,get,session,bean,instance,throws,naming,exception,invocation,target,exception,return,new,session,bean,instance
LocalSlsbInvokerInterceptor -> protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException;1413848647;Return an EJB instance to delegate the call to._Default implementation delegates to newSessionBeanInstance._@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #newSessionBeanInstance;protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException {_		return newSessionBeanInstance()__	};return,an,ejb,instance,to,delegate,the,call,to,default,implementation,delegates,to,new,session,bean,instance,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,new,session,bean,instance;protected,object,get,session,bean,instance,throws,naming,exception,invocation,target,exception,return,new,session,bean,instance
LocalSlsbInvokerInterceptor -> protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException;1496837955;Return an EJB instance to delegate the call to._Default implementation delegates to newSessionBeanInstance._@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #newSessionBeanInstance;protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException {_		return newSessionBeanInstance()__	};return,an,ejb,instance,to,delegate,the,call,to,default,implementation,delegates,to,new,session,bean,instance,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,new,session,bean,instance;protected,object,get,session,bean,instance,throws,naming,exception,invocation,target,exception,return,new,session,bean,instance
LocalSlsbInvokerInterceptor -> protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException;1502974979;Return an EJB instance to delegate the call to._Default implementation delegates to newSessionBeanInstance._@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #newSessionBeanInstance;protected Object getSessionBeanInstance() throws NamingException, InvocationTargetException {_		return newSessionBeanInstance()__	};return,an,ejb,instance,to,delegate,the,call,to,default,implementation,delegates,to,new,session,bean,instance,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,new,session,bean,instance;protected,object,get,session,bean,instance,throws,naming,exception,invocation,target,exception,return,new,session,bean,instance
LocalSlsbInvokerInterceptor -> protected void removeSessionBeanInstance(EJBLocalObject ejb);1328020251;Remove the given EJB instance._@param ejb the EJB instance to remove_@see javax.ejb.EJBLocalObject#remove();protected void removeSessionBeanInstance(EJBLocalObject ejb) {_		if (ejb != null && !this.homeAsComponent) {_			try {_				ejb.remove()__			}_			catch (Throwable ex) {_				logger.warn("Could not invoke 'remove' on local EJB proxy", ex)__			}_		}_	};remove,the,given,ejb,instance,param,ejb,the,ejb,instance,to,remove,see,javax,ejb,ejblocal,object,remove;protected,void,remove,session,bean,instance,ejblocal,object,ejb,if,ejb,null,this,home,as,component,try,ejb,remove,catch,throwable,ex,logger,warn,could,not,invoke,remove,on,local,ejb,proxy,ex
LocalSlsbInvokerInterceptor -> protected void removeSessionBeanInstance(EJBLocalObject ejb);1356735495;Remove the given EJB instance._@param ejb the EJB instance to remove_@see javax.ejb.EJBLocalObject#remove();protected void removeSessionBeanInstance(EJBLocalObject ejb) {_		if (ejb != null && !this.homeAsComponent) {_			try {_				ejb.remove()__			}_			catch (Throwable ex) {_				logger.warn("Could not invoke 'remove' on local EJB proxy", ex)__			}_		}_	};remove,the,given,ejb,instance,param,ejb,the,ejb,instance,to,remove,see,javax,ejb,ejblocal,object,remove;protected,void,remove,session,bean,instance,ejblocal,object,ejb,if,ejb,null,this,home,as,component,try,ejb,remove,catch,throwable,ex,logger,warn,could,not,invoke,remove,on,local,ejb,proxy,ex
LocalSlsbInvokerInterceptor -> protected void removeSessionBeanInstance(EJBLocalObject ejb);1413848647;Remove the given EJB instance._@param ejb the EJB instance to remove_@see javax.ejb.EJBLocalObject#remove();protected void removeSessionBeanInstance(EJBLocalObject ejb) {_		if (ejb != null && !this.homeAsComponent) {_			try {_				ejb.remove()__			}_			catch (Throwable ex) {_				logger.warn("Could not invoke 'remove' on local EJB proxy", ex)__			}_		}_	};remove,the,given,ejb,instance,param,ejb,the,ejb,instance,to,remove,see,javax,ejb,ejblocal,object,remove;protected,void,remove,session,bean,instance,ejblocal,object,ejb,if,ejb,null,this,home,as,component,try,ejb,remove,catch,throwable,ex,logger,warn,could,not,invoke,remove,on,local,ejb,proxy,ex
LocalSlsbInvokerInterceptor -> protected void removeSessionBeanInstance(@Nullable EJBLocalObject ejb);1496837955;Remove the given EJB instance._@param ejb the EJB instance to remove_@see javax.ejb.EJBLocalObject#remove();protected void removeSessionBeanInstance(@Nullable EJBLocalObject ejb) {_		if (ejb != null && !this.homeAsComponent) {_			try {_				ejb.remove()__			}_			catch (Throwable ex) {_				logger.warn("Could not invoke 'remove' on local EJB proxy", ex)__			}_		}_	};remove,the,given,ejb,instance,param,ejb,the,ejb,instance,to,remove,see,javax,ejb,ejblocal,object,remove;protected,void,remove,session,bean,instance,nullable,ejblocal,object,ejb,if,ejb,null,this,home,as,component,try,ejb,remove,catch,throwable,ex,logger,warn,could,not,invoke,remove,on,local,ejb,proxy,ex
LocalSlsbInvokerInterceptor -> protected void removeSessionBeanInstance(@Nullable EJBLocalObject ejb);1502974979;Remove the given EJB instance._@param ejb the EJB instance to remove_@see javax.ejb.EJBLocalObject#remove();protected void removeSessionBeanInstance(@Nullable EJBLocalObject ejb) {_		if (ejb != null && !this.homeAsComponent) {_			try {_				ejb.remove()__			}_			catch (Throwable ex) {_				logger.warn("Could not invoke 'remove' on local EJB proxy", ex)__			}_		}_	};remove,the,given,ejb,instance,param,ejb,the,ejb,instance,to,remove,see,javax,ejb,ejblocal,object,remove;protected,void,remove,session,bean,instance,nullable,ejblocal,object,ejb,if,ejb,null,this,home,as,component,try,ejb,remove,catch,throwable,ex,logger,warn,could,not,invoke,remove,on,local,ejb,proxy,ex
LocalSlsbInvokerInterceptor -> protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException;1328020251;Return a new instance of the stateless session bean._Can be overridden to change the algorithm._@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #create;protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException {_		if (logger.isDebugEnabled()) {_			logger.debug("Trying to create reference to local EJB")__		}_		Object ejbInstance = create()__		if (logger.isDebugEnabled()) {_			logger.debug("Obtained reference to local EJB: " + ejbInstance)__		}_		return ejbInstance__	};return,a,new,instance,of,the,stateless,session,bean,can,be,overridden,to,change,the,algorithm,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,create;protected,object,new,session,bean,instance,throws,naming,exception,invocation,target,exception,if,logger,is,debug,enabled,logger,debug,trying,to,create,reference,to,local,ejb,object,ejb,instance,create,if,logger,is,debug,enabled,logger,debug,obtained,reference,to,local,ejb,ejb,instance,return,ejb,instance
LocalSlsbInvokerInterceptor -> protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException;1356735495;Return a new instance of the stateless session bean._Can be overridden to change the algorithm._@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #create;protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException {_		if (logger.isDebugEnabled()) {_			logger.debug("Trying to create reference to local EJB")__		}_		Object ejbInstance = create()__		if (logger.isDebugEnabled()) {_			logger.debug("Obtained reference to local EJB: " + ejbInstance)__		}_		return ejbInstance__	};return,a,new,instance,of,the,stateless,session,bean,can,be,overridden,to,change,the,algorithm,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,create;protected,object,new,session,bean,instance,throws,naming,exception,invocation,target,exception,if,logger,is,debug,enabled,logger,debug,trying,to,create,reference,to,local,ejb,object,ejb,instance,create,if,logger,is,debug,enabled,logger,debug,obtained,reference,to,local,ejb,ejb,instance,return,ejb,instance
LocalSlsbInvokerInterceptor -> protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException;1413848647;Return a new instance of the stateless session bean._Can be overridden to change the algorithm._@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #create;protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException {_		if (logger.isDebugEnabled()) {_			logger.debug("Trying to create reference to local EJB")__		}_		Object ejbInstance = create()__		if (logger.isDebugEnabled()) {_			logger.debug("Obtained reference to local EJB: " + ejbInstance)__		}_		return ejbInstance__	};return,a,new,instance,of,the,stateless,session,bean,can,be,overridden,to,change,the,algorithm,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,create;protected,object,new,session,bean,instance,throws,naming,exception,invocation,target,exception,if,logger,is,debug,enabled,logger,debug,trying,to,create,reference,to,local,ejb,object,ejb,instance,create,if,logger,is,debug,enabled,logger,debug,obtained,reference,to,local,ejb,ejb,instance,return,ejb,instance
LocalSlsbInvokerInterceptor -> protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException;1496837955;Return a new instance of the stateless session bean._Can be overridden to change the algorithm._@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #create;protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException {_		if (logger.isDebugEnabled()) {_			logger.debug("Trying to create reference to local EJB")__		}_		Object ejbInstance = create()__		if (logger.isDebugEnabled()) {_			logger.debug("Obtained reference to local EJB: " + ejbInstance)__		}_		return ejbInstance__	};return,a,new,instance,of,the,stateless,session,bean,can,be,overridden,to,change,the,algorithm,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,create;protected,object,new,session,bean,instance,throws,naming,exception,invocation,target,exception,if,logger,is,debug,enabled,logger,debug,trying,to,create,reference,to,local,ejb,object,ejb,instance,create,if,logger,is,debug,enabled,logger,debug,obtained,reference,to,local,ejb,ejb,instance,return,ejb,instance
LocalSlsbInvokerInterceptor -> protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException;1502974979;Return a new instance of the stateless session bean._Can be overridden to change the algorithm._@throws NamingException if thrown by JNDI_@throws InvocationTargetException if thrown by the create method_@see #create;protected Object newSessionBeanInstance() throws NamingException, InvocationTargetException {_		if (logger.isDebugEnabled()) {_			logger.debug("Trying to create reference to local EJB")__		}_		Object ejbInstance = create()__		if (logger.isDebugEnabled()) {_			logger.debug("Obtained reference to local EJB: " + ejbInstance)__		}_		return ejbInstance__	};return,a,new,instance,of,the,stateless,session,bean,can,be,overridden,to,change,the,algorithm,throws,naming,exception,if,thrown,by,jndi,throws,invocation,target,exception,if,thrown,by,the,create,method,see,create;protected,object,new,session,bean,instance,throws,naming,exception,invocation,target,exception,if,logger,is,debug,enabled,logger,debug,trying,to,create,reference,to,local,ejb,object,ejb,instance,create,if,logger,is,debug,enabled,logger,debug,obtained,reference,to,local,ejb,ejb,instance,return,ejb,instance
LocalSlsbInvokerInterceptor -> @Override 	protected Method getCreateMethod(Object home) throws EjbAccessException;1328020251;Check for EJB3-style home object that serves as EJB component directly.;@Override_	protected Method getCreateMethod(Object home) throws EjbAccessException {_		if (this.homeAsComponent) {_			return null__		}_		if (!(home instanceof EJBLocalHome)) {_			_			this.homeAsComponent = true__			return null__		}_		return super.getCreateMethod(home)__	};check,for,ejb3,style,home,object,that,serves,as,ejb,component,directly;override,protected,method,get,create,method,object,home,throws,ejb,access,exception,if,this,home,as,component,return,null,if,home,instanceof,ejblocal,home,this,home,as,component,true,return,null,return,super,get,create,method,home
LocalSlsbInvokerInterceptor -> @Override 	protected Method getCreateMethod(Object home) throws EjbAccessException;1356735495;Check for EJB3-style home object that serves as EJB component directly.;@Override_	protected Method getCreateMethod(Object home) throws EjbAccessException {_		if (this.homeAsComponent) {_			return null__		}_		if (!(home instanceof EJBLocalHome)) {_			_			this.homeAsComponent = true__			return null__		}_		return super.getCreateMethod(home)__	};check,for,ejb3,style,home,object,that,serves,as,ejb,component,directly;override,protected,method,get,create,method,object,home,throws,ejb,access,exception,if,this,home,as,component,return,null,if,home,instanceof,ejblocal,home,this,home,as,component,true,return,null,return,super,get,create,method,home
LocalSlsbInvokerInterceptor -> @Override 	protected Method getCreateMethod(Object home) throws EjbAccessException;1413848647;Check for EJB3-style home object that serves as EJB component directly.;@Override_	protected Method getCreateMethod(Object home) throws EjbAccessException {_		if (this.homeAsComponent) {_			return null__		}_		if (!(home instanceof EJBLocalHome)) {_			_			this.homeAsComponent = true__			return null__		}_		return super.getCreateMethod(home)__	};check,for,ejb3,style,home,object,that,serves,as,ejb,component,directly;override,protected,method,get,create,method,object,home,throws,ejb,access,exception,if,this,home,as,component,return,null,if,home,instanceof,ejblocal,home,this,home,as,component,true,return,null,return,super,get,create,method,home
LocalSlsbInvokerInterceptor -> @Override 	protected Method getCreateMethod(Object home) throws EjbAccessException;1496837955;Check for EJB3-style home object that serves as EJB component directly.;@Override_	protected Method getCreateMethod(Object home) throws EjbAccessException {_		if (this.homeAsComponent) {_			return null__		}_		if (!(home instanceof EJBLocalHome)) {_			_			this.homeAsComponent = true__			return null__		}_		return super.getCreateMethod(home)__	};check,for,ejb3,style,home,object,that,serves,as,ejb,component,directly;override,protected,method,get,create,method,object,home,throws,ejb,access,exception,if,this,home,as,component,return,null,if,home,instanceof,ejblocal,home,this,home,as,component,true,return,null,return,super,get,create,method,home
LocalSlsbInvokerInterceptor -> @Override 	protected Method getCreateMethod(Object home) throws EjbAccessException;1502974979;Check for EJB3-style home object that serves as EJB component directly.;@Override_	protected Method getCreateMethod(Object home) throws EjbAccessException {_		if (this.homeAsComponent) {_			return null__		}_		if (!(home instanceof EJBLocalHome)) {_			_			this.homeAsComponent = true__			return null__		}_		return super.getCreateMethod(home)__	};check,for,ejb3,style,home,object,that,serves,as,ejb,component,directly;override,protected,method,get,create,method,object,home,throws,ejb,access,exception,if,this,home,as,component,return,null,if,home,instanceof,ejblocal,home,this,home,as,component,true,return,null,return,super,get,create,method,home
LocalSlsbInvokerInterceptor -> protected void releaseSessionBeanInstance(EJBLocalObject ejb);1328020251;Release the given EJB instance._Default implementation delegates to removeSessionBeanInstance._@param ejb the EJB instance to release_@see #removeSessionBeanInstance;protected void releaseSessionBeanInstance(EJBLocalObject ejb) {_		removeSessionBeanInstance(ejb)__	};release,the,given,ejb,instance,default,implementation,delegates,to,remove,session,bean,instance,param,ejb,the,ejb,instance,to,release,see,remove,session,bean,instance;protected,void,release,session,bean,instance,ejblocal,object,ejb,remove,session,bean,instance,ejb
LocalSlsbInvokerInterceptor -> protected void releaseSessionBeanInstance(EJBLocalObject ejb);1356735495;Release the given EJB instance._Default implementation delegates to removeSessionBeanInstance._@param ejb the EJB instance to release_@see #removeSessionBeanInstance;protected void releaseSessionBeanInstance(EJBLocalObject ejb) {_		removeSessionBeanInstance(ejb)__	};release,the,given,ejb,instance,default,implementation,delegates,to,remove,session,bean,instance,param,ejb,the,ejb,instance,to,release,see,remove,session,bean,instance;protected,void,release,session,bean,instance,ejblocal,object,ejb,remove,session,bean,instance,ejb
LocalSlsbInvokerInterceptor -> protected void releaseSessionBeanInstance(EJBLocalObject ejb);1413848647;Release the given EJB instance._Default implementation delegates to removeSessionBeanInstance._@param ejb the EJB instance to release_@see #removeSessionBeanInstance;protected void releaseSessionBeanInstance(EJBLocalObject ejb) {_		removeSessionBeanInstance(ejb)__	};release,the,given,ejb,instance,default,implementation,delegates,to,remove,session,bean,instance,param,ejb,the,ejb,instance,to,release,see,remove,session,bean,instance;protected,void,release,session,bean,instance,ejblocal,object,ejb,remove,session,bean,instance,ejb
LocalSlsbInvokerInterceptor -> protected void releaseSessionBeanInstance(EJBLocalObject ejb);1496837955;Release the given EJB instance._Default implementation delegates to removeSessionBeanInstance._@param ejb the EJB instance to release_@see #removeSessionBeanInstance;protected void releaseSessionBeanInstance(EJBLocalObject ejb) {_		removeSessionBeanInstance(ejb)__	};release,the,given,ejb,instance,default,implementation,delegates,to,remove,session,bean,instance,param,ejb,the,ejb,instance,to,release,see,remove,session,bean,instance;protected,void,release,session,bean,instance,ejblocal,object,ejb,remove,session,bean,instance,ejb
LocalSlsbInvokerInterceptor -> protected void releaseSessionBeanInstance(EJBLocalObject ejb);1502974979;Release the given EJB instance._Default implementation delegates to removeSessionBeanInstance._@param ejb the EJB instance to release_@see #removeSessionBeanInstance;protected void releaseSessionBeanInstance(EJBLocalObject ejb) {_		removeSessionBeanInstance(ejb)__	};release,the,given,ejb,instance,default,implementation,delegates,to,remove,session,bean,instance,param,ejb,the,ejb,instance,to,release,see,remove,session,bean,instance;protected,void,release,session,bean,instance,ejblocal,object,ejb,remove,session,bean,instance,ejb
