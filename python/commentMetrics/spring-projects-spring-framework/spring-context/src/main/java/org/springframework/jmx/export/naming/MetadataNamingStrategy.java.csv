# id;timestamp;commentText;codeText;commentWords;codeWords
MetadataNamingStrategy -> @Override 	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException;1356735495;Reads the {@code ObjectName} from the source-level metadata associated_with the managed resource's {@code Class}.;@Override_	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException {_		Class managedClass = AopUtils.getTargetClass(managedBean)__		ManagedResource mr = this.attributeSource.getManagedResource(managedClass)___		_		if (mr != null && StringUtils.hasText(mr.getObjectName())) {_			return ObjectNameManager.getInstance(mr.getObjectName())__		}_		else {_			try {_				return ObjectNameManager.getInstance(beanKey)__			}_			catch (MalformedObjectNameException ex) {_				String domain = this.defaultDomain__				if (domain == null) {_					domain = ClassUtils.getPackageName(managedClass)__				}_				Hashtable<String, String> properties = new Hashtable<String, String>()__				properties.put("type", ClassUtils.getShortName(managedClass))__				properties.put("name", beanKey)__				return ObjectNameManager.getInstance(domain, properties)__			}_		}_	};reads,the,code,object,name,from,the,source,level,metadata,associated,with,the,managed,resource,s,code,class;override,public,object,name,get,object,name,object,managed,bean,string,bean,key,throws,malformed,object,name,exception,class,managed,class,aop,utils,get,target,class,managed,bean,managed,resource,mr,this,attribute,source,get,managed,resource,managed,class,if,mr,null,string,utils,has,text,mr,get,object,name,return,object,name,manager,get,instance,mr,get,object,name,else,try,return,object,name,manager,get,instance,bean,key,catch,malformed,object,name,exception,ex,string,domain,this,default,domain,if,domain,null,domain,class,utils,get,package,name,managed,class,hashtable,string,string,properties,new,hashtable,string,string,properties,put,type,class,utils,get,short,name,managed,class,properties,put,name,bean,key,return,object,name,manager,get,instance,domain,properties
MetadataNamingStrategy -> @Override 	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException;1368482696;Reads the {@code ObjectName} from the source-level metadata associated_with the managed resource's {@code Class}.;@Override_	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException {_		Class managedClass = AopUtils.getTargetClass(managedBean)__		ManagedResource mr = this.attributeSource.getManagedResource(managedClass)___		_		if (mr != null && StringUtils.hasText(mr.getObjectName())) {_			return ObjectNameManager.getInstance(mr.getObjectName())__		}_		else {_			try {_				return ObjectNameManager.getInstance(beanKey)__			}_			catch (MalformedObjectNameException ex) {_				String domain = this.defaultDomain__				if (domain == null) {_					domain = ClassUtils.getPackageName(managedClass)__				}_				Hashtable<String, String> properties = new Hashtable<String, String>()__				properties.put("type", ClassUtils.getShortName(managedClass))__				properties.put("name", beanKey)__				return ObjectNameManager.getInstance(domain, properties)__			}_		}_	};reads,the,code,object,name,from,the,source,level,metadata,associated,with,the,managed,resource,s,code,class;override,public,object,name,get,object,name,object,managed,bean,string,bean,key,throws,malformed,object,name,exception,class,managed,class,aop,utils,get,target,class,managed,bean,managed,resource,mr,this,attribute,source,get,managed,resource,managed,class,if,mr,null,string,utils,has,text,mr,get,object,name,return,object,name,manager,get,instance,mr,get,object,name,else,try,return,object,name,manager,get,instance,bean,key,catch,malformed,object,name,exception,ex,string,domain,this,default,domain,if,domain,null,domain,class,utils,get,package,name,managed,class,hashtable,string,string,properties,new,hashtable,string,string,properties,put,type,class,utils,get,short,name,managed,class,properties,put,name,bean,key,return,object,name,manager,get,instance,domain,properties
MetadataNamingStrategy -> @Override 	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException;1385412762;Reads the {@code ObjectName} from the source-level metadata associated_with the managed resource's {@code Class}.;@Override_	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException {_		Class<?> managedClass = AopUtils.getTargetClass(managedBean)__		ManagedResource mr = this.attributeSource.getManagedResource(managedClass)___		_		if (mr != null && StringUtils.hasText(mr.getObjectName())) {_			return ObjectNameManager.getInstance(mr.getObjectName())__		}_		else {_			try {_				return ObjectNameManager.getInstance(beanKey)__			}_			catch (MalformedObjectNameException ex) {_				String domain = this.defaultDomain__				if (domain == null) {_					domain = ClassUtils.getPackageName(managedClass)__				}_				Hashtable<String, String> properties = new Hashtable<String, String>()__				properties.put("type", ClassUtils.getShortName(managedClass))__				properties.put("name", beanKey)__				return ObjectNameManager.getInstance(domain, properties)__			}_		}_	};reads,the,code,object,name,from,the,source,level,metadata,associated,with,the,managed,resource,s,code,class;override,public,object,name,get,object,name,object,managed,bean,string,bean,key,throws,malformed,object,name,exception,class,managed,class,aop,utils,get,target,class,managed,bean,managed,resource,mr,this,attribute,source,get,managed,resource,managed,class,if,mr,null,string,utils,has,text,mr,get,object,name,return,object,name,manager,get,instance,mr,get,object,name,else,try,return,object,name,manager,get,instance,bean,key,catch,malformed,object,name,exception,ex,string,domain,this,default,domain,if,domain,null,domain,class,utils,get,package,name,managed,class,hashtable,string,string,properties,new,hashtable,string,string,properties,put,type,class,utils,get,short,name,managed,class,properties,put,name,bean,key,return,object,name,manager,get,instance,domain,properties
MetadataNamingStrategy -> @Override 	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException;1467730834;Reads the {@code ObjectName} from the source-level metadata associated_with the managed resource's {@code Class}.;@Override_	public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException {_		Class<?> managedClass = AopUtils.getTargetClass(managedBean)__		ManagedResource mr = this.attributeSource.getManagedResource(managedClass)___		_		if (mr != null && StringUtils.hasText(mr.getObjectName())) {_			return ObjectNameManager.getInstance(mr.getObjectName())__		}_		else {_			try {_				return ObjectNameManager.getInstance(beanKey)__			}_			catch (MalformedObjectNameException ex) {_				String domain = this.defaultDomain__				if (domain == null) {_					domain = ClassUtils.getPackageName(managedClass)__				}_				Hashtable<String, String> properties = new Hashtable<>()__				properties.put("type", ClassUtils.getShortName(managedClass))__				properties.put("name", beanKey)__				return ObjectNameManager.getInstance(domain, properties)__			}_		}_	};reads,the,code,object,name,from,the,source,level,metadata,associated,with,the,managed,resource,s,code,class;override,public,object,name,get,object,name,object,managed,bean,string,bean,key,throws,malformed,object,name,exception,class,managed,class,aop,utils,get,target,class,managed,bean,managed,resource,mr,this,attribute,source,get,managed,resource,managed,class,if,mr,null,string,utils,has,text,mr,get,object,name,return,object,name,manager,get,instance,mr,get,object,name,else,try,return,object,name,manager,get,instance,bean,key,catch,malformed,object,name,exception,ex,string,domain,this,default,domain,if,domain,null,domain,class,utils,get,package,name,managed,class,hashtable,string,string,properties,new,hashtable,properties,put,type,class,utils,get,short,name,managed,class,properties,put,name,bean,key,return,object,name,manager,get,instance,domain,properties
MetadataNamingStrategy -> public MetadataNamingStrategy(JmxAttributeSource attributeSource);1328020251;Create a new <code>MetadataNamingStrategy<code> for the given_<code>JmxAttributeSource</code>._@param attributeSource the JmxAttributeSource to use;public MetadataNamingStrategy(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};create,a,new,code,metadata,naming,strategy,code,for,the,given,code,jmx,attribute,source,code,param,attribute,source,the,jmx,attribute,source,to,use;public,metadata,naming,strategy,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataNamingStrategy -> public MetadataNamingStrategy(JmxAttributeSource attributeSource);1356735495;Create a new {@code MetadataNamingStrategy} for the given_{@code JmxAttributeSource}._@param attributeSource the JmxAttributeSource to use;public MetadataNamingStrategy(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};create,a,new,code,metadata,naming,strategy,for,the,given,code,jmx,attribute,source,param,attribute,source,the,jmx,attribute,source,to,use;public,metadata,naming,strategy,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataNamingStrategy -> public MetadataNamingStrategy(JmxAttributeSource attributeSource);1357119239;Create a new {@code MetadataNamingStrategy} for the given_{@code JmxAttributeSource}._@param attributeSource the JmxAttributeSource to use;public MetadataNamingStrategy(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};create,a,new,code,metadata,naming,strategy,for,the,given,code,jmx,attribute,source,param,attribute,source,the,jmx,attribute,source,to,use;public,metadata,naming,strategy,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataNamingStrategy -> public MetadataNamingStrategy(JmxAttributeSource attributeSource);1368482696;Create a new {@code MetadataNamingStrategy} for the given_{@code JmxAttributeSource}._@param attributeSource the JmxAttributeSource to use;public MetadataNamingStrategy(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};create,a,new,code,metadata,naming,strategy,for,the,given,code,jmx,attribute,source,param,attribute,source,the,jmx,attribute,source,to,use;public,metadata,naming,strategy,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataNamingStrategy -> public MetadataNamingStrategy(JmxAttributeSource attributeSource);1385412762;Create a new {@code MetadataNamingStrategy} for the given_{@code JmxAttributeSource}._@param attributeSource the JmxAttributeSource to use;public MetadataNamingStrategy(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};create,a,new,code,metadata,naming,strategy,for,the,given,code,jmx,attribute,source,param,attribute,source,the,jmx,attribute,source,to,use;public,metadata,naming,strategy,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataNamingStrategy -> public MetadataNamingStrategy(JmxAttributeSource attributeSource);1467730834;Create a new {@code MetadataNamingStrategy} for the given_{@code JmxAttributeSource}._@param attributeSource the JmxAttributeSource to use;public MetadataNamingStrategy(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};create,a,new,code,metadata,naming,strategy,for,the,given,code,jmx,attribute,source,param,attribute,source,the,jmx,attribute,source,to,use;public,metadata,naming,strategy,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataNamingStrategy -> public MetadataNamingStrategy(JmxAttributeSource attributeSource);1498780456;Create a new {@code MetadataNamingStrategy} for the given_{@code JmxAttributeSource}._@param attributeSource the JmxAttributeSource to use;public MetadataNamingStrategy(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};create,a,new,code,metadata,naming,strategy,for,the,given,code,jmx,attribute,source,param,attribute,source,the,jmx,attribute,source,to,use;public,metadata,naming,strategy,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataNamingStrategy -> public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException;1328020251;Reads the <code>ObjectName</code> from the source-level metadata associated_with the managed resource's <code>Class</code>.;public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException {_		Class managedClass = AopUtils.getTargetClass(managedBean)__		ManagedResource mr = this.attributeSource.getManagedResource(managedClass)___		_		if (mr != null && StringUtils.hasText(mr.getObjectName())) {_			return ObjectNameManager.getInstance(mr.getObjectName())__		}_		else {_			try {_				return ObjectNameManager.getInstance(beanKey)__			}_			catch (MalformedObjectNameException ex) {_				String domain = this.defaultDomain__				if (domain == null) {_					domain = ClassUtils.getPackageName(managedClass)__				}_				Hashtable<String, String> properties = new Hashtable<String, String>()__				properties.put("type", ClassUtils.getShortName(managedClass))__				properties.put("name", beanKey)__				return ObjectNameManager.getInstance(domain, properties)__			}_		}_	};reads,the,code,object,name,code,from,the,source,level,metadata,associated,with,the,managed,resource,s,code,class,code;public,object,name,get,object,name,object,managed,bean,string,bean,key,throws,malformed,object,name,exception,class,managed,class,aop,utils,get,target,class,managed,bean,managed,resource,mr,this,attribute,source,get,managed,resource,managed,class,if,mr,null,string,utils,has,text,mr,get,object,name,return,object,name,manager,get,instance,mr,get,object,name,else,try,return,object,name,manager,get,instance,bean,key,catch,malformed,object,name,exception,ex,string,domain,this,default,domain,if,domain,null,domain,class,utils,get,package,name,managed,class,hashtable,string,string,properties,new,hashtable,string,string,properties,put,type,class,utils,get,short,name,managed,class,properties,put,name,bean,key,return,object,name,manager,get,instance,domain,properties
MetadataNamingStrategy -> public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException;1357119239;Reads the {@code ObjectName} from the source-level metadata associated_with the managed resource's {@code Class}.;public ObjectName getObjectName(Object managedBean, String beanKey) throws MalformedObjectNameException {_		Class managedClass = AopUtils.getTargetClass(managedBean)__		ManagedResource mr = this.attributeSource.getManagedResource(managedClass)___		_		if (mr != null && StringUtils.hasText(mr.getObjectName())) {_			return ObjectNameManager.getInstance(mr.getObjectName())__		}_		else {_			try {_				return ObjectNameManager.getInstance(beanKey)__			}_			catch (MalformedObjectNameException ex) {_				String domain = this.defaultDomain__				if (domain == null) {_					domain = ClassUtils.getPackageName(managedClass)__				}_				Hashtable<String, String> properties = new Hashtable<String, String>()__				properties.put("type", ClassUtils.getShortName(managedClass))__				properties.put("name", beanKey)__				return ObjectNameManager.getInstance(domain, properties)__			}_		}_	};reads,the,code,object,name,from,the,source,level,metadata,associated,with,the,managed,resource,s,code,class;public,object,name,get,object,name,object,managed,bean,string,bean,key,throws,malformed,object,name,exception,class,managed,class,aop,utils,get,target,class,managed,bean,managed,resource,mr,this,attribute,source,get,managed,resource,managed,class,if,mr,null,string,utils,has,text,mr,get,object,name,return,object,name,manager,get,instance,mr,get,object,name,else,try,return,object,name,manager,get,instance,bean,key,catch,malformed,object,name,exception,ex,string,domain,this,default,domain,if,domain,null,domain,class,utils,get,package,name,managed,class,hashtable,string,string,properties,new,hashtable,string,string,properties,put,type,class,utils,get,short,name,managed,class,properties,put,name,bean,key,return,object,name,manager,get,instance,domain,properties
MetadataNamingStrategy -> public MetadataNamingStrategy();1328020251;Create a new <code>MetadataNamingStrategy<code> which needs to be_configured through the {@link #setAttributeSource} method.;public MetadataNamingStrategy() {_	};create,a,new,code,metadata,naming,strategy,code,which,needs,to,be,configured,through,the,link,set,attribute,source,method;public,metadata,naming,strategy
MetadataNamingStrategy -> public MetadataNamingStrategy();1356735495;Create a new {@code MetadataNamingStrategy} which needs to be_configured through the {@link #setAttributeSource} method.;public MetadataNamingStrategy() {_	};create,a,new,code,metadata,naming,strategy,which,needs,to,be,configured,through,the,link,set,attribute,source,method;public,metadata,naming,strategy
MetadataNamingStrategy -> public MetadataNamingStrategy();1357119239;Create a new {@code MetadataNamingStrategy} which needs to be_configured through the {@link #setAttributeSource} method.;public MetadataNamingStrategy() {_	};create,a,new,code,metadata,naming,strategy,which,needs,to,be,configured,through,the,link,set,attribute,source,method;public,metadata,naming,strategy
MetadataNamingStrategy -> public MetadataNamingStrategy();1368482696;Create a new {@code MetadataNamingStrategy} which needs to be_configured through the {@link #setAttributeSource} method.;public MetadataNamingStrategy() {_	};create,a,new,code,metadata,naming,strategy,which,needs,to,be,configured,through,the,link,set,attribute,source,method;public,metadata,naming,strategy
MetadataNamingStrategy -> public MetadataNamingStrategy();1385412762;Create a new {@code MetadataNamingStrategy} which needs to be_configured through the {@link #setAttributeSource} method.;public MetadataNamingStrategy() {_	};create,a,new,code,metadata,naming,strategy,which,needs,to,be,configured,through,the,link,set,attribute,source,method;public,metadata,naming,strategy
MetadataNamingStrategy -> public MetadataNamingStrategy();1467730834;Create a new {@code MetadataNamingStrategy} which needs to be_configured through the {@link #setAttributeSource} method.;public MetadataNamingStrategy() {_	};create,a,new,code,metadata,naming,strategy,which,needs,to,be,configured,through,the,link,set,attribute,source,method;public,metadata,naming,strategy
MetadataNamingStrategy -> public MetadataNamingStrategy();1498780456;Create a new {@code MetadataNamingStrategy} which needs to be_configured through the {@link #setAttributeSource} method.;public MetadataNamingStrategy() {_	};create,a,new,code,metadata,naming,strategy,which,needs,to,be,configured,through,the,link,set,attribute,source,method;public,metadata,naming,strategy
MetadataNamingStrategy -> public void setAttributeSource(JmxAttributeSource attributeSource);1328020251;Set the implementation of the <code>JmxAttributeSource</code> interface to use_when reading the source-level metadata.;public void setAttributeSource(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};set,the,implementation,of,the,code,jmx,attribute,source,code,interface,to,use,when,reading,the,source,level,metadata;public,void,set,attribute,source,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataNamingStrategy -> public void setAttributeSource(JmxAttributeSource attributeSource);1356735495;Set the implementation of the {@code JmxAttributeSource} interface to use_when reading the source-level metadata.;public void setAttributeSource(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};set,the,implementation,of,the,code,jmx,attribute,source,interface,to,use,when,reading,the,source,level,metadata;public,void,set,attribute,source,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataNamingStrategy -> public void setAttributeSource(JmxAttributeSource attributeSource);1357119239;Set the implementation of the {@code JmxAttributeSource} interface to use_when reading the source-level metadata.;public void setAttributeSource(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};set,the,implementation,of,the,code,jmx,attribute,source,interface,to,use,when,reading,the,source,level,metadata;public,void,set,attribute,source,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataNamingStrategy -> public void setAttributeSource(JmxAttributeSource attributeSource);1368482696;Set the implementation of the {@code JmxAttributeSource} interface to use_when reading the source-level metadata.;public void setAttributeSource(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};set,the,implementation,of,the,code,jmx,attribute,source,interface,to,use,when,reading,the,source,level,metadata;public,void,set,attribute,source,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataNamingStrategy -> public void setAttributeSource(JmxAttributeSource attributeSource);1385412762;Set the implementation of the {@code JmxAttributeSource} interface to use_when reading the source-level metadata.;public void setAttributeSource(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};set,the,implementation,of,the,code,jmx,attribute,source,interface,to,use,when,reading,the,source,level,metadata;public,void,set,attribute,source,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataNamingStrategy -> public void setAttributeSource(JmxAttributeSource attributeSource);1467730834;Set the implementation of the {@code JmxAttributeSource} interface to use_when reading the source-level metadata.;public void setAttributeSource(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};set,the,implementation,of,the,code,jmx,attribute,source,interface,to,use,when,reading,the,source,level,metadata;public,void,set,attribute,source,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataNamingStrategy -> public void setAttributeSource(JmxAttributeSource attributeSource);1498780456;Set the implementation of the {@code JmxAttributeSource} interface to use_when reading the source-level metadata.;public void setAttributeSource(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};set,the,implementation,of,the,code,jmx,attribute,source,interface,to,use,when,reading,the,source,level,metadata;public,void,set,attribute,source,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataNamingStrategy -> public void setDefaultDomain(String defaultDomain);1328020251;Specify the default domain to be used for generating ObjectNames_when no source-level metadata has been specified._<p>The default is to use the domain specified in the bean name_(if the bean name follows the JMX ObjectName syntax)_ else,_the package name of the managed bean class.;public void setDefaultDomain(String defaultDomain) {_		this.defaultDomain = defaultDomain__	};specify,the,default,domain,to,be,used,for,generating,object,names,when,no,source,level,metadata,has,been,specified,p,the,default,is,to,use,the,domain,specified,in,the,bean,name,if,the,bean,name,follows,the,jmx,object,name,syntax,else,the,package,name,of,the,managed,bean,class;public,void,set,default,domain,string,default,domain,this,default,domain,default,domain
MetadataNamingStrategy -> public void setDefaultDomain(String defaultDomain);1356735495;Specify the default domain to be used for generating ObjectNames_when no source-level metadata has been specified._<p>The default is to use the domain specified in the bean name_(if the bean name follows the JMX ObjectName syntax)_ else,_the package name of the managed bean class.;public void setDefaultDomain(String defaultDomain) {_		this.defaultDomain = defaultDomain__	};specify,the,default,domain,to,be,used,for,generating,object,names,when,no,source,level,metadata,has,been,specified,p,the,default,is,to,use,the,domain,specified,in,the,bean,name,if,the,bean,name,follows,the,jmx,object,name,syntax,else,the,package,name,of,the,managed,bean,class;public,void,set,default,domain,string,default,domain,this,default,domain,default,domain
MetadataNamingStrategy -> public void setDefaultDomain(String defaultDomain);1357119239;Specify the default domain to be used for generating ObjectNames_when no source-level metadata has been specified._<p>The default is to use the domain specified in the bean name_(if the bean name follows the JMX ObjectName syntax)_ else,_the package name of the managed bean class.;public void setDefaultDomain(String defaultDomain) {_		this.defaultDomain = defaultDomain__	};specify,the,default,domain,to,be,used,for,generating,object,names,when,no,source,level,metadata,has,been,specified,p,the,default,is,to,use,the,domain,specified,in,the,bean,name,if,the,bean,name,follows,the,jmx,object,name,syntax,else,the,package,name,of,the,managed,bean,class;public,void,set,default,domain,string,default,domain,this,default,domain,default,domain
MetadataNamingStrategy -> public void setDefaultDomain(String defaultDomain);1368482696;Specify the default domain to be used for generating ObjectNames_when no source-level metadata has been specified._<p>The default is to use the domain specified in the bean name_(if the bean name follows the JMX ObjectName syntax)_ else,_the package name of the managed bean class.;public void setDefaultDomain(String defaultDomain) {_		this.defaultDomain = defaultDomain__	};specify,the,default,domain,to,be,used,for,generating,object,names,when,no,source,level,metadata,has,been,specified,p,the,default,is,to,use,the,domain,specified,in,the,bean,name,if,the,bean,name,follows,the,jmx,object,name,syntax,else,the,package,name,of,the,managed,bean,class;public,void,set,default,domain,string,default,domain,this,default,domain,default,domain
MetadataNamingStrategy -> public void setDefaultDomain(String defaultDomain);1385412762;Specify the default domain to be used for generating ObjectNames_when no source-level metadata has been specified._<p>The default is to use the domain specified in the bean name_(if the bean name follows the JMX ObjectName syntax)_ else,_the package name of the managed bean class.;public void setDefaultDomain(String defaultDomain) {_		this.defaultDomain = defaultDomain__	};specify,the,default,domain,to,be,used,for,generating,object,names,when,no,source,level,metadata,has,been,specified,p,the,default,is,to,use,the,domain,specified,in,the,bean,name,if,the,bean,name,follows,the,jmx,object,name,syntax,else,the,package,name,of,the,managed,bean,class;public,void,set,default,domain,string,default,domain,this,default,domain,default,domain
MetadataNamingStrategy -> public void setDefaultDomain(String defaultDomain);1467730834;Specify the default domain to be used for generating ObjectNames_when no source-level metadata has been specified._<p>The default is to use the domain specified in the bean name_(if the bean name follows the JMX ObjectName syntax)_ else,_the package name of the managed bean class.;public void setDefaultDomain(String defaultDomain) {_		this.defaultDomain = defaultDomain__	};specify,the,default,domain,to,be,used,for,generating,object,names,when,no,source,level,metadata,has,been,specified,p,the,default,is,to,use,the,domain,specified,in,the,bean,name,if,the,bean,name,follows,the,jmx,object,name,syntax,else,the,package,name,of,the,managed,bean,class;public,void,set,default,domain,string,default,domain,this,default,domain,default,domain
MetadataNamingStrategy -> public void setDefaultDomain(String defaultDomain);1498780456;Specify the default domain to be used for generating ObjectNames_when no source-level metadata has been specified._<p>The default is to use the domain specified in the bean name_(if the bean name follows the JMX ObjectName syntax)_ else,_the package name of the managed bean class.;public void setDefaultDomain(String defaultDomain) {_		this.defaultDomain = defaultDomain__	};specify,the,default,domain,to,be,used,for,generating,object,names,when,no,source,level,metadata,has,been,specified,p,the,default,is,to,use,the,domain,specified,in,the,bean,name,if,the,bean,name,follows,the,jmx,object,name,syntax,else,the,package,name,of,the,managed,bean,class;public,void,set,default,domain,string,default,domain,this,default,domain,default,domain
