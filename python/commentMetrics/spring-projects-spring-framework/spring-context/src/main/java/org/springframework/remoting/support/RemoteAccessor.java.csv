commented;modifiers;parameterAmount;loc;comment;code
true;public;1;5;/**  * Set the interface of the service to access.  * The interface must be suitable for the particular service and remoting strategy.  * <p>Typically required to be able to create a suitable service proxy,  * but can also be optional if the lookup returns a typed proxy.  */ ;/**  * Set the interface of the service to access.  * The interface must be suitable for the particular service and remoting strategy.  * <p>Typically required to be able to create a suitable service proxy,  * but can also be optional if the lookup returns a typed proxy.  */ public void setServiceInterface(Class<?> serviceInterface) {     Assert.notNull(serviceInterface, "'serviceInterface' must not be null").     Assert.isTrue(serviceInterface.isInterface(), "'serviceInterface' must be an interface").     this.serviceInterface = serviceInterface. }
true;public;0;3;/**  * Return the interface of the service to access.  */ ;/**  * Return the interface of the service to access.  */ public Class<?> getServiceInterface() {     return this.serviceInterface. }
