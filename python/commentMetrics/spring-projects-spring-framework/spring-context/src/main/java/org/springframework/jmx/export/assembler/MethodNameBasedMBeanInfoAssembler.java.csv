commented;modifiers;parameterAmount;loc;comment;code
true;public;1;3;/**  * Set the array of method names to use for creating the management info.  * These method names will be used for a bean if no entry corresponding to  * that bean is found in the {@code methodMappings} property.  * @param methodNames an array of method names indicating the methods to use  * @see #setMethodMappings  */ ;/**  * Set the array of method names to use for creating the management info.  * These method names will be used for a bean if no entry corresponding to  * that bean is found in the {@code methodMappings} property.  * @param methodNames an array of method names indicating the methods to use  * @see #setMethodMappings  */ public void setManagedMethods(String... methodNames) {     this.managedMethods = new HashSet<>(Arrays.asList(methodNames)). }
true;public;1;8;/**  * Set the mappings of bean keys to a comma-separated list of method names.  * The property key should match the bean key and the property value should match  * the list of method names. When searching for method names for a bean, Spring  * will check these mappings first.  * @param mappings the mappings of bean keys to method names  */ ;/**  * Set the mappings of bean keys to a comma-separated list of method names.  * The property key should match the bean key and the property value should match  * the list of method names. When searching for method names for a bean, Spring  * will check these mappings first.  * @param mappings the mappings of bean keys to method names  */ public void setMethodMappings(Properties mappings) {     this.methodMappings = new HashMap<>().     for (Enumeration<?> en = mappings.keys(). en.hasMoreElements(). ) {         String beanKey = (String) en.nextElement().         String[] methodNames = StringUtils.commaDelimitedListToStringArray(mappings.getProperty(beanKey)).         this.methodMappings.put(beanKey, new HashSet<>(Arrays.asList(methodNames))).     } }
false;protected;2;4;;@Override protected boolean includeReadAttribute(Method method, String beanKey) {     return isMatch(method, beanKey). }
false;protected;2;4;;@Override protected boolean includeWriteAttribute(Method method, String beanKey) {     return isMatch(method, beanKey). }
false;protected;2;4;;@Override protected boolean includeOperation(Method method, String beanKey) {     return isMatch(method, beanKey). }
false;protected;2;9;;protected boolean isMatch(Method method, String beanKey) {     if (this.methodMappings != null) {         Set<String> methodNames = this.methodMappings.get(beanKey).         if (methodNames != null) {             return methodNames.contains(method.getName()).         }     }     return (this.managedMethods != null && this.managedMethods.contains(method.getName())). }
