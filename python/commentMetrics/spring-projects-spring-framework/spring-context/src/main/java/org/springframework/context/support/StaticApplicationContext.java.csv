# id;timestamp;commentText;codeText;commentWords;codeWords
StaticApplicationContext -> @Override 	protected void assertBeanFactoryActive();1368142320;Overridden to turn it into a no-op, to be more lenient towards test cases.;@Override_	protected void assertBeanFactoryActive() {_	};overridden,to,turn,it,into,a,no,op,to,be,more,lenient,towards,test,cases;override,protected,void,assert,bean,factory,active
StaticApplicationContext -> @Override 	protected void assertBeanFactoryActive();1385412762;Overridden to turn it into a no-op, to be more lenient towards test cases.;@Override_	protected void assertBeanFactoryActive() {_	};overridden,to,turn,it,into,a,no,op,to,be,more,lenient,towards,test,cases;override,protected,void,assert,bean,factory,active
StaticApplicationContext -> @Override 	protected void assertBeanFactoryActive();1496837955;Overridden to turn it into a no-op, to be more lenient towards test cases.;@Override_	protected void assertBeanFactoryActive() {_	};overridden,to,turn,it,into,a,no,op,to,be,more,lenient,towards,test,cases;override,protected,void,assert,bean,factory,active
StaticApplicationContext -> public StaticApplicationContext(ApplicationContext parent) throws BeansException;1328020251;Create a new StaticApplicationContext with the given parent._@see #registerSingleton_@see #registerPrototype_@see #registerBeanDefinition_@see #refresh;public StaticApplicationContext(ApplicationContext parent) throws BeansException {_		super(parent)___		_		this.staticMessageSource = new StaticMessageSource()__		getBeanFactory().registerSingleton(MESSAGE_SOURCE_BEAN_NAME, this.staticMessageSource)__	};create,a,new,static,application,context,with,the,given,parent,see,register,singleton,see,register,prototype,see,register,bean,definition,see,refresh;public,static,application,context,application,context,parent,throws,beans,exception,super,parent,this,static,message,source,new,static,message,source,get,bean,factory,register,singleton,this,static,message,source
StaticApplicationContext -> public StaticApplicationContext(ApplicationContext parent) throws BeansException;1368142320;Create a new StaticApplicationContext with the given parent._@see #registerSingleton_@see #registerPrototype_@see #registerBeanDefinition_@see #refresh;public StaticApplicationContext(ApplicationContext parent) throws BeansException {_		super(parent)___		_		this.staticMessageSource = new StaticMessageSource()__		getBeanFactory().registerSingleton(MESSAGE_SOURCE_BEAN_NAME, this.staticMessageSource)__	};create,a,new,static,application,context,with,the,given,parent,see,register,singleton,see,register,prototype,see,register,bean,definition,see,refresh;public,static,application,context,application,context,parent,throws,beans,exception,super,parent,this,static,message,source,new,static,message,source,get,bean,factory,register,singleton,this,static,message,source
StaticApplicationContext -> public StaticApplicationContext(ApplicationContext parent) throws BeansException;1385412762;Create a new StaticApplicationContext with the given parent._@see #registerSingleton_@see #registerPrototype_@see #registerBeanDefinition_@see #refresh;public StaticApplicationContext(ApplicationContext parent) throws BeansException {_		super(parent)___		_		this.staticMessageSource = new StaticMessageSource()__		getBeanFactory().registerSingleton(MESSAGE_SOURCE_BEAN_NAME, this.staticMessageSource)__	};create,a,new,static,application,context,with,the,given,parent,see,register,singleton,see,register,prototype,see,register,bean,definition,see,refresh;public,static,application,context,application,context,parent,throws,beans,exception,super,parent,this,static,message,source,new,static,message,source,get,bean,factory,register,singleton,this,static,message,source
StaticApplicationContext -> public void addMessage(String code, Locale locale, String defaultMessage);1328020251;Associate the given message with the given code._@param code lookup code_@param locale locale message should be found within_@param defaultMessage message associated with this lookup code_@see #getStaticMessageSource;public void addMessage(String code, Locale locale, String defaultMessage) {_		getStaticMessageSource().addMessage(code, locale, defaultMessage)__	};associate,the,given,message,with,the,given,code,param,code,lookup,code,param,locale,locale,message,should,be,found,within,param,default,message,message,associated,with,this,lookup,code,see,get,static,message,source;public,void,add,message,string,code,locale,locale,string,default,message,get,static,message,source,add,message,code,locale,default,message
StaticApplicationContext -> public void addMessage(String code, Locale locale, String defaultMessage);1368142320;Associate the given message with the given code._@param code lookup code_@param locale locale message should be found within_@param defaultMessage message associated with this lookup code_@see #getStaticMessageSource;public void addMessage(String code, Locale locale, String defaultMessage) {_		getStaticMessageSource().addMessage(code, locale, defaultMessage)__	};associate,the,given,message,with,the,given,code,param,code,lookup,code,param,locale,locale,message,should,be,found,within,param,default,message,message,associated,with,this,lookup,code,see,get,static,message,source;public,void,add,message,string,code,locale,locale,string,default,message,get,static,message,source,add,message,code,locale,default,message
StaticApplicationContext -> public void addMessage(String code, Locale locale, String defaultMessage);1385412762;Associate the given message with the given code._@param code lookup code_@param locale locale message should be found within_@param defaultMessage message associated with this lookup code_@see #getStaticMessageSource;public void addMessage(String code, Locale locale, String defaultMessage) {_		getStaticMessageSource().addMessage(code, locale, defaultMessage)__	};associate,the,given,message,with,the,given,code,param,code,lookup,code,param,locale,locale,message,should,be,found,within,param,default,message,message,associated,with,this,lookup,code,see,get,static,message,source;public,void,add,message,string,code,locale,locale,string,default,message,get,static,message,source,add,message,code,locale,default,message
StaticApplicationContext -> public void addMessage(String code, Locale locale, String defaultMessage);1496837955;Associate the given message with the given code._@param code lookup code_@param locale locale message should be found within_@param defaultMessage message associated with this lookup code_@see #getStaticMessageSource;public void addMessage(String code, Locale locale, String defaultMessage) {_		getStaticMessageSource().addMessage(code, locale, defaultMessage)__	};associate,the,given,message,with,the,given,code,param,code,lookup,code,param,locale,locale,message,should,be,found,within,param,default,message,message,associated,with,this,lookup,code,see,get,static,message,source;public,void,add,message,string,code,locale,locale,string,default,message,get,static,message,source,add,message,code,locale,default,message
StaticApplicationContext -> public void registerSingleton(String name, Class<?> clazz, MutablePropertyValues pvs) throws BeansException;1385412762;Register a singleton bean with the underlying bean factory._<p>For more advanced needs, register with the underlying BeanFactory directly._@see #getDefaultListableBeanFactory;public void registerSingleton(String name, Class<?> clazz, MutablePropertyValues pvs) throws BeansException {_		GenericBeanDefinition bd = new GenericBeanDefinition()__		bd.setBeanClass(clazz)__		bd.setPropertyValues(pvs)__		getDefaultListableBeanFactory().registerBeanDefinition(name, bd)__	};register,a,singleton,bean,with,the,underlying,bean,factory,p,for,more,advanced,needs,register,with,the,underlying,bean,factory,directly,see,get,default,listable,bean,factory;public,void,register,singleton,string,name,class,clazz,mutable,property,values,pvs,throws,beans,exception,generic,bean,definition,bd,new,generic,bean,definition,bd,set,bean,class,clazz,bd,set,property,values,pvs,get,default,listable,bean,factory,register,bean,definition,name,bd
StaticApplicationContext -> public void registerSingleton(String name, Class<?> clazz, MutablePropertyValues pvs) throws BeansException;1496837955;Register a singleton bean with the underlying bean factory._<p>For more advanced needs, register with the underlying BeanFactory directly._@see #getDefaultListableBeanFactory;public void registerSingleton(String name, Class<?> clazz, MutablePropertyValues pvs) throws BeansException {_		GenericBeanDefinition bd = new GenericBeanDefinition()__		bd.setBeanClass(clazz)__		bd.setPropertyValues(pvs)__		getDefaultListableBeanFactory().registerBeanDefinition(name, bd)__	};register,a,singleton,bean,with,the,underlying,bean,factory,p,for,more,advanced,needs,register,with,the,underlying,bean,factory,directly,see,get,default,listable,bean,factory;public,void,register,singleton,string,name,class,clazz,mutable,property,values,pvs,throws,beans,exception,generic,bean,definition,bd,new,generic,bean,definition,bd,set,bean,class,clazz,bd,set,property,values,pvs,get,default,listable,bean,factory,register,bean,definition,name,bd
StaticApplicationContext -> public void registerSingleton(String name, Class<?> clazz) throws BeansException;1385412762;Register a singleton bean with the underlying bean factory._<p>For more advanced needs, register with the underlying BeanFactory directly._@see #getDefaultListableBeanFactory;public void registerSingleton(String name, Class<?> clazz) throws BeansException {_		GenericBeanDefinition bd = new GenericBeanDefinition()__		bd.setBeanClass(clazz)__		getDefaultListableBeanFactory().registerBeanDefinition(name, bd)__	};register,a,singleton,bean,with,the,underlying,bean,factory,p,for,more,advanced,needs,register,with,the,underlying,bean,factory,directly,see,get,default,listable,bean,factory;public,void,register,singleton,string,name,class,clazz,throws,beans,exception,generic,bean,definition,bd,new,generic,bean,definition,bd,set,bean,class,clazz,get,default,listable,bean,factory,register,bean,definition,name,bd
StaticApplicationContext -> public void registerSingleton(String name, Class<?> clazz) throws BeansException;1496837955;Register a singleton bean with the underlying bean factory._<p>For more advanced needs, register with the underlying BeanFactory directly._@see #getDefaultListableBeanFactory;public void registerSingleton(String name, Class<?> clazz) throws BeansException {_		GenericBeanDefinition bd = new GenericBeanDefinition()__		bd.setBeanClass(clazz)__		getDefaultListableBeanFactory().registerBeanDefinition(name, bd)__	};register,a,singleton,bean,with,the,underlying,bean,factory,p,for,more,advanced,needs,register,with,the,underlying,bean,factory,directly,see,get,default,listable,bean,factory;public,void,register,singleton,string,name,class,clazz,throws,beans,exception,generic,bean,definition,bd,new,generic,bean,definition,bd,set,bean,class,clazz,get,default,listable,bean,factory,register,bean,definition,name,bd
StaticApplicationContext -> public void registerSingleton(String name, Class clazz) throws BeansException;1328020251;Register a singleton bean with the underlying bean factory._<p>For more advanced needs, register with the underlying BeanFactory directly._@see #getDefaultListableBeanFactory;public void registerSingleton(String name, Class clazz) throws BeansException {_		GenericBeanDefinition bd = new GenericBeanDefinition()__		bd.setBeanClass(clazz)__		getDefaultListableBeanFactory().registerBeanDefinition(name, bd)__	};register,a,singleton,bean,with,the,underlying,bean,factory,p,for,more,advanced,needs,register,with,the,underlying,bean,factory,directly,see,get,default,listable,bean,factory;public,void,register,singleton,string,name,class,clazz,throws,beans,exception,generic,bean,definition,bd,new,generic,bean,definition,bd,set,bean,class,clazz,get,default,listable,bean,factory,register,bean,definition,name,bd
StaticApplicationContext -> public void registerSingleton(String name, Class clazz) throws BeansException;1368142320;Register a singleton bean with the underlying bean factory._<p>For more advanced needs, register with the underlying BeanFactory directly._@see #getDefaultListableBeanFactory;public void registerSingleton(String name, Class clazz) throws BeansException {_		GenericBeanDefinition bd = new GenericBeanDefinition()__		bd.setBeanClass(clazz)__		getDefaultListableBeanFactory().registerBeanDefinition(name, bd)__	};register,a,singleton,bean,with,the,underlying,bean,factory,p,for,more,advanced,needs,register,with,the,underlying,bean,factory,directly,see,get,default,listable,bean,factory;public,void,register,singleton,string,name,class,clazz,throws,beans,exception,generic,bean,definition,bd,new,generic,bean,definition,bd,set,bean,class,clazz,get,default,listable,bean,factory,register,bean,definition,name,bd
StaticApplicationContext -> public void registerPrototype(String name, Class clazz) throws BeansException;1328020251;Register a prototype bean with the underlying bean factory._<p>For more advanced needs, register with the underlying BeanFactory directly._@see #getDefaultListableBeanFactory;public void registerPrototype(String name, Class clazz) throws BeansException {_		GenericBeanDefinition bd = new GenericBeanDefinition()__		bd.setScope(GenericBeanDefinition.SCOPE_PROTOTYPE)__		bd.setBeanClass(clazz)__		getDefaultListableBeanFactory().registerBeanDefinition(name, bd)__	};register,a,prototype,bean,with,the,underlying,bean,factory,p,for,more,advanced,needs,register,with,the,underlying,bean,factory,directly,see,get,default,listable,bean,factory;public,void,register,prototype,string,name,class,clazz,throws,beans,exception,generic,bean,definition,bd,new,generic,bean,definition,bd,set,scope,generic,bean,definition,bd,set,bean,class,clazz,get,default,listable,bean,factory,register,bean,definition,name,bd
StaticApplicationContext -> public void registerPrototype(String name, Class clazz) throws BeansException;1368142320;Register a prototype bean with the underlying bean factory._<p>For more advanced needs, register with the underlying BeanFactory directly._@see #getDefaultListableBeanFactory;public void registerPrototype(String name, Class clazz) throws BeansException {_		GenericBeanDefinition bd = new GenericBeanDefinition()__		bd.setScope(GenericBeanDefinition.SCOPE_PROTOTYPE)__		bd.setBeanClass(clazz)__		getDefaultListableBeanFactory().registerBeanDefinition(name, bd)__	};register,a,prototype,bean,with,the,underlying,bean,factory,p,for,more,advanced,needs,register,with,the,underlying,bean,factory,directly,see,get,default,listable,bean,factory;public,void,register,prototype,string,name,class,clazz,throws,beans,exception,generic,bean,definition,bd,new,generic,bean,definition,bd,set,scope,generic,bean,definition,bd,set,bean,class,clazz,get,default,listable,bean,factory,register,bean,definition,name,bd
StaticApplicationContext -> public void registerPrototype(String name, Class<?> clazz, MutablePropertyValues pvs) throws BeansException;1385412762;Register a prototype bean with the underlying bean factory._<p>For more advanced needs, register with the underlying BeanFactory directly._@see #getDefaultListableBeanFactory;public void registerPrototype(String name, Class<?> clazz, MutablePropertyValues pvs) throws BeansException {_		GenericBeanDefinition bd = new GenericBeanDefinition()__		bd.setScope(GenericBeanDefinition.SCOPE_PROTOTYPE)__		bd.setBeanClass(clazz)__		bd.setPropertyValues(pvs)__		getDefaultListableBeanFactory().registerBeanDefinition(name, bd)__	};register,a,prototype,bean,with,the,underlying,bean,factory,p,for,more,advanced,needs,register,with,the,underlying,bean,factory,directly,see,get,default,listable,bean,factory;public,void,register,prototype,string,name,class,clazz,mutable,property,values,pvs,throws,beans,exception,generic,bean,definition,bd,new,generic,bean,definition,bd,set,scope,generic,bean,definition,bd,set,bean,class,clazz,bd,set,property,values,pvs,get,default,listable,bean,factory,register,bean,definition,name,bd
StaticApplicationContext -> public void registerPrototype(String name, Class<?> clazz, MutablePropertyValues pvs) throws BeansException;1496837955;Register a prototype bean with the underlying bean factory._<p>For more advanced needs, register with the underlying BeanFactory directly._@see #getDefaultListableBeanFactory;public void registerPrototype(String name, Class<?> clazz, MutablePropertyValues pvs) throws BeansException {_		GenericBeanDefinition bd = new GenericBeanDefinition()__		bd.setScope(GenericBeanDefinition.SCOPE_PROTOTYPE)__		bd.setBeanClass(clazz)__		bd.setPropertyValues(pvs)__		getDefaultListableBeanFactory().registerBeanDefinition(name, bd)__	};register,a,prototype,bean,with,the,underlying,bean,factory,p,for,more,advanced,needs,register,with,the,underlying,bean,factory,directly,see,get,default,listable,bean,factory;public,void,register,prototype,string,name,class,clazz,mutable,property,values,pvs,throws,beans,exception,generic,bean,definition,bd,new,generic,bean,definition,bd,set,scope,generic,bean,definition,bd,set,bean,class,clazz,bd,set,property,values,pvs,get,default,listable,bean,factory,register,bean,definition,name,bd
StaticApplicationContext -> public final StaticMessageSource getStaticMessageSource();1328020251;Return the internal StaticMessageSource used by this context._Can be used to register messages on it._@see #addMessage;public final StaticMessageSource getStaticMessageSource() {_		return this.staticMessageSource__	};return,the,internal,static,message,source,used,by,this,context,can,be,used,to,register,messages,on,it,see,add,message;public,final,static,message,source,get,static,message,source,return,this,static,message,source
StaticApplicationContext -> public final StaticMessageSource getStaticMessageSource();1368142320;Return the internal StaticMessageSource used by this context._Can be used to register messages on it._@see #addMessage;public final StaticMessageSource getStaticMessageSource() {_		return this.staticMessageSource__	};return,the,internal,static,message,source,used,by,this,context,can,be,used,to,register,messages,on,it,see,add,message;public,final,static,message,source,get,static,message,source,return,this,static,message,source
StaticApplicationContext -> public final StaticMessageSource getStaticMessageSource();1385412762;Return the internal StaticMessageSource used by this context._Can be used to register messages on it._@see #addMessage;public final StaticMessageSource getStaticMessageSource() {_		return this.staticMessageSource__	};return,the,internal,static,message,source,used,by,this,context,can,be,used,to,register,messages,on,it,see,add,message;public,final,static,message,source,get,static,message,source,return,this,static,message,source
StaticApplicationContext -> public final StaticMessageSource getStaticMessageSource();1496837955;Return the internal StaticMessageSource used by this context._Can be used to register messages on it._@see #addMessage;public final StaticMessageSource getStaticMessageSource() {_		return this.staticMessageSource__	};return,the,internal,static,message,source,used,by,this,context,can,be,used,to,register,messages,on,it,see,add,message;public,final,static,message,source,get,static,message,source,return,this,static,message,source
StaticApplicationContext -> public void registerPrototype(String name, Class<?> clazz) throws BeansException;1385412762;Register a prototype bean with the underlying bean factory._<p>For more advanced needs, register with the underlying BeanFactory directly._@see #getDefaultListableBeanFactory;public void registerPrototype(String name, Class<?> clazz) throws BeansException {_		GenericBeanDefinition bd = new GenericBeanDefinition()__		bd.setScope(GenericBeanDefinition.SCOPE_PROTOTYPE)__		bd.setBeanClass(clazz)__		getDefaultListableBeanFactory().registerBeanDefinition(name, bd)__	};register,a,prototype,bean,with,the,underlying,bean,factory,p,for,more,advanced,needs,register,with,the,underlying,bean,factory,directly,see,get,default,listable,bean,factory;public,void,register,prototype,string,name,class,clazz,throws,beans,exception,generic,bean,definition,bd,new,generic,bean,definition,bd,set,scope,generic,bean,definition,bd,set,bean,class,clazz,get,default,listable,bean,factory,register,bean,definition,name,bd
StaticApplicationContext -> public void registerPrototype(String name, Class<?> clazz) throws BeansException;1496837955;Register a prototype bean with the underlying bean factory._<p>For more advanced needs, register with the underlying BeanFactory directly._@see #getDefaultListableBeanFactory;public void registerPrototype(String name, Class<?> clazz) throws BeansException {_		GenericBeanDefinition bd = new GenericBeanDefinition()__		bd.setScope(GenericBeanDefinition.SCOPE_PROTOTYPE)__		bd.setBeanClass(clazz)__		getDefaultListableBeanFactory().registerBeanDefinition(name, bd)__	};register,a,prototype,bean,with,the,underlying,bean,factory,p,for,more,advanced,needs,register,with,the,underlying,bean,factory,directly,see,get,default,listable,bean,factory;public,void,register,prototype,string,name,class,clazz,throws,beans,exception,generic,bean,definition,bd,new,generic,bean,definition,bd,set,scope,generic,bean,definition,bd,set,bean,class,clazz,get,default,listable,bean,factory,register,bean,definition,name,bd
StaticApplicationContext -> public void registerPrototype(String name, Class clazz, MutablePropertyValues pvs) throws BeansException;1328020251;Register a prototype bean with the underlying bean factory._<p>For more advanced needs, register with the underlying BeanFactory directly._@see #getDefaultListableBeanFactory;public void registerPrototype(String name, Class clazz, MutablePropertyValues pvs) throws BeansException {_		GenericBeanDefinition bd = new GenericBeanDefinition()__		bd.setScope(GenericBeanDefinition.SCOPE_PROTOTYPE)__		bd.setBeanClass(clazz)__		bd.setPropertyValues(pvs)__		getDefaultListableBeanFactory().registerBeanDefinition(name, bd)__	};register,a,prototype,bean,with,the,underlying,bean,factory,p,for,more,advanced,needs,register,with,the,underlying,bean,factory,directly,see,get,default,listable,bean,factory;public,void,register,prototype,string,name,class,clazz,mutable,property,values,pvs,throws,beans,exception,generic,bean,definition,bd,new,generic,bean,definition,bd,set,scope,generic,bean,definition,bd,set,bean,class,clazz,bd,set,property,values,pvs,get,default,listable,bean,factory,register,bean,definition,name,bd
StaticApplicationContext -> public void registerPrototype(String name, Class clazz, MutablePropertyValues pvs) throws BeansException;1368142320;Register a prototype bean with the underlying bean factory._<p>For more advanced needs, register with the underlying BeanFactory directly._@see #getDefaultListableBeanFactory;public void registerPrototype(String name, Class clazz, MutablePropertyValues pvs) throws BeansException {_		GenericBeanDefinition bd = new GenericBeanDefinition()__		bd.setScope(GenericBeanDefinition.SCOPE_PROTOTYPE)__		bd.setBeanClass(clazz)__		bd.setPropertyValues(pvs)__		getDefaultListableBeanFactory().registerBeanDefinition(name, bd)__	};register,a,prototype,bean,with,the,underlying,bean,factory,p,for,more,advanced,needs,register,with,the,underlying,bean,factory,directly,see,get,default,listable,bean,factory;public,void,register,prototype,string,name,class,clazz,mutable,property,values,pvs,throws,beans,exception,generic,bean,definition,bd,new,generic,bean,definition,bd,set,scope,generic,bean,definition,bd,set,bean,class,clazz,bd,set,property,values,pvs,get,default,listable,bean,factory,register,bean,definition,name,bd
StaticApplicationContext -> public StaticApplicationContext() throws BeansException;1328020251;Create a new StaticApplicationContext._@see #registerSingleton_@see #registerPrototype_@see #registerBeanDefinition_@see #refresh;public StaticApplicationContext() throws BeansException {_		this(null)__	};create,a,new,static,application,context,see,register,singleton,see,register,prototype,see,register,bean,definition,see,refresh;public,static,application,context,throws,beans,exception,this,null
StaticApplicationContext -> public StaticApplicationContext() throws BeansException;1368142320;Create a new StaticApplicationContext._@see #registerSingleton_@see #registerPrototype_@see #registerBeanDefinition_@see #refresh;public StaticApplicationContext() throws BeansException {_		this(null)__	};create,a,new,static,application,context,see,register,singleton,see,register,prototype,see,register,bean,definition,see,refresh;public,static,application,context,throws,beans,exception,this,null
StaticApplicationContext -> public StaticApplicationContext() throws BeansException;1385412762;Create a new StaticApplicationContext._@see #registerSingleton_@see #registerPrototype_@see #registerBeanDefinition_@see #refresh;public StaticApplicationContext() throws BeansException {_		this(null)__	};create,a,new,static,application,context,see,register,singleton,see,register,prototype,see,register,bean,definition,see,refresh;public,static,application,context,throws,beans,exception,this,null
StaticApplicationContext -> public StaticApplicationContext() throws BeansException;1496837955;Create a new StaticApplicationContext._@see #registerSingleton_@see #registerPrototype_@see #registerBeanDefinition_@see #refresh;public StaticApplicationContext() throws BeansException {_		this(null)__	};create,a,new,static,application,context,see,register,singleton,see,register,prototype,see,register,bean,definition,see,refresh;public,static,application,context,throws,beans,exception,this,null
StaticApplicationContext -> public void registerSingleton(String name, Class clazz, MutablePropertyValues pvs) throws BeansException;1328020251;Register a singleton bean with the underlying bean factory._<p>For more advanced needs, register with the underlying BeanFactory directly._@see #getDefaultListableBeanFactory;public void registerSingleton(String name, Class clazz, MutablePropertyValues pvs) throws BeansException {_		GenericBeanDefinition bd = new GenericBeanDefinition()__		bd.setBeanClass(clazz)__		bd.setPropertyValues(pvs)__		getDefaultListableBeanFactory().registerBeanDefinition(name, bd)__	};register,a,singleton,bean,with,the,underlying,bean,factory,p,for,more,advanced,needs,register,with,the,underlying,bean,factory,directly,see,get,default,listable,bean,factory;public,void,register,singleton,string,name,class,clazz,mutable,property,values,pvs,throws,beans,exception,generic,bean,definition,bd,new,generic,bean,definition,bd,set,bean,class,clazz,bd,set,property,values,pvs,get,default,listable,bean,factory,register,bean,definition,name,bd
StaticApplicationContext -> public void registerSingleton(String name, Class clazz, MutablePropertyValues pvs) throws BeansException;1368142320;Register a singleton bean with the underlying bean factory._<p>For more advanced needs, register with the underlying BeanFactory directly._@see #getDefaultListableBeanFactory;public void registerSingleton(String name, Class clazz, MutablePropertyValues pvs) throws BeansException {_		GenericBeanDefinition bd = new GenericBeanDefinition()__		bd.setBeanClass(clazz)__		bd.setPropertyValues(pvs)__		getDefaultListableBeanFactory().registerBeanDefinition(name, bd)__	};register,a,singleton,bean,with,the,underlying,bean,factory,p,for,more,advanced,needs,register,with,the,underlying,bean,factory,directly,see,get,default,listable,bean,factory;public,void,register,singleton,string,name,class,clazz,mutable,property,values,pvs,throws,beans,exception,generic,bean,definition,bd,new,generic,bean,definition,bd,set,bean,class,clazz,bd,set,property,values,pvs,get,default,listable,bean,factory,register,bean,definition,name,bd
