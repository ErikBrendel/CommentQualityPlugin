# id;timestamp;commentText;codeText;commentWords;codeWords
MetadataMBeanInfoAssembler -> @Override 	protected void checkManagedBean(Object managedBean) throws IllegalArgumentException;1328020251;Throws an IllegalArgumentException if it encounters a JDK dynamic proxy._Metadata can only be read from target classes and CGLIB proxies!;@Override_	protected void checkManagedBean(Object managedBean) throws IllegalArgumentException {_		if (AopUtils.isJdkDynamicProxy(managedBean)) {_			throw new IllegalArgumentException(_					"MetadataMBeanInfoAssembler does not support JDK dynamic proxies - " +_					"export the target beans directly or use CGLIB proxies instead")__		}_	};throws,an,illegal,argument,exception,if,it,encounters,a,jdk,dynamic,proxy,metadata,can,only,be,read,from,target,classes,and,cglib,proxies;override,protected,void,check,managed,bean,object,managed,bean,throws,illegal,argument,exception,if,aop,utils,is,jdk,dynamic,proxy,managed,bean,throw,new,illegal,argument,exception,metadata,mbean,info,assembler,does,not,support,jdk,dynamic,proxies,export,the,target,beans,directly,or,use,cglib,proxies,instead
MetadataMBeanInfoAssembler -> @Override 	protected void checkManagedBean(Object managedBean) throws IllegalArgumentException;1356735495;Throws an IllegalArgumentException if it encounters a JDK dynamic proxy._Metadata can only be read from target classes and CGLIB proxies!;@Override_	protected void checkManagedBean(Object managedBean) throws IllegalArgumentException {_		if (AopUtils.isJdkDynamicProxy(managedBean)) {_			throw new IllegalArgumentException(_					"MetadataMBeanInfoAssembler does not support JDK dynamic proxies - " +_					"export the target beans directly or use CGLIB proxies instead")__		}_	};throws,an,illegal,argument,exception,if,it,encounters,a,jdk,dynamic,proxy,metadata,can,only,be,read,from,target,classes,and,cglib,proxies;override,protected,void,check,managed,bean,object,managed,bean,throws,illegal,argument,exception,if,aop,utils,is,jdk,dynamic,proxy,managed,bean,throw,new,illegal,argument,exception,metadata,mbean,info,assembler,does,not,support,jdk,dynamic,proxies,export,the,target,beans,directly,or,use,cglib,proxies,instead
MetadataMBeanInfoAssembler -> @Override 	protected void checkManagedBean(Object managedBean) throws IllegalArgumentException;1357119239;Throws an IllegalArgumentException if it encounters a JDK dynamic proxy._Metadata can only be read from target classes and CGLIB proxies!;@Override_	protected void checkManagedBean(Object managedBean) throws IllegalArgumentException {_		if (AopUtils.isJdkDynamicProxy(managedBean)) {_			throw new IllegalArgumentException(_					"MetadataMBeanInfoAssembler does not support JDK dynamic proxies - " +_					"export the target beans directly or use CGLIB proxies instead")__		}_	};throws,an,illegal,argument,exception,if,it,encounters,a,jdk,dynamic,proxy,metadata,can,only,be,read,from,target,classes,and,cglib,proxies;override,protected,void,check,managed,bean,object,managed,bean,throws,illegal,argument,exception,if,aop,utils,is,jdk,dynamic,proxy,managed,bean,throw,new,illegal,argument,exception,metadata,mbean,info,assembler,does,not,support,jdk,dynamic,proxies,export,the,target,beans,directly,or,use,cglib,proxies,instead
MetadataMBeanInfoAssembler -> @Override 	protected void checkManagedBean(Object managedBean) throws IllegalArgumentException;1362408075;Throws an IllegalArgumentException if it encounters a JDK dynamic proxy._Metadata can only be read from target classes and CGLIB proxies!;@Override_	protected void checkManagedBean(Object managedBean) throws IllegalArgumentException {_		if (AopUtils.isJdkDynamicProxy(managedBean)) {_			throw new IllegalArgumentException(_					"MetadataMBeanInfoAssembler does not support JDK dynamic proxies - " +_					"export the target beans directly or use CGLIB proxies instead")__		}_	};throws,an,illegal,argument,exception,if,it,encounters,a,jdk,dynamic,proxy,metadata,can,only,be,read,from,target,classes,and,cglib,proxies;override,protected,void,check,managed,bean,object,managed,bean,throws,illegal,argument,exception,if,aop,utils,is,jdk,dynamic,proxy,managed,bean,throw,new,illegal,argument,exception,metadata,mbean,info,assembler,does,not,support,jdk,dynamic,proxies,export,the,target,beans,directly,or,use,cglib,proxies,instead
MetadataMBeanInfoAssembler -> @Override 	protected void checkManagedBean(Object managedBean) throws IllegalArgumentException;1368482696;Throws an IllegalArgumentException if it encounters a JDK dynamic proxy._Metadata can only be read from target classes and CGLIB proxies!;@Override_	protected void checkManagedBean(Object managedBean) throws IllegalArgumentException {_		if (AopUtils.isJdkDynamicProxy(managedBean)) {_			throw new IllegalArgumentException(_					"MetadataMBeanInfoAssembler does not support JDK dynamic proxies - " +_					"export the target beans directly or use CGLIB proxies instead")__		}_	};throws,an,illegal,argument,exception,if,it,encounters,a,jdk,dynamic,proxy,metadata,can,only,be,read,from,target,classes,and,cglib,proxies;override,protected,void,check,managed,bean,object,managed,bean,throws,illegal,argument,exception,if,aop,utils,is,jdk,dynamic,proxy,managed,bean,throw,new,illegal,argument,exception,metadata,mbean,info,assembler,does,not,support,jdk,dynamic,proxies,export,the,target,beans,directly,or,use,cglib,proxies,instead
MetadataMBeanInfoAssembler -> @Override 	protected void checkManagedBean(Object managedBean) throws IllegalArgumentException;1385412762;Throws an IllegalArgumentException if it encounters a JDK dynamic proxy._Metadata can only be read from target classes and CGLIB proxies!;@Override_	protected void checkManagedBean(Object managedBean) throws IllegalArgumentException {_		if (AopUtils.isJdkDynamicProxy(managedBean)) {_			throw new IllegalArgumentException(_					"MetadataMBeanInfoAssembler does not support JDK dynamic proxies - " +_					"export the target beans directly or use CGLIB proxies instead")__		}_	};throws,an,illegal,argument,exception,if,it,encounters,a,jdk,dynamic,proxy,metadata,can,only,be,read,from,target,classes,and,cglib,proxies;override,protected,void,check,managed,bean,object,managed,bean,throws,illegal,argument,exception,if,aop,utils,is,jdk,dynamic,proxy,managed,bean,throw,new,illegal,argument,exception,metadata,mbean,info,assembler,does,not,support,jdk,dynamic,proxies,export,the,target,beans,directly,or,use,cglib,proxies,instead
MetadataMBeanInfoAssembler -> @Override 	protected void checkManagedBean(Object managedBean) throws IllegalArgumentException;1405696918;Throws an IllegalArgumentException if it encounters a JDK dynamic proxy._Metadata can only be read from target classes and CGLIB proxies!;@Override_	protected void checkManagedBean(Object managedBean) throws IllegalArgumentException {_		if (AopUtils.isJdkDynamicProxy(managedBean)) {_			throw new IllegalArgumentException(_					"MetadataMBeanInfoAssembler does not support JDK dynamic proxies - " +_					"export the target beans directly or use CGLIB proxies instead")__		}_	};throws,an,illegal,argument,exception,if,it,encounters,a,jdk,dynamic,proxy,metadata,can,only,be,read,from,target,classes,and,cglib,proxies;override,protected,void,check,managed,bean,object,managed,bean,throws,illegal,argument,exception,if,aop,utils,is,jdk,dynamic,proxy,managed,bean,throw,new,illegal,argument,exception,metadata,mbean,info,assembler,does,not,support,jdk,dynamic,proxies,export,the,target,beans,directly,or,use,cglib,proxies,instead
MetadataMBeanInfoAssembler -> @Override 	protected void checkManagedBean(Object managedBean) throws IllegalArgumentException;1496837955;Throws an IllegalArgumentException if it encounters a JDK dynamic proxy._Metadata can only be read from target classes and CGLIB proxies!;@Override_	protected void checkManagedBean(Object managedBean) throws IllegalArgumentException {_		if (AopUtils.isJdkDynamicProxy(managedBean)) {_			throw new IllegalArgumentException(_					"MetadataMBeanInfoAssembler does not support JDK dynamic proxies - " +_					"export the target beans directly or use CGLIB proxies instead")__		}_	};throws,an,illegal,argument,exception,if,it,encounters,a,jdk,dynamic,proxy,metadata,can,only,be,read,from,target,classes,and,cglib,proxies;override,protected,void,check,managed,bean,object,managed,bean,throws,illegal,argument,exception,if,aop,utils,is,jdk,dynamic,proxy,managed,bean,throw,new,illegal,argument,exception,metadata,mbean,info,assembler,does,not,support,jdk,dynamic,proxies,export,the,target,beans,directly,or,use,cglib,proxies,instead
MetadataMBeanInfoAssembler -> @Override 	protected void checkManagedBean(Object managedBean) throws IllegalArgumentException;1498780456;Throws an IllegalArgumentException if it encounters a JDK dynamic proxy._Metadata can only be read from target classes and CGLIB proxies!;@Override_	protected void checkManagedBean(Object managedBean) throws IllegalArgumentException {_		if (AopUtils.isJdkDynamicProxy(managedBean)) {_			throw new IllegalArgumentException(_					"MetadataMBeanInfoAssembler does not support JDK dynamic proxies - " +_					"export the target beans directly or use CGLIB proxies instead")__		}_	};throws,an,illegal,argument,exception,if,it,encounters,a,jdk,dynamic,proxy,metadata,can,only,be,read,from,target,classes,and,cglib,proxies;override,protected,void,check,managed,bean,object,managed,bean,throws,illegal,argument,exception,if,aop,utils,is,jdk,dynamic,proxy,managed,bean,throw,new,illegal,argument,exception,metadata,mbean,info,assembler,does,not,support,jdk,dynamic,proxies,export,the,target,beans,directly,or,use,cglib,proxies,instead
MetadataMBeanInfoAssembler -> @Override 	protected void checkManagedBean(Object managedBean) throws IllegalArgumentException;1500495740;Throws an IllegalArgumentException if it encounters a JDK dynamic proxy._Metadata can only be read from target classes and CGLIB proxies!;@Override_	protected void checkManagedBean(Object managedBean) throws IllegalArgumentException {_		if (AopUtils.isJdkDynamicProxy(managedBean)) {_			throw new IllegalArgumentException(_					"MetadataMBeanInfoAssembler does not support JDK dynamic proxies - " +_					"export the target beans directly or use CGLIB proxies instead")__		}_	};throws,an,illegal,argument,exception,if,it,encounters,a,jdk,dynamic,proxy,metadata,can,only,be,read,from,target,classes,and,cglib,proxies;override,protected,void,check,managed,bean,object,managed,bean,throws,illegal,argument,exception,if,aop,utils,is,jdk,dynamic,proxy,managed,bean,throw,new,illegal,argument,exception,metadata,mbean,info,assembler,does,not,support,jdk,dynamic,proxies,export,the,target,beans,directly,or,use,cglib,proxies,instead
MetadataMBeanInfoAssembler -> @Override 	protected void checkManagedBean(Object managedBean) throws IllegalArgumentException;1520529117;Throws an IllegalArgumentException if it encounters a JDK dynamic proxy._Metadata can only be read from target classes and CGLIB proxies!;@Override_	protected void checkManagedBean(Object managedBean) throws IllegalArgumentException {_		if (AopUtils.isJdkDynamicProxy(managedBean)) {_			throw new IllegalArgumentException(_					"MetadataMBeanInfoAssembler does not support JDK dynamic proxies - " +_					"export the target beans directly or use CGLIB proxies instead")__		}_	};throws,an,illegal,argument,exception,if,it,encounters,a,jdk,dynamic,proxy,metadata,can,only,be,read,from,target,classes,and,cglib,proxies;override,protected,void,check,managed,bean,object,managed,bean,throws,illegal,argument,exception,if,aop,utils,is,jdk,dynamic,proxy,managed,bean,throw,new,illegal,argument,exception,metadata,mbean,info,assembler,does,not,support,jdk,dynamic,proxies,export,the,target,beans,directly,or,use,cglib,proxies,instead
MetadataMBeanInfoAssembler -> private boolean hasManagedAttribute(Method method);1328020251;Checks to see if the given Method has the <code>ManagedAttribute</code> attribute.;private boolean hasManagedAttribute(Method method) {_		return (this.attributeSource.getManagedAttribute(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,attribute,code,attribute;private,boolean,has,managed,attribute,method,method,return,this,attribute,source,get,managed,attribute,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedAttribute(Method method);1356735495;Checks to see if the given Method has the {@code ManagedAttribute} attribute.;private boolean hasManagedAttribute(Method method) {_		return (this.attributeSource.getManagedAttribute(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,attribute,attribute;private,boolean,has,managed,attribute,method,method,return,this,attribute,source,get,managed,attribute,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedAttribute(Method method);1357119239;Checks to see if the given Method has the {@code ManagedAttribute} attribute.;private boolean hasManagedAttribute(Method method) {_		return (this.attributeSource.getManagedAttribute(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,attribute,attribute;private,boolean,has,managed,attribute,method,method,return,this,attribute,source,get,managed,attribute,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedAttribute(Method method);1362408075;Checks to see if the given Method has the {@code ManagedAttribute} attribute.;private boolean hasManagedAttribute(Method method) {_		return (this.attributeSource.getManagedAttribute(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,attribute,attribute;private,boolean,has,managed,attribute,method,method,return,this,attribute,source,get,managed,attribute,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedAttribute(Method method);1368482696;Checks to see if the given Method has the {@code ManagedAttribute} attribute.;private boolean hasManagedAttribute(Method method) {_		return (this.attributeSource.getManagedAttribute(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,attribute,attribute;private,boolean,has,managed,attribute,method,method,return,this,attribute,source,get,managed,attribute,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedAttribute(Method method);1385412762;Checks to see if the given Method has the {@code ManagedAttribute} attribute.;private boolean hasManagedAttribute(Method method) {_		return (this.attributeSource.getManagedAttribute(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,attribute,attribute;private,boolean,has,managed,attribute,method,method,return,this,attribute,source,get,managed,attribute,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedAttribute(Method method);1405696918;Checks to see if the given Method has the {@code ManagedAttribute} attribute.;private boolean hasManagedAttribute(Method method) {_		return (this.attributeSource.getManagedAttribute(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,attribute,attribute;private,boolean,has,managed,attribute,method,method,return,this,attribute,source,get,managed,attribute,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedAttribute(Method method);1496837955;Checks to see if the given Method has the {@code ManagedAttribute} attribute.;private boolean hasManagedAttribute(Method method) {_		return (this.attributeSource.getManagedAttribute(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,attribute,attribute;private,boolean,has,managed,attribute,method,method,return,this,attribute,source,get,managed,attribute,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedAttribute(Method method);1498780456;Checks to see if the given Method has the {@code ManagedAttribute} attribute.;private boolean hasManagedAttribute(Method method) {_		return (obtainAttributeSource().getManagedAttribute(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,attribute,attribute;private,boolean,has,managed,attribute,method,method,return,obtain,attribute,source,get,managed,attribute,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedAttribute(Method method);1500495740;Checks to see if the given Method has the {@code ManagedAttribute} attribute.;private boolean hasManagedAttribute(Method method) {_		return (obtainAttributeSource().getManagedAttribute(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,attribute,attribute;private,boolean,has,managed,attribute,method,method,return,obtain,attribute,source,get,managed,attribute,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedAttribute(Method method);1520529117;Checks to see if the given Method has the {@code ManagedAttribute} attribute.;private boolean hasManagedAttribute(Method method) {_		return (obtainAttributeSource().getManagedAttribute(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,attribute,attribute;private,boolean,has,managed,attribute,method,method,return,obtain,attribute,source,get,managed,attribute,method,null
MetadataMBeanInfoAssembler -> public MetadataMBeanInfoAssembler(JmxAttributeSource attributeSource);1328020251;Create a new <code>MetadataMBeanInfoAssembler<code> for the given_<code>JmxAttributeSource</code>._@param attributeSource the JmxAttributeSource to use;public MetadataMBeanInfoAssembler(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};create,a,new,code,metadata,mbean,info,assembler,code,for,the,given,code,jmx,attribute,source,code,param,attribute,source,the,jmx,attribute,source,to,use;public,metadata,mbean,info,assembler,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataMBeanInfoAssembler -> public MetadataMBeanInfoAssembler(JmxAttributeSource attributeSource);1356735495;Create a new {@code MetadataMBeanInfoAssembler} for the given_{@code JmxAttributeSource}._@param attributeSource the JmxAttributeSource to use;public MetadataMBeanInfoAssembler(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};create,a,new,code,metadata,mbean,info,assembler,for,the,given,code,jmx,attribute,source,param,attribute,source,the,jmx,attribute,source,to,use;public,metadata,mbean,info,assembler,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataMBeanInfoAssembler -> public MetadataMBeanInfoAssembler(JmxAttributeSource attributeSource);1357119239;Create a new {@code MetadataMBeanInfoAssembler} for the given_{@code JmxAttributeSource}._@param attributeSource the JmxAttributeSource to use;public MetadataMBeanInfoAssembler(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};create,a,new,code,metadata,mbean,info,assembler,for,the,given,code,jmx,attribute,source,param,attribute,source,the,jmx,attribute,source,to,use;public,metadata,mbean,info,assembler,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataMBeanInfoAssembler -> public MetadataMBeanInfoAssembler(JmxAttributeSource attributeSource);1362408075;Create a new {@code MetadataMBeanInfoAssembler} for the given_{@code JmxAttributeSource}._@param attributeSource the JmxAttributeSource to use;public MetadataMBeanInfoAssembler(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};create,a,new,code,metadata,mbean,info,assembler,for,the,given,code,jmx,attribute,source,param,attribute,source,the,jmx,attribute,source,to,use;public,metadata,mbean,info,assembler,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataMBeanInfoAssembler -> public MetadataMBeanInfoAssembler(JmxAttributeSource attributeSource);1368482696;Create a new {@code MetadataMBeanInfoAssembler} for the given_{@code JmxAttributeSource}._@param attributeSource the JmxAttributeSource to use;public MetadataMBeanInfoAssembler(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};create,a,new,code,metadata,mbean,info,assembler,for,the,given,code,jmx,attribute,source,param,attribute,source,the,jmx,attribute,source,to,use;public,metadata,mbean,info,assembler,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataMBeanInfoAssembler -> public MetadataMBeanInfoAssembler(JmxAttributeSource attributeSource);1385412762;Create a new {@code MetadataMBeanInfoAssembler} for the given_{@code JmxAttributeSource}._@param attributeSource the JmxAttributeSource to use;public MetadataMBeanInfoAssembler(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};create,a,new,code,metadata,mbean,info,assembler,for,the,given,code,jmx,attribute,source,param,attribute,source,the,jmx,attribute,source,to,use;public,metadata,mbean,info,assembler,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataMBeanInfoAssembler -> public MetadataMBeanInfoAssembler(JmxAttributeSource attributeSource);1405696918;Create a new {@code MetadataMBeanInfoAssembler} for the given_{@code JmxAttributeSource}._@param attributeSource the JmxAttributeSource to use;public MetadataMBeanInfoAssembler(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};create,a,new,code,metadata,mbean,info,assembler,for,the,given,code,jmx,attribute,source,param,attribute,source,the,jmx,attribute,source,to,use;public,metadata,mbean,info,assembler,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataMBeanInfoAssembler -> public MetadataMBeanInfoAssembler(JmxAttributeSource attributeSource);1496837955;Create a new {@code MetadataMBeanInfoAssembler} for the given_{@code JmxAttributeSource}._@param attributeSource the JmxAttributeSource to use;public MetadataMBeanInfoAssembler(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};create,a,new,code,metadata,mbean,info,assembler,for,the,given,code,jmx,attribute,source,param,attribute,source,the,jmx,attribute,source,to,use;public,metadata,mbean,info,assembler,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataMBeanInfoAssembler -> public MetadataMBeanInfoAssembler(JmxAttributeSource attributeSource);1498780456;Create a new {@code MetadataMBeanInfoAssembler} for the given_{@code JmxAttributeSource}._@param attributeSource the JmxAttributeSource to use;public MetadataMBeanInfoAssembler(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};create,a,new,code,metadata,mbean,info,assembler,for,the,given,code,jmx,attribute,source,param,attribute,source,the,jmx,attribute,source,to,use;public,metadata,mbean,info,assembler,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataMBeanInfoAssembler -> public MetadataMBeanInfoAssembler(JmxAttributeSource attributeSource);1500495740;Create a new {@code MetadataMBeanInfoAssembler} for the given_{@code JmxAttributeSource}._@param attributeSource the JmxAttributeSource to use;public MetadataMBeanInfoAssembler(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};create,a,new,code,metadata,mbean,info,assembler,for,the,given,code,jmx,attribute,source,param,attribute,source,the,jmx,attribute,source,to,use;public,metadata,mbean,info,assembler,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataMBeanInfoAssembler -> public MetadataMBeanInfoAssembler(JmxAttributeSource attributeSource);1520529117;Create a new {@code MetadataMBeanInfoAssembler} for the given_{@code JmxAttributeSource}._@param attributeSource the JmxAttributeSource to use;public MetadataMBeanInfoAssembler(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};create,a,new,code,metadata,mbean,info,assembler,for,the,given,code,jmx,attribute,source,param,attribute,source,the,jmx,attribute,source,to,use;public,metadata,mbean,info,assembler,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataMBeanInfoAssembler -> @Override 	protected void populateOperationDescriptor(Descriptor desc, Method method, String beanKey);1328020251;Adds descriptor fields from the <code>ManagedAttribute</code> attribute_to the attribute descriptor. Specifically, adds the <code>currencyTimeLimit</code>_descriptor field if it is present in the metadata.;@Override_	protected void populateOperationDescriptor(Descriptor desc, Method method, String beanKey) {_		ManagedOperation mo = this.attributeSource.getManagedOperation(method)__		if (mo != null) {_			applyCurrencyTimeLimit(desc, mo.getCurrencyTimeLimit())__		}_	};adds,descriptor,fields,from,the,code,managed,attribute,code,attribute,to,the,attribute,descriptor,specifically,adds,the,code,currency,time,limit,code,descriptor,field,if,it,is,present,in,the,metadata;override,protected,void,populate,operation,descriptor,descriptor,desc,method,method,string,bean,key,managed,operation,mo,this,attribute,source,get,managed,operation,method,if,mo,null,apply,currency,time,limit,desc,mo,get,currency,time,limit
MetadataMBeanInfoAssembler -> @Override 	protected void populateOperationDescriptor(Descriptor desc, Method method, String beanKey);1356735495;Adds descriptor fields from the {@code ManagedAttribute} attribute_to the attribute descriptor. Specifically, adds the {@code currencyTimeLimit}_descriptor field if it is present in the metadata.;@Override_	protected void populateOperationDescriptor(Descriptor desc, Method method, String beanKey) {_		ManagedOperation mo = this.attributeSource.getManagedOperation(method)__		if (mo != null) {_			applyCurrencyTimeLimit(desc, mo.getCurrencyTimeLimit())__		}_	};adds,descriptor,fields,from,the,code,managed,attribute,attribute,to,the,attribute,descriptor,specifically,adds,the,code,currency,time,limit,descriptor,field,if,it,is,present,in,the,metadata;override,protected,void,populate,operation,descriptor,descriptor,desc,method,method,string,bean,key,managed,operation,mo,this,attribute,source,get,managed,operation,method,if,mo,null,apply,currency,time,limit,desc,mo,get,currency,time,limit
MetadataMBeanInfoAssembler -> @Override 	protected void populateOperationDescriptor(Descriptor desc, Method method, String beanKey);1357119239;Adds descriptor fields from the {@code ManagedAttribute} attribute_to the attribute descriptor. Specifically, adds the {@code currencyTimeLimit}_descriptor field if it is present in the metadata.;@Override_	protected void populateOperationDescriptor(Descriptor desc, Method method, String beanKey) {_		ManagedOperation mo = this.attributeSource.getManagedOperation(method)__		if (mo != null) {_			applyCurrencyTimeLimit(desc, mo.getCurrencyTimeLimit())__		}_	};adds,descriptor,fields,from,the,code,managed,attribute,attribute,to,the,attribute,descriptor,specifically,adds,the,code,currency,time,limit,descriptor,field,if,it,is,present,in,the,metadata;override,protected,void,populate,operation,descriptor,descriptor,desc,method,method,string,bean,key,managed,operation,mo,this,attribute,source,get,managed,operation,method,if,mo,null,apply,currency,time,limit,desc,mo,get,currency,time,limit
MetadataMBeanInfoAssembler -> @Override 	protected void populateOperationDescriptor(Descriptor desc, Method method, String beanKey);1362408075;Adds descriptor fields from the {@code ManagedAttribute} attribute_to the attribute descriptor. Specifically, adds the {@code currencyTimeLimit}_descriptor field if it is present in the metadata.;@Override_	protected void populateOperationDescriptor(Descriptor desc, Method method, String beanKey) {_		ManagedOperation mo = this.attributeSource.getManagedOperation(method)__		if (mo != null) {_			applyCurrencyTimeLimit(desc, mo.getCurrencyTimeLimit())__		}_	};adds,descriptor,fields,from,the,code,managed,attribute,attribute,to,the,attribute,descriptor,specifically,adds,the,code,currency,time,limit,descriptor,field,if,it,is,present,in,the,metadata;override,protected,void,populate,operation,descriptor,descriptor,desc,method,method,string,bean,key,managed,operation,mo,this,attribute,source,get,managed,operation,method,if,mo,null,apply,currency,time,limit,desc,mo,get,currency,time,limit
MetadataMBeanInfoAssembler -> @Override 	protected void populateOperationDescriptor(Descriptor desc, Method method, String beanKey);1368482696;Adds descriptor fields from the {@code ManagedAttribute} attribute_to the attribute descriptor. Specifically, adds the {@code currencyTimeLimit}_descriptor field if it is present in the metadata.;@Override_	protected void populateOperationDescriptor(Descriptor desc, Method method, String beanKey) {_		ManagedOperation mo = this.attributeSource.getManagedOperation(method)__		if (mo != null) {_			applyCurrencyTimeLimit(desc, mo.getCurrencyTimeLimit())__		}_	};adds,descriptor,fields,from,the,code,managed,attribute,attribute,to,the,attribute,descriptor,specifically,adds,the,code,currency,time,limit,descriptor,field,if,it,is,present,in,the,metadata;override,protected,void,populate,operation,descriptor,descriptor,desc,method,method,string,bean,key,managed,operation,mo,this,attribute,source,get,managed,operation,method,if,mo,null,apply,currency,time,limit,desc,mo,get,currency,time,limit
MetadataMBeanInfoAssembler -> @Override 	protected void populateOperationDescriptor(Descriptor desc, Method method, String beanKey);1385412762;Adds descriptor fields from the {@code ManagedAttribute} attribute_to the attribute descriptor. Specifically, adds the {@code currencyTimeLimit}_descriptor field if it is present in the metadata.;@Override_	protected void populateOperationDescriptor(Descriptor desc, Method method, String beanKey) {_		ManagedOperation mo = this.attributeSource.getManagedOperation(method)__		if (mo != null) {_			applyCurrencyTimeLimit(desc, mo.getCurrencyTimeLimit())__		}_	};adds,descriptor,fields,from,the,code,managed,attribute,attribute,to,the,attribute,descriptor,specifically,adds,the,code,currency,time,limit,descriptor,field,if,it,is,present,in,the,metadata;override,protected,void,populate,operation,descriptor,descriptor,desc,method,method,string,bean,key,managed,operation,mo,this,attribute,source,get,managed,operation,method,if,mo,null,apply,currency,time,limit,desc,mo,get,currency,time,limit
MetadataMBeanInfoAssembler -> @Override 	protected void populateOperationDescriptor(Descriptor desc, Method method, String beanKey);1405696918;Adds descriptor fields from the {@code ManagedAttribute} attribute_to the attribute descriptor. Specifically, adds the {@code currencyTimeLimit}_descriptor field if it is present in the metadata.;@Override_	protected void populateOperationDescriptor(Descriptor desc, Method method, String beanKey) {_		ManagedOperation mo = this.attributeSource.getManagedOperation(method)__		if (mo != null) {_			applyCurrencyTimeLimit(desc, mo.getCurrencyTimeLimit())__		}_	};adds,descriptor,fields,from,the,code,managed,attribute,attribute,to,the,attribute,descriptor,specifically,adds,the,code,currency,time,limit,descriptor,field,if,it,is,present,in,the,metadata;override,protected,void,populate,operation,descriptor,descriptor,desc,method,method,string,bean,key,managed,operation,mo,this,attribute,source,get,managed,operation,method,if,mo,null,apply,currency,time,limit,desc,mo,get,currency,time,limit
MetadataMBeanInfoAssembler -> @Override 	protected void populateOperationDescriptor(Descriptor desc, Method method, String beanKey);1496837955;Adds descriptor fields from the {@code ManagedAttribute} attribute_to the attribute descriptor. Specifically, adds the {@code currencyTimeLimit}_descriptor field if it is present in the metadata.;@Override_	protected void populateOperationDescriptor(Descriptor desc, Method method, String beanKey) {_		ManagedOperation mo = this.attributeSource.getManagedOperation(method)__		if (mo != null) {_			applyCurrencyTimeLimit(desc, mo.getCurrencyTimeLimit())__		}_	};adds,descriptor,fields,from,the,code,managed,attribute,attribute,to,the,attribute,descriptor,specifically,adds,the,code,currency,time,limit,descriptor,field,if,it,is,present,in,the,metadata;override,protected,void,populate,operation,descriptor,descriptor,desc,method,method,string,bean,key,managed,operation,mo,this,attribute,source,get,managed,operation,method,if,mo,null,apply,currency,time,limit,desc,mo,get,currency,time,limit
MetadataMBeanInfoAssembler -> @Override 	protected void populateOperationDescriptor(Descriptor desc, Method method, String beanKey);1498780456;Adds descriptor fields from the {@code ManagedAttribute} attribute_to the attribute descriptor. Specifically, adds the {@code currencyTimeLimit}_descriptor field if it is present in the metadata.;@Override_	protected void populateOperationDescriptor(Descriptor desc, Method method, String beanKey) {_		ManagedOperation mo = obtainAttributeSource().getManagedOperation(method)__		if (mo != null) {_			applyCurrencyTimeLimit(desc, mo.getCurrencyTimeLimit())__		}_	};adds,descriptor,fields,from,the,code,managed,attribute,attribute,to,the,attribute,descriptor,specifically,adds,the,code,currency,time,limit,descriptor,field,if,it,is,present,in,the,metadata;override,protected,void,populate,operation,descriptor,descriptor,desc,method,method,string,bean,key,managed,operation,mo,obtain,attribute,source,get,managed,operation,method,if,mo,null,apply,currency,time,limit,desc,mo,get,currency,time,limit
MetadataMBeanInfoAssembler -> @Override 	protected void populateOperationDescriptor(Descriptor desc, Method method, String beanKey);1500495740;Adds descriptor fields from the {@code ManagedAttribute} attribute_to the attribute descriptor. Specifically, adds the {@code currencyTimeLimit}_descriptor field if it is present in the metadata.;@Override_	protected void populateOperationDescriptor(Descriptor desc, Method method, String beanKey) {_		ManagedOperation mo = obtainAttributeSource().getManagedOperation(method)__		if (mo != null) {_			applyCurrencyTimeLimit(desc, mo.getCurrencyTimeLimit())__		}_	};adds,descriptor,fields,from,the,code,managed,attribute,attribute,to,the,attribute,descriptor,specifically,adds,the,code,currency,time,limit,descriptor,field,if,it,is,present,in,the,metadata;override,protected,void,populate,operation,descriptor,descriptor,desc,method,method,string,bean,key,managed,operation,mo,obtain,attribute,source,get,managed,operation,method,if,mo,null,apply,currency,time,limit,desc,mo,get,currency,time,limit
MetadataMBeanInfoAssembler -> @Override 	protected void populateOperationDescriptor(Descriptor desc, Method method, String beanKey);1520529117;Adds descriptor fields from the {@code ManagedAttribute} attribute_to the attribute descriptor. Specifically, adds the {@code currencyTimeLimit}_descriptor field if it is present in the metadata.;@Override_	protected void populateOperationDescriptor(Descriptor desc, Method method, String beanKey) {_		ManagedOperation mo = obtainAttributeSource().getManagedOperation(method)__		if (mo != null) {_			applyCurrencyTimeLimit(desc, mo.getCurrencyTimeLimit())__		}_	};adds,descriptor,fields,from,the,code,managed,attribute,attribute,to,the,attribute,descriptor,specifically,adds,the,code,currency,time,limit,descriptor,field,if,it,is,present,in,the,metadata;override,protected,void,populate,operation,descriptor,descriptor,desc,method,method,string,bean,key,managed,operation,mo,obtain,attribute,source,get,managed,operation,method,if,mo,null,apply,currency,time,limit,desc,mo,get,currency,time,limit
MetadataMBeanInfoAssembler -> @Nullable 	private Object resolveObjectDescriptor(@Nullable Object getter, @Nullable Object setter);1500495740;Locates the value of a descriptor based on values attached_to both the getter and setter methods. If both have values_supplied then the value attached to the getter is preferred._@param getter the Object value associated with the get method_@param setter the Object value associated with the set method_@return the appropriate Object to use as the value for the descriptor;@Nullable_	private Object resolveObjectDescriptor(@Nullable Object getter, @Nullable Object setter) {_		return (getter != null ? getter : setter)__	};locates,the,value,of,a,descriptor,based,on,values,attached,to,both,the,getter,and,setter,methods,if,both,have,values,supplied,then,the,value,attached,to,the,getter,is,preferred,param,getter,the,object,value,associated,with,the,get,method,param,setter,the,object,value,associated,with,the,set,method,return,the,appropriate,object,to,use,as,the,value,for,the,descriptor;nullable,private,object,resolve,object,descriptor,nullable,object,getter,nullable,object,setter,return,getter,null,getter,setter
MetadataMBeanInfoAssembler -> @Nullable 	private Object resolveObjectDescriptor(@Nullable Object getter, @Nullable Object setter);1520529117;Locates the value of a descriptor based on values attached_to both the getter and setter methods. If both have values_supplied then the value attached to the getter is preferred._@param getter the Object value associated with the get method_@param setter the Object value associated with the set method_@return the appropriate Object to use as the value for the descriptor;@Nullable_	private Object resolveObjectDescriptor(@Nullable Object getter, @Nullable Object setter) {_		return (getter != null ? getter : setter)__	};locates,the,value,of,a,descriptor,based,on,values,attached,to,both,the,getter,and,setter,methods,if,both,have,values,supplied,then,the,value,attached,to,the,getter,is,preferred,param,getter,the,object,value,associated,with,the,get,method,param,setter,the,object,value,associated,with,the,set,method,return,the,appropriate,object,to,use,as,the,value,for,the,descriptor;nullable,private,object,resolve,object,descriptor,nullable,object,getter,nullable,object,setter,return,getter,null,getter,setter
MetadataMBeanInfoAssembler -> @Override 	protected String getOperationDescription(Method method, String beanKey);1328020251;Retrieves the description for the supplied <code>Method</code> from the_metadata. Uses the method name is no description is present in the metadata.;@Override_	protected String getOperationDescription(Method method, String beanKey) {_		PropertyDescriptor pd = BeanUtils.findPropertyForMethod(method)__		if (pd != null) {_			ManagedAttribute ma = this.attributeSource.getManagedAttribute(method)__			if (ma != null && StringUtils.hasText(ma.getDescription())) {_				return ma.getDescription()__			}_			ManagedMetric metric = this.attributeSource.getManagedMetric(method)__			if (metric != null && StringUtils.hasText(metric.getDescription())) {_				return metric.getDescription()__			}_			return method.getName()__		}_		else {_			ManagedOperation mo = this.attributeSource.getManagedOperation(method)__			if (mo != null && StringUtils.hasText(mo.getDescription())) {_				return mo.getDescription()__			}_			return method.getName()__		}_	};retrieves,the,description,for,the,supplied,code,method,code,from,the,metadata,uses,the,method,name,is,no,description,is,present,in,the,metadata;override,protected,string,get,operation,description,method,method,string,bean,key,property,descriptor,pd,bean,utils,find,property,for,method,method,if,pd,null,managed,attribute,ma,this,attribute,source,get,managed,attribute,method,if,ma,null,string,utils,has,text,ma,get,description,return,ma,get,description,managed,metric,metric,this,attribute,source,get,managed,metric,method,if,metric,null,string,utils,has,text,metric,get,description,return,metric,get,description,return,method,get,name,else,managed,operation,mo,this,attribute,source,get,managed,operation,method,if,mo,null,string,utils,has,text,mo,get,description,return,mo,get,description,return,method,get,name
MetadataMBeanInfoAssembler -> @Override 	protected String getOperationDescription(Method method, String beanKey);1356735495;Retrieves the description for the supplied {@code Method} from the_metadata. Uses the method name is no description is present in the metadata.;@Override_	protected String getOperationDescription(Method method, String beanKey) {_		PropertyDescriptor pd = BeanUtils.findPropertyForMethod(method)__		if (pd != null) {_			ManagedAttribute ma = this.attributeSource.getManagedAttribute(method)__			if (ma != null && StringUtils.hasText(ma.getDescription())) {_				return ma.getDescription()__			}_			ManagedMetric metric = this.attributeSource.getManagedMetric(method)__			if (metric != null && StringUtils.hasText(metric.getDescription())) {_				return metric.getDescription()__			}_			return method.getName()__		}_		else {_			ManagedOperation mo = this.attributeSource.getManagedOperation(method)__			if (mo != null && StringUtils.hasText(mo.getDescription())) {_				return mo.getDescription()__			}_			return method.getName()__		}_	};retrieves,the,description,for,the,supplied,code,method,from,the,metadata,uses,the,method,name,is,no,description,is,present,in,the,metadata;override,protected,string,get,operation,description,method,method,string,bean,key,property,descriptor,pd,bean,utils,find,property,for,method,method,if,pd,null,managed,attribute,ma,this,attribute,source,get,managed,attribute,method,if,ma,null,string,utils,has,text,ma,get,description,return,ma,get,description,managed,metric,metric,this,attribute,source,get,managed,metric,method,if,metric,null,string,utils,has,text,metric,get,description,return,metric,get,description,return,method,get,name,else,managed,operation,mo,this,attribute,source,get,managed,operation,method,if,mo,null,string,utils,has,text,mo,get,description,return,mo,get,description,return,method,get,name
MetadataMBeanInfoAssembler -> @Override 	protected String getOperationDescription(Method method, String beanKey);1357119239;Retrieves the description for the supplied {@code Method} from the_metadata. Uses the method name is no description is present in the metadata.;@Override_	protected String getOperationDescription(Method method, String beanKey) {_		PropertyDescriptor pd = BeanUtils.findPropertyForMethod(method)__		if (pd != null) {_			ManagedAttribute ma = this.attributeSource.getManagedAttribute(method)__			if (ma != null && StringUtils.hasText(ma.getDescription())) {_				return ma.getDescription()__			}_			ManagedMetric metric = this.attributeSource.getManagedMetric(method)__			if (metric != null && StringUtils.hasText(metric.getDescription())) {_				return metric.getDescription()__			}_			return method.getName()__		}_		else {_			ManagedOperation mo = this.attributeSource.getManagedOperation(method)__			if (mo != null && StringUtils.hasText(mo.getDescription())) {_				return mo.getDescription()__			}_			return method.getName()__		}_	};retrieves,the,description,for,the,supplied,code,method,from,the,metadata,uses,the,method,name,is,no,description,is,present,in,the,metadata;override,protected,string,get,operation,description,method,method,string,bean,key,property,descriptor,pd,bean,utils,find,property,for,method,method,if,pd,null,managed,attribute,ma,this,attribute,source,get,managed,attribute,method,if,ma,null,string,utils,has,text,ma,get,description,return,ma,get,description,managed,metric,metric,this,attribute,source,get,managed,metric,method,if,metric,null,string,utils,has,text,metric,get,description,return,metric,get,description,return,method,get,name,else,managed,operation,mo,this,attribute,source,get,managed,operation,method,if,mo,null,string,utils,has,text,mo,get,description,return,mo,get,description,return,method,get,name
MetadataMBeanInfoAssembler -> @Override 	protected String getOperationDescription(Method method, String beanKey);1362408075;Retrieves the description for the supplied {@code Method} from the_metadata. Uses the method name is no description is present in the metadata.;@Override_	protected String getOperationDescription(Method method, String beanKey) {_		PropertyDescriptor pd = BeanUtils.findPropertyForMethod(method)__		if (pd != null) {_			ManagedAttribute ma = this.attributeSource.getManagedAttribute(method)__			if (ma != null && StringUtils.hasText(ma.getDescription())) {_				return ma.getDescription()__			}_			ManagedMetric metric = this.attributeSource.getManagedMetric(method)__			if (metric != null && StringUtils.hasText(metric.getDescription())) {_				return metric.getDescription()__			}_			return method.getName()__		}_		else {_			ManagedOperation mo = this.attributeSource.getManagedOperation(method)__			if (mo != null && StringUtils.hasText(mo.getDescription())) {_				return mo.getDescription()__			}_			return method.getName()__		}_	};retrieves,the,description,for,the,supplied,code,method,from,the,metadata,uses,the,method,name,is,no,description,is,present,in,the,metadata;override,protected,string,get,operation,description,method,method,string,bean,key,property,descriptor,pd,bean,utils,find,property,for,method,method,if,pd,null,managed,attribute,ma,this,attribute,source,get,managed,attribute,method,if,ma,null,string,utils,has,text,ma,get,description,return,ma,get,description,managed,metric,metric,this,attribute,source,get,managed,metric,method,if,metric,null,string,utils,has,text,metric,get,description,return,metric,get,description,return,method,get,name,else,managed,operation,mo,this,attribute,source,get,managed,operation,method,if,mo,null,string,utils,has,text,mo,get,description,return,mo,get,description,return,method,get,name
MetadataMBeanInfoAssembler -> @Override 	protected String getOperationDescription(Method method, String beanKey);1368482696;Retrieves the description for the supplied {@code Method} from the_metadata. Uses the method name is no description is present in the metadata.;@Override_	protected String getOperationDescription(Method method, String beanKey) {_		PropertyDescriptor pd = BeanUtils.findPropertyForMethod(method)__		if (pd != null) {_			ManagedAttribute ma = this.attributeSource.getManagedAttribute(method)__			if (ma != null && StringUtils.hasText(ma.getDescription())) {_				return ma.getDescription()__			}_			ManagedMetric metric = this.attributeSource.getManagedMetric(method)__			if (metric != null && StringUtils.hasText(metric.getDescription())) {_				return metric.getDescription()__			}_			return method.getName()__		}_		else {_			ManagedOperation mo = this.attributeSource.getManagedOperation(method)__			if (mo != null && StringUtils.hasText(mo.getDescription())) {_				return mo.getDescription()__			}_			return method.getName()__		}_	};retrieves,the,description,for,the,supplied,code,method,from,the,metadata,uses,the,method,name,is,no,description,is,present,in,the,metadata;override,protected,string,get,operation,description,method,method,string,bean,key,property,descriptor,pd,bean,utils,find,property,for,method,method,if,pd,null,managed,attribute,ma,this,attribute,source,get,managed,attribute,method,if,ma,null,string,utils,has,text,ma,get,description,return,ma,get,description,managed,metric,metric,this,attribute,source,get,managed,metric,method,if,metric,null,string,utils,has,text,metric,get,description,return,metric,get,description,return,method,get,name,else,managed,operation,mo,this,attribute,source,get,managed,operation,method,if,mo,null,string,utils,has,text,mo,get,description,return,mo,get,description,return,method,get,name
MetadataMBeanInfoAssembler -> @Override 	protected String getOperationDescription(Method method, String beanKey);1385412762;Retrieves the description for the supplied {@code Method} from the_metadata. Uses the method name is no description is present in the metadata.;@Override_	protected String getOperationDescription(Method method, String beanKey) {_		PropertyDescriptor pd = BeanUtils.findPropertyForMethod(method)__		if (pd != null) {_			ManagedAttribute ma = this.attributeSource.getManagedAttribute(method)__			if (ma != null && StringUtils.hasText(ma.getDescription())) {_				return ma.getDescription()__			}_			ManagedMetric metric = this.attributeSource.getManagedMetric(method)__			if (metric != null && StringUtils.hasText(metric.getDescription())) {_				return metric.getDescription()__			}_			return method.getName()__		}_		else {_			ManagedOperation mo = this.attributeSource.getManagedOperation(method)__			if (mo != null && StringUtils.hasText(mo.getDescription())) {_				return mo.getDescription()__			}_			return method.getName()__		}_	};retrieves,the,description,for,the,supplied,code,method,from,the,metadata,uses,the,method,name,is,no,description,is,present,in,the,metadata;override,protected,string,get,operation,description,method,method,string,bean,key,property,descriptor,pd,bean,utils,find,property,for,method,method,if,pd,null,managed,attribute,ma,this,attribute,source,get,managed,attribute,method,if,ma,null,string,utils,has,text,ma,get,description,return,ma,get,description,managed,metric,metric,this,attribute,source,get,managed,metric,method,if,metric,null,string,utils,has,text,metric,get,description,return,metric,get,description,return,method,get,name,else,managed,operation,mo,this,attribute,source,get,managed,operation,method,if,mo,null,string,utils,has,text,mo,get,description,return,mo,get,description,return,method,get,name
MetadataMBeanInfoAssembler -> @Override 	protected String getOperationDescription(Method method, String beanKey);1405696918;Retrieves the description for the supplied {@code Method} from the_metadata. Uses the method name is no description is present in the metadata.;@Override_	protected String getOperationDescription(Method method, String beanKey) {_		PropertyDescriptor pd = BeanUtils.findPropertyForMethod(method)__		if (pd != null) {_			ManagedAttribute ma = this.attributeSource.getManagedAttribute(method)__			if (ma != null && StringUtils.hasText(ma.getDescription())) {_				return ma.getDescription()__			}_			ManagedMetric metric = this.attributeSource.getManagedMetric(method)__			if (metric != null && StringUtils.hasText(metric.getDescription())) {_				return metric.getDescription()__			}_			return method.getName()__		}_		else {_			ManagedOperation mo = this.attributeSource.getManagedOperation(method)__			if (mo != null && StringUtils.hasText(mo.getDescription())) {_				return mo.getDescription()__			}_			return method.getName()__		}_	};retrieves,the,description,for,the,supplied,code,method,from,the,metadata,uses,the,method,name,is,no,description,is,present,in,the,metadata;override,protected,string,get,operation,description,method,method,string,bean,key,property,descriptor,pd,bean,utils,find,property,for,method,method,if,pd,null,managed,attribute,ma,this,attribute,source,get,managed,attribute,method,if,ma,null,string,utils,has,text,ma,get,description,return,ma,get,description,managed,metric,metric,this,attribute,source,get,managed,metric,method,if,metric,null,string,utils,has,text,metric,get,description,return,metric,get,description,return,method,get,name,else,managed,operation,mo,this,attribute,source,get,managed,operation,method,if,mo,null,string,utils,has,text,mo,get,description,return,mo,get,description,return,method,get,name
MetadataMBeanInfoAssembler -> @Override 	protected String getOperationDescription(Method method, String beanKey);1496837955;Retrieves the description for the supplied {@code Method} from the_metadata. Uses the method name is no description is present in the metadata.;@Override_	protected String getOperationDescription(Method method, String beanKey) {_		PropertyDescriptor pd = BeanUtils.findPropertyForMethod(method)__		if (pd != null) {_			ManagedAttribute ma = this.attributeSource.getManagedAttribute(method)__			if (ma != null && StringUtils.hasText(ma.getDescription())) {_				return ma.getDescription()__			}_			ManagedMetric metric = this.attributeSource.getManagedMetric(method)__			if (metric != null && StringUtils.hasText(metric.getDescription())) {_				return metric.getDescription()__			}_			return method.getName()__		}_		else {_			ManagedOperation mo = this.attributeSource.getManagedOperation(method)__			if (mo != null && StringUtils.hasText(mo.getDescription())) {_				return mo.getDescription()__			}_			return method.getName()__		}_	};retrieves,the,description,for,the,supplied,code,method,from,the,metadata,uses,the,method,name,is,no,description,is,present,in,the,metadata;override,protected,string,get,operation,description,method,method,string,bean,key,property,descriptor,pd,bean,utils,find,property,for,method,method,if,pd,null,managed,attribute,ma,this,attribute,source,get,managed,attribute,method,if,ma,null,string,utils,has,text,ma,get,description,return,ma,get,description,managed,metric,metric,this,attribute,source,get,managed,metric,method,if,metric,null,string,utils,has,text,metric,get,description,return,metric,get,description,return,method,get,name,else,managed,operation,mo,this,attribute,source,get,managed,operation,method,if,mo,null,string,utils,has,text,mo,get,description,return,mo,get,description,return,method,get,name
MetadataMBeanInfoAssembler -> @Override 	protected String getOperationDescription(Method method, String beanKey);1498780456;Retrieves the description for the supplied {@code Method} from the_metadata. Uses the method name is no description is present in the metadata.;@Override_	protected String getOperationDescription(Method method, String beanKey) {_		PropertyDescriptor pd = BeanUtils.findPropertyForMethod(method)__		if (pd != null) {_			ManagedAttribute ma = obtainAttributeSource().getManagedAttribute(method)__			if (ma != null && StringUtils.hasText(ma.getDescription())) {_				return ma.getDescription()__			}_			ManagedMetric metric = obtainAttributeSource().getManagedMetric(method)__			if (metric != null && StringUtils.hasText(metric.getDescription())) {_				return metric.getDescription()__			}_			return method.getName()__		}_		else {_			ManagedOperation mo = obtainAttributeSource().getManagedOperation(method)__			if (mo != null && StringUtils.hasText(mo.getDescription())) {_				return mo.getDescription()__			}_			return method.getName()__		}_	};retrieves,the,description,for,the,supplied,code,method,from,the,metadata,uses,the,method,name,is,no,description,is,present,in,the,metadata;override,protected,string,get,operation,description,method,method,string,bean,key,property,descriptor,pd,bean,utils,find,property,for,method,method,if,pd,null,managed,attribute,ma,obtain,attribute,source,get,managed,attribute,method,if,ma,null,string,utils,has,text,ma,get,description,return,ma,get,description,managed,metric,metric,obtain,attribute,source,get,managed,metric,method,if,metric,null,string,utils,has,text,metric,get,description,return,metric,get,description,return,method,get,name,else,managed,operation,mo,obtain,attribute,source,get,managed,operation,method,if,mo,null,string,utils,has,text,mo,get,description,return,mo,get,description,return,method,get,name
MetadataMBeanInfoAssembler -> @Override 	protected String getOperationDescription(Method method, String beanKey);1500495740;Retrieves the description for the supplied {@code Method} from the_metadata. Uses the method name is no description is present in the metadata.;@Override_	protected String getOperationDescription(Method method, String beanKey) {_		PropertyDescriptor pd = BeanUtils.findPropertyForMethod(method)__		if (pd != null) {_			ManagedAttribute ma = obtainAttributeSource().getManagedAttribute(method)__			if (ma != null && StringUtils.hasText(ma.getDescription())) {_				return ma.getDescription()__			}_			ManagedMetric metric = obtainAttributeSource().getManagedMetric(method)__			if (metric != null && StringUtils.hasText(metric.getDescription())) {_				return metric.getDescription()__			}_			return method.getName()__		}_		else {_			ManagedOperation mo = obtainAttributeSource().getManagedOperation(method)__			if (mo != null && StringUtils.hasText(mo.getDescription())) {_				return mo.getDescription()__			}_			return method.getName()__		}_	};retrieves,the,description,for,the,supplied,code,method,from,the,metadata,uses,the,method,name,is,no,description,is,present,in,the,metadata;override,protected,string,get,operation,description,method,method,string,bean,key,property,descriptor,pd,bean,utils,find,property,for,method,method,if,pd,null,managed,attribute,ma,obtain,attribute,source,get,managed,attribute,method,if,ma,null,string,utils,has,text,ma,get,description,return,ma,get,description,managed,metric,metric,obtain,attribute,source,get,managed,metric,method,if,metric,null,string,utils,has,text,metric,get,description,return,metric,get,description,return,method,get,name,else,managed,operation,mo,obtain,attribute,source,get,managed,operation,method,if,mo,null,string,utils,has,text,mo,get,description,return,mo,get,description,return,method,get,name
MetadataMBeanInfoAssembler -> @Override 	protected String getOperationDescription(Method method, String beanKey);1520529117;Retrieves the description for the supplied {@code Method} from the_metadata. Uses the method name is no description is present in the metadata.;@Override_	protected String getOperationDescription(Method method, String beanKey) {_		PropertyDescriptor pd = BeanUtils.findPropertyForMethod(method)__		if (pd != null) {_			ManagedAttribute ma = obtainAttributeSource().getManagedAttribute(method)__			if (ma != null && StringUtils.hasText(ma.getDescription())) {_				return ma.getDescription()__			}_			ManagedMetric metric = obtainAttributeSource().getManagedMetric(method)__			if (metric != null && StringUtils.hasText(metric.getDescription())) {_				return metric.getDescription()__			}_			return method.getName()__		}_		else {_			ManagedOperation mo = obtainAttributeSource().getManagedOperation(method)__			if (mo != null && StringUtils.hasText(mo.getDescription())) {_				return mo.getDescription()__			}_			return method.getName()__		}_	};retrieves,the,description,for,the,supplied,code,method,from,the,metadata,uses,the,method,name,is,no,description,is,present,in,the,metadata;override,protected,string,get,operation,description,method,method,string,bean,key,property,descriptor,pd,bean,utils,find,property,for,method,method,if,pd,null,managed,attribute,ma,obtain,attribute,source,get,managed,attribute,method,if,ma,null,string,utils,has,text,ma,get,description,return,ma,get,description,managed,metric,metric,obtain,attribute,source,get,managed,metric,method,if,metric,null,string,utils,has,text,metric,get,description,return,metric,get,description,return,method,get,name,else,managed,operation,mo,obtain,attribute,source,get,managed,operation,method,if,mo,null,string,utils,has,text,mo,get,description,return,mo,get,description,return,method,get,name
MetadataMBeanInfoAssembler -> @Override 	public boolean includeBean(Class<?> beanClass, String beanName);1356735495;Used for autodetection of beans. Checks to see if the bean's class has a_{@code ManagedResource} attribute. If so it will add it list of included beans._@param beanClass the class of the bean_@param beanName the name of the bean in the bean factory;@Override_	public boolean includeBean(Class<?> beanClass, String beanName) {_		return (this.attributeSource.getManagedResource(getClassToExpose(beanClass)) != null)__	};used,for,autodetection,of,beans,checks,to,see,if,the,bean,s,class,has,a,code,managed,resource,attribute,if,so,it,will,add,it,list,of,included,beans,param,bean,class,the,class,of,the,bean,param,bean,name,the,name,of,the,bean,in,the,bean,factory;override,public,boolean,include,bean,class,bean,class,string,bean,name,return,this,attribute,source,get,managed,resource,get,class,to,expose,bean,class,null
MetadataMBeanInfoAssembler -> @Override 	public boolean includeBean(Class<?> beanClass, String beanName);1368482696;Used for autodetection of beans. Checks to see if the bean's class has a_{@code ManagedResource} attribute. If so it will add it list of included beans._@param beanClass the class of the bean_@param beanName the name of the bean in the bean factory;@Override_	public boolean includeBean(Class<?> beanClass, String beanName) {_		return (this.attributeSource.getManagedResource(getClassToExpose(beanClass)) != null)__	};used,for,autodetection,of,beans,checks,to,see,if,the,bean,s,class,has,a,code,managed,resource,attribute,if,so,it,will,add,it,list,of,included,beans,param,bean,class,the,class,of,the,bean,param,bean,name,the,name,of,the,bean,in,the,bean,factory;override,public,boolean,include,bean,class,bean,class,string,bean,name,return,this,attribute,source,get,managed,resource,get,class,to,expose,bean,class,null
MetadataMBeanInfoAssembler -> @Override 	public boolean includeBean(Class<?> beanClass, String beanName);1385412762;Used for autodetection of beans. Checks to see if the bean's class has a_{@code ManagedResource} attribute. If so it will add it list of included beans._@param beanClass the class of the bean_@param beanName the name of the bean in the bean factory;@Override_	public boolean includeBean(Class<?> beanClass, String beanName) {_		return (this.attributeSource.getManagedResource(getClassToExpose(beanClass)) != null)__	};used,for,autodetection,of,beans,checks,to,see,if,the,bean,s,class,has,a,code,managed,resource,attribute,if,so,it,will,add,it,list,of,included,beans,param,bean,class,the,class,of,the,bean,param,bean,name,the,name,of,the,bean,in,the,bean,factory;override,public,boolean,include,bean,class,bean,class,string,bean,name,return,this,attribute,source,get,managed,resource,get,class,to,expose,bean,class,null
MetadataMBeanInfoAssembler -> @Override 	public boolean includeBean(Class<?> beanClass, String beanName);1405696918;Used for autodetection of beans. Checks to see if the bean's class has a_{@code ManagedResource} attribute. If so it will add it list of included beans._@param beanClass the class of the bean_@param beanName the name of the bean in the bean factory;@Override_	public boolean includeBean(Class<?> beanClass, String beanName) {_		return (this.attributeSource.getManagedResource(getClassToExpose(beanClass)) != null)__	};used,for,autodetection,of,beans,checks,to,see,if,the,bean,s,class,has,a,code,managed,resource,attribute,if,so,it,will,add,it,list,of,included,beans,param,bean,class,the,class,of,the,bean,param,bean,name,the,name,of,the,bean,in,the,bean,factory;override,public,boolean,include,bean,class,bean,class,string,bean,name,return,this,attribute,source,get,managed,resource,get,class,to,expose,bean,class,null
MetadataMBeanInfoAssembler -> @Override 	public boolean includeBean(Class<?> beanClass, String beanName);1496837955;Used for autodetection of beans. Checks to see if the bean's class has a_{@code ManagedResource} attribute. If so it will add it list of included beans._@param beanClass the class of the bean_@param beanName the name of the bean in the bean factory;@Override_	public boolean includeBean(Class<?> beanClass, String beanName) {_		return (this.attributeSource.getManagedResource(getClassToExpose(beanClass)) != null)__	};used,for,autodetection,of,beans,checks,to,see,if,the,bean,s,class,has,a,code,managed,resource,attribute,if,so,it,will,add,it,list,of,included,beans,param,bean,class,the,class,of,the,bean,param,bean,name,the,name,of,the,bean,in,the,bean,factory;override,public,boolean,include,bean,class,bean,class,string,bean,name,return,this,attribute,source,get,managed,resource,get,class,to,expose,bean,class,null
MetadataMBeanInfoAssembler -> @Override 	public boolean includeBean(Class<?> beanClass, String beanName);1498780456;Used for autodetection of beans. Checks to see if the bean's class has a_{@code ManagedResource} attribute. If so it will add it list of included beans._@param beanClass the class of the bean_@param beanName the name of the bean in the bean factory;@Override_	public boolean includeBean(Class<?> beanClass, String beanName) {_		return (obtainAttributeSource().getManagedResource(getClassToExpose(beanClass)) != null)__	};used,for,autodetection,of,beans,checks,to,see,if,the,bean,s,class,has,a,code,managed,resource,attribute,if,so,it,will,add,it,list,of,included,beans,param,bean,class,the,class,of,the,bean,param,bean,name,the,name,of,the,bean,in,the,bean,factory;override,public,boolean,include,bean,class,bean,class,string,bean,name,return,obtain,attribute,source,get,managed,resource,get,class,to,expose,bean,class,null
MetadataMBeanInfoAssembler -> @Override 	public boolean includeBean(Class<?> beanClass, String beanName);1500495740;Used for autodetection of beans. Checks to see if the bean's class has a_{@code ManagedResource} attribute. If so it will add it list of included beans._@param beanClass the class of the bean_@param beanName the name of the bean in the bean factory;@Override_	public boolean includeBean(Class<?> beanClass, String beanName) {_		return (obtainAttributeSource().getManagedResource(getClassToExpose(beanClass)) != null)__	};used,for,autodetection,of,beans,checks,to,see,if,the,bean,s,class,has,a,code,managed,resource,attribute,if,so,it,will,add,it,list,of,included,beans,param,bean,class,the,class,of,the,bean,param,bean,name,the,name,of,the,bean,in,the,bean,factory;override,public,boolean,include,bean,class,bean,class,string,bean,name,return,obtain,attribute,source,get,managed,resource,get,class,to,expose,bean,class,null
MetadataMBeanInfoAssembler -> @Override 	public boolean includeBean(Class<?> beanClass, String beanName);1520529117;Used for autodetection of beans. Checks to see if the bean's class has a_{@code ManagedResource} attribute. If so it will add it list of included beans._@param beanClass the class of the bean_@param beanName the name of the bean in the bean factory;@Override_	public boolean includeBean(Class<?> beanClass, String beanName) {_		return (obtainAttributeSource().getManagedResource(getClassToExpose(beanClass)) != null)__	};used,for,autodetection,of,beans,checks,to,see,if,the,bean,s,class,has,a,code,managed,resource,attribute,if,so,it,will,add,it,list,of,included,beans,param,bean,class,the,class,of,the,bean,param,bean,name,the,name,of,the,bean,in,the,bean,factory;override,public,boolean,include,bean,class,bean,class,string,bean,name,return,obtain,attribute,source,get,managed,resource,get,class,to,expose,bean,class,null
MetadataMBeanInfoAssembler -> private Object resolveObjectDescriptor(@Nullable Object getter, Object setter);1496837955;Locates the value of a descriptor based on values attached_to both the getter and setter methods. If both have values_supplied then the value attached to the getter is preferred._@param getter the Object value associated with the get method_@param setter the Object value associated with the set method_@return the appropriate Object to use as the value for the descriptor;private Object resolveObjectDescriptor(@Nullable Object getter, Object setter) {_		return (getter != null ? getter : setter)__	};locates,the,value,of,a,descriptor,based,on,values,attached,to,both,the,getter,and,setter,methods,if,both,have,values,supplied,then,the,value,attached,to,the,getter,is,preferred,param,getter,the,object,value,associated,with,the,get,method,param,setter,the,object,value,associated,with,the,set,method,return,the,appropriate,object,to,use,as,the,value,for,the,descriptor;private,object,resolve,object,descriptor,nullable,object,getter,object,setter,return,getter,null,getter,setter
MetadataMBeanInfoAssembler -> private Object resolveObjectDescriptor(@Nullable Object getter, Object setter);1498780456;Locates the value of a descriptor based on values attached_to both the getter and setter methods. If both have values_supplied then the value attached to the getter is preferred._@param getter the Object value associated with the get method_@param setter the Object value associated with the set method_@return the appropriate Object to use as the value for the descriptor;private Object resolveObjectDescriptor(@Nullable Object getter, Object setter) {_		return (getter != null ? getter : setter)__	};locates,the,value,of,a,descriptor,based,on,values,attached,to,both,the,getter,and,setter,methods,if,both,have,values,supplied,then,the,value,attached,to,the,getter,is,preferred,param,getter,the,object,value,associated,with,the,get,method,param,setter,the,object,value,associated,with,the,set,method,return,the,appropriate,object,to,use,as,the,value,for,the,descriptor;private,object,resolve,object,descriptor,nullable,object,getter,object,setter,return,getter,null,getter,setter
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeWriteAttribute(Method method, String beanKey);1328020251;Votes on the inclusion of an attribute mutator._@param method the mutator method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeWriteAttribute(Method method, String beanKey) {_		return hasManagedAttribute(method)__	};votes,on,the,inclusion,of,an,attribute,mutator,param,method,the,mutator,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,write,attribute,method,method,string,bean,key,return,has,managed,attribute,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeWriteAttribute(Method method, String beanKey);1356735495;Votes on the inclusion of an attribute mutator._@param method the mutator method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeWriteAttribute(Method method, String beanKey) {_		return hasManagedAttribute(method)__	};votes,on,the,inclusion,of,an,attribute,mutator,param,method,the,mutator,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,write,attribute,method,method,string,bean,key,return,has,managed,attribute,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeWriteAttribute(Method method, String beanKey);1357119239;Votes on the inclusion of an attribute mutator._@param method the mutator method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeWriteAttribute(Method method, String beanKey) {_		return hasManagedAttribute(method)__	};votes,on,the,inclusion,of,an,attribute,mutator,param,method,the,mutator,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,write,attribute,method,method,string,bean,key,return,has,managed,attribute,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeWriteAttribute(Method method, String beanKey);1362408075;Votes on the inclusion of an attribute mutator._@param method the mutator method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeWriteAttribute(Method method, String beanKey) {_		return hasManagedAttribute(method)__	};votes,on,the,inclusion,of,an,attribute,mutator,param,method,the,mutator,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,write,attribute,method,method,string,bean,key,return,has,managed,attribute,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeWriteAttribute(Method method, String beanKey);1368482696;Votes on the inclusion of an attribute mutator._@param method the mutator method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeWriteAttribute(Method method, String beanKey) {_		return hasManagedAttribute(method)__	};votes,on,the,inclusion,of,an,attribute,mutator,param,method,the,mutator,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,write,attribute,method,method,string,bean,key,return,has,managed,attribute,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeWriteAttribute(Method method, String beanKey);1385412762;Votes on the inclusion of an attribute mutator._@param method the mutator method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeWriteAttribute(Method method, String beanKey) {_		return hasManagedAttribute(method)__	};votes,on,the,inclusion,of,an,attribute,mutator,param,method,the,mutator,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,write,attribute,method,method,string,bean,key,return,has,managed,attribute,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeWriteAttribute(Method method, String beanKey);1405696918;Votes on the inclusion of an attribute mutator._@param method the mutator method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeWriteAttribute(Method method, String beanKey) {_		return hasManagedAttribute(method)__	};votes,on,the,inclusion,of,an,attribute,mutator,param,method,the,mutator,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,write,attribute,method,method,string,bean,key,return,has,managed,attribute,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeWriteAttribute(Method method, String beanKey);1496837955;Votes on the inclusion of an attribute mutator._@param method the mutator method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeWriteAttribute(Method method, String beanKey) {_		return hasManagedAttribute(method)__	};votes,on,the,inclusion,of,an,attribute,mutator,param,method,the,mutator,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,write,attribute,method,method,string,bean,key,return,has,managed,attribute,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeWriteAttribute(Method method, String beanKey);1498780456;Votes on the inclusion of an attribute mutator._@param method the mutator method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeWriteAttribute(Method method, String beanKey) {_		return hasManagedAttribute(method)__	};votes,on,the,inclusion,of,an,attribute,mutator,param,method,the,mutator,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,write,attribute,method,method,string,bean,key,return,has,managed,attribute,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeWriteAttribute(Method method, String beanKey);1500495740;Votes on the inclusion of an attribute mutator._@param method the mutator method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeWriteAttribute(Method method, String beanKey) {_		return hasManagedAttribute(method)__	};votes,on,the,inclusion,of,an,attribute,mutator,param,method,the,mutator,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,write,attribute,method,method,string,bean,key,return,has,managed,attribute,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeWriteAttribute(Method method, String beanKey);1520529117;Votes on the inclusion of an attribute mutator._@param method the mutator method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeWriteAttribute(Method method, String beanKey) {_		return hasManagedAttribute(method)__	};votes,on,the,inclusion,of,an,attribute,mutator,param,method,the,mutator,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,write,attribute,method,method,string,bean,key,return,has,managed,attribute,method
MetadataMBeanInfoAssembler -> private String resolveStringDescriptor(String getter, String setter);1328020251;Locates the value of a descriptor based on values attached_to both the getter and setter methods. If both have values_supplied then the value attached to the getter is preferred._The supplied default value is used to check to see if the value_associated with the getter has changed from the default._@param getter the String value associated with the get method_@param setter the String value associated with the set method_@return the appropriate String to use as the value for the descriptor;private String resolveStringDescriptor(String getter, String setter) {_		return (StringUtils.hasLength(getter) ? getter : setter)__	};locates,the,value,of,a,descriptor,based,on,values,attached,to,both,the,getter,and,setter,methods,if,both,have,values,supplied,then,the,value,attached,to,the,getter,is,preferred,the,supplied,default,value,is,used,to,check,to,see,if,the,value,associated,with,the,getter,has,changed,from,the,default,param,getter,the,string,value,associated,with,the,get,method,param,setter,the,string,value,associated,with,the,set,method,return,the,appropriate,string,to,use,as,the,value,for,the,descriptor;private,string,resolve,string,descriptor,string,getter,string,setter,return,string,utils,has,length,getter,getter,setter
MetadataMBeanInfoAssembler -> private String resolveStringDescriptor(String getter, String setter);1356735495;Locates the value of a descriptor based on values attached_to both the getter and setter methods. If both have values_supplied then the value attached to the getter is preferred._The supplied default value is used to check to see if the value_associated with the getter has changed from the default._@param getter the String value associated with the get method_@param setter the String value associated with the set method_@return the appropriate String to use as the value for the descriptor;private String resolveStringDescriptor(String getter, String setter) {_		return (StringUtils.hasLength(getter) ? getter : setter)__	};locates,the,value,of,a,descriptor,based,on,values,attached,to,both,the,getter,and,setter,methods,if,both,have,values,supplied,then,the,value,attached,to,the,getter,is,preferred,the,supplied,default,value,is,used,to,check,to,see,if,the,value,associated,with,the,getter,has,changed,from,the,default,param,getter,the,string,value,associated,with,the,get,method,param,setter,the,string,value,associated,with,the,set,method,return,the,appropriate,string,to,use,as,the,value,for,the,descriptor;private,string,resolve,string,descriptor,string,getter,string,setter,return,string,utils,has,length,getter,getter,setter
MetadataMBeanInfoAssembler -> private String resolveStringDescriptor(String getter, String setter);1357119239;Locates the value of a descriptor based on values attached_to both the getter and setter methods. If both have values_supplied then the value attached to the getter is preferred._The supplied default value is used to check to see if the value_associated with the getter has changed from the default._@param getter the String value associated with the get method_@param setter the String value associated with the set method_@return the appropriate String to use as the value for the descriptor;private String resolveStringDescriptor(String getter, String setter) {_		return (StringUtils.hasLength(getter) ? getter : setter)__	};locates,the,value,of,a,descriptor,based,on,values,attached,to,both,the,getter,and,setter,methods,if,both,have,values,supplied,then,the,value,attached,to,the,getter,is,preferred,the,supplied,default,value,is,used,to,check,to,see,if,the,value,associated,with,the,getter,has,changed,from,the,default,param,getter,the,string,value,associated,with,the,get,method,param,setter,the,string,value,associated,with,the,set,method,return,the,appropriate,string,to,use,as,the,value,for,the,descriptor;private,string,resolve,string,descriptor,string,getter,string,setter,return,string,utils,has,length,getter,getter,setter
MetadataMBeanInfoAssembler -> private String resolveStringDescriptor(String getter, String setter);1362408075;Locates the value of a descriptor based on values attached_to both the getter and setter methods. If both have values_supplied then the value attached to the getter is preferred._The supplied default value is used to check to see if the value_associated with the getter has changed from the default._@param getter the String value associated with the get method_@param setter the String value associated with the set method_@return the appropriate String to use as the value for the descriptor;private String resolveStringDescriptor(String getter, String setter) {_		return (StringUtils.hasLength(getter) ? getter : setter)__	};locates,the,value,of,a,descriptor,based,on,values,attached,to,both,the,getter,and,setter,methods,if,both,have,values,supplied,then,the,value,attached,to,the,getter,is,preferred,the,supplied,default,value,is,used,to,check,to,see,if,the,value,associated,with,the,getter,has,changed,from,the,default,param,getter,the,string,value,associated,with,the,get,method,param,setter,the,string,value,associated,with,the,set,method,return,the,appropriate,string,to,use,as,the,value,for,the,descriptor;private,string,resolve,string,descriptor,string,getter,string,setter,return,string,utils,has,length,getter,getter,setter
MetadataMBeanInfoAssembler -> private String resolveStringDescriptor(String getter, String setter);1368482696;Locates the value of a descriptor based on values attached_to both the getter and setter methods. If both have values_supplied then the value attached to the getter is preferred._The supplied default value is used to check to see if the value_associated with the getter has changed from the default._@param getter the String value associated with the get method_@param setter the String value associated with the set method_@return the appropriate String to use as the value for the descriptor;private String resolveStringDescriptor(String getter, String setter) {_		return (StringUtils.hasLength(getter) ? getter : setter)__	};locates,the,value,of,a,descriptor,based,on,values,attached,to,both,the,getter,and,setter,methods,if,both,have,values,supplied,then,the,value,attached,to,the,getter,is,preferred,the,supplied,default,value,is,used,to,check,to,see,if,the,value,associated,with,the,getter,has,changed,from,the,default,param,getter,the,string,value,associated,with,the,get,method,param,setter,the,string,value,associated,with,the,set,method,return,the,appropriate,string,to,use,as,the,value,for,the,descriptor;private,string,resolve,string,descriptor,string,getter,string,setter,return,string,utils,has,length,getter,getter,setter
MetadataMBeanInfoAssembler -> private String resolveStringDescriptor(String getter, String setter);1385412762;Locates the value of a descriptor based on values attached_to both the getter and setter methods. If both have values_supplied then the value attached to the getter is preferred._The supplied default value is used to check to see if the value_associated with the getter has changed from the default._@param getter the String value associated with the get method_@param setter the String value associated with the set method_@return the appropriate String to use as the value for the descriptor;private String resolveStringDescriptor(String getter, String setter) {_		return (StringUtils.hasLength(getter) ? getter : setter)__	};locates,the,value,of,a,descriptor,based,on,values,attached,to,both,the,getter,and,setter,methods,if,both,have,values,supplied,then,the,value,attached,to,the,getter,is,preferred,the,supplied,default,value,is,used,to,check,to,see,if,the,value,associated,with,the,getter,has,changed,from,the,default,param,getter,the,string,value,associated,with,the,get,method,param,setter,the,string,value,associated,with,the,set,method,return,the,appropriate,string,to,use,as,the,value,for,the,descriptor;private,string,resolve,string,descriptor,string,getter,string,setter,return,string,utils,has,length,getter,getter,setter
MetadataMBeanInfoAssembler -> private String resolveStringDescriptor(String getter, String setter);1405696918;Locates the value of a descriptor based on values attached_to both the getter and setter methods. If both have values_supplied then the value attached to the getter is preferred._The supplied default value is used to check to see if the value_associated with the getter has changed from the default._@param getter the String value associated with the get method_@param setter the String value associated with the set method_@return the appropriate String to use as the value for the descriptor;private String resolveStringDescriptor(String getter, String setter) {_		return (StringUtils.hasLength(getter) ? getter : setter)__	};locates,the,value,of,a,descriptor,based,on,values,attached,to,both,the,getter,and,setter,methods,if,both,have,values,supplied,then,the,value,attached,to,the,getter,is,preferred,the,supplied,default,value,is,used,to,check,to,see,if,the,value,associated,with,the,getter,has,changed,from,the,default,param,getter,the,string,value,associated,with,the,get,method,param,setter,the,string,value,associated,with,the,set,method,return,the,appropriate,string,to,use,as,the,value,for,the,descriptor;private,string,resolve,string,descriptor,string,getter,string,setter,return,string,utils,has,length,getter,getter,setter
MetadataMBeanInfoAssembler -> private String resolveStringDescriptor(String getter, String setter);1496837955;Locates the value of a descriptor based on values attached_to both the getter and setter methods. If both have values_supplied then the value attached to the getter is preferred._The supplied default value is used to check to see if the value_associated with the getter has changed from the default._@param getter the String value associated with the get method_@param setter the String value associated with the set method_@return the appropriate String to use as the value for the descriptor;private String resolveStringDescriptor(String getter, String setter) {_		return (StringUtils.hasLength(getter) ? getter : setter)__	};locates,the,value,of,a,descriptor,based,on,values,attached,to,both,the,getter,and,setter,methods,if,both,have,values,supplied,then,the,value,attached,to,the,getter,is,preferred,the,supplied,default,value,is,used,to,check,to,see,if,the,value,associated,with,the,getter,has,changed,from,the,default,param,getter,the,string,value,associated,with,the,get,method,param,setter,the,string,value,associated,with,the,set,method,return,the,appropriate,string,to,use,as,the,value,for,the,descriptor;private,string,resolve,string,descriptor,string,getter,string,setter,return,string,utils,has,length,getter,getter,setter
MetadataMBeanInfoAssembler -> private String resolveStringDescriptor(String getter, String setter);1498780456;Locates the value of a descriptor based on values attached_to both the getter and setter methods. If both have values_supplied then the value attached to the getter is preferred._The supplied default value is used to check to see if the value_associated with the getter has changed from the default._@param getter the String value associated with the get method_@param setter the String value associated with the set method_@return the appropriate String to use as the value for the descriptor;private String resolveStringDescriptor(String getter, String setter) {_		return (StringUtils.hasLength(getter) ? getter : setter)__	};locates,the,value,of,a,descriptor,based,on,values,attached,to,both,the,getter,and,setter,methods,if,both,have,values,supplied,then,the,value,attached,to,the,getter,is,preferred,the,supplied,default,value,is,used,to,check,to,see,if,the,value,associated,with,the,getter,has,changed,from,the,default,param,getter,the,string,value,associated,with,the,get,method,param,setter,the,string,value,associated,with,the,set,method,return,the,appropriate,string,to,use,as,the,value,for,the,descriptor;private,string,resolve,string,descriptor,string,getter,string,setter,return,string,utils,has,length,getter,getter,setter
MetadataMBeanInfoAssembler -> public boolean includeBean(Class<?> beanClass, String beanName);1328020251;Used for autodetection of beans. Checks to see if the bean's class has a_<code>ManagedResource</code> attribute. If so it will add it list of included beans._@param beanClass the class of the bean_@param beanName the name of the bean in the bean factory;public boolean includeBean(Class<?> beanClass, String beanName) {_		return (this.attributeSource.getManagedResource(getClassToExpose(beanClass)) != null)__	};used,for,autodetection,of,beans,checks,to,see,if,the,bean,s,class,has,a,code,managed,resource,code,attribute,if,so,it,will,add,it,list,of,included,beans,param,bean,class,the,class,of,the,bean,param,bean,name,the,name,of,the,bean,in,the,bean,factory;public,boolean,include,bean,class,bean,class,string,bean,name,return,this,attribute,source,get,managed,resource,get,class,to,expose,bean,class,null
MetadataMBeanInfoAssembler -> public boolean includeBean(Class<?> beanClass, String beanName);1357119239;Used for autodetection of beans. Checks to see if the bean's class has a_{@code ManagedResource} attribute. If so it will add it list of included beans._@param beanClass the class of the bean_@param beanName the name of the bean in the bean factory;public boolean includeBean(Class<?> beanClass, String beanName) {_		return (this.attributeSource.getManagedResource(getClassToExpose(beanClass)) != null)__	};used,for,autodetection,of,beans,checks,to,see,if,the,bean,s,class,has,a,code,managed,resource,attribute,if,so,it,will,add,it,list,of,included,beans,param,bean,class,the,class,of,the,bean,param,bean,name,the,name,of,the,bean,in,the,bean,factory;public,boolean,include,bean,class,bean,class,string,bean,name,return,this,attribute,source,get,managed,resource,get,class,to,expose,bean,class,null
MetadataMBeanInfoAssembler -> public boolean includeBean(Class<?> beanClass, String beanName);1362408075;Used for autodetection of beans. Checks to see if the bean's class has a_{@code ManagedResource} attribute. If so it will add it list of included beans._@param beanClass the class of the bean_@param beanName the name of the bean in the bean factory;public boolean includeBean(Class<?> beanClass, String beanName) {_		return (this.attributeSource.getManagedResource(getClassToExpose(beanClass)) != null)__	};used,for,autodetection,of,beans,checks,to,see,if,the,bean,s,class,has,a,code,managed,resource,attribute,if,so,it,will,add,it,list,of,included,beans,param,bean,class,the,class,of,the,bean,param,bean,name,the,name,of,the,bean,in,the,bean,factory;public,boolean,include,bean,class,bean,class,string,bean,name,return,this,attribute,source,get,managed,resource,get,class,to,expose,bean,class,null
MetadataMBeanInfoAssembler -> private int resolveIntDescriptor(int getter, int setter);1328020251;Determines which of two <code>int</code> values should be used as the value_for an attribute descriptor. In general, only the getter or the setter will_be have a non-negative value so we use that value. In the event that both values_are non-negative, we use the greater of the two. This method can be used to_resolve any <code>int</code> valued descriptor where there are two possible values._@param getter the int value associated with the getter for this attribute_@param setter the int associated with the setter for this attribute;private int resolveIntDescriptor(int getter, int setter) {_		return (getter >= setter ? getter : setter)__	};determines,which,of,two,code,int,code,values,should,be,used,as,the,value,for,an,attribute,descriptor,in,general,only,the,getter,or,the,setter,will,be,have,a,non,negative,value,so,we,use,that,value,in,the,event,that,both,values,are,non,negative,we,use,the,greater,of,the,two,this,method,can,be,used,to,resolve,any,code,int,code,valued,descriptor,where,there,are,two,possible,values,param,getter,the,int,value,associated,with,the,getter,for,this,attribute,param,setter,the,int,associated,with,the,setter,for,this,attribute;private,int,resolve,int,descriptor,int,getter,int,setter,return,getter,setter,getter,setter
MetadataMBeanInfoAssembler -> private int resolveIntDescriptor(int getter, int setter);1356735495;Determines which of two {@code int} values should be used as the value_for an attribute descriptor. In general, only the getter or the setter will_be have a non-negative value so we use that value. In the event that both values_are non-negative, we use the greater of the two. This method can be used to_resolve any {@code int} valued descriptor where there are two possible values._@param getter the int value associated with the getter for this attribute_@param setter the int associated with the setter for this attribute;private int resolveIntDescriptor(int getter, int setter) {_		return (getter >= setter ? getter : setter)__	};determines,which,of,two,code,int,values,should,be,used,as,the,value,for,an,attribute,descriptor,in,general,only,the,getter,or,the,setter,will,be,have,a,non,negative,value,so,we,use,that,value,in,the,event,that,both,values,are,non,negative,we,use,the,greater,of,the,two,this,method,can,be,used,to,resolve,any,code,int,valued,descriptor,where,there,are,two,possible,values,param,getter,the,int,value,associated,with,the,getter,for,this,attribute,param,setter,the,int,associated,with,the,setter,for,this,attribute;private,int,resolve,int,descriptor,int,getter,int,setter,return,getter,setter,getter,setter
MetadataMBeanInfoAssembler -> private int resolveIntDescriptor(int getter, int setter);1357119239;Determines which of two {@code int} values should be used as the value_for an attribute descriptor. In general, only the getter or the setter will_be have a non-negative value so we use that value. In the event that both values_are non-negative, we use the greater of the two. This method can be used to_resolve any {@code int} valued descriptor where there are two possible values._@param getter the int value associated with the getter for this attribute_@param setter the int associated with the setter for this attribute;private int resolveIntDescriptor(int getter, int setter) {_		return (getter >= setter ? getter : setter)__	};determines,which,of,two,code,int,values,should,be,used,as,the,value,for,an,attribute,descriptor,in,general,only,the,getter,or,the,setter,will,be,have,a,non,negative,value,so,we,use,that,value,in,the,event,that,both,values,are,non,negative,we,use,the,greater,of,the,two,this,method,can,be,used,to,resolve,any,code,int,valued,descriptor,where,there,are,two,possible,values,param,getter,the,int,value,associated,with,the,getter,for,this,attribute,param,setter,the,int,associated,with,the,setter,for,this,attribute;private,int,resolve,int,descriptor,int,getter,int,setter,return,getter,setter,getter,setter
MetadataMBeanInfoAssembler -> private int resolveIntDescriptor(int getter, int setter);1362408075;Determines which of two {@code int} values should be used as the value_for an attribute descriptor. In general, only the getter or the setter will_be have a non-negative value so we use that value. In the event that both values_are non-negative, we use the greater of the two. This method can be used to_resolve any {@code int} valued descriptor where there are two possible values._@param getter the int value associated with the getter for this attribute_@param setter the int associated with the setter for this attribute;private int resolveIntDescriptor(int getter, int setter) {_		return (getter >= setter ? getter : setter)__	};determines,which,of,two,code,int,values,should,be,used,as,the,value,for,an,attribute,descriptor,in,general,only,the,getter,or,the,setter,will,be,have,a,non,negative,value,so,we,use,that,value,in,the,event,that,both,values,are,non,negative,we,use,the,greater,of,the,two,this,method,can,be,used,to,resolve,any,code,int,valued,descriptor,where,there,are,two,possible,values,param,getter,the,int,value,associated,with,the,getter,for,this,attribute,param,setter,the,int,associated,with,the,setter,for,this,attribute;private,int,resolve,int,descriptor,int,getter,int,setter,return,getter,setter,getter,setter
MetadataMBeanInfoAssembler -> private int resolveIntDescriptor(int getter, int setter);1368482696;Determines which of two {@code int} values should be used as the value_for an attribute descriptor. In general, only the getter or the setter will_be have a non-negative value so we use that value. In the event that both values_are non-negative, we use the greater of the two. This method can be used to_resolve any {@code int} valued descriptor where there are two possible values._@param getter the int value associated with the getter for this attribute_@param setter the int associated with the setter for this attribute;private int resolveIntDescriptor(int getter, int setter) {_		return (getter >= setter ? getter : setter)__	};determines,which,of,two,code,int,values,should,be,used,as,the,value,for,an,attribute,descriptor,in,general,only,the,getter,or,the,setter,will,be,have,a,non,negative,value,so,we,use,that,value,in,the,event,that,both,values,are,non,negative,we,use,the,greater,of,the,two,this,method,can,be,used,to,resolve,any,code,int,valued,descriptor,where,there,are,two,possible,values,param,getter,the,int,value,associated,with,the,getter,for,this,attribute,param,setter,the,int,associated,with,the,setter,for,this,attribute;private,int,resolve,int,descriptor,int,getter,int,setter,return,getter,setter,getter,setter
MetadataMBeanInfoAssembler -> private int resolveIntDescriptor(int getter, int setter);1385412762;Determines which of two {@code int} values should be used as the value_for an attribute descriptor. In general, only the getter or the setter will_be have a non-negative value so we use that value. In the event that both values_are non-negative, we use the greater of the two. This method can be used to_resolve any {@code int} valued descriptor where there are two possible values._@param getter the int value associated with the getter for this attribute_@param setter the int associated with the setter for this attribute;private int resolveIntDescriptor(int getter, int setter) {_		return (getter >= setter ? getter : setter)__	};determines,which,of,two,code,int,values,should,be,used,as,the,value,for,an,attribute,descriptor,in,general,only,the,getter,or,the,setter,will,be,have,a,non,negative,value,so,we,use,that,value,in,the,event,that,both,values,are,non,negative,we,use,the,greater,of,the,two,this,method,can,be,used,to,resolve,any,code,int,valued,descriptor,where,there,are,two,possible,values,param,getter,the,int,value,associated,with,the,getter,for,this,attribute,param,setter,the,int,associated,with,the,setter,for,this,attribute;private,int,resolve,int,descriptor,int,getter,int,setter,return,getter,setter,getter,setter
MetadataMBeanInfoAssembler -> private int resolveIntDescriptor(int getter, int setter);1405696918;Determines which of two {@code int} values should be used as the value_for an attribute descriptor. In general, only the getter or the setter will_be have a non-negative value so we use that value. In the event that both values_are non-negative, we use the greater of the two. This method can be used to_resolve any {@code int} valued descriptor where there are two possible values._@param getter the int value associated with the getter for this attribute_@param setter the int associated with the setter for this attribute;private int resolveIntDescriptor(int getter, int setter) {_		return (getter >= setter ? getter : setter)__	};determines,which,of,two,code,int,values,should,be,used,as,the,value,for,an,attribute,descriptor,in,general,only,the,getter,or,the,setter,will,be,have,a,non,negative,value,so,we,use,that,value,in,the,event,that,both,values,are,non,negative,we,use,the,greater,of,the,two,this,method,can,be,used,to,resolve,any,code,int,valued,descriptor,where,there,are,two,possible,values,param,getter,the,int,value,associated,with,the,getter,for,this,attribute,param,setter,the,int,associated,with,the,setter,for,this,attribute;private,int,resolve,int,descriptor,int,getter,int,setter,return,getter,setter,getter,setter
MetadataMBeanInfoAssembler -> private int resolveIntDescriptor(int getter, int setter);1496837955;Determines which of two {@code int} values should be used as the value_for an attribute descriptor. In general, only the getter or the setter will_be have a non-negative value so we use that value. In the event that both values_are non-negative, we use the greater of the two. This method can be used to_resolve any {@code int} valued descriptor where there are two possible values._@param getter the int value associated with the getter for this attribute_@param setter the int associated with the setter for this attribute;private int resolveIntDescriptor(int getter, int setter) {_		return (getter >= setter ? getter : setter)__	};determines,which,of,two,code,int,values,should,be,used,as,the,value,for,an,attribute,descriptor,in,general,only,the,getter,or,the,setter,will,be,have,a,non,negative,value,so,we,use,that,value,in,the,event,that,both,values,are,non,negative,we,use,the,greater,of,the,two,this,method,can,be,used,to,resolve,any,code,int,valued,descriptor,where,there,are,two,possible,values,param,getter,the,int,value,associated,with,the,getter,for,this,attribute,param,setter,the,int,associated,with,the,setter,for,this,attribute;private,int,resolve,int,descriptor,int,getter,int,setter,return,getter,setter,getter,setter
MetadataMBeanInfoAssembler -> private int resolveIntDescriptor(int getter, int setter);1498780456;Determines which of two {@code int} values should be used as the value_for an attribute descriptor. In general, only the getter or the setter will_be have a non-negative value so we use that value. In the event that both values_are non-negative, we use the greater of the two. This method can be used to_resolve any {@code int} valued descriptor where there are two possible values._@param getter the int value associated with the getter for this attribute_@param setter the int associated with the setter for this attribute;private int resolveIntDescriptor(int getter, int setter) {_		return (getter >= setter ? getter : setter)__	};determines,which,of,two,code,int,values,should,be,used,as,the,value,for,an,attribute,descriptor,in,general,only,the,getter,or,the,setter,will,be,have,a,non,negative,value,so,we,use,that,value,in,the,event,that,both,values,are,non,negative,we,use,the,greater,of,the,two,this,method,can,be,used,to,resolve,any,code,int,valued,descriptor,where,there,are,two,possible,values,param,getter,the,int,value,associated,with,the,getter,for,this,attribute,param,setter,the,int,associated,with,the,setter,for,this,attribute;private,int,resolve,int,descriptor,int,getter,int,setter,return,getter,setter,getter,setter
MetadataMBeanInfoAssembler -> private int resolveIntDescriptor(int getter, int setter);1500495740;Determines which of two {@code int} values should be used as the value_for an attribute descriptor. In general, only the getter or the setter will_be have a non-negative value so we use that value. In the event that both values_are non-negative, we use the greater of the two. This method can be used to_resolve any {@code int} valued descriptor where there are two possible values._@param getter the int value associated with the getter for this attribute_@param setter the int associated with the setter for this attribute;private int resolveIntDescriptor(int getter, int setter) {_		return (getter >= setter ? getter : setter)__	};determines,which,of,two,code,int,values,should,be,used,as,the,value,for,an,attribute,descriptor,in,general,only,the,getter,or,the,setter,will,be,have,a,non,negative,value,so,we,use,that,value,in,the,event,that,both,values,are,non,negative,we,use,the,greater,of,the,two,this,method,can,be,used,to,resolve,any,code,int,valued,descriptor,where,there,are,two,possible,values,param,getter,the,int,value,associated,with,the,getter,for,this,attribute,param,setter,the,int,associated,with,the,setter,for,this,attribute;private,int,resolve,int,descriptor,int,getter,int,setter,return,getter,setter,getter,setter
MetadataMBeanInfoAssembler -> private int resolveIntDescriptor(int getter, int setter);1520529117;Determines which of two {@code int} values should be used as the value_for an attribute descriptor. In general, only the getter or the setter will_be have a non-negative value so we use that value. In the event that both values_are non-negative, we use the greater of the two. This method can be used to_resolve any {@code int} valued descriptor where there are two possible values._@param getter the int value associated with the getter for this attribute_@param setter the int associated with the setter for this attribute;private int resolveIntDescriptor(int getter, int setter) {_		return (getter >= setter ? getter : setter)__	};determines,which,of,two,code,int,values,should,be,used,as,the,value,for,an,attribute,descriptor,in,general,only,the,getter,or,the,setter,will,be,have,a,non,negative,value,so,we,use,that,value,in,the,event,that,both,values,are,non,negative,we,use,the,greater,of,the,two,this,method,can,be,used,to,resolve,any,code,int,valued,descriptor,where,there,are,two,possible,values,param,getter,the,int,value,associated,with,the,getter,for,this,attribute,param,setter,the,int,associated,with,the,setter,for,this,attribute;private,int,resolve,int,descriptor,int,getter,int,setter,return,getter,setter,getter,setter
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeReadAttribute(Method method, String beanKey);1328020251;Vote on the inclusion of an attribute accessor._@param method the accessor method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeReadAttribute(Method method, String beanKey) {_		return hasManagedAttribute(method) || hasManagedMetric(method)__	};vote,on,the,inclusion,of,an,attribute,accessor,param,method,the,accessor,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,read,attribute,method,method,string,bean,key,return,has,managed,attribute,method,has,managed,metric,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeReadAttribute(Method method, String beanKey);1356735495;Vote on the inclusion of an attribute accessor._@param method the accessor method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeReadAttribute(Method method, String beanKey) {_		return hasManagedAttribute(method) || hasManagedMetric(method)__	};vote,on,the,inclusion,of,an,attribute,accessor,param,method,the,accessor,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,read,attribute,method,method,string,bean,key,return,has,managed,attribute,method,has,managed,metric,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeReadAttribute(Method method, String beanKey);1357119239;Vote on the inclusion of an attribute accessor._@param method the accessor method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeReadAttribute(Method method, String beanKey) {_		return hasManagedAttribute(method) || hasManagedMetric(method)__	};vote,on,the,inclusion,of,an,attribute,accessor,param,method,the,accessor,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,read,attribute,method,method,string,bean,key,return,has,managed,attribute,method,has,managed,metric,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeReadAttribute(Method method, String beanKey);1362408075;Vote on the inclusion of an attribute accessor._@param method the accessor method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeReadAttribute(Method method, String beanKey) {_		return hasManagedAttribute(method) || hasManagedMetric(method)__	};vote,on,the,inclusion,of,an,attribute,accessor,param,method,the,accessor,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,read,attribute,method,method,string,bean,key,return,has,managed,attribute,method,has,managed,metric,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeReadAttribute(Method method, String beanKey);1368482696;Vote on the inclusion of an attribute accessor._@param method the accessor method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeReadAttribute(Method method, String beanKey) {_		return hasManagedAttribute(method) || hasManagedMetric(method)__	};vote,on,the,inclusion,of,an,attribute,accessor,param,method,the,accessor,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,read,attribute,method,method,string,bean,key,return,has,managed,attribute,method,has,managed,metric,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeReadAttribute(Method method, String beanKey);1385412762;Vote on the inclusion of an attribute accessor._@param method the accessor method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeReadAttribute(Method method, String beanKey) {_		return hasManagedAttribute(method) || hasManagedMetric(method)__	};vote,on,the,inclusion,of,an,attribute,accessor,param,method,the,accessor,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,read,attribute,method,method,string,bean,key,return,has,managed,attribute,method,has,managed,metric,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeReadAttribute(Method method, String beanKey);1405696918;Vote on the inclusion of an attribute accessor._@param method the accessor method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeReadAttribute(Method method, String beanKey) {_		return hasManagedAttribute(method) || hasManagedMetric(method)__	};vote,on,the,inclusion,of,an,attribute,accessor,param,method,the,accessor,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,read,attribute,method,method,string,bean,key,return,has,managed,attribute,method,has,managed,metric,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeReadAttribute(Method method, String beanKey);1496837955;Vote on the inclusion of an attribute accessor._@param method the accessor method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeReadAttribute(Method method, String beanKey) {_		return hasManagedAttribute(method) || hasManagedMetric(method)__	};vote,on,the,inclusion,of,an,attribute,accessor,param,method,the,accessor,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,read,attribute,method,method,string,bean,key,return,has,managed,attribute,method,has,managed,metric,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeReadAttribute(Method method, String beanKey);1498780456;Vote on the inclusion of an attribute accessor._@param method the accessor method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeReadAttribute(Method method, String beanKey) {_		return hasManagedAttribute(method) || hasManagedMetric(method)__	};vote,on,the,inclusion,of,an,attribute,accessor,param,method,the,accessor,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,read,attribute,method,method,string,bean,key,return,has,managed,attribute,method,has,managed,metric,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeReadAttribute(Method method, String beanKey);1500495740;Vote on the inclusion of an attribute accessor._@param method the accessor method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeReadAttribute(Method method, String beanKey) {_		return hasManagedAttribute(method) || hasManagedMetric(method)__	};vote,on,the,inclusion,of,an,attribute,accessor,param,method,the,accessor,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,read,attribute,method,method,string,bean,key,return,has,managed,attribute,method,has,managed,metric,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeReadAttribute(Method method, String beanKey);1520529117;Vote on the inclusion of an attribute accessor._@param method the accessor method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeReadAttribute(Method method, String beanKey) {_		return hasManagedAttribute(method) || hasManagedMetric(method)__	};vote,on,the,inclusion,of,an,attribute,accessor,param,method,the,accessor,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,read,attribute,method,method,string,bean,key,return,has,managed,attribute,method,has,managed,metric,method
MetadataMBeanInfoAssembler -> @Override 	protected MBeanParameterInfo[] getOperationParameters(Method method, String beanKey);1328020251;Reads <code>MBeanParameterInfo</code> from the <code>ManagedOperationParameter</code>_attributes attached to a method. Returns an empty array of <code>MBeanParameterInfo</code>_if no attributes are found.;@Override_	protected MBeanParameterInfo[] getOperationParameters(Method method, String beanKey) {_		ManagedOperationParameter[] params = this.attributeSource.getManagedOperationParameters(method)__		if (params == null || params.length == 0) {_			return new MBeanParameterInfo[0]__		}__		MBeanParameterInfo[] parameterInfo = new MBeanParameterInfo[params.length]__		Class[] methodParameters = method.getParameterTypes()___		for (int i = 0_ i < params.length_ i++) {_			ManagedOperationParameter param = params[i]__			parameterInfo[i] =_					new MBeanParameterInfo(param.getName(), methodParameters[i].getName(), param.getDescription())__		}__		return parameterInfo__	};reads,code,mbean,parameter,info,code,from,the,code,managed,operation,parameter,code,attributes,attached,to,a,method,returns,an,empty,array,of,code,mbean,parameter,info,code,if,no,attributes,are,found;override,protected,mbean,parameter,info,get,operation,parameters,method,method,string,bean,key,managed,operation,parameter,params,this,attribute,source,get,managed,operation,parameters,method,if,params,null,params,length,0,return,new,mbean,parameter,info,0,mbean,parameter,info,parameter,info,new,mbean,parameter,info,params,length,class,method,parameters,method,get,parameter,types,for,int,i,0,i,params,length,i,managed,operation,parameter,param,params,i,parameter,info,i,new,mbean,parameter,info,param,get,name,method,parameters,i,get,name,param,get,description,return,parameter,info
MetadataMBeanInfoAssembler -> @Override 	protected MBeanParameterInfo[] getOperationParameters(Method method, String beanKey);1356735495;Reads {@code MBeanParameterInfo} from the {@code ManagedOperationParameter}_attributes attached to a method. Returns an empty array of {@code MBeanParameterInfo}_if no attributes are found.;@Override_	protected MBeanParameterInfo[] getOperationParameters(Method method, String beanKey) {_		ManagedOperationParameter[] params = this.attributeSource.getManagedOperationParameters(method)__		if (params == null || params.length == 0) {_			return new MBeanParameterInfo[0]__		}__		MBeanParameterInfo[] parameterInfo = new MBeanParameterInfo[params.length]__		Class[] methodParameters = method.getParameterTypes()___		for (int i = 0_ i < params.length_ i++) {_			ManagedOperationParameter param = params[i]__			parameterInfo[i] =_					new MBeanParameterInfo(param.getName(), methodParameters[i].getName(), param.getDescription())__		}__		return parameterInfo__	};reads,code,mbean,parameter,info,from,the,code,managed,operation,parameter,attributes,attached,to,a,method,returns,an,empty,array,of,code,mbean,parameter,info,if,no,attributes,are,found;override,protected,mbean,parameter,info,get,operation,parameters,method,method,string,bean,key,managed,operation,parameter,params,this,attribute,source,get,managed,operation,parameters,method,if,params,null,params,length,0,return,new,mbean,parameter,info,0,mbean,parameter,info,parameter,info,new,mbean,parameter,info,params,length,class,method,parameters,method,get,parameter,types,for,int,i,0,i,params,length,i,managed,operation,parameter,param,params,i,parameter,info,i,new,mbean,parameter,info,param,get,name,method,parameters,i,get,name,param,get,description,return,parameter,info
MetadataMBeanInfoAssembler -> @Override 	protected MBeanParameterInfo[] getOperationParameters(Method method, String beanKey);1357119239;Reads {@code MBeanParameterInfo} from the {@code ManagedOperationParameter}_attributes attached to a method. Returns an empty array of {@code MBeanParameterInfo}_if no attributes are found.;@Override_	protected MBeanParameterInfo[] getOperationParameters(Method method, String beanKey) {_		ManagedOperationParameter[] params = this.attributeSource.getManagedOperationParameters(method)__		if (params == null || params.length == 0) {_			return new MBeanParameterInfo[0]__		}__		MBeanParameterInfo[] parameterInfo = new MBeanParameterInfo[params.length]__		Class[] methodParameters = method.getParameterTypes()___		for (int i = 0_ i < params.length_ i++) {_			ManagedOperationParameter param = params[i]__			parameterInfo[i] =_					new MBeanParameterInfo(param.getName(), methodParameters[i].getName(), param.getDescription())__		}__		return parameterInfo__	};reads,code,mbean,parameter,info,from,the,code,managed,operation,parameter,attributes,attached,to,a,method,returns,an,empty,array,of,code,mbean,parameter,info,if,no,attributes,are,found;override,protected,mbean,parameter,info,get,operation,parameters,method,method,string,bean,key,managed,operation,parameter,params,this,attribute,source,get,managed,operation,parameters,method,if,params,null,params,length,0,return,new,mbean,parameter,info,0,mbean,parameter,info,parameter,info,new,mbean,parameter,info,params,length,class,method,parameters,method,get,parameter,types,for,int,i,0,i,params,length,i,managed,operation,parameter,param,params,i,parameter,info,i,new,mbean,parameter,info,param,get,name,method,parameters,i,get,name,param,get,description,return,parameter,info
MetadataMBeanInfoAssembler -> @Override 	protected MBeanParameterInfo[] getOperationParameters(Method method, String beanKey);1362408075;Reads {@code MBeanParameterInfo} from the {@code ManagedOperationParameter}_attributes attached to a method. Returns an empty array of {@code MBeanParameterInfo}_if no attributes are found.;@Override_	protected MBeanParameterInfo[] getOperationParameters(Method method, String beanKey) {_		ManagedOperationParameter[] params = this.attributeSource.getManagedOperationParameters(method)__		if (ObjectUtils.isEmpty(params)) {_			return super.getOperationParameters(method, beanKey)__		}__		MBeanParameterInfo[] parameterInfo = new MBeanParameterInfo[params.length]__		Class[] methodParameters = method.getParameterTypes()__		for (int i = 0_ i < params.length_ i++) {_			ManagedOperationParameter param = params[i]__			parameterInfo[i] =_					new MBeanParameterInfo(param.getName(), methodParameters[i].getName(), param.getDescription())__		}_		return parameterInfo__	};reads,code,mbean,parameter,info,from,the,code,managed,operation,parameter,attributes,attached,to,a,method,returns,an,empty,array,of,code,mbean,parameter,info,if,no,attributes,are,found;override,protected,mbean,parameter,info,get,operation,parameters,method,method,string,bean,key,managed,operation,parameter,params,this,attribute,source,get,managed,operation,parameters,method,if,object,utils,is,empty,params,return,super,get,operation,parameters,method,bean,key,mbean,parameter,info,parameter,info,new,mbean,parameter,info,params,length,class,method,parameters,method,get,parameter,types,for,int,i,0,i,params,length,i,managed,operation,parameter,param,params,i,parameter,info,i,new,mbean,parameter,info,param,get,name,method,parameters,i,get,name,param,get,description,return,parameter,info
MetadataMBeanInfoAssembler -> @Override 	protected MBeanParameterInfo[] getOperationParameters(Method method, String beanKey);1368482696;Reads {@code MBeanParameterInfo} from the {@code ManagedOperationParameter}_attributes attached to a method. Returns an empty array of {@code MBeanParameterInfo}_if no attributes are found.;@Override_	protected MBeanParameterInfo[] getOperationParameters(Method method, String beanKey) {_		ManagedOperationParameter[] params = this.attributeSource.getManagedOperationParameters(method)__		if (ObjectUtils.isEmpty(params)) {_			return super.getOperationParameters(method, beanKey)__		}__		MBeanParameterInfo[] parameterInfo = new MBeanParameterInfo[params.length]__		Class[] methodParameters = method.getParameterTypes()__		for (int i = 0_ i < params.length_ i++) {_			ManagedOperationParameter param = params[i]__			parameterInfo[i] =_					new MBeanParameterInfo(param.getName(), methodParameters[i].getName(), param.getDescription())__		}_		return parameterInfo__	};reads,code,mbean,parameter,info,from,the,code,managed,operation,parameter,attributes,attached,to,a,method,returns,an,empty,array,of,code,mbean,parameter,info,if,no,attributes,are,found;override,protected,mbean,parameter,info,get,operation,parameters,method,method,string,bean,key,managed,operation,parameter,params,this,attribute,source,get,managed,operation,parameters,method,if,object,utils,is,empty,params,return,super,get,operation,parameters,method,bean,key,mbean,parameter,info,parameter,info,new,mbean,parameter,info,params,length,class,method,parameters,method,get,parameter,types,for,int,i,0,i,params,length,i,managed,operation,parameter,param,params,i,parameter,info,i,new,mbean,parameter,info,param,get,name,method,parameters,i,get,name,param,get,description,return,parameter,info
MetadataMBeanInfoAssembler -> @Override 	protected MBeanParameterInfo[] getOperationParameters(Method method, String beanKey);1385412762;Reads {@code MBeanParameterInfo} from the {@code ManagedOperationParameter}_attributes attached to a method. Returns an empty array of {@code MBeanParameterInfo}_if no attributes are found.;@Override_	protected MBeanParameterInfo[] getOperationParameters(Method method, String beanKey) {_		ManagedOperationParameter[] params = this.attributeSource.getManagedOperationParameters(method)__		if (ObjectUtils.isEmpty(params)) {_			return super.getOperationParameters(method, beanKey)__		}__		MBeanParameterInfo[] parameterInfo = new MBeanParameterInfo[params.length]__		Class<?>[] methodParameters = method.getParameterTypes()__		for (int i = 0_ i < params.length_ i++) {_			ManagedOperationParameter param = params[i]__			parameterInfo[i] =_					new MBeanParameterInfo(param.getName(), methodParameters[i].getName(), param.getDescription())__		}_		return parameterInfo__	};reads,code,mbean,parameter,info,from,the,code,managed,operation,parameter,attributes,attached,to,a,method,returns,an,empty,array,of,code,mbean,parameter,info,if,no,attributes,are,found;override,protected,mbean,parameter,info,get,operation,parameters,method,method,string,bean,key,managed,operation,parameter,params,this,attribute,source,get,managed,operation,parameters,method,if,object,utils,is,empty,params,return,super,get,operation,parameters,method,bean,key,mbean,parameter,info,parameter,info,new,mbean,parameter,info,params,length,class,method,parameters,method,get,parameter,types,for,int,i,0,i,params,length,i,managed,operation,parameter,param,params,i,parameter,info,i,new,mbean,parameter,info,param,get,name,method,parameters,i,get,name,param,get,description,return,parameter,info
MetadataMBeanInfoAssembler -> @Override 	protected MBeanParameterInfo[] getOperationParameters(Method method, String beanKey);1405696918;Reads {@code MBeanParameterInfo} from the {@code ManagedOperationParameter}_attributes attached to a method. Returns an empty array of {@code MBeanParameterInfo}_if no attributes are found.;@Override_	protected MBeanParameterInfo[] getOperationParameters(Method method, String beanKey) {_		ManagedOperationParameter[] params = this.attributeSource.getManagedOperationParameters(method)__		if (ObjectUtils.isEmpty(params)) {_			return super.getOperationParameters(method, beanKey)__		}__		MBeanParameterInfo[] parameterInfo = new MBeanParameterInfo[params.length]__		Class<?>[] methodParameters = method.getParameterTypes()__		for (int i = 0_ i < params.length_ i++) {_			ManagedOperationParameter param = params[i]__			parameterInfo[i] =_					new MBeanParameterInfo(param.getName(), methodParameters[i].getName(), param.getDescription())__		}_		return parameterInfo__	};reads,code,mbean,parameter,info,from,the,code,managed,operation,parameter,attributes,attached,to,a,method,returns,an,empty,array,of,code,mbean,parameter,info,if,no,attributes,are,found;override,protected,mbean,parameter,info,get,operation,parameters,method,method,string,bean,key,managed,operation,parameter,params,this,attribute,source,get,managed,operation,parameters,method,if,object,utils,is,empty,params,return,super,get,operation,parameters,method,bean,key,mbean,parameter,info,parameter,info,new,mbean,parameter,info,params,length,class,method,parameters,method,get,parameter,types,for,int,i,0,i,params,length,i,managed,operation,parameter,param,params,i,parameter,info,i,new,mbean,parameter,info,param,get,name,method,parameters,i,get,name,param,get,description,return,parameter,info
MetadataMBeanInfoAssembler -> @Override 	protected MBeanParameterInfo[] getOperationParameters(Method method, String beanKey);1496837955;Reads {@code MBeanParameterInfo} from the {@code ManagedOperationParameter}_attributes attached to a method. Returns an empty array of {@code MBeanParameterInfo}_if no attributes are found.;@Override_	protected MBeanParameterInfo[] getOperationParameters(Method method, String beanKey) {_		ManagedOperationParameter[] params = this.attributeSource.getManagedOperationParameters(method)__		if (ObjectUtils.isEmpty(params)) {_			return super.getOperationParameters(method, beanKey)__		}__		MBeanParameterInfo[] parameterInfo = new MBeanParameterInfo[params.length]__		Class<?>[] methodParameters = method.getParameterTypes()__		for (int i = 0_ i < params.length_ i++) {_			ManagedOperationParameter param = params[i]__			parameterInfo[i] =_					new MBeanParameterInfo(param.getName(), methodParameters[i].getName(), param.getDescription())__		}_		return parameterInfo__	};reads,code,mbean,parameter,info,from,the,code,managed,operation,parameter,attributes,attached,to,a,method,returns,an,empty,array,of,code,mbean,parameter,info,if,no,attributes,are,found;override,protected,mbean,parameter,info,get,operation,parameters,method,method,string,bean,key,managed,operation,parameter,params,this,attribute,source,get,managed,operation,parameters,method,if,object,utils,is,empty,params,return,super,get,operation,parameters,method,bean,key,mbean,parameter,info,parameter,info,new,mbean,parameter,info,params,length,class,method,parameters,method,get,parameter,types,for,int,i,0,i,params,length,i,managed,operation,parameter,param,params,i,parameter,info,i,new,mbean,parameter,info,param,get,name,method,parameters,i,get,name,param,get,description,return,parameter,info
MetadataMBeanInfoAssembler -> @Override 	protected MBeanParameterInfo[] getOperationParameters(Method method, String beanKey);1498780456;Reads {@code MBeanParameterInfo} from the {@code ManagedOperationParameter}_attributes attached to a method. Returns an empty array of {@code MBeanParameterInfo}_if no attributes are found.;@Override_	protected MBeanParameterInfo[] getOperationParameters(Method method, String beanKey) {_		ManagedOperationParameter[] params = obtainAttributeSource().getManagedOperationParameters(method)__		if (ObjectUtils.isEmpty(params)) {_			return super.getOperationParameters(method, beanKey)__		}__		MBeanParameterInfo[] parameterInfo = new MBeanParameterInfo[params.length]__		Class<?>[] methodParameters = method.getParameterTypes()__		for (int i = 0_ i < params.length_ i++) {_			ManagedOperationParameter param = params[i]__			parameterInfo[i] =_					new MBeanParameterInfo(param.getName(), methodParameters[i].getName(), param.getDescription())__		}_		return parameterInfo__	};reads,code,mbean,parameter,info,from,the,code,managed,operation,parameter,attributes,attached,to,a,method,returns,an,empty,array,of,code,mbean,parameter,info,if,no,attributes,are,found;override,protected,mbean,parameter,info,get,operation,parameters,method,method,string,bean,key,managed,operation,parameter,params,obtain,attribute,source,get,managed,operation,parameters,method,if,object,utils,is,empty,params,return,super,get,operation,parameters,method,bean,key,mbean,parameter,info,parameter,info,new,mbean,parameter,info,params,length,class,method,parameters,method,get,parameter,types,for,int,i,0,i,params,length,i,managed,operation,parameter,param,params,i,parameter,info,i,new,mbean,parameter,info,param,get,name,method,parameters,i,get,name,param,get,description,return,parameter,info
MetadataMBeanInfoAssembler -> @Override 	protected MBeanParameterInfo[] getOperationParameters(Method method, String beanKey);1500495740;Reads {@code MBeanParameterInfo} from the {@code ManagedOperationParameter}_attributes attached to a method. Returns an empty array of {@code MBeanParameterInfo}_if no attributes are found.;@Override_	protected MBeanParameterInfo[] getOperationParameters(Method method, String beanKey) {_		ManagedOperationParameter[] params = obtainAttributeSource().getManagedOperationParameters(method)__		if (ObjectUtils.isEmpty(params)) {_			return super.getOperationParameters(method, beanKey)__		}__		MBeanParameterInfo[] parameterInfo = new MBeanParameterInfo[params.length]__		Class<?>[] methodParameters = method.getParameterTypes()__		for (int i = 0_ i < params.length_ i++) {_			ManagedOperationParameter param = params[i]__			parameterInfo[i] =_					new MBeanParameterInfo(param.getName(), methodParameters[i].getName(), param.getDescription())__		}_		return parameterInfo__	};reads,code,mbean,parameter,info,from,the,code,managed,operation,parameter,attributes,attached,to,a,method,returns,an,empty,array,of,code,mbean,parameter,info,if,no,attributes,are,found;override,protected,mbean,parameter,info,get,operation,parameters,method,method,string,bean,key,managed,operation,parameter,params,obtain,attribute,source,get,managed,operation,parameters,method,if,object,utils,is,empty,params,return,super,get,operation,parameters,method,bean,key,mbean,parameter,info,parameter,info,new,mbean,parameter,info,params,length,class,method,parameters,method,get,parameter,types,for,int,i,0,i,params,length,i,managed,operation,parameter,param,params,i,parameter,info,i,new,mbean,parameter,info,param,get,name,method,parameters,i,get,name,param,get,description,return,parameter,info
MetadataMBeanInfoAssembler -> @Override 	protected MBeanParameterInfo[] getOperationParameters(Method method, String beanKey);1520529117;Reads {@code MBeanParameterInfo} from the {@code ManagedOperationParameter}_attributes attached to a method. Returns an empty array of {@code MBeanParameterInfo}_if no attributes are found.;@Override_	protected MBeanParameterInfo[] getOperationParameters(Method method, String beanKey) {_		ManagedOperationParameter[] params = obtainAttributeSource().getManagedOperationParameters(method)__		if (ObjectUtils.isEmpty(params)) {_			return super.getOperationParameters(method, beanKey)__		}__		MBeanParameterInfo[] parameterInfo = new MBeanParameterInfo[params.length]__		Class<?>[] methodParameters = method.getParameterTypes()__		for (int i = 0_ i < params.length_ i++) {_			ManagedOperationParameter param = params[i]__			parameterInfo[i] =_					new MBeanParameterInfo(param.getName(), methodParameters[i].getName(), param.getDescription())__		}_		return parameterInfo__	};reads,code,mbean,parameter,info,from,the,code,managed,operation,parameter,attributes,attached,to,a,method,returns,an,empty,array,of,code,mbean,parameter,info,if,no,attributes,are,found;override,protected,mbean,parameter,info,get,operation,parameters,method,method,string,bean,key,managed,operation,parameter,params,obtain,attribute,source,get,managed,operation,parameters,method,if,object,utils,is,empty,params,return,super,get,operation,parameters,method,bean,key,mbean,parameter,info,parameter,info,new,mbean,parameter,info,params,length,class,method,parameters,method,get,parameter,types,for,int,i,0,i,params,length,i,managed,operation,parameter,param,params,i,parameter,info,i,new,mbean,parameter,info,param,get,name,method,parameters,i,get,name,param,get,description,return,parameter,info
MetadataMBeanInfoAssembler -> @Override 	protected void populateAttributeDescriptor( 			Descriptor desc, @Nullable Method getter, @Nullable Method setter, String beanKey);1496837955;Adds descriptor fields from the {@code ManagedAttribute} attribute or the {@code ManagedMetric} attribute_to the attribute descriptor.;@Override_	protected void populateAttributeDescriptor(_			Descriptor desc, @Nullable Method getter, @Nullable Method setter, String beanKey) {__		if (getter != null) {_			ManagedMetric metric = this.attributeSource.getManagedMetric(getter)__			if (metric != null) {_				populateMetricDescriptor(desc, metric)__				return__			}_		}__		ManagedAttribute gma = (getter != null ? this.attributeSource.getManagedAttribute(getter) : null)__		ManagedAttribute sma = (setter != null ? this.attributeSource.getManagedAttribute(setter) : null)__		populateAttributeDescriptor(desc,_				(gma != null ? gma : ManagedAttribute.EMPTY),_				(sma != null ? sma : ManagedAttribute.EMPTY))__	};adds,descriptor,fields,from,the,code,managed,attribute,attribute,or,the,code,managed,metric,attribute,to,the,attribute,descriptor;override,protected,void,populate,attribute,descriptor,descriptor,desc,nullable,method,getter,nullable,method,setter,string,bean,key,if,getter,null,managed,metric,metric,this,attribute,source,get,managed,metric,getter,if,metric,null,populate,metric,descriptor,desc,metric,return,managed,attribute,gma,getter,null,this,attribute,source,get,managed,attribute,getter,null,managed,attribute,sma,setter,null,this,attribute,source,get,managed,attribute,setter,null,populate,attribute,descriptor,desc,gma,null,gma,managed,attribute,empty,sma,null,sma,managed,attribute,empty
MetadataMBeanInfoAssembler -> @Override 	protected void populateAttributeDescriptor( 			Descriptor desc, @Nullable Method getter, @Nullable Method setter, String beanKey);1498780456;Adds descriptor fields from the {@code ManagedAttribute} attribute or the {@code ManagedMetric} attribute_to the attribute descriptor.;@Override_	protected void populateAttributeDescriptor(_			Descriptor desc, @Nullable Method getter, @Nullable Method setter, String beanKey) {__		if (getter != null) {_			ManagedMetric metric = obtainAttributeSource().getManagedMetric(getter)__			if (metric != null) {_				populateMetricDescriptor(desc, metric)__				return__			}_		}__		ManagedAttribute gma = (getter != null ? obtainAttributeSource().getManagedAttribute(getter) : null)__		ManagedAttribute sma = (setter != null ? obtainAttributeSource().getManagedAttribute(setter) : null)__		populateAttributeDescriptor(desc,_				(gma != null ? gma : ManagedAttribute.EMPTY),_				(sma != null ? sma : ManagedAttribute.EMPTY))__	};adds,descriptor,fields,from,the,code,managed,attribute,attribute,or,the,code,managed,metric,attribute,to,the,attribute,descriptor;override,protected,void,populate,attribute,descriptor,descriptor,desc,nullable,method,getter,nullable,method,setter,string,bean,key,if,getter,null,managed,metric,metric,obtain,attribute,source,get,managed,metric,getter,if,metric,null,populate,metric,descriptor,desc,metric,return,managed,attribute,gma,getter,null,obtain,attribute,source,get,managed,attribute,getter,null,managed,attribute,sma,setter,null,obtain,attribute,source,get,managed,attribute,setter,null,populate,attribute,descriptor,desc,gma,null,gma,managed,attribute,empty,sma,null,sma,managed,attribute,empty
MetadataMBeanInfoAssembler -> @Override 	protected void populateAttributeDescriptor( 			Descriptor desc, @Nullable Method getter, @Nullable Method setter, String beanKey);1500495740;Adds descriptor fields from the {@code ManagedAttribute} attribute or the {@code ManagedMetric} attribute_to the attribute descriptor.;@Override_	protected void populateAttributeDescriptor(_			Descriptor desc, @Nullable Method getter, @Nullable Method setter, String beanKey) {__		if (getter != null) {_			ManagedMetric metric = obtainAttributeSource().getManagedMetric(getter)__			if (metric != null) {_				populateMetricDescriptor(desc, metric)__				return__			}_		}__		ManagedAttribute gma = (getter != null ? obtainAttributeSource().getManagedAttribute(getter) : null)__		ManagedAttribute sma = (setter != null ? obtainAttributeSource().getManagedAttribute(setter) : null)__		populateAttributeDescriptor(desc,_				(gma != null ? gma : ManagedAttribute.EMPTY),_				(sma != null ? sma : ManagedAttribute.EMPTY))__	};adds,descriptor,fields,from,the,code,managed,attribute,attribute,or,the,code,managed,metric,attribute,to,the,attribute,descriptor;override,protected,void,populate,attribute,descriptor,descriptor,desc,nullable,method,getter,nullable,method,setter,string,bean,key,if,getter,null,managed,metric,metric,obtain,attribute,source,get,managed,metric,getter,if,metric,null,populate,metric,descriptor,desc,metric,return,managed,attribute,gma,getter,null,obtain,attribute,source,get,managed,attribute,getter,null,managed,attribute,sma,setter,null,obtain,attribute,source,get,managed,attribute,setter,null,populate,attribute,descriptor,desc,gma,null,gma,managed,attribute,empty,sma,null,sma,managed,attribute,empty
MetadataMBeanInfoAssembler -> @Override 	protected void populateAttributeDescriptor( 			Descriptor desc, @Nullable Method getter, @Nullable Method setter, String beanKey);1520529117;Adds descriptor fields from the {@code ManagedAttribute} attribute or the {@code ManagedMetric} attribute_to the attribute descriptor.;@Override_	protected void populateAttributeDescriptor(_			Descriptor desc, @Nullable Method getter, @Nullable Method setter, String beanKey) {__		if (getter != null) {_			ManagedMetric metric = obtainAttributeSource().getManagedMetric(getter)__			if (metric != null) {_				populateMetricDescriptor(desc, metric)__				return__			}_		}__		ManagedAttribute gma = (getter != null ? obtainAttributeSource().getManagedAttribute(getter) : null)__		ManagedAttribute sma = (setter != null ? obtainAttributeSource().getManagedAttribute(setter) : null)__		populateAttributeDescriptor(desc,_				(gma != null ? gma : ManagedAttribute.EMPTY),_				(sma != null ? sma : ManagedAttribute.EMPTY))__	};adds,descriptor,fields,from,the,code,managed,attribute,attribute,or,the,code,managed,metric,attribute,to,the,attribute,descriptor;override,protected,void,populate,attribute,descriptor,descriptor,desc,nullable,method,getter,nullable,method,setter,string,bean,key,if,getter,null,managed,metric,metric,obtain,attribute,source,get,managed,metric,getter,if,metric,null,populate,metric,descriptor,desc,metric,return,managed,attribute,gma,getter,null,obtain,attribute,source,get,managed,attribute,getter,null,managed,attribute,sma,setter,null,obtain,attribute,source,get,managed,attribute,setter,null,populate,attribute,descriptor,desc,gma,null,gma,managed,attribute,empty,sma,null,sma,managed,attribute,empty
MetadataMBeanInfoAssembler -> public MetadataMBeanInfoAssembler();1328020251;Create a new <code>MetadataMBeanInfoAssembler<code> which needs to be_configured through the {@link #setAttributeSource} method.;public MetadataMBeanInfoAssembler() {_	};create,a,new,code,metadata,mbean,info,assembler,code,which,needs,to,be,configured,through,the,link,set,attribute,source,method;public,metadata,mbean,info,assembler
MetadataMBeanInfoAssembler -> public MetadataMBeanInfoAssembler();1356735495;Create a new {@code MetadataMBeanInfoAssembler} which needs to be_configured through the {@link #setAttributeSource} method.;public MetadataMBeanInfoAssembler() {_	};create,a,new,code,metadata,mbean,info,assembler,which,needs,to,be,configured,through,the,link,set,attribute,source,method;public,metadata,mbean,info,assembler
MetadataMBeanInfoAssembler -> public MetadataMBeanInfoAssembler();1357119239;Create a new {@code MetadataMBeanInfoAssembler} which needs to be_configured through the {@link #setAttributeSource} method.;public MetadataMBeanInfoAssembler() {_	};create,a,new,code,metadata,mbean,info,assembler,which,needs,to,be,configured,through,the,link,set,attribute,source,method;public,metadata,mbean,info,assembler
MetadataMBeanInfoAssembler -> public MetadataMBeanInfoAssembler();1362408075;Create a new {@code MetadataMBeanInfoAssembler} which needs to be_configured through the {@link #setAttributeSource} method.;public MetadataMBeanInfoAssembler() {_	};create,a,new,code,metadata,mbean,info,assembler,which,needs,to,be,configured,through,the,link,set,attribute,source,method;public,metadata,mbean,info,assembler
MetadataMBeanInfoAssembler -> public MetadataMBeanInfoAssembler();1368482696;Create a new {@code MetadataMBeanInfoAssembler} which needs to be_configured through the {@link #setAttributeSource} method.;public MetadataMBeanInfoAssembler() {_	};create,a,new,code,metadata,mbean,info,assembler,which,needs,to,be,configured,through,the,link,set,attribute,source,method;public,metadata,mbean,info,assembler
MetadataMBeanInfoAssembler -> public MetadataMBeanInfoAssembler();1385412762;Create a new {@code MetadataMBeanInfoAssembler} which needs to be_configured through the {@link #setAttributeSource} method.;public MetadataMBeanInfoAssembler() {_	};create,a,new,code,metadata,mbean,info,assembler,which,needs,to,be,configured,through,the,link,set,attribute,source,method;public,metadata,mbean,info,assembler
MetadataMBeanInfoAssembler -> public MetadataMBeanInfoAssembler();1405696918;Create a new {@code MetadataMBeanInfoAssembler} which needs to be_configured through the {@link #setAttributeSource} method.;public MetadataMBeanInfoAssembler() {_	};create,a,new,code,metadata,mbean,info,assembler,which,needs,to,be,configured,through,the,link,set,attribute,source,method;public,metadata,mbean,info,assembler
MetadataMBeanInfoAssembler -> public MetadataMBeanInfoAssembler();1496837955;Create a new {@code MetadataMBeanInfoAssembler} which needs to be_configured through the {@link #setAttributeSource} method.;public MetadataMBeanInfoAssembler() {_	};create,a,new,code,metadata,mbean,info,assembler,which,needs,to,be,configured,through,the,link,set,attribute,source,method;public,metadata,mbean,info,assembler
MetadataMBeanInfoAssembler -> public MetadataMBeanInfoAssembler();1498780456;Create a new {@code MetadataMBeanInfoAssembler} which needs to be_configured through the {@link #setAttributeSource} method.;public MetadataMBeanInfoAssembler() {_	};create,a,new,code,metadata,mbean,info,assembler,which,needs,to,be,configured,through,the,link,set,attribute,source,method;public,metadata,mbean,info,assembler
MetadataMBeanInfoAssembler -> public MetadataMBeanInfoAssembler();1500495740;Create a new {@code MetadataMBeanInfoAssembler} which needs to be_configured through the {@link #setAttributeSource} method.;public MetadataMBeanInfoAssembler() {_	};create,a,new,code,metadata,mbean,info,assembler,which,needs,to,be,configured,through,the,link,set,attribute,source,method;public,metadata,mbean,info,assembler
MetadataMBeanInfoAssembler -> public MetadataMBeanInfoAssembler();1520529117;Create a new {@code MetadataMBeanInfoAssembler} which needs to be_configured through the {@link #setAttributeSource} method.;public MetadataMBeanInfoAssembler() {_	};create,a,new,code,metadata,mbean,info,assembler,which,needs,to,be,configured,through,the,link,set,attribute,source,method;public,metadata,mbean,info,assembler
MetadataMBeanInfoAssembler -> @Override 	protected String getDescription(Object managedBean, String beanKey);1328020251;Reads managed resource description from the source level metadata._Returns an empty <code>String</code> if no description can be found.;@Override_	protected String getDescription(Object managedBean, String beanKey) {_		ManagedResource mr = this.attributeSource.getManagedResource(getClassToExpose(managedBean))__		return (mr != null ? mr.getDescription() : "")__	};reads,managed,resource,description,from,the,source,level,metadata,returns,an,empty,code,string,code,if,no,description,can,be,found;override,protected,string,get,description,object,managed,bean,string,bean,key,managed,resource,mr,this,attribute,source,get,managed,resource,get,class,to,expose,managed,bean,return,mr,null,mr,get,description
MetadataMBeanInfoAssembler -> @Override 	protected String getDescription(Object managedBean, String beanKey);1356735495;Reads managed resource description from the source level metadata._Returns an empty {@code String} if no description can be found.;@Override_	protected String getDescription(Object managedBean, String beanKey) {_		ManagedResource mr = this.attributeSource.getManagedResource(getClassToExpose(managedBean))__		return (mr != null ? mr.getDescription() : "")__	};reads,managed,resource,description,from,the,source,level,metadata,returns,an,empty,code,string,if,no,description,can,be,found;override,protected,string,get,description,object,managed,bean,string,bean,key,managed,resource,mr,this,attribute,source,get,managed,resource,get,class,to,expose,managed,bean,return,mr,null,mr,get,description
MetadataMBeanInfoAssembler -> @Override 	protected String getDescription(Object managedBean, String beanKey);1357119239;Reads managed resource description from the source level metadata._Returns an empty {@code String} if no description can be found.;@Override_	protected String getDescription(Object managedBean, String beanKey) {_		ManagedResource mr = this.attributeSource.getManagedResource(getClassToExpose(managedBean))__		return (mr != null ? mr.getDescription() : "")__	};reads,managed,resource,description,from,the,source,level,metadata,returns,an,empty,code,string,if,no,description,can,be,found;override,protected,string,get,description,object,managed,bean,string,bean,key,managed,resource,mr,this,attribute,source,get,managed,resource,get,class,to,expose,managed,bean,return,mr,null,mr,get,description
MetadataMBeanInfoAssembler -> @Override 	protected String getDescription(Object managedBean, String beanKey);1362408075;Reads managed resource description from the source level metadata._Returns an empty {@code String} if no description can be found.;@Override_	protected String getDescription(Object managedBean, String beanKey) {_		ManagedResource mr = this.attributeSource.getManagedResource(getClassToExpose(managedBean))__		return (mr != null ? mr.getDescription() : "")__	};reads,managed,resource,description,from,the,source,level,metadata,returns,an,empty,code,string,if,no,description,can,be,found;override,protected,string,get,description,object,managed,bean,string,bean,key,managed,resource,mr,this,attribute,source,get,managed,resource,get,class,to,expose,managed,bean,return,mr,null,mr,get,description
MetadataMBeanInfoAssembler -> @Override 	protected String getDescription(Object managedBean, String beanKey);1368482696;Reads managed resource description from the source level metadata._Returns an empty {@code String} if no description can be found.;@Override_	protected String getDescription(Object managedBean, String beanKey) {_		ManagedResource mr = this.attributeSource.getManagedResource(getClassToExpose(managedBean))__		return (mr != null ? mr.getDescription() : "")__	};reads,managed,resource,description,from,the,source,level,metadata,returns,an,empty,code,string,if,no,description,can,be,found;override,protected,string,get,description,object,managed,bean,string,bean,key,managed,resource,mr,this,attribute,source,get,managed,resource,get,class,to,expose,managed,bean,return,mr,null,mr,get,description
MetadataMBeanInfoAssembler -> @Override 	protected String getDescription(Object managedBean, String beanKey);1385412762;Reads managed resource description from the source level metadata._Returns an empty {@code String} if no description can be found.;@Override_	protected String getDescription(Object managedBean, String beanKey) {_		ManagedResource mr = this.attributeSource.getManagedResource(getClassToExpose(managedBean))__		return (mr != null ? mr.getDescription() : "")__	};reads,managed,resource,description,from,the,source,level,metadata,returns,an,empty,code,string,if,no,description,can,be,found;override,protected,string,get,description,object,managed,bean,string,bean,key,managed,resource,mr,this,attribute,source,get,managed,resource,get,class,to,expose,managed,bean,return,mr,null,mr,get,description
MetadataMBeanInfoAssembler -> @Override 	protected String getDescription(Object managedBean, String beanKey);1405696918;Reads managed resource description from the source level metadata._Returns an empty {@code String} if no description can be found.;@Override_	protected String getDescription(Object managedBean, String beanKey) {_		ManagedResource mr = this.attributeSource.getManagedResource(getClassToExpose(managedBean))__		return (mr != null ? mr.getDescription() : "")__	};reads,managed,resource,description,from,the,source,level,metadata,returns,an,empty,code,string,if,no,description,can,be,found;override,protected,string,get,description,object,managed,bean,string,bean,key,managed,resource,mr,this,attribute,source,get,managed,resource,get,class,to,expose,managed,bean,return,mr,null,mr,get,description
MetadataMBeanInfoAssembler -> @Override 	protected String getDescription(Object managedBean, String beanKey);1496837955;Reads managed resource description from the source level metadata._Returns an empty {@code String} if no description can be found.;@Override_	protected String getDescription(Object managedBean, String beanKey) {_		ManagedResource mr = this.attributeSource.getManagedResource(getClassToExpose(managedBean))__		return (mr != null ? mr.getDescription() : "")__	};reads,managed,resource,description,from,the,source,level,metadata,returns,an,empty,code,string,if,no,description,can,be,found;override,protected,string,get,description,object,managed,bean,string,bean,key,managed,resource,mr,this,attribute,source,get,managed,resource,get,class,to,expose,managed,bean,return,mr,null,mr,get,description
MetadataMBeanInfoAssembler -> @Override 	protected String getDescription(Object managedBean, String beanKey);1498780456;Reads managed resource description from the source level metadata._Returns an empty {@code String} if no description can be found.;@Override_	protected String getDescription(Object managedBean, String beanKey) {_		ManagedResource mr = obtainAttributeSource().getManagedResource(getClassToExpose(managedBean))__		return (mr != null ? mr.getDescription() : "")__	};reads,managed,resource,description,from,the,source,level,metadata,returns,an,empty,code,string,if,no,description,can,be,found;override,protected,string,get,description,object,managed,bean,string,bean,key,managed,resource,mr,obtain,attribute,source,get,managed,resource,get,class,to,expose,managed,bean,return,mr,null,mr,get,description
MetadataMBeanInfoAssembler -> @Override 	protected String getDescription(Object managedBean, String beanKey);1500495740;Reads managed resource description from the source level metadata._Returns an empty {@code String} if no description can be found.;@Override_	protected String getDescription(Object managedBean, String beanKey) {_		ManagedResource mr = obtainAttributeSource().getManagedResource(getClassToExpose(managedBean))__		return (mr != null ? mr.getDescription() : "")__	};reads,managed,resource,description,from,the,source,level,metadata,returns,an,empty,code,string,if,no,description,can,be,found;override,protected,string,get,description,object,managed,bean,string,bean,key,managed,resource,mr,obtain,attribute,source,get,managed,resource,get,class,to,expose,managed,bean,return,mr,null,mr,get,description
MetadataMBeanInfoAssembler -> @Override 	protected String getDescription(Object managedBean, String beanKey);1520529117;Reads managed resource description from the source level metadata._Returns an empty {@code String} if no description can be found.;@Override_	protected String getDescription(Object managedBean, String beanKey) {_		ManagedResource mr = obtainAttributeSource().getManagedResource(getClassToExpose(managedBean))__		return (mr != null ? mr.getDescription() : "")__	};reads,managed,resource,description,from,the,source,level,metadata,returns,an,empty,code,string,if,no,description,can,be,found;override,protected,string,get,description,object,managed,bean,string,bean,key,managed,resource,mr,obtain,attribute,source,get,managed,resource,get,class,to,expose,managed,bean,return,mr,null,mr,get,description
MetadataMBeanInfoAssembler -> private boolean hasManagedOperation(Method method);1328020251;Checks to see if the given Method has the <code>ManagedOperation</code> attribute._@param method the method to check;private boolean hasManagedOperation(Method method) {_		return (this.attributeSource.getManagedOperation(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,operation,code,attribute,param,method,the,method,to,check;private,boolean,has,managed,operation,method,method,return,this,attribute,source,get,managed,operation,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedOperation(Method method);1356735495;Checks to see if the given Method has the {@code ManagedOperation} attribute._@param method the method to check;private boolean hasManagedOperation(Method method) {_		return (this.attributeSource.getManagedOperation(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,operation,attribute,param,method,the,method,to,check;private,boolean,has,managed,operation,method,method,return,this,attribute,source,get,managed,operation,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedOperation(Method method);1357119239;Checks to see if the given Method has the {@code ManagedOperation} attribute._@param method the method to check;private boolean hasManagedOperation(Method method) {_		return (this.attributeSource.getManagedOperation(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,operation,attribute,param,method,the,method,to,check;private,boolean,has,managed,operation,method,method,return,this,attribute,source,get,managed,operation,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedOperation(Method method);1362408075;Checks to see if the given Method has the {@code ManagedOperation} attribute._@param method the method to check;private boolean hasManagedOperation(Method method) {_		return (this.attributeSource.getManagedOperation(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,operation,attribute,param,method,the,method,to,check;private,boolean,has,managed,operation,method,method,return,this,attribute,source,get,managed,operation,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedOperation(Method method);1368482696;Checks to see if the given Method has the {@code ManagedOperation} attribute._@param method the method to check;private boolean hasManagedOperation(Method method) {_		return (this.attributeSource.getManagedOperation(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,operation,attribute,param,method,the,method,to,check;private,boolean,has,managed,operation,method,method,return,this,attribute,source,get,managed,operation,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedOperation(Method method);1385412762;Checks to see if the given Method has the {@code ManagedOperation} attribute._@param method the method to check;private boolean hasManagedOperation(Method method) {_		return (this.attributeSource.getManagedOperation(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,operation,attribute,param,method,the,method,to,check;private,boolean,has,managed,operation,method,method,return,this,attribute,source,get,managed,operation,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedOperation(Method method);1405696918;Checks to see if the given Method has the {@code ManagedOperation} attribute._@param method the method to check;private boolean hasManagedOperation(Method method) {_		return (this.attributeSource.getManagedOperation(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,operation,attribute,param,method,the,method,to,check;private,boolean,has,managed,operation,method,method,return,this,attribute,source,get,managed,operation,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedOperation(Method method);1496837955;Checks to see if the given Method has the {@code ManagedOperation} attribute._@param method the method to check;private boolean hasManagedOperation(Method method) {_		return (this.attributeSource.getManagedOperation(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,operation,attribute,param,method,the,method,to,check;private,boolean,has,managed,operation,method,method,return,this,attribute,source,get,managed,operation,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedOperation(Method method);1498780456;Checks to see if the given Method has the {@code ManagedOperation} attribute._@param method the method to check;private boolean hasManagedOperation(Method method) {_		return (obtainAttributeSource().getManagedOperation(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,operation,attribute,param,method,the,method,to,check;private,boolean,has,managed,operation,method,method,return,obtain,attribute,source,get,managed,operation,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedOperation(Method method);1500495740;Checks to see if the given Method has the {@code ManagedOperation} attribute._@param method the method to check;private boolean hasManagedOperation(Method method) {_		return (obtainAttributeSource().getManagedOperation(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,operation,attribute,param,method,the,method,to,check;private,boolean,has,managed,operation,method,method,return,obtain,attribute,source,get,managed,operation,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedOperation(Method method);1520529117;Checks to see if the given Method has the {@code ManagedOperation} attribute._@param method the method to check;private boolean hasManagedOperation(Method method) {_		return (obtainAttributeSource().getManagedOperation(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,operation,attribute,param,method,the,method,to,check;private,boolean,has,managed,operation,method,method,return,obtain,attribute,source,get,managed,operation,method,null
MetadataMBeanInfoAssembler -> @Override 	protected String getAttributeDescription(PropertyDescriptor propertyDescriptor, String beanKey);1328020251;Creates a description for the attribute corresponding to this property_descriptor. Attempts to create the description using metadata from either_the getter or setter attributes, otherwise uses the property name.;@Override_	protected String getAttributeDescription(PropertyDescriptor propertyDescriptor, String beanKey) {_		Method readMethod = propertyDescriptor.getReadMethod()__		Method writeMethod = propertyDescriptor.getWriteMethod()___		ManagedAttribute getter =_				(readMethod != null ? this.attributeSource.getManagedAttribute(readMethod) : null)__		ManagedAttribute setter =_				(writeMethod != null ? this.attributeSource.getManagedAttribute(writeMethod) : null)___		if (getter != null && StringUtils.hasText(getter.getDescription())) {_			return getter.getDescription()__		}_		else if (setter != null && StringUtils.hasText(setter.getDescription())) {_			return setter.getDescription()__		}__		ManagedMetric metric = (readMethod != null ? this.attributeSource.getManagedMetric(readMethod) : null)__		if (metric != null && StringUtils.hasText(metric.getDescription())) {_			return metric.getDescription()__		}__		return propertyDescriptor.getDisplayName()__	};creates,a,description,for,the,attribute,corresponding,to,this,property,descriptor,attempts,to,create,the,description,using,metadata,from,either,the,getter,or,setter,attributes,otherwise,uses,the,property,name;override,protected,string,get,attribute,description,property,descriptor,property,descriptor,string,bean,key,method,read,method,property,descriptor,get,read,method,method,write,method,property,descriptor,get,write,method,managed,attribute,getter,read,method,null,this,attribute,source,get,managed,attribute,read,method,null,managed,attribute,setter,write,method,null,this,attribute,source,get,managed,attribute,write,method,null,if,getter,null,string,utils,has,text,getter,get,description,return,getter,get,description,else,if,setter,null,string,utils,has,text,setter,get,description,return,setter,get,description,managed,metric,metric,read,method,null,this,attribute,source,get,managed,metric,read,method,null,if,metric,null,string,utils,has,text,metric,get,description,return,metric,get,description,return,property,descriptor,get,display,name
MetadataMBeanInfoAssembler -> @Override 	protected String getAttributeDescription(PropertyDescriptor propertyDescriptor, String beanKey);1356735495;Creates a description for the attribute corresponding to this property_descriptor. Attempts to create the description using metadata from either_the getter or setter attributes, otherwise uses the property name.;@Override_	protected String getAttributeDescription(PropertyDescriptor propertyDescriptor, String beanKey) {_		Method readMethod = propertyDescriptor.getReadMethod()__		Method writeMethod = propertyDescriptor.getWriteMethod()___		ManagedAttribute getter =_				(readMethod != null ? this.attributeSource.getManagedAttribute(readMethod) : null)__		ManagedAttribute setter =_				(writeMethod != null ? this.attributeSource.getManagedAttribute(writeMethod) : null)___		if (getter != null && StringUtils.hasText(getter.getDescription())) {_			return getter.getDescription()__		}_		else if (setter != null && StringUtils.hasText(setter.getDescription())) {_			return setter.getDescription()__		}__		ManagedMetric metric = (readMethod != null ? this.attributeSource.getManagedMetric(readMethod) : null)__		if (metric != null && StringUtils.hasText(metric.getDescription())) {_			return metric.getDescription()__		}__		return propertyDescriptor.getDisplayName()__	};creates,a,description,for,the,attribute,corresponding,to,this,property,descriptor,attempts,to,create,the,description,using,metadata,from,either,the,getter,or,setter,attributes,otherwise,uses,the,property,name;override,protected,string,get,attribute,description,property,descriptor,property,descriptor,string,bean,key,method,read,method,property,descriptor,get,read,method,method,write,method,property,descriptor,get,write,method,managed,attribute,getter,read,method,null,this,attribute,source,get,managed,attribute,read,method,null,managed,attribute,setter,write,method,null,this,attribute,source,get,managed,attribute,write,method,null,if,getter,null,string,utils,has,text,getter,get,description,return,getter,get,description,else,if,setter,null,string,utils,has,text,setter,get,description,return,setter,get,description,managed,metric,metric,read,method,null,this,attribute,source,get,managed,metric,read,method,null,if,metric,null,string,utils,has,text,metric,get,description,return,metric,get,description,return,property,descriptor,get,display,name
MetadataMBeanInfoAssembler -> @Override 	protected String getAttributeDescription(PropertyDescriptor propertyDescriptor, String beanKey);1357119239;Creates a description for the attribute corresponding to this property_descriptor. Attempts to create the description using metadata from either_the getter or setter attributes, otherwise uses the property name.;@Override_	protected String getAttributeDescription(PropertyDescriptor propertyDescriptor, String beanKey) {_		Method readMethod = propertyDescriptor.getReadMethod()__		Method writeMethod = propertyDescriptor.getWriteMethod()___		ManagedAttribute getter =_				(readMethod != null ? this.attributeSource.getManagedAttribute(readMethod) : null)__		ManagedAttribute setter =_				(writeMethod != null ? this.attributeSource.getManagedAttribute(writeMethod) : null)___		if (getter != null && StringUtils.hasText(getter.getDescription())) {_			return getter.getDescription()__		}_		else if (setter != null && StringUtils.hasText(setter.getDescription())) {_			return setter.getDescription()__		}__		ManagedMetric metric = (readMethod != null ? this.attributeSource.getManagedMetric(readMethod) : null)__		if (metric != null && StringUtils.hasText(metric.getDescription())) {_			return metric.getDescription()__		}__		return propertyDescriptor.getDisplayName()__	};creates,a,description,for,the,attribute,corresponding,to,this,property,descriptor,attempts,to,create,the,description,using,metadata,from,either,the,getter,or,setter,attributes,otherwise,uses,the,property,name;override,protected,string,get,attribute,description,property,descriptor,property,descriptor,string,bean,key,method,read,method,property,descriptor,get,read,method,method,write,method,property,descriptor,get,write,method,managed,attribute,getter,read,method,null,this,attribute,source,get,managed,attribute,read,method,null,managed,attribute,setter,write,method,null,this,attribute,source,get,managed,attribute,write,method,null,if,getter,null,string,utils,has,text,getter,get,description,return,getter,get,description,else,if,setter,null,string,utils,has,text,setter,get,description,return,setter,get,description,managed,metric,metric,read,method,null,this,attribute,source,get,managed,metric,read,method,null,if,metric,null,string,utils,has,text,metric,get,description,return,metric,get,description,return,property,descriptor,get,display,name
MetadataMBeanInfoAssembler -> @Override 	protected String getAttributeDescription(PropertyDescriptor propertyDescriptor, String beanKey);1362408075;Creates a description for the attribute corresponding to this property_descriptor. Attempts to create the description using metadata from either_the getter or setter attributes, otherwise uses the property name.;@Override_	protected String getAttributeDescription(PropertyDescriptor propertyDescriptor, String beanKey) {_		Method readMethod = propertyDescriptor.getReadMethod()__		Method writeMethod = propertyDescriptor.getWriteMethod()___		ManagedAttribute getter =_				(readMethod != null ? this.attributeSource.getManagedAttribute(readMethod) : null)__		ManagedAttribute setter =_				(writeMethod != null ? this.attributeSource.getManagedAttribute(writeMethod) : null)___		if (getter != null && StringUtils.hasText(getter.getDescription())) {_			return getter.getDescription()__		}_		else if (setter != null && StringUtils.hasText(setter.getDescription())) {_			return setter.getDescription()__		}__		ManagedMetric metric = (readMethod != null ? this.attributeSource.getManagedMetric(readMethod) : null)__		if (metric != null && StringUtils.hasText(metric.getDescription())) {_			return metric.getDescription()__		}__		return propertyDescriptor.getDisplayName()__	};creates,a,description,for,the,attribute,corresponding,to,this,property,descriptor,attempts,to,create,the,description,using,metadata,from,either,the,getter,or,setter,attributes,otherwise,uses,the,property,name;override,protected,string,get,attribute,description,property,descriptor,property,descriptor,string,bean,key,method,read,method,property,descriptor,get,read,method,method,write,method,property,descriptor,get,write,method,managed,attribute,getter,read,method,null,this,attribute,source,get,managed,attribute,read,method,null,managed,attribute,setter,write,method,null,this,attribute,source,get,managed,attribute,write,method,null,if,getter,null,string,utils,has,text,getter,get,description,return,getter,get,description,else,if,setter,null,string,utils,has,text,setter,get,description,return,setter,get,description,managed,metric,metric,read,method,null,this,attribute,source,get,managed,metric,read,method,null,if,metric,null,string,utils,has,text,metric,get,description,return,metric,get,description,return,property,descriptor,get,display,name
MetadataMBeanInfoAssembler -> @Override 	protected String getAttributeDescription(PropertyDescriptor propertyDescriptor, String beanKey);1368482696;Creates a description for the attribute corresponding to this property_descriptor. Attempts to create the description using metadata from either_the getter or setter attributes, otherwise uses the property name.;@Override_	protected String getAttributeDescription(PropertyDescriptor propertyDescriptor, String beanKey) {_		Method readMethod = propertyDescriptor.getReadMethod()__		Method writeMethod = propertyDescriptor.getWriteMethod()___		ManagedAttribute getter =_				(readMethod != null ? this.attributeSource.getManagedAttribute(readMethod) : null)__		ManagedAttribute setter =_				(writeMethod != null ? this.attributeSource.getManagedAttribute(writeMethod) : null)___		if (getter != null && StringUtils.hasText(getter.getDescription())) {_			return getter.getDescription()__		}_		else if (setter != null && StringUtils.hasText(setter.getDescription())) {_			return setter.getDescription()__		}__		ManagedMetric metric = (readMethod != null ? this.attributeSource.getManagedMetric(readMethod) : null)__		if (metric != null && StringUtils.hasText(metric.getDescription())) {_			return metric.getDescription()__		}__		return propertyDescriptor.getDisplayName()__	};creates,a,description,for,the,attribute,corresponding,to,this,property,descriptor,attempts,to,create,the,description,using,metadata,from,either,the,getter,or,setter,attributes,otherwise,uses,the,property,name;override,protected,string,get,attribute,description,property,descriptor,property,descriptor,string,bean,key,method,read,method,property,descriptor,get,read,method,method,write,method,property,descriptor,get,write,method,managed,attribute,getter,read,method,null,this,attribute,source,get,managed,attribute,read,method,null,managed,attribute,setter,write,method,null,this,attribute,source,get,managed,attribute,write,method,null,if,getter,null,string,utils,has,text,getter,get,description,return,getter,get,description,else,if,setter,null,string,utils,has,text,setter,get,description,return,setter,get,description,managed,metric,metric,read,method,null,this,attribute,source,get,managed,metric,read,method,null,if,metric,null,string,utils,has,text,metric,get,description,return,metric,get,description,return,property,descriptor,get,display,name
MetadataMBeanInfoAssembler -> @Override 	protected String getAttributeDescription(PropertyDescriptor propertyDescriptor, String beanKey);1385412762;Creates a description for the attribute corresponding to this property_descriptor. Attempts to create the description using metadata from either_the getter or setter attributes, otherwise uses the property name.;@Override_	protected String getAttributeDescription(PropertyDescriptor propertyDescriptor, String beanKey) {_		Method readMethod = propertyDescriptor.getReadMethod()__		Method writeMethod = propertyDescriptor.getWriteMethod()___		ManagedAttribute getter =_				(readMethod != null ? this.attributeSource.getManagedAttribute(readMethod) : null)__		ManagedAttribute setter =_				(writeMethod != null ? this.attributeSource.getManagedAttribute(writeMethod) : null)___		if (getter != null && StringUtils.hasText(getter.getDescription())) {_			return getter.getDescription()__		}_		else if (setter != null && StringUtils.hasText(setter.getDescription())) {_			return setter.getDescription()__		}__		ManagedMetric metric = (readMethod != null ? this.attributeSource.getManagedMetric(readMethod) : null)__		if (metric != null && StringUtils.hasText(metric.getDescription())) {_			return metric.getDescription()__		}__		return propertyDescriptor.getDisplayName()__	};creates,a,description,for,the,attribute,corresponding,to,this,property,descriptor,attempts,to,create,the,description,using,metadata,from,either,the,getter,or,setter,attributes,otherwise,uses,the,property,name;override,protected,string,get,attribute,description,property,descriptor,property,descriptor,string,bean,key,method,read,method,property,descriptor,get,read,method,method,write,method,property,descriptor,get,write,method,managed,attribute,getter,read,method,null,this,attribute,source,get,managed,attribute,read,method,null,managed,attribute,setter,write,method,null,this,attribute,source,get,managed,attribute,write,method,null,if,getter,null,string,utils,has,text,getter,get,description,return,getter,get,description,else,if,setter,null,string,utils,has,text,setter,get,description,return,setter,get,description,managed,metric,metric,read,method,null,this,attribute,source,get,managed,metric,read,method,null,if,metric,null,string,utils,has,text,metric,get,description,return,metric,get,description,return,property,descriptor,get,display,name
MetadataMBeanInfoAssembler -> @Override 	protected String getAttributeDescription(PropertyDescriptor propertyDescriptor, String beanKey);1405696918;Creates a description for the attribute corresponding to this property_descriptor. Attempts to create the description using metadata from either_the getter or setter attributes, otherwise uses the property name.;@Override_	protected String getAttributeDescription(PropertyDescriptor propertyDescriptor, String beanKey) {_		Method readMethod = propertyDescriptor.getReadMethod()__		Method writeMethod = propertyDescriptor.getWriteMethod()___		ManagedAttribute getter =_				(readMethod != null ? this.attributeSource.getManagedAttribute(readMethod) : null)__		ManagedAttribute setter =_				(writeMethod != null ? this.attributeSource.getManagedAttribute(writeMethod) : null)___		if (getter != null && StringUtils.hasText(getter.getDescription())) {_			return getter.getDescription()__		}_		else if (setter != null && StringUtils.hasText(setter.getDescription())) {_			return setter.getDescription()__		}__		ManagedMetric metric = (readMethod != null ? this.attributeSource.getManagedMetric(readMethod) : null)__		if (metric != null && StringUtils.hasText(metric.getDescription())) {_			return metric.getDescription()__		}__		return propertyDescriptor.getDisplayName()__	};creates,a,description,for,the,attribute,corresponding,to,this,property,descriptor,attempts,to,create,the,description,using,metadata,from,either,the,getter,or,setter,attributes,otherwise,uses,the,property,name;override,protected,string,get,attribute,description,property,descriptor,property,descriptor,string,bean,key,method,read,method,property,descriptor,get,read,method,method,write,method,property,descriptor,get,write,method,managed,attribute,getter,read,method,null,this,attribute,source,get,managed,attribute,read,method,null,managed,attribute,setter,write,method,null,this,attribute,source,get,managed,attribute,write,method,null,if,getter,null,string,utils,has,text,getter,get,description,return,getter,get,description,else,if,setter,null,string,utils,has,text,setter,get,description,return,setter,get,description,managed,metric,metric,read,method,null,this,attribute,source,get,managed,metric,read,method,null,if,metric,null,string,utils,has,text,metric,get,description,return,metric,get,description,return,property,descriptor,get,display,name
MetadataMBeanInfoAssembler -> @Override 	protected String getAttributeDescription(PropertyDescriptor propertyDescriptor, String beanKey);1496837955;Creates a description for the attribute corresponding to this property_descriptor. Attempts to create the description using metadata from either_the getter or setter attributes, otherwise uses the property name.;@Override_	protected String getAttributeDescription(PropertyDescriptor propertyDescriptor, String beanKey) {_		Method readMethod = propertyDescriptor.getReadMethod()__		Method writeMethod = propertyDescriptor.getWriteMethod()___		ManagedAttribute getter =_				(readMethod != null ? this.attributeSource.getManagedAttribute(readMethod) : null)__		ManagedAttribute setter =_				(writeMethod != null ? this.attributeSource.getManagedAttribute(writeMethod) : null)___		if (getter != null && StringUtils.hasText(getter.getDescription())) {_			return getter.getDescription()__		}_		else if (setter != null && StringUtils.hasText(setter.getDescription())) {_			return setter.getDescription()__		}__		ManagedMetric metric = (readMethod != null ? this.attributeSource.getManagedMetric(readMethod) : null)__		if (metric != null && StringUtils.hasText(metric.getDescription())) {_			return metric.getDescription()__		}__		return propertyDescriptor.getDisplayName()__	};creates,a,description,for,the,attribute,corresponding,to,this,property,descriptor,attempts,to,create,the,description,using,metadata,from,either,the,getter,or,setter,attributes,otherwise,uses,the,property,name;override,protected,string,get,attribute,description,property,descriptor,property,descriptor,string,bean,key,method,read,method,property,descriptor,get,read,method,method,write,method,property,descriptor,get,write,method,managed,attribute,getter,read,method,null,this,attribute,source,get,managed,attribute,read,method,null,managed,attribute,setter,write,method,null,this,attribute,source,get,managed,attribute,write,method,null,if,getter,null,string,utils,has,text,getter,get,description,return,getter,get,description,else,if,setter,null,string,utils,has,text,setter,get,description,return,setter,get,description,managed,metric,metric,read,method,null,this,attribute,source,get,managed,metric,read,method,null,if,metric,null,string,utils,has,text,metric,get,description,return,metric,get,description,return,property,descriptor,get,display,name
MetadataMBeanInfoAssembler -> @Override 	protected String getAttributeDescription(PropertyDescriptor propertyDescriptor, String beanKey);1498780456;Creates a description for the attribute corresponding to this property_descriptor. Attempts to create the description using metadata from either_the getter or setter attributes, otherwise uses the property name.;@Override_	protected String getAttributeDescription(PropertyDescriptor propertyDescriptor, String beanKey) {_		Method readMethod = propertyDescriptor.getReadMethod()__		Method writeMethod = propertyDescriptor.getWriteMethod()___		ManagedAttribute getter =_				(readMethod != null ? obtainAttributeSource().getManagedAttribute(readMethod) : null)__		ManagedAttribute setter =_				(writeMethod != null ? obtainAttributeSource().getManagedAttribute(writeMethod) : null)___		if (getter != null && StringUtils.hasText(getter.getDescription())) {_			return getter.getDescription()__		}_		else if (setter != null && StringUtils.hasText(setter.getDescription())) {_			return setter.getDescription()__		}__		ManagedMetric metric = (readMethod != null ? obtainAttributeSource().getManagedMetric(readMethod) : null)__		if (metric != null && StringUtils.hasText(metric.getDescription())) {_			return metric.getDescription()__		}__		return propertyDescriptor.getDisplayName()__	};creates,a,description,for,the,attribute,corresponding,to,this,property,descriptor,attempts,to,create,the,description,using,metadata,from,either,the,getter,or,setter,attributes,otherwise,uses,the,property,name;override,protected,string,get,attribute,description,property,descriptor,property,descriptor,string,bean,key,method,read,method,property,descriptor,get,read,method,method,write,method,property,descriptor,get,write,method,managed,attribute,getter,read,method,null,obtain,attribute,source,get,managed,attribute,read,method,null,managed,attribute,setter,write,method,null,obtain,attribute,source,get,managed,attribute,write,method,null,if,getter,null,string,utils,has,text,getter,get,description,return,getter,get,description,else,if,setter,null,string,utils,has,text,setter,get,description,return,setter,get,description,managed,metric,metric,read,method,null,obtain,attribute,source,get,managed,metric,read,method,null,if,metric,null,string,utils,has,text,metric,get,description,return,metric,get,description,return,property,descriptor,get,display,name
MetadataMBeanInfoAssembler -> @Override 	protected String getAttributeDescription(PropertyDescriptor propertyDescriptor, String beanKey);1500495740;Creates a description for the attribute corresponding to this property_descriptor. Attempts to create the description using metadata from either_the getter or setter attributes, otherwise uses the property name.;@Override_	protected String getAttributeDescription(PropertyDescriptor propertyDescriptor, String beanKey) {_		Method readMethod = propertyDescriptor.getReadMethod()__		Method writeMethod = propertyDescriptor.getWriteMethod()___		ManagedAttribute getter =_				(readMethod != null ? obtainAttributeSource().getManagedAttribute(readMethod) : null)__		ManagedAttribute setter =_				(writeMethod != null ? obtainAttributeSource().getManagedAttribute(writeMethod) : null)___		if (getter != null && StringUtils.hasText(getter.getDescription())) {_			return getter.getDescription()__		}_		else if (setter != null && StringUtils.hasText(setter.getDescription())) {_			return setter.getDescription()__		}__		ManagedMetric metric = (readMethod != null ? obtainAttributeSource().getManagedMetric(readMethod) : null)__		if (metric != null && StringUtils.hasText(metric.getDescription())) {_			return metric.getDescription()__		}__		return propertyDescriptor.getDisplayName()__	};creates,a,description,for,the,attribute,corresponding,to,this,property,descriptor,attempts,to,create,the,description,using,metadata,from,either,the,getter,or,setter,attributes,otherwise,uses,the,property,name;override,protected,string,get,attribute,description,property,descriptor,property,descriptor,string,bean,key,method,read,method,property,descriptor,get,read,method,method,write,method,property,descriptor,get,write,method,managed,attribute,getter,read,method,null,obtain,attribute,source,get,managed,attribute,read,method,null,managed,attribute,setter,write,method,null,obtain,attribute,source,get,managed,attribute,write,method,null,if,getter,null,string,utils,has,text,getter,get,description,return,getter,get,description,else,if,setter,null,string,utils,has,text,setter,get,description,return,setter,get,description,managed,metric,metric,read,method,null,obtain,attribute,source,get,managed,metric,read,method,null,if,metric,null,string,utils,has,text,metric,get,description,return,metric,get,description,return,property,descriptor,get,display,name
MetadataMBeanInfoAssembler -> @Override 	protected String getAttributeDescription(PropertyDescriptor propertyDescriptor, String beanKey);1520529117;Creates a description for the attribute corresponding to this property_descriptor. Attempts to create the description using metadata from either_the getter or setter attributes, otherwise uses the property name.;@Override_	protected String getAttributeDescription(PropertyDescriptor propertyDescriptor, String beanKey) {_		Method readMethod = propertyDescriptor.getReadMethod()__		Method writeMethod = propertyDescriptor.getWriteMethod()___		ManagedAttribute getter =_				(readMethod != null ? obtainAttributeSource().getManagedAttribute(readMethod) : null)__		ManagedAttribute setter =_				(writeMethod != null ? obtainAttributeSource().getManagedAttribute(writeMethod) : null)___		if (getter != null && StringUtils.hasText(getter.getDescription())) {_			return getter.getDescription()__		}_		else if (setter != null && StringUtils.hasText(setter.getDescription())) {_			return setter.getDescription()__		}__		ManagedMetric metric = (readMethod != null ? obtainAttributeSource().getManagedMetric(readMethod) : null)__		if (metric != null && StringUtils.hasText(metric.getDescription())) {_			return metric.getDescription()__		}__		return propertyDescriptor.getDisplayName()__	};creates,a,description,for,the,attribute,corresponding,to,this,property,descriptor,attempts,to,create,the,description,using,metadata,from,either,the,getter,or,setter,attributes,otherwise,uses,the,property,name;override,protected,string,get,attribute,description,property,descriptor,property,descriptor,string,bean,key,method,read,method,property,descriptor,get,read,method,method,write,method,property,descriptor,get,write,method,managed,attribute,getter,read,method,null,obtain,attribute,source,get,managed,attribute,read,method,null,managed,attribute,setter,write,method,null,obtain,attribute,source,get,managed,attribute,write,method,null,if,getter,null,string,utils,has,text,getter,get,description,return,getter,get,description,else,if,setter,null,string,utils,has,text,setter,get,description,return,setter,get,description,managed,metric,metric,read,method,null,obtain,attribute,source,get,managed,metric,read,method,null,if,metric,null,string,utils,has,text,metric,get,description,return,metric,get,description,return,property,descriptor,get,display,name
MetadataMBeanInfoAssembler -> public void setAttributeSource(JmxAttributeSource attributeSource);1328020251;Set the <code>JmxAttributeSource</code> implementation to use for_reading the metadata from the bean class._@see org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource;public void setAttributeSource(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};set,the,code,jmx,attribute,source,code,implementation,to,use,for,reading,the,metadata,from,the,bean,class,see,org,springframework,jmx,export,annotation,annotation,jmx,attribute,source;public,void,set,attribute,source,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataMBeanInfoAssembler -> public void setAttributeSource(JmxAttributeSource attributeSource);1356735495;Set the {@code JmxAttributeSource} implementation to use for_reading the metadata from the bean class._@see org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource;public void setAttributeSource(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};set,the,code,jmx,attribute,source,implementation,to,use,for,reading,the,metadata,from,the,bean,class,see,org,springframework,jmx,export,annotation,annotation,jmx,attribute,source;public,void,set,attribute,source,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataMBeanInfoAssembler -> public void setAttributeSource(JmxAttributeSource attributeSource);1357119239;Set the {@code JmxAttributeSource} implementation to use for_reading the metadata from the bean class._@see org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource;public void setAttributeSource(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};set,the,code,jmx,attribute,source,implementation,to,use,for,reading,the,metadata,from,the,bean,class,see,org,springframework,jmx,export,annotation,annotation,jmx,attribute,source;public,void,set,attribute,source,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataMBeanInfoAssembler -> public void setAttributeSource(JmxAttributeSource attributeSource);1362408075;Set the {@code JmxAttributeSource} implementation to use for_reading the metadata from the bean class._@see org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource;public void setAttributeSource(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};set,the,code,jmx,attribute,source,implementation,to,use,for,reading,the,metadata,from,the,bean,class,see,org,springframework,jmx,export,annotation,annotation,jmx,attribute,source;public,void,set,attribute,source,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataMBeanInfoAssembler -> public void setAttributeSource(JmxAttributeSource attributeSource);1368482696;Set the {@code JmxAttributeSource} implementation to use for_reading the metadata from the bean class._@see org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource;public void setAttributeSource(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};set,the,code,jmx,attribute,source,implementation,to,use,for,reading,the,metadata,from,the,bean,class,see,org,springframework,jmx,export,annotation,annotation,jmx,attribute,source;public,void,set,attribute,source,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataMBeanInfoAssembler -> public void setAttributeSource(JmxAttributeSource attributeSource);1385412762;Set the {@code JmxAttributeSource} implementation to use for_reading the metadata from the bean class._@see org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource;public void setAttributeSource(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};set,the,code,jmx,attribute,source,implementation,to,use,for,reading,the,metadata,from,the,bean,class,see,org,springframework,jmx,export,annotation,annotation,jmx,attribute,source;public,void,set,attribute,source,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataMBeanInfoAssembler -> public void setAttributeSource(JmxAttributeSource attributeSource);1405696918;Set the {@code JmxAttributeSource} implementation to use for_reading the metadata from the bean class._@see org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource;public void setAttributeSource(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};set,the,code,jmx,attribute,source,implementation,to,use,for,reading,the,metadata,from,the,bean,class,see,org,springframework,jmx,export,annotation,annotation,jmx,attribute,source;public,void,set,attribute,source,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataMBeanInfoAssembler -> public void setAttributeSource(JmxAttributeSource attributeSource);1496837955;Set the {@code JmxAttributeSource} implementation to use for_reading the metadata from the bean class._@see org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource;public void setAttributeSource(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};set,the,code,jmx,attribute,source,implementation,to,use,for,reading,the,metadata,from,the,bean,class,see,org,springframework,jmx,export,annotation,annotation,jmx,attribute,source;public,void,set,attribute,source,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataMBeanInfoAssembler -> public void setAttributeSource(JmxAttributeSource attributeSource);1498780456;Set the {@code JmxAttributeSource} implementation to use for_reading the metadata from the bean class._@see org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource;public void setAttributeSource(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};set,the,code,jmx,attribute,source,implementation,to,use,for,reading,the,metadata,from,the,bean,class,see,org,springframework,jmx,export,annotation,annotation,jmx,attribute,source;public,void,set,attribute,source,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataMBeanInfoAssembler -> public void setAttributeSource(JmxAttributeSource attributeSource);1500495740;Set the {@code JmxAttributeSource} implementation to use for_reading the metadata from the bean class._@see org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource;public void setAttributeSource(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};set,the,code,jmx,attribute,source,implementation,to,use,for,reading,the,metadata,from,the,bean,class,see,org,springframework,jmx,export,annotation,annotation,jmx,attribute,source;public,void,set,attribute,source,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataMBeanInfoAssembler -> public void setAttributeSource(JmxAttributeSource attributeSource);1520529117;Set the {@code JmxAttributeSource} implementation to use for_reading the metadata from the bean class._@see org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource;public void setAttributeSource(JmxAttributeSource attributeSource) {_		Assert.notNull(attributeSource, "JmxAttributeSource must not be null")__		this.attributeSource = attributeSource__	};set,the,code,jmx,attribute,source,implementation,to,use,for,reading,the,metadata,from,the,bean,class,see,org,springframework,jmx,export,annotation,annotation,jmx,attribute,source;public,void,set,attribute,source,jmx,attribute,source,attribute,source,assert,not,null,attribute,source,jmx,attribute,source,must,not,be,null,this,attribute,source,attribute,source
MetadataMBeanInfoAssembler -> @Nullable 	private String resolveStringDescriptor(@Nullable String getter, @Nullable String setter);1500495740;Locates the value of a descriptor based on values attached_to both the getter and setter methods. If both have values_supplied then the value attached to the getter is preferred._The supplied default value is used to check to see if the value_associated with the getter has changed from the default._@param getter the String value associated with the get method_@param setter the String value associated with the set method_@return the appropriate String to use as the value for the descriptor;@Nullable_	private String resolveStringDescriptor(@Nullable String getter, @Nullable String setter) {_		return (StringUtils.hasLength(getter) ? getter : setter)__	};locates,the,value,of,a,descriptor,based,on,values,attached,to,both,the,getter,and,setter,methods,if,both,have,values,supplied,then,the,value,attached,to,the,getter,is,preferred,the,supplied,default,value,is,used,to,check,to,see,if,the,value,associated,with,the,getter,has,changed,from,the,default,param,getter,the,string,value,associated,with,the,get,method,param,setter,the,string,value,associated,with,the,set,method,return,the,appropriate,string,to,use,as,the,value,for,the,descriptor;nullable,private,string,resolve,string,descriptor,nullable,string,getter,nullable,string,setter,return,string,utils,has,length,getter,getter,setter
MetadataMBeanInfoAssembler -> @Nullable 	private String resolveStringDescriptor(@Nullable String getter, @Nullable String setter);1520529117;Locates the value of a descriptor based on values attached_to both the getter and setter methods. If both have values_supplied then the value attached to the getter is preferred._The supplied default value is used to check to see if the value_associated with the getter has changed from the default._@param getter the String value associated with the get method_@param setter the String value associated with the set method_@return the appropriate String to use as the value for the descriptor;@Nullable_	private String resolveStringDescriptor(@Nullable String getter, @Nullable String setter) {_		return (StringUtils.hasLength(getter) ? getter : setter)__	};locates,the,value,of,a,descriptor,based,on,values,attached,to,both,the,getter,and,setter,methods,if,both,have,values,supplied,then,the,value,attached,to,the,getter,is,preferred,the,supplied,default,value,is,used,to,check,to,see,if,the,value,associated,with,the,getter,has,changed,from,the,default,param,getter,the,string,value,associated,with,the,get,method,param,setter,the,string,value,associated,with,the,set,method,return,the,appropriate,string,to,use,as,the,value,for,the,descriptor;nullable,private,string,resolve,string,descriptor,nullable,string,getter,nullable,string,setter,return,string,utils,has,length,getter,getter,setter
MetadataMBeanInfoAssembler -> @Override 	protected void populateMBeanDescriptor(Descriptor desc, Object managedBean, String beanKey);1328020251;Adds descriptor fields from the <code>ManagedResource</code> attribute_to the MBean descriptor. Specifically, adds the <code>currencyTimeLimit</code>,_<code>persistPolicy</code>, <code>persistPeriod</code>, <code>persistLocation</code>_and <code>persistName</code> descriptor fields if they are present in the metadata.;@Override_	protected void populateMBeanDescriptor(Descriptor desc, Object managedBean, String beanKey) {_		ManagedResource mr = this.attributeSource.getManagedResource(getClassToExpose(managedBean))__		if (mr == null) {_			throw new InvalidMetadataException(_					"No ManagedResource attribute found for class: " + getClassToExpose(managedBean))__		}__		applyCurrencyTimeLimit(desc, mr.getCurrencyTimeLimit())___		if (mr.isLog()) {_			desc.setField(FIELD_LOG, "true")__		}_		if (StringUtils.hasLength(mr.getLogFile())) {_			desc.setField(FIELD_LOG_FILE, mr.getLogFile())__		}__		if (StringUtils.hasLength(mr.getPersistPolicy())) {_			desc.setField(FIELD_PERSIST_POLICY, mr.getPersistPolicy())__		}_		if (mr.getPersistPeriod() >= 0) {_			desc.setField(FIELD_PERSIST_PERIOD, Integer.toString(mr.getPersistPeriod()))__		}_		if (StringUtils.hasLength(mr.getPersistName())) {_			desc.setField(FIELD_PERSIST_NAME, mr.getPersistName())__		}_		if (StringUtils.hasLength(mr.getPersistLocation())) {_			desc.setField(FIELD_PERSIST_LOCATION, mr.getPersistLocation())__		}_	};adds,descriptor,fields,from,the,code,managed,resource,code,attribute,to,the,mbean,descriptor,specifically,adds,the,code,currency,time,limit,code,code,persist,policy,code,code,persist,period,code,code,persist,location,code,and,code,persist,name,code,descriptor,fields,if,they,are,present,in,the,metadata;override,protected,void,populate,mbean,descriptor,descriptor,desc,object,managed,bean,string,bean,key,managed,resource,mr,this,attribute,source,get,managed,resource,get,class,to,expose,managed,bean,if,mr,null,throw,new,invalid,metadata,exception,no,managed,resource,attribute,found,for,class,get,class,to,expose,managed,bean,apply,currency,time,limit,desc,mr,get,currency,time,limit,if,mr,is,log,desc,set,field,true,if,string,utils,has,length,mr,get,log,file,desc,set,field,mr,get,log,file,if,string,utils,has,length,mr,get,persist,policy,desc,set,field,mr,get,persist,policy,if,mr,get,persist,period,0,desc,set,field,integer,to,string,mr,get,persist,period,if,string,utils,has,length,mr,get,persist,name,desc,set,field,mr,get,persist,name,if,string,utils,has,length,mr,get,persist,location,desc,set,field,mr,get,persist,location
MetadataMBeanInfoAssembler -> @Override 	protected void populateMBeanDescriptor(Descriptor desc, Object managedBean, String beanKey);1356735495;Adds descriptor fields from the {@code ManagedResource} attribute_to the MBean descriptor. Specifically, adds the {@code currencyTimeLimit},_{@code persistPolicy}, {@code persistPeriod}, {@code persistLocation}_and {@code persistName} descriptor fields if they are present in the metadata.;@Override_	protected void populateMBeanDescriptor(Descriptor desc, Object managedBean, String beanKey) {_		ManagedResource mr = this.attributeSource.getManagedResource(getClassToExpose(managedBean))__		if (mr == null) {_			throw new InvalidMetadataException(_					"No ManagedResource attribute found for class: " + getClassToExpose(managedBean))__		}__		applyCurrencyTimeLimit(desc, mr.getCurrencyTimeLimit())___		if (mr.isLog()) {_			desc.setField(FIELD_LOG, "true")__		}_		if (StringUtils.hasLength(mr.getLogFile())) {_			desc.setField(FIELD_LOG_FILE, mr.getLogFile())__		}__		if (StringUtils.hasLength(mr.getPersistPolicy())) {_			desc.setField(FIELD_PERSIST_POLICY, mr.getPersistPolicy())__		}_		if (mr.getPersistPeriod() >= 0) {_			desc.setField(FIELD_PERSIST_PERIOD, Integer.toString(mr.getPersistPeriod()))__		}_		if (StringUtils.hasLength(mr.getPersistName())) {_			desc.setField(FIELD_PERSIST_NAME, mr.getPersistName())__		}_		if (StringUtils.hasLength(mr.getPersistLocation())) {_			desc.setField(FIELD_PERSIST_LOCATION, mr.getPersistLocation())__		}_	};adds,descriptor,fields,from,the,code,managed,resource,attribute,to,the,mbean,descriptor,specifically,adds,the,code,currency,time,limit,code,persist,policy,code,persist,period,code,persist,location,and,code,persist,name,descriptor,fields,if,they,are,present,in,the,metadata;override,protected,void,populate,mbean,descriptor,descriptor,desc,object,managed,bean,string,bean,key,managed,resource,mr,this,attribute,source,get,managed,resource,get,class,to,expose,managed,bean,if,mr,null,throw,new,invalid,metadata,exception,no,managed,resource,attribute,found,for,class,get,class,to,expose,managed,bean,apply,currency,time,limit,desc,mr,get,currency,time,limit,if,mr,is,log,desc,set,field,true,if,string,utils,has,length,mr,get,log,file,desc,set,field,mr,get,log,file,if,string,utils,has,length,mr,get,persist,policy,desc,set,field,mr,get,persist,policy,if,mr,get,persist,period,0,desc,set,field,integer,to,string,mr,get,persist,period,if,string,utils,has,length,mr,get,persist,name,desc,set,field,mr,get,persist,name,if,string,utils,has,length,mr,get,persist,location,desc,set,field,mr,get,persist,location
MetadataMBeanInfoAssembler -> @Override 	protected void populateMBeanDescriptor(Descriptor desc, Object managedBean, String beanKey);1357119239;Adds descriptor fields from the {@code ManagedResource} attribute_to the MBean descriptor. Specifically, adds the {@code currencyTimeLimit},_{@code persistPolicy}, {@code persistPeriod}, {@code persistLocation}_and {@code persistName} descriptor fields if they are present in the metadata.;@Override_	protected void populateMBeanDescriptor(Descriptor desc, Object managedBean, String beanKey) {_		ManagedResource mr = this.attributeSource.getManagedResource(getClassToExpose(managedBean))__		if (mr == null) {_			throw new InvalidMetadataException(_					"No ManagedResource attribute found for class: " + getClassToExpose(managedBean))__		}__		applyCurrencyTimeLimit(desc, mr.getCurrencyTimeLimit())___		if (mr.isLog()) {_			desc.setField(FIELD_LOG, "true")__		}_		if (StringUtils.hasLength(mr.getLogFile())) {_			desc.setField(FIELD_LOG_FILE, mr.getLogFile())__		}__		if (StringUtils.hasLength(mr.getPersistPolicy())) {_			desc.setField(FIELD_PERSIST_POLICY, mr.getPersistPolicy())__		}_		if (mr.getPersistPeriod() >= 0) {_			desc.setField(FIELD_PERSIST_PERIOD, Integer.toString(mr.getPersistPeriod()))__		}_		if (StringUtils.hasLength(mr.getPersistName())) {_			desc.setField(FIELD_PERSIST_NAME, mr.getPersistName())__		}_		if (StringUtils.hasLength(mr.getPersistLocation())) {_			desc.setField(FIELD_PERSIST_LOCATION, mr.getPersistLocation())__		}_	};adds,descriptor,fields,from,the,code,managed,resource,attribute,to,the,mbean,descriptor,specifically,adds,the,code,currency,time,limit,code,persist,policy,code,persist,period,code,persist,location,and,code,persist,name,descriptor,fields,if,they,are,present,in,the,metadata;override,protected,void,populate,mbean,descriptor,descriptor,desc,object,managed,bean,string,bean,key,managed,resource,mr,this,attribute,source,get,managed,resource,get,class,to,expose,managed,bean,if,mr,null,throw,new,invalid,metadata,exception,no,managed,resource,attribute,found,for,class,get,class,to,expose,managed,bean,apply,currency,time,limit,desc,mr,get,currency,time,limit,if,mr,is,log,desc,set,field,true,if,string,utils,has,length,mr,get,log,file,desc,set,field,mr,get,log,file,if,string,utils,has,length,mr,get,persist,policy,desc,set,field,mr,get,persist,policy,if,mr,get,persist,period,0,desc,set,field,integer,to,string,mr,get,persist,period,if,string,utils,has,length,mr,get,persist,name,desc,set,field,mr,get,persist,name,if,string,utils,has,length,mr,get,persist,location,desc,set,field,mr,get,persist,location
MetadataMBeanInfoAssembler -> @Override 	protected void populateMBeanDescriptor(Descriptor desc, Object managedBean, String beanKey);1362408075;Adds descriptor fields from the {@code ManagedResource} attribute_to the MBean descriptor. Specifically, adds the {@code currencyTimeLimit},_{@code persistPolicy}, {@code persistPeriod}, {@code persistLocation}_and {@code persistName} descriptor fields if they are present in the metadata.;@Override_	protected void populateMBeanDescriptor(Descriptor desc, Object managedBean, String beanKey) {_		ManagedResource mr = this.attributeSource.getManagedResource(getClassToExpose(managedBean))__		if (mr == null) {_			throw new InvalidMetadataException(_					"No ManagedResource attribute found for class: " + getClassToExpose(managedBean))__		}__		applyCurrencyTimeLimit(desc, mr.getCurrencyTimeLimit())___		if (mr.isLog()) {_			desc.setField(FIELD_LOG, "true")__		}_		if (StringUtils.hasLength(mr.getLogFile())) {_			desc.setField(FIELD_LOG_FILE, mr.getLogFile())__		}__		if (StringUtils.hasLength(mr.getPersistPolicy())) {_			desc.setField(FIELD_PERSIST_POLICY, mr.getPersistPolicy())__		}_		if (mr.getPersistPeriod() >= 0) {_			desc.setField(FIELD_PERSIST_PERIOD, Integer.toString(mr.getPersistPeriod()))__		}_		if (StringUtils.hasLength(mr.getPersistName())) {_			desc.setField(FIELD_PERSIST_NAME, mr.getPersistName())__		}_		if (StringUtils.hasLength(mr.getPersistLocation())) {_			desc.setField(FIELD_PERSIST_LOCATION, mr.getPersistLocation())__		}_	};adds,descriptor,fields,from,the,code,managed,resource,attribute,to,the,mbean,descriptor,specifically,adds,the,code,currency,time,limit,code,persist,policy,code,persist,period,code,persist,location,and,code,persist,name,descriptor,fields,if,they,are,present,in,the,metadata;override,protected,void,populate,mbean,descriptor,descriptor,desc,object,managed,bean,string,bean,key,managed,resource,mr,this,attribute,source,get,managed,resource,get,class,to,expose,managed,bean,if,mr,null,throw,new,invalid,metadata,exception,no,managed,resource,attribute,found,for,class,get,class,to,expose,managed,bean,apply,currency,time,limit,desc,mr,get,currency,time,limit,if,mr,is,log,desc,set,field,true,if,string,utils,has,length,mr,get,log,file,desc,set,field,mr,get,log,file,if,string,utils,has,length,mr,get,persist,policy,desc,set,field,mr,get,persist,policy,if,mr,get,persist,period,0,desc,set,field,integer,to,string,mr,get,persist,period,if,string,utils,has,length,mr,get,persist,name,desc,set,field,mr,get,persist,name,if,string,utils,has,length,mr,get,persist,location,desc,set,field,mr,get,persist,location
MetadataMBeanInfoAssembler -> @Override 	protected void populateMBeanDescriptor(Descriptor desc, Object managedBean, String beanKey);1368482696;Adds descriptor fields from the {@code ManagedResource} attribute_to the MBean descriptor. Specifically, adds the {@code currencyTimeLimit},_{@code persistPolicy}, {@code persistPeriod}, {@code persistLocation}_and {@code persistName} descriptor fields if they are present in the metadata.;@Override_	protected void populateMBeanDescriptor(Descriptor desc, Object managedBean, String beanKey) {_		ManagedResource mr = this.attributeSource.getManagedResource(getClassToExpose(managedBean))__		if (mr == null) {_			throw new InvalidMetadataException(_					"No ManagedResource attribute found for class: " + getClassToExpose(managedBean))__		}__		applyCurrencyTimeLimit(desc, mr.getCurrencyTimeLimit())___		if (mr.isLog()) {_			desc.setField(FIELD_LOG, "true")__		}_		if (StringUtils.hasLength(mr.getLogFile())) {_			desc.setField(FIELD_LOG_FILE, mr.getLogFile())__		}__		if (StringUtils.hasLength(mr.getPersistPolicy())) {_			desc.setField(FIELD_PERSIST_POLICY, mr.getPersistPolicy())__		}_		if (mr.getPersistPeriod() >= 0) {_			desc.setField(FIELD_PERSIST_PERIOD, Integer.toString(mr.getPersistPeriod()))__		}_		if (StringUtils.hasLength(mr.getPersistName())) {_			desc.setField(FIELD_PERSIST_NAME, mr.getPersistName())__		}_		if (StringUtils.hasLength(mr.getPersistLocation())) {_			desc.setField(FIELD_PERSIST_LOCATION, mr.getPersistLocation())__		}_	};adds,descriptor,fields,from,the,code,managed,resource,attribute,to,the,mbean,descriptor,specifically,adds,the,code,currency,time,limit,code,persist,policy,code,persist,period,code,persist,location,and,code,persist,name,descriptor,fields,if,they,are,present,in,the,metadata;override,protected,void,populate,mbean,descriptor,descriptor,desc,object,managed,bean,string,bean,key,managed,resource,mr,this,attribute,source,get,managed,resource,get,class,to,expose,managed,bean,if,mr,null,throw,new,invalid,metadata,exception,no,managed,resource,attribute,found,for,class,get,class,to,expose,managed,bean,apply,currency,time,limit,desc,mr,get,currency,time,limit,if,mr,is,log,desc,set,field,true,if,string,utils,has,length,mr,get,log,file,desc,set,field,mr,get,log,file,if,string,utils,has,length,mr,get,persist,policy,desc,set,field,mr,get,persist,policy,if,mr,get,persist,period,0,desc,set,field,integer,to,string,mr,get,persist,period,if,string,utils,has,length,mr,get,persist,name,desc,set,field,mr,get,persist,name,if,string,utils,has,length,mr,get,persist,location,desc,set,field,mr,get,persist,location
MetadataMBeanInfoAssembler -> @Override 	protected void populateMBeanDescriptor(Descriptor desc, Object managedBean, String beanKey);1385412762;Adds descriptor fields from the {@code ManagedResource} attribute_to the MBean descriptor. Specifically, adds the {@code currencyTimeLimit},_{@code persistPolicy}, {@code persistPeriod}, {@code persistLocation}_and {@code persistName} descriptor fields if they are present in the metadata.;@Override_	protected void populateMBeanDescriptor(Descriptor desc, Object managedBean, String beanKey) {_		ManagedResource mr = this.attributeSource.getManagedResource(getClassToExpose(managedBean))__		if (mr == null) {_			throw new InvalidMetadataException(_					"No ManagedResource attribute found for class: " + getClassToExpose(managedBean))__		}__		applyCurrencyTimeLimit(desc, mr.getCurrencyTimeLimit())___		if (mr.isLog()) {_			desc.setField(FIELD_LOG, "true")__		}_		if (StringUtils.hasLength(mr.getLogFile())) {_			desc.setField(FIELD_LOG_FILE, mr.getLogFile())__		}__		if (StringUtils.hasLength(mr.getPersistPolicy())) {_			desc.setField(FIELD_PERSIST_POLICY, mr.getPersistPolicy())__		}_		if (mr.getPersistPeriod() >= 0) {_			desc.setField(FIELD_PERSIST_PERIOD, Integer.toString(mr.getPersistPeriod()))__		}_		if (StringUtils.hasLength(mr.getPersistName())) {_			desc.setField(FIELD_PERSIST_NAME, mr.getPersistName())__		}_		if (StringUtils.hasLength(mr.getPersistLocation())) {_			desc.setField(FIELD_PERSIST_LOCATION, mr.getPersistLocation())__		}_	};adds,descriptor,fields,from,the,code,managed,resource,attribute,to,the,mbean,descriptor,specifically,adds,the,code,currency,time,limit,code,persist,policy,code,persist,period,code,persist,location,and,code,persist,name,descriptor,fields,if,they,are,present,in,the,metadata;override,protected,void,populate,mbean,descriptor,descriptor,desc,object,managed,bean,string,bean,key,managed,resource,mr,this,attribute,source,get,managed,resource,get,class,to,expose,managed,bean,if,mr,null,throw,new,invalid,metadata,exception,no,managed,resource,attribute,found,for,class,get,class,to,expose,managed,bean,apply,currency,time,limit,desc,mr,get,currency,time,limit,if,mr,is,log,desc,set,field,true,if,string,utils,has,length,mr,get,log,file,desc,set,field,mr,get,log,file,if,string,utils,has,length,mr,get,persist,policy,desc,set,field,mr,get,persist,policy,if,mr,get,persist,period,0,desc,set,field,integer,to,string,mr,get,persist,period,if,string,utils,has,length,mr,get,persist,name,desc,set,field,mr,get,persist,name,if,string,utils,has,length,mr,get,persist,location,desc,set,field,mr,get,persist,location
MetadataMBeanInfoAssembler -> @Override 	protected void populateMBeanDescriptor(Descriptor desc, Object managedBean, String beanKey);1405696918;Adds descriptor fields from the {@code ManagedResource} attribute_to the MBean descriptor. Specifically, adds the {@code currencyTimeLimit},_{@code persistPolicy}, {@code persistPeriod}, {@code persistLocation}_and {@code persistName} descriptor fields if they are present in the metadata.;@Override_	protected void populateMBeanDescriptor(Descriptor desc, Object managedBean, String beanKey) {_		ManagedResource mr = this.attributeSource.getManagedResource(getClassToExpose(managedBean))__		if (mr == null) {_			throw new InvalidMetadataException(_					"No ManagedResource attribute found for class: " + getClassToExpose(managedBean))__		}__		applyCurrencyTimeLimit(desc, mr.getCurrencyTimeLimit())___		if (mr.isLog()) {_			desc.setField(FIELD_LOG, "true")__		}_		if (StringUtils.hasLength(mr.getLogFile())) {_			desc.setField(FIELD_LOG_FILE, mr.getLogFile())__		}__		if (StringUtils.hasLength(mr.getPersistPolicy())) {_			desc.setField(FIELD_PERSIST_POLICY, mr.getPersistPolicy())__		}_		if (mr.getPersistPeriod() >= 0) {_			desc.setField(FIELD_PERSIST_PERIOD, Integer.toString(mr.getPersistPeriod()))__		}_		if (StringUtils.hasLength(mr.getPersistName())) {_			desc.setField(FIELD_PERSIST_NAME, mr.getPersistName())__		}_		if (StringUtils.hasLength(mr.getPersistLocation())) {_			desc.setField(FIELD_PERSIST_LOCATION, mr.getPersistLocation())__		}_	};adds,descriptor,fields,from,the,code,managed,resource,attribute,to,the,mbean,descriptor,specifically,adds,the,code,currency,time,limit,code,persist,policy,code,persist,period,code,persist,location,and,code,persist,name,descriptor,fields,if,they,are,present,in,the,metadata;override,protected,void,populate,mbean,descriptor,descriptor,desc,object,managed,bean,string,bean,key,managed,resource,mr,this,attribute,source,get,managed,resource,get,class,to,expose,managed,bean,if,mr,null,throw,new,invalid,metadata,exception,no,managed,resource,attribute,found,for,class,get,class,to,expose,managed,bean,apply,currency,time,limit,desc,mr,get,currency,time,limit,if,mr,is,log,desc,set,field,true,if,string,utils,has,length,mr,get,log,file,desc,set,field,mr,get,log,file,if,string,utils,has,length,mr,get,persist,policy,desc,set,field,mr,get,persist,policy,if,mr,get,persist,period,0,desc,set,field,integer,to,string,mr,get,persist,period,if,string,utils,has,length,mr,get,persist,name,desc,set,field,mr,get,persist,name,if,string,utils,has,length,mr,get,persist,location,desc,set,field,mr,get,persist,location
MetadataMBeanInfoAssembler -> @Override 	protected void populateMBeanDescriptor(Descriptor desc, Object managedBean, String beanKey);1496837955;Adds descriptor fields from the {@code ManagedResource} attribute_to the MBean descriptor. Specifically, adds the {@code currencyTimeLimit},_{@code persistPolicy}, {@code persistPeriod}, {@code persistLocation}_and {@code persistName} descriptor fields if they are present in the metadata.;@Override_	protected void populateMBeanDescriptor(Descriptor desc, Object managedBean, String beanKey) {_		ManagedResource mr = this.attributeSource.getManagedResource(getClassToExpose(managedBean))__		if (mr == null) {_			throw new InvalidMetadataException(_					"No ManagedResource attribute found for class: " + getClassToExpose(managedBean))__		}__		applyCurrencyTimeLimit(desc, mr.getCurrencyTimeLimit())___		if (mr.isLog()) {_			desc.setField(FIELD_LOG, "true")__		}_		if (StringUtils.hasLength(mr.getLogFile())) {_			desc.setField(FIELD_LOG_FILE, mr.getLogFile())__		}__		if (StringUtils.hasLength(mr.getPersistPolicy())) {_			desc.setField(FIELD_PERSIST_POLICY, mr.getPersistPolicy())__		}_		if (mr.getPersistPeriod() >= 0) {_			desc.setField(FIELD_PERSIST_PERIOD, Integer.toString(mr.getPersistPeriod()))__		}_		if (StringUtils.hasLength(mr.getPersistName())) {_			desc.setField(FIELD_PERSIST_NAME, mr.getPersistName())__		}_		if (StringUtils.hasLength(mr.getPersistLocation())) {_			desc.setField(FIELD_PERSIST_LOCATION, mr.getPersistLocation())__		}_	};adds,descriptor,fields,from,the,code,managed,resource,attribute,to,the,mbean,descriptor,specifically,adds,the,code,currency,time,limit,code,persist,policy,code,persist,period,code,persist,location,and,code,persist,name,descriptor,fields,if,they,are,present,in,the,metadata;override,protected,void,populate,mbean,descriptor,descriptor,desc,object,managed,bean,string,bean,key,managed,resource,mr,this,attribute,source,get,managed,resource,get,class,to,expose,managed,bean,if,mr,null,throw,new,invalid,metadata,exception,no,managed,resource,attribute,found,for,class,get,class,to,expose,managed,bean,apply,currency,time,limit,desc,mr,get,currency,time,limit,if,mr,is,log,desc,set,field,true,if,string,utils,has,length,mr,get,log,file,desc,set,field,mr,get,log,file,if,string,utils,has,length,mr,get,persist,policy,desc,set,field,mr,get,persist,policy,if,mr,get,persist,period,0,desc,set,field,integer,to,string,mr,get,persist,period,if,string,utils,has,length,mr,get,persist,name,desc,set,field,mr,get,persist,name,if,string,utils,has,length,mr,get,persist,location,desc,set,field,mr,get,persist,location
MetadataMBeanInfoAssembler -> @Override 	protected void populateMBeanDescriptor(Descriptor desc, Object managedBean, String beanKey);1498780456;Adds descriptor fields from the {@code ManagedResource} attribute_to the MBean descriptor. Specifically, adds the {@code currencyTimeLimit},_{@code persistPolicy}, {@code persistPeriod}, {@code persistLocation}_and {@code persistName} descriptor fields if they are present in the metadata.;@Override_	protected void populateMBeanDescriptor(Descriptor desc, Object managedBean, String beanKey) {_		ManagedResource mr = obtainAttributeSource().getManagedResource(getClassToExpose(managedBean))__		if (mr == null) {_			throw new InvalidMetadataException(_					"No ManagedResource attribute found for class: " + getClassToExpose(managedBean))__		}__		applyCurrencyTimeLimit(desc, mr.getCurrencyTimeLimit())___		if (mr.isLog()) {_			desc.setField(FIELD_LOG, "true")__		}_		if (StringUtils.hasLength(mr.getLogFile())) {_			desc.setField(FIELD_LOG_FILE, mr.getLogFile())__		}__		if (StringUtils.hasLength(mr.getPersistPolicy())) {_			desc.setField(FIELD_PERSIST_POLICY, mr.getPersistPolicy())__		}_		if (mr.getPersistPeriod() >= 0) {_			desc.setField(FIELD_PERSIST_PERIOD, Integer.toString(mr.getPersistPeriod()))__		}_		if (StringUtils.hasLength(mr.getPersistName())) {_			desc.setField(FIELD_PERSIST_NAME, mr.getPersistName())__		}_		if (StringUtils.hasLength(mr.getPersistLocation())) {_			desc.setField(FIELD_PERSIST_LOCATION, mr.getPersistLocation())__		}_	};adds,descriptor,fields,from,the,code,managed,resource,attribute,to,the,mbean,descriptor,specifically,adds,the,code,currency,time,limit,code,persist,policy,code,persist,period,code,persist,location,and,code,persist,name,descriptor,fields,if,they,are,present,in,the,metadata;override,protected,void,populate,mbean,descriptor,descriptor,desc,object,managed,bean,string,bean,key,managed,resource,mr,obtain,attribute,source,get,managed,resource,get,class,to,expose,managed,bean,if,mr,null,throw,new,invalid,metadata,exception,no,managed,resource,attribute,found,for,class,get,class,to,expose,managed,bean,apply,currency,time,limit,desc,mr,get,currency,time,limit,if,mr,is,log,desc,set,field,true,if,string,utils,has,length,mr,get,log,file,desc,set,field,mr,get,log,file,if,string,utils,has,length,mr,get,persist,policy,desc,set,field,mr,get,persist,policy,if,mr,get,persist,period,0,desc,set,field,integer,to,string,mr,get,persist,period,if,string,utils,has,length,mr,get,persist,name,desc,set,field,mr,get,persist,name,if,string,utils,has,length,mr,get,persist,location,desc,set,field,mr,get,persist,location
MetadataMBeanInfoAssembler -> @Override 	protected void populateMBeanDescriptor(Descriptor desc, Object managedBean, String beanKey);1500495740;Adds descriptor fields from the {@code ManagedResource} attribute_to the MBean descriptor. Specifically, adds the {@code currencyTimeLimit},_{@code persistPolicy}, {@code persistPeriod}, {@code persistLocation}_and {@code persistName} descriptor fields if they are present in the metadata.;@Override_	protected void populateMBeanDescriptor(Descriptor desc, Object managedBean, String beanKey) {_		ManagedResource mr = obtainAttributeSource().getManagedResource(getClassToExpose(managedBean))__		if (mr == null) {_			throw new InvalidMetadataException(_					"No ManagedResource attribute found for class: " + getClassToExpose(managedBean))__		}__		applyCurrencyTimeLimit(desc, mr.getCurrencyTimeLimit())___		if (mr.isLog()) {_			desc.setField(FIELD_LOG, "true")__		}_		if (StringUtils.hasLength(mr.getLogFile())) {_			desc.setField(FIELD_LOG_FILE, mr.getLogFile())__		}__		if (StringUtils.hasLength(mr.getPersistPolicy())) {_			desc.setField(FIELD_PERSIST_POLICY, mr.getPersistPolicy())__		}_		if (mr.getPersistPeriod() >= 0) {_			desc.setField(FIELD_PERSIST_PERIOD, Integer.toString(mr.getPersistPeriod()))__		}_		if (StringUtils.hasLength(mr.getPersistName())) {_			desc.setField(FIELD_PERSIST_NAME, mr.getPersistName())__		}_		if (StringUtils.hasLength(mr.getPersistLocation())) {_			desc.setField(FIELD_PERSIST_LOCATION, mr.getPersistLocation())__		}_	};adds,descriptor,fields,from,the,code,managed,resource,attribute,to,the,mbean,descriptor,specifically,adds,the,code,currency,time,limit,code,persist,policy,code,persist,period,code,persist,location,and,code,persist,name,descriptor,fields,if,they,are,present,in,the,metadata;override,protected,void,populate,mbean,descriptor,descriptor,desc,object,managed,bean,string,bean,key,managed,resource,mr,obtain,attribute,source,get,managed,resource,get,class,to,expose,managed,bean,if,mr,null,throw,new,invalid,metadata,exception,no,managed,resource,attribute,found,for,class,get,class,to,expose,managed,bean,apply,currency,time,limit,desc,mr,get,currency,time,limit,if,mr,is,log,desc,set,field,true,if,string,utils,has,length,mr,get,log,file,desc,set,field,mr,get,log,file,if,string,utils,has,length,mr,get,persist,policy,desc,set,field,mr,get,persist,policy,if,mr,get,persist,period,0,desc,set,field,integer,to,string,mr,get,persist,period,if,string,utils,has,length,mr,get,persist,name,desc,set,field,mr,get,persist,name,if,string,utils,has,length,mr,get,persist,location,desc,set,field,mr,get,persist,location
MetadataMBeanInfoAssembler -> @Override 	protected void populateMBeanDescriptor(Descriptor desc, Object managedBean, String beanKey);1520529117;Adds descriptor fields from the {@code ManagedResource} attribute_to the MBean descriptor. Specifically, adds the {@code currencyTimeLimit},_{@code persistPolicy}, {@code persistPeriod}, {@code persistLocation}_and {@code persistName} descriptor fields if they are present in the metadata.;@Override_	protected void populateMBeanDescriptor(Descriptor desc, Object managedBean, String beanKey) {_		ManagedResource mr = obtainAttributeSource().getManagedResource(getClassToExpose(managedBean))__		if (mr == null) {_			throw new InvalidMetadataException(_					"No ManagedResource attribute found for class: " + getClassToExpose(managedBean))__		}__		applyCurrencyTimeLimit(desc, mr.getCurrencyTimeLimit())___		if (mr.isLog()) {_			desc.setField(FIELD_LOG, "true")__		}_		if (StringUtils.hasLength(mr.getLogFile())) {_			desc.setField(FIELD_LOG_FILE, mr.getLogFile())__		}__		if (StringUtils.hasLength(mr.getPersistPolicy())) {_			desc.setField(FIELD_PERSIST_POLICY, mr.getPersistPolicy())__		}_		if (mr.getPersistPeriod() >= 0) {_			desc.setField(FIELD_PERSIST_PERIOD, Integer.toString(mr.getPersistPeriod()))__		}_		if (StringUtils.hasLength(mr.getPersistName())) {_			desc.setField(FIELD_PERSIST_NAME, mr.getPersistName())__		}_		if (StringUtils.hasLength(mr.getPersistLocation())) {_			desc.setField(FIELD_PERSIST_LOCATION, mr.getPersistLocation())__		}_	};adds,descriptor,fields,from,the,code,managed,resource,attribute,to,the,mbean,descriptor,specifically,adds,the,code,currency,time,limit,code,persist,policy,code,persist,period,code,persist,location,and,code,persist,name,descriptor,fields,if,they,are,present,in,the,metadata;override,protected,void,populate,mbean,descriptor,descriptor,desc,object,managed,bean,string,bean,key,managed,resource,mr,obtain,attribute,source,get,managed,resource,get,class,to,expose,managed,bean,if,mr,null,throw,new,invalid,metadata,exception,no,managed,resource,attribute,found,for,class,get,class,to,expose,managed,bean,apply,currency,time,limit,desc,mr,get,currency,time,limit,if,mr,is,log,desc,set,field,true,if,string,utils,has,length,mr,get,log,file,desc,set,field,mr,get,log,file,if,string,utils,has,length,mr,get,persist,policy,desc,set,field,mr,get,persist,policy,if,mr,get,persist,period,0,desc,set,field,integer,to,string,mr,get,persist,period,if,string,utils,has,length,mr,get,persist,name,desc,set,field,mr,get,persist,name,if,string,utils,has,length,mr,get,persist,location,desc,set,field,mr,get,persist,location
MetadataMBeanInfoAssembler -> @Override 	protected void populateAttributeDescriptor(Descriptor desc, Method getter, Method setter, String beanKey);1328020251;Adds descriptor fields from the <code>ManagedAttribute</code> attribute or the <code>ManagedMetric</code> attribute_to the attribute descriptor.;@Override_	protected void populateAttributeDescriptor(Descriptor desc, Method getter, Method setter, String beanKey) {_		if(getter != null && hasManagedMetric(getter)) {_			populateMetricDescriptor(desc, this.attributeSource.getManagedMetric(getter))__		}_		else {_			ManagedAttribute gma =_				(getter == null) ? ManagedAttribute.EMPTY : this.attributeSource.getManagedAttribute(getter)__			ManagedAttribute sma =_				(setter == null) ? ManagedAttribute.EMPTY : this.attributeSource.getManagedAttribute(setter)__			populateAttributeDescriptor(desc,gma,sma)__		}_	};adds,descriptor,fields,from,the,code,managed,attribute,code,attribute,or,the,code,managed,metric,code,attribute,to,the,attribute,descriptor;override,protected,void,populate,attribute,descriptor,descriptor,desc,method,getter,method,setter,string,bean,key,if,getter,null,has,managed,metric,getter,populate,metric,descriptor,desc,this,attribute,source,get,managed,metric,getter,else,managed,attribute,gma,getter,null,managed,attribute,empty,this,attribute,source,get,managed,attribute,getter,managed,attribute,sma,setter,null,managed,attribute,empty,this,attribute,source,get,managed,attribute,setter,populate,attribute,descriptor,desc,gma,sma
MetadataMBeanInfoAssembler -> @Override 	protected void populateAttributeDescriptor(Descriptor desc, Method getter, Method setter, String beanKey);1356735495;Adds descriptor fields from the {@code ManagedAttribute} attribute or the {@code ManagedMetric} attribute_to the attribute descriptor.;@Override_	protected void populateAttributeDescriptor(Descriptor desc, Method getter, Method setter, String beanKey) {_		if(getter != null && hasManagedMetric(getter)) {_			populateMetricDescriptor(desc, this.attributeSource.getManagedMetric(getter))__		}_		else {_			ManagedAttribute gma =_				(getter == null) ? ManagedAttribute.EMPTY : this.attributeSource.getManagedAttribute(getter)__			ManagedAttribute sma =_				(setter == null) ? ManagedAttribute.EMPTY : this.attributeSource.getManagedAttribute(setter)__			populateAttributeDescriptor(desc,gma,sma)__		}_	};adds,descriptor,fields,from,the,code,managed,attribute,attribute,or,the,code,managed,metric,attribute,to,the,attribute,descriptor;override,protected,void,populate,attribute,descriptor,descriptor,desc,method,getter,method,setter,string,bean,key,if,getter,null,has,managed,metric,getter,populate,metric,descriptor,desc,this,attribute,source,get,managed,metric,getter,else,managed,attribute,gma,getter,null,managed,attribute,empty,this,attribute,source,get,managed,attribute,getter,managed,attribute,sma,setter,null,managed,attribute,empty,this,attribute,source,get,managed,attribute,setter,populate,attribute,descriptor,desc,gma,sma
MetadataMBeanInfoAssembler -> @Override 	protected void populateAttributeDescriptor(Descriptor desc, Method getter, Method setter, String beanKey);1357119239;Adds descriptor fields from the {@code ManagedAttribute} attribute or the {@code ManagedMetric} attribute_to the attribute descriptor.;@Override_	protected void populateAttributeDescriptor(Descriptor desc, Method getter, Method setter, String beanKey) {_		if(getter != null && hasManagedMetric(getter)) {_			populateMetricDescriptor(desc, this.attributeSource.getManagedMetric(getter))__		}_		else {_			ManagedAttribute gma =_				(getter == null) ? ManagedAttribute.EMPTY : this.attributeSource.getManagedAttribute(getter)__			ManagedAttribute sma =_				(setter == null) ? ManagedAttribute.EMPTY : this.attributeSource.getManagedAttribute(setter)__			populateAttributeDescriptor(desc,gma,sma)__		}_	};adds,descriptor,fields,from,the,code,managed,attribute,attribute,or,the,code,managed,metric,attribute,to,the,attribute,descriptor;override,protected,void,populate,attribute,descriptor,descriptor,desc,method,getter,method,setter,string,bean,key,if,getter,null,has,managed,metric,getter,populate,metric,descriptor,desc,this,attribute,source,get,managed,metric,getter,else,managed,attribute,gma,getter,null,managed,attribute,empty,this,attribute,source,get,managed,attribute,getter,managed,attribute,sma,setter,null,managed,attribute,empty,this,attribute,source,get,managed,attribute,setter,populate,attribute,descriptor,desc,gma,sma
MetadataMBeanInfoAssembler -> @Override 	protected void populateAttributeDescriptor(Descriptor desc, Method getter, Method setter, String beanKey);1362408075;Adds descriptor fields from the {@code ManagedAttribute} attribute or the {@code ManagedMetric} attribute_to the attribute descriptor.;@Override_	protected void populateAttributeDescriptor(Descriptor desc, Method getter, Method setter, String beanKey) {_		if(getter != null && hasManagedMetric(getter)) {_			populateMetricDescriptor(desc, this.attributeSource.getManagedMetric(getter))__		}_		else {_			ManagedAttribute gma =_				(getter == null) ? ManagedAttribute.EMPTY : this.attributeSource.getManagedAttribute(getter)__			ManagedAttribute sma =_				(setter == null) ? ManagedAttribute.EMPTY : this.attributeSource.getManagedAttribute(setter)__			populateAttributeDescriptor(desc,gma,sma)__		}_	};adds,descriptor,fields,from,the,code,managed,attribute,attribute,or,the,code,managed,metric,attribute,to,the,attribute,descriptor;override,protected,void,populate,attribute,descriptor,descriptor,desc,method,getter,method,setter,string,bean,key,if,getter,null,has,managed,metric,getter,populate,metric,descriptor,desc,this,attribute,source,get,managed,metric,getter,else,managed,attribute,gma,getter,null,managed,attribute,empty,this,attribute,source,get,managed,attribute,getter,managed,attribute,sma,setter,null,managed,attribute,empty,this,attribute,source,get,managed,attribute,setter,populate,attribute,descriptor,desc,gma,sma
MetadataMBeanInfoAssembler -> @Override 	protected void populateAttributeDescriptor(Descriptor desc, Method getter, Method setter, String beanKey);1368482696;Adds descriptor fields from the {@code ManagedAttribute} attribute or the {@code ManagedMetric} attribute_to the attribute descriptor.;@Override_	protected void populateAttributeDescriptor(Descriptor desc, Method getter, Method setter, String beanKey) {_		if(getter != null && hasManagedMetric(getter)) {_			populateMetricDescriptor(desc, this.attributeSource.getManagedMetric(getter))__		}_		else {_			ManagedAttribute gma =_				(getter == null) ? ManagedAttribute.EMPTY : this.attributeSource.getManagedAttribute(getter)__			ManagedAttribute sma =_				(setter == null) ? ManagedAttribute.EMPTY : this.attributeSource.getManagedAttribute(setter)__			populateAttributeDescriptor(desc,gma,sma)__		}_	};adds,descriptor,fields,from,the,code,managed,attribute,attribute,or,the,code,managed,metric,attribute,to,the,attribute,descriptor;override,protected,void,populate,attribute,descriptor,descriptor,desc,method,getter,method,setter,string,bean,key,if,getter,null,has,managed,metric,getter,populate,metric,descriptor,desc,this,attribute,source,get,managed,metric,getter,else,managed,attribute,gma,getter,null,managed,attribute,empty,this,attribute,source,get,managed,attribute,getter,managed,attribute,sma,setter,null,managed,attribute,empty,this,attribute,source,get,managed,attribute,setter,populate,attribute,descriptor,desc,gma,sma
MetadataMBeanInfoAssembler -> @Override 	protected void populateAttributeDescriptor(Descriptor desc, Method getter, Method setter, String beanKey);1385412762;Adds descriptor fields from the {@code ManagedAttribute} attribute or the {@code ManagedMetric} attribute_to the attribute descriptor.;@Override_	protected void populateAttributeDescriptor(Descriptor desc, Method getter, Method setter, String beanKey) {_		if(getter != null && hasManagedMetric(getter)) {_			populateMetricDescriptor(desc, this.attributeSource.getManagedMetric(getter))__		}_		else {_			ManagedAttribute gma =_				(getter == null) ? ManagedAttribute.EMPTY : this.attributeSource.getManagedAttribute(getter)__			ManagedAttribute sma =_				(setter == null) ? ManagedAttribute.EMPTY : this.attributeSource.getManagedAttribute(setter)__			populateAttributeDescriptor(desc,gma,sma)__		}_	};adds,descriptor,fields,from,the,code,managed,attribute,attribute,or,the,code,managed,metric,attribute,to,the,attribute,descriptor;override,protected,void,populate,attribute,descriptor,descriptor,desc,method,getter,method,setter,string,bean,key,if,getter,null,has,managed,metric,getter,populate,metric,descriptor,desc,this,attribute,source,get,managed,metric,getter,else,managed,attribute,gma,getter,null,managed,attribute,empty,this,attribute,source,get,managed,attribute,getter,managed,attribute,sma,setter,null,managed,attribute,empty,this,attribute,source,get,managed,attribute,setter,populate,attribute,descriptor,desc,gma,sma
MetadataMBeanInfoAssembler -> @Override 	protected void populateAttributeDescriptor(Descriptor desc, Method getter, Method setter, String beanKey);1405696918;Adds descriptor fields from the {@code ManagedAttribute} attribute or the {@code ManagedMetric} attribute_to the attribute descriptor.;@Override_	protected void populateAttributeDescriptor(Descriptor desc, Method getter, Method setter, String beanKey) {_		if (getter != null && hasManagedMetric(getter)) {_			populateMetricDescriptor(desc, this.attributeSource.getManagedMetric(getter))__		}_		else {_			ManagedAttribute gma =_				(getter == null) ? ManagedAttribute.EMPTY : this.attributeSource.getManagedAttribute(getter)__			ManagedAttribute sma =_				(setter == null) ? ManagedAttribute.EMPTY : this.attributeSource.getManagedAttribute(setter)__			populateAttributeDescriptor(desc,gma,sma)__		}_	};adds,descriptor,fields,from,the,code,managed,attribute,attribute,or,the,code,managed,metric,attribute,to,the,attribute,descriptor;override,protected,void,populate,attribute,descriptor,descriptor,desc,method,getter,method,setter,string,bean,key,if,getter,null,has,managed,metric,getter,populate,metric,descriptor,desc,this,attribute,source,get,managed,metric,getter,else,managed,attribute,gma,getter,null,managed,attribute,empty,this,attribute,source,get,managed,attribute,getter,managed,attribute,sma,setter,null,managed,attribute,empty,this,attribute,source,get,managed,attribute,setter,populate,attribute,descriptor,desc,gma,sma
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeOperation(Method method, String beanKey);1328020251;Votes on the inclusion of an operation._@param method the operation method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeOperation(Method method, String beanKey) {_		PropertyDescriptor pd = BeanUtils.findPropertyForMethod(method)__		if (pd != null) {_			if(hasManagedAttribute(method)) {_				return true__			}_		}_		return hasManagedOperation(method)__	};votes,on,the,inclusion,of,an,operation,param,method,the,operation,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,operation,method,method,string,bean,key,property,descriptor,pd,bean,utils,find,property,for,method,method,if,pd,null,if,has,managed,attribute,method,return,true,return,has,managed,operation,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeOperation(Method method, String beanKey);1356735495;Votes on the inclusion of an operation._@param method the operation method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeOperation(Method method, String beanKey) {_		PropertyDescriptor pd = BeanUtils.findPropertyForMethod(method)__		if (pd != null) {_			if(hasManagedAttribute(method)) {_				return true__			}_		}_		return hasManagedOperation(method)__	};votes,on,the,inclusion,of,an,operation,param,method,the,operation,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,operation,method,method,string,bean,key,property,descriptor,pd,bean,utils,find,property,for,method,method,if,pd,null,if,has,managed,attribute,method,return,true,return,has,managed,operation,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeOperation(Method method, String beanKey);1357119239;Votes on the inclusion of an operation._@param method the operation method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeOperation(Method method, String beanKey) {_		PropertyDescriptor pd = BeanUtils.findPropertyForMethod(method)__		if (pd != null) {_			if(hasManagedAttribute(method)) {_				return true__			}_		}_		return hasManagedOperation(method)__	};votes,on,the,inclusion,of,an,operation,param,method,the,operation,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,operation,method,method,string,bean,key,property,descriptor,pd,bean,utils,find,property,for,method,method,if,pd,null,if,has,managed,attribute,method,return,true,return,has,managed,operation,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeOperation(Method method, String beanKey);1362408075;Votes on the inclusion of an operation._@param method the operation method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeOperation(Method method, String beanKey) {_		PropertyDescriptor pd = BeanUtils.findPropertyForMethod(method)__		if (pd != null) {_			if(hasManagedAttribute(method)) {_				return true__			}_		}_		return hasManagedOperation(method)__	};votes,on,the,inclusion,of,an,operation,param,method,the,operation,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,operation,method,method,string,bean,key,property,descriptor,pd,bean,utils,find,property,for,method,method,if,pd,null,if,has,managed,attribute,method,return,true,return,has,managed,operation,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeOperation(Method method, String beanKey);1368482696;Votes on the inclusion of an operation._@param method the operation method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeOperation(Method method, String beanKey) {_		PropertyDescriptor pd = BeanUtils.findPropertyForMethod(method)__		if (pd != null) {_			if(hasManagedAttribute(method)) {_				return true__			}_		}_		return hasManagedOperation(method)__	};votes,on,the,inclusion,of,an,operation,param,method,the,operation,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,operation,method,method,string,bean,key,property,descriptor,pd,bean,utils,find,property,for,method,method,if,pd,null,if,has,managed,attribute,method,return,true,return,has,managed,operation,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeOperation(Method method, String beanKey);1385412762;Votes on the inclusion of an operation._@param method the operation method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeOperation(Method method, String beanKey) {_		PropertyDescriptor pd = BeanUtils.findPropertyForMethod(method)__		if (pd != null) {_			if(hasManagedAttribute(method)) {_				return true__			}_		}_		return hasManagedOperation(method)__	};votes,on,the,inclusion,of,an,operation,param,method,the,operation,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,operation,method,method,string,bean,key,property,descriptor,pd,bean,utils,find,property,for,method,method,if,pd,null,if,has,managed,attribute,method,return,true,return,has,managed,operation,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeOperation(Method method, String beanKey);1405696918;Votes on the inclusion of an operation._@param method the operation method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeOperation(Method method, String beanKey) {_		PropertyDescriptor pd = BeanUtils.findPropertyForMethod(method)__		if (pd != null) {_			if (hasManagedAttribute(method)) {_				return true__			}_		}_		return hasManagedOperation(method)__	};votes,on,the,inclusion,of,an,operation,param,method,the,operation,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,operation,method,method,string,bean,key,property,descriptor,pd,bean,utils,find,property,for,method,method,if,pd,null,if,has,managed,attribute,method,return,true,return,has,managed,operation,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeOperation(Method method, String beanKey);1496837955;Votes on the inclusion of an operation._@param method the operation method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeOperation(Method method, String beanKey) {_		PropertyDescriptor pd = BeanUtils.findPropertyForMethod(method)__		if (pd != null) {_			if (hasManagedAttribute(method)) {_				return true__			}_		}_		return hasManagedOperation(method)__	};votes,on,the,inclusion,of,an,operation,param,method,the,operation,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,operation,method,method,string,bean,key,property,descriptor,pd,bean,utils,find,property,for,method,method,if,pd,null,if,has,managed,attribute,method,return,true,return,has,managed,operation,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeOperation(Method method, String beanKey);1498780456;Votes on the inclusion of an operation._@param method the operation method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeOperation(Method method, String beanKey) {_		PropertyDescriptor pd = BeanUtils.findPropertyForMethod(method)__		if (pd != null) {_			if (hasManagedAttribute(method)) {_				return true__			}_		}_		return hasManagedOperation(method)__	};votes,on,the,inclusion,of,an,operation,param,method,the,operation,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,operation,method,method,string,bean,key,property,descriptor,pd,bean,utils,find,property,for,method,method,if,pd,null,if,has,managed,attribute,method,return,true,return,has,managed,operation,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeOperation(Method method, String beanKey);1500495740;Votes on the inclusion of an operation._@param method the operation method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeOperation(Method method, String beanKey) {_		PropertyDescriptor pd = BeanUtils.findPropertyForMethod(method)__		if (pd != null) {_			if (hasManagedAttribute(method)) {_				return true__			}_		}_		return hasManagedOperation(method)__	};votes,on,the,inclusion,of,an,operation,param,method,the,operation,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,operation,method,method,string,bean,key,property,descriptor,pd,bean,utils,find,property,for,method,method,if,pd,null,if,has,managed,attribute,method,return,true,return,has,managed,operation,method
MetadataMBeanInfoAssembler -> @Override 	protected boolean includeOperation(Method method, String beanKey);1520529117;Votes on the inclusion of an operation._@param method the operation method_@param beanKey the key associated with the MBean in the beans map_@return whether the method has the appropriate metadata;@Override_	protected boolean includeOperation(Method method, String beanKey) {_		PropertyDescriptor pd = BeanUtils.findPropertyForMethod(method)__		return (pd != null && hasManagedAttribute(method)) || hasManagedOperation(method)__	};votes,on,the,inclusion,of,an,operation,param,method,the,operation,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,return,whether,the,method,has,the,appropriate,metadata;override,protected,boolean,include,operation,method,method,string,bean,key,property,descriptor,pd,bean,utils,find,property,for,method,method,return,pd,null,has,managed,attribute,method,has,managed,operation,method
MetadataMBeanInfoAssembler -> private Object resolveObjectDescriptor(Object getter, Object setter);1328020251;Locates the value of a descriptor based on values attached_to both the getter and setter methods. If both have values_supplied then the value attached to the getter is preferred._@param getter the Object value associated with the get method_@param setter the Object value associated with the set method_@return the appropriate Object to use as the value for the descriptor;private Object resolveObjectDescriptor(Object getter, Object setter) {_		return (getter != null ? getter : setter)__	};locates,the,value,of,a,descriptor,based,on,values,attached,to,both,the,getter,and,setter,methods,if,both,have,values,supplied,then,the,value,attached,to,the,getter,is,preferred,param,getter,the,object,value,associated,with,the,get,method,param,setter,the,object,value,associated,with,the,set,method,return,the,appropriate,object,to,use,as,the,value,for,the,descriptor;private,object,resolve,object,descriptor,object,getter,object,setter,return,getter,null,getter,setter
MetadataMBeanInfoAssembler -> private Object resolveObjectDescriptor(Object getter, Object setter);1356735495;Locates the value of a descriptor based on values attached_to both the getter and setter methods. If both have values_supplied then the value attached to the getter is preferred._@param getter the Object value associated with the get method_@param setter the Object value associated with the set method_@return the appropriate Object to use as the value for the descriptor;private Object resolveObjectDescriptor(Object getter, Object setter) {_		return (getter != null ? getter : setter)__	};locates,the,value,of,a,descriptor,based,on,values,attached,to,both,the,getter,and,setter,methods,if,both,have,values,supplied,then,the,value,attached,to,the,getter,is,preferred,param,getter,the,object,value,associated,with,the,get,method,param,setter,the,object,value,associated,with,the,set,method,return,the,appropriate,object,to,use,as,the,value,for,the,descriptor;private,object,resolve,object,descriptor,object,getter,object,setter,return,getter,null,getter,setter
MetadataMBeanInfoAssembler -> private Object resolveObjectDescriptor(Object getter, Object setter);1357119239;Locates the value of a descriptor based on values attached_to both the getter and setter methods. If both have values_supplied then the value attached to the getter is preferred._@param getter the Object value associated with the get method_@param setter the Object value associated with the set method_@return the appropriate Object to use as the value for the descriptor;private Object resolveObjectDescriptor(Object getter, Object setter) {_		return (getter != null ? getter : setter)__	};locates,the,value,of,a,descriptor,based,on,values,attached,to,both,the,getter,and,setter,methods,if,both,have,values,supplied,then,the,value,attached,to,the,getter,is,preferred,param,getter,the,object,value,associated,with,the,get,method,param,setter,the,object,value,associated,with,the,set,method,return,the,appropriate,object,to,use,as,the,value,for,the,descriptor;private,object,resolve,object,descriptor,object,getter,object,setter,return,getter,null,getter,setter
MetadataMBeanInfoAssembler -> private Object resolveObjectDescriptor(Object getter, Object setter);1362408075;Locates the value of a descriptor based on values attached_to both the getter and setter methods. If both have values_supplied then the value attached to the getter is preferred._@param getter the Object value associated with the get method_@param setter the Object value associated with the set method_@return the appropriate Object to use as the value for the descriptor;private Object resolveObjectDescriptor(Object getter, Object setter) {_		return (getter != null ? getter : setter)__	};locates,the,value,of,a,descriptor,based,on,values,attached,to,both,the,getter,and,setter,methods,if,both,have,values,supplied,then,the,value,attached,to,the,getter,is,preferred,param,getter,the,object,value,associated,with,the,get,method,param,setter,the,object,value,associated,with,the,set,method,return,the,appropriate,object,to,use,as,the,value,for,the,descriptor;private,object,resolve,object,descriptor,object,getter,object,setter,return,getter,null,getter,setter
MetadataMBeanInfoAssembler -> private Object resolveObjectDescriptor(Object getter, Object setter);1368482696;Locates the value of a descriptor based on values attached_to both the getter and setter methods. If both have values_supplied then the value attached to the getter is preferred._@param getter the Object value associated with the get method_@param setter the Object value associated with the set method_@return the appropriate Object to use as the value for the descriptor;private Object resolveObjectDescriptor(Object getter, Object setter) {_		return (getter != null ? getter : setter)__	};locates,the,value,of,a,descriptor,based,on,values,attached,to,both,the,getter,and,setter,methods,if,both,have,values,supplied,then,the,value,attached,to,the,getter,is,preferred,param,getter,the,object,value,associated,with,the,get,method,param,setter,the,object,value,associated,with,the,set,method,return,the,appropriate,object,to,use,as,the,value,for,the,descriptor;private,object,resolve,object,descriptor,object,getter,object,setter,return,getter,null,getter,setter
MetadataMBeanInfoAssembler -> private Object resolveObjectDescriptor(Object getter, Object setter);1385412762;Locates the value of a descriptor based on values attached_to both the getter and setter methods. If both have values_supplied then the value attached to the getter is preferred._@param getter the Object value associated with the get method_@param setter the Object value associated with the set method_@return the appropriate Object to use as the value for the descriptor;private Object resolveObjectDescriptor(Object getter, Object setter) {_		return (getter != null ? getter : setter)__	};locates,the,value,of,a,descriptor,based,on,values,attached,to,both,the,getter,and,setter,methods,if,both,have,values,supplied,then,the,value,attached,to,the,getter,is,preferred,param,getter,the,object,value,associated,with,the,get,method,param,setter,the,object,value,associated,with,the,set,method,return,the,appropriate,object,to,use,as,the,value,for,the,descriptor;private,object,resolve,object,descriptor,object,getter,object,setter,return,getter,null,getter,setter
MetadataMBeanInfoAssembler -> private Object resolveObjectDescriptor(Object getter, Object setter);1405696918;Locates the value of a descriptor based on values attached_to both the getter and setter methods. If both have values_supplied then the value attached to the getter is preferred._@param getter the Object value associated with the get method_@param setter the Object value associated with the set method_@return the appropriate Object to use as the value for the descriptor;private Object resolveObjectDescriptor(Object getter, Object setter) {_		return (getter != null ? getter : setter)__	};locates,the,value,of,a,descriptor,based,on,values,attached,to,both,the,getter,and,setter,methods,if,both,have,values,supplied,then,the,value,attached,to,the,getter,is,preferred,param,getter,the,object,value,associated,with,the,get,method,param,setter,the,object,value,associated,with,the,set,method,return,the,appropriate,object,to,use,as,the,value,for,the,descriptor;private,object,resolve,object,descriptor,object,getter,object,setter,return,getter,null,getter,setter
MetadataMBeanInfoAssembler -> private boolean hasManagedMetric(Method method);1328020251;Checks to see if the given Method has the <code>ManagedMetric</code> attribute.;private boolean hasManagedMetric(Method method) {_		return (this.attributeSource.getManagedMetric(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,metric,code,attribute;private,boolean,has,managed,metric,method,method,return,this,attribute,source,get,managed,metric,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedMetric(Method method);1356735495;Checks to see if the given Method has the {@code ManagedMetric} attribute.;private boolean hasManagedMetric(Method method) {_		return (this.attributeSource.getManagedMetric(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,metric,attribute;private,boolean,has,managed,metric,method,method,return,this,attribute,source,get,managed,metric,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedMetric(Method method);1357119239;Checks to see if the given Method has the {@code ManagedMetric} attribute.;private boolean hasManagedMetric(Method method) {_		return (this.attributeSource.getManagedMetric(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,metric,attribute;private,boolean,has,managed,metric,method,method,return,this,attribute,source,get,managed,metric,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedMetric(Method method);1362408075;Checks to see if the given Method has the {@code ManagedMetric} attribute.;private boolean hasManagedMetric(Method method) {_		return (this.attributeSource.getManagedMetric(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,metric,attribute;private,boolean,has,managed,metric,method,method,return,this,attribute,source,get,managed,metric,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedMetric(Method method);1368482696;Checks to see if the given Method has the {@code ManagedMetric} attribute.;private boolean hasManagedMetric(Method method) {_		return (this.attributeSource.getManagedMetric(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,metric,attribute;private,boolean,has,managed,metric,method,method,return,this,attribute,source,get,managed,metric,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedMetric(Method method);1385412762;Checks to see if the given Method has the {@code ManagedMetric} attribute.;private boolean hasManagedMetric(Method method) {_		return (this.attributeSource.getManagedMetric(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,metric,attribute;private,boolean,has,managed,metric,method,method,return,this,attribute,source,get,managed,metric,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedMetric(Method method);1405696918;Checks to see if the given Method has the {@code ManagedMetric} attribute.;private boolean hasManagedMetric(Method method) {_		return (this.attributeSource.getManagedMetric(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,metric,attribute;private,boolean,has,managed,metric,method,method,return,this,attribute,source,get,managed,metric,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedMetric(Method method);1496837955;Checks to see if the given Method has the {@code ManagedMetric} attribute.;private boolean hasManagedMetric(Method method) {_		return (this.attributeSource.getManagedMetric(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,metric,attribute;private,boolean,has,managed,metric,method,method,return,this,attribute,source,get,managed,metric,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedMetric(Method method);1498780456;Checks to see if the given Method has the {@code ManagedMetric} attribute.;private boolean hasManagedMetric(Method method) {_		return (obtainAttributeSource().getManagedMetric(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,metric,attribute;private,boolean,has,managed,metric,method,method,return,obtain,attribute,source,get,managed,metric,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedMetric(Method method);1500495740;Checks to see if the given Method has the {@code ManagedMetric} attribute.;private boolean hasManagedMetric(Method method) {_		return (obtainAttributeSource().getManagedMetric(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,metric,attribute;private,boolean,has,managed,metric,method,method,return,obtain,attribute,source,get,managed,metric,method,null
MetadataMBeanInfoAssembler -> private boolean hasManagedMetric(Method method);1520529117;Checks to see if the given Method has the {@code ManagedMetric} attribute.;private boolean hasManagedMetric(Method method) {_		return (obtainAttributeSource().getManagedMetric(method) != null)__	};checks,to,see,if,the,given,method,has,the,code,managed,metric,attribute;private,boolean,has,managed,metric,method,method,return,obtain,attribute,source,get,managed,metric,method,null
MetadataMBeanInfoAssembler -> @Override 	protected ModelMBeanNotificationInfo[] getNotificationInfo(Object managedBean, String beanKey);1328020251;Reads the {@link ManagedNotification} metadata from the <code>Class</code> of the managed resource_and generates and returns the corresponding {@link ModelMBeanNotificationInfo} metadata.;@Override_	protected ModelMBeanNotificationInfo[] getNotificationInfo(Object managedBean, String beanKey) {_		ManagedNotification[] notificationAttributes =_				this.attributeSource.getManagedNotifications(getClassToExpose(managedBean))__		ModelMBeanNotificationInfo[] notificationInfos =_				new ModelMBeanNotificationInfo[notificationAttributes.length]___		for (int i = 0_ i < notificationAttributes.length_ i++) {_			ManagedNotification attribute = notificationAttributes[i]__			notificationInfos[i] = JmxMetadataUtils.convertToModelMBeanNotificationInfo(attribute)__		}__		return notificationInfos__	};reads,the,link,managed,notification,metadata,from,the,code,class,code,of,the,managed,resource,and,generates,and,returns,the,corresponding,link,model,mbean,notification,info,metadata;override,protected,model,mbean,notification,info,get,notification,info,object,managed,bean,string,bean,key,managed,notification,notification,attributes,this,attribute,source,get,managed,notifications,get,class,to,expose,managed,bean,model,mbean,notification,info,notification,infos,new,model,mbean,notification,info,notification,attributes,length,for,int,i,0,i,notification,attributes,length,i,managed,notification,attribute,notification,attributes,i,notification,infos,i,jmx,metadata,utils,convert,to,model,mbean,notification,info,attribute,return,notification,infos
MetadataMBeanInfoAssembler -> @Override 	protected ModelMBeanNotificationInfo[] getNotificationInfo(Object managedBean, String beanKey);1356735495;Reads the {@link ManagedNotification} metadata from the {@code Class} of the managed resource_and generates and returns the corresponding {@link ModelMBeanNotificationInfo} metadata.;@Override_	protected ModelMBeanNotificationInfo[] getNotificationInfo(Object managedBean, String beanKey) {_		ManagedNotification[] notificationAttributes =_				this.attributeSource.getManagedNotifications(getClassToExpose(managedBean))__		ModelMBeanNotificationInfo[] notificationInfos =_				new ModelMBeanNotificationInfo[notificationAttributes.length]___		for (int i = 0_ i < notificationAttributes.length_ i++) {_			ManagedNotification attribute = notificationAttributes[i]__			notificationInfos[i] = JmxMetadataUtils.convertToModelMBeanNotificationInfo(attribute)__		}__		return notificationInfos__	};reads,the,link,managed,notification,metadata,from,the,code,class,of,the,managed,resource,and,generates,and,returns,the,corresponding,link,model,mbean,notification,info,metadata;override,protected,model,mbean,notification,info,get,notification,info,object,managed,bean,string,bean,key,managed,notification,notification,attributes,this,attribute,source,get,managed,notifications,get,class,to,expose,managed,bean,model,mbean,notification,info,notification,infos,new,model,mbean,notification,info,notification,attributes,length,for,int,i,0,i,notification,attributes,length,i,managed,notification,attribute,notification,attributes,i,notification,infos,i,jmx,metadata,utils,convert,to,model,mbean,notification,info,attribute,return,notification,infos
MetadataMBeanInfoAssembler -> @Override 	protected ModelMBeanNotificationInfo[] getNotificationInfo(Object managedBean, String beanKey);1357119239;Reads the {@link ManagedNotification} metadata from the {@code Class} of the managed resource_and generates and returns the corresponding {@link ModelMBeanNotificationInfo} metadata.;@Override_	protected ModelMBeanNotificationInfo[] getNotificationInfo(Object managedBean, String beanKey) {_		ManagedNotification[] notificationAttributes =_				this.attributeSource.getManagedNotifications(getClassToExpose(managedBean))__		ModelMBeanNotificationInfo[] notificationInfos =_				new ModelMBeanNotificationInfo[notificationAttributes.length]___		for (int i = 0_ i < notificationAttributes.length_ i++) {_			ManagedNotification attribute = notificationAttributes[i]__			notificationInfos[i] = JmxMetadataUtils.convertToModelMBeanNotificationInfo(attribute)__		}__		return notificationInfos__	};reads,the,link,managed,notification,metadata,from,the,code,class,of,the,managed,resource,and,generates,and,returns,the,corresponding,link,model,mbean,notification,info,metadata;override,protected,model,mbean,notification,info,get,notification,info,object,managed,bean,string,bean,key,managed,notification,notification,attributes,this,attribute,source,get,managed,notifications,get,class,to,expose,managed,bean,model,mbean,notification,info,notification,infos,new,model,mbean,notification,info,notification,attributes,length,for,int,i,0,i,notification,attributes,length,i,managed,notification,attribute,notification,attributes,i,notification,infos,i,jmx,metadata,utils,convert,to,model,mbean,notification,info,attribute,return,notification,infos
MetadataMBeanInfoAssembler -> @Override 	protected ModelMBeanNotificationInfo[] getNotificationInfo(Object managedBean, String beanKey);1362408075;Reads the {@link ManagedNotification} metadata from the {@code Class} of the managed resource_and generates and returns the corresponding {@link ModelMBeanNotificationInfo} metadata.;@Override_	protected ModelMBeanNotificationInfo[] getNotificationInfo(Object managedBean, String beanKey) {_		ManagedNotification[] notificationAttributes =_				this.attributeSource.getManagedNotifications(getClassToExpose(managedBean))__		ModelMBeanNotificationInfo[] notificationInfos =_				new ModelMBeanNotificationInfo[notificationAttributes.length]___		for (int i = 0_ i < notificationAttributes.length_ i++) {_			ManagedNotification attribute = notificationAttributes[i]__			notificationInfos[i] = JmxMetadataUtils.convertToModelMBeanNotificationInfo(attribute)__		}__		return notificationInfos__	};reads,the,link,managed,notification,metadata,from,the,code,class,of,the,managed,resource,and,generates,and,returns,the,corresponding,link,model,mbean,notification,info,metadata;override,protected,model,mbean,notification,info,get,notification,info,object,managed,bean,string,bean,key,managed,notification,notification,attributes,this,attribute,source,get,managed,notifications,get,class,to,expose,managed,bean,model,mbean,notification,info,notification,infos,new,model,mbean,notification,info,notification,attributes,length,for,int,i,0,i,notification,attributes,length,i,managed,notification,attribute,notification,attributes,i,notification,infos,i,jmx,metadata,utils,convert,to,model,mbean,notification,info,attribute,return,notification,infos
MetadataMBeanInfoAssembler -> @Override 	protected ModelMBeanNotificationInfo[] getNotificationInfo(Object managedBean, String beanKey);1368482696;Reads the {@link ManagedNotification} metadata from the {@code Class} of the managed resource_and generates and returns the corresponding {@link ModelMBeanNotificationInfo} metadata.;@Override_	protected ModelMBeanNotificationInfo[] getNotificationInfo(Object managedBean, String beanKey) {_		ManagedNotification[] notificationAttributes =_				this.attributeSource.getManagedNotifications(getClassToExpose(managedBean))__		ModelMBeanNotificationInfo[] notificationInfos =_				new ModelMBeanNotificationInfo[notificationAttributes.length]___		for (int i = 0_ i < notificationAttributes.length_ i++) {_			ManagedNotification attribute = notificationAttributes[i]__			notificationInfos[i] = JmxMetadataUtils.convertToModelMBeanNotificationInfo(attribute)__		}__		return notificationInfos__	};reads,the,link,managed,notification,metadata,from,the,code,class,of,the,managed,resource,and,generates,and,returns,the,corresponding,link,model,mbean,notification,info,metadata;override,protected,model,mbean,notification,info,get,notification,info,object,managed,bean,string,bean,key,managed,notification,notification,attributes,this,attribute,source,get,managed,notifications,get,class,to,expose,managed,bean,model,mbean,notification,info,notification,infos,new,model,mbean,notification,info,notification,attributes,length,for,int,i,0,i,notification,attributes,length,i,managed,notification,attribute,notification,attributes,i,notification,infos,i,jmx,metadata,utils,convert,to,model,mbean,notification,info,attribute,return,notification,infos
MetadataMBeanInfoAssembler -> @Override 	protected ModelMBeanNotificationInfo[] getNotificationInfo(Object managedBean, String beanKey);1385412762;Reads the {@link ManagedNotification} metadata from the {@code Class} of the managed resource_and generates and returns the corresponding {@link ModelMBeanNotificationInfo} metadata.;@Override_	protected ModelMBeanNotificationInfo[] getNotificationInfo(Object managedBean, String beanKey) {_		ManagedNotification[] notificationAttributes =_				this.attributeSource.getManagedNotifications(getClassToExpose(managedBean))__		ModelMBeanNotificationInfo[] notificationInfos =_				new ModelMBeanNotificationInfo[notificationAttributes.length]___		for (int i = 0_ i < notificationAttributes.length_ i++) {_			ManagedNotification attribute = notificationAttributes[i]__			notificationInfos[i] = JmxMetadataUtils.convertToModelMBeanNotificationInfo(attribute)__		}__		return notificationInfos__	};reads,the,link,managed,notification,metadata,from,the,code,class,of,the,managed,resource,and,generates,and,returns,the,corresponding,link,model,mbean,notification,info,metadata;override,protected,model,mbean,notification,info,get,notification,info,object,managed,bean,string,bean,key,managed,notification,notification,attributes,this,attribute,source,get,managed,notifications,get,class,to,expose,managed,bean,model,mbean,notification,info,notification,infos,new,model,mbean,notification,info,notification,attributes,length,for,int,i,0,i,notification,attributes,length,i,managed,notification,attribute,notification,attributes,i,notification,infos,i,jmx,metadata,utils,convert,to,model,mbean,notification,info,attribute,return,notification,infos
MetadataMBeanInfoAssembler -> @Override 	protected ModelMBeanNotificationInfo[] getNotificationInfo(Object managedBean, String beanKey);1405696918;Reads the {@link ManagedNotification} metadata from the {@code Class} of the managed resource_and generates and returns the corresponding {@link ModelMBeanNotificationInfo} metadata.;@Override_	protected ModelMBeanNotificationInfo[] getNotificationInfo(Object managedBean, String beanKey) {_		ManagedNotification[] notificationAttributes =_				this.attributeSource.getManagedNotifications(getClassToExpose(managedBean))__		ModelMBeanNotificationInfo[] notificationInfos =_				new ModelMBeanNotificationInfo[notificationAttributes.length]___		for (int i = 0_ i < notificationAttributes.length_ i++) {_			ManagedNotification attribute = notificationAttributes[i]__			notificationInfos[i] = JmxMetadataUtils.convertToModelMBeanNotificationInfo(attribute)__		}__		return notificationInfos__	};reads,the,link,managed,notification,metadata,from,the,code,class,of,the,managed,resource,and,generates,and,returns,the,corresponding,link,model,mbean,notification,info,metadata;override,protected,model,mbean,notification,info,get,notification,info,object,managed,bean,string,bean,key,managed,notification,notification,attributes,this,attribute,source,get,managed,notifications,get,class,to,expose,managed,bean,model,mbean,notification,info,notification,infos,new,model,mbean,notification,info,notification,attributes,length,for,int,i,0,i,notification,attributes,length,i,managed,notification,attribute,notification,attributes,i,notification,infos,i,jmx,metadata,utils,convert,to,model,mbean,notification,info,attribute,return,notification,infos
MetadataMBeanInfoAssembler -> @Override 	protected ModelMBeanNotificationInfo[] getNotificationInfo(Object managedBean, String beanKey);1496837955;Reads the {@link ManagedNotification} metadata from the {@code Class} of the managed resource_and generates and returns the corresponding {@link ModelMBeanNotificationInfo} metadata.;@Override_	protected ModelMBeanNotificationInfo[] getNotificationInfo(Object managedBean, String beanKey) {_		ManagedNotification[] notificationAttributes =_				this.attributeSource.getManagedNotifications(getClassToExpose(managedBean))__		ModelMBeanNotificationInfo[] notificationInfos =_				new ModelMBeanNotificationInfo[notificationAttributes.length]___		for (int i = 0_ i < notificationAttributes.length_ i++) {_			ManagedNotification attribute = notificationAttributes[i]__			notificationInfos[i] = JmxMetadataUtils.convertToModelMBeanNotificationInfo(attribute)__		}__		return notificationInfos__	};reads,the,link,managed,notification,metadata,from,the,code,class,of,the,managed,resource,and,generates,and,returns,the,corresponding,link,model,mbean,notification,info,metadata;override,protected,model,mbean,notification,info,get,notification,info,object,managed,bean,string,bean,key,managed,notification,notification,attributes,this,attribute,source,get,managed,notifications,get,class,to,expose,managed,bean,model,mbean,notification,info,notification,infos,new,model,mbean,notification,info,notification,attributes,length,for,int,i,0,i,notification,attributes,length,i,managed,notification,attribute,notification,attributes,i,notification,infos,i,jmx,metadata,utils,convert,to,model,mbean,notification,info,attribute,return,notification,infos
MetadataMBeanInfoAssembler -> @Override 	protected ModelMBeanNotificationInfo[] getNotificationInfo(Object managedBean, String beanKey);1498780456;Reads the {@link ManagedNotification} metadata from the {@code Class} of the managed resource_and generates and returns the corresponding {@link ModelMBeanNotificationInfo} metadata.;@Override_	protected ModelMBeanNotificationInfo[] getNotificationInfo(Object managedBean, String beanKey) {_		ManagedNotification[] notificationAttributes =_				obtainAttributeSource().getManagedNotifications(getClassToExpose(managedBean))__		ModelMBeanNotificationInfo[] notificationInfos =_				new ModelMBeanNotificationInfo[notificationAttributes.length]___		for (int i = 0_ i < notificationAttributes.length_ i++) {_			ManagedNotification attribute = notificationAttributes[i]__			notificationInfos[i] = JmxMetadataUtils.convertToModelMBeanNotificationInfo(attribute)__		}__		return notificationInfos__	};reads,the,link,managed,notification,metadata,from,the,code,class,of,the,managed,resource,and,generates,and,returns,the,corresponding,link,model,mbean,notification,info,metadata;override,protected,model,mbean,notification,info,get,notification,info,object,managed,bean,string,bean,key,managed,notification,notification,attributes,obtain,attribute,source,get,managed,notifications,get,class,to,expose,managed,bean,model,mbean,notification,info,notification,infos,new,model,mbean,notification,info,notification,attributes,length,for,int,i,0,i,notification,attributes,length,i,managed,notification,attribute,notification,attributes,i,notification,infos,i,jmx,metadata,utils,convert,to,model,mbean,notification,info,attribute,return,notification,infos
MetadataMBeanInfoAssembler -> @Override 	protected ModelMBeanNotificationInfo[] getNotificationInfo(Object managedBean, String beanKey);1500495740;Reads the {@link ManagedNotification} metadata from the {@code Class} of the managed resource_and generates and returns the corresponding {@link ModelMBeanNotificationInfo} metadata.;@Override_	protected ModelMBeanNotificationInfo[] getNotificationInfo(Object managedBean, String beanKey) {_		ManagedNotification[] notificationAttributes =_				obtainAttributeSource().getManagedNotifications(getClassToExpose(managedBean))__		ModelMBeanNotificationInfo[] notificationInfos =_				new ModelMBeanNotificationInfo[notificationAttributes.length]___		for (int i = 0_ i < notificationAttributes.length_ i++) {_			ManagedNotification attribute = notificationAttributes[i]__			notificationInfos[i] = JmxMetadataUtils.convertToModelMBeanNotificationInfo(attribute)__		}__		return notificationInfos__	};reads,the,link,managed,notification,metadata,from,the,code,class,of,the,managed,resource,and,generates,and,returns,the,corresponding,link,model,mbean,notification,info,metadata;override,protected,model,mbean,notification,info,get,notification,info,object,managed,bean,string,bean,key,managed,notification,notification,attributes,obtain,attribute,source,get,managed,notifications,get,class,to,expose,managed,bean,model,mbean,notification,info,notification,infos,new,model,mbean,notification,info,notification,attributes,length,for,int,i,0,i,notification,attributes,length,i,managed,notification,attribute,notification,attributes,i,notification,infos,i,jmx,metadata,utils,convert,to,model,mbean,notification,info,attribute,return,notification,infos
MetadataMBeanInfoAssembler -> @Override 	protected ModelMBeanNotificationInfo[] getNotificationInfo(Object managedBean, String beanKey);1520529117;Reads the {@link ManagedNotification} metadata from the {@code Class} of the managed resource_and generates and returns the corresponding {@link ModelMBeanNotificationInfo} metadata.;@Override_	protected ModelMBeanNotificationInfo[] getNotificationInfo(Object managedBean, String beanKey) {_		ManagedNotification[] notificationAttributes =_				obtainAttributeSource().getManagedNotifications(getClassToExpose(managedBean))__		ModelMBeanNotificationInfo[] notificationInfos =_				new ModelMBeanNotificationInfo[notificationAttributes.length]___		for (int i = 0_ i < notificationAttributes.length_ i++) {_			ManagedNotification attribute = notificationAttributes[i]__			notificationInfos[i] = JmxMetadataUtils.convertToModelMBeanNotificationInfo(attribute)__		}__		return notificationInfos__	};reads,the,link,managed,notification,metadata,from,the,code,class,of,the,managed,resource,and,generates,and,returns,the,corresponding,link,model,mbean,notification,info,metadata;override,protected,model,mbean,notification,info,get,notification,info,object,managed,bean,string,bean,key,managed,notification,notification,attributes,obtain,attribute,source,get,managed,notifications,get,class,to,expose,managed,bean,model,mbean,notification,info,notification,infos,new,model,mbean,notification,info,notification,attributes,length,for,int,i,0,i,notification,attributes,length,i,managed,notification,attribute,notification,attributes,i,notification,infos,i,jmx,metadata,utils,convert,to,model,mbean,notification,info,attribute,return,notification,infos
