# id;timestamp;commentText;codeText;commentWords;codeWords
AnnotationCacheOperationSource -> CacheOperationProvider -> Collection<CacheOperation> getCacheOperations(CacheAnnotationParser parser)_;1396272050;Returns the {@link CacheOperation} instance(s) provided by the specified parser.__@param parser the parser to use_@return the cache operations or {@code null} if none is found;Collection<CacheOperation> getCacheOperations(CacheAnnotationParser parser)_;returns,the,link,cache,operation,instance,s,provided,by,the,specified,parser,param,parser,the,parser,to,use,return,the,cache,operations,or,code,null,if,none,is,found;collection,cache,operation,get,cache,operations,cache,annotation,parser,parser
AnnotationCacheOperationSource -> CacheOperationProvider -> Collection<CacheOperation> getCacheOperations(CacheAnnotationParser parser)_;1467730834;Returns the {@link CacheOperation} instance(s) provided by the specified parser.__@param parser the parser to use_@return the cache operations or {@code null} if none is found;Collection<CacheOperation> getCacheOperations(CacheAnnotationParser parser)_;returns,the,link,cache,operation,instance,s,provided,by,the,specified,parser,param,parser,the,parser,to,use,return,the,cache,operations,or,code,null,if,none,is,found;collection,cache,operation,get,cache,operations,cache,annotation,parser,parser
AnnotationCacheOperationSource -> CacheOperationProvider -> Collection<CacheOperation> getCacheOperations(CacheAnnotationParser parser)_;1467808333;Returns the {@link CacheOperation} instance(s) provided by the specified parser.__@param parser the parser to use_@return the cache operations or {@code null} if none is found;Collection<CacheOperation> getCacheOperations(CacheAnnotationParser parser)_;returns,the,link,cache,operation,instance,s,provided,by,the,specified,parser,param,parser,the,parser,to,use,return,the,cache,operations,or,code,null,if,none,is,found;collection,cache,operation,get,cache,operations,cache,annotation,parser,parser
AnnotationCacheOperationSource -> CacheOperationProvider -> Collection<CacheOperation> getCacheOperations(CacheAnnotationParser parser)_;1476285064;Return the {@link CacheOperation} instance(s) provided by the specified parser._@param parser the parser to use_@return the cache operations, or {@code null} if none found;Collection<CacheOperation> getCacheOperations(CacheAnnotationParser parser)_;return,the,link,cache,operation,instance,s,provided,by,the,specified,parser,param,parser,the,parser,to,use,return,the,cache,operations,or,code,null,if,none,found;collection,cache,operation,get,cache,operations,cache,annotation,parser,parser
AnnotationCacheOperationSource -> protected Collection<CacheOperation> determineCacheOperations(CacheOperationProvider provider);1396272050;Determine the cache operation(s) for the given {@link CacheOperationProvider}._<p>This implementation delegates to configured_{@link CacheAnnotationParser}s for parsing known annotations into_Spring's metadata attribute class._<p>Can be overridden to support custom annotations that carry_caching metadata._@param provider the cache operation provider to use_@return the configured caching operations, or {@code null} if none found;protected Collection<CacheOperation> determineCacheOperations(CacheOperationProvider provider) {_		Collection<CacheOperation> ops = null__		for (CacheAnnotationParser annotationParser : this.annotationParsers) {_			Collection<CacheOperation> annOps = provider.getCacheOperations(annotationParser)__			if (annOps != null) {_				if (ops == null) {_					ops = new ArrayList<CacheOperation>()__				}_				ops.addAll(annOps)__			}_		}_		return ops__	};determine,the,cache,operation,s,for,the,given,link,cache,operation,provider,p,this,implementation,delegates,to,configured,link,cache,annotation,parser,s,for,parsing,known,annotations,into,spring,s,metadata,attribute,class,p,can,be,overridden,to,support,custom,annotations,that,carry,caching,metadata,param,provider,the,cache,operation,provider,to,use,return,the,configured,caching,operations,or,code,null,if,none,found;protected,collection,cache,operation,determine,cache,operations,cache,operation,provider,provider,collection,cache,operation,ops,null,for,cache,annotation,parser,annotation,parser,this,annotation,parsers,collection,cache,operation,ann,ops,provider,get,cache,operations,annotation,parser,if,ann,ops,null,if,ops,null,ops,new,array,list,cache,operation,ops,add,all,ann,ops,return,ops
AnnotationCacheOperationSource -> protected Collection<CacheOperation> determineCacheOperations(CacheOperationProvider provider);1467730834;Determine the cache operation(s) for the given {@link CacheOperationProvider}._<p>This implementation delegates to configured_{@link CacheAnnotationParser}s for parsing known annotations into_Spring's metadata attribute class._<p>Can be overridden to support custom annotations that carry_caching metadata._@param provider the cache operation provider to use_@return the configured caching operations, or {@code null} if none found;protected Collection<CacheOperation> determineCacheOperations(CacheOperationProvider provider) {_		Collection<CacheOperation> ops = null__		for (CacheAnnotationParser annotationParser : this.annotationParsers) {_			Collection<CacheOperation> annOps = provider.getCacheOperations(annotationParser)__			if (annOps != null) {_				if (ops == null) {_					ops = new ArrayList<>()__				}_				ops.addAll(annOps)__			}_		}_		return ops__	};determine,the,cache,operation,s,for,the,given,link,cache,operation,provider,p,this,implementation,delegates,to,configured,link,cache,annotation,parser,s,for,parsing,known,annotations,into,spring,s,metadata,attribute,class,p,can,be,overridden,to,support,custom,annotations,that,carry,caching,metadata,param,provider,the,cache,operation,provider,to,use,return,the,configured,caching,operations,or,code,null,if,none,found;protected,collection,cache,operation,determine,cache,operations,cache,operation,provider,provider,collection,cache,operation,ops,null,for,cache,annotation,parser,annotation,parser,this,annotation,parsers,collection,cache,operation,ann,ops,provider,get,cache,operations,annotation,parser,if,ann,ops,null,if,ops,null,ops,new,array,list,ops,add,all,ann,ops,return,ops
AnnotationCacheOperationSource -> protected Collection<CacheOperation> determineCacheOperations(CacheOperationProvider provider);1467808333;Determine the cache operation(s) for the given {@link CacheOperationProvider}._<p>This implementation delegates to configured_{@link CacheAnnotationParser}s for parsing known annotations into_Spring's metadata attribute class._<p>Can be overridden to support custom annotations that carry_caching metadata._@param provider the cache operation provider to use_@return the configured caching operations, or {@code null} if none found;protected Collection<CacheOperation> determineCacheOperations(CacheOperationProvider provider) {_		Collection<CacheOperation> ops = null__		for (CacheAnnotationParser annotationParser : this.annotationParsers) {_			Collection<CacheOperation> annOps = provider.getCacheOperations(annotationParser)__			if (annOps != null) {_				if (ops == null) {_					ops = new ArrayList<>()__				}_				ops.addAll(annOps)__			}_		}_		return ops__	};determine,the,cache,operation,s,for,the,given,link,cache,operation,provider,p,this,implementation,delegates,to,configured,link,cache,annotation,parser,s,for,parsing,known,annotations,into,spring,s,metadata,attribute,class,p,can,be,overridden,to,support,custom,annotations,that,carry,caching,metadata,param,provider,the,cache,operation,provider,to,use,return,the,configured,caching,operations,or,code,null,if,none,found;protected,collection,cache,operation,determine,cache,operations,cache,operation,provider,provider,collection,cache,operation,ops,null,for,cache,annotation,parser,annotation,parser,this,annotation,parsers,collection,cache,operation,ann,ops,provider,get,cache,operations,annotation,parser,if,ann,ops,null,if,ops,null,ops,new,array,list,ops,add,all,ann,ops,return,ops
AnnotationCacheOperationSource -> protected Collection<CacheOperation> determineCacheOperations(CacheOperationProvider provider);1476285064;Determine the cache operation(s) for the given {@link CacheOperationProvider}._<p>This implementation delegates to configured_{@link CacheAnnotationParser}s for parsing known annotations into_Spring's metadata attribute class._<p>Can be overridden to support custom annotations that carry_caching metadata._@param provider the cache operation provider to use_@return the configured caching operations, or {@code null} if none found;protected Collection<CacheOperation> determineCacheOperations(CacheOperationProvider provider) {_		Collection<CacheOperation> ops = null__		for (CacheAnnotationParser annotationParser : this.annotationParsers) {_			Collection<CacheOperation> annOps = provider.getCacheOperations(annotationParser)__			if (annOps != null) {_				if (ops == null) {_					ops = new ArrayList<>()__				}_				ops.addAll(annOps)__			}_		}_		return ops__	};determine,the,cache,operation,s,for,the,given,link,cache,operation,provider,p,this,implementation,delegates,to,configured,link,cache,annotation,parser,s,for,parsing,known,annotations,into,spring,s,metadata,attribute,class,p,can,be,overridden,to,support,custom,annotations,that,carry,caching,metadata,param,provider,the,cache,operation,provider,to,use,return,the,configured,caching,operations,or,code,null,if,none,found;protected,collection,cache,operation,determine,cache,operations,cache,operation,provider,provider,collection,cache,operation,ops,null,for,cache,annotation,parser,annotation,parser,this,annotation,parsers,collection,cache,operation,ann,ops,provider,get,cache,operations,annotation,parser,if,ann,ops,null,if,ops,null,ops,new,array,list,ops,add,all,ann,ops,return,ops
AnnotationCacheOperationSource -> @Override 	protected boolean allowPublicMethodsOnly();1328020251;By default, only public methods can be made cacheable.;@Override_	protected boolean allowPublicMethodsOnly() {_		return this.publicMethodsOnly__	};by,default,only,public,methods,can,be,made,cacheable;override,protected,boolean,allow,public,methods,only,return,this,public,methods,only
AnnotationCacheOperationSource -> @Override 	protected boolean allowPublicMethodsOnly();1355279383;By default, only public methods can be made cacheable.;@Override_	protected boolean allowPublicMethodsOnly() {_		return this.publicMethodsOnly__	};by,default,only,public,methods,can,be,made,cacheable;override,protected,boolean,allow,public,methods,only,return,this,public,methods,only
AnnotationCacheOperationSource -> @Override 	protected boolean allowPublicMethodsOnly();1396272050;By default, only public methods can be made cacheable.;@Override_	protected boolean allowPublicMethodsOnly() {_		return this.publicMethodsOnly__	};by,default,only,public,methods,can,be,made,cacheable;override,protected,boolean,allow,public,methods,only,return,this,public,methods,only
AnnotationCacheOperationSource -> @Override 	protected boolean allowPublicMethodsOnly();1467730834;By default, only public methods can be made cacheable.;@Override_	protected boolean allowPublicMethodsOnly() {_		return this.publicMethodsOnly__	};by,default,only,public,methods,can,be,made,cacheable;override,protected,boolean,allow,public,methods,only,return,this,public,methods,only
AnnotationCacheOperationSource -> @Override 	protected boolean allowPublicMethodsOnly();1467808333;By default, only public methods can be made cacheable.;@Override_	protected boolean allowPublicMethodsOnly() {_		return this.publicMethodsOnly__	};by,default,only,public,methods,can,be,made,cacheable;override,protected,boolean,allow,public,methods,only,return,this,public,methods,only
AnnotationCacheOperationSource -> @Override 	protected boolean allowPublicMethodsOnly();1476285064;By default, only public methods can be made cacheable.;@Override_	protected boolean allowPublicMethodsOnly() {_		return this.publicMethodsOnly__	};by,default,only,public,methods,can,be,made,cacheable;override,protected,boolean,allow,public,methods,only,return,this,public,methods,only
AnnotationCacheOperationSource -> @Override 	protected boolean allowPublicMethodsOnly();1495868221;By default, only public methods can be made cacheable.;@Override_	protected boolean allowPublicMethodsOnly() {_		return this.publicMethodsOnly__	};by,default,only,public,methods,can,be,made,cacheable;override,protected,boolean,allow,public,methods,only,return,this,public,methods,only
AnnotationCacheOperationSource -> @Override 	protected boolean allowPublicMethodsOnly();1497341397;By default, only public methods can be made cacheable.;@Override_	protected boolean allowPublicMethodsOnly() {_		return this.publicMethodsOnly__	};by,default,only,public,methods,can,be,made,cacheable;override,protected,boolean,allow,public,methods,only,return,this,public,methods,only
AnnotationCacheOperationSource -> @Override 	protected boolean allowPublicMethodsOnly();1502974979;By default, only public methods can be made cacheable.;@Override_	protected boolean allowPublicMethodsOnly() {_		return this.publicMethodsOnly__	};by,default,only,public,methods,can,be,made,cacheable;override,protected,boolean,allow,public,methods,only,return,this,public,methods,only
AnnotationCacheOperationSource -> @Override 	protected boolean allowPublicMethodsOnly();1530174524;By default, only public methods can be made cacheable.;@Override_	protected boolean allowPublicMethodsOnly() {_		return this.publicMethodsOnly__	};by,default,only,public,methods,can,be,made,cacheable;override,protected,boolean,allow,public,methods,only,return,this,public,methods,only
AnnotationCacheOperationSource -> @Override 	protected boolean allowPublicMethodsOnly();1533598557;By default, only public methods can be made cacheable.;@Override_	protected boolean allowPublicMethodsOnly() {_		return this.publicMethodsOnly__	};by,default,only,public,methods,can,be,made,cacheable;override,protected,boolean,allow,public,methods,only,return,this,public,methods,only
AnnotationCacheOperationSource -> @Override 	protected boolean allowPublicMethodsOnly();1533765377;By default, only public methods can be made cacheable.;@Override_	protected boolean allowPublicMethodsOnly() {_		return this.publicMethodsOnly__	};by,default,only,public,methods,can,be,made,cacheable;override,protected,boolean,allow,public,methods,only,return,this,public,methods,only
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(boolean publicMethodsOnly);1328020251;Create a default {@code AnnotationCacheOperationSource}, supporting public methods_that carry the {@code Cacheable} and {@code CacheEvict} annotations._@param publicMethodsOnly whether to support only annotated public methods_typically for use with proxy-based AOP), or protected/private methods as well_(typically used with AspectJ class weaving);public AnnotationCacheOperationSource(boolean publicMethodsOnly) {_		this.publicMethodsOnly = publicMethodsOnly__		this.annotationParsers = new LinkedHashSet<CacheAnnotationParser>(1)__		this.annotationParsers.add(new SpringCacheAnnotationParser())__	};create,a,default,code,annotation,cache,operation,source,supporting,public,methods,that,carry,the,code,cacheable,and,code,cache,evict,annotations,param,public,methods,only,whether,to,support,only,annotated,public,methods,typically,for,use,with,proxy,based,aop,or,protected,private,methods,as,well,typically,used,with,aspect,j,class,weaving;public,annotation,cache,operation,source,boolean,public,methods,only,this,public,methods,only,public,methods,only,this,annotation,parsers,new,linked,hash,set,cache,annotation,parser,1,this,annotation,parsers,add,new,spring,cache,annotation,parser
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(boolean publicMethodsOnly);1355279383;Create a default {@code AnnotationCacheOperationSource}, supporting public methods_that carry the {@code Cacheable} and {@code CacheEvict} annotations._@param publicMethodsOnly whether to support only annotated public methods_typically for use with proxy-based AOP), or protected/private methods as well_(typically used with AspectJ class weaving);public AnnotationCacheOperationSource(boolean publicMethodsOnly) {_		this.publicMethodsOnly = publicMethodsOnly__		this.annotationParsers = new LinkedHashSet<CacheAnnotationParser>(1)__		this.annotationParsers.add(new SpringCacheAnnotationParser())__	};create,a,default,code,annotation,cache,operation,source,supporting,public,methods,that,carry,the,code,cacheable,and,code,cache,evict,annotations,param,public,methods,only,whether,to,support,only,annotated,public,methods,typically,for,use,with,proxy,based,aop,or,protected,private,methods,as,well,typically,used,with,aspect,j,class,weaving;public,annotation,cache,operation,source,boolean,public,methods,only,this,public,methods,only,public,methods,only,this,annotation,parsers,new,linked,hash,set,cache,annotation,parser,1,this,annotation,parsers,add,new,spring,cache,annotation,parser
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(boolean publicMethodsOnly);1396272050;Create a default {@code AnnotationCacheOperationSource}, supporting public methods_that carry the {@code Cacheable} and {@code CacheEvict} annotations._@param publicMethodsOnly whether to support only annotated public methods_typically for use with proxy-based AOP), or protected/private methods as well_(typically used with AspectJ class weaving);public AnnotationCacheOperationSource(boolean publicMethodsOnly) {_		this.publicMethodsOnly = publicMethodsOnly__		this.annotationParsers = new LinkedHashSet<CacheAnnotationParser>(1)__		this.annotationParsers.add(new SpringCacheAnnotationParser())__	};create,a,default,code,annotation,cache,operation,source,supporting,public,methods,that,carry,the,code,cacheable,and,code,cache,evict,annotations,param,public,methods,only,whether,to,support,only,annotated,public,methods,typically,for,use,with,proxy,based,aop,or,protected,private,methods,as,well,typically,used,with,aspect,j,class,weaving;public,annotation,cache,operation,source,boolean,public,methods,only,this,public,methods,only,public,methods,only,this,annotation,parsers,new,linked,hash,set,cache,annotation,parser,1,this,annotation,parsers,add,new,spring,cache,annotation,parser
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(boolean publicMethodsOnly);1467730834;Create a default {@code AnnotationCacheOperationSource}, supporting public methods_that carry the {@code Cacheable} and {@code CacheEvict} annotations._@param publicMethodsOnly whether to support only annotated public methods_typically for use with proxy-based AOP), or protected/private methods as well_(typically used with AspectJ class weaving);public AnnotationCacheOperationSource(boolean publicMethodsOnly) {_		this.publicMethodsOnly = publicMethodsOnly__		this.annotationParsers = new LinkedHashSet<>(1)__		this.annotationParsers.add(new SpringCacheAnnotationParser())__	};create,a,default,code,annotation,cache,operation,source,supporting,public,methods,that,carry,the,code,cacheable,and,code,cache,evict,annotations,param,public,methods,only,whether,to,support,only,annotated,public,methods,typically,for,use,with,proxy,based,aop,or,protected,private,methods,as,well,typically,used,with,aspect,j,class,weaving;public,annotation,cache,operation,source,boolean,public,methods,only,this,public,methods,only,public,methods,only,this,annotation,parsers,new,linked,hash,set,1,this,annotation,parsers,add,new,spring,cache,annotation,parser
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(boolean publicMethodsOnly);1467808333;Create a default {@code AnnotationCacheOperationSource}, supporting public methods_that carry the {@code Cacheable} and {@code CacheEvict} annotations._@param publicMethodsOnly whether to support only annotated public methods_typically for use with proxy-based AOP), or protected/private methods as well_(typically used with AspectJ class weaving);public AnnotationCacheOperationSource(boolean publicMethodsOnly) {_		this.publicMethodsOnly = publicMethodsOnly__		this.annotationParsers = new LinkedHashSet<>(1)__		this.annotationParsers.add(new SpringCacheAnnotationParser())__	};create,a,default,code,annotation,cache,operation,source,supporting,public,methods,that,carry,the,code,cacheable,and,code,cache,evict,annotations,param,public,methods,only,whether,to,support,only,annotated,public,methods,typically,for,use,with,proxy,based,aop,or,protected,private,methods,as,well,typically,used,with,aspect,j,class,weaving;public,annotation,cache,operation,source,boolean,public,methods,only,this,public,methods,only,public,methods,only,this,annotation,parsers,new,linked,hash,set,1,this,annotation,parsers,add,new,spring,cache,annotation,parser
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(boolean publicMethodsOnly);1476285064;Create a default {@code AnnotationCacheOperationSource}, supporting public methods_that carry the {@code Cacheable} and {@code CacheEvict} annotations._@param publicMethodsOnly whether to support only annotated public methods_typically for use with proxy-based AOP), or protected/private methods as well_(typically used with AspectJ class weaving);public AnnotationCacheOperationSource(boolean publicMethodsOnly) {_		this.publicMethodsOnly = publicMethodsOnly__		this.annotationParsers = new LinkedHashSet<>(1)__		this.annotationParsers.add(new SpringCacheAnnotationParser())__	};create,a,default,code,annotation,cache,operation,source,supporting,public,methods,that,carry,the,code,cacheable,and,code,cache,evict,annotations,param,public,methods,only,whether,to,support,only,annotated,public,methods,typically,for,use,with,proxy,based,aop,or,protected,private,methods,as,well,typically,used,with,aspect,j,class,weaving;public,annotation,cache,operation,source,boolean,public,methods,only,this,public,methods,only,public,methods,only,this,annotation,parsers,new,linked,hash,set,1,this,annotation,parsers,add,new,spring,cache,annotation,parser
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(boolean publicMethodsOnly);1495868221;Create a default {@code AnnotationCacheOperationSource}, supporting public methods_that carry the {@code Cacheable} and {@code CacheEvict} annotations._@param publicMethodsOnly whether to support only annotated public methods_typically for use with proxy-based AOP), or protected/private methods as well_(typically used with AspectJ class weaving);public AnnotationCacheOperationSource(boolean publicMethodsOnly) {_		this.publicMethodsOnly = publicMethodsOnly__		this.annotationParsers = new LinkedHashSet<>(1)__		this.annotationParsers.add(new SpringCacheAnnotationParser())__	};create,a,default,code,annotation,cache,operation,source,supporting,public,methods,that,carry,the,code,cacheable,and,code,cache,evict,annotations,param,public,methods,only,whether,to,support,only,annotated,public,methods,typically,for,use,with,proxy,based,aop,or,protected,private,methods,as,well,typically,used,with,aspect,j,class,weaving;public,annotation,cache,operation,source,boolean,public,methods,only,this,public,methods,only,public,methods,only,this,annotation,parsers,new,linked,hash,set,1,this,annotation,parsers,add,new,spring,cache,annotation,parser
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(boolean publicMethodsOnly);1497341397;Create a default {@code AnnotationCacheOperationSource}, supporting public methods_that carry the {@code Cacheable} and {@code CacheEvict} annotations._@param publicMethodsOnly whether to support only annotated public methods_typically for use with proxy-based AOP), or protected/private methods as well_(typically used with AspectJ class weaving);public AnnotationCacheOperationSource(boolean publicMethodsOnly) {_		this.publicMethodsOnly = publicMethodsOnly__		this.annotationParsers = new LinkedHashSet<>(1)__		this.annotationParsers.add(new SpringCacheAnnotationParser())__	};create,a,default,code,annotation,cache,operation,source,supporting,public,methods,that,carry,the,code,cacheable,and,code,cache,evict,annotations,param,public,methods,only,whether,to,support,only,annotated,public,methods,typically,for,use,with,proxy,based,aop,or,protected,private,methods,as,well,typically,used,with,aspect,j,class,weaving;public,annotation,cache,operation,source,boolean,public,methods,only,this,public,methods,only,public,methods,only,this,annotation,parsers,new,linked,hash,set,1,this,annotation,parsers,add,new,spring,cache,annotation,parser
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(boolean publicMethodsOnly);1502974979;Create a default {@code AnnotationCacheOperationSource}, supporting public methods_that carry the {@code Cacheable} and {@code CacheEvict} annotations._@param publicMethodsOnly whether to support only annotated public methods_typically for use with proxy-based AOP), or protected/private methods as well_(typically used with AspectJ class weaving);public AnnotationCacheOperationSource(boolean publicMethodsOnly) {_		this.publicMethodsOnly = publicMethodsOnly__		this.annotationParsers = new LinkedHashSet<>(1)__		this.annotationParsers.add(new SpringCacheAnnotationParser())__	};create,a,default,code,annotation,cache,operation,source,supporting,public,methods,that,carry,the,code,cacheable,and,code,cache,evict,annotations,param,public,methods,only,whether,to,support,only,annotated,public,methods,typically,for,use,with,proxy,based,aop,or,protected,private,methods,as,well,typically,used,with,aspect,j,class,weaving;public,annotation,cache,operation,source,boolean,public,methods,only,this,public,methods,only,public,methods,only,this,annotation,parsers,new,linked,hash,set,1,this,annotation,parsers,add,new,spring,cache,annotation,parser
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(boolean publicMethodsOnly);1530174524;Create a default {@code AnnotationCacheOperationSource}, supporting public methods_that carry the {@code Cacheable} and {@code CacheEvict} annotations._@param publicMethodsOnly whether to support only annotated public methods_typically for use with proxy-based AOP), or protected/private methods as well_(typically used with AspectJ class weaving);public AnnotationCacheOperationSource(boolean publicMethodsOnly) {_		this.publicMethodsOnly = publicMethodsOnly__		this.annotationParsers = new LinkedHashSet<>(1)__		this.annotationParsers.add(new SpringCacheAnnotationParser())__	};create,a,default,code,annotation,cache,operation,source,supporting,public,methods,that,carry,the,code,cacheable,and,code,cache,evict,annotations,param,public,methods,only,whether,to,support,only,annotated,public,methods,typically,for,use,with,proxy,based,aop,or,protected,private,methods,as,well,typically,used,with,aspect,j,class,weaving;public,annotation,cache,operation,source,boolean,public,methods,only,this,public,methods,only,public,methods,only,this,annotation,parsers,new,linked,hash,set,1,this,annotation,parsers,add,new,spring,cache,annotation,parser
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(boolean publicMethodsOnly);1533598557;Create a default {@code AnnotationCacheOperationSource}, supporting public methods_that carry the {@code Cacheable} and {@code CacheEvict} annotations._@param publicMethodsOnly whether to support only annotated public methods_typically for use with proxy-based AOP), or protected/private methods as well_(typically used with AspectJ class weaving);public AnnotationCacheOperationSource(boolean publicMethodsOnly) {_		this.publicMethodsOnly = publicMethodsOnly__		this.annotationParsers = Collections.singleton(new SpringCacheAnnotationParser())__	};create,a,default,code,annotation,cache,operation,source,supporting,public,methods,that,carry,the,code,cacheable,and,code,cache,evict,annotations,param,public,methods,only,whether,to,support,only,annotated,public,methods,typically,for,use,with,proxy,based,aop,or,protected,private,methods,as,well,typically,used,with,aspect,j,class,weaving;public,annotation,cache,operation,source,boolean,public,methods,only,this,public,methods,only,public,methods,only,this,annotation,parsers,collections,singleton,new,spring,cache,annotation,parser
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(boolean publicMethodsOnly);1533765377;Create a default {@code AnnotationCacheOperationSource}, supporting public methods_that carry the {@code Cacheable} and {@code CacheEvict} annotations._@param publicMethodsOnly whether to support only annotated public methods_typically for use with proxy-based AOP), or protected/private methods as well_(typically used with AspectJ class weaving);public AnnotationCacheOperationSource(boolean publicMethodsOnly) {_		this.publicMethodsOnly = publicMethodsOnly__		this.annotationParsers = Collections.singleton(new SpringCacheAnnotationParser())__	};create,a,default,code,annotation,cache,operation,source,supporting,public,methods,that,carry,the,code,cacheable,and,code,cache,evict,annotations,param,public,methods,only,whether,to,support,only,annotated,public,methods,typically,for,use,with,proxy,based,aop,or,protected,private,methods,as,well,typically,used,with,aspect,j,class,weaving;public,annotation,cache,operation,source,boolean,public,methods,only,this,public,methods,only,public,methods,only,this,annotation,parsers,collections,singleton,new,spring,cache,annotation,parser
AnnotationCacheOperationSource -> CacheOperationProvider -> @Nullable 		Collection<CacheOperation> getCacheOperations(CacheAnnotationParser parser)_;1495868221;Return the {@link CacheOperation} instance(s) provided by the specified parser._@param parser the parser to use_@return the cache operations, or {@code null} if none found;@Nullable_		Collection<CacheOperation> getCacheOperations(CacheAnnotationParser parser)_;return,the,link,cache,operation,instance,s,provided,by,the,specified,parser,param,parser,the,parser,to,use,return,the,cache,operations,or,code,null,if,none,found;nullable,collection,cache,operation,get,cache,operations,cache,annotation,parser,parser
AnnotationCacheOperationSource -> CacheOperationProvider -> @Nullable 		Collection<CacheOperation> getCacheOperations(CacheAnnotationParser parser)_;1497341397;Return the {@link CacheOperation} instance(s) provided by the specified parser._@param parser the parser to use_@return the cache operations, or {@code null} if none found;@Nullable_		Collection<CacheOperation> getCacheOperations(CacheAnnotationParser parser)_;return,the,link,cache,operation,instance,s,provided,by,the,specified,parser,param,parser,the,parser,to,use,return,the,cache,operations,or,code,null,if,none,found;nullable,collection,cache,operation,get,cache,operations,cache,annotation,parser,parser
AnnotationCacheOperationSource -> CacheOperationProvider -> @Nullable 		Collection<CacheOperation> getCacheOperations(CacheAnnotationParser parser)_;1502974979;Return the {@link CacheOperation} instance(s) provided by the specified parser._@param parser the parser to use_@return the cache operations, or {@code null} if none found;@Nullable_		Collection<CacheOperation> getCacheOperations(CacheAnnotationParser parser)_;return,the,link,cache,operation,instance,s,provided,by,the,specified,parser,param,parser,the,parser,to,use,return,the,cache,operations,or,code,null,if,none,found;nullable,collection,cache,operation,get,cache,operations,cache,annotation,parser,parser
AnnotationCacheOperationSource -> CacheOperationProvider -> @Nullable 		Collection<CacheOperation> getCacheOperations(CacheAnnotationParser parser)_;1530174524;Return the {@link CacheOperation} instance(s) provided by the specified parser._@param parser the parser to use_@return the cache operations, or {@code null} if none found;@Nullable_		Collection<CacheOperation> getCacheOperations(CacheAnnotationParser parser)_;return,the,link,cache,operation,instance,s,provided,by,the,specified,parser,param,parser,the,parser,to,use,return,the,cache,operations,or,code,null,if,none,found;nullable,collection,cache,operation,get,cache,operations,cache,annotation,parser,parser
AnnotationCacheOperationSource -> CacheOperationProvider -> @Nullable 		Collection<CacheOperation> getCacheOperations(CacheAnnotationParser parser)_;1533598557;Return the {@link CacheOperation} instance(s) provided by the specified parser._@param parser the parser to use_@return the cache operations, or {@code null} if none found;@Nullable_		Collection<CacheOperation> getCacheOperations(CacheAnnotationParser parser)_;return,the,link,cache,operation,instance,s,provided,by,the,specified,parser,param,parser,the,parser,to,use,return,the,cache,operations,or,code,null,if,none,found;nullable,collection,cache,operation,get,cache,operations,cache,annotation,parser,parser
AnnotationCacheOperationSource -> CacheOperationProvider -> @Nullable 		Collection<CacheOperation> getCacheOperations(CacheAnnotationParser parser)_;1533765377;Return the {@link CacheOperation} instance(s) provided by the specified parser._@param parser the parser to use_@return the cache operations, or {@code null} if none found;@Nullable_		Collection<CacheOperation> getCacheOperations(CacheAnnotationParser parser)_;return,the,link,cache,operation,instance,s,provided,by,the,specified,parser,param,parser,the,parser,to,use,return,the,cache,operations,or,code,null,if,none,found;nullable,collection,cache,operation,get,cache,operations,cache,annotation,parser,parser
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(CacheAnnotationParser annotationParser);1355279383;Create a custom AnnotationCacheOperationSource._@param annotationParser the CacheAnnotationParser to use;public AnnotationCacheOperationSource(CacheAnnotationParser annotationParser) {_		this.publicMethodsOnly = true__		Assert.notNull(annotationParser, "CacheAnnotationParser must not be null")__		this.annotationParsers = Collections.singleton(annotationParser)__	};create,a,custom,annotation,cache,operation,source,param,annotation,parser,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,cache,annotation,parser,annotation,parser,this,public,methods,only,true,assert,not,null,annotation,parser,cache,annotation,parser,must,not,be,null,this,annotation,parsers,collections,singleton,annotation,parser
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(CacheAnnotationParser annotationParser);1396272050;Create a custom AnnotationCacheOperationSource._@param annotationParser the CacheAnnotationParser to use;public AnnotationCacheOperationSource(CacheAnnotationParser annotationParser) {_		this.publicMethodsOnly = true__		Assert.notNull(annotationParser, "CacheAnnotationParser must not be null")__		this.annotationParsers = Collections.singleton(annotationParser)__	};create,a,custom,annotation,cache,operation,source,param,annotation,parser,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,cache,annotation,parser,annotation,parser,this,public,methods,only,true,assert,not,null,annotation,parser,cache,annotation,parser,must,not,be,null,this,annotation,parsers,collections,singleton,annotation,parser
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(CacheAnnotationParser annotationParser);1467730834;Create a custom AnnotationCacheOperationSource._@param annotationParser the CacheAnnotationParser to use;public AnnotationCacheOperationSource(CacheAnnotationParser annotationParser) {_		this.publicMethodsOnly = true__		Assert.notNull(annotationParser, "CacheAnnotationParser must not be null")__		this.annotationParsers = Collections.singleton(annotationParser)__	};create,a,custom,annotation,cache,operation,source,param,annotation,parser,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,cache,annotation,parser,annotation,parser,this,public,methods,only,true,assert,not,null,annotation,parser,cache,annotation,parser,must,not,be,null,this,annotation,parsers,collections,singleton,annotation,parser
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(CacheAnnotationParser annotationParser);1467808333;Create a custom AnnotationCacheOperationSource._@param annotationParser the CacheAnnotationParser to use;public AnnotationCacheOperationSource(CacheAnnotationParser annotationParser) {_		this.publicMethodsOnly = true__		Assert.notNull(annotationParser, "CacheAnnotationParser must not be null")__		this.annotationParsers = Collections.singleton(annotationParser)__	};create,a,custom,annotation,cache,operation,source,param,annotation,parser,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,cache,annotation,parser,annotation,parser,this,public,methods,only,true,assert,not,null,annotation,parser,cache,annotation,parser,must,not,be,null,this,annotation,parsers,collections,singleton,annotation,parser
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(CacheAnnotationParser annotationParser);1476285064;Create a custom AnnotationCacheOperationSource._@param annotationParser the CacheAnnotationParser to use;public AnnotationCacheOperationSource(CacheAnnotationParser annotationParser) {_		this.publicMethodsOnly = true__		Assert.notNull(annotationParser, "CacheAnnotationParser must not be null")__		this.annotationParsers = Collections.singleton(annotationParser)__	};create,a,custom,annotation,cache,operation,source,param,annotation,parser,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,cache,annotation,parser,annotation,parser,this,public,methods,only,true,assert,not,null,annotation,parser,cache,annotation,parser,must,not,be,null,this,annotation,parsers,collections,singleton,annotation,parser
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(CacheAnnotationParser annotationParser);1495868221;Create a custom AnnotationCacheOperationSource._@param annotationParser the CacheAnnotationParser to use;public AnnotationCacheOperationSource(CacheAnnotationParser annotationParser) {_		this.publicMethodsOnly = true__		Assert.notNull(annotationParser, "CacheAnnotationParser must not be null")__		this.annotationParsers = Collections.singleton(annotationParser)__	};create,a,custom,annotation,cache,operation,source,param,annotation,parser,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,cache,annotation,parser,annotation,parser,this,public,methods,only,true,assert,not,null,annotation,parser,cache,annotation,parser,must,not,be,null,this,annotation,parsers,collections,singleton,annotation,parser
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(CacheAnnotationParser annotationParser);1497341397;Create a custom AnnotationCacheOperationSource._@param annotationParser the CacheAnnotationParser to use;public AnnotationCacheOperationSource(CacheAnnotationParser annotationParser) {_		this.publicMethodsOnly = true__		Assert.notNull(annotationParser, "CacheAnnotationParser must not be null")__		this.annotationParsers = Collections.singleton(annotationParser)__	};create,a,custom,annotation,cache,operation,source,param,annotation,parser,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,cache,annotation,parser,annotation,parser,this,public,methods,only,true,assert,not,null,annotation,parser,cache,annotation,parser,must,not,be,null,this,annotation,parsers,collections,singleton,annotation,parser
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(CacheAnnotationParser annotationParser);1502974979;Create a custom AnnotationCacheOperationSource._@param annotationParser the CacheAnnotationParser to use;public AnnotationCacheOperationSource(CacheAnnotationParser annotationParser) {_		this.publicMethodsOnly = true__		Assert.notNull(annotationParser, "CacheAnnotationParser must not be null")__		this.annotationParsers = Collections.singleton(annotationParser)__	};create,a,custom,annotation,cache,operation,source,param,annotation,parser,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,cache,annotation,parser,annotation,parser,this,public,methods,only,true,assert,not,null,annotation,parser,cache,annotation,parser,must,not,be,null,this,annotation,parsers,collections,singleton,annotation,parser
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(CacheAnnotationParser annotationParser);1530174524;Create a custom AnnotationCacheOperationSource._@param annotationParser the CacheAnnotationParser to use;public AnnotationCacheOperationSource(CacheAnnotationParser annotationParser) {_		this.publicMethodsOnly = true__		Assert.notNull(annotationParser, "CacheAnnotationParser must not be null")__		this.annotationParsers = Collections.singleton(annotationParser)__	};create,a,custom,annotation,cache,operation,source,param,annotation,parser,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,cache,annotation,parser,annotation,parser,this,public,methods,only,true,assert,not,null,annotation,parser,cache,annotation,parser,must,not,be,null,this,annotation,parsers,collections,singleton,annotation,parser
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(CacheAnnotationParser annotationParser);1533598557;Create a custom AnnotationCacheOperationSource._@param annotationParser the CacheAnnotationParser to use;public AnnotationCacheOperationSource(CacheAnnotationParser annotationParser) {_		this.publicMethodsOnly = true__		Assert.notNull(annotationParser, "CacheAnnotationParser must not be null")__		this.annotationParsers = Collections.singleton(annotationParser)__	};create,a,custom,annotation,cache,operation,source,param,annotation,parser,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,cache,annotation,parser,annotation,parser,this,public,methods,only,true,assert,not,null,annotation,parser,cache,annotation,parser,must,not,be,null,this,annotation,parsers,collections,singleton,annotation,parser
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(CacheAnnotationParser annotationParser);1533765377;Create a custom AnnotationCacheOperationSource._@param annotationParser the CacheAnnotationParser to use;public AnnotationCacheOperationSource(CacheAnnotationParser annotationParser) {_		this.publicMethodsOnly = true__		Assert.notNull(annotationParser, "CacheAnnotationParser must not be null")__		this.annotationParsers = Collections.singleton(annotationParser)__	};create,a,custom,annotation,cache,operation,source,param,annotation,parser,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,cache,annotation,parser,annotation,parser,this,public,methods,only,true,assert,not,null,annotation,parser,cache,annotation,parser,must,not,be,null,this,annotation,parsers,collections,singleton,annotation,parser
AnnotationCacheOperationSource -> @Nullable 	protected Collection<CacheOperation> determineCacheOperations(CacheOperationProvider provider);1495868221;Determine the cache operation(s) for the given {@link CacheOperationProvider}._<p>This implementation delegates to configured_{@link CacheAnnotationParser}s for parsing known annotations into_Spring's metadata attribute class._<p>Can be overridden to support custom annotations that carry_caching metadata._@param provider the cache operation provider to use_@return the configured caching operations, or {@code null} if none found;@Nullable_	protected Collection<CacheOperation> determineCacheOperations(CacheOperationProvider provider) {_		Collection<CacheOperation> ops = null__		for (CacheAnnotationParser annotationParser : this.annotationParsers) {_			Collection<CacheOperation> annOps = provider.getCacheOperations(annotationParser)__			if (annOps != null) {_				if (ops == null) {_					ops = new ArrayList<>()__				}_				ops.addAll(annOps)__			}_		}_		return ops__	};determine,the,cache,operation,s,for,the,given,link,cache,operation,provider,p,this,implementation,delegates,to,configured,link,cache,annotation,parser,s,for,parsing,known,annotations,into,spring,s,metadata,attribute,class,p,can,be,overridden,to,support,custom,annotations,that,carry,caching,metadata,param,provider,the,cache,operation,provider,to,use,return,the,configured,caching,operations,or,code,null,if,none,found;nullable,protected,collection,cache,operation,determine,cache,operations,cache,operation,provider,provider,collection,cache,operation,ops,null,for,cache,annotation,parser,annotation,parser,this,annotation,parsers,collection,cache,operation,ann,ops,provider,get,cache,operations,annotation,parser,if,ann,ops,null,if,ops,null,ops,new,array,list,ops,add,all,ann,ops,return,ops
AnnotationCacheOperationSource -> @Nullable 	protected Collection<CacheOperation> determineCacheOperations(CacheOperationProvider provider);1497341397;Determine the cache operation(s) for the given {@link CacheOperationProvider}._<p>This implementation delegates to configured_{@link CacheAnnotationParser}s for parsing known annotations into_Spring's metadata attribute class._<p>Can be overridden to support custom annotations that carry_caching metadata._@param provider the cache operation provider to use_@return the configured caching operations, or {@code null} if none found;@Nullable_	protected Collection<CacheOperation> determineCacheOperations(CacheOperationProvider provider) {_		Collection<CacheOperation> ops = null__		for (CacheAnnotationParser annotationParser : this.annotationParsers) {_			Collection<CacheOperation> annOps = provider.getCacheOperations(annotationParser)__			if (annOps != null) {_				if (ops == null) {_					ops = new ArrayList<>()__				}_				ops.addAll(annOps)__			}_		}_		return ops__	};determine,the,cache,operation,s,for,the,given,link,cache,operation,provider,p,this,implementation,delegates,to,configured,link,cache,annotation,parser,s,for,parsing,known,annotations,into,spring,s,metadata,attribute,class,p,can,be,overridden,to,support,custom,annotations,that,carry,caching,metadata,param,provider,the,cache,operation,provider,to,use,return,the,configured,caching,operations,or,code,null,if,none,found;nullable,protected,collection,cache,operation,determine,cache,operations,cache,operation,provider,provider,collection,cache,operation,ops,null,for,cache,annotation,parser,annotation,parser,this,annotation,parsers,collection,cache,operation,ann,ops,provider,get,cache,operations,annotation,parser,if,ann,ops,null,if,ops,null,ops,new,array,list,ops,add,all,ann,ops,return,ops
AnnotationCacheOperationSource -> @Nullable 	protected Collection<CacheOperation> determineCacheOperations(CacheOperationProvider provider);1502974979;Determine the cache operation(s) for the given {@link CacheOperationProvider}._<p>This implementation delegates to configured_{@link CacheAnnotationParser}s for parsing known annotations into_Spring's metadata attribute class._<p>Can be overridden to support custom annotations that carry_caching metadata._@param provider the cache operation provider to use_@return the configured caching operations, or {@code null} if none found;@Nullable_	protected Collection<CacheOperation> determineCacheOperations(CacheOperationProvider provider) {_		Collection<CacheOperation> ops = null__		for (CacheAnnotationParser annotationParser : this.annotationParsers) {_			Collection<CacheOperation> annOps = provider.getCacheOperations(annotationParser)__			if (annOps != null) {_				if (ops == null) {_					ops = new ArrayList<>()__				}_				ops.addAll(annOps)__			}_		}_		return ops__	};determine,the,cache,operation,s,for,the,given,link,cache,operation,provider,p,this,implementation,delegates,to,configured,link,cache,annotation,parser,s,for,parsing,known,annotations,into,spring,s,metadata,attribute,class,p,can,be,overridden,to,support,custom,annotations,that,carry,caching,metadata,param,provider,the,cache,operation,provider,to,use,return,the,configured,caching,operations,or,code,null,if,none,found;nullable,protected,collection,cache,operation,determine,cache,operations,cache,operation,provider,provider,collection,cache,operation,ops,null,for,cache,annotation,parser,annotation,parser,this,annotation,parsers,collection,cache,operation,ann,ops,provider,get,cache,operations,annotation,parser,if,ann,ops,null,if,ops,null,ops,new,array,list,ops,add,all,ann,ops,return,ops
AnnotationCacheOperationSource -> @Nullable 	protected Collection<CacheOperation> determineCacheOperations(CacheOperationProvider provider);1530174524;Determine the cache operation(s) for the given {@link CacheOperationProvider}._<p>This implementation delegates to configured_{@link CacheAnnotationParser CacheAnnotationParsers} for parsing known annotations into_Spring's metadata attribute class._<p>Can be overridden to support custom annotations that carry_caching metadata._@param provider the cache operation provider to use_@return the configured caching operations, or {@code null} if none found;@Nullable_	protected Collection<CacheOperation> determineCacheOperations(CacheOperationProvider provider) {_		Collection<CacheOperation> ops = null__		for (CacheAnnotationParser annotationParser : this.annotationParsers) {_			Collection<CacheOperation> annOps = provider.getCacheOperations(annotationParser)__			if (annOps != null) {_				if (ops == null) {_					ops = new ArrayList<>()__				}_				ops.addAll(annOps)__			}_		}_		return ops__	};determine,the,cache,operation,s,for,the,given,link,cache,operation,provider,p,this,implementation,delegates,to,configured,link,cache,annotation,parser,cache,annotation,parsers,for,parsing,known,annotations,into,spring,s,metadata,attribute,class,p,can,be,overridden,to,support,custom,annotations,that,carry,caching,metadata,param,provider,the,cache,operation,provider,to,use,return,the,configured,caching,operations,or,code,null,if,none,found;nullable,protected,collection,cache,operation,determine,cache,operations,cache,operation,provider,provider,collection,cache,operation,ops,null,for,cache,annotation,parser,annotation,parser,this,annotation,parsers,collection,cache,operation,ann,ops,provider,get,cache,operations,annotation,parser,if,ann,ops,null,if,ops,null,ops,new,array,list,ops,add,all,ann,ops,return,ops
AnnotationCacheOperationSource -> @Nullable 	protected Collection<CacheOperation> determineCacheOperations(CacheOperationProvider provider);1533598557;Determine the cache operation(s) for the given {@link CacheOperationProvider}._<p>This implementation delegates to configured_{@link CacheAnnotationParser CacheAnnotationParsers}_for parsing known annotations into Spring's metadata attribute class._<p>Can be overridden to support custom annotations that carry caching metadata._@param provider the cache operation provider to use_@return the configured caching operations, or {@code null} if none found;@Nullable_	protected Collection<CacheOperation> determineCacheOperations(CacheOperationProvider provider) {_		Collection<CacheOperation> ops = null__		for (CacheAnnotationParser annotationParser : this.annotationParsers) {_			Collection<CacheOperation> annOps = provider.getCacheOperations(annotationParser)__			if (annOps != null) {_				if (ops == null) {_					ops = new ArrayList<>()__				}_				ops.addAll(annOps)__			}_		}_		return ops__	};determine,the,cache,operation,s,for,the,given,link,cache,operation,provider,p,this,implementation,delegates,to,configured,link,cache,annotation,parser,cache,annotation,parsers,for,parsing,known,annotations,into,spring,s,metadata,attribute,class,p,can,be,overridden,to,support,custom,annotations,that,carry,caching,metadata,param,provider,the,cache,operation,provider,to,use,return,the,configured,caching,operations,or,code,null,if,none,found;nullable,protected,collection,cache,operation,determine,cache,operations,cache,operation,provider,provider,collection,cache,operation,ops,null,for,cache,annotation,parser,annotation,parser,this,annotation,parsers,collection,cache,operation,ann,ops,provider,get,cache,operations,annotation,parser,if,ann,ops,null,if,ops,null,ops,new,array,list,ops,add,all,ann,ops,return,ops
AnnotationCacheOperationSource -> @Nullable 	protected Collection<CacheOperation> determineCacheOperations(CacheOperationProvider provider);1533765377;Determine the cache operation(s) for the given {@link CacheOperationProvider}._<p>This implementation delegates to configured_{@link CacheAnnotationParser CacheAnnotationParsers}_for parsing known annotations into Spring's metadata attribute class._<p>Can be overridden to support custom annotations that carry caching metadata._@param provider the cache operation provider to use_@return the configured caching operations, or {@code null} if none found;@Nullable_	protected Collection<CacheOperation> determineCacheOperations(CacheOperationProvider provider) {_		Collection<CacheOperation> ops = null__		for (CacheAnnotationParser annotationParser : this.annotationParsers) {_			Collection<CacheOperation> annOps = provider.getCacheOperations(annotationParser)__			if (annOps != null) {_				if (ops == null) {_					ops = annOps__				}_				else {_					Collection<CacheOperation> combined = new ArrayList<>(ops.size() + annOps.size())__					combined.addAll(ops)__					combined.addAll(annOps)__					ops = combined__				}_			}_		}_		return ops__	};determine,the,cache,operation,s,for,the,given,link,cache,operation,provider,p,this,implementation,delegates,to,configured,link,cache,annotation,parser,cache,annotation,parsers,for,parsing,known,annotations,into,spring,s,metadata,attribute,class,p,can,be,overridden,to,support,custom,annotations,that,carry,caching,metadata,param,provider,the,cache,operation,provider,to,use,return,the,configured,caching,operations,or,code,null,if,none,found;nullable,protected,collection,cache,operation,determine,cache,operations,cache,operation,provider,provider,collection,cache,operation,ops,null,for,cache,annotation,parser,annotation,parser,this,annotation,parsers,collection,cache,operation,ann,ops,provider,get,cache,operations,annotation,parser,if,ann,ops,null,if,ops,null,ops,ann,ops,else,collection,cache,operation,combined,new,array,list,ops,size,ann,ops,size,combined,add,all,ops,combined,add,all,ann,ops,ops,combined,return,ops
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(CacheAnnotationParser... annotationParsers);1328020251;Create a custom AnnotationCacheOperationSource._@param annotationParsers the CacheAnnotationParser to use;public AnnotationCacheOperationSource(CacheAnnotationParser... annotationParsers) {_		this.publicMethodsOnly = true__		Assert.notEmpty(annotationParsers, "At least one CacheAnnotationParser needs to be specified")__		Set<CacheAnnotationParser> parsers = new LinkedHashSet<CacheAnnotationParser>(annotationParsers.length)__		Collections.addAll(parsers, annotationParsers)__		this.annotationParsers = parsers__	};create,a,custom,annotation,cache,operation,source,param,annotation,parsers,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,cache,annotation,parser,annotation,parsers,this,public,methods,only,true,assert,not,empty,annotation,parsers,at,least,one,cache,annotation,parser,needs,to,be,specified,set,cache,annotation,parser,parsers,new,linked,hash,set,cache,annotation,parser,annotation,parsers,length,collections,add,all,parsers,annotation,parsers,this,annotation,parsers,parsers
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(CacheAnnotationParser... annotationParsers);1355279383;Create a custom AnnotationCacheOperationSource._@param annotationParsers the CacheAnnotationParser to use;public AnnotationCacheOperationSource(CacheAnnotationParser... annotationParsers) {_		this.publicMethodsOnly = true__		Assert.notEmpty(annotationParsers, "At least one CacheAnnotationParser needs to be specified")__		Set<CacheAnnotationParser> parsers = new LinkedHashSet<CacheAnnotationParser>(annotationParsers.length)__		Collections.addAll(parsers, annotationParsers)__		this.annotationParsers = parsers__	};create,a,custom,annotation,cache,operation,source,param,annotation,parsers,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,cache,annotation,parser,annotation,parsers,this,public,methods,only,true,assert,not,empty,annotation,parsers,at,least,one,cache,annotation,parser,needs,to,be,specified,set,cache,annotation,parser,parsers,new,linked,hash,set,cache,annotation,parser,annotation,parsers,length,collections,add,all,parsers,annotation,parsers,this,annotation,parsers,parsers
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(CacheAnnotationParser... annotationParsers);1396272050;Create a custom AnnotationCacheOperationSource._@param annotationParsers the CacheAnnotationParser to use;public AnnotationCacheOperationSource(CacheAnnotationParser... annotationParsers) {_		this.publicMethodsOnly = true__		Assert.notEmpty(annotationParsers, "At least one CacheAnnotationParser needs to be specified")__		Set<CacheAnnotationParser> parsers = new LinkedHashSet<CacheAnnotationParser>(annotationParsers.length)__		Collections.addAll(parsers, annotationParsers)__		this.annotationParsers = parsers__	};create,a,custom,annotation,cache,operation,source,param,annotation,parsers,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,cache,annotation,parser,annotation,parsers,this,public,methods,only,true,assert,not,empty,annotation,parsers,at,least,one,cache,annotation,parser,needs,to,be,specified,set,cache,annotation,parser,parsers,new,linked,hash,set,cache,annotation,parser,annotation,parsers,length,collections,add,all,parsers,annotation,parsers,this,annotation,parsers,parsers
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(CacheAnnotationParser... annotationParsers);1467730834;Create a custom AnnotationCacheOperationSource._@param annotationParsers the CacheAnnotationParser to use;public AnnotationCacheOperationSource(CacheAnnotationParser... annotationParsers) {_		this.publicMethodsOnly = true__		Assert.notEmpty(annotationParsers, "At least one CacheAnnotationParser needs to be specified")__		Set<CacheAnnotationParser> parsers = new LinkedHashSet<>(annotationParsers.length)__		Collections.addAll(parsers, annotationParsers)__		this.annotationParsers = parsers__	};create,a,custom,annotation,cache,operation,source,param,annotation,parsers,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,cache,annotation,parser,annotation,parsers,this,public,methods,only,true,assert,not,empty,annotation,parsers,at,least,one,cache,annotation,parser,needs,to,be,specified,set,cache,annotation,parser,parsers,new,linked,hash,set,annotation,parsers,length,collections,add,all,parsers,annotation,parsers,this,annotation,parsers,parsers
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(CacheAnnotationParser... annotationParsers);1467808333;Create a custom AnnotationCacheOperationSource._@param annotationParsers the CacheAnnotationParser to use;public AnnotationCacheOperationSource(CacheAnnotationParser... annotationParsers) {_		this.publicMethodsOnly = true__		Assert.notEmpty(annotationParsers, "At least one CacheAnnotationParser needs to be specified")__		Set<CacheAnnotationParser> parsers = new LinkedHashSet<>(annotationParsers.length)__		Collections.addAll(parsers, annotationParsers)__		this.annotationParsers = parsers__	};create,a,custom,annotation,cache,operation,source,param,annotation,parsers,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,cache,annotation,parser,annotation,parsers,this,public,methods,only,true,assert,not,empty,annotation,parsers,at,least,one,cache,annotation,parser,needs,to,be,specified,set,cache,annotation,parser,parsers,new,linked,hash,set,annotation,parsers,length,collections,add,all,parsers,annotation,parsers,this,annotation,parsers,parsers
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(CacheAnnotationParser... annotationParsers);1476285064;Create a custom AnnotationCacheOperationSource._@param annotationParsers the CacheAnnotationParser to use;public AnnotationCacheOperationSource(CacheAnnotationParser... annotationParsers) {_		this.publicMethodsOnly = true__		Assert.notEmpty(annotationParsers, "At least one CacheAnnotationParser needs to be specified")__		Set<CacheAnnotationParser> parsers = new LinkedHashSet<>(annotationParsers.length)__		Collections.addAll(parsers, annotationParsers)__		this.annotationParsers = parsers__	};create,a,custom,annotation,cache,operation,source,param,annotation,parsers,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,cache,annotation,parser,annotation,parsers,this,public,methods,only,true,assert,not,empty,annotation,parsers,at,least,one,cache,annotation,parser,needs,to,be,specified,set,cache,annotation,parser,parsers,new,linked,hash,set,annotation,parsers,length,collections,add,all,parsers,annotation,parsers,this,annotation,parsers,parsers
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(CacheAnnotationParser... annotationParsers);1495868221;Create a custom AnnotationCacheOperationSource._@param annotationParsers the CacheAnnotationParser to use;public AnnotationCacheOperationSource(CacheAnnotationParser... annotationParsers) {_		this.publicMethodsOnly = true__		Assert.notEmpty(annotationParsers, "At least one CacheAnnotationParser needs to be specified")__		Set<CacheAnnotationParser> parsers = new LinkedHashSet<>(annotationParsers.length)__		Collections.addAll(parsers, annotationParsers)__		this.annotationParsers = parsers__	};create,a,custom,annotation,cache,operation,source,param,annotation,parsers,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,cache,annotation,parser,annotation,parsers,this,public,methods,only,true,assert,not,empty,annotation,parsers,at,least,one,cache,annotation,parser,needs,to,be,specified,set,cache,annotation,parser,parsers,new,linked,hash,set,annotation,parsers,length,collections,add,all,parsers,annotation,parsers,this,annotation,parsers,parsers
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(CacheAnnotationParser... annotationParsers);1497341397;Create a custom AnnotationCacheOperationSource._@param annotationParsers the CacheAnnotationParser to use;public AnnotationCacheOperationSource(CacheAnnotationParser... annotationParsers) {_		this.publicMethodsOnly = true__		Assert.notEmpty(annotationParsers, "At least one CacheAnnotationParser needs to be specified")__		Set<CacheAnnotationParser> parsers = new LinkedHashSet<>(annotationParsers.length)__		Collections.addAll(parsers, annotationParsers)__		this.annotationParsers = parsers__	};create,a,custom,annotation,cache,operation,source,param,annotation,parsers,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,cache,annotation,parser,annotation,parsers,this,public,methods,only,true,assert,not,empty,annotation,parsers,at,least,one,cache,annotation,parser,needs,to,be,specified,set,cache,annotation,parser,parsers,new,linked,hash,set,annotation,parsers,length,collections,add,all,parsers,annotation,parsers,this,annotation,parsers,parsers
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(CacheAnnotationParser... annotationParsers);1502974979;Create a custom AnnotationCacheOperationSource._@param annotationParsers the CacheAnnotationParser to use;public AnnotationCacheOperationSource(CacheAnnotationParser... annotationParsers) {_		this.publicMethodsOnly = true__		Assert.notEmpty(annotationParsers, "At least one CacheAnnotationParser needs to be specified")__		Set<CacheAnnotationParser> parsers = new LinkedHashSet<>(annotationParsers.length)__		Collections.addAll(parsers, annotationParsers)__		this.annotationParsers = parsers__	};create,a,custom,annotation,cache,operation,source,param,annotation,parsers,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,cache,annotation,parser,annotation,parsers,this,public,methods,only,true,assert,not,empty,annotation,parsers,at,least,one,cache,annotation,parser,needs,to,be,specified,set,cache,annotation,parser,parsers,new,linked,hash,set,annotation,parsers,length,collections,add,all,parsers,annotation,parsers,this,annotation,parsers,parsers
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(CacheAnnotationParser... annotationParsers);1530174524;Create a custom AnnotationCacheOperationSource._@param annotationParsers the CacheAnnotationParser to use;public AnnotationCacheOperationSource(CacheAnnotationParser... annotationParsers) {_		this.publicMethodsOnly = true__		Assert.notEmpty(annotationParsers, "At least one CacheAnnotationParser needs to be specified")__		Set<CacheAnnotationParser> parsers = new LinkedHashSet<>(annotationParsers.length)__		Collections.addAll(parsers, annotationParsers)__		this.annotationParsers = parsers__	};create,a,custom,annotation,cache,operation,source,param,annotation,parsers,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,cache,annotation,parser,annotation,parsers,this,public,methods,only,true,assert,not,empty,annotation,parsers,at,least,one,cache,annotation,parser,needs,to,be,specified,set,cache,annotation,parser,parsers,new,linked,hash,set,annotation,parsers,length,collections,add,all,parsers,annotation,parsers,this,annotation,parsers,parsers
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(CacheAnnotationParser... annotationParsers);1533598557;Create a custom AnnotationCacheOperationSource._@param annotationParsers the CacheAnnotationParser to use;public AnnotationCacheOperationSource(CacheAnnotationParser... annotationParsers) {_		this.publicMethodsOnly = true__		Assert.notEmpty(annotationParsers, "At least one CacheAnnotationParser needs to be specified")__		this.annotationParsers = new LinkedHashSet<>(Arrays.asList(annotationParsers))__	};create,a,custom,annotation,cache,operation,source,param,annotation,parsers,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,cache,annotation,parser,annotation,parsers,this,public,methods,only,true,assert,not,empty,annotation,parsers,at,least,one,cache,annotation,parser,needs,to,be,specified,this,annotation,parsers,new,linked,hash,set,arrays,as,list,annotation,parsers
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(CacheAnnotationParser... annotationParsers);1533765377;Create a custom AnnotationCacheOperationSource._@param annotationParsers the CacheAnnotationParser to use;public AnnotationCacheOperationSource(CacheAnnotationParser... annotationParsers) {_		this.publicMethodsOnly = true__		Assert.notEmpty(annotationParsers, "At least one CacheAnnotationParser needs to be specified")__		this.annotationParsers = new LinkedHashSet<>(Arrays.asList(annotationParsers))__	};create,a,custom,annotation,cache,operation,source,param,annotation,parsers,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,cache,annotation,parser,annotation,parsers,this,public,methods,only,true,assert,not,empty,annotation,parsers,at,least,one,cache,annotation,parser,needs,to,be,specified,this,annotation,parsers,new,linked,hash,set,arrays,as,list,annotation,parsers
AnnotationCacheOperationSource -> protected Collection<CacheOperation> determineCacheOperations(AnnotatedElement ae);1328020251;Determine the cache operation(s) for the given method or class._<p>This implementation delegates to configured_{@link CacheAnnotationParser}s for parsing known annotations into_Spring's metadata attribute class._<p>Can be overridden to support custom annotations that carry_caching metadata._@param ae the annotated method or class_@return the configured caching operations, or {@code null} if none found;protected Collection<CacheOperation> determineCacheOperations(AnnotatedElement ae) {_		Collection<CacheOperation> ops = null___		for (CacheAnnotationParser annotationParser : this.annotationParsers) {_			Collection<CacheOperation> annOps = annotationParser.parseCacheAnnotations(ae)__			if (annOps != null) {_				if (ops == null) {_					ops = new ArrayList<CacheOperation>()__				}_				ops.addAll(annOps)__			}_		}_		return ops__	};determine,the,cache,operation,s,for,the,given,method,or,class,p,this,implementation,delegates,to,configured,link,cache,annotation,parser,s,for,parsing,known,annotations,into,spring,s,metadata,attribute,class,p,can,be,overridden,to,support,custom,annotations,that,carry,caching,metadata,param,ae,the,annotated,method,or,class,return,the,configured,caching,operations,or,code,null,if,none,found;protected,collection,cache,operation,determine,cache,operations,annotated,element,ae,collection,cache,operation,ops,null,for,cache,annotation,parser,annotation,parser,this,annotation,parsers,collection,cache,operation,ann,ops,annotation,parser,parse,cache,annotations,ae,if,ann,ops,null,if,ops,null,ops,new,array,list,cache,operation,ops,add,all,ann,ops,return,ops
AnnotationCacheOperationSource -> protected Collection<CacheOperation> determineCacheOperations(AnnotatedElement ae);1355279383;Determine the cache operation(s) for the given method or class._<p>This implementation delegates to configured_{@link CacheAnnotationParser}s for parsing known annotations into_Spring's metadata attribute class._<p>Can be overridden to support custom annotations that carry_caching metadata._@param ae the annotated method or class_@return the configured caching operations, or {@code null} if none found;protected Collection<CacheOperation> determineCacheOperations(AnnotatedElement ae) {_		Collection<CacheOperation> ops = null__		for (CacheAnnotationParser annotationParser : this.annotationParsers) {_			Collection<CacheOperation> annOps = annotationParser.parseCacheAnnotations(ae)__			if (annOps != null) {_				if (ops == null) {_					ops = new ArrayList<CacheOperation>()__				}_				ops.addAll(annOps)__			}_		}_		return ops__	};determine,the,cache,operation,s,for,the,given,method,or,class,p,this,implementation,delegates,to,configured,link,cache,annotation,parser,s,for,parsing,known,annotations,into,spring,s,metadata,attribute,class,p,can,be,overridden,to,support,custom,annotations,that,carry,caching,metadata,param,ae,the,annotated,method,or,class,return,the,configured,caching,operations,or,code,null,if,none,found;protected,collection,cache,operation,determine,cache,operations,annotated,element,ae,collection,cache,operation,ops,null,for,cache,annotation,parser,annotation,parser,this,annotation,parsers,collection,cache,operation,ann,ops,annotation,parser,parse,cache,annotations,ae,if,ann,ops,null,if,ops,null,ops,new,array,list,cache,operation,ops,add,all,ann,ops,return,ops
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(Set<CacheAnnotationParser> annotationParsers);1355279383;Create a custom AnnotationCacheOperationSource._@param annotationParsers the CacheAnnotationParser to use;public AnnotationCacheOperationSource(Set<CacheAnnotationParser> annotationParsers) {_		this.publicMethodsOnly = true__		Assert.notEmpty(annotationParsers, "At least one CacheAnnotationParser needs to be specified")__		this.annotationParsers = annotationParsers__	};create,a,custom,annotation,cache,operation,source,param,annotation,parsers,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,set,cache,annotation,parser,annotation,parsers,this,public,methods,only,true,assert,not,empty,annotation,parsers,at,least,one,cache,annotation,parser,needs,to,be,specified,this,annotation,parsers,annotation,parsers
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(Set<CacheAnnotationParser> annotationParsers);1396272050;Create a custom AnnotationCacheOperationSource._@param annotationParsers the CacheAnnotationParser to use;public AnnotationCacheOperationSource(Set<CacheAnnotationParser> annotationParsers) {_		this.publicMethodsOnly = true__		Assert.notEmpty(annotationParsers, "At least one CacheAnnotationParser needs to be specified")__		this.annotationParsers = annotationParsers__	};create,a,custom,annotation,cache,operation,source,param,annotation,parsers,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,set,cache,annotation,parser,annotation,parsers,this,public,methods,only,true,assert,not,empty,annotation,parsers,at,least,one,cache,annotation,parser,needs,to,be,specified,this,annotation,parsers,annotation,parsers
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(Set<CacheAnnotationParser> annotationParsers);1467730834;Create a custom AnnotationCacheOperationSource._@param annotationParsers the CacheAnnotationParser to use;public AnnotationCacheOperationSource(Set<CacheAnnotationParser> annotationParsers) {_		this.publicMethodsOnly = true__		Assert.notEmpty(annotationParsers, "At least one CacheAnnotationParser needs to be specified")__		this.annotationParsers = annotationParsers__	};create,a,custom,annotation,cache,operation,source,param,annotation,parsers,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,set,cache,annotation,parser,annotation,parsers,this,public,methods,only,true,assert,not,empty,annotation,parsers,at,least,one,cache,annotation,parser,needs,to,be,specified,this,annotation,parsers,annotation,parsers
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(Set<CacheAnnotationParser> annotationParsers);1467808333;Create a custom AnnotationCacheOperationSource._@param annotationParsers the CacheAnnotationParser to use;public AnnotationCacheOperationSource(Set<CacheAnnotationParser> annotationParsers) {_		this.publicMethodsOnly = true__		Assert.notEmpty(annotationParsers, "At least one CacheAnnotationParser needs to be specified")__		this.annotationParsers = annotationParsers__	};create,a,custom,annotation,cache,operation,source,param,annotation,parsers,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,set,cache,annotation,parser,annotation,parsers,this,public,methods,only,true,assert,not,empty,annotation,parsers,at,least,one,cache,annotation,parser,needs,to,be,specified,this,annotation,parsers,annotation,parsers
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(Set<CacheAnnotationParser> annotationParsers);1476285064;Create a custom AnnotationCacheOperationSource._@param annotationParsers the CacheAnnotationParser to use;public AnnotationCacheOperationSource(Set<CacheAnnotationParser> annotationParsers) {_		this.publicMethodsOnly = true__		Assert.notEmpty(annotationParsers, "At least one CacheAnnotationParser needs to be specified")__		this.annotationParsers = annotationParsers__	};create,a,custom,annotation,cache,operation,source,param,annotation,parsers,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,set,cache,annotation,parser,annotation,parsers,this,public,methods,only,true,assert,not,empty,annotation,parsers,at,least,one,cache,annotation,parser,needs,to,be,specified,this,annotation,parsers,annotation,parsers
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(Set<CacheAnnotationParser> annotationParsers);1495868221;Create a custom AnnotationCacheOperationSource._@param annotationParsers the CacheAnnotationParser to use;public AnnotationCacheOperationSource(Set<CacheAnnotationParser> annotationParsers) {_		this.publicMethodsOnly = true__		Assert.notEmpty(annotationParsers, "At least one CacheAnnotationParser needs to be specified")__		this.annotationParsers = annotationParsers__	};create,a,custom,annotation,cache,operation,source,param,annotation,parsers,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,set,cache,annotation,parser,annotation,parsers,this,public,methods,only,true,assert,not,empty,annotation,parsers,at,least,one,cache,annotation,parser,needs,to,be,specified,this,annotation,parsers,annotation,parsers
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(Set<CacheAnnotationParser> annotationParsers);1497341397;Create a custom AnnotationCacheOperationSource._@param annotationParsers the CacheAnnotationParser to use;public AnnotationCacheOperationSource(Set<CacheAnnotationParser> annotationParsers) {_		this.publicMethodsOnly = true__		Assert.notEmpty(annotationParsers, "At least one CacheAnnotationParser needs to be specified")__		this.annotationParsers = annotationParsers__	};create,a,custom,annotation,cache,operation,source,param,annotation,parsers,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,set,cache,annotation,parser,annotation,parsers,this,public,methods,only,true,assert,not,empty,annotation,parsers,at,least,one,cache,annotation,parser,needs,to,be,specified,this,annotation,parsers,annotation,parsers
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(Set<CacheAnnotationParser> annotationParsers);1502974979;Create a custom AnnotationCacheOperationSource._@param annotationParsers the CacheAnnotationParser to use;public AnnotationCacheOperationSource(Set<CacheAnnotationParser> annotationParsers) {_		this.publicMethodsOnly = true__		Assert.notEmpty(annotationParsers, "At least one CacheAnnotationParser needs to be specified")__		this.annotationParsers = annotationParsers__	};create,a,custom,annotation,cache,operation,source,param,annotation,parsers,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,set,cache,annotation,parser,annotation,parsers,this,public,methods,only,true,assert,not,empty,annotation,parsers,at,least,one,cache,annotation,parser,needs,to,be,specified,this,annotation,parsers,annotation,parsers
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(Set<CacheAnnotationParser> annotationParsers);1530174524;Create a custom AnnotationCacheOperationSource._@param annotationParsers the CacheAnnotationParser to use;public AnnotationCacheOperationSource(Set<CacheAnnotationParser> annotationParsers) {_		this.publicMethodsOnly = true__		Assert.notEmpty(annotationParsers, "At least one CacheAnnotationParser needs to be specified")__		this.annotationParsers = annotationParsers__	};create,a,custom,annotation,cache,operation,source,param,annotation,parsers,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,set,cache,annotation,parser,annotation,parsers,this,public,methods,only,true,assert,not,empty,annotation,parsers,at,least,one,cache,annotation,parser,needs,to,be,specified,this,annotation,parsers,annotation,parsers
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(Set<CacheAnnotationParser> annotationParsers);1533598557;Create a custom AnnotationCacheOperationSource._@param annotationParsers the CacheAnnotationParser to use;public AnnotationCacheOperationSource(Set<CacheAnnotationParser> annotationParsers) {_		this.publicMethodsOnly = true__		Assert.notEmpty(annotationParsers, "At least one CacheAnnotationParser needs to be specified")__		this.annotationParsers = annotationParsers__	};create,a,custom,annotation,cache,operation,source,param,annotation,parsers,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,set,cache,annotation,parser,annotation,parsers,this,public,methods,only,true,assert,not,empty,annotation,parsers,at,least,one,cache,annotation,parser,needs,to,be,specified,this,annotation,parsers,annotation,parsers
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource(Set<CacheAnnotationParser> annotationParsers);1533765377;Create a custom AnnotationCacheOperationSource._@param annotationParsers the CacheAnnotationParser to use;public AnnotationCacheOperationSource(Set<CacheAnnotationParser> annotationParsers) {_		this.publicMethodsOnly = true__		Assert.notEmpty(annotationParsers, "At least one CacheAnnotationParser needs to be specified")__		this.annotationParsers = annotationParsers__	};create,a,custom,annotation,cache,operation,source,param,annotation,parsers,the,cache,annotation,parser,to,use;public,annotation,cache,operation,source,set,cache,annotation,parser,annotation,parsers,this,public,methods,only,true,assert,not,empty,annotation,parsers,at,least,one,cache,annotation,parser,needs,to,be,specified,this,annotation,parsers,annotation,parsers
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource();1328020251;Create a default AnnotationCacheOperationSource, supporting public methods_that carry the {@code Cacheable} and {@code CacheEvict} annotations.;public AnnotationCacheOperationSource() {_		this(true)__	};create,a,default,annotation,cache,operation,source,supporting,public,methods,that,carry,the,code,cacheable,and,code,cache,evict,annotations;public,annotation,cache,operation,source,this,true
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource();1355279383;Create a default AnnotationCacheOperationSource, supporting public methods_that carry the {@code Cacheable} and {@code CacheEvict} annotations.;public AnnotationCacheOperationSource() {_		this(true)__	};create,a,default,annotation,cache,operation,source,supporting,public,methods,that,carry,the,code,cacheable,and,code,cache,evict,annotations;public,annotation,cache,operation,source,this,true
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource();1396272050;Create a default AnnotationCacheOperationSource, supporting public methods_that carry the {@code Cacheable} and {@code CacheEvict} annotations.;public AnnotationCacheOperationSource() {_		this(true)__	};create,a,default,annotation,cache,operation,source,supporting,public,methods,that,carry,the,code,cacheable,and,code,cache,evict,annotations;public,annotation,cache,operation,source,this,true
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource();1467730834;Create a default AnnotationCacheOperationSource, supporting public methods_that carry the {@code Cacheable} and {@code CacheEvict} annotations.;public AnnotationCacheOperationSource() {_		this(true)__	};create,a,default,annotation,cache,operation,source,supporting,public,methods,that,carry,the,code,cacheable,and,code,cache,evict,annotations;public,annotation,cache,operation,source,this,true
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource();1467808333;Create a default AnnotationCacheOperationSource, supporting public methods_that carry the {@code Cacheable} and {@code CacheEvict} annotations.;public AnnotationCacheOperationSource() {_		this(true)__	};create,a,default,annotation,cache,operation,source,supporting,public,methods,that,carry,the,code,cacheable,and,code,cache,evict,annotations;public,annotation,cache,operation,source,this,true
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource();1476285064;Create a default AnnotationCacheOperationSource, supporting public methods_that carry the {@code Cacheable} and {@code CacheEvict} annotations.;public AnnotationCacheOperationSource() {_		this(true)__	};create,a,default,annotation,cache,operation,source,supporting,public,methods,that,carry,the,code,cacheable,and,code,cache,evict,annotations;public,annotation,cache,operation,source,this,true
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource();1495868221;Create a default AnnotationCacheOperationSource, supporting public methods_that carry the {@code Cacheable} and {@code CacheEvict} annotations.;public AnnotationCacheOperationSource() {_		this(true)__	};create,a,default,annotation,cache,operation,source,supporting,public,methods,that,carry,the,code,cacheable,and,code,cache,evict,annotations;public,annotation,cache,operation,source,this,true
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource();1497341397;Create a default AnnotationCacheOperationSource, supporting public methods_that carry the {@code Cacheable} and {@code CacheEvict} annotations.;public AnnotationCacheOperationSource() {_		this(true)__	};create,a,default,annotation,cache,operation,source,supporting,public,methods,that,carry,the,code,cacheable,and,code,cache,evict,annotations;public,annotation,cache,operation,source,this,true
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource();1502974979;Create a default AnnotationCacheOperationSource, supporting public methods_that carry the {@code Cacheable} and {@code CacheEvict} annotations.;public AnnotationCacheOperationSource() {_		this(true)__	};create,a,default,annotation,cache,operation,source,supporting,public,methods,that,carry,the,code,cacheable,and,code,cache,evict,annotations;public,annotation,cache,operation,source,this,true
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource();1530174524;Create a default AnnotationCacheOperationSource, supporting public methods_that carry the {@code Cacheable} and {@code CacheEvict} annotations.;public AnnotationCacheOperationSource() {_		this(true)__	};create,a,default,annotation,cache,operation,source,supporting,public,methods,that,carry,the,code,cacheable,and,code,cache,evict,annotations;public,annotation,cache,operation,source,this,true
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource();1533598557;Create a default AnnotationCacheOperationSource, supporting public methods_that carry the {@code Cacheable} and {@code CacheEvict} annotations.;public AnnotationCacheOperationSource() {_		this(true)__	};create,a,default,annotation,cache,operation,source,supporting,public,methods,that,carry,the,code,cacheable,and,code,cache,evict,annotations;public,annotation,cache,operation,source,this,true
AnnotationCacheOperationSource -> public AnnotationCacheOperationSource();1533765377;Create a default AnnotationCacheOperationSource, supporting public methods_that carry the {@code Cacheable} and {@code CacheEvict} annotations.;public AnnotationCacheOperationSource() {_		this(true)__	};create,a,default,annotation,cache,operation,source,supporting,public,methods,that,carry,the,code,cacheable,and,code,cache,evict,annotations;public,annotation,cache,operation,source,this,true
