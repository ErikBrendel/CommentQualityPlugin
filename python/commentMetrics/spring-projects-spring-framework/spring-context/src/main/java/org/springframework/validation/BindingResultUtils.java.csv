commented;modifiers;parameterAmount;loc;comment;code
true;public,static;2;10;/**  * Find the BindingResult for the given name in the given model.  * @param model the model to search  * @param name the name of the target object to find a BindingResult for  * @return the BindingResult, or {@code null} if none found  * @throws IllegalStateException if the attribute found is not of type BindingResult  */ ;/**  * Find the BindingResult for the given name in the given model.  * @param model the model to search  * @param name the name of the target object to find a BindingResult for  * @return the BindingResult, or {@code null} if none found  * @throws IllegalStateException if the attribute found is not of type BindingResult  */ @Nullable public static BindingResult getBindingResult(Map<?, ?> model, String name) {     Assert.notNull(model, "Model map must not be null").     Assert.notNull(name, "Name must not be null").     Object attr = model.get(BindingResult.MODEL_KEY_PREFIX + name).     if (attr != null && !(attr instanceof BindingResult)) {         throw new IllegalStateException("BindingResult attribute is not of type BindingResult: " + attr).     }     return (BindingResult) attr. }
true;public,static;2;8;/**  * Find a required BindingResult for the given name in the given model.  * @param model the model to search  * @param name the name of the target object to find a BindingResult for  * @return the BindingResult (never {@code null})  * @throws IllegalStateException if no BindingResult found  */ ;/**  * Find a required BindingResult for the given name in the given model.  * @param model the model to search  * @param name the name of the target object to find a BindingResult for  * @return the BindingResult (never {@code null})  * @throws IllegalStateException if no BindingResult found  */ public static BindingResult getRequiredBindingResult(Map<?, ?> model, String name) {     BindingResult bindingResult = getBindingResult(model, name).     if (bindingResult == null) {         throw new IllegalStateException("No BindingResult attribute found for name '" + name + "'- have you exposed the correct model?").     }     return bindingResult. }
