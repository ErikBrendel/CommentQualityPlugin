commented;modifiers;parameterAmount;loc;comment;code
false;public;3;19;;@Override public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {     String name = method.getName().     if ("equals".equals(name)) {         return (proxy == args[0]).     } else if ("hashCode".equals(name)) {         return hashCode().     } else if ("toString".equals(name)) {         return toString().     } else if ("transformClass".equals(name)) {         return transform((String) args[0], (byte[]) args[1], (CodeSource) args[2], (ClassLoader) args[3]).     } else {         throw new IllegalArgumentException("Unknown method: " + method).     } }
false;protected;4;7;;protected byte[] transform(String className, byte[] classfileBuffer, CodeSource codeSource, ClassLoader classLoader) throws Exception {     // NB: WebSphere passes className as "." without class while the transformer expects a VM "/" format     byte[] result = this.transformer.transform(classLoader, className.replace('.', '/'), null, null, classfileBuffer).     return (result != null ? result : classfileBuffer). }
false;public;0;4;;@Override public String toString() {     return getClass().getName() + " for transformer: " + this.transformer. }
