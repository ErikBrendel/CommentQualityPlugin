# id;timestamp;commentText;codeText;commentWords;codeWords
MethodExclusionMBeanInfoAssembler -> protected boolean isNotIgnored(Method method, String beanKey);1328020251;Determine whether the given method is supposed to be included,_that is, not configured as to be ignored._@param method the operation method_@param beanKey the key associated with the MBean in the beans map_of the <code>MBeanExporter</code>;protected boolean isNotIgnored(Method method, String beanKey) {_		if (this.ignoredMethodMappings != null) {_			Set<String> methodNames = this.ignoredMethodMappings.get(beanKey)__			if (methodNames != null) {_				return !methodNames.contains(method.getName())__			}_		}_		if (this.ignoredMethods != null) {_			return !this.ignoredMethods.contains(method.getName())__		}_		return true__	};determine,whether,the,given,method,is,supposed,to,be,included,that,is,not,configured,as,to,be,ignored,param,method,the,operation,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,of,the,code,mbean,exporter,code;protected,boolean,is,not,ignored,method,method,string,bean,key,if,this,ignored,method,mappings,null,set,string,method,names,this,ignored,method,mappings,get,bean,key,if,method,names,null,return,method,names,contains,method,get,name,if,this,ignored,methods,null,return,this,ignored,methods,contains,method,get,name,return,true
MethodExclusionMBeanInfoAssembler -> protected boolean isNotIgnored(Method method, String beanKey);1356735495;Determine whether the given method is supposed to be included,_that is, not configured as to be ignored._@param method the operation method_@param beanKey the key associated with the MBean in the beans map_of the {@code MBeanExporter};protected boolean isNotIgnored(Method method, String beanKey) {_		if (this.ignoredMethodMappings != null) {_			Set<String> methodNames = this.ignoredMethodMappings.get(beanKey)__			if (methodNames != null) {_				return !methodNames.contains(method.getName())__			}_		}_		if (this.ignoredMethods != null) {_			return !this.ignoredMethods.contains(method.getName())__		}_		return true__	};determine,whether,the,given,method,is,supposed,to,be,included,that,is,not,configured,as,to,be,ignored,param,method,the,operation,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,of,the,code,mbean,exporter;protected,boolean,is,not,ignored,method,method,string,bean,key,if,this,ignored,method,mappings,null,set,string,method,names,this,ignored,method,mappings,get,bean,key,if,method,names,null,return,method,names,contains,method,get,name,if,this,ignored,methods,null,return,this,ignored,methods,contains,method,get,name,return,true
MethodExclusionMBeanInfoAssembler -> protected boolean isNotIgnored(Method method, String beanKey);1385412762;Determine whether the given method is supposed to be included,_that is, not configured as to be ignored._@param method the operation method_@param beanKey the key associated with the MBean in the beans map_of the {@code MBeanExporter};protected boolean isNotIgnored(Method method, String beanKey) {_		if (this.ignoredMethodMappings != null) {_			Set<String> methodNames = this.ignoredMethodMappings.get(beanKey)__			if (methodNames != null) {_				return !methodNames.contains(method.getName())__			}_		}_		if (this.ignoredMethods != null) {_			return !this.ignoredMethods.contains(method.getName())__		}_		return true__	};determine,whether,the,given,method,is,supposed,to,be,included,that,is,not,configured,as,to,be,ignored,param,method,the,operation,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,of,the,code,mbean,exporter;protected,boolean,is,not,ignored,method,method,string,bean,key,if,this,ignored,method,mappings,null,set,string,method,names,this,ignored,method,mappings,get,bean,key,if,method,names,null,return,method,names,contains,method,get,name,if,this,ignored,methods,null,return,this,ignored,methods,contains,method,get,name,return,true
MethodExclusionMBeanInfoAssembler -> protected boolean isNotIgnored(Method method, String beanKey);1407511029;Determine whether the given method is supposed to be included,_that is, not configured as to be ignored._@param method the operation method_@param beanKey the key associated with the MBean in the beans map_of the {@code MBeanExporter};protected boolean isNotIgnored(Method method, String beanKey) {_		if (this.ignoredMethodMappings != null) {_			Set<String> methodNames = this.ignoredMethodMappings.get(beanKey)__			if (methodNames != null) {_				return !methodNames.contains(method.getName())__			}_		}_		if (this.ignoredMethods != null) {_			return !this.ignoredMethods.contains(method.getName())__		}_		return true__	};determine,whether,the,given,method,is,supposed,to,be,included,that,is,not,configured,as,to,be,ignored,param,method,the,operation,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,of,the,code,mbean,exporter;protected,boolean,is,not,ignored,method,method,string,bean,key,if,this,ignored,method,mappings,null,set,string,method,names,this,ignored,method,mappings,get,bean,key,if,method,names,null,return,method,names,contains,method,get,name,if,this,ignored,methods,null,return,this,ignored,methods,contains,method,get,name,return,true
MethodExclusionMBeanInfoAssembler -> protected boolean isNotIgnored(Method method, String beanKey);1467730834;Determine whether the given method is supposed to be included,_that is, not configured as to be ignored._@param method the operation method_@param beanKey the key associated with the MBean in the beans map_of the {@code MBeanExporter};protected boolean isNotIgnored(Method method, String beanKey) {_		if (this.ignoredMethodMappings != null) {_			Set<String> methodNames = this.ignoredMethodMappings.get(beanKey)__			if (methodNames != null) {_				return !methodNames.contains(method.getName())__			}_		}_		if (this.ignoredMethods != null) {_			return !this.ignoredMethods.contains(method.getName())__		}_		return true__	};determine,whether,the,given,method,is,supposed,to,be,included,that,is,not,configured,as,to,be,ignored,param,method,the,operation,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,of,the,code,mbean,exporter;protected,boolean,is,not,ignored,method,method,string,bean,key,if,this,ignored,method,mappings,null,set,string,method,names,this,ignored,method,mappings,get,bean,key,if,method,names,null,return,method,names,contains,method,get,name,if,this,ignored,methods,null,return,this,ignored,methods,contains,method,get,name,return,true
MethodExclusionMBeanInfoAssembler -> protected boolean isNotIgnored(Method method, String beanKey);1498780456;Determine whether the given method is supposed to be included,_that is, not configured as to be ignored._@param method the operation method_@param beanKey the key associated with the MBean in the beans map_of the {@code MBeanExporter};protected boolean isNotIgnored(Method method, String beanKey) {_		if (this.ignoredMethodMappings != null) {_			Set<String> methodNames = this.ignoredMethodMappings.get(beanKey)__			if (methodNames != null) {_				return !methodNames.contains(method.getName())__			}_		}_		if (this.ignoredMethods != null) {_			return !this.ignoredMethods.contains(method.getName())__		}_		return true__	};determine,whether,the,given,method,is,supposed,to,be,included,that,is,not,configured,as,to,be,ignored,param,method,the,operation,method,param,bean,key,the,key,associated,with,the,mbean,in,the,beans,map,of,the,code,mbean,exporter;protected,boolean,is,not,ignored,method,method,string,bean,key,if,this,ignored,method,mappings,null,set,string,method,names,this,ignored,method,mappings,get,bean,key,if,method,names,null,return,method,names,contains,method,get,name,if,this,ignored,methods,null,return,this,ignored,methods,contains,method,get,name,return,true
MethodExclusionMBeanInfoAssembler -> public void setIgnoredMethods(String... ignoredMethodNames);1407511029;Set the array of method names to be <b>ignored</b> when creating the management info._<p>These method names will be used for a bean if no entry corresponding to_that bean is found in the {@code ignoredMethodsMappings} property._@see #setIgnoredMethodMappings(java.util.Properties);public void setIgnoredMethods(String... ignoredMethodNames) {_		this.ignoredMethods = new HashSet<String>(Arrays.asList(ignoredMethodNames))__	};set,the,array,of,method,names,to,be,b,ignored,b,when,creating,the,management,info,p,these,method,names,will,be,used,for,a,bean,if,no,entry,corresponding,to,that,bean,is,found,in,the,code,ignored,methods,mappings,property,see,set,ignored,method,mappings,java,util,properties;public,void,set,ignored,methods,string,ignored,method,names,this,ignored,methods,new,hash,set,string,arrays,as,list,ignored,method,names
MethodExclusionMBeanInfoAssembler -> public void setIgnoredMethods(String... ignoredMethodNames);1467730834;Set the array of method names to be <b>ignored</b> when creating the management info._<p>These method names will be used for a bean if no entry corresponding to_that bean is found in the {@code ignoredMethodsMappings} property._@see #setIgnoredMethodMappings(java.util.Properties);public void setIgnoredMethods(String... ignoredMethodNames) {_		this.ignoredMethods = new HashSet<>(Arrays.asList(ignoredMethodNames))__	};set,the,array,of,method,names,to,be,b,ignored,b,when,creating,the,management,info,p,these,method,names,will,be,used,for,a,bean,if,no,entry,corresponding,to,that,bean,is,found,in,the,code,ignored,methods,mappings,property,see,set,ignored,method,mappings,java,util,properties;public,void,set,ignored,methods,string,ignored,method,names,this,ignored,methods,new,hash,set,arrays,as,list,ignored,method,names
MethodExclusionMBeanInfoAssembler -> public void setIgnoredMethods(String... ignoredMethodNames);1498780456;Set the array of method names to be <b>ignored</b> when creating the management info._<p>These method names will be used for a bean if no entry corresponding to_that bean is found in the {@code ignoredMethodsMappings} property._@see #setIgnoredMethodMappings(java.util.Properties);public void setIgnoredMethods(String... ignoredMethodNames) {_		this.ignoredMethods = new HashSet<>(Arrays.asList(ignoredMethodNames))__	};set,the,array,of,method,names,to,be,b,ignored,b,when,creating,the,management,info,p,these,method,names,will,be,used,for,a,bean,if,no,entry,corresponding,to,that,bean,is,found,in,the,code,ignored,methods,mappings,property,see,set,ignored,method,mappings,java,util,properties;public,void,set,ignored,methods,string,ignored,method,names,this,ignored,methods,new,hash,set,arrays,as,list,ignored,method,names
MethodExclusionMBeanInfoAssembler -> public void setIgnoredMethods(String[] ignoredMethodNames);1328020251;Set the array of method names to be <b>ignored</b> when creating the management info._<p>These method names will be used for a bean if no entry corresponding to_that bean is found in the <code>ignoredMethodsMappings</code> property._@see #setIgnoredMethodMappings(java.util.Properties);public void setIgnoredMethods(String[] ignoredMethodNames) {_		this.ignoredMethods = new HashSet<String>(Arrays.asList(ignoredMethodNames))__	};set,the,array,of,method,names,to,be,b,ignored,b,when,creating,the,management,info,p,these,method,names,will,be,used,for,a,bean,if,no,entry,corresponding,to,that,bean,is,found,in,the,code,ignored,methods,mappings,code,property,see,set,ignored,method,mappings,java,util,properties;public,void,set,ignored,methods,string,ignored,method,names,this,ignored,methods,new,hash,set,string,arrays,as,list,ignored,method,names
MethodExclusionMBeanInfoAssembler -> public void setIgnoredMethods(String[] ignoredMethodNames);1356735495;Set the array of method names to be <b>ignored</b> when creating the management info._<p>These method names will be used for a bean if no entry corresponding to_that bean is found in the {@code ignoredMethodsMappings} property._@see #setIgnoredMethodMappings(java.util.Properties);public void setIgnoredMethods(String[] ignoredMethodNames) {_		this.ignoredMethods = new HashSet<String>(Arrays.asList(ignoredMethodNames))__	};set,the,array,of,method,names,to,be,b,ignored,b,when,creating,the,management,info,p,these,method,names,will,be,used,for,a,bean,if,no,entry,corresponding,to,that,bean,is,found,in,the,code,ignored,methods,mappings,property,see,set,ignored,method,mappings,java,util,properties;public,void,set,ignored,methods,string,ignored,method,names,this,ignored,methods,new,hash,set,string,arrays,as,list,ignored,method,names
MethodExclusionMBeanInfoAssembler -> public void setIgnoredMethods(String[] ignoredMethodNames);1385412762;Set the array of method names to be <b>ignored</b> when creating the management info._<p>These method names will be used for a bean if no entry corresponding to_that bean is found in the {@code ignoredMethodsMappings} property._@see #setIgnoredMethodMappings(java.util.Properties);public void setIgnoredMethods(String[] ignoredMethodNames) {_		this.ignoredMethods = new HashSet<String>(Arrays.asList(ignoredMethodNames))__	};set,the,array,of,method,names,to,be,b,ignored,b,when,creating,the,management,info,p,these,method,names,will,be,used,for,a,bean,if,no,entry,corresponding,to,that,bean,is,found,in,the,code,ignored,methods,mappings,property,see,set,ignored,method,mappings,java,util,properties;public,void,set,ignored,methods,string,ignored,method,names,this,ignored,methods,new,hash,set,string,arrays,as,list,ignored,method,names
MethodExclusionMBeanInfoAssembler -> public void setIgnoredMethodMappings(Properties mappings);1328020251;Set the mappings of bean keys to a comma-separated list of method names._<p>These method names are <b>ignored</b> when creating the management interface._<p>The property key must match the bean key and the property value must match_the list of method names. When searching for method names to ignore for a bean,_Spring will check these mappings first.;public void setIgnoredMethodMappings(Properties mappings) {_		this.ignoredMethodMappings = new HashMap<String, Set<String>>()__		for (Enumeration en = mappings.keys()_ en.hasMoreElements()_) {_			String beanKey = (String) en.nextElement()__			String[] methodNames = StringUtils.commaDelimitedListToStringArray(mappings.getProperty(beanKey))__			this.ignoredMethodMappings.put(beanKey, new HashSet<String>(Arrays.asList(methodNames)))__		}_	};set,the,mappings,of,bean,keys,to,a,comma,separated,list,of,method,names,p,these,method,names,are,b,ignored,b,when,creating,the,management,interface,p,the,property,key,must,match,the,bean,key,and,the,property,value,must,match,the,list,of,method,names,when,searching,for,method,names,to,ignore,for,a,bean,spring,will,check,these,mappings,first;public,void,set,ignored,method,mappings,properties,mappings,this,ignored,method,mappings,new,hash,map,string,set,string,for,enumeration,en,mappings,keys,en,has,more,elements,string,bean,key,string,en,next,element,string,method,names,string,utils,comma,delimited,list,to,string,array,mappings,get,property,bean,key,this,ignored,method,mappings,put,bean,key,new,hash,set,string,arrays,as,list,method,names
MethodExclusionMBeanInfoAssembler -> public void setIgnoredMethodMappings(Properties mappings);1356735495;Set the mappings of bean keys to a comma-separated list of method names._<p>These method names are <b>ignored</b> when creating the management interface._<p>The property key must match the bean key and the property value must match_the list of method names. When searching for method names to ignore for a bean,_Spring will check these mappings first.;public void setIgnoredMethodMappings(Properties mappings) {_		this.ignoredMethodMappings = new HashMap<String, Set<String>>()__		for (Enumeration en = mappings.keys()_ en.hasMoreElements()_) {_			String beanKey = (String) en.nextElement()__			String[] methodNames = StringUtils.commaDelimitedListToStringArray(mappings.getProperty(beanKey))__			this.ignoredMethodMappings.put(beanKey, new HashSet<String>(Arrays.asList(methodNames)))__		}_	};set,the,mappings,of,bean,keys,to,a,comma,separated,list,of,method,names,p,these,method,names,are,b,ignored,b,when,creating,the,management,interface,p,the,property,key,must,match,the,bean,key,and,the,property,value,must,match,the,list,of,method,names,when,searching,for,method,names,to,ignore,for,a,bean,spring,will,check,these,mappings,first;public,void,set,ignored,method,mappings,properties,mappings,this,ignored,method,mappings,new,hash,map,string,set,string,for,enumeration,en,mappings,keys,en,has,more,elements,string,bean,key,string,en,next,element,string,method,names,string,utils,comma,delimited,list,to,string,array,mappings,get,property,bean,key,this,ignored,method,mappings,put,bean,key,new,hash,set,string,arrays,as,list,method,names
MethodExclusionMBeanInfoAssembler -> public void setIgnoredMethodMappings(Properties mappings);1385412762;Set the mappings of bean keys to a comma-separated list of method names._<p>These method names are <b>ignored</b> when creating the management interface._<p>The property key must match the bean key and the property value must match_the list of method names. When searching for method names to ignore for a bean,_Spring will check these mappings first.;public void setIgnoredMethodMappings(Properties mappings) {_		this.ignoredMethodMappings = new HashMap<String, Set<String>>()__		for (Enumeration<?> en = mappings.keys()_ en.hasMoreElements()_) {_			String beanKey = (String) en.nextElement()__			String[] methodNames = StringUtils.commaDelimitedListToStringArray(mappings.getProperty(beanKey))__			this.ignoredMethodMappings.put(beanKey, new HashSet<String>(Arrays.asList(methodNames)))__		}_	};set,the,mappings,of,bean,keys,to,a,comma,separated,list,of,method,names,p,these,method,names,are,b,ignored,b,when,creating,the,management,interface,p,the,property,key,must,match,the,bean,key,and,the,property,value,must,match,the,list,of,method,names,when,searching,for,method,names,to,ignore,for,a,bean,spring,will,check,these,mappings,first;public,void,set,ignored,method,mappings,properties,mappings,this,ignored,method,mappings,new,hash,map,string,set,string,for,enumeration,en,mappings,keys,en,has,more,elements,string,bean,key,string,en,next,element,string,method,names,string,utils,comma,delimited,list,to,string,array,mappings,get,property,bean,key,this,ignored,method,mappings,put,bean,key,new,hash,set,string,arrays,as,list,method,names
MethodExclusionMBeanInfoAssembler -> public void setIgnoredMethodMappings(Properties mappings);1407511029;Set the mappings of bean keys to a comma-separated list of method names._<p>These method names are <b>ignored</b> when creating the management interface._<p>The property key must match the bean key and the property value must match_the list of method names. When searching for method names to ignore for a bean,_Spring will check these mappings first.;public void setIgnoredMethodMappings(Properties mappings) {_		this.ignoredMethodMappings = new HashMap<String, Set<String>>()__		for (Enumeration<?> en = mappings.keys()_ en.hasMoreElements()_) {_			String beanKey = (String) en.nextElement()__			String[] methodNames = StringUtils.commaDelimitedListToStringArray(mappings.getProperty(beanKey))__			this.ignoredMethodMappings.put(beanKey, new HashSet<String>(Arrays.asList(methodNames)))__		}_	};set,the,mappings,of,bean,keys,to,a,comma,separated,list,of,method,names,p,these,method,names,are,b,ignored,b,when,creating,the,management,interface,p,the,property,key,must,match,the,bean,key,and,the,property,value,must,match,the,list,of,method,names,when,searching,for,method,names,to,ignore,for,a,bean,spring,will,check,these,mappings,first;public,void,set,ignored,method,mappings,properties,mappings,this,ignored,method,mappings,new,hash,map,string,set,string,for,enumeration,en,mappings,keys,en,has,more,elements,string,bean,key,string,en,next,element,string,method,names,string,utils,comma,delimited,list,to,string,array,mappings,get,property,bean,key,this,ignored,method,mappings,put,bean,key,new,hash,set,string,arrays,as,list,method,names
MethodExclusionMBeanInfoAssembler -> public void setIgnoredMethodMappings(Properties mappings);1467730834;Set the mappings of bean keys to a comma-separated list of method names._<p>These method names are <b>ignored</b> when creating the management interface._<p>The property key must match the bean key and the property value must match_the list of method names. When searching for method names to ignore for a bean,_Spring will check these mappings first.;public void setIgnoredMethodMappings(Properties mappings) {_		this.ignoredMethodMappings = new HashMap<>()__		for (Enumeration<?> en = mappings.keys()_ en.hasMoreElements()_) {_			String beanKey = (String) en.nextElement()__			String[] methodNames = StringUtils.commaDelimitedListToStringArray(mappings.getProperty(beanKey))__			this.ignoredMethodMappings.put(beanKey, new HashSet<>(Arrays.asList(methodNames)))__		}_	};set,the,mappings,of,bean,keys,to,a,comma,separated,list,of,method,names,p,these,method,names,are,b,ignored,b,when,creating,the,management,interface,p,the,property,key,must,match,the,bean,key,and,the,property,value,must,match,the,list,of,method,names,when,searching,for,method,names,to,ignore,for,a,bean,spring,will,check,these,mappings,first;public,void,set,ignored,method,mappings,properties,mappings,this,ignored,method,mappings,new,hash,map,for,enumeration,en,mappings,keys,en,has,more,elements,string,bean,key,string,en,next,element,string,method,names,string,utils,comma,delimited,list,to,string,array,mappings,get,property,bean,key,this,ignored,method,mappings,put,bean,key,new,hash,set,arrays,as,list,method,names
MethodExclusionMBeanInfoAssembler -> public void setIgnoredMethodMappings(Properties mappings);1498780456;Set the mappings of bean keys to a comma-separated list of method names._<p>These method names are <b>ignored</b> when creating the management interface._<p>The property key must match the bean key and the property value must match_the list of method names. When searching for method names to ignore for a bean,_Spring will check these mappings first.;public void setIgnoredMethodMappings(Properties mappings) {_		this.ignoredMethodMappings = new HashMap<>()__		for (Enumeration<?> en = mappings.keys()_ en.hasMoreElements()_) {_			String beanKey = (String) en.nextElement()__			String[] methodNames = StringUtils.commaDelimitedListToStringArray(mappings.getProperty(beanKey))__			this.ignoredMethodMappings.put(beanKey, new HashSet<>(Arrays.asList(methodNames)))__		}_	};set,the,mappings,of,bean,keys,to,a,comma,separated,list,of,method,names,p,these,method,names,are,b,ignored,b,when,creating,the,management,interface,p,the,property,key,must,match,the,bean,key,and,the,property,value,must,match,the,list,of,method,names,when,searching,for,method,names,to,ignore,for,a,bean,spring,will,check,these,mappings,first;public,void,set,ignored,method,mappings,properties,mappings,this,ignored,method,mappings,new,hash,map,for,enumeration,en,mappings,keys,en,has,more,elements,string,bean,key,string,en,next,element,string,method,names,string,utils,comma,delimited,list,to,string,array,mappings,get,property,bean,key,this,ignored,method,mappings,put,bean,key,new,hash,set,arrays,as,list,method,names
