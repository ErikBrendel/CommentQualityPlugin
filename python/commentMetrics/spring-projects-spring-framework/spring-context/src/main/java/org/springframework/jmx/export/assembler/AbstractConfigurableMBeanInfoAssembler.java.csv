commented;modifiers;parameterAmount;loc;comment;code
false;public;1;8;;public void setNotificationInfos(ManagedNotification[] notificationInfos) {     ModelMBeanNotificationInfo[] infos = new ModelMBeanNotificationInfo[notificationInfos.length].     for (int i = 0. i < notificationInfos.length. i++) {         ManagedNotification notificationInfo = notificationInfos[i].         infos[i] = JmxMetadataUtils.convertToModelMBeanNotificationInfo(notificationInfo).     }     this.notificationInfos = infos. }
false;public;1;4;;public void setNotificationInfoMappings(Map<String, Object> notificationInfoMappings) {     notificationInfoMappings.forEach((beanKey, result) -> this.notificationInfoMappings.put(beanKey, extractNotificationMetadata(result))). }
false;protected;2;11;;@Override protected ModelMBeanNotificationInfo[] getNotificationInfo(Object managedBean, String beanKey) {     ModelMBeanNotificationInfo[] result = null.     if (StringUtils.hasText(beanKey)) {         result = this.notificationInfoMappings.get(beanKey).     }     if (result == null) {         result = this.notificationInfos.     }     return (result != null ? result : new ModelMBeanNotificationInfo[0]). }
false;private;1;23;;private ModelMBeanNotificationInfo[] extractNotificationMetadata(Object mapValue) {     if (mapValue instanceof ManagedNotification) {         ManagedNotification mn = (ManagedNotification) mapValue.         return new ModelMBeanNotificationInfo[] { JmxMetadataUtils.convertToModelMBeanNotificationInfo(mn) }.     } else if (mapValue instanceof Collection) {         Collection<?> col = (Collection<?>) mapValue.         List<ModelMBeanNotificationInfo> result = new ArrayList<>().         for (Object colValue : col) {             if (!(colValue instanceof ManagedNotification)) {                 throw new IllegalArgumentException("Property 'notificationInfoMappings' only accepts ManagedNotifications for Map values").             }             ManagedNotification mn = (ManagedNotification) colValue.             result.add(JmxMetadataUtils.convertToModelMBeanNotificationInfo(mn)).         }         return result.toArray(new ModelMBeanNotificationInfo[0]).     } else {         throw new IllegalArgumentException("Property 'notificationInfoMappings' only accepts ManagedNotifications for Map values").     } }
