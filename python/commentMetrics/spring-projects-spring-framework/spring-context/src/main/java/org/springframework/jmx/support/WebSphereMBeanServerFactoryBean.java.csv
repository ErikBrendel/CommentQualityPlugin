commented;modifiers;parameterAmount;loc;comment;code
false;public;0;24;;@Override public void afterPropertiesSet() throws MBeanServerNotFoundException {     try {         /* 			 * this.mbeanServer = AdminServiceFactory.getMBeanFactory().getMBeanServer(). 			 */         Class<?> adminServiceClass = getClass().getClassLoader().loadClass(ADMIN_SERVICE_FACTORY_CLASS).         Method getMBeanFactoryMethod = adminServiceClass.getMethod(GET_MBEAN_FACTORY_METHOD).         Object mbeanFactory = getMBeanFactoryMethod.invoke(null).         Method getMBeanServerMethod = mbeanFactory.getClass().getMethod(GET_MBEAN_SERVER_METHOD).         this.mbeanServer = (MBeanServer) getMBeanServerMethod.invoke(mbeanFactory).     } catch (ClassNotFoundException ex) {         throw new MBeanServerNotFoundException("Could not find WebSphere's AdminServiceFactory class", ex).     } catch (InvocationTargetException ex) {         throw new MBeanServerNotFoundException("WebSphere's AdminServiceFactory.getMBeanFactory/getMBeanServer method failed", ex.getTargetException()).     } catch (Exception ex) {         throw new MBeanServerNotFoundException("Could not access WebSphere's AdminServiceFactory.getMBeanFactory/getMBeanServer method", ex).     } }
false;public;0;5;;@Override @Nullable public MBeanServer getObject() {     return this.mbeanServer. }
false;public;0;4;;@Override public Class<? extends MBeanServer> getObjectType() {     return (this.mbeanServer != null ? this.mbeanServer.getClass() : MBeanServer.class). }
false;public;0;4;;@Override public boolean isSingleton() {     return true. }
