# id;timestamp;commentText;codeText;commentWords;codeWords
RemoteInvocationSerializingExporter -> public void setContentType(String contentType);1328020251;Specify the content type to use for sending remote invocation responses._<p>Default is "application/x-java-serialized-object".;public void setContentType(String contentType) {_		Assert.notNull(contentType, "'contentType' must not be null")__		this.contentType = contentType__	};specify,the,content,type,to,use,for,sending,remote,invocation,responses,p,default,is,application,x,java,serialized,object;public,void,set,content,type,string,content,type,assert,not,null,content,type,content,type,must,not,be,null,this,content,type,content,type
RemoteInvocationSerializingExporter -> public void setContentType(String contentType);1356735495;Specify the content type to use for sending remote invocation responses._<p>Default is "application/x-java-serialized-object".;public void setContentType(String contentType) {_		Assert.notNull(contentType, "'contentType' must not be null")__		this.contentType = contentType__	};specify,the,content,type,to,use,for,sending,remote,invocation,responses,p,default,is,application,x,java,serialized,object;public,void,set,content,type,string,content,type,assert,not,null,content,type,content,type,must,not,be,null,this,content,type,content,type
RemoteInvocationSerializingExporter -> public void setContentType(String contentType);1357119239;Specify the content type to use for sending remote invocation responses._<p>Default is "application/x-java-serialized-object".;public void setContentType(String contentType) {_		Assert.notNull(contentType, "'contentType' must not be null")__		this.contentType = contentType__	};specify,the,content,type,to,use,for,sending,remote,invocation,responses,p,default,is,application,x,java,serialized,object;public,void,set,content,type,string,content,type,assert,not,null,content,type,content,type,must,not,be,null,this,content,type,content,type
RemoteInvocationSerializingExporter -> public void setContentType(String contentType);1368482696;Specify the content type to use for sending remote invocation responses._<p>Default is "application/x-java-serialized-object".;public void setContentType(String contentType) {_		Assert.notNull(contentType, "'contentType' must not be null")__		this.contentType = contentType__	};specify,the,content,type,to,use,for,sending,remote,invocation,responses,p,default,is,application,x,java,serialized,object;public,void,set,content,type,string,content,type,assert,not,null,content,type,content,type,must,not,be,null,this,content,type,content,type
RemoteInvocationSerializingExporter -> public void setContentType(String contentType);1497970235;Specify the content type to use for sending remote invocation responses._<p>Default is "application/x-java-serialized-object".;public void setContentType(String contentType) {_		Assert.notNull(contentType, "'contentType' must not be null")__		this.contentType = contentType__	};specify,the,content,type,to,use,for,sending,remote,invocation,responses,p,default,is,application,x,java,serialized,object;public,void,set,content,type,string,content,type,assert,not,null,content,type,content,type,must,not,be,null,this,content,type,content,type
RemoteInvocationSerializingExporter -> public void setContentType(String contentType);1530174524;Specify the content type to use for sending remote invocation responses._<p>Default is "application/x-java-serialized-object".;public void setContentType(String contentType) {_		Assert.notNull(contentType, "'contentType' must not be null")__		this.contentType = contentType__	};specify,the,content,type,to,use,for,sending,remote,invocation,responses,p,default,is,application,x,java,serialized,object;public,void,set,content,type,string,content,type,assert,not,null,content,type,content,type,must,not,be,null,this,content,type,content,type
RemoteInvocationSerializingExporter -> protected RemoteInvocation doReadRemoteInvocation(ObjectInputStream ois) 			throws IOException, ClassNotFoundException;1328020251;Perform the actual reading of an invocation result object from the_given ObjectInputStream._<p>The default implementation simply calls_{@link java.io.ObjectInputStream#readObject()}._Can be overridden for deserialization of a custom wrapper object rather_than the plain invocation, for example an encryption-aware holder._@param ois the ObjectInputStream to read from_@return the RemoteInvocationResult object_@throws java.io.IOException in case of I/O failure_@throws ClassNotFoundException if case of a transferred class not_being found in the local ClassLoader;protected RemoteInvocation doReadRemoteInvocation(ObjectInputStream ois)_			throws IOException, ClassNotFoundException {__		Object obj = ois.readObject()__		if (!(obj instanceof RemoteInvocation)) {_			throw new RemoteException("Deserialized object needs to be assignable to type [" +_					RemoteInvocation.class.getName() + "]: " + obj)__		}_		return (RemoteInvocation) obj__	};perform,the,actual,reading,of,an,invocation,result,object,from,the,given,object,input,stream,p,the,default,implementation,simply,calls,link,java,io,object,input,stream,read,object,can,be,overridden,for,deserialization,of,a,custom,wrapper,object,rather,than,the,plain,invocation,for,example,an,encryption,aware,holder,param,ois,the,object,input,stream,to,read,from,return,the,remote,invocation,result,object,throws,java,io,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,case,of,a,transferred,class,not,being,found,in,the,local,class,loader;protected,remote,invocation,do,read,remote,invocation,object,input,stream,ois,throws,ioexception,class,not,found,exception,object,obj,ois,read,object,if,obj,instanceof,remote,invocation,throw,new,remote,exception,deserialized,object,needs,to,be,assignable,to,type,remote,invocation,class,get,name,obj,return,remote,invocation,obj
RemoteInvocationSerializingExporter -> protected RemoteInvocation doReadRemoteInvocation(ObjectInputStream ois) 			throws IOException, ClassNotFoundException;1356735495;Perform the actual reading of an invocation result object from the_given ObjectInputStream._<p>The default implementation simply calls_{@link java.io.ObjectInputStream#readObject()}._Can be overridden for deserialization of a custom wrapper object rather_than the plain invocation, for example an encryption-aware holder._@param ois the ObjectInputStream to read from_@return the RemoteInvocationResult object_@throws java.io.IOException in case of I/O failure_@throws ClassNotFoundException if case of a transferred class not_being found in the local ClassLoader;protected RemoteInvocation doReadRemoteInvocation(ObjectInputStream ois)_			throws IOException, ClassNotFoundException {__		Object obj = ois.readObject()__		if (!(obj instanceof RemoteInvocation)) {_			throw new RemoteException("Deserialized object needs to be assignable to type [" +_					RemoteInvocation.class.getName() + "]: " + obj)__		}_		return (RemoteInvocation) obj__	};perform,the,actual,reading,of,an,invocation,result,object,from,the,given,object,input,stream,p,the,default,implementation,simply,calls,link,java,io,object,input,stream,read,object,can,be,overridden,for,deserialization,of,a,custom,wrapper,object,rather,than,the,plain,invocation,for,example,an,encryption,aware,holder,param,ois,the,object,input,stream,to,read,from,return,the,remote,invocation,result,object,throws,java,io,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,case,of,a,transferred,class,not,being,found,in,the,local,class,loader;protected,remote,invocation,do,read,remote,invocation,object,input,stream,ois,throws,ioexception,class,not,found,exception,object,obj,ois,read,object,if,obj,instanceof,remote,invocation,throw,new,remote,exception,deserialized,object,needs,to,be,assignable,to,type,remote,invocation,class,get,name,obj,return,remote,invocation,obj
RemoteInvocationSerializingExporter -> protected RemoteInvocation doReadRemoteInvocation(ObjectInputStream ois) 			throws IOException, ClassNotFoundException;1357119239;Perform the actual reading of an invocation result object from the_given ObjectInputStream._<p>The default implementation simply calls_{@link java.io.ObjectInputStream#readObject()}._Can be overridden for deserialization of a custom wrapper object rather_than the plain invocation, for example an encryption-aware holder._@param ois the ObjectInputStream to read from_@return the RemoteInvocationResult object_@throws java.io.IOException in case of I/O failure_@throws ClassNotFoundException if case of a transferred class not_being found in the local ClassLoader;protected RemoteInvocation doReadRemoteInvocation(ObjectInputStream ois)_			throws IOException, ClassNotFoundException {__		Object obj = ois.readObject()__		if (!(obj instanceof RemoteInvocation)) {_			throw new RemoteException("Deserialized object needs to be assignable to type [" +_					RemoteInvocation.class.getName() + "]: " + obj)__		}_		return (RemoteInvocation) obj__	};perform,the,actual,reading,of,an,invocation,result,object,from,the,given,object,input,stream,p,the,default,implementation,simply,calls,link,java,io,object,input,stream,read,object,can,be,overridden,for,deserialization,of,a,custom,wrapper,object,rather,than,the,plain,invocation,for,example,an,encryption,aware,holder,param,ois,the,object,input,stream,to,read,from,return,the,remote,invocation,result,object,throws,java,io,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,case,of,a,transferred,class,not,being,found,in,the,local,class,loader;protected,remote,invocation,do,read,remote,invocation,object,input,stream,ois,throws,ioexception,class,not,found,exception,object,obj,ois,read,object,if,obj,instanceof,remote,invocation,throw,new,remote,exception,deserialized,object,needs,to,be,assignable,to,type,remote,invocation,class,get,name,obj,return,remote,invocation,obj
RemoteInvocationSerializingExporter -> protected RemoteInvocation doReadRemoteInvocation(ObjectInputStream ois) 			throws IOException, ClassNotFoundException;1368482696;Perform the actual reading of an invocation result object from the_given ObjectInputStream._<p>The default implementation simply calls_{@link java.io.ObjectInputStream#readObject()}._Can be overridden for deserialization of a custom wrapper object rather_than the plain invocation, for example an encryption-aware holder._@param ois the ObjectInputStream to read from_@return the RemoteInvocationResult object_@throws java.io.IOException in case of I/O failure_@throws ClassNotFoundException if case of a transferred class not_being found in the local ClassLoader;protected RemoteInvocation doReadRemoteInvocation(ObjectInputStream ois)_			throws IOException, ClassNotFoundException {__		Object obj = ois.readObject()__		if (!(obj instanceof RemoteInvocation)) {_			throw new RemoteException("Deserialized object needs to be assignable to type [" +_					RemoteInvocation.class.getName() + "]: " + obj)__		}_		return (RemoteInvocation) obj__	};perform,the,actual,reading,of,an,invocation,result,object,from,the,given,object,input,stream,p,the,default,implementation,simply,calls,link,java,io,object,input,stream,read,object,can,be,overridden,for,deserialization,of,a,custom,wrapper,object,rather,than,the,plain,invocation,for,example,an,encryption,aware,holder,param,ois,the,object,input,stream,to,read,from,return,the,remote,invocation,result,object,throws,java,io,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,case,of,a,transferred,class,not,being,found,in,the,local,class,loader;protected,remote,invocation,do,read,remote,invocation,object,input,stream,ois,throws,ioexception,class,not,found,exception,object,obj,ois,read,object,if,obj,instanceof,remote,invocation,throw,new,remote,exception,deserialized,object,needs,to,be,assignable,to,type,remote,invocation,class,get,name,obj,return,remote,invocation,obj
RemoteInvocationSerializingExporter -> protected RemoteInvocation doReadRemoteInvocation(ObjectInputStream ois) 			throws IOException, ClassNotFoundException;1497970235;Perform the actual reading of an invocation result object from the_given ObjectInputStream._<p>The default implementation simply calls_{@link java.io.ObjectInputStream#readObject()}._Can be overridden for deserialization of a custom wrapper object rather_than the plain invocation, for example an encryption-aware holder._@param ois the ObjectInputStream to read from_@return the RemoteInvocationResult object_@throws java.io.IOException in case of I/O failure_@throws ClassNotFoundException if case of a transferred class not_being found in the local ClassLoader;protected RemoteInvocation doReadRemoteInvocation(ObjectInputStream ois)_			throws IOException, ClassNotFoundException {__		Object obj = ois.readObject()__		if (!(obj instanceof RemoteInvocation)) {_			throw new RemoteException("Deserialized object needs to be assignable to type [" +_					RemoteInvocation.class.getName() + "]: " + ClassUtils.getDescriptiveType(obj))__		}_		return (RemoteInvocation) obj__	};perform,the,actual,reading,of,an,invocation,result,object,from,the,given,object,input,stream,p,the,default,implementation,simply,calls,link,java,io,object,input,stream,read,object,can,be,overridden,for,deserialization,of,a,custom,wrapper,object,rather,than,the,plain,invocation,for,example,an,encryption,aware,holder,param,ois,the,object,input,stream,to,read,from,return,the,remote,invocation,result,object,throws,java,io,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,case,of,a,transferred,class,not,being,found,in,the,local,class,loader;protected,remote,invocation,do,read,remote,invocation,object,input,stream,ois,throws,ioexception,class,not,found,exception,object,obj,ois,read,object,if,obj,instanceof,remote,invocation,throw,new,remote,exception,deserialized,object,needs,to,be,assignable,to,type,remote,invocation,class,get,name,class,utils,get,descriptive,type,obj,return,remote,invocation,obj
RemoteInvocationSerializingExporter -> protected RemoteInvocation doReadRemoteInvocation(ObjectInputStream ois) 			throws IOException, ClassNotFoundException;1530174524;Perform the actual reading of an invocation result object from the_given ObjectInputStream._<p>The default implementation simply calls_{@link java.io.ObjectInputStream#readObject()}._Can be overridden for deserialization of a custom wrapper object rather_than the plain invocation, for example an encryption-aware holder._@param ois the ObjectInputStream to read from_@return the RemoteInvocationResult object_@throws java.io.IOException in case of I/O failure_@throws ClassNotFoundException if case of a transferred class not_being found in the local ClassLoader;protected RemoteInvocation doReadRemoteInvocation(ObjectInputStream ois)_			throws IOException, ClassNotFoundException {__		Object obj = ois.readObject()__		if (!(obj instanceof RemoteInvocation)) {_			throw new RemoteException("Deserialized object needs to be assignable to type [" +_					RemoteInvocation.class.getName() + "]: " + ClassUtils.getDescriptiveType(obj))__		}_		return (RemoteInvocation) obj__	};perform,the,actual,reading,of,an,invocation,result,object,from,the,given,object,input,stream,p,the,default,implementation,simply,calls,link,java,io,object,input,stream,read,object,can,be,overridden,for,deserialization,of,a,custom,wrapper,object,rather,than,the,plain,invocation,for,example,an,encryption,aware,holder,param,ois,the,object,input,stream,to,read,from,return,the,remote,invocation,result,object,throws,java,io,ioexception,in,case,of,i,o,failure,throws,class,not,found,exception,if,case,of,a,transferred,class,not,being,found,in,the,local,class,loader;protected,remote,invocation,do,read,remote,invocation,object,input,stream,ois,throws,ioexception,class,not,found,exception,object,obj,ois,read,object,if,obj,instanceof,remote,invocation,throw,new,remote,exception,deserialized,object,needs,to,be,assignable,to,type,remote,invocation,class,get,name,class,utils,get,descriptive,type,obj,return,remote,invocation,obj
RemoteInvocationSerializingExporter -> public boolean isAcceptProxyClasses();1328020251;Return whether to accept deserialization of proxy classes.;public boolean isAcceptProxyClasses() {_		return this.acceptProxyClasses__	};return,whether,to,accept,deserialization,of,proxy,classes;public,boolean,is,accept,proxy,classes,return,this,accept,proxy,classes
RemoteInvocationSerializingExporter -> public boolean isAcceptProxyClasses();1356735495;Return whether to accept deserialization of proxy classes.;public boolean isAcceptProxyClasses() {_		return this.acceptProxyClasses__	};return,whether,to,accept,deserialization,of,proxy,classes;public,boolean,is,accept,proxy,classes,return,this,accept,proxy,classes
RemoteInvocationSerializingExporter -> public boolean isAcceptProxyClasses();1357119239;Return whether to accept deserialization of proxy classes.;public boolean isAcceptProxyClasses() {_		return this.acceptProxyClasses__	};return,whether,to,accept,deserialization,of,proxy,classes;public,boolean,is,accept,proxy,classes,return,this,accept,proxy,classes
RemoteInvocationSerializingExporter -> public boolean isAcceptProxyClasses();1368482696;Return whether to accept deserialization of proxy classes.;public boolean isAcceptProxyClasses() {_		return this.acceptProxyClasses__	};return,whether,to,accept,deserialization,of,proxy,classes;public,boolean,is,accept,proxy,classes,return,this,accept,proxy,classes
RemoteInvocationSerializingExporter -> public boolean isAcceptProxyClasses();1497970235;Return whether to accept deserialization of proxy classes.;public boolean isAcceptProxyClasses() {_		return this.acceptProxyClasses__	};return,whether,to,accept,deserialization,of,proxy,classes;public,boolean,is,accept,proxy,classes,return,this,accept,proxy,classes
RemoteInvocationSerializingExporter -> public boolean isAcceptProxyClasses();1530174524;Return whether to accept deserialization of proxy classes.;public boolean isAcceptProxyClasses() {_		return this.acceptProxyClasses__	};return,whether,to,accept,deserialization,of,proxy,classes;public,boolean,is,accept,proxy,classes,return,this,accept,proxy,classes
RemoteInvocationSerializingExporter -> protected void doWriteRemoteInvocationResult(RemoteInvocationResult result, ObjectOutputStream oos) 			throws IOException;1328020251;Perform the actual writing of the given invocation result object_to the given ObjectOutputStream._<p>The default implementation simply calls_{@link java.io.ObjectOutputStream#writeObject}._Can be overridden for serialization of a custom wrapper object rather_than the plain invocation, for example an encryption-aware holder._@param result the RemoteInvocationResult object_@param oos the ObjectOutputStream to write to_@throws java.io.IOException if thrown by I/O methods;protected void doWriteRemoteInvocationResult(RemoteInvocationResult result, ObjectOutputStream oos)_			throws IOException {__		oos.writeObject(result)__	};perform,the,actual,writing,of,the,given,invocation,result,object,to,the,given,object,output,stream,p,the,default,implementation,simply,calls,link,java,io,object,output,stream,write,object,can,be,overridden,for,serialization,of,a,custom,wrapper,object,rather,than,the,plain,invocation,for,example,an,encryption,aware,holder,param,result,the,remote,invocation,result,object,param,oos,the,object,output,stream,to,write,to,throws,java,io,ioexception,if,thrown,by,i,o,methods;protected,void,do,write,remote,invocation,result,remote,invocation,result,result,object,output,stream,oos,throws,ioexception,oos,write,object,result
RemoteInvocationSerializingExporter -> protected void doWriteRemoteInvocationResult(RemoteInvocationResult result, ObjectOutputStream oos) 			throws IOException;1356735495;Perform the actual writing of the given invocation result object_to the given ObjectOutputStream._<p>The default implementation simply calls_{@link java.io.ObjectOutputStream#writeObject}._Can be overridden for serialization of a custom wrapper object rather_than the plain invocation, for example an encryption-aware holder._@param result the RemoteInvocationResult object_@param oos the ObjectOutputStream to write to_@throws java.io.IOException if thrown by I/O methods;protected void doWriteRemoteInvocationResult(RemoteInvocationResult result, ObjectOutputStream oos)_			throws IOException {__		oos.writeObject(result)__	};perform,the,actual,writing,of,the,given,invocation,result,object,to,the,given,object,output,stream,p,the,default,implementation,simply,calls,link,java,io,object,output,stream,write,object,can,be,overridden,for,serialization,of,a,custom,wrapper,object,rather,than,the,plain,invocation,for,example,an,encryption,aware,holder,param,result,the,remote,invocation,result,object,param,oos,the,object,output,stream,to,write,to,throws,java,io,ioexception,if,thrown,by,i,o,methods;protected,void,do,write,remote,invocation,result,remote,invocation,result,result,object,output,stream,oos,throws,ioexception,oos,write,object,result
RemoteInvocationSerializingExporter -> protected void doWriteRemoteInvocationResult(RemoteInvocationResult result, ObjectOutputStream oos) 			throws IOException;1357119239;Perform the actual writing of the given invocation result object_to the given ObjectOutputStream._<p>The default implementation simply calls_{@link java.io.ObjectOutputStream#writeObject}._Can be overridden for serialization of a custom wrapper object rather_than the plain invocation, for example an encryption-aware holder._@param result the RemoteInvocationResult object_@param oos the ObjectOutputStream to write to_@throws java.io.IOException if thrown by I/O methods;protected void doWriteRemoteInvocationResult(RemoteInvocationResult result, ObjectOutputStream oos)_			throws IOException {__		oos.writeObject(result)__	};perform,the,actual,writing,of,the,given,invocation,result,object,to,the,given,object,output,stream,p,the,default,implementation,simply,calls,link,java,io,object,output,stream,write,object,can,be,overridden,for,serialization,of,a,custom,wrapper,object,rather,than,the,plain,invocation,for,example,an,encryption,aware,holder,param,result,the,remote,invocation,result,object,param,oos,the,object,output,stream,to,write,to,throws,java,io,ioexception,if,thrown,by,i,o,methods;protected,void,do,write,remote,invocation,result,remote,invocation,result,result,object,output,stream,oos,throws,ioexception,oos,write,object,result
RemoteInvocationSerializingExporter -> protected void doWriteRemoteInvocationResult(RemoteInvocationResult result, ObjectOutputStream oos) 			throws IOException;1368482696;Perform the actual writing of the given invocation result object_to the given ObjectOutputStream._<p>The default implementation simply calls_{@link java.io.ObjectOutputStream#writeObject}._Can be overridden for serialization of a custom wrapper object rather_than the plain invocation, for example an encryption-aware holder._@param result the RemoteInvocationResult object_@param oos the ObjectOutputStream to write to_@throws java.io.IOException if thrown by I/O methods;protected void doWriteRemoteInvocationResult(RemoteInvocationResult result, ObjectOutputStream oos)_			throws IOException {__		oos.writeObject(result)__	};perform,the,actual,writing,of,the,given,invocation,result,object,to,the,given,object,output,stream,p,the,default,implementation,simply,calls,link,java,io,object,output,stream,write,object,can,be,overridden,for,serialization,of,a,custom,wrapper,object,rather,than,the,plain,invocation,for,example,an,encryption,aware,holder,param,result,the,remote,invocation,result,object,param,oos,the,object,output,stream,to,write,to,throws,java,io,ioexception,if,thrown,by,i,o,methods;protected,void,do,write,remote,invocation,result,remote,invocation,result,result,object,output,stream,oos,throws,ioexception,oos,write,object,result
RemoteInvocationSerializingExporter -> protected void doWriteRemoteInvocationResult(RemoteInvocationResult result, ObjectOutputStream oos) 			throws IOException;1497970235;Perform the actual writing of the given invocation result object_to the given ObjectOutputStream._<p>The default implementation simply calls_{@link java.io.ObjectOutputStream#writeObject}._Can be overridden for serialization of a custom wrapper object rather_than the plain invocation, for example an encryption-aware holder._@param result the RemoteInvocationResult object_@param oos the ObjectOutputStream to write to_@throws java.io.IOException if thrown by I/O methods;protected void doWriteRemoteInvocationResult(RemoteInvocationResult result, ObjectOutputStream oos)_			throws IOException {__		oos.writeObject(result)__	};perform,the,actual,writing,of,the,given,invocation,result,object,to,the,given,object,output,stream,p,the,default,implementation,simply,calls,link,java,io,object,output,stream,write,object,can,be,overridden,for,serialization,of,a,custom,wrapper,object,rather,than,the,plain,invocation,for,example,an,encryption,aware,holder,param,result,the,remote,invocation,result,object,param,oos,the,object,output,stream,to,write,to,throws,java,io,ioexception,if,thrown,by,i,o,methods;protected,void,do,write,remote,invocation,result,remote,invocation,result,result,object,output,stream,oos,throws,ioexception,oos,write,object,result
RemoteInvocationSerializingExporter -> protected void doWriteRemoteInvocationResult(RemoteInvocationResult result, ObjectOutputStream oos) 			throws IOException;1530174524;Perform the actual writing of the given invocation result object_to the given ObjectOutputStream._<p>The default implementation simply calls_{@link java.io.ObjectOutputStream#writeObject}._Can be overridden for serialization of a custom wrapper object rather_than the plain invocation, for example an encryption-aware holder._@param result the RemoteInvocationResult object_@param oos the ObjectOutputStream to write to_@throws java.io.IOException if thrown by I/O methods;protected void doWriteRemoteInvocationResult(RemoteInvocationResult result, ObjectOutputStream oos)_			throws IOException {__		oos.writeObject(result)__	};perform,the,actual,writing,of,the,given,invocation,result,object,to,the,given,object,output,stream,p,the,default,implementation,simply,calls,link,java,io,object,output,stream,write,object,can,be,overridden,for,serialization,of,a,custom,wrapper,object,rather,than,the,plain,invocation,for,example,an,encryption,aware,holder,param,result,the,remote,invocation,result,object,param,oos,the,object,output,stream,to,write,to,throws,java,io,ioexception,if,thrown,by,i,o,methods;protected,void,do,write,remote,invocation,result,remote,invocation,result,result,object,output,stream,oos,throws,ioexception,oos,write,object,result
RemoteInvocationSerializingExporter -> protected ObjectOutputStream createObjectOutputStream(OutputStream os) throws IOException;1328020251;Create an ObjectOutputStream for the given OutputStream._<p>The default implementation creates a plain_{@link java.io.ObjectOutputStream}._@param os the OutputStream to write to_@return the new ObjectOutputStream instance to use_@throws java.io.IOException if creation of the ObjectOutputStream failed;protected ObjectOutputStream createObjectOutputStream(OutputStream os) throws IOException {_		return new ObjectOutputStream(os)__	};create,an,object,output,stream,for,the,given,output,stream,p,the,default,implementation,creates,a,plain,link,java,io,object,output,stream,param,os,the,output,stream,to,write,to,return,the,new,object,output,stream,instance,to,use,throws,java,io,ioexception,if,creation,of,the,object,output,stream,failed;protected,object,output,stream,create,object,output,stream,output,stream,os,throws,ioexception,return,new,object,output,stream,os
RemoteInvocationSerializingExporter -> protected ObjectOutputStream createObjectOutputStream(OutputStream os) throws IOException;1356735495;Create an ObjectOutputStream for the given OutputStream._<p>The default implementation creates a plain_{@link java.io.ObjectOutputStream}._@param os the OutputStream to write to_@return the new ObjectOutputStream instance to use_@throws java.io.IOException if creation of the ObjectOutputStream failed;protected ObjectOutputStream createObjectOutputStream(OutputStream os) throws IOException {_		return new ObjectOutputStream(os)__	};create,an,object,output,stream,for,the,given,output,stream,p,the,default,implementation,creates,a,plain,link,java,io,object,output,stream,param,os,the,output,stream,to,write,to,return,the,new,object,output,stream,instance,to,use,throws,java,io,ioexception,if,creation,of,the,object,output,stream,failed;protected,object,output,stream,create,object,output,stream,output,stream,os,throws,ioexception,return,new,object,output,stream,os
RemoteInvocationSerializingExporter -> protected ObjectOutputStream createObjectOutputStream(OutputStream os) throws IOException;1357119239;Create an ObjectOutputStream for the given OutputStream._<p>The default implementation creates a plain_{@link java.io.ObjectOutputStream}._@param os the OutputStream to write to_@return the new ObjectOutputStream instance to use_@throws java.io.IOException if creation of the ObjectOutputStream failed;protected ObjectOutputStream createObjectOutputStream(OutputStream os) throws IOException {_		return new ObjectOutputStream(os)__	};create,an,object,output,stream,for,the,given,output,stream,p,the,default,implementation,creates,a,plain,link,java,io,object,output,stream,param,os,the,output,stream,to,write,to,return,the,new,object,output,stream,instance,to,use,throws,java,io,ioexception,if,creation,of,the,object,output,stream,failed;protected,object,output,stream,create,object,output,stream,output,stream,os,throws,ioexception,return,new,object,output,stream,os
RemoteInvocationSerializingExporter -> protected ObjectOutputStream createObjectOutputStream(OutputStream os) throws IOException;1368482696;Create an ObjectOutputStream for the given OutputStream._<p>The default implementation creates a plain_{@link java.io.ObjectOutputStream}._@param os the OutputStream to write to_@return the new ObjectOutputStream instance to use_@throws java.io.IOException if creation of the ObjectOutputStream failed;protected ObjectOutputStream createObjectOutputStream(OutputStream os) throws IOException {_		return new ObjectOutputStream(os)__	};create,an,object,output,stream,for,the,given,output,stream,p,the,default,implementation,creates,a,plain,link,java,io,object,output,stream,param,os,the,output,stream,to,write,to,return,the,new,object,output,stream,instance,to,use,throws,java,io,ioexception,if,creation,of,the,object,output,stream,failed;protected,object,output,stream,create,object,output,stream,output,stream,os,throws,ioexception,return,new,object,output,stream,os
RemoteInvocationSerializingExporter -> protected ObjectOutputStream createObjectOutputStream(OutputStream os) throws IOException;1497970235;Create an ObjectOutputStream for the given OutputStream._<p>The default implementation creates a plain_{@link java.io.ObjectOutputStream}._@param os the OutputStream to write to_@return the new ObjectOutputStream instance to use_@throws java.io.IOException if creation of the ObjectOutputStream failed;protected ObjectOutputStream createObjectOutputStream(OutputStream os) throws IOException {_		return new ObjectOutputStream(os)__	};create,an,object,output,stream,for,the,given,output,stream,p,the,default,implementation,creates,a,plain,link,java,io,object,output,stream,param,os,the,output,stream,to,write,to,return,the,new,object,output,stream,instance,to,use,throws,java,io,ioexception,if,creation,of,the,object,output,stream,failed;protected,object,output,stream,create,object,output,stream,output,stream,os,throws,ioexception,return,new,object,output,stream,os
RemoteInvocationSerializingExporter -> protected ObjectOutputStream createObjectOutputStream(OutputStream os) throws IOException;1530174524;Create an ObjectOutputStream for the given OutputStream._<p>The default implementation creates a plain_{@link java.io.ObjectOutputStream}._@param os the OutputStream to write to_@return the new ObjectOutputStream instance to use_@throws java.io.IOException if creation of the ObjectOutputStream failed;protected ObjectOutputStream createObjectOutputStream(OutputStream os) throws IOException {_		return new ObjectOutputStream(os)__	};create,an,object,output,stream,for,the,given,output,stream,p,the,default,implementation,creates,a,plain,link,java,io,object,output,stream,param,os,the,output,stream,to,write,to,return,the,new,object,output,stream,instance,to,use,throws,java,io,ioexception,if,creation,of,the,object,output,stream,failed;protected,object,output,stream,create,object,output,stream,output,stream,os,throws,ioexception,return,new,object,output,stream,os
RemoteInvocationSerializingExporter -> protected ObjectInputStream createObjectInputStream(InputStream is) throws IOException;1328020251;Create an ObjectInputStream for the given InputStream._<p>The default implementation creates a Spring {@link CodebaseAwareObjectInputStream}._@param is the InputStream to read from_@return the new ObjectInputStream instance to use_@throws java.io.IOException if creation of the ObjectInputStream failed;protected ObjectInputStream createObjectInputStream(InputStream is) throws IOException {_		return new CodebaseAwareObjectInputStream(is, getBeanClassLoader(), isAcceptProxyClasses())__	};create,an,object,input,stream,for,the,given,input,stream,p,the,default,implementation,creates,a,spring,link,codebase,aware,object,input,stream,param,is,the,input,stream,to,read,from,return,the,new,object,input,stream,instance,to,use,throws,java,io,ioexception,if,creation,of,the,object,input,stream,failed;protected,object,input,stream,create,object,input,stream,input,stream,is,throws,ioexception,return,new,codebase,aware,object,input,stream,is,get,bean,class,loader,is,accept,proxy,classes
RemoteInvocationSerializingExporter -> protected ObjectInputStream createObjectInputStream(InputStream is) throws IOException;1356735495;Create an ObjectInputStream for the given InputStream._<p>The default implementation creates a Spring {@link CodebaseAwareObjectInputStream}._@param is the InputStream to read from_@return the new ObjectInputStream instance to use_@throws java.io.IOException if creation of the ObjectInputStream failed;protected ObjectInputStream createObjectInputStream(InputStream is) throws IOException {_		return new CodebaseAwareObjectInputStream(is, getBeanClassLoader(), isAcceptProxyClasses())__	};create,an,object,input,stream,for,the,given,input,stream,p,the,default,implementation,creates,a,spring,link,codebase,aware,object,input,stream,param,is,the,input,stream,to,read,from,return,the,new,object,input,stream,instance,to,use,throws,java,io,ioexception,if,creation,of,the,object,input,stream,failed;protected,object,input,stream,create,object,input,stream,input,stream,is,throws,ioexception,return,new,codebase,aware,object,input,stream,is,get,bean,class,loader,is,accept,proxy,classes
RemoteInvocationSerializingExporter -> protected ObjectInputStream createObjectInputStream(InputStream is) throws IOException;1357119239;Create an ObjectInputStream for the given InputStream._<p>The default implementation creates a Spring {@link CodebaseAwareObjectInputStream}._@param is the InputStream to read from_@return the new ObjectInputStream instance to use_@throws java.io.IOException if creation of the ObjectInputStream failed;protected ObjectInputStream createObjectInputStream(InputStream is) throws IOException {_		return new CodebaseAwareObjectInputStream(is, getBeanClassLoader(), isAcceptProxyClasses())__	};create,an,object,input,stream,for,the,given,input,stream,p,the,default,implementation,creates,a,spring,link,codebase,aware,object,input,stream,param,is,the,input,stream,to,read,from,return,the,new,object,input,stream,instance,to,use,throws,java,io,ioexception,if,creation,of,the,object,input,stream,failed;protected,object,input,stream,create,object,input,stream,input,stream,is,throws,ioexception,return,new,codebase,aware,object,input,stream,is,get,bean,class,loader,is,accept,proxy,classes
RemoteInvocationSerializingExporter -> protected ObjectInputStream createObjectInputStream(InputStream is) throws IOException;1368482696;Create an ObjectInputStream for the given InputStream._<p>The default implementation creates a Spring {@link CodebaseAwareObjectInputStream}._@param is the InputStream to read from_@return the new ObjectInputStream instance to use_@throws java.io.IOException if creation of the ObjectInputStream failed;protected ObjectInputStream createObjectInputStream(InputStream is) throws IOException {_		return new CodebaseAwareObjectInputStream(is, getBeanClassLoader(), isAcceptProxyClasses())__	};create,an,object,input,stream,for,the,given,input,stream,p,the,default,implementation,creates,a,spring,link,codebase,aware,object,input,stream,param,is,the,input,stream,to,read,from,return,the,new,object,input,stream,instance,to,use,throws,java,io,ioexception,if,creation,of,the,object,input,stream,failed;protected,object,input,stream,create,object,input,stream,input,stream,is,throws,ioexception,return,new,codebase,aware,object,input,stream,is,get,bean,class,loader,is,accept,proxy,classes
RemoteInvocationSerializingExporter -> protected ObjectInputStream createObjectInputStream(InputStream is) throws IOException;1497970235;Create an ObjectInputStream for the given InputStream._<p>The default implementation creates a Spring {@link CodebaseAwareObjectInputStream}._@param is the InputStream to read from_@return the new ObjectInputStream instance to use_@throws java.io.IOException if creation of the ObjectInputStream failed;protected ObjectInputStream createObjectInputStream(InputStream is) throws IOException {_		return new CodebaseAwareObjectInputStream(is, getBeanClassLoader(), isAcceptProxyClasses())__	};create,an,object,input,stream,for,the,given,input,stream,p,the,default,implementation,creates,a,spring,link,codebase,aware,object,input,stream,param,is,the,input,stream,to,read,from,return,the,new,object,input,stream,instance,to,use,throws,java,io,ioexception,if,creation,of,the,object,input,stream,failed;protected,object,input,stream,create,object,input,stream,input,stream,is,throws,ioexception,return,new,codebase,aware,object,input,stream,is,get,bean,class,loader,is,accept,proxy,classes
RemoteInvocationSerializingExporter -> protected ObjectInputStream createObjectInputStream(InputStream is) throws IOException;1530174524;Create an ObjectInputStream for the given InputStream._<p>The default implementation creates a Spring {@link CodebaseAwareObjectInputStream}._@param is the InputStream to read from_@return the new ObjectInputStream instance to use_@throws java.io.IOException if creation of the ObjectInputStream failed;protected ObjectInputStream createObjectInputStream(InputStream is) throws IOException {_		return new CodebaseAwareObjectInputStream(is, getBeanClassLoader(), isAcceptProxyClasses())__	};create,an,object,input,stream,for,the,given,input,stream,p,the,default,implementation,creates,a,spring,link,codebase,aware,object,input,stream,param,is,the,input,stream,to,read,from,return,the,new,object,input,stream,instance,to,use,throws,java,io,ioexception,if,creation,of,the,object,input,stream,failed;protected,object,input,stream,create,object,input,stream,input,stream,is,throws,ioexception,return,new,codebase,aware,object,input,stream,is,get,bean,class,loader,is,accept,proxy,classes
RemoteInvocationSerializingExporter -> public void setAcceptProxyClasses(boolean acceptProxyClasses);1328020251;Set whether to accept deserialization of proxy classes._<p>Default is "true". May be deactivated as a security measure.;public void setAcceptProxyClasses(boolean acceptProxyClasses) {_		this.acceptProxyClasses = acceptProxyClasses__	};set,whether,to,accept,deserialization,of,proxy,classes,p,default,is,true,may,be,deactivated,as,a,security,measure;public,void,set,accept,proxy,classes,boolean,accept,proxy,classes,this,accept,proxy,classes,accept,proxy,classes
RemoteInvocationSerializingExporter -> public void setAcceptProxyClasses(boolean acceptProxyClasses);1356735495;Set whether to accept deserialization of proxy classes._<p>Default is "true". May be deactivated as a security measure.;public void setAcceptProxyClasses(boolean acceptProxyClasses) {_		this.acceptProxyClasses = acceptProxyClasses__	};set,whether,to,accept,deserialization,of,proxy,classes,p,default,is,true,may,be,deactivated,as,a,security,measure;public,void,set,accept,proxy,classes,boolean,accept,proxy,classes,this,accept,proxy,classes,accept,proxy,classes
RemoteInvocationSerializingExporter -> public void setAcceptProxyClasses(boolean acceptProxyClasses);1357119239;Set whether to accept deserialization of proxy classes._<p>Default is "true". May be deactivated as a security measure.;public void setAcceptProxyClasses(boolean acceptProxyClasses) {_		this.acceptProxyClasses = acceptProxyClasses__	};set,whether,to,accept,deserialization,of,proxy,classes,p,default,is,true,may,be,deactivated,as,a,security,measure;public,void,set,accept,proxy,classes,boolean,accept,proxy,classes,this,accept,proxy,classes,accept,proxy,classes
RemoteInvocationSerializingExporter -> public void setAcceptProxyClasses(boolean acceptProxyClasses);1368482696;Set whether to accept deserialization of proxy classes._<p>Default is "true". May be deactivated as a security measure.;public void setAcceptProxyClasses(boolean acceptProxyClasses) {_		this.acceptProxyClasses = acceptProxyClasses__	};set,whether,to,accept,deserialization,of,proxy,classes,p,default,is,true,may,be,deactivated,as,a,security,measure;public,void,set,accept,proxy,classes,boolean,accept,proxy,classes,this,accept,proxy,classes,accept,proxy,classes
RemoteInvocationSerializingExporter -> public void setAcceptProxyClasses(boolean acceptProxyClasses);1497970235;Set whether to accept deserialization of proxy classes._<p>Default is "true". May be deactivated as a security measure.;public void setAcceptProxyClasses(boolean acceptProxyClasses) {_		this.acceptProxyClasses = acceptProxyClasses__	};set,whether,to,accept,deserialization,of,proxy,classes,p,default,is,true,may,be,deactivated,as,a,security,measure;public,void,set,accept,proxy,classes,boolean,accept,proxy,classes,this,accept,proxy,classes,accept,proxy,classes
RemoteInvocationSerializingExporter -> public void setAcceptProxyClasses(boolean acceptProxyClasses);1530174524;Set whether to accept deserialization of proxy classes._<p>Default is "true". May be deactivated as a security measure.;public void setAcceptProxyClasses(boolean acceptProxyClasses) {_		this.acceptProxyClasses = acceptProxyClasses__	};set,whether,to,accept,deserialization,of,proxy,classes,p,default,is,true,may,be,deactivated,as,a,security,measure;public,void,set,accept,proxy,classes,boolean,accept,proxy,classes,this,accept,proxy,classes,accept,proxy,classes
RemoteInvocationSerializingExporter -> public void prepare();1328020251;Initialize this service exporter.;public void prepare() {_		this.proxy = getProxyForService()__	};initialize,this,service,exporter;public,void,prepare,this,proxy,get,proxy,for,service
RemoteInvocationSerializingExporter -> public void prepare();1356735495;Initialize this service exporter.;public void prepare() {_		this.proxy = getProxyForService()__	};initialize,this,service,exporter;public,void,prepare,this,proxy,get,proxy,for,service
RemoteInvocationSerializingExporter -> public void prepare();1357119239;Initialize this service exporter.;public void prepare() {_		this.proxy = getProxyForService()__	};initialize,this,service,exporter;public,void,prepare,this,proxy,get,proxy,for,service
RemoteInvocationSerializingExporter -> public void prepare();1368482696;Initialize this service exporter.;public void prepare() {_		this.proxy = getProxyForService()__	};initialize,this,service,exporter;public,void,prepare,this,proxy,get,proxy,for,service
RemoteInvocationSerializingExporter -> public void prepare();1497970235;Initialize this service exporter.;public void prepare() {_		this.proxy = getProxyForService()__	};initialize,this,service,exporter;public,void,prepare,this,proxy,get,proxy,for,service
RemoteInvocationSerializingExporter -> public void prepare();1530174524;Initialize this service exporter.;public void prepare() {_		this.proxy = getProxyForService()__	};initialize,this,service,exporter;public,void,prepare,this,proxy,get,proxy,for,service
RemoteInvocationSerializingExporter -> public String getContentType();1328020251;Return the content type to use for sending remote invocation responses.;public String getContentType() {_		return this.contentType__	};return,the,content,type,to,use,for,sending,remote,invocation,responses;public,string,get,content,type,return,this,content,type
RemoteInvocationSerializingExporter -> public String getContentType();1356735495;Return the content type to use for sending remote invocation responses.;public String getContentType() {_		return this.contentType__	};return,the,content,type,to,use,for,sending,remote,invocation,responses;public,string,get,content,type,return,this,content,type
RemoteInvocationSerializingExporter -> public String getContentType();1357119239;Return the content type to use for sending remote invocation responses.;public String getContentType() {_		return this.contentType__	};return,the,content,type,to,use,for,sending,remote,invocation,responses;public,string,get,content,type,return,this,content,type
RemoteInvocationSerializingExporter -> public String getContentType();1368482696;Return the content type to use for sending remote invocation responses.;public String getContentType() {_		return this.contentType__	};return,the,content,type,to,use,for,sending,remote,invocation,responses;public,string,get,content,type,return,this,content,type
RemoteInvocationSerializingExporter -> public String getContentType();1497970235;Return the content type to use for sending remote invocation responses.;public String getContentType() {_		return this.contentType__	};return,the,content,type,to,use,for,sending,remote,invocation,responses;public,string,get,content,type,return,this,content,type
RemoteInvocationSerializingExporter -> public String getContentType();1530174524;Return the content type to use for sending remote invocation responses.;public String getContentType() {_		return this.contentType__	};return,the,content,type,to,use,for,sending,remote,invocation,responses;public,string,get,content,type,return,this,content,type
