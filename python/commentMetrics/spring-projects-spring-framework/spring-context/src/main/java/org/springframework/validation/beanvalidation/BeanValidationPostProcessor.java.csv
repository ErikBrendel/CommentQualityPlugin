# id;timestamp;commentText;codeText;commentWords;codeWords
BeanValidationPostProcessor -> public void setValidatorFactory(ValidatorFactory validatorFactory);1328020251;Set the JSR-303 ValidatorFactory to delegate to for validating beans,_using its default Validator._<p>Default is the default ValidatorFactory's default Validator._@see javax.validation.ValidatorFactory#getValidator();public void setValidatorFactory(ValidatorFactory validatorFactory) {_		this.validator = validatorFactory.getValidator()__	};set,the,jsr,303,validator,factory,to,delegate,to,for,validating,beans,using,its,default,validator,p,default,is,the,default,validator,factory,s,default,validator,see,javax,validation,validator,factory,get,validator;public,void,set,validator,factory,validator,factory,validator,factory,this,validator,validator,factory,get,validator
BeanValidationPostProcessor -> public void setValidatorFactory(ValidatorFactory validatorFactory);1356735495;Set the JSR-303 ValidatorFactory to delegate to for validating beans,_using its default Validator._<p>Default is the default ValidatorFactory's default Validator._@see javax.validation.ValidatorFactory#getValidator();public void setValidatorFactory(ValidatorFactory validatorFactory) {_		this.validator = validatorFactory.getValidator()__	};set,the,jsr,303,validator,factory,to,delegate,to,for,validating,beans,using,its,default,validator,p,default,is,the,default,validator,factory,s,default,validator,see,javax,validation,validator,factory,get,validator;public,void,set,validator,factory,validator,factory,validator,factory,this,validator,validator,factory,get,validator
BeanValidationPostProcessor -> public void setValidatorFactory(ValidatorFactory validatorFactory);1357119239;Set the JSR-303 ValidatorFactory to delegate to for validating beans,_using its default Validator._<p>Default is the default ValidatorFactory's default Validator._@see javax.validation.ValidatorFactory#getValidator();public void setValidatorFactory(ValidatorFactory validatorFactory) {_		this.validator = validatorFactory.getValidator()__	};set,the,jsr,303,validator,factory,to,delegate,to,for,validating,beans,using,its,default,validator,p,default,is,the,default,validator,factory,s,default,validator,see,javax,validation,validator,factory,get,validator;public,void,set,validator,factory,validator,factory,validator,factory,this,validator,validator,factory,get,validator
BeanValidationPostProcessor -> public void setValidatorFactory(ValidatorFactory validatorFactory);1368482696;Set the JSR-303 ValidatorFactory to delegate to for validating beans,_using its default Validator._<p>Default is the default ValidatorFactory's default Validator._@see javax.validation.ValidatorFactory#getValidator();public void setValidatorFactory(ValidatorFactory validatorFactory) {_		this.validator = validatorFactory.getValidator()__	};set,the,jsr,303,validator,factory,to,delegate,to,for,validating,beans,using,its,default,validator,p,default,is,the,default,validator,factory,s,default,validator,see,javax,validation,validator,factory,get,validator;public,void,set,validator,factory,validator,factory,validator,factory,this,validator,validator,factory,get,validator
BeanValidationPostProcessor -> public void setValidatorFactory(ValidatorFactory validatorFactory);1498780456;Set the JSR-303 ValidatorFactory to delegate to for validating beans,_using its default Validator._<p>Default is the default ValidatorFactory's default Validator._@see javax.validation.ValidatorFactory#getValidator();public void setValidatorFactory(ValidatorFactory validatorFactory) {_		this.validator = validatorFactory.getValidator()__	};set,the,jsr,303,validator,factory,to,delegate,to,for,validating,beans,using,its,default,validator,p,default,is,the,default,validator,factory,s,default,validator,see,javax,validation,validator,factory,get,validator;public,void,set,validator,factory,validator,factory,validator,factory,this,validator,validator,factory,get,validator
BeanValidationPostProcessor -> public void setValidatorFactory(ValidatorFactory validatorFactory);1536863067;Set the JSR-303 ValidatorFactory to delegate to for validating beans,_using its default Validator._<p>Default is the default ValidatorFactory's default Validator._@see javax.validation.ValidatorFactory#getValidator();public void setValidatorFactory(ValidatorFactory validatorFactory) {_		this.validator = validatorFactory.getValidator()__	};set,the,jsr,303,validator,factory,to,delegate,to,for,validating,beans,using,its,default,validator,p,default,is,the,default,validator,factory,s,default,validator,see,javax,validation,validator,factory,get,validator;public,void,set,validator,factory,validator,factory,validator,factory,this,validator,validator,factory,get,validator
BeanValidationPostProcessor -> public void setAfterInitialization(boolean afterInitialization);1328020251;Choose whether to perform validation after bean initialization_(i.e. after init methods) instead of before (which is the default)._<p>Default is "false" (before initialization). Switch this to "true"_(after initialization) if you would like to give init methods a chance_to populate constrained fields before they get validated.;public void setAfterInitialization(boolean afterInitialization) {_		this.afterInitialization = afterInitialization__	};choose,whether,to,perform,validation,after,bean,initialization,i,e,after,init,methods,instead,of,before,which,is,the,default,p,default,is,false,before,initialization,switch,this,to,true,after,initialization,if,you,would,like,to,give,init,methods,a,chance,to,populate,constrained,fields,before,they,get,validated;public,void,set,after,initialization,boolean,after,initialization,this,after,initialization,after,initialization
BeanValidationPostProcessor -> public void setAfterInitialization(boolean afterInitialization);1356735495;Choose whether to perform validation after bean initialization_(i.e. after init methods) instead of before (which is the default)._<p>Default is "false" (before initialization). Switch this to "true"_(after initialization) if you would like to give init methods a chance_to populate constrained fields before they get validated.;public void setAfterInitialization(boolean afterInitialization) {_		this.afterInitialization = afterInitialization__	};choose,whether,to,perform,validation,after,bean,initialization,i,e,after,init,methods,instead,of,before,which,is,the,default,p,default,is,false,before,initialization,switch,this,to,true,after,initialization,if,you,would,like,to,give,init,methods,a,chance,to,populate,constrained,fields,before,they,get,validated;public,void,set,after,initialization,boolean,after,initialization,this,after,initialization,after,initialization
BeanValidationPostProcessor -> public void setAfterInitialization(boolean afterInitialization);1357119239;Choose whether to perform validation after bean initialization_(i.e. after init methods) instead of before (which is the default)._<p>Default is "false" (before initialization). Switch this to "true"_(after initialization) if you would like to give init methods a chance_to populate constrained fields before they get validated.;public void setAfterInitialization(boolean afterInitialization) {_		this.afterInitialization = afterInitialization__	};choose,whether,to,perform,validation,after,bean,initialization,i,e,after,init,methods,instead,of,before,which,is,the,default,p,default,is,false,before,initialization,switch,this,to,true,after,initialization,if,you,would,like,to,give,init,methods,a,chance,to,populate,constrained,fields,before,they,get,validated;public,void,set,after,initialization,boolean,after,initialization,this,after,initialization,after,initialization
BeanValidationPostProcessor -> public void setAfterInitialization(boolean afterInitialization);1368482696;Choose whether to perform validation after bean initialization_(i.e. after init methods) instead of before (which is the default)._<p>Default is "false" (before initialization). Switch this to "true"_(after initialization) if you would like to give init methods a chance_to populate constrained fields before they get validated.;public void setAfterInitialization(boolean afterInitialization) {_		this.afterInitialization = afterInitialization__	};choose,whether,to,perform,validation,after,bean,initialization,i,e,after,init,methods,instead,of,before,which,is,the,default,p,default,is,false,before,initialization,switch,this,to,true,after,initialization,if,you,would,like,to,give,init,methods,a,chance,to,populate,constrained,fields,before,they,get,validated;public,void,set,after,initialization,boolean,after,initialization,this,after,initialization,after,initialization
BeanValidationPostProcessor -> public void setAfterInitialization(boolean afterInitialization);1498780456;Choose whether to perform validation after bean initialization_(i.e. after init methods) instead of before (which is the default)._<p>Default is "false" (before initialization). Switch this to "true"_(after initialization) if you would like to give init methods a chance_to populate constrained fields before they get validated.;public void setAfterInitialization(boolean afterInitialization) {_		this.afterInitialization = afterInitialization__	};choose,whether,to,perform,validation,after,bean,initialization,i,e,after,init,methods,instead,of,before,which,is,the,default,p,default,is,false,before,initialization,switch,this,to,true,after,initialization,if,you,would,like,to,give,init,methods,a,chance,to,populate,constrained,fields,before,they,get,validated;public,void,set,after,initialization,boolean,after,initialization,this,after,initialization,after,initialization
BeanValidationPostProcessor -> public void setAfterInitialization(boolean afterInitialization);1536863067;Choose whether to perform validation after bean initialization_(i.e. after init methods) instead of before (which is the default)._<p>Default is "false" (before initialization). Switch this to "true"_(after initialization) if you would like to give init methods a chance_to populate constrained fields before they get validated.;public void setAfterInitialization(boolean afterInitialization) {_		this.afterInitialization = afterInitialization__	};choose,whether,to,perform,validation,after,bean,initialization,i,e,after,init,methods,instead,of,before,which,is,the,default,p,default,is,false,before,initialization,switch,this,to,true,after,initialization,if,you,would,like,to,give,init,methods,a,chance,to,populate,constrained,fields,before,they,get,validated;public,void,set,after,initialization,boolean,after,initialization,this,after,initialization,after,initialization
BeanValidationPostProcessor -> protected void doValidate(Object bean);1328020251;Perform validation of the given bean._@param bean the bean instance to validate_@see javax.validation.Validator#validate;protected void doValidate(Object bean) {_		Set<ConstraintViolation<Object>> result = this.validator.validate(bean)__		if (!result.isEmpty()) {_			StringBuilder sb = new StringBuilder("Bean state is invalid: ")__			for (Iterator<ConstraintViolation<Object>> it = result.iterator()_ it.hasNext()_) {_				ConstraintViolation<Object> violation = it.next()__				sb.append(violation.getPropertyPath()).append(" - ").append(violation.getMessage())__				if (it.hasNext()) {_					sb.append("_ ")__				}_			}_			throw new BeanInitializationException(sb.toString())__		}_	};perform,validation,of,the,given,bean,param,bean,the,bean,instance,to,validate,see,javax,validation,validator,validate;protected,void,do,validate,object,bean,set,constraint,violation,object,result,this,validator,validate,bean,if,result,is,empty,string,builder,sb,new,string,builder,bean,state,is,invalid,for,iterator,constraint,violation,object,it,result,iterator,it,has,next,constraint,violation,object,violation,it,next,sb,append,violation,get,property,path,append,append,violation,get,message,if,it,has,next,sb,append,throw,new,bean,initialization,exception,sb,to,string
BeanValidationPostProcessor -> protected void doValidate(Object bean);1356735495;Perform validation of the given bean._@param bean the bean instance to validate_@see javax.validation.Validator#validate;protected void doValidate(Object bean) {_		Set<ConstraintViolation<Object>> result = this.validator.validate(bean)__		if (!result.isEmpty()) {_			StringBuilder sb = new StringBuilder("Bean state is invalid: ")__			for (Iterator<ConstraintViolation<Object>> it = result.iterator()_ it.hasNext()_) {_				ConstraintViolation<Object> violation = it.next()__				sb.append(violation.getPropertyPath()).append(" - ").append(violation.getMessage())__				if (it.hasNext()) {_					sb.append("_ ")__				}_			}_			throw new BeanInitializationException(sb.toString())__		}_	};perform,validation,of,the,given,bean,param,bean,the,bean,instance,to,validate,see,javax,validation,validator,validate;protected,void,do,validate,object,bean,set,constraint,violation,object,result,this,validator,validate,bean,if,result,is,empty,string,builder,sb,new,string,builder,bean,state,is,invalid,for,iterator,constraint,violation,object,it,result,iterator,it,has,next,constraint,violation,object,violation,it,next,sb,append,violation,get,property,path,append,append,violation,get,message,if,it,has,next,sb,append,throw,new,bean,initialization,exception,sb,to,string
BeanValidationPostProcessor -> protected void doValidate(Object bean);1357119239;Perform validation of the given bean._@param bean the bean instance to validate_@see javax.validation.Validator#validate;protected void doValidate(Object bean) {_		Set<ConstraintViolation<Object>> result = this.validator.validate(bean)__		if (!result.isEmpty()) {_			StringBuilder sb = new StringBuilder("Bean state is invalid: ")__			for (Iterator<ConstraintViolation<Object>> it = result.iterator()_ it.hasNext()_) {_				ConstraintViolation<Object> violation = it.next()__				sb.append(violation.getPropertyPath()).append(" - ").append(violation.getMessage())__				if (it.hasNext()) {_					sb.append("_ ")__				}_			}_			throw new BeanInitializationException(sb.toString())__		}_	};perform,validation,of,the,given,bean,param,bean,the,bean,instance,to,validate,see,javax,validation,validator,validate;protected,void,do,validate,object,bean,set,constraint,violation,object,result,this,validator,validate,bean,if,result,is,empty,string,builder,sb,new,string,builder,bean,state,is,invalid,for,iterator,constraint,violation,object,it,result,iterator,it,has,next,constraint,violation,object,violation,it,next,sb,append,violation,get,property,path,append,append,violation,get,message,if,it,has,next,sb,append,throw,new,bean,initialization,exception,sb,to,string
BeanValidationPostProcessor -> protected void doValidate(Object bean);1368482696;Perform validation of the given bean._@param bean the bean instance to validate_@see javax.validation.Validator#validate;protected void doValidate(Object bean) {_		Set<ConstraintViolation<Object>> result = this.validator.validate(bean)__		if (!result.isEmpty()) {_			StringBuilder sb = new StringBuilder("Bean state is invalid: ")__			for (Iterator<ConstraintViolation<Object>> it = result.iterator()_ it.hasNext()_) {_				ConstraintViolation<Object> violation = it.next()__				sb.append(violation.getPropertyPath()).append(" - ").append(violation.getMessage())__				if (it.hasNext()) {_					sb.append("_ ")__				}_			}_			throw new BeanInitializationException(sb.toString())__		}_	};perform,validation,of,the,given,bean,param,bean,the,bean,instance,to,validate,see,javax,validation,validator,validate;protected,void,do,validate,object,bean,set,constraint,violation,object,result,this,validator,validate,bean,if,result,is,empty,string,builder,sb,new,string,builder,bean,state,is,invalid,for,iterator,constraint,violation,object,it,result,iterator,it,has,next,constraint,violation,object,violation,it,next,sb,append,violation,get,property,path,append,append,violation,get,message,if,it,has,next,sb,append,throw,new,bean,initialization,exception,sb,to,string
BeanValidationPostProcessor -> protected void doValidate(Object bean);1498780456;Perform validation of the given bean._@param bean the bean instance to validate_@see javax.validation.Validator#validate;protected void doValidate(Object bean) {_		Assert.state(this.validator != null, "No Validator set")__		Set<ConstraintViolation<Object>> result = this.validator.validate(bean)__		if (!result.isEmpty()) {_			StringBuilder sb = new StringBuilder("Bean state is invalid: ")__			for (Iterator<ConstraintViolation<Object>> it = result.iterator()_ it.hasNext()_) {_				ConstraintViolation<Object> violation = it.next()__				sb.append(violation.getPropertyPath()).append(" - ").append(violation.getMessage())__				if (it.hasNext()) {_					sb.append("_ ")__				}_			}_			throw new BeanInitializationException(sb.toString())__		}_	};perform,validation,of,the,given,bean,param,bean,the,bean,instance,to,validate,see,javax,validation,validator,validate;protected,void,do,validate,object,bean,assert,state,this,validator,null,no,validator,set,set,constraint,violation,object,result,this,validator,validate,bean,if,result,is,empty,string,builder,sb,new,string,builder,bean,state,is,invalid,for,iterator,constraint,violation,object,it,result,iterator,it,has,next,constraint,violation,object,violation,it,next,sb,append,violation,get,property,path,append,append,violation,get,message,if,it,has,next,sb,append,throw,new,bean,initialization,exception,sb,to,string
BeanValidationPostProcessor -> protected void doValidate(Object bean);1536863067;Perform validation of the given bean._@param bean the bean instance to validate_@see javax.validation.Validator#validate;protected void doValidate(Object bean) {_		Assert.state(this.validator != null, "No Validator set")__		Object objectToValidate = AopProxyUtils.getSingletonTarget(bean)__		if (objectToValidate == null) {_			objectToValidate = bean__		}_		Set<ConstraintViolation<Object>> result = this.validator.validate(objectToValidate)___		if (!result.isEmpty()) {_			StringBuilder sb = new StringBuilder("Bean state is invalid: ")__			for (Iterator<ConstraintViolation<Object>> it = result.iterator()_ it.hasNext()_) {_				ConstraintViolation<Object> violation = it.next()__				sb.append(violation.getPropertyPath()).append(" - ").append(violation.getMessage())__				if (it.hasNext()) {_					sb.append("_ ")__				}_			}_			throw new BeanInitializationException(sb.toString())__		}_	};perform,validation,of,the,given,bean,param,bean,the,bean,instance,to,validate,see,javax,validation,validator,validate;protected,void,do,validate,object,bean,assert,state,this,validator,null,no,validator,set,object,object,to,validate,aop,proxy,utils,get,singleton,target,bean,if,object,to,validate,null,object,to,validate,bean,set,constraint,violation,object,result,this,validator,validate,object,to,validate,if,result,is,empty,string,builder,sb,new,string,builder,bean,state,is,invalid,for,iterator,constraint,violation,object,it,result,iterator,it,has,next,constraint,violation,object,violation,it,next,sb,append,violation,get,property,path,append,append,violation,get,message,if,it,has,next,sb,append,throw,new,bean,initialization,exception,sb,to,string
BeanValidationPostProcessor -> public void setValidator(Validator validator);1328020251;Set the JSR-303 Validator to delegate to for validating beans._<p>Default is the default ValidatorFactory's default Validator.;public void setValidator(Validator validator) {_		this.validator = validator__	};set,the,jsr,303,validator,to,delegate,to,for,validating,beans,p,default,is,the,default,validator,factory,s,default,validator;public,void,set,validator,validator,validator,this,validator,validator
BeanValidationPostProcessor -> public void setValidator(Validator validator);1356735495;Set the JSR-303 Validator to delegate to for validating beans._<p>Default is the default ValidatorFactory's default Validator.;public void setValidator(Validator validator) {_		this.validator = validator__	};set,the,jsr,303,validator,to,delegate,to,for,validating,beans,p,default,is,the,default,validator,factory,s,default,validator;public,void,set,validator,validator,validator,this,validator,validator
BeanValidationPostProcessor -> public void setValidator(Validator validator);1357119239;Set the JSR-303 Validator to delegate to for validating beans._<p>Default is the default ValidatorFactory's default Validator.;public void setValidator(Validator validator) {_		this.validator = validator__	};set,the,jsr,303,validator,to,delegate,to,for,validating,beans,p,default,is,the,default,validator,factory,s,default,validator;public,void,set,validator,validator,validator,this,validator,validator
BeanValidationPostProcessor -> public void setValidator(Validator validator);1368482696;Set the JSR-303 Validator to delegate to for validating beans._<p>Default is the default ValidatorFactory's default Validator.;public void setValidator(Validator validator) {_		this.validator = validator__	};set,the,jsr,303,validator,to,delegate,to,for,validating,beans,p,default,is,the,default,validator,factory,s,default,validator;public,void,set,validator,validator,validator,this,validator,validator
BeanValidationPostProcessor -> public void setValidator(Validator validator);1498780456;Set the JSR-303 Validator to delegate to for validating beans._<p>Default is the default ValidatorFactory's default Validator.;public void setValidator(Validator validator) {_		this.validator = validator__	};set,the,jsr,303,validator,to,delegate,to,for,validating,beans,p,default,is,the,default,validator,factory,s,default,validator;public,void,set,validator,validator,validator,this,validator,validator
BeanValidationPostProcessor -> public void setValidator(Validator validator);1536863067;Set the JSR-303 Validator to delegate to for validating beans._<p>Default is the default ValidatorFactory's default Validator.;public void setValidator(Validator validator) {_		this.validator = validator__	};set,the,jsr,303,validator,to,delegate,to,for,validating,beans,p,default,is,the,default,validator,factory,s,default,validator;public,void,set,validator,validator,validator,this,validator,validator
