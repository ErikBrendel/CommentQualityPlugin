commented;modifiers;parameterAmount;loc;comment;code
false;public;0;3;;public ClassLoader getClassLoader() {     return this.classLoader. }
false;public;1;15;;public void addTransformer(ClassFileTransformer transformer) {     Assert.notNull(transformer, "ClassFileTransformer must not be null").     try {         InvocationHandler adapter = new WebSphereClassPreDefinePlugin(transformer).         Object adapterInstance = Proxy.newProxyInstance(this.wsPreProcessorClass.getClassLoader(), new Class<?>[] { this.wsPreProcessorClass }, adapter).         this.addPreDefinePlugin.invoke(this.classLoader, adapterInstance).     } catch (InvocationTargetException ex) {         throw new IllegalStateException("WebSphere addPreDefinePlugin method threw exception", ex.getCause()).     } catch (Throwable ex) {         throw new IllegalStateException("Could not invoke WebSphere addPreDefinePlugin method", ex).     } }
false;public;0;15;;public ClassLoader getThrowawayClassLoader() {     try {         ClassLoader loader = this.cloneConstructor.newInstance(getClassLoader()).         // Clear out the transformers (copied as well)         List<?> list = (List<?>) this.transformerList.get(loader).         list.clear().         return loader.     } catch (InvocationTargetException ex) {         throw new IllegalStateException("WebSphere CompoundClassLoader constructor failed", ex.getCause()).     } catch (Throwable ex) {         throw new IllegalStateException("Could not construct WebSphere CompoundClassLoader", ex).     } }
