# id;timestamp;commentText;codeText;commentWords;codeWords
StandardScriptEvaluator -> public StandardScriptEvaluator();1382746895;Construct a new StandardScriptEvaluator.;public StandardScriptEvaluator() {_	};construct,a,new,standard,script,evaluator;public,standard,script,evaluator
StandardScriptEvaluator -> public StandardScriptEvaluator();1385507478;Construct a new StandardScriptEvaluator.;public StandardScriptEvaluator() {_	};construct,a,new,standard,script,evaluator;public,standard,script,evaluator
StandardScriptEvaluator -> public StandardScriptEvaluator();1443040655;Construct a new {@code StandardScriptEvaluator}.;public StandardScriptEvaluator() {_	};construct,a,new,code,standard,script,evaluator;public,standard,script,evaluator
StandardScriptEvaluator -> public StandardScriptEvaluator();1444424101;Construct a new {@code StandardScriptEvaluator}.;public StandardScriptEvaluator() {_	};construct,a,new,code,standard,script,evaluator;public,standard,script,evaluator
StandardScriptEvaluator -> public StandardScriptEvaluator();1496242568;Construct a new {@code StandardScriptEvaluator}.;public StandardScriptEvaluator() {_	};construct,a,new,code,standard,script,evaluator;public,standard,script,evaluator
StandardScriptEvaluator -> public StandardScriptEvaluator();1496837955;Construct a new {@code StandardScriptEvaluator}.;public StandardScriptEvaluator() {_	};construct,a,new,code,standard,script,evaluator;public,standard,script,evaluator
StandardScriptEvaluator -> public StandardScriptEvaluator();1498780456;Construct a new {@code StandardScriptEvaluator}.;public StandardScriptEvaluator() {_	};construct,a,new,code,standard,script,evaluator;public,standard,script,evaluator
StandardScriptEvaluator -> public StandardScriptEvaluator();1502974979;Construct a new {@code StandardScriptEvaluator}.;public StandardScriptEvaluator() {_	};construct,a,new,code,standard,script,evaluator;public,standard,script,evaluator
StandardScriptEvaluator -> public void setGlobalBindings(Map<String, Object> globalBindings);1443040655;Set the globally scoped bindings on the underlying script engine manager,_shared by all scripts, as an alternative to script argument bindings._@since 4.2.2_@see #evaluate(ScriptSource, Map)_@see javax.script.ScriptEngineManager#setBindings(Bindings)_@see javax.script.SimpleBindings;public void setGlobalBindings(Map<String, Object> globalBindings) {_		if (globalBindings != null) {_			this.scriptEngineManager.setBindings(StandardScriptUtils.getBindings(globalBindings))__		}_	};set,the,globally,scoped,bindings,on,the,underlying,script,engine,manager,shared,by,all,scripts,as,an,alternative,to,script,argument,bindings,since,4,2,2,see,evaluate,script,source,map,see,javax,script,script,engine,manager,set,bindings,bindings,see,javax,script,simple,bindings;public,void,set,global,bindings,map,string,object,global,bindings,if,global,bindings,null,this,script,engine,manager,set,bindings,standard,script,utils,get,bindings,global,bindings
StandardScriptEvaluator -> public void setGlobalBindings(Map<String, Object> globalBindings);1444424101;Set the globally scoped bindings on the underlying script engine manager,_shared by all scripts, as an alternative to script argument bindings._@since 4.2.2_@see #evaluate(ScriptSource, Map)_@see javax.script.ScriptEngineManager#setBindings(Bindings)_@see javax.script.SimpleBindings;public void setGlobalBindings(Map<String, Object> globalBindings) {_		if (globalBindings != null) {_			this.scriptEngineManager.setBindings(StandardScriptUtils.getBindings(globalBindings))__		}_	};set,the,globally,scoped,bindings,on,the,underlying,script,engine,manager,shared,by,all,scripts,as,an,alternative,to,script,argument,bindings,since,4,2,2,see,evaluate,script,source,map,see,javax,script,script,engine,manager,set,bindings,bindings,see,javax,script,simple,bindings;public,void,set,global,bindings,map,string,object,global,bindings,if,global,bindings,null,this,script,engine,manager,set,bindings,standard,script,utils,get,bindings,global,bindings
StandardScriptEvaluator -> public void setGlobalBindings(Map<String, Object> globalBindings);1496242568;Set the globally scoped bindings on the underlying script engine manager,_shared by all scripts, as an alternative to script argument bindings._@since 4.2.2_@see #evaluate(ScriptSource, Map)_@see javax.script.ScriptEngineManager#setBindings(Bindings)_@see javax.script.SimpleBindings;public void setGlobalBindings(Map<String, Object> globalBindings) {_		if (globalBindings != null) {_			this.scriptEngineManager.setBindings(StandardScriptUtils.getBindings(globalBindings))__		}_	};set,the,globally,scoped,bindings,on,the,underlying,script,engine,manager,shared,by,all,scripts,as,an,alternative,to,script,argument,bindings,since,4,2,2,see,evaluate,script,source,map,see,javax,script,script,engine,manager,set,bindings,bindings,see,javax,script,simple,bindings;public,void,set,global,bindings,map,string,object,global,bindings,if,global,bindings,null,this,script,engine,manager,set,bindings,standard,script,utils,get,bindings,global,bindings
StandardScriptEvaluator -> public void setGlobalBindings(Map<String, Object> globalBindings);1498780456;Set the globally scoped bindings on the underlying script engine manager,_shared by all scripts, as an alternative to script argument bindings._@since 4.2.2_@see #evaluate(ScriptSource, Map)_@see javax.script.ScriptEngineManager#setBindings(Bindings)_@see javax.script.SimpleBindings;public void setGlobalBindings(Map<String, Object> globalBindings) {_		Bindings bindings = StandardScriptUtils.getBindings(globalBindings)__		this.globalBindings = bindings__		ScriptEngineManager scriptEngineManager = this.scriptEngineManager__		if (scriptEngineManager != null) {_			scriptEngineManager.setBindings(bindings)__		}_	};set,the,globally,scoped,bindings,on,the,underlying,script,engine,manager,shared,by,all,scripts,as,an,alternative,to,script,argument,bindings,since,4,2,2,see,evaluate,script,source,map,see,javax,script,script,engine,manager,set,bindings,bindings,see,javax,script,simple,bindings;public,void,set,global,bindings,map,string,object,global,bindings,bindings,bindings,standard,script,utils,get,bindings,global,bindings,this,global,bindings,bindings,script,engine,manager,script,engine,manager,this,script,engine,manager,if,script,engine,manager,null,script,engine,manager,set,bindings,bindings
StandardScriptEvaluator -> public void setGlobalBindings(Map<String, Object> globalBindings);1502974979;Set the globally scoped bindings on the underlying script engine manager,_shared by all scripts, as an alternative to script argument bindings._@since 4.2.2_@see #evaluate(ScriptSource, Map)_@see javax.script.ScriptEngineManager#setBindings(Bindings)_@see javax.script.SimpleBindings;public void setGlobalBindings(Map<String, Object> globalBindings) {_		Bindings bindings = StandardScriptUtils.getBindings(globalBindings)__		this.globalBindings = bindings__		ScriptEngineManager scriptEngineManager = this.scriptEngineManager__		if (scriptEngineManager != null) {_			scriptEngineManager.setBindings(bindings)__		}_	};set,the,globally,scoped,bindings,on,the,underlying,script,engine,manager,shared,by,all,scripts,as,an,alternative,to,script,argument,bindings,since,4,2,2,see,evaluate,script,source,map,see,javax,script,script,engine,manager,set,bindings,bindings,see,javax,script,simple,bindings;public,void,set,global,bindings,map,string,object,global,bindings,bindings,bindings,standard,script,utils,get,bindings,global,bindings,this,global,bindings,bindings,script,engine,manager,script,engine,manager,this,script,engine,manager,if,script,engine,manager,null,script,engine,manager,set,bindings,bindings
StandardScriptEvaluator -> public void setLanguage(String language);1382746895;Set the name of language meant for evaluation the scripts (e.g. "Groovy").;public void setLanguage(String language) {_		this.language = language__	};set,the,name,of,language,meant,for,evaluation,the,scripts,e,g,groovy;public,void,set,language,string,language,this,language,language
StandardScriptEvaluator -> public void setLanguage(String language);1385507478;Set the name of language meant for evaluation the scripts (e.g. "Groovy").;public void setLanguage(String language) {_		this.language = language__	};set,the,name,of,language,meant,for,evaluation,the,scripts,e,g,groovy;public,void,set,language,string,language,this,language,language
StandardScriptEvaluator -> public void setLanguage(String language);1443040655;Set the name of the language meant for evaluating the scripts (e.g. "Groovy")._<p>This is effectively an alias for {@link #setEngineName "engineName"},_potentially (but not yet) providing common abbreviations for certain languages_beyond what the JSR-223 script engine factory exposes._@see #setEngineName;public void setLanguage(String language) {_		this.engineName = language__	};set,the,name,of,the,language,meant,for,evaluating,the,scripts,e,g,groovy,p,this,is,effectively,an,alias,for,link,set,engine,name,engine,name,potentially,but,not,yet,providing,common,abbreviations,for,certain,languages,beyond,what,the,jsr,223,script,engine,factory,exposes,see,set,engine,name;public,void,set,language,string,language,this,engine,name,language
StandardScriptEvaluator -> public void setLanguage(String language);1444424101;Set the name of the language meant for evaluating the scripts (e.g. "Groovy")._<p>This is effectively an alias for {@link #setEngineName "engineName"},_potentially (but not yet) providing common abbreviations for certain languages_beyond what the JSR-223 script engine factory exposes._@see #setEngineName;public void setLanguage(String language) {_		this.engineName = language__	};set,the,name,of,the,language,meant,for,evaluating,the,scripts,e,g,groovy,p,this,is,effectively,an,alias,for,link,set,engine,name,engine,name,potentially,but,not,yet,providing,common,abbreviations,for,certain,languages,beyond,what,the,jsr,223,script,engine,factory,exposes,see,set,engine,name;public,void,set,language,string,language,this,engine,name,language
StandardScriptEvaluator -> public void setLanguage(String language);1496242568;Set the name of the language meant for evaluating the scripts (e.g. "Groovy")._<p>This is effectively an alias for {@link #setEngineName "engineName"},_potentially (but not yet) providing common abbreviations for certain languages_beyond what the JSR-223 script engine factory exposes._@see #setEngineName;public void setLanguage(String language) {_		this.engineName = language__	};set,the,name,of,the,language,meant,for,evaluating,the,scripts,e,g,groovy,p,this,is,effectively,an,alias,for,link,set,engine,name,engine,name,potentially,but,not,yet,providing,common,abbreviations,for,certain,languages,beyond,what,the,jsr,223,script,engine,factory,exposes,see,set,engine,name;public,void,set,language,string,language,this,engine,name,language
StandardScriptEvaluator -> public void setLanguage(String language);1496837955;Set the name of the language meant for evaluating the scripts (e.g. "Groovy")._<p>This is effectively an alias for {@link #setEngineName "engineName"},_potentially (but not yet) providing common abbreviations for certain languages_beyond what the JSR-223 script engine factory exposes._@see #setEngineName;public void setLanguage(String language) {_		this.engineName = language__	};set,the,name,of,the,language,meant,for,evaluating,the,scripts,e,g,groovy,p,this,is,effectively,an,alias,for,link,set,engine,name,engine,name,potentially,but,not,yet,providing,common,abbreviations,for,certain,languages,beyond,what,the,jsr,223,script,engine,factory,exposes,see,set,engine,name;public,void,set,language,string,language,this,engine,name,language
StandardScriptEvaluator -> public void setLanguage(String language);1498780456;Set the name of the language meant for evaluating the scripts (e.g. "Groovy")._<p>This is effectively an alias for {@link #setEngineName "engineName"},_potentially (but not yet) providing common abbreviations for certain languages_beyond what the JSR-223 script engine factory exposes._@see #setEngineName;public void setLanguage(String language) {_		this.engineName = language__	};set,the,name,of,the,language,meant,for,evaluating,the,scripts,e,g,groovy,p,this,is,effectively,an,alias,for,link,set,engine,name,engine,name,potentially,but,not,yet,providing,common,abbreviations,for,certain,languages,beyond,what,the,jsr,223,script,engine,factory,exposes,see,set,engine,name;public,void,set,language,string,language,this,engine,name,language
StandardScriptEvaluator -> public void setLanguage(String language);1502974979;Set the name of the language meant for evaluating the scripts (e.g. "Groovy")._<p>This is effectively an alias for {@link #setEngineName "engineName"},_potentially (but not yet) providing common abbreviations for certain languages_beyond what the JSR-223 script engine factory exposes._@see #setEngineName;public void setLanguage(String language) {_		this.engineName = language__	};set,the,name,of,the,language,meant,for,evaluating,the,scripts,e,g,groovy,p,this,is,effectively,an,alias,for,link,set,engine,name,engine,name,potentially,but,not,yet,providing,common,abbreviations,for,certain,languages,beyond,what,the,jsr,223,script,engine,factory,exposes,see,set,engine,name;public,void,set,language,string,language,this,engine,name,language
StandardScriptEvaluator -> public void setEngineName(String engineName);1443040655;Set the name of the script engine for evaluating the scripts (e.g. "Groovy"),_as exposed by the JSR-223 script engine factory._@since 4.2.2_@see #setLanguage;public void setEngineName(String engineName) {_		this.engineName = engineName__	};set,the,name,of,the,script,engine,for,evaluating,the,scripts,e,g,groovy,as,exposed,by,the,jsr,223,script,engine,factory,since,4,2,2,see,set,language;public,void,set,engine,name,string,engine,name,this,engine,name,engine,name
StandardScriptEvaluator -> public void setEngineName(String engineName);1444424101;Set the name of the script engine for evaluating the scripts (e.g. "Groovy"),_as exposed by the JSR-223 script engine factory._@since 4.2.2_@see #setLanguage;public void setEngineName(String engineName) {_		this.engineName = engineName__	};set,the,name,of,the,script,engine,for,evaluating,the,scripts,e,g,groovy,as,exposed,by,the,jsr,223,script,engine,factory,since,4,2,2,see,set,language;public,void,set,engine,name,string,engine,name,this,engine,name,engine,name
StandardScriptEvaluator -> public void setEngineName(String engineName);1496242568;Set the name of the script engine for evaluating the scripts (e.g. "Groovy"),_as exposed by the JSR-223 script engine factory._@since 4.2.2_@see #setLanguage;public void setEngineName(String engineName) {_		this.engineName = engineName__	};set,the,name,of,the,script,engine,for,evaluating,the,scripts,e,g,groovy,as,exposed,by,the,jsr,223,script,engine,factory,since,4,2,2,see,set,language;public,void,set,engine,name,string,engine,name,this,engine,name,engine,name
StandardScriptEvaluator -> public void setEngineName(String engineName);1496837955;Set the name of the script engine for evaluating the scripts (e.g. "Groovy"),_as exposed by the JSR-223 script engine factory._@since 4.2.2_@see #setLanguage;public void setEngineName(String engineName) {_		this.engineName = engineName__	};set,the,name,of,the,script,engine,for,evaluating,the,scripts,e,g,groovy,as,exposed,by,the,jsr,223,script,engine,factory,since,4,2,2,see,set,language;public,void,set,engine,name,string,engine,name,this,engine,name,engine,name
StandardScriptEvaluator -> public void setEngineName(String engineName);1498780456;Set the name of the script engine for evaluating the scripts (e.g. "Groovy"),_as exposed by the JSR-223 script engine factory._@since 4.2.2_@see #setLanguage;public void setEngineName(String engineName) {_		this.engineName = engineName__	};set,the,name,of,the,script,engine,for,evaluating,the,scripts,e,g,groovy,as,exposed,by,the,jsr,223,script,engine,factory,since,4,2,2,see,set,language;public,void,set,engine,name,string,engine,name,this,engine,name,engine,name
StandardScriptEvaluator -> public void setEngineName(String engineName);1502974979;Set the name of the script engine for evaluating the scripts (e.g. "Groovy"),_as exposed by the JSR-223 script engine factory._@since 4.2.2_@see #setLanguage;public void setEngineName(String engineName) {_		this.engineName = engineName__	};set,the,name,of,the,script,engine,for,evaluating,the,scripts,e,g,groovy,as,exposed,by,the,jsr,223,script,engine,factory,since,4,2,2,see,set,language;public,void,set,engine,name,string,engine,name,this,engine,name,engine,name
StandardScriptEvaluator -> public StandardScriptEvaluator(ScriptEngineManager scriptEngineManager);1443040655;Construct a new {@code StandardScriptEvaluator} for the given JSR-223_{@link ScriptEngineManager} to obtain script engines from._@param scriptEngineManager the ScriptEngineManager (or subclass thereof) to use_@since 4.2.2;public StandardScriptEvaluator(ScriptEngineManager scriptEngineManager) {_		this.scriptEngineManager = scriptEngineManager__	};construct,a,new,code,standard,script,evaluator,for,the,given,jsr,223,link,script,engine,manager,to,obtain,script,engines,from,param,script,engine,manager,the,script,engine,manager,or,subclass,thereof,to,use,since,4,2,2;public,standard,script,evaluator,script,engine,manager,script,engine,manager,this,script,engine,manager,script,engine,manager
StandardScriptEvaluator -> public StandardScriptEvaluator(ScriptEngineManager scriptEngineManager);1444424101;Construct a new {@code StandardScriptEvaluator} for the given JSR-223_{@link ScriptEngineManager} to obtain script engines from._@param scriptEngineManager the ScriptEngineManager (or subclass thereof) to use_@since 4.2.2;public StandardScriptEvaluator(ScriptEngineManager scriptEngineManager) {_		this.scriptEngineManager = scriptEngineManager__	};construct,a,new,code,standard,script,evaluator,for,the,given,jsr,223,link,script,engine,manager,to,obtain,script,engines,from,param,script,engine,manager,the,script,engine,manager,or,subclass,thereof,to,use,since,4,2,2;public,standard,script,evaluator,script,engine,manager,script,engine,manager,this,script,engine,manager,script,engine,manager
StandardScriptEvaluator -> public StandardScriptEvaluator(ScriptEngineManager scriptEngineManager);1496242568;Construct a new {@code StandardScriptEvaluator} for the given JSR-223_{@link ScriptEngineManager} to obtain script engines from._@param scriptEngineManager the ScriptEngineManager (or subclass thereof) to use_@since 4.2.2;public StandardScriptEvaluator(ScriptEngineManager scriptEngineManager) {_		this.scriptEngineManager = scriptEngineManager__	};construct,a,new,code,standard,script,evaluator,for,the,given,jsr,223,link,script,engine,manager,to,obtain,script,engines,from,param,script,engine,manager,the,script,engine,manager,or,subclass,thereof,to,use,since,4,2,2;public,standard,script,evaluator,script,engine,manager,script,engine,manager,this,script,engine,manager,script,engine,manager
StandardScriptEvaluator -> public StandardScriptEvaluator(ScriptEngineManager scriptEngineManager);1496837955;Construct a new {@code StandardScriptEvaluator} for the given JSR-223_{@link ScriptEngineManager} to obtain script engines from._@param scriptEngineManager the ScriptEngineManager (or subclass thereof) to use_@since 4.2.2;public StandardScriptEvaluator(ScriptEngineManager scriptEngineManager) {_		this.scriptEngineManager = scriptEngineManager__	};construct,a,new,code,standard,script,evaluator,for,the,given,jsr,223,link,script,engine,manager,to,obtain,script,engines,from,param,script,engine,manager,the,script,engine,manager,or,subclass,thereof,to,use,since,4,2,2;public,standard,script,evaluator,script,engine,manager,script,engine,manager,this,script,engine,manager,script,engine,manager
StandardScriptEvaluator -> public StandardScriptEvaluator(ScriptEngineManager scriptEngineManager);1498780456;Construct a new {@code StandardScriptEvaluator} for the given JSR-223_{@link ScriptEngineManager} to obtain script engines from._@param scriptEngineManager the ScriptEngineManager (or subclass thereof) to use_@since 4.2.2;public StandardScriptEvaluator(ScriptEngineManager scriptEngineManager) {_		this.scriptEngineManager = scriptEngineManager__	};construct,a,new,code,standard,script,evaluator,for,the,given,jsr,223,link,script,engine,manager,to,obtain,script,engines,from,param,script,engine,manager,the,script,engine,manager,or,subclass,thereof,to,use,since,4,2,2;public,standard,script,evaluator,script,engine,manager,script,engine,manager,this,script,engine,manager,script,engine,manager
StandardScriptEvaluator -> public StandardScriptEvaluator(ScriptEngineManager scriptEngineManager);1502974979;Construct a new {@code StandardScriptEvaluator} for the given JSR-223_{@link ScriptEngineManager} to obtain script engines from._@param scriptEngineManager the ScriptEngineManager (or subclass thereof) to use_@since 4.2.2;public StandardScriptEvaluator(ScriptEngineManager scriptEngineManager) {_		this.scriptEngineManager = scriptEngineManager__	};construct,a,new,code,standard,script,evaluator,for,the,given,jsr,223,link,script,engine,manager,to,obtain,script,engines,from,param,script,engine,manager,the,script,engine,manager,or,subclass,thereof,to,use,since,4,2,2;public,standard,script,evaluator,script,engine,manager,script,engine,manager,this,script,engine,manager,script,engine,manager
StandardScriptEvaluator -> public StandardScriptEvaluator(ClassLoader classLoader);1382746895;Construct a new StandardScriptEvaluator._@param classLoader the class loader to use for script engine detection;public StandardScriptEvaluator(ClassLoader classLoader) {_		this.scriptEngineManager = new ScriptEngineManager(classLoader)__	};construct,a,new,standard,script,evaluator,param,class,loader,the,class,loader,to,use,for,script,engine,detection;public,standard,script,evaluator,class,loader,class,loader,this,script,engine,manager,new,script,engine,manager,class,loader
StandardScriptEvaluator -> public StandardScriptEvaluator(ClassLoader classLoader);1385507478;Construct a new StandardScriptEvaluator._@param classLoader the class loader to use for script engine detection;public StandardScriptEvaluator(ClassLoader classLoader) {_		this.scriptEngineManager = new ScriptEngineManager(classLoader)__	};construct,a,new,standard,script,evaluator,param,class,loader,the,class,loader,to,use,for,script,engine,detection;public,standard,script,evaluator,class,loader,class,loader,this,script,engine,manager,new,script,engine,manager,class,loader
StandardScriptEvaluator -> public StandardScriptEvaluator(ClassLoader classLoader);1443040655;Construct a new {@code StandardScriptEvaluator} for the given class loader._@param classLoader the class loader to use for script engine detection;public StandardScriptEvaluator(ClassLoader classLoader) {_		this.scriptEngineManager = new ScriptEngineManager(classLoader)__	};construct,a,new,code,standard,script,evaluator,for,the,given,class,loader,param,class,loader,the,class,loader,to,use,for,script,engine,detection;public,standard,script,evaluator,class,loader,class,loader,this,script,engine,manager,new,script,engine,manager,class,loader
StandardScriptEvaluator -> public StandardScriptEvaluator(ClassLoader classLoader);1444424101;Construct a new {@code StandardScriptEvaluator} for the given class loader._@param classLoader the class loader to use for script engine detection;public StandardScriptEvaluator(ClassLoader classLoader) {_		this.scriptEngineManager = new ScriptEngineManager(classLoader)__	};construct,a,new,code,standard,script,evaluator,for,the,given,class,loader,param,class,loader,the,class,loader,to,use,for,script,engine,detection;public,standard,script,evaluator,class,loader,class,loader,this,script,engine,manager,new,script,engine,manager,class,loader
StandardScriptEvaluator -> public StandardScriptEvaluator(ClassLoader classLoader);1496242568;Construct a new {@code StandardScriptEvaluator} for the given class loader._@param classLoader the class loader to use for script engine detection;public StandardScriptEvaluator(ClassLoader classLoader) {_		this.scriptEngineManager = new ScriptEngineManager(classLoader)__	};construct,a,new,code,standard,script,evaluator,for,the,given,class,loader,param,class,loader,the,class,loader,to,use,for,script,engine,detection;public,standard,script,evaluator,class,loader,class,loader,this,script,engine,manager,new,script,engine,manager,class,loader
StandardScriptEvaluator -> public StandardScriptEvaluator(ClassLoader classLoader);1496837955;Construct a new {@code StandardScriptEvaluator} for the given class loader._@param classLoader the class loader to use for script engine detection;public StandardScriptEvaluator(ClassLoader classLoader) {_		this.scriptEngineManager = new ScriptEngineManager(classLoader)__	};construct,a,new,code,standard,script,evaluator,for,the,given,class,loader,param,class,loader,the,class,loader,to,use,for,script,engine,detection;public,standard,script,evaluator,class,loader,class,loader,this,script,engine,manager,new,script,engine,manager,class,loader
StandardScriptEvaluator -> public StandardScriptEvaluator(ClassLoader classLoader);1498780456;Construct a new {@code StandardScriptEvaluator} for the given class loader._@param classLoader the class loader to use for script engine detection;public StandardScriptEvaluator(ClassLoader classLoader) {_		this.scriptEngineManager = new ScriptEngineManager(classLoader)__	};construct,a,new,code,standard,script,evaluator,for,the,given,class,loader,param,class,loader,the,class,loader,to,use,for,script,engine,detection;public,standard,script,evaluator,class,loader,class,loader,this,script,engine,manager,new,script,engine,manager,class,loader
StandardScriptEvaluator -> public StandardScriptEvaluator(ClassLoader classLoader);1502974979;Construct a new {@code StandardScriptEvaluator} for the given class loader._@param classLoader the class loader to use for script engine detection;public StandardScriptEvaluator(ClassLoader classLoader) {_		this.scriptEngineManager = new ScriptEngineManager(classLoader)__	};construct,a,new,code,standard,script,evaluator,for,the,given,class,loader,param,class,loader,the,class,loader,to,use,for,script,engine,detection;public,standard,script,evaluator,class,loader,class,loader,this,script,engine,manager,new,script,engine,manager,class,loader
StandardScriptEvaluator -> protected ScriptEngine getScriptEngine(ScriptSource script);1382746895;Obtain the JSR-223 ScriptEngine to use for the given script._@param script the script to evaluate_@return the ScriptEngine (never {@code null});protected ScriptEngine getScriptEngine(ScriptSource script) {_		if (this.scriptEngineManager == null) {_			this.scriptEngineManager = new ScriptEngineManager()__		}_		if (StringUtils.hasText(this.language)) {_			ScriptEngine engine = this.scriptEngineManager.getEngineByName(this.language)__			if (engine == null) {_				throw new IllegalStateException("No matching engine found for language '" + this.language + "'")__			}_			return engine__		}_		else if (script instanceof ResourceScriptSource) {_			Resource resource = ((ResourceScriptSource) script).getResource()__			String extension = StringUtils.getFilenameExtension(resource.getFilename())__			if (extension == null) {_				throw new IllegalStateException(_						"No script language defined, and no file extension defined for resource: " + resource)__			}_			ScriptEngine engine = this.scriptEngineManager.getEngineByExtension(extension)__			if (engine == null) {_				throw new IllegalStateException("No matching engine found for file extension '" + extension + "'")__			}_			return engine__		}_		else {_			throw new IllegalStateException(_					"No script language defined, and no resource associated with script: " + script)__		}_	};obtain,the,jsr,223,script,engine,to,use,for,the,given,script,param,script,the,script,to,evaluate,return,the,script,engine,never,code,null;protected,script,engine,get,script,engine,script,source,script,if,this,script,engine,manager,null,this,script,engine,manager,new,script,engine,manager,if,string,utils,has,text,this,language,script,engine,engine,this,script,engine,manager,get,engine,by,name,this,language,if,engine,null,throw,new,illegal,state,exception,no,matching,engine,found,for,language,this,language,return,engine,else,if,script,instanceof,resource,script,source,resource,resource,resource,script,source,script,get,resource,string,extension,string,utils,get,filename,extension,resource,get,filename,if,extension,null,throw,new,illegal,state,exception,no,script,language,defined,and,no,file,extension,defined,for,resource,resource,script,engine,engine,this,script,engine,manager,get,engine,by,extension,extension,if,engine,null,throw,new,illegal,state,exception,no,matching,engine,found,for,file,extension,extension,return,engine,else,throw,new,illegal,state,exception,no,script,language,defined,and,no,resource,associated,with,script,script
StandardScriptEvaluator -> protected ScriptEngine getScriptEngine(ScriptSource script);1385507478;Obtain the JSR-223 ScriptEngine to use for the given script._@param script the script to evaluate_@return the ScriptEngine (never {@code null});protected ScriptEngine getScriptEngine(ScriptSource script) {_		if (this.scriptEngineManager == null) {_			this.scriptEngineManager = new ScriptEngineManager()__		}_		if (StringUtils.hasText(this.language)) {_			ScriptEngine engine = this.scriptEngineManager.getEngineByName(this.language)__			if (engine == null) {_				throw new IllegalStateException("No matching engine found for language '" + this.language + "'")__			}_			return engine__		}_		else if (script instanceof ResourceScriptSource) {_			Resource resource = ((ResourceScriptSource) script).getResource()__			String extension = StringUtils.getFilenameExtension(resource.getFilename())__			if (extension == null) {_				throw new IllegalStateException(_						"No script language defined, and no file extension defined for resource: " + resource)__			}_			ScriptEngine engine = this.scriptEngineManager.getEngineByExtension(extension)__			if (engine == null) {_				throw new IllegalStateException("No matching engine found for file extension '" + extension + "'")__			}_			return engine__		}_		else {_			throw new IllegalStateException(_					"No script language defined, and no resource associated with script: " + script)__		}_	};obtain,the,jsr,223,script,engine,to,use,for,the,given,script,param,script,the,script,to,evaluate,return,the,script,engine,never,code,null;protected,script,engine,get,script,engine,script,source,script,if,this,script,engine,manager,null,this,script,engine,manager,new,script,engine,manager,if,string,utils,has,text,this,language,script,engine,engine,this,script,engine,manager,get,engine,by,name,this,language,if,engine,null,throw,new,illegal,state,exception,no,matching,engine,found,for,language,this,language,return,engine,else,if,script,instanceof,resource,script,source,resource,resource,resource,script,source,script,get,resource,string,extension,string,utils,get,filename,extension,resource,get,filename,if,extension,null,throw,new,illegal,state,exception,no,script,language,defined,and,no,file,extension,defined,for,resource,resource,script,engine,engine,this,script,engine,manager,get,engine,by,extension,extension,if,engine,null,throw,new,illegal,state,exception,no,matching,engine,found,for,file,extension,extension,return,engine,else,throw,new,illegal,state,exception,no,script,language,defined,and,no,resource,associated,with,script,script
StandardScriptEvaluator -> protected ScriptEngine getScriptEngine(ScriptSource script);1443040655;Obtain the JSR-223 ScriptEngine to use for the given script._@param script the script to evaluate_@return the ScriptEngine (never {@code null});protected ScriptEngine getScriptEngine(ScriptSource script) {_		if (this.scriptEngineManager == null) {_			this.scriptEngineManager = new ScriptEngineManager()__		}__		if (StringUtils.hasText(this.engineName)) {_			return StandardScriptUtils.retrieveEngineByName(this.scriptEngineManager, this.engineName)__		}_		else if (script instanceof ResourceScriptSource) {_			Resource resource = ((ResourceScriptSource) script).getResource()__			String extension = StringUtils.getFilenameExtension(resource.getFilename())__			if (extension == null) {_				throw new IllegalStateException(_						"No script language defined, and no file extension defined for resource: " + resource)__			}_			ScriptEngine engine = this.scriptEngineManager.getEngineByExtension(extension)__			if (engine == null) {_				throw new IllegalStateException("No matching engine found for file extension '" + extension + "'")__			}_			return engine__		}_		else {_			throw new IllegalStateException(_					"No script language defined, and no resource associated with script: " + script)__		}_	};obtain,the,jsr,223,script,engine,to,use,for,the,given,script,param,script,the,script,to,evaluate,return,the,script,engine,never,code,null;protected,script,engine,get,script,engine,script,source,script,if,this,script,engine,manager,null,this,script,engine,manager,new,script,engine,manager,if,string,utils,has,text,this,engine,name,return,standard,script,utils,retrieve,engine,by,name,this,script,engine,manager,this,engine,name,else,if,script,instanceof,resource,script,source,resource,resource,resource,script,source,script,get,resource,string,extension,string,utils,get,filename,extension,resource,get,filename,if,extension,null,throw,new,illegal,state,exception,no,script,language,defined,and,no,file,extension,defined,for,resource,resource,script,engine,engine,this,script,engine,manager,get,engine,by,extension,extension,if,engine,null,throw,new,illegal,state,exception,no,matching,engine,found,for,file,extension,extension,return,engine,else,throw,new,illegal,state,exception,no,script,language,defined,and,no,resource,associated,with,script,script
StandardScriptEvaluator -> protected ScriptEngine getScriptEngine(ScriptSource script);1444424101;Obtain the JSR-223 ScriptEngine to use for the given script._@param script the script to evaluate_@return the ScriptEngine (never {@code null});protected ScriptEngine getScriptEngine(ScriptSource script) {_		if (this.scriptEngineManager == null) {_			this.scriptEngineManager = new ScriptEngineManager()__		}__		if (StringUtils.hasText(this.engineName)) {_			return StandardScriptUtils.retrieveEngineByName(this.scriptEngineManager, this.engineName)__		}_		else if (script instanceof ResourceScriptSource) {_			Resource resource = ((ResourceScriptSource) script).getResource()__			String extension = StringUtils.getFilenameExtension(resource.getFilename())__			if (extension == null) {_				throw new IllegalStateException(_						"No script language defined, and no file extension defined for resource: " + resource)__			}_			ScriptEngine engine = this.scriptEngineManager.getEngineByExtension(extension)__			if (engine == null) {_				throw new IllegalStateException("No matching engine found for file extension '" + extension + "'")__			}_			return engine__		}_		else {_			throw new IllegalStateException(_					"No script language defined, and no resource associated with script: " + script)__		}_	};obtain,the,jsr,223,script,engine,to,use,for,the,given,script,param,script,the,script,to,evaluate,return,the,script,engine,never,code,null;protected,script,engine,get,script,engine,script,source,script,if,this,script,engine,manager,null,this,script,engine,manager,new,script,engine,manager,if,string,utils,has,text,this,engine,name,return,standard,script,utils,retrieve,engine,by,name,this,script,engine,manager,this,engine,name,else,if,script,instanceof,resource,script,source,resource,resource,resource,script,source,script,get,resource,string,extension,string,utils,get,filename,extension,resource,get,filename,if,extension,null,throw,new,illegal,state,exception,no,script,language,defined,and,no,file,extension,defined,for,resource,resource,script,engine,engine,this,script,engine,manager,get,engine,by,extension,extension,if,engine,null,throw,new,illegal,state,exception,no,matching,engine,found,for,file,extension,extension,return,engine,else,throw,new,illegal,state,exception,no,script,language,defined,and,no,resource,associated,with,script,script
StandardScriptEvaluator -> protected ScriptEngine getScriptEngine(ScriptSource script);1496242568;Obtain the JSR-223 ScriptEngine to use for the given script._@param script the script to evaluate_@return the ScriptEngine (never {@code null});protected ScriptEngine getScriptEngine(ScriptSource script) {_		if (this.scriptEngineManager == null) {_			this.scriptEngineManager = new ScriptEngineManager()__		}__		if (StringUtils.hasText(this.engineName)) {_			return StandardScriptUtils.retrieveEngineByName(this.scriptEngineManager, this.engineName)__		}_		else if (script instanceof ResourceScriptSource) {_			Resource resource = ((ResourceScriptSource) script).getResource()__			String extension = StringUtils.getFilenameExtension(resource.getFilename())__			if (extension == null) {_				throw new IllegalStateException(_						"No script language defined, and no file extension defined for resource: " + resource)__			}_			ScriptEngine engine = this.scriptEngineManager.getEngineByExtension(extension)__			if (engine == null) {_				throw new IllegalStateException("No matching engine found for file extension '" + extension + "'")__			}_			return engine__		}_		else {_			throw new IllegalStateException(_					"No script language defined, and no resource associated with script: " + script)__		}_	};obtain,the,jsr,223,script,engine,to,use,for,the,given,script,param,script,the,script,to,evaluate,return,the,script,engine,never,code,null;protected,script,engine,get,script,engine,script,source,script,if,this,script,engine,manager,null,this,script,engine,manager,new,script,engine,manager,if,string,utils,has,text,this,engine,name,return,standard,script,utils,retrieve,engine,by,name,this,script,engine,manager,this,engine,name,else,if,script,instanceof,resource,script,source,resource,resource,resource,script,source,script,get,resource,string,extension,string,utils,get,filename,extension,resource,get,filename,if,extension,null,throw,new,illegal,state,exception,no,script,language,defined,and,no,file,extension,defined,for,resource,resource,script,engine,engine,this,script,engine,manager,get,engine,by,extension,extension,if,engine,null,throw,new,illegal,state,exception,no,matching,engine,found,for,file,extension,extension,return,engine,else,throw,new,illegal,state,exception,no,script,language,defined,and,no,resource,associated,with,script,script
StandardScriptEvaluator -> protected ScriptEngine getScriptEngine(ScriptSource script);1496837955;Obtain the JSR-223 ScriptEngine to use for the given script._@param script the script to evaluate_@return the ScriptEngine (never {@code null});protected ScriptEngine getScriptEngine(ScriptSource script) {_		if (this.scriptEngineManager == null) {_			this.scriptEngineManager = new ScriptEngineManager()__		}__		if (StringUtils.hasText(this.engineName)) {_			return StandardScriptUtils.retrieveEngineByName(this.scriptEngineManager, this.engineName)__		}_		else if (script instanceof ResourceScriptSource) {_			Resource resource = ((ResourceScriptSource) script).getResource()__			String extension = StringUtils.getFilenameExtension(resource.getFilename())__			if (extension == null) {_				throw new IllegalStateException(_						"No script language defined, and no file extension defined for resource: " + resource)__			}_			ScriptEngine engine = this.scriptEngineManager.getEngineByExtension(extension)__			if (engine == null) {_				throw new IllegalStateException("No matching engine found for file extension '" + extension + "'")__			}_			return engine__		}_		else {_			throw new IllegalStateException(_					"No script language defined, and no resource associated with script: " + script)__		}_	};obtain,the,jsr,223,script,engine,to,use,for,the,given,script,param,script,the,script,to,evaluate,return,the,script,engine,never,code,null;protected,script,engine,get,script,engine,script,source,script,if,this,script,engine,manager,null,this,script,engine,manager,new,script,engine,manager,if,string,utils,has,text,this,engine,name,return,standard,script,utils,retrieve,engine,by,name,this,script,engine,manager,this,engine,name,else,if,script,instanceof,resource,script,source,resource,resource,resource,script,source,script,get,resource,string,extension,string,utils,get,filename,extension,resource,get,filename,if,extension,null,throw,new,illegal,state,exception,no,script,language,defined,and,no,file,extension,defined,for,resource,resource,script,engine,engine,this,script,engine,manager,get,engine,by,extension,extension,if,engine,null,throw,new,illegal,state,exception,no,matching,engine,found,for,file,extension,extension,return,engine,else,throw,new,illegal,state,exception,no,script,language,defined,and,no,resource,associated,with,script,script
StandardScriptEvaluator -> protected ScriptEngine getScriptEngine(ScriptSource script);1498780456;Obtain the JSR-223 ScriptEngine to use for the given script._@param script the script to evaluate_@return the ScriptEngine (never {@code null});protected ScriptEngine getScriptEngine(ScriptSource script) {_		ScriptEngineManager scriptEngineManager = this.scriptEngineManager__		if (scriptEngineManager == null) {_			scriptEngineManager = new ScriptEngineManager()__			this.scriptEngineManager = scriptEngineManager__		}__		if (StringUtils.hasText(this.engineName)) {_			return StandardScriptUtils.retrieveEngineByName(scriptEngineManager, this.engineName)__		}_		else if (script instanceof ResourceScriptSource) {_			Resource resource = ((ResourceScriptSource) script).getResource()__			String extension = StringUtils.getFilenameExtension(resource.getFilename())__			if (extension == null) {_				throw new IllegalStateException(_						"No script language defined, and no file extension defined for resource: " + resource)__			}_			ScriptEngine engine = scriptEngineManager.getEngineByExtension(extension)__			if (engine == null) {_				throw new IllegalStateException("No matching engine found for file extension '" + extension + "'")__			}_			return engine__		}_		else {_			throw new IllegalStateException(_					"No script language defined, and no resource associated with script: " + script)__		}_	};obtain,the,jsr,223,script,engine,to,use,for,the,given,script,param,script,the,script,to,evaluate,return,the,script,engine,never,code,null;protected,script,engine,get,script,engine,script,source,script,script,engine,manager,script,engine,manager,this,script,engine,manager,if,script,engine,manager,null,script,engine,manager,new,script,engine,manager,this,script,engine,manager,script,engine,manager,if,string,utils,has,text,this,engine,name,return,standard,script,utils,retrieve,engine,by,name,script,engine,manager,this,engine,name,else,if,script,instanceof,resource,script,source,resource,resource,resource,script,source,script,get,resource,string,extension,string,utils,get,filename,extension,resource,get,filename,if,extension,null,throw,new,illegal,state,exception,no,script,language,defined,and,no,file,extension,defined,for,resource,resource,script,engine,engine,script,engine,manager,get,engine,by,extension,extension,if,engine,null,throw,new,illegal,state,exception,no,matching,engine,found,for,file,extension,extension,return,engine,else,throw,new,illegal,state,exception,no,script,language,defined,and,no,resource,associated,with,script,script
StandardScriptEvaluator -> protected ScriptEngine getScriptEngine(ScriptSource script);1502974979;Obtain the JSR-223 ScriptEngine to use for the given script._@param script the script to evaluate_@return the ScriptEngine (never {@code null});protected ScriptEngine getScriptEngine(ScriptSource script) {_		ScriptEngineManager scriptEngineManager = this.scriptEngineManager__		if (scriptEngineManager == null) {_			scriptEngineManager = new ScriptEngineManager()__			this.scriptEngineManager = scriptEngineManager__		}__		if (StringUtils.hasText(this.engineName)) {_			return StandardScriptUtils.retrieveEngineByName(scriptEngineManager, this.engineName)__		}_		else if (script instanceof ResourceScriptSource) {_			Resource resource = ((ResourceScriptSource) script).getResource()__			String extension = StringUtils.getFilenameExtension(resource.getFilename())__			if (extension == null) {_				throw new IllegalStateException(_						"No script language defined, and no file extension defined for resource: " + resource)__			}_			ScriptEngine engine = scriptEngineManager.getEngineByExtension(extension)__			if (engine == null) {_				throw new IllegalStateException("No matching engine found for file extension '" + extension + "'")__			}_			return engine__		}_		else {_			throw new IllegalStateException(_					"No script language defined, and no resource associated with script: " + script)__		}_	};obtain,the,jsr,223,script,engine,to,use,for,the,given,script,param,script,the,script,to,evaluate,return,the,script,engine,never,code,null;protected,script,engine,get,script,engine,script,source,script,script,engine,manager,script,engine,manager,this,script,engine,manager,if,script,engine,manager,null,script,engine,manager,new,script,engine,manager,this,script,engine,manager,script,engine,manager,if,string,utils,has,text,this,engine,name,return,standard,script,utils,retrieve,engine,by,name,script,engine,manager,this,engine,name,else,if,script,instanceof,resource,script,source,resource,resource,resource,script,source,script,get,resource,string,extension,string,utils,get,filename,extension,resource,get,filename,if,extension,null,throw,new,illegal,state,exception,no,script,language,defined,and,no,file,extension,defined,for,resource,resource,script,engine,engine,script,engine,manager,get,engine,by,extension,extension,if,engine,null,throw,new,illegal,state,exception,no,matching,engine,found,for,file,extension,extension,return,engine,else,throw,new,illegal,state,exception,no,script,language,defined,and,no,resource,associated,with,script,script
