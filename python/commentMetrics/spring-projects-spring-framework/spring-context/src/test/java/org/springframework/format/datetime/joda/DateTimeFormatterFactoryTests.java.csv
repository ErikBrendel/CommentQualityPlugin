commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Test public void createDateTimeFormatter() {     assertThat(factory.createDateTimeFormatter(), is(equalTo(DateTimeFormat.mediumDateTime()))). }
false;public;0;6;;@Test public void createDateTimeFormatterWithPattern() {     factory = new DateTimeFormatterFactory("yyyyMMddHHmmss").     DateTimeFormatter formatter = factory.createDateTimeFormatter().     assertThat(formatter.print(dateTime), is("20091021121000")). }
false;public;0;5;;@Test public void createDateTimeFormatterWithNullFallback() {     DateTimeFormatter formatter = factory.createDateTimeFormatter(null).     assertThat(formatter, is(nullValue())). }
false;public;0;6;;@Test public void createDateTimeFormatterWithFallback() {     DateTimeFormatter fallback = DateTimeFormat.forStyle("LL").     DateTimeFormatter formatter = factory.createDateTimeFormatter(fallback).     assertThat(formatter, is(sameInstance(fallback))). }
false;public;0;13;;@Test public void createDateTimeFormatterInOrderOfPropertyPriority() {     factory.setStyle("SS").     String value = applyLocale(factory.createDateTimeFormatter()).print(dateTime).     assertTrue(value.startsWith("10/21/09")).     assertTrue(value.endsWith("12:10 PM")).     factory.setIso(ISO.DATE).     assertThat(applyLocale(factory.createDateTimeFormatter()).print(dateTime), is("2009-10-21")).     factory.setPattern("yyyyMMddHHmmss").     assertThat(factory.createDateTimeFormatter().print(dateTime), is("20091021121000")). }
false;public;0;9;;@Test public void createDateTimeFormatterWithTimeZone() {     factory.setPattern("yyyyMMddHHmmss Z").     factory.setTimeZone(TEST_TIMEZONE).     DateTimeZone dateTimeZone = DateTimeZone.forTimeZone(TEST_TIMEZONE).     DateTime dateTime = new DateTime(2009, 10, 21, 12, 10, 00, 00, dateTimeZone).     String offset = (TEST_TIMEZONE.equals(NEW_YORK) ? "-0400" : "+0200").     assertThat(factory.createDateTimeFormatter().print(dateTime), is("20091021121000 " + offset)). }
false;private;1;3;;private DateTimeFormatter applyLocale(DateTimeFormatter dateTimeFormatter) {     return dateTimeFormatter.withLocale(Locale.US). }
