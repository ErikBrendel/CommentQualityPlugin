commented;modifiers;parameterAmount;loc;comment;code
true;public;0;7;/**  * Use of @Import to register LowLevelConfig results in ASM-based annotation  * processing.  */ ;/**  * Use of @Import to register LowLevelConfig results in ASM-based annotation  * processing.  */ @Test public void withAsmAnnotationProcessing() {     AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext().     ctx.register(HighLevelConfig.class).     ctx.refresh().     assertThat(ctx.getBean(LowLevelConfig.class).scanned, not(nullValue())). }
true;public;0;7;/**  * Direct registration of LowLevelConfig results in reflection-based annotation  * processing.  */ ;/**  * Direct registration of LowLevelConfig results in reflection-based annotation  * processing.  */ @Test public void withoutAsmAnnotationProcessing() {     AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext().     ctx.register(LowLevelConfig.class).     ctx.refresh().     assertThat(ctx.getBean(LowLevelConfig.class).scanned, not(nullValue())). }
