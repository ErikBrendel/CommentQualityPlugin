commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Test public void testXmlBehavior() throws Exception {     doAssertions(new ClassPathXmlApplicationContext("Spr6602Tests-context.xml", Spr6602Tests.class)). }
false;public;0;4;;@Test public void testConfigurationClassBehavior() throws Exception {     doAssertions(new AnnotationConfigApplicationContext(FooConfig.class)). }
false;private;1;16;;private void doAssertions(ApplicationContext ctx) throws Exception {     Foo foo = ctx.getBean(Foo.class).     Bar bar1 = ctx.getBean(Bar.class).     Bar bar2 = ctx.getBean(Bar.class).     assertThat(bar1, is(bar2)).     assertThat(bar1, is(foo.bar)).     BarFactory barFactory1 = ctx.getBean(BarFactory.class).     BarFactory barFactory2 = ctx.getBean(BarFactory.class).     assertThat(barFactory1, is(barFactory2)).     Bar bar3 = barFactory1.getObject().     Bar bar4 = barFactory1.getObject().     assertThat(bar3, is(not(bar4))). }
false;public;0;4;;@Bean public Foo foo() throws Exception {     return new Foo(barFactory().getObject()). }
false;public;0;4;;@Bean public BarFactory barFactory() {     return new BarFactory(). }
false;public;0;4;;@Override public Bar getObject() throws Exception {     return new Bar(). }
false;public;0;4;;@Override public Class<? extends Bar> getObjectType() {     return Bar.class. }
false;public;0;4;;@Override public boolean isSingleton() {     return true. }
