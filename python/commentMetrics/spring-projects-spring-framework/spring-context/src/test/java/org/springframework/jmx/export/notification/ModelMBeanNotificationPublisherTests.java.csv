commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Test(expected = IllegalArgumentException.class) public void testCtorWithNullMBean() throws Exception {     new ModelMBeanNotificationPublisher(null, createObjectName(), this). }
false;public;0;4;;@Test(expected = IllegalArgumentException.class) public void testCtorWithNullObjectName() throws Exception {     new ModelMBeanNotificationPublisher(new SpringModelMBean(), null, this). }
false;public;0;4;;@Test(expected = IllegalArgumentException.class) public void testCtorWithNullManagedResource() throws Exception {     new ModelMBeanNotificationPublisher(new SpringModelMBean(), createObjectName(), null). }
false;public;0;6;;@Test(expected = IllegalArgumentException.class) public void testSendNullNotification() throws Exception {     NotificationPublisher publisher = new ModelMBeanNotificationPublisher(new SpringModelMBean(), createObjectName(), this).     publisher.sendNotification(null). }
false;public;0;12;;public void testSendVanillaNotification() throws Exception {     StubSpringModelMBean mbean = new StubSpringModelMBean().     Notification notification = new Notification("network.alarm.router", mbean, 1872).     ObjectName objectName = createObjectName().     NotificationPublisher publisher = new ModelMBeanNotificationPublisher(mbean, objectName, mbean).     publisher.sendNotification(notification).     assertNotNull(mbean.getActualNotification()).     assertSame("The exact same Notification is not being passed through from the publisher to the mbean.", notification, mbean.getActualNotification()).     assertSame("The 'source' property of the Notification is not being set to the ObjectName of the associated MBean.", objectName, mbean.getActualNotification().getSource()). }
false;public;0;13;;public void testSendAttributeChangeNotification() throws Exception {     StubSpringModelMBean mbean = new StubSpringModelMBean().     Notification notification = new AttributeChangeNotification(mbean, 1872, System.currentTimeMillis(), "Shall we break for some tea?", "agree", "java.lang.Boolean", Boolean.FALSE, Boolean.TRUE).     ObjectName objectName = createObjectName().     NotificationPublisher publisher = new ModelMBeanNotificationPublisher(mbean, objectName, mbean).     publisher.sendNotification(notification).     assertNotNull(mbean.getActualNotification()).     assertTrue(mbean.getActualNotification() instanceof AttributeChangeNotification).     assertSame("The exact same Notification is not being passed through from the publisher to the mbean.", notification, mbean.getActualNotification()).     assertSame("The 'source' property of the Notification is not being set to the ObjectName of the associated MBean.", objectName, mbean.getActualNotification().getSource()). }
false;public;0;13;;public void testSendAttributeChangeNotificationWhereSourceIsNotTheManagedResource() throws Exception {     StubSpringModelMBean mbean = new StubSpringModelMBean().     Notification notification = new AttributeChangeNotification(this, 1872, System.currentTimeMillis(), "Shall we break for some tea?", "agree", "java.lang.Boolean", Boolean.FALSE, Boolean.TRUE).     ObjectName objectName = createObjectName().     NotificationPublisher publisher = new ModelMBeanNotificationPublisher(mbean, objectName, mbean).     publisher.sendNotification(notification).     assertNotNull(mbean.getActualNotification()).     assertTrue(mbean.getActualNotification() instanceof AttributeChangeNotification).     assertSame("The exact same Notification is not being passed through from the publisher to the mbean.", notification, mbean.getActualNotification()).     assertSame("The 'source' property of the Notification is *wrongly* being set to the ObjectName of the associated MBean.", this, mbean.getActualNotification().getSource()). }
false;private,static;0;3;;private static ObjectName createObjectName() throws MalformedObjectNameException {     return ObjectName.getInstance("foo:type=bar"). }
false;public;0;3;;public Notification getActualNotification() {     return this.actualNotification. }
false;public;1;4;;@Override public void sendNotification(Notification notification) throws RuntimeOperationsException {     this.actualNotification = notification. }
false;public;1;4;;@Override public void sendAttributeChangeNotification(AttributeChangeNotification notification) throws RuntimeOperationsException {     this.actualNotification = notification. }
