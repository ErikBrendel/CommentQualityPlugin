commented;modifiers;parameterAmount;loc;comment;code
false;public;0;44;;@Test public void testSingletonScopedFactoryMethod() {     GenericApplicationContext context = new GenericApplicationContext().     ClassPathBeanDefinitionScanner scanner = new ClassPathBeanDefinitionScanner(context).     context.getBeanFactory().registerScope("request", new SimpleMapScope()).     scanner.scan(BASE_PACKAGE).     context.registerBeanDefinition("clientBean", new RootBeanDefinition(QualifiedClientBean.class)).     context.refresh().     FactoryMethodComponent fmc = context.getBean("factoryMethodComponent", FactoryMethodComponent.class).     assertFalse(fmc.getClass().getName().contains(ClassUtils.CGLIB_CLASS_SEPARATOR)).     // 2     TestBean tb = (TestBean) context.getBean("publicInstance").     assertEquals("publicInstance", tb.getName()).     // 2     TestBean tb2 = (TestBean) context.getBean("publicInstance").     assertEquals("publicInstance", tb2.getName()).     assertSame(tb2, tb).     // 3     tb = (TestBean) context.getBean("protectedInstance").     assertEquals("protectedInstance", tb.getName()).     assertSame(tb, context.getBean("protectedInstance")).     assertEquals("0", tb.getCountry()).     // 3     tb2 = context.getBean("protectedInstance", TestBean.class).     assertEquals("protectedInstance", tb2.getName()).     assertSame(tb2, tb).     // 4     tb = context.getBean("privateInstance", TestBean.class).     assertEquals("privateInstance", tb.getName()).     assertEquals(1, tb.getAge()).     // 4     tb2 = context.getBean("privateInstance", TestBean.class).     assertEquals(2, tb2.getAge()).     assertNotSame(tb2, tb).     // 5     Object bean = context.getBean("requestScopedInstance").     assertTrue(AopUtils.isCglibProxy(bean)).     assertTrue(bean instanceof ScopedObject).     QualifiedClientBean clientBean = context.getBean("clientBean", QualifiedClientBean.class).     assertSame(context.getBean("publicInstance"), clientBean.testBean).     assertSame(context.getBean("dependencyBean"), clientBean.dependencyBean).     assertSame(context, clientBean.applicationContext). }
