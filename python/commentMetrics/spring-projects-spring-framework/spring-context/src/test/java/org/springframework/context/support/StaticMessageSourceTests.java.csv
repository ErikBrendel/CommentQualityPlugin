# id;timestamp;commentText;codeText;commentWords;codeWords
StaticMessageSourceTests -> public void testGetMessageWithNoDefaultPassedInAndFoundInMsgCatalog();1328020251;Example taken from the javadocs for the java.text.MessageFormat class;public void testGetMessageWithNoDefaultPassedInAndFoundInMsgCatalog() {_		Object[] arguments = {_			new Integer(7), new Date(System.currentTimeMillis()),_			"a disturbance in the Force"_		}___		_		assertTrue("msg from staticMsgSource for Locale.US substituting args for placeholders is as expected",_				sac.getMessage("message.format.example1", arguments, Locale.US)_				.indexOf("there was \"a disturbance in the Force\" on planet 7.") != -1)___		_		assertTrue("msg from staticMsgSource for Locale.UK substituting args for placeholders is as expected",_				sac.getMessage("message.format.example1", arguments, Locale.UK)_				.indexOf("there was \"a disturbance in the Force\" on station number 7.") != -1)___		_		assertTrue("msg from staticMsgSource for Locale.US that requires no args is as expected",_				sac.getMessage("message.format.example2", null, Locale.US)_				.equals("This is a test message in the message catalog with no args."))__	};example,taken,from,the,javadocs,for,the,java,text,message,format,class;public,void,test,get,message,with,no,default,passed,in,and,found,in,msg,catalog,object,arguments,new,integer,7,new,date,system,current,time,millis,a,disturbance,in,the,force,assert,true,msg,from,static,msg,source,for,locale,us,substituting,args,for,placeholders,is,as,expected,sac,get,message,message,format,example1,arguments,locale,us,index,of,there,was,a,disturbance,in,the,force,on,planet,7,1,assert,true,msg,from,static,msg,source,for,locale,uk,substituting,args,for,placeholders,is,as,expected,sac,get,message,message,format,example1,arguments,locale,uk,index,of,there,was,a,disturbance,in,the,force,on,station,number,7,1,assert,true,msg,from,static,msg,source,for,locale,us,that,requires,no,args,is,as,expected,sac,get,message,message,format,example2,null,locale,us,equals,this,is,a,test,message,in,the,message,catalog,with,no,args
StaticMessageSourceTests -> public void testGetMessageWithNoDefaultPassedInAndFoundInMsgCatalog();1356735495;Example taken from the javadocs for the java.text.MessageFormat class;public void testGetMessageWithNoDefaultPassedInAndFoundInMsgCatalog() {_		Object[] arguments = {_			new Integer(7), new Date(System.currentTimeMillis()),_			"a disturbance in the Force"_		}___		_		assertTrue("msg from staticMsgSource for Locale.US substituting args for placeholders is as expected",_				sac.getMessage("message.format.example1", arguments, Locale.US)_				.indexOf("there was \"a disturbance in the Force\" on planet 7.") != -1)___		_		assertTrue("msg from staticMsgSource for Locale.UK substituting args for placeholders is as expected",_				sac.getMessage("message.format.example1", arguments, Locale.UK)_				.indexOf("there was \"a disturbance in the Force\" on station number 7.") != -1)___		_		assertTrue("msg from staticMsgSource for Locale.US that requires no args is as expected",_				sac.getMessage("message.format.example2", null, Locale.US)_				.equals("This is a test message in the message catalog with no args."))__	};example,taken,from,the,javadocs,for,the,java,text,message,format,class;public,void,test,get,message,with,no,default,passed,in,and,found,in,msg,catalog,object,arguments,new,integer,7,new,date,system,current,time,millis,a,disturbance,in,the,force,assert,true,msg,from,static,msg,source,for,locale,us,substituting,args,for,placeholders,is,as,expected,sac,get,message,message,format,example1,arguments,locale,us,index,of,there,was,a,disturbance,in,the,force,on,planet,7,1,assert,true,msg,from,static,msg,source,for,locale,uk,substituting,args,for,placeholders,is,as,expected,sac,get,message,message,format,example1,arguments,locale,uk,index,of,there,was,a,disturbance,in,the,force,on,station,number,7,1,assert,true,msg,from,static,msg,source,for,locale,us,that,requires,no,args,is,as,expected,sac,get,message,message,format,example2,null,locale,us,equals,this,is,a,test,message,in,the,message,catalog,with,no,args
StaticMessageSourceTests -> public void testGetMessageWithNoDefaultPassedInAndFoundInMsgCatalog();1357119417;Example taken from the javadocs for the java.text.MessageFormat class;public void testGetMessageWithNoDefaultPassedInAndFoundInMsgCatalog() {_		Object[] arguments = {_			new Integer(7), new Date(System.currentTimeMillis()),_			"a disturbance in the Force"_		}___		_		assertTrue("msg from staticMsgSource for Locale.US substituting args for placeholders is as expected",_				sac.getMessage("message.format.example1", arguments, Locale.US)_				.indexOf("there was \"a disturbance in the Force\" on planet 7.") != -1)___		_		assertTrue("msg from staticMsgSource for Locale.UK substituting args for placeholders is as expected",_				sac.getMessage("message.format.example1", arguments, Locale.UK)_				.indexOf("there was \"a disturbance in the Force\" on station number 7.") != -1)___		_		assertTrue("msg from staticMsgSource for Locale.US that requires no args is as expected",_				sac.getMessage("message.format.example2", null, Locale.US)_				.equals("This is a test message in the message catalog with no args."))__	};example,taken,from,the,javadocs,for,the,java,text,message,format,class;public,void,test,get,message,with,no,default,passed,in,and,found,in,msg,catalog,object,arguments,new,integer,7,new,date,system,current,time,millis,a,disturbance,in,the,force,assert,true,msg,from,static,msg,source,for,locale,us,substituting,args,for,placeholders,is,as,expected,sac,get,message,message,format,example1,arguments,locale,us,index,of,there,was,a,disturbance,in,the,force,on,planet,7,1,assert,true,msg,from,static,msg,source,for,locale,uk,substituting,args,for,placeholders,is,as,expected,sac,get,message,message,format,example1,arguments,locale,uk,index,of,there,was,a,disturbance,in,the,force,on,station,number,7,1,assert,true,msg,from,static,msg,source,for,locale,us,that,requires,no,args,is,as,expected,sac,get,message,message,format,example2,null,locale,us,equals,this,is,a,test,message,in,the,message,catalog,with,no,args
StaticMessageSourceTests -> public void testGetMessageWithNoDefaultPassedInAndFoundInMsgCatalog();1362408075;Example taken from the javadocs for the java.text.MessageFormat class;public void testGetMessageWithNoDefaultPassedInAndFoundInMsgCatalog() {_		Object[] arguments = {_			new Integer(7), new Date(System.currentTimeMillis()),_			"a disturbance in the Force"_		}___		_		assertTrue("msg from staticMsgSource for Locale.US substituting args for placeholders is as expected",_				sac.getMessage("message.format.example1", arguments, Locale.US)_				.indexOf("there was \"a disturbance in the Force\" on planet 7.") != -1)___		_		assertTrue("msg from staticMsgSource for Locale.UK substituting args for placeholders is as expected",_				sac.getMessage("message.format.example1", arguments, Locale.UK)_				.indexOf("there was \"a disturbance in the Force\" on station number 7.") != -1)___		_		assertTrue("msg from staticMsgSource for Locale.US that requires no args is as expected",_				sac.getMessage("message.format.example2", null, Locale.US)_				.equals("This is a test message in the message catalog with no args."))__	};example,taken,from,the,javadocs,for,the,java,text,message,format,class;public,void,test,get,message,with,no,default,passed,in,and,found,in,msg,catalog,object,arguments,new,integer,7,new,date,system,current,time,millis,a,disturbance,in,the,force,assert,true,msg,from,static,msg,source,for,locale,us,substituting,args,for,placeholders,is,as,expected,sac,get,message,message,format,example1,arguments,locale,us,index,of,there,was,a,disturbance,in,the,force,on,planet,7,1,assert,true,msg,from,static,msg,source,for,locale,uk,substituting,args,for,placeholders,is,as,expected,sac,get,message,message,format,example1,arguments,locale,uk,index,of,there,was,a,disturbance,in,the,force,on,station,number,7,1,assert,true,msg,from,static,msg,source,for,locale,us,that,requires,no,args,is,as,expected,sac,get,message,message,format,example2,null,locale,us,equals,this,is,a,test,message,in,the,message,catalog,with,no,args
StaticMessageSourceTests -> @Override 	protected ConfigurableApplicationContext createContext() throws Exception;1356735495;Run for each test;@Override_	protected ConfigurableApplicationContext createContext() throws Exception {_		StaticApplicationContext parent = new StaticApplicationContext()___		Map<String, String> m = new HashMap<String, String>()__		m.put("name", "Roderick")__		parent.registerPrototype("rod", org.springframework.beans.TestBean.class, new MutablePropertyValues(m))__		m.put("name", "Albert")__		parent.registerPrototype("father", org.springframework.beans.TestBean.class, new MutablePropertyValues(m))___		parent.refresh()__		parent.addListener(parentListener)___		this.sac = new StaticApplicationContext(parent)___		sac.registerSingleton("beanThatListens", BeanThatListens.class, new MutablePropertyValues())___		sac.registerSingleton("aca", ACATester.class, new MutablePropertyValues())___		sac.registerPrototype("aca-prototype", ACATester.class, new MutablePropertyValues())___		PropertiesBeanDefinitionReader reader = new PropertiesBeanDefinitionReader(sac.getDefaultListableBeanFactory())__		reader.loadBeanDefinitions(new ClassPathResource("testBeans.properties", getClass()))__		sac.refresh()__		sac.addListener(listener)___		StaticMessageSource messageSource = sac.getStaticMessageSource()__		Map<String, String> usMessages = new HashMap<String, String>(3)__		usMessages.put("message.format.example1", MSG_TXT1_US)__		usMessages.put("message.format.example2", MSG_TXT2_US)__		usMessages.put("message.format.example3", MSG_TXT3_US)__		messageSource.addMessages(usMessages, Locale.US)__		messageSource.addMessage("message.format.example1", Locale.UK, MSG_TXT1_UK)___		return sac__	};run,for,each,test;override,protected,configurable,application,context,create,context,throws,exception,static,application,context,parent,new,static,application,context,map,string,string,m,new,hash,map,string,string,m,put,name,roderick,parent,register,prototype,rod,org,springframework,beans,test,bean,class,new,mutable,property,values,m,m,put,name,albert,parent,register,prototype,father,org,springframework,beans,test,bean,class,new,mutable,property,values,m,parent,refresh,parent,add,listener,parent,listener,this,sac,new,static,application,context,parent,sac,register,singleton,bean,that,listens,bean,that,listens,class,new,mutable,property,values,sac,register,singleton,aca,acatester,class,new,mutable,property,values,sac,register,prototype,aca,prototype,acatester,class,new,mutable,property,values,properties,bean,definition,reader,reader,new,properties,bean,definition,reader,sac,get,default,listable,bean,factory,reader,load,bean,definitions,new,class,path,resource,test,beans,properties,get,class,sac,refresh,sac,add,listener,listener,static,message,source,message,source,sac,get,static,message,source,map,string,string,us,messages,new,hash,map,string,string,3,us,messages,put,message,format,example1,us,messages,put,message,format,example2,us,messages,put,message,format,example3,message,source,add,messages,us,messages,locale,us,message,source,add,message,message,format,example1,locale,uk,return,sac
StaticMessageSourceTests -> @Override 	protected ConfigurableApplicationContext createContext() throws Exception;1357119417;Run for each test;@Override_	protected ConfigurableApplicationContext createContext() throws Exception {_		StaticApplicationContext parent = new StaticApplicationContext()___		Map<String, String> m = new HashMap<String, String>()__		m.put("name", "Roderick")__		parent.registerPrototype("rod", org.springframework.beans.TestBean.class, new MutablePropertyValues(m))__		m.put("name", "Albert")__		parent.registerPrototype("father", org.springframework.beans.TestBean.class, new MutablePropertyValues(m))___		parent.refresh()__		parent.addApplicationListener(parentListener)___		this.sac = new StaticApplicationContext(parent)___		sac.registerSingleton("beanThatListens", BeanThatListens.class, new MutablePropertyValues())___		sac.registerSingleton("aca", ACATester.class, new MutablePropertyValues())___		sac.registerPrototype("aca-prototype", ACATester.class, new MutablePropertyValues())___		PropertiesBeanDefinitionReader reader = new PropertiesBeanDefinitionReader(sac.getDefaultListableBeanFactory())__		reader.loadBeanDefinitions(new ClassPathResource("testBeans.properties", getClass()))__		sac.refresh()__		sac.addApplicationListener(listener)___		StaticMessageSource messageSource = sac.getStaticMessageSource()__		Map<String, String> usMessages = new HashMap<String, String>(3)__		usMessages.put("message.format.example1", MSG_TXT1_US)__		usMessages.put("message.format.example2", MSG_TXT2_US)__		usMessages.put("message.format.example3", MSG_TXT3_US)__		messageSource.addMessages(usMessages, Locale.US)__		messageSource.addMessage("message.format.example1", Locale.UK, MSG_TXT1_UK)___		return sac__	};run,for,each,test;override,protected,configurable,application,context,create,context,throws,exception,static,application,context,parent,new,static,application,context,map,string,string,m,new,hash,map,string,string,m,put,name,roderick,parent,register,prototype,rod,org,springframework,beans,test,bean,class,new,mutable,property,values,m,m,put,name,albert,parent,register,prototype,father,org,springframework,beans,test,bean,class,new,mutable,property,values,m,parent,refresh,parent,add,application,listener,parent,listener,this,sac,new,static,application,context,parent,sac,register,singleton,bean,that,listens,bean,that,listens,class,new,mutable,property,values,sac,register,singleton,aca,acatester,class,new,mutable,property,values,sac,register,prototype,aca,prototype,acatester,class,new,mutable,property,values,properties,bean,definition,reader,reader,new,properties,bean,definition,reader,sac,get,default,listable,bean,factory,reader,load,bean,definitions,new,class,path,resource,test,beans,properties,get,class,sac,refresh,sac,add,application,listener,listener,static,message,source,message,source,sac,get,static,message,source,map,string,string,us,messages,new,hash,map,string,string,3,us,messages,put,message,format,example1,us,messages,put,message,format,example2,us,messages,put,message,format,example3,message,source,add,messages,us,messages,locale,us,message,source,add,message,message,format,example1,locale,uk,return,sac
StaticMessageSourceTests -> @Override 	protected ConfigurableApplicationContext createContext() throws Exception;1362408075;Run for each test;@Override_	protected ConfigurableApplicationContext createContext() throws Exception {_		StaticApplicationContext parent = new StaticApplicationContext()___		Map<String, String> m = new HashMap<String, String>()__		m.put("name", "Roderick")__		parent.registerPrototype("rod", org.springframework.tests.sample.beans.TestBean.class, new MutablePropertyValues(m))__		m.put("name", "Albert")__		parent.registerPrototype("father", org.springframework.tests.sample.beans.TestBean.class, new MutablePropertyValues(m))___		parent.refresh()__		parent.addApplicationListener(parentListener)___		this.sac = new StaticApplicationContext(parent)___		sac.registerSingleton("beanThatListens", BeanThatListens.class, new MutablePropertyValues())___		sac.registerSingleton("aca", ACATester.class, new MutablePropertyValues())___		sac.registerPrototype("aca-prototype", ACATester.class, new MutablePropertyValues())___		PropertiesBeanDefinitionReader reader = new PropertiesBeanDefinitionReader(sac.getDefaultListableBeanFactory())__		reader.loadBeanDefinitions(new ClassPathResource("testBeans.properties", getClass()))__		sac.refresh()__		sac.addApplicationListener(listener)___		StaticMessageSource messageSource = sac.getStaticMessageSource()__		Map<String, String> usMessages = new HashMap<String, String>(3)__		usMessages.put("message.format.example1", MSG_TXT1_US)__		usMessages.put("message.format.example2", MSG_TXT2_US)__		usMessages.put("message.format.example3", MSG_TXT3_US)__		messageSource.addMessages(usMessages, Locale.US)__		messageSource.addMessage("message.format.example1", Locale.UK, MSG_TXT1_UK)___		return sac__	};run,for,each,test;override,protected,configurable,application,context,create,context,throws,exception,static,application,context,parent,new,static,application,context,map,string,string,m,new,hash,map,string,string,m,put,name,roderick,parent,register,prototype,rod,org,springframework,tests,sample,beans,test,bean,class,new,mutable,property,values,m,m,put,name,albert,parent,register,prototype,father,org,springframework,tests,sample,beans,test,bean,class,new,mutable,property,values,m,parent,refresh,parent,add,application,listener,parent,listener,this,sac,new,static,application,context,parent,sac,register,singleton,bean,that,listens,bean,that,listens,class,new,mutable,property,values,sac,register,singleton,aca,acatester,class,new,mutable,property,values,sac,register,prototype,aca,prototype,acatester,class,new,mutable,property,values,properties,bean,definition,reader,reader,new,properties,bean,definition,reader,sac,get,default,listable,bean,factory,reader,load,bean,definitions,new,class,path,resource,test,beans,properties,get,class,sac,refresh,sac,add,application,listener,listener,static,message,source,message,source,sac,get,static,message,source,map,string,string,us,messages,new,hash,map,string,string,3,us,messages,put,message,format,example1,us,messages,put,message,format,example2,us,messages,put,message,format,example3,message,source,add,messages,us,messages,locale,us,message,source,add,message,message,format,example1,locale,uk,return,sac
StaticMessageSourceTests -> public void testGetMessageWithMessageAlreadyLookedFor();1328020251;We really are testing the AbstractMessageSource class here._The underlying implementation uses a hashMap to cache messageFormats_once a message has been asked for.  This test is an attempt to_make sure the cache is being used properly._@see org.springframework.context.support.AbstractMessageSource for more details.;public void testGetMessageWithMessageAlreadyLookedFor() {_		Object[] arguments = {_			new Integer(7), new Date(System.currentTimeMillis()),_			"a disturbance in the Force"_		}___		_		_		sac.getMessage("message.format.example1", arguments, Locale.US)___		_		assertTrue("2nd search within MsgFormat cache returned expected message for Locale.US",_				sac.getMessage("message.format.example1", arguments, Locale.US).indexOf(_						"there was \"a disturbance in the Force\" on planet 7.") != -1)___		Object[] newArguments = {_			new Integer(8), new Date(System.currentTimeMillis()),_			"a disturbance in the Force"_		}___		_		assertTrue("2nd search within MsgFormat cache with different args returned expected message for Locale.US",_				sac.getMessage("message.format.example1", newArguments, Locale.US)_				.indexOf("there was \"a disturbance in the Force\" on planet 8.") != -1)__	};we,really,are,testing,the,abstract,message,source,class,here,the,underlying,implementation,uses,a,hash,map,to,cache,message,formats,once,a,message,has,been,asked,for,this,test,is,an,attempt,to,make,sure,the,cache,is,being,used,properly,see,org,springframework,context,support,abstract,message,source,for,more,details;public,void,test,get,message,with,message,already,looked,for,object,arguments,new,integer,7,new,date,system,current,time,millis,a,disturbance,in,the,force,sac,get,message,message,format,example1,arguments,locale,us,assert,true,2nd,search,within,msg,format,cache,returned,expected,message,for,locale,us,sac,get,message,message,format,example1,arguments,locale,us,index,of,there,was,a,disturbance,in,the,force,on,planet,7,1,object,new,arguments,new,integer,8,new,date,system,current,time,millis,a,disturbance,in,the,force,assert,true,2nd,search,within,msg,format,cache,with,different,args,returned,expected,message,for,locale,us,sac,get,message,message,format,example1,new,arguments,locale,us,index,of,there,was,a,disturbance,in,the,force,on,planet,8,1
StaticMessageSourceTests -> public void testGetMessageWithMessageAlreadyLookedFor();1356735495;We really are testing the AbstractMessageSource class here._The underlying implementation uses a hashMap to cache messageFormats_once a message has been asked for.  This test is an attempt to_make sure the cache is being used properly._@see org.springframework.context.support.AbstractMessageSource for more details.;public void testGetMessageWithMessageAlreadyLookedFor() {_		Object[] arguments = {_			new Integer(7), new Date(System.currentTimeMillis()),_			"a disturbance in the Force"_		}___		_		_		sac.getMessage("message.format.example1", arguments, Locale.US)___		_		assertTrue("2nd search within MsgFormat cache returned expected message for Locale.US",_				sac.getMessage("message.format.example1", arguments, Locale.US).indexOf(_						"there was \"a disturbance in the Force\" on planet 7.") != -1)___		Object[] newArguments = {_			new Integer(8), new Date(System.currentTimeMillis()),_			"a disturbance in the Force"_		}___		_		assertTrue("2nd search within MsgFormat cache with different args returned expected message for Locale.US",_				sac.getMessage("message.format.example1", newArguments, Locale.US)_				.indexOf("there was \"a disturbance in the Force\" on planet 8.") != -1)__	};we,really,are,testing,the,abstract,message,source,class,here,the,underlying,implementation,uses,a,hash,map,to,cache,message,formats,once,a,message,has,been,asked,for,this,test,is,an,attempt,to,make,sure,the,cache,is,being,used,properly,see,org,springframework,context,support,abstract,message,source,for,more,details;public,void,test,get,message,with,message,already,looked,for,object,arguments,new,integer,7,new,date,system,current,time,millis,a,disturbance,in,the,force,sac,get,message,message,format,example1,arguments,locale,us,assert,true,2nd,search,within,msg,format,cache,returned,expected,message,for,locale,us,sac,get,message,message,format,example1,arguments,locale,us,index,of,there,was,a,disturbance,in,the,force,on,planet,7,1,object,new,arguments,new,integer,8,new,date,system,current,time,millis,a,disturbance,in,the,force,assert,true,2nd,search,within,msg,format,cache,with,different,args,returned,expected,message,for,locale,us,sac,get,message,message,format,example1,new,arguments,locale,us,index,of,there,was,a,disturbance,in,the,force,on,planet,8,1
StaticMessageSourceTests -> public void testGetMessageWithMessageAlreadyLookedFor();1357119417;We really are testing the AbstractMessageSource class here._The underlying implementation uses a hashMap to cache messageFormats_once a message has been asked for.  This test is an attempt to_make sure the cache is being used properly._@see org.springframework.context.support.AbstractMessageSource for more details.;public void testGetMessageWithMessageAlreadyLookedFor() {_		Object[] arguments = {_			new Integer(7), new Date(System.currentTimeMillis()),_			"a disturbance in the Force"_		}___		_		_		sac.getMessage("message.format.example1", arguments, Locale.US)___		_		assertTrue("2nd search within MsgFormat cache returned expected message for Locale.US",_				sac.getMessage("message.format.example1", arguments, Locale.US).indexOf(_						"there was \"a disturbance in the Force\" on planet 7.") != -1)___		Object[] newArguments = {_			new Integer(8), new Date(System.currentTimeMillis()),_			"a disturbance in the Force"_		}___		_		assertTrue("2nd search within MsgFormat cache with different args returned expected message for Locale.US",_				sac.getMessage("message.format.example1", newArguments, Locale.US)_				.indexOf("there was \"a disturbance in the Force\" on planet 8.") != -1)__	};we,really,are,testing,the,abstract,message,source,class,here,the,underlying,implementation,uses,a,hash,map,to,cache,message,formats,once,a,message,has,been,asked,for,this,test,is,an,attempt,to,make,sure,the,cache,is,being,used,properly,see,org,springframework,context,support,abstract,message,source,for,more,details;public,void,test,get,message,with,message,already,looked,for,object,arguments,new,integer,7,new,date,system,current,time,millis,a,disturbance,in,the,force,sac,get,message,message,format,example1,arguments,locale,us,assert,true,2nd,search,within,msg,format,cache,returned,expected,message,for,locale,us,sac,get,message,message,format,example1,arguments,locale,us,index,of,there,was,a,disturbance,in,the,force,on,planet,7,1,object,new,arguments,new,integer,8,new,date,system,current,time,millis,a,disturbance,in,the,force,assert,true,2nd,search,within,msg,format,cache,with,different,args,returned,expected,message,for,locale,us,sac,get,message,message,format,example1,new,arguments,locale,us,index,of,there,was,a,disturbance,in,the,force,on,planet,8,1
StaticMessageSourceTests -> public void testGetMessageWithMessageAlreadyLookedFor();1362408075;We really are testing the AbstractMessageSource class here._The underlying implementation uses a hashMap to cache messageFormats_once a message has been asked for.  This test is an attempt to_make sure the cache is being used properly._@see org.springframework.context.support.AbstractMessageSource for more details.;public void testGetMessageWithMessageAlreadyLookedFor() {_		Object[] arguments = {_			new Integer(7), new Date(System.currentTimeMillis()),_			"a disturbance in the Force"_		}___		_		_		sac.getMessage("message.format.example1", arguments, Locale.US)___		_		assertTrue("2nd search within MsgFormat cache returned expected message for Locale.US",_				sac.getMessage("message.format.example1", arguments, Locale.US).indexOf(_						"there was \"a disturbance in the Force\" on planet 7.") != -1)___		Object[] newArguments = {_			new Integer(8), new Date(System.currentTimeMillis()),_			"a disturbance in the Force"_		}___		_		assertTrue("2nd search within MsgFormat cache with different args returned expected message for Locale.US",_				sac.getMessage("message.format.example1", newArguments, Locale.US)_				.indexOf("there was \"a disturbance in the Force\" on planet 8.") != -1)__	};we,really,are,testing,the,abstract,message,source,class,here,the,underlying,implementation,uses,a,hash,map,to,cache,message,formats,once,a,message,has,been,asked,for,this,test,is,an,attempt,to,make,sure,the,cache,is,being,used,properly,see,org,springframework,context,support,abstract,message,source,for,more,details;public,void,test,get,message,with,message,already,looked,for,object,arguments,new,integer,7,new,date,system,current,time,millis,a,disturbance,in,the,force,sac,get,message,message,format,example1,arguments,locale,us,assert,true,2nd,search,within,msg,format,cache,returned,expected,message,for,locale,us,sac,get,message,message,format,example1,arguments,locale,us,index,of,there,was,a,disturbance,in,the,force,on,planet,7,1,object,new,arguments,new,integer,8,new,date,system,current,time,millis,a,disturbance,in,the,force,assert,true,2nd,search,within,msg,format,cache,with,different,args,returned,expected,message,for,locale,us,sac,get,message,message,format,example1,new,arguments,locale,us,index,of,there,was,a,disturbance,in,the,force,on,planet,8,1
StaticMessageSourceTests -> @Test 	public void getMessageWithNoDefaultPassedInAndFoundInMsgCatalog();1443381471;Example taken from the javadocs for the java.text.MessageFormat class;@Test_	public void getMessageWithNoDefaultPassedInAndFoundInMsgCatalog() {_		Object[] arguments = {_			new Integer(7), new Date(System.currentTimeMillis()),_			"a disturbance in the Force"_		}___		_		assertTrue("msg from staticMsgSource for Locale.US substituting args for placeholders is as expected",_				sac.getMessage("message.format.example1", arguments, Locale.US)_				.indexOf("there was \"a disturbance in the Force\" on planet 7.") != -1)___		_		assertTrue("msg from staticMsgSource for Locale.UK substituting args for placeholders is as expected",_				sac.getMessage("message.format.example1", arguments, Locale.UK)_				.indexOf("there was \"a disturbance in the Force\" on station number 7.") != -1)___		_		assertTrue("msg from staticMsgSource for Locale.US that requires no args is as expected",_				sac.getMessage("message.format.example2", null, Locale.US)_				.equals("This is a test message in the message catalog with no args."))__	};example,taken,from,the,javadocs,for,the,java,text,message,format,class;test,public,void,get,message,with,no,default,passed,in,and,found,in,msg,catalog,object,arguments,new,integer,7,new,date,system,current,time,millis,a,disturbance,in,the,force,assert,true,msg,from,static,msg,source,for,locale,us,substituting,args,for,placeholders,is,as,expected,sac,get,message,message,format,example1,arguments,locale,us,index,of,there,was,a,disturbance,in,the,force,on,planet,7,1,assert,true,msg,from,static,msg,source,for,locale,uk,substituting,args,for,placeholders,is,as,expected,sac,get,message,message,format,example1,arguments,locale,uk,index,of,there,was,a,disturbance,in,the,force,on,station,number,7,1,assert,true,msg,from,static,msg,source,for,locale,us,that,requires,no,args,is,as,expected,sac,get,message,message,format,example2,null,locale,us,equals,this,is,a,test,message,in,the,message,catalog,with,no,args
StaticMessageSourceTests -> @Test 	public void getMessageWithNoDefaultPassedInAndFoundInMsgCatalog();1467730834;Example taken from the javadocs for the java.text.MessageFormat class;@Test_	public void getMessageWithNoDefaultPassedInAndFoundInMsgCatalog() {_		Object[] arguments = {_			new Integer(7), new Date(System.currentTimeMillis()),_			"a disturbance in the Force"_		}___		_		assertTrue("msg from staticMsgSource for Locale.US substituting args for placeholders is as expected",_				sac.getMessage("message.format.example1", arguments, Locale.US)_				.indexOf("there was \"a disturbance in the Force\" on planet 7.") != -1)___		_		assertTrue("msg from staticMsgSource for Locale.UK substituting args for placeholders is as expected",_				sac.getMessage("message.format.example1", arguments, Locale.UK)_				.indexOf("there was \"a disturbance in the Force\" on station number 7.") != -1)___		_		assertTrue("msg from staticMsgSource for Locale.US that requires no args is as expected",_				sac.getMessage("message.format.example2", null, Locale.US)_				.equals("This is a test message in the message catalog with no args."))__	};example,taken,from,the,javadocs,for,the,java,text,message,format,class;test,public,void,get,message,with,no,default,passed,in,and,found,in,msg,catalog,object,arguments,new,integer,7,new,date,system,current,time,millis,a,disturbance,in,the,force,assert,true,msg,from,static,msg,source,for,locale,us,substituting,args,for,placeholders,is,as,expected,sac,get,message,message,format,example1,arguments,locale,us,index,of,there,was,a,disturbance,in,the,force,on,planet,7,1,assert,true,msg,from,static,msg,source,for,locale,uk,substituting,args,for,placeholders,is,as,expected,sac,get,message,message,format,example1,arguments,locale,uk,index,of,there,was,a,disturbance,in,the,force,on,station,number,7,1,assert,true,msg,from,static,msg,source,for,locale,us,that,requires,no,args,is,as,expected,sac,get,message,message,format,example2,null,locale,us,equals,this,is,a,test,message,in,the,message,catalog,with,no,args
StaticMessageSourceTests -> @Test 	public void getMessageWithNoDefaultPassedInAndFoundInMsgCatalog();1544700571;Example taken from the javadocs for the java.text.MessageFormat class;@Test_	public void getMessageWithNoDefaultPassedInAndFoundInMsgCatalog() {_		Object[] arguments = {_			new Integer(7), new Date(System.currentTimeMillis()),_			"a disturbance in the Force"_		}___		_		assertTrue("msg from staticMsgSource for Locale.US substituting args for placeholders is as expected",_				sac.getMessage("message.format.example1", arguments, Locale.US)._						contains("there was \"a disturbance in the Force\" on planet 7."))___		_		assertTrue("msg from staticMsgSource for Locale.UK substituting args for placeholders is as expected",_				sac.getMessage("message.format.example1", arguments, Locale.UK)._						contains("there was \"a disturbance in the Force\" on station number 7."))___		_		assertTrue("msg from staticMsgSource for Locale.US that requires no args is as expected",_				sac.getMessage("message.format.example2", null, Locale.US)_				.equals("This is a test message in the message catalog with no args."))__	};example,taken,from,the,javadocs,for,the,java,text,message,format,class;test,public,void,get,message,with,no,default,passed,in,and,found,in,msg,catalog,object,arguments,new,integer,7,new,date,system,current,time,millis,a,disturbance,in,the,force,assert,true,msg,from,static,msg,source,for,locale,us,substituting,args,for,placeholders,is,as,expected,sac,get,message,message,format,example1,arguments,locale,us,contains,there,was,a,disturbance,in,the,force,on,planet,7,assert,true,msg,from,static,msg,source,for,locale,uk,substituting,args,for,placeholders,is,as,expected,sac,get,message,message,format,example1,arguments,locale,uk,contains,there,was,a,disturbance,in,the,force,on,station,number,7,assert,true,msg,from,static,msg,source,for,locale,us,that,requires,no,args,is,as,expected,sac,get,message,message,format,example2,null,locale,us,equals,this,is,a,test,message,in,the,message,catalog,with,no,args
StaticMessageSourceTests -> @Override 	public void testCount();1356735495;Overridden;@Override_	public void testCount() {_		_		assertCount(15)__	};overridden;override,public,void,test,count,assert,count,15
StaticMessageSourceTests -> @Override 	public void testCount();1357119417;Overridden;@Override_	public void testCount() {_		_		assertCount(15)__	};overridden;override,public,void,test,count,assert,count,15
StaticMessageSourceTests -> @Override 	public void testCount();1362408075;Overridden;@Override_	public void testCount() {_		_		assertCount(15)__	};overridden;override,public,void,test,count,assert,count,15
StaticMessageSourceTests -> @Test 	public void getMessageWithMessageAlreadyLookedFor();1443381471;We really are testing the AbstractMessageSource class here._The underlying implementation uses a hashMap to cache messageFormats_once a message has been asked for.  This test is an attempt to_make sure the cache is being used properly._@see org.springframework.context.support.AbstractMessageSource for more details.;@Test_	public void getMessageWithMessageAlreadyLookedFor() {_		Object[] arguments = {_			new Integer(7), new Date(System.currentTimeMillis()),_			"a disturbance in the Force"_		}___		_		_		sac.getMessage("message.format.example1", arguments, Locale.US)___		_		assertTrue("2nd search within MsgFormat cache returned expected message for Locale.US",_				sac.getMessage("message.format.example1", arguments, Locale.US).indexOf(_						"there was \"a disturbance in the Force\" on planet 7.") != -1)___		Object[] newArguments = {_			new Integer(8), new Date(System.currentTimeMillis()),_			"a disturbance in the Force"_		}___		_		assertTrue("2nd search within MsgFormat cache with different args returned expected message for Locale.US",_				sac.getMessage("message.format.example1", newArguments, Locale.US)_				.indexOf("there was \"a disturbance in the Force\" on planet 8.") != -1)__	};we,really,are,testing,the,abstract,message,source,class,here,the,underlying,implementation,uses,a,hash,map,to,cache,message,formats,once,a,message,has,been,asked,for,this,test,is,an,attempt,to,make,sure,the,cache,is,being,used,properly,see,org,springframework,context,support,abstract,message,source,for,more,details;test,public,void,get,message,with,message,already,looked,for,object,arguments,new,integer,7,new,date,system,current,time,millis,a,disturbance,in,the,force,sac,get,message,message,format,example1,arguments,locale,us,assert,true,2nd,search,within,msg,format,cache,returned,expected,message,for,locale,us,sac,get,message,message,format,example1,arguments,locale,us,index,of,there,was,a,disturbance,in,the,force,on,planet,7,1,object,new,arguments,new,integer,8,new,date,system,current,time,millis,a,disturbance,in,the,force,assert,true,2nd,search,within,msg,format,cache,with,different,args,returned,expected,message,for,locale,us,sac,get,message,message,format,example1,new,arguments,locale,us,index,of,there,was,a,disturbance,in,the,force,on,planet,8,1
StaticMessageSourceTests -> @Test 	public void getMessageWithMessageAlreadyLookedFor();1467730834;We really are testing the AbstractMessageSource class here._The underlying implementation uses a hashMap to cache messageFormats_once a message has been asked for.  This test is an attempt to_make sure the cache is being used properly._@see org.springframework.context.support.AbstractMessageSource for more details.;@Test_	public void getMessageWithMessageAlreadyLookedFor() {_		Object[] arguments = {_			new Integer(7), new Date(System.currentTimeMillis()),_			"a disturbance in the Force"_		}___		_		_		sac.getMessage("message.format.example1", arguments, Locale.US)___		_		assertTrue("2nd search within MsgFormat cache returned expected message for Locale.US",_				sac.getMessage("message.format.example1", arguments, Locale.US).indexOf(_						"there was \"a disturbance in the Force\" on planet 7.") != -1)___		Object[] newArguments = {_			new Integer(8), new Date(System.currentTimeMillis()),_			"a disturbance in the Force"_		}___		_		assertTrue("2nd search within MsgFormat cache with different args returned expected message for Locale.US",_				sac.getMessage("message.format.example1", newArguments, Locale.US)_				.indexOf("there was \"a disturbance in the Force\" on planet 8.") != -1)__	};we,really,are,testing,the,abstract,message,source,class,here,the,underlying,implementation,uses,a,hash,map,to,cache,message,formats,once,a,message,has,been,asked,for,this,test,is,an,attempt,to,make,sure,the,cache,is,being,used,properly,see,org,springframework,context,support,abstract,message,source,for,more,details;test,public,void,get,message,with,message,already,looked,for,object,arguments,new,integer,7,new,date,system,current,time,millis,a,disturbance,in,the,force,sac,get,message,message,format,example1,arguments,locale,us,assert,true,2nd,search,within,msg,format,cache,returned,expected,message,for,locale,us,sac,get,message,message,format,example1,arguments,locale,us,index,of,there,was,a,disturbance,in,the,force,on,planet,7,1,object,new,arguments,new,integer,8,new,date,system,current,time,millis,a,disturbance,in,the,force,assert,true,2nd,search,within,msg,format,cache,with,different,args,returned,expected,message,for,locale,us,sac,get,message,message,format,example1,new,arguments,locale,us,index,of,there,was,a,disturbance,in,the,force,on,planet,8,1
StaticMessageSourceTests -> @Test 	public void getMessageWithMessageAlreadyLookedFor();1544700571;We really are testing the AbstractMessageSource class here._The underlying implementation uses a hashMap to cache messageFormats_once a message has been asked for.  This test is an attempt to_make sure the cache is being used properly._@see org.springframework.context.support.AbstractMessageSource for more details.;@Test_	public void getMessageWithMessageAlreadyLookedFor() {_		Object[] arguments = {_			new Integer(7), new Date(System.currentTimeMillis()),_			"a disturbance in the Force"_		}___		_		_		sac.getMessage("message.format.example1", arguments, Locale.US)___		_		assertTrue("2nd search within MsgFormat cache returned expected message for Locale.US",_				sac.getMessage("message.format.example1", arguments, Locale.US)._						contains("there was \"a disturbance in the Force\" on planet 7."))___		Object[] newArguments = {_			new Integer(8), new Date(System.currentTimeMillis()),_			"a disturbance in the Force"_		}___		_		assertTrue("2nd search within MsgFormat cache with different args returned expected message for Locale.US",_				sac.getMessage("message.format.example1", newArguments, Locale.US)._						contains("there was \"a disturbance in the Force\" on planet 8."))__	};we,really,are,testing,the,abstract,message,source,class,here,the,underlying,implementation,uses,a,hash,map,to,cache,message,formats,once,a,message,has,been,asked,for,this,test,is,an,attempt,to,make,sure,the,cache,is,being,used,properly,see,org,springframework,context,support,abstract,message,source,for,more,details;test,public,void,get,message,with,message,already,looked,for,object,arguments,new,integer,7,new,date,system,current,time,millis,a,disturbance,in,the,force,sac,get,message,message,format,example1,arguments,locale,us,assert,true,2nd,search,within,msg,format,cache,returned,expected,message,for,locale,us,sac,get,message,message,format,example1,arguments,locale,us,contains,there,was,a,disturbance,in,the,force,on,planet,7,object,new,arguments,new,integer,8,new,date,system,current,time,millis,a,disturbance,in,the,force,assert,true,2nd,search,within,msg,format,cache,with,different,args,returned,expected,message,for,locale,us,sac,get,message,message,format,example1,new,arguments,locale,us,contains,there,was,a,disturbance,in,the,force,on,planet,8
