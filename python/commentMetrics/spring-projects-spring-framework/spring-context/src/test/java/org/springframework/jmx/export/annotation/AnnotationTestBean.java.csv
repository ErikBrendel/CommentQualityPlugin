commented;modifiers;parameterAmount;loc;comment;code
false;public;0;5;;@Override @ManagedAttribute(description = "The Age Attribute", currencyTimeLimit = 15) public int getAge() {     return age. }
false;public;1;4;;@Override public void setAge(int age) {     this.age = age. }
false;public;0;5;;@Override @ManagedOperation(currencyTimeLimit = 30) public long myOperation() {     return 1L. }
false;public;1;8;;@Override @ManagedAttribute(description = "The Name Attribute", currencyTimeLimit = 20, defaultValue = "bar", persistPolicy = "OnUpdate") public void setName(String name) {     this.name = name. }
false;public;0;5;;@Override @ManagedAttribute(defaultValue = "foo", persistPeriod = 300) public String getName() {     return name. }
false;public;1;4;;@ManagedAttribute(description = "The Nick Name Attribute") public void setNickName(String nickName) {     this.nickName = nickName. }
false;public;0;3;;public String getNickName() {     return this.nickName. }
false;public;1;3;;public void setSuperman(boolean superman) {     this.isSuperman = superman. }
false;public;0;4;;@ManagedAttribute(description = "The Is Superman Attribute") public boolean isSuperman() {     return isSuperman. }
false;public;2;7;;@Override @ManagedOperation(description = "Add Two Numbers Together") @ManagedOperationParameter(name = "x", description = "Left operand") @ManagedOperationParameter(name = "y", description = "Right operand") public int add(int x, int y) {     return x + y. }
true;public;0;4;/**  * Test method that is not exposed by the MetadataAssembler.  */ ;/**  * Test method that is not exposed by the MetadataAssembler.  */ @Override public void dontExposeMe() {     throw new RuntimeException(). }
false;public;0;5;;@ManagedMetric(description = "The QueueSize metric", currencyTimeLimit = 20, persistPolicy = "OnUpdate", persistPeriod = 300, category = "utilization", metricType = MetricType.COUNTER, displayName = "Queue Size", unit = "messages") public long getQueueSize() {     return 100L. }
false;public;0;4;;@ManagedMetric public int getCacheEntries() {     return 3. }
