commented;modifiers;parameterAmount;loc;comment;code
false;private;0;3;;private JMXServiceURL getJMXServiceUrl() throws MalformedURLException {     return new JMXServiceURL(serviceUrl). }
false;private;0;3;;private JMXConnectorServer getConnectorServer() throws Exception {     return JMXConnectorServerFactory.newJMXConnectorServer(getJMXServiceUrl(), null, getServer()). }
false;public;0;26;;@Test public void testTestValidConnection() throws Exception {     Assume.group(TestGroup.JMXMP).     JMXConnectorServer connectorServer = getConnectorServer().     connectorServer.start().     try {         MBeanServerConnectionFactoryBean bean = new MBeanServerConnectionFactoryBean().         bean.setServiceUrl(serviceUrl).         bean.afterPropertiesSet().         try {             MBeanServerConnection connection = bean.getObject().             assertNotNull("Connection should not be null", connection).             // perform simple MBean count test             assertEquals("MBean count should be the same", getServer().getMBeanCount(), connection.getMBeanCount()).         } finally {             bean.destroy().         }     } finally {         connectorServer.stop().     } }
false;public;0;5;;@Test(expected = IllegalArgumentException.class) public void testWithNoServiceUrl() throws Exception {     MBeanServerConnectionFactoryBean bean = new MBeanServerConnectionFactoryBean().     bean.afterPropertiesSet(). }
false;public;0;24;;@Test public void testTestWithLazyConnection() throws Exception {     Assume.group(TestGroup.JMXMP).     MBeanServerConnectionFactoryBean bean = new MBeanServerConnectionFactoryBean().     bean.setServiceUrl(serviceUrl).     bean.setConnectOnStartup(false).     bean.afterPropertiesSet().     MBeanServerConnection connection = bean.getObject().     assertTrue(AopUtils.isAopProxy(connection)).     JMXConnectorServer connector = null.     try {         connector = getConnectorServer().         connector.start().         assertEquals("Incorrect MBean count", getServer().getMBeanCount(), connection.getMBeanCount()).     } finally {         bean.destroy().         if (connector != null) {             connector.stop().         }     } }
false;public;0;11;;@Test public void testWithLazyConnectionAndNoAccess() throws Exception {     MBeanServerConnectionFactoryBean bean = new MBeanServerConnectionFactoryBean().     bean.setServiceUrl(serviceUrl).     bean.setConnectOnStartup(false).     bean.afterPropertiesSet().     MBeanServerConnection connection = bean.getObject().     assertTrue(AopUtils.isAopProxy(connection)).     bean.destroy(). }
