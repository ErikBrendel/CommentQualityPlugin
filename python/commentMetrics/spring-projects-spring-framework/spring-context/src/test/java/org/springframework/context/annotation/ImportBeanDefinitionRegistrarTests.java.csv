commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void shouldInvokeAwareMethodsInImportBeanDefinitionRegistrar() {     AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(Config.class).     context.getBean(MessageSource.class).     assertThat(SampleRegistrar.beanFactory, is(context.getBeanFactory())).     assertThat(SampleRegistrar.classLoader, is(context.getBeanFactory().getBeanClassLoader())).     assertThat(SampleRegistrar.resourceLoader, is(notNullValue())).     assertThat(SampleRegistrar.environment, is(context.getEnvironment())). }
false;public;1;4;;@Override public void setBeanClassLoader(ClassLoader classLoader) {     SampleRegistrar.classLoader = classLoader. }
false;public;1;4;;@Override public void setBeanFactory(BeanFactory beanFactory) throws BeansException {     SampleRegistrar.beanFactory = beanFactory. }
false;public;1;4;;@Override public void setResourceLoader(ResourceLoader resourceLoader) {     SampleRegistrar.resourceLoader = resourceLoader. }
false;public;1;4;;@Override public void setEnvironment(Environment environment) {     SampleRegistrar.environment = environment. }
false;public;2;4;;@Override public void registerBeanDefinitions(AnnotationMetadata importingClassMetadata, BeanDefinitionRegistry registry) { }
