commented;modifiers;parameterAmount;loc;comment;code
false;public;0;19;;@Test public void configurationClassWithCacheProxyFactoryBean() {     try (AnnotationConfigApplicationContext applicationContext = new AnnotationConfigApplicationContext(CacheProxyFactoryBeanConfiguration.class)) {         Greeter greeter = applicationContext.getBean("greeter", Greeter.class).         assertNotNull(greeter).         assertFalse(greeter.isCacheMiss()).         assertEquals("Hello John!", greeter.greet("John")).         assertTrue(greeter.isCacheMiss()).         assertEquals("Hello Jon!", greeter.greet("Jon")).         assertTrue(greeter.isCacheMiss()).         assertEquals("Hello John!", greeter.greet("John")).         assertFalse(greeter.isCacheMiss()).         assertEquals("Hello World!", greeter.greet()).         assertTrue(greeter.isCacheMiss()).         assertEquals("Hello World!", greeter.greet()).         assertFalse(greeter.isCacheMiss()).     } }
false;;0;4;;@Bean ConcurrentMapCacheManager cacheManager() {     return new ConcurrentMapCacheManager("Greetings"). }
false;;0;7;;@Bean CacheProxyFactoryBean greeter() {     CacheProxyFactoryBean factoryBean = new CacheProxyFactoryBean().     factoryBean.setCacheOperationSources(newCacheOperationSource("greet", newCacheOperation("Greetings"))).     factoryBean.setTarget(new SimpleGreeter()).     return factoryBean. }
false;;2;5;;CacheOperationSource newCacheOperationSource(String methodName, CacheOperation... cacheOperations) {     NameMatchCacheOperationSource cacheOperationSource = new NameMatchCacheOperationSource().     cacheOperationSource.addCacheMethod(methodName, Arrays.asList(cacheOperations)).     return cacheOperationSource. }
false;;1;6;;CacheableOperation newCacheOperation(String cacheName) {     CacheableOperation.Builder builder = new CacheableOperation.Builder().     builder.setCacheManager("cacheManager").     builder.setCacheName(cacheName).     return builder.build(). }
false;default;0;3;;default boolean isCacheHit() {     return !isCacheMiss(). }
false;;0;1;;boolean isCacheMiss().
false;;0;1;;void setCacheMiss().
false;default;0;3;;default String greet() {     return greet("World"). }
false;default;1;4;;default String greet(String name) {     setCacheMiss().     return String.format("Hello %s!", name). }
false;public;0;4;;@Override public boolean isCacheMiss() {     return this.cacheMiss.getAndSet(false). }
false;public;0;4;;@Override public void setCacheMiss() {     this.cacheMiss.set(true). }
