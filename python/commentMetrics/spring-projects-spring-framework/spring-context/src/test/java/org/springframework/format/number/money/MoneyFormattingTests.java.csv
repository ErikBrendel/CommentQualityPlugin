commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Before public void setUp() {     LocaleContextHolder.setLocale(Locale.US). }
false;public;0;4;;@After public void tearDown() {     LocaleContextHolder.setLocale(null). }
false;public;0;25;;@Test public void testAmountAndUnit() {     MoneyHolder bean = new MoneyHolder().     DataBinder binder = new DataBinder(bean).     binder.setConversionService(conversionService).     MutablePropertyValues propertyValues = new MutablePropertyValues().     propertyValues.add("amount", "USD 10.50").     propertyValues.add("unit", "USD").     binder.bind(propertyValues).     assertEquals(0, binder.getBindingResult().getErrorCount()).     assertEquals("USD10.50", binder.getBindingResult().getFieldValue("amount")).     assertEquals("USD", binder.getBindingResult().getFieldValue("unit")).     assertTrue(bean.getAmount().getNumber().doubleValue() == 10.5d).     assertEquals("USD", bean.getAmount().getCurrency().getCurrencyCode()).     LocaleContextHolder.setLocale(Locale.CANADA).     binder.bind(propertyValues).     LocaleContextHolder.setLocale(Locale.US).     assertEquals(0, binder.getBindingResult().getErrorCount()).     assertEquals("USD10.50", binder.getBindingResult().getFieldValue("amount")).     assertEquals("USD", binder.getBindingResult().getFieldValue("unit")).     assertTrue(bean.getAmount().getNumber().doubleValue() == 10.5d).     assertEquals("USD", bean.getAmount().getCurrency().getCurrencyCode()). }
false;public;0;22;;@Test public void testAmountWithNumberFormat1() {     FormattedMoneyHolder1 bean = new FormattedMoneyHolder1().     DataBinder binder = new DataBinder(bean).     binder.setConversionService(conversionService).     MutablePropertyValues propertyValues = new MutablePropertyValues().     propertyValues.add("amount", "$10.50").     binder.bind(propertyValues).     assertEquals(0, binder.getBindingResult().getErrorCount()).     assertEquals("$10.50", binder.getBindingResult().getFieldValue("amount")).     assertTrue(bean.getAmount().getNumber().doubleValue() == 10.5d).     assertEquals("USD", bean.getAmount().getCurrency().getCurrencyCode()).     LocaleContextHolder.setLocale(Locale.CANADA).     binder.bind(propertyValues).     LocaleContextHolder.setLocale(Locale.US).     assertEquals(0, binder.getBindingResult().getErrorCount()).     assertEquals("$10.50", binder.getBindingResult().getFieldValue("amount")).     assertTrue(bean.getAmount().getNumber().doubleValue() == 10.5d).     assertEquals("CAD", bean.getAmount().getCurrency().getCurrencyCode()). }
false;public;0;14;;@Test public void testAmountWithNumberFormat2() {     FormattedMoneyHolder2 bean = new FormattedMoneyHolder2().     DataBinder binder = new DataBinder(bean).     binder.setConversionService(conversionService).     MutablePropertyValues propertyValues = new MutablePropertyValues().     propertyValues.add("amount", "10.50").     binder.bind(propertyValues).     assertEquals(0, binder.getBindingResult().getErrorCount()).     assertEquals("10.5", binder.getBindingResult().getFieldValue("amount")).     assertTrue(bean.getAmount().getNumber().doubleValue() == 10.5d).     assertEquals("USD", bean.getAmount().getCurrency().getCurrencyCode()). }
false;public;0;14;;@Test public void testAmountWithNumberFormat3() {     FormattedMoneyHolder3 bean = new FormattedMoneyHolder3().     DataBinder binder = new DataBinder(bean).     binder.setConversionService(conversionService).     MutablePropertyValues propertyValues = new MutablePropertyValues().     propertyValues.add("amount", "10%").     binder.bind(propertyValues).     assertEquals(0, binder.getBindingResult().getErrorCount()).     assertEquals("10%", binder.getBindingResult().getFieldValue("amount")).     assertTrue(bean.getAmount().getNumber().doubleValue() == 0.1d).     assertEquals("USD", bean.getAmount().getCurrency().getCurrencyCode()). }
false;public;0;14;;@Test public void testAmountWithNumberFormat4() {     FormattedMoneyHolder4 bean = new FormattedMoneyHolder4().     DataBinder binder = new DataBinder(bean).     binder.setConversionService(conversionService).     MutablePropertyValues propertyValues = new MutablePropertyValues().     propertyValues.add("amount", "010.500").     binder.bind(propertyValues).     assertEquals(0, binder.getBindingResult().getErrorCount()).     assertEquals("010.500", binder.getBindingResult().getFieldValue("amount")).     assertTrue(bean.getAmount().getNumber().doubleValue() == 10.5d).     assertEquals("USD", bean.getAmount().getCurrency().getCurrencyCode()). }
false;public;0;22;;@Test public void testAmountWithNumberFormat5() {     FormattedMoneyHolder5 bean = new FormattedMoneyHolder5().     DataBinder binder = new DataBinder(bean).     binder.setConversionService(conversionService).     MutablePropertyValues propertyValues = new MutablePropertyValues().     propertyValues.add("amount", "USD 10.50").     binder.bind(propertyValues).     assertEquals(0, binder.getBindingResult().getErrorCount()).     assertEquals("USD 010.500", binder.getBindingResult().getFieldValue("amount")).     assertTrue(bean.getAmount().getNumber().doubleValue() == 10.5d).     assertEquals("USD", bean.getAmount().getCurrency().getCurrencyCode()).     LocaleContextHolder.setLocale(Locale.CANADA).     binder.bind(propertyValues).     LocaleContextHolder.setLocale(Locale.US).     assertEquals(0, binder.getBindingResult().getErrorCount()).     assertEquals("USD 010.500", binder.getBindingResult().getFieldValue("amount")).     assertTrue(bean.getAmount().getNumber().doubleValue() == 10.5d).     assertEquals("USD", bean.getAmount().getCurrency().getCurrencyCode()). }
false;public;0;3;;public MonetaryAmount getAmount() {     return amount. }
false;public;1;3;;public void setAmount(MonetaryAmount amount) {     this.amount = amount. }
false;public;0;3;;public CurrencyUnit getUnit() {     return unit. }
false;public;1;3;;public void setUnit(CurrencyUnit unit) {     this.unit = unit. }
false;public;0;3;;public MonetaryAmount getAmount() {     return amount. }
false;public;1;3;;public void setAmount(MonetaryAmount amount) {     this.amount = amount. }
false;public;0;3;;public MonetaryAmount getAmount() {     return amount. }
false;public;1;3;;public void setAmount(MonetaryAmount amount) {     this.amount = amount. }
false;public;0;3;;public MonetaryAmount getAmount() {     return amount. }
false;public;1;3;;public void setAmount(MonetaryAmount amount) {     this.amount = amount. }
false;public;0;3;;public MonetaryAmount getAmount() {     return amount. }
false;public;1;3;;public void setAmount(MonetaryAmount amount) {     this.amount = amount. }
false;public;0;3;;public MonetaryAmount getAmount() {     return amount. }
false;public;1;3;;public void setAmount(MonetaryAmount amount) {     this.amount = amount. }
