commented;modifiers;parameterAmount;loc;comment;code
false;public;0;14;;@Test public void testThrowsExceptionIfPoolSizeIsLessThanZero() throws Exception {     try {         ScheduledExecutorFactoryBean factory = new ScheduledExecutorFactoryBean().         factory.setPoolSize(-1).         factory.setScheduledExecutorTasks(new ScheduledExecutorTask[] { new NoOpScheduledExecutorTask() }).         factory.afterPropertiesSet().         fail("Pool size less than zero").     } catch (IllegalArgumentException expected) {     } }
false;protected;3;4;;@Override protected ScheduledExecutorService createExecutor(int poolSize, ThreadFactory threadFactory, RejectedExecutionHandler rejectedExecutionHandler) {     return executor. }
false;public;0;19;;@Test @SuppressWarnings("serial") public void testShutdownNowIsPropagatedToTheExecutorOnDestroy() throws Exception {     final ScheduledExecutorService executor = mock(ScheduledExecutorService.class).     ScheduledExecutorFactoryBean factory = new ScheduledExecutorFactoryBean() {          @Override         protected ScheduledExecutorService createExecutor(int poolSize, ThreadFactory threadFactory, RejectedExecutionHandler rejectedExecutionHandler) {             return executor.         }     }.     factory.setScheduledExecutorTasks(new ScheduledExecutorTask[] { new NoOpScheduledExecutorTask() }).     factory.afterPropertiesSet().     factory.destroy().     verify(executor).shutdownNow(). }
false;protected;3;4;;@Override protected ScheduledExecutorService createExecutor(int poolSize, ThreadFactory threadFactory, RejectedExecutionHandler rejectedExecutionHandler) {     return executor. }
false;public;0;20;;@Test @SuppressWarnings("serial") public void testShutdownIsPropagatedToTheExecutorOnDestroy() throws Exception {     final ScheduledExecutorService executor = mock(ScheduledExecutorService.class).     ScheduledExecutorFactoryBean factory = new ScheduledExecutorFactoryBean() {          @Override         protected ScheduledExecutorService createExecutor(int poolSize, ThreadFactory threadFactory, RejectedExecutionHandler rejectedExecutionHandler) {             return executor.         }     }.     factory.setScheduledExecutorTasks(new ScheduledExecutorTask[] { new NoOpScheduledExecutorTask() }).     factory.setWaitForTasksToCompleteOnShutdown(true).     factory.afterPropertiesSet().     factory.destroy().     verify(executor).shutdown(). }
false;public;0;16;;@Test public void testOneTimeExecutionIsSetUpAndFiresCorrectly() throws Exception {     Assume.group(TestGroup.PERFORMANCE).     Runnable runnable = mock(Runnable.class).     ScheduledExecutorFactoryBean factory = new ScheduledExecutorFactoryBean().     factory.setScheduledExecutorTasks(new ScheduledExecutorTask[] { new ScheduledExecutorTask(runnable) }).     factory.afterPropertiesSet().     pauseToLetTaskStart(1).     factory.destroy().     verify(runnable).run(). }
false;public;0;18;;@Test public void testFixedRepeatedExecutionIsSetUpAndFiresCorrectly() throws Exception {     Assume.group(TestGroup.PERFORMANCE).     Runnable runnable = mock(Runnable.class).     ScheduledExecutorTask task = new ScheduledExecutorTask(runnable).     task.setPeriod(500).     task.setFixedRate(true).     ScheduledExecutorFactoryBean factory = new ScheduledExecutorFactoryBean().     factory.setScheduledExecutorTasks(new ScheduledExecutorTask[] { task }).     factory.afterPropertiesSet().     pauseToLetTaskStart(2).     factory.destroy().     verify(runnable, atLeast(2)).run(). }
false;public;0;20;;@Test public void testFixedRepeatedExecutionIsSetUpAndFiresCorrectlyAfterException() throws Exception {     Assume.group(TestGroup.PERFORMANCE).     Runnable runnable = mock(Runnable.class).     willThrow(new IllegalStateException()).given(runnable).run().     ScheduledExecutorTask task = new ScheduledExecutorTask(runnable).     task.setPeriod(500).     task.setFixedRate(true).     ScheduledExecutorFactoryBean factory = new ScheduledExecutorFactoryBean().     factory.setScheduledExecutorTasks(new ScheduledExecutorTask[] { task }).     factory.setContinueScheduledExecutionAfterException(true).     factory.afterPropertiesSet().     pauseToLetTaskStart(2).     factory.destroy().     verify(runnable, atLeast(2)).run(). }
false;public;0;19;;@Ignore @Test public void testWithInitialDelayRepeatedExecutionIsSetUpAndFiresCorrectly() throws Exception {     Runnable runnable = mock(Runnable.class).     ScheduledExecutorTask task = new ScheduledExecutorTask(runnable).     task.setPeriod(500).     // nice long wait...     task.setDelay(3000).     ScheduledExecutorFactoryBean factory = new ScheduledExecutorFactoryBean().     factory.setScheduledExecutorTasks(new ScheduledExecutorTask[] { task }).     factory.afterPropertiesSet().     pauseToLetTaskStart(1).     // invoke destroy before tasks have even been scheduled...     factory.destroy().     // Mock must never have been called     verify(runnable, never()).run(). }
false;public;0;21;;@Ignore @Test public void testWithInitialDelayRepeatedExecutionIsSetUpAndFiresCorrectlyAfterException() throws Exception {     Runnable runnable = mock(Runnable.class).     willThrow(new IllegalStateException()).given(runnable).run().     ScheduledExecutorTask task = new ScheduledExecutorTask(runnable).     task.setPeriod(500).     // nice long wait...     task.setDelay(3000).     ScheduledExecutorFactoryBean factory = new ScheduledExecutorFactoryBean().     factory.setScheduledExecutorTasks(new ScheduledExecutorTask[] { task }).     factory.setContinueScheduledExecutionAfterException(true).     factory.afterPropertiesSet().     pauseToLetTaskStart(1).     // invoke destroy before tasks have even been scheduled...     factory.destroy().     // Mock must never have been called     verify(runnable, never()).run(). }
false;protected;3;5;;@Override protected ScheduledExecutorService createExecutor(int poolSize, ThreadFactory threadFactory, RejectedExecutionHandler rejectedExecutionHandler) {     assertNotNull("Bah. the setThreadFactory(..) method must use a default ThreadFactory if a null arg is passed in.").     return super.createExecutor(poolSize, threadFactory, rejectedExecutionHandler). }
false;public;0;17;;@Test @SuppressWarnings("serial") public void testSettingThreadFactoryToNullForcesUseOfDefaultButIsOtherwiseCool() throws Exception {     ScheduledExecutorFactoryBean factory = new ScheduledExecutorFactoryBean() {          @Override         protected ScheduledExecutorService createExecutor(int poolSize, ThreadFactory threadFactory, RejectedExecutionHandler rejectedExecutionHandler) {             assertNotNull("Bah. the setThreadFactory(..) method must use a default ThreadFactory if a null arg is passed in.").             return super.createExecutor(poolSize, threadFactory, rejectedExecutionHandler).         }     }.     factory.setScheduledExecutorTasks(new ScheduledExecutorTask[] { new NoOpScheduledExecutorTask() }).     // the null must not propagate     factory.setThreadFactory(null).     factory.afterPropertiesSet().     factory.destroy(). }
false;protected;3;5;;@Override protected ScheduledExecutorService createExecutor(int poolSize, ThreadFactory threadFactory, RejectedExecutionHandler rejectedExecutionHandler) {     assertNotNull("Bah. the setRejectedExecutionHandler(..) method must use a default RejectedExecutionHandler if a null arg is passed in.").     return super.createExecutor(poolSize, threadFactory, rejectedExecutionHandler). }
false;public;0;17;;@Test @SuppressWarnings("serial") public void testSettingRejectedExecutionHandlerToNullForcesUseOfDefaultButIsOtherwiseCool() throws Exception {     ScheduledExecutorFactoryBean factory = new ScheduledExecutorFactoryBean() {          @Override         protected ScheduledExecutorService createExecutor(int poolSize, ThreadFactory threadFactory, RejectedExecutionHandler rejectedExecutionHandler) {             assertNotNull("Bah. the setRejectedExecutionHandler(..) method must use a default RejectedExecutionHandler if a null arg is passed in.").             return super.createExecutor(poolSize, threadFactory, rejectedExecutionHandler).         }     }.     factory.setScheduledExecutorTasks(new ScheduledExecutorTask[] { new NoOpScheduledExecutorTask() }).     // the null must not propagate     factory.setRejectedExecutionHandler(null).     factory.afterPropertiesSet().     factory.destroy(). }
false;public;0;5;;@Test public void testObjectTypeReportsCorrectType() throws Exception {     ScheduledExecutorFactoryBean factory = new ScheduledExecutorFactoryBean().     assertEquals(ScheduledExecutorService.class, factory.getObjectType()). }
false;private,static;1;7;;private static void pauseToLetTaskStart(int seconds) {     try {         Thread.sleep(seconds * 1000).     } catch (InterruptedException ignored) {     } }
