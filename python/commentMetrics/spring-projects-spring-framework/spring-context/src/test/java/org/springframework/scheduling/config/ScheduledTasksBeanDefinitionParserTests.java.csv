commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Before public void setup() {     this.context = new ClassPathXmlApplicationContext("scheduledTasksContext.xml", ScheduledTasksBeanDefinitionParserTests.class).     this.registrar = this.context.getBeansOfType(ScheduledTaskRegistrar.class).values().iterator().next().     this.testBean = this.context.getBean("testBean"). }
false;public;0;6;;@Test public void checkScheduler() {     Object schedulerBean = this.context.getBean("testScheduler").     Object schedulerRef = new DirectFieldAccessor(this.registrar).getPropertyValue("taskScheduler").     assertEquals(schedulerBean, schedulerRef). }
false;public;0;11;;@Test public void checkTarget() {     List<IntervalTask> tasks = (List<IntervalTask>) new DirectFieldAccessor(this.registrar).getPropertyValue("fixedRateTasks").     Runnable runnable = tasks.get(0).getRunnable().     assertEquals(ScheduledMethodRunnable.class, runnable.getClass()).     Object targetObject = ((ScheduledMethodRunnable) runnable).getTarget().     Method targetMethod = ((ScheduledMethodRunnable) runnable).getMethod().     assertEquals(this.testBean, targetObject).     assertEquals("test", targetMethod.getName()). }
false;public;0;10;;@Test public void fixedRateTasks() {     List<IntervalTask> tasks = (List<IntervalTask>) new DirectFieldAccessor(this.registrar).getPropertyValue("fixedRateTasks").     assertEquals(3, tasks.size()).     assertEquals(1000L, tasks.get(0).getInterval()).     assertEquals(2000L, tasks.get(1).getInterval()).     assertEquals(4000L, tasks.get(2).getInterval()).     assertEquals(500, tasks.get(2).getInitialDelay()). }
false;public;0;9;;@Test public void fixedDelayTasks() {     List<IntervalTask> tasks = (List<IntervalTask>) new DirectFieldAccessor(this.registrar).getPropertyValue("fixedDelayTasks").     assertEquals(2, tasks.size()).     assertEquals(3000L, tasks.get(0).getInterval()).     assertEquals(3500L, tasks.get(1).getInterval()).     assertEquals(250, tasks.get(1).getInitialDelay()). }
false;public;0;7;;@Test public void cronTasks() {     List<CronTask> tasks = (List<CronTask>) new DirectFieldAccessor(this.registrar).getPropertyValue("cronTasks").     assertEquals(1, tasks.size()).     assertEquals("*/4 * 9-17 * * MON-FRI", tasks.get(0).getExpression()). }
false;public;0;7;;@Test public void triggerTasks() {     List<TriggerTask> tasks = (List<TriggerTask>) new DirectFieldAccessor(this.registrar).getPropertyValue("triggerTasks").     assertEquals(1, tasks.size()).     assertThat(tasks.get(0).getTrigger(), instanceOf(TestTrigger.class)). }
false;public;0;2;;public void test() { }
false;public;1;4;;@Override public Date nextExecutionTime(TriggerContext triggerContext) {     return null. }
