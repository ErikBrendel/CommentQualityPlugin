# id;timestamp;commentText;codeText;commentWords;codeWords
BeanNameAutoProxyCreatorTests -> private void cglibAssertions(TestBean tb);1328020251;Also has counting before advice.;private void cglibAssertions(TestBean tb) {_		CountingBeforeAdvice cba = (CountingBeforeAdvice) beanFactory.getBean("countingBeforeAdvice")__		NopInterceptor nop = (NopInterceptor) beanFactory.getBean("nopInterceptor")__		assertEquals(0, cba.getCalls())__		assertEquals(0, nop.getCount())__		assertTrue(AopUtils.isCglibProxy(tb))__		int age = 5__		tb.setAge(age)__		assertEquals(age, tb.getAge())__		assertEquals(2, nop.getCount())__		assertEquals(2, cba.getCalls())_		_	};also,has,counting,before,advice;private,void,cglib,assertions,test,bean,tb,counting,before,advice,cba,counting,before,advice,bean,factory,get,bean,counting,before,advice,nop,interceptor,nop,nop,interceptor,bean,factory,get,bean,nop,interceptor,assert,equals,0,cba,get,calls,assert,equals,0,nop,get,count,assert,true,aop,utils,is,cglib,proxy,tb,int,age,5,tb,set,age,age,assert,equals,age,tb,get,age,assert,equals,2,nop,get,count,assert,equals,2,cba,get,calls
BeanNameAutoProxyCreatorTests -> private void cglibAssertions(TestBean tb);1356735495;Also has counting before advice.;private void cglibAssertions(TestBean tb) {_		CountingBeforeAdvice cba = (CountingBeforeAdvice) beanFactory.getBean("countingBeforeAdvice")__		NopInterceptor nop = (NopInterceptor) beanFactory.getBean("nopInterceptor")__		assertEquals(0, cba.getCalls())__		assertEquals(0, nop.getCount())__		assertTrue(AopUtils.isCglibProxy(tb))__		int age = 5__		tb.setAge(age)__		assertEquals(age, tb.getAge())__		assertEquals(2, nop.getCount())__		assertEquals(2, cba.getCalls())__	};also,has,counting,before,advice;private,void,cglib,assertions,test,bean,tb,counting,before,advice,cba,counting,before,advice,bean,factory,get,bean,counting,before,advice,nop,interceptor,nop,nop,interceptor,bean,factory,get,bean,nop,interceptor,assert,equals,0,cba,get,calls,assert,equals,0,nop,get,count,assert,true,aop,utils,is,cglib,proxy,tb,int,age,5,tb,set,age,age,assert,equals,age,tb,get,age,assert,equals,2,nop,get,count,assert,equals,2,cba,get,calls
BeanNameAutoProxyCreatorTests -> private void cglibAssertions(TestBean tb);1362408075;Also has counting before advice.;private void cglibAssertions(TestBean tb) {_		CountingBeforeAdvice cba = (CountingBeforeAdvice) beanFactory.getBean("countingBeforeAdvice")__		NopInterceptor nop = (NopInterceptor) beanFactory.getBean("nopInterceptor")__		assertEquals(0, cba.getCalls())__		assertEquals(0, nop.getCount())__		assertTrue(AopUtils.isCglibProxy(tb))__		int age = 5__		tb.setAge(age)__		assertEquals(age, tb.getAge())__		assertEquals(2, nop.getCount())__		assertEquals(2, cba.getCalls())__	};also,has,counting,before,advice;private,void,cglib,assertions,test,bean,tb,counting,before,advice,cba,counting,before,advice,bean,factory,get,bean,counting,before,advice,nop,interceptor,nop,nop,interceptor,bean,factory,get,bean,nop,interceptor,assert,equals,0,cba,get,calls,assert,equals,0,nop,get,count,assert,true,aop,utils,is,cglib,proxy,tb,int,age,5,tb,set,age,age,assert,equals,age,tb,get,age,assert,equals,2,nop,get,count,assert,equals,2,cba,get,calls
BeanNameAutoProxyCreatorTests -> private void cglibAssertions(TestBean tb);1413848647;Also has counting before advice.;private void cglibAssertions(TestBean tb) {_		CountingBeforeAdvice cba = (CountingBeforeAdvice) beanFactory.getBean("countingBeforeAdvice")__		NopInterceptor nop = (NopInterceptor) beanFactory.getBean("nopInterceptor")__		assertEquals(0, cba.getCalls())__		assertEquals(0, nop.getCount())__		assertTrue(AopUtils.isCglibProxy(tb))__		int age = 5__		tb.setAge(age)__		assertEquals(age, tb.getAge())__		assertEquals(2, nop.getCount())__		assertEquals(2, cba.getCalls())__	};also,has,counting,before,advice;private,void,cglib,assertions,test,bean,tb,counting,before,advice,cba,counting,before,advice,bean,factory,get,bean,counting,before,advice,nop,interceptor,nop,nop,interceptor,bean,factory,get,bean,nop,interceptor,assert,equals,0,cba,get,calls,assert,equals,0,nop,get,count,assert,true,aop,utils,is,cglib,proxy,tb,int,age,5,tb,set,age,age,assert,equals,age,tb,get,age,assert,equals,2,nop,get,count,assert,equals,2,cba,get,calls
BeanNameAutoProxyCreatorTests -> private void cglibAssertions(TestBean tb);1522716161;Also has counting before advice.;private void cglibAssertions(TestBean tb) {_		CountingBeforeAdvice cba = (CountingBeforeAdvice) beanFactory.getBean("countingBeforeAdvice")__		NopInterceptor nop = (NopInterceptor) beanFactory.getBean("nopInterceptor")__		assertEquals(0, cba.getCalls())__		assertEquals(0, nop.getCount())__		assertTrue(AopUtils.isCglibProxy(tb))__		int age = 5__		tb.setAge(age)__		assertEquals(age, tb.getAge())__		assertEquals(2, nop.getCount())__		assertEquals(2, cba.getCalls())__	};also,has,counting,before,advice;private,void,cglib,assertions,test,bean,tb,counting,before,advice,cba,counting,before,advice,bean,factory,get,bean,counting,before,advice,nop,interceptor,nop,nop,interceptor,bean,factory,get,bean,nop,interceptor,assert,equals,0,cba,get,calls,assert,equals,0,nop,get,count,assert,true,aop,utils,is,cglib,proxy,tb,int,age,5,tb,set,age,age,assert,equals,age,tb,get,age,assert,equals,2,nop,get,count,assert,equals,2,cba,get,calls
CreatesTestBean -> @Override 	public Class<?> getObjectType();1356735495;@see org.springframework.beans.factory.FactoryBean#getObjectType();@Override_	public Class<?> getObjectType() {_		return TestBean.class__	};see,org,springframework,beans,factory,factory,bean,get,object,type;override,public,class,get,object,type,return,test,bean,class
CreatesTestBean -> @Override 	public Class<?> getObjectType();1362408075;@see org.springframework.beans.factory.FactoryBean#getObjectType();@Override_	public Class<?> getObjectType() {_		return TestBean.class__	};see,org,springframework,beans,factory,factory,bean,get,object,type;override,public,class,get,object,type,return,test,bean,class
CreatesTestBean -> @Override 	public Class<?> getObjectType();1413848647;@see org.springframework.beans.factory.FactoryBean#getObjectType();@Override_	public Class<?> getObjectType() {_		return TestBean.class__	};see,org,springframework,beans,factory,factory,bean,get,object,type;override,public,class,get,object,type,return,test,bean,class
CreatesTestBean -> @Override 	public Class<?> getObjectType();1522716161;@see org.springframework.beans.factory.FactoryBean#getObjectType();@Override_	public Class<?> getObjectType() {_		return TestBean.class__	};see,org,springframework,beans,factory,factory,bean,get,object,type;override,public,class,get,object,type,return,test,bean,class
CreatesTestBean -> @Override 	public Object getObject() throws Exception;1356735495;@see org.springframework.beans.factory.FactoryBean#getObject();@Override_	public Object getObject() throws Exception {_		return new TestBean()__	};see,org,springframework,beans,factory,factory,bean,get,object;override,public,object,get,object,throws,exception,return,new,test,bean
CreatesTestBean -> @Override 	public Object getObject() throws Exception;1362408075;@see org.springframework.beans.factory.FactoryBean#getObject();@Override_	public Object getObject() throws Exception {_		return new TestBean()__	};see,org,springframework,beans,factory,factory,bean,get,object;override,public,object,get,object,throws,exception,return,new,test,bean
CreatesTestBean -> @Override 	public Object getObject() throws Exception;1413848647;@see org.springframework.beans.factory.FactoryBean#getObject();@Override_	public Object getObject() throws Exception {_		return new TestBean()__	};see,org,springframework,beans,factory,factory,bean,get,object;override,public,object,get,object,throws,exception,return,new,test,bean
CreatesTestBean -> @Override 	public Object getObject() throws Exception;1522716161;@see org.springframework.beans.factory.FactoryBean#getObject();@Override_	public Object getObject() throws Exception {_		return new TestBean()__	};see,org,springframework,beans,factory,factory,bean,get,object;override,public,object,get,object,throws,exception,return,new,test,bean
CreatesTestBean -> @Override 	public boolean isSingleton();1356735495;@see org.springframework.beans.factory.FactoryBean#isSingleton();@Override_	public boolean isSingleton() {_		return true__	};see,org,springframework,beans,factory,factory,bean,is,singleton;override,public,boolean,is,singleton,return,true
CreatesTestBean -> @Override 	public boolean isSingleton();1362408075;@see org.springframework.beans.factory.FactoryBean#isSingleton();@Override_	public boolean isSingleton() {_		return true__	};see,org,springframework,beans,factory,factory,bean,is,singleton;override,public,boolean,is,singleton,return,true
CreatesTestBean -> @Override 	public boolean isSingleton();1413848647;@see org.springframework.beans.factory.FactoryBean#isSingleton();@Override_	public boolean isSingleton() {_		return true__	};see,org,springframework,beans,factory,factory,bean,is,singleton;override,public,boolean,is,singleton,return,true
CreatesTestBean -> @Override 	public boolean isSingleton();1522716161;@see org.springframework.beans.factory.FactoryBean#isSingleton();@Override_	public boolean isSingleton() {_		return true__	};see,org,springframework,beans,factory,factory,bean,is,singleton;override,public,boolean,is,singleton,return,true
