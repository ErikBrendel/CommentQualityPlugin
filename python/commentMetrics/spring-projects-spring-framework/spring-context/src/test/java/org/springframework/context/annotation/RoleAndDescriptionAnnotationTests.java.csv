commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test public void onBeanMethod() {     AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext().     ctx.register(Config.class).     ctx.refresh().     assertThat("Expected bean to have ROLE_APPLICATION", ctx.getBeanDefinition("foo").getRole(), is(BeanDefinition.ROLE_APPLICATION)).     assertThat(ctx.getBeanDefinition("foo").getDescription(), is((Object) null)).     assertThat("Expected bean to have ROLE_INFRASTRUCTURE", ctx.getBeanDefinition("bar").getRole(), is(BeanDefinition.ROLE_INFRASTRUCTURE)).     assertThat(ctx.getBeanDefinition("bar").getDescription(), is("A Bean method with a role")). }
false;public;0;12;;@Test public void onComponentClass() {     AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext().     ctx.register(ComponentWithoutRole.class, ComponentWithRole.class).     ctx.refresh().     assertThat("Expected bean to have ROLE_APPLICATION", ctx.getBeanDefinition("componentWithoutRole").getRole(), is(BeanDefinition.ROLE_APPLICATION)).     assertThat(ctx.getBeanDefinition("componentWithoutRole").getDescription(), is((Object) null)).     assertThat("Expected bean to have ROLE_INFRASTRUCTURE", ctx.getBeanDefinition("componentWithRole").getRole(), is(BeanDefinition.ROLE_INFRASTRUCTURE)).     assertThat(ctx.getBeanDefinition("componentWithRole").getDescription(), is("A Component with a role")). }
false;public;0;12;;@Test public void viaComponentScanning() {     AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext().     ctx.scan("org.springframework.context.annotation.role").     ctx.refresh().     assertThat("Expected bean to have ROLE_APPLICATION", ctx.getBeanDefinition("componentWithoutRole").getRole(), is(BeanDefinition.ROLE_APPLICATION)).     assertThat(ctx.getBeanDefinition("componentWithoutRole").getDescription(), is((Object) null)).     assertThat("Expected bean to have ROLE_INFRASTRUCTURE", ctx.getBeanDefinition("componentWithRole").getRole(), is(BeanDefinition.ROLE_INFRASTRUCTURE)).     assertThat(ctx.getBeanDefinition("componentWithRole").getDescription(), is("A Component with a role")). }
false;public;0;4;;@Bean public String foo() {     return "foo". }
false;public;0;6;;@Bean @Role(BeanDefinition.ROLE_INFRASTRUCTURE) @Description("A Bean method with a role") public String bar() {     return "bar". }
