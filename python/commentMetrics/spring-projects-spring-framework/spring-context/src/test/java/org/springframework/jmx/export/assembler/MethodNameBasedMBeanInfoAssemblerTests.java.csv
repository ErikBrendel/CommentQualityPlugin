commented;modifiers;parameterAmount;loc;comment;code
false;protected;0;4;;@Override protected String getObjectName() {     return OBJECT_NAME. }
false;protected;0;4;;@Override protected int getExpectedOperationCount() {     return 5. }
false;protected;0;4;;@Override protected int getExpectedAttributeCount() {     return 2. }
false;protected;0;6;;@Override protected MBeanInfoAssembler getAssembler() {     MethodNameBasedMBeanInfoAssembler assembler = new MethodNameBasedMBeanInfoAssembler().     assembler.setManagedMethods("add", "myOperation", "getName", "setName", "getAge").     return assembler. }
false;public;0;8;;@Test public void testGetAgeIsReadOnly() throws Exception {     ModelMBeanInfo info = getMBeanInfoFromAssembler().     ModelMBeanAttributeInfo attr = info.getAttribute(AGE_ATTRIBUTE).     assertTrue(attr.isReadable()).     assertFalse(attr.isWritable()). }
false;public;0;7;;@Test public void testSetNameParameterIsNamed() throws Exception {     ModelMBeanInfo info = getMBeanInfoFromAssembler().     MBeanOperationInfo operationSetAge = info.getOperation("setName").     assertEquals("name", operationSetAge.getSignature()[0].getName()). }
false;protected;0;4;;@Override protected String getApplicationContextPath() {     return "org/springframework/jmx/export/assembler/methodNameAssembler.xml". }
