# id;timestamp;commentText;codeText;commentWords;codeWords
Spr10546Tests -> @Test 	public void enclosingConfigFirstParentDefinesBeanWithScanning();1368620665;Prior to fixing SPR-10546 this might have succeeded depending on the ordering the_classes were picked up. If they are picked up in the same order as_{@link #enclosingConfigFirstParentDefinesBean()} then it would fail. This test is_mostly for illustration purposes, but doesn't hurt to continue using it.__<p>We purposely use the {@link AEnclosingConfig} to make it alphabetically prior to the_{@link AEnclosingConfig.ChildConfig} which encourages this to occur with the_classpath scanning implementation being used by the author of this test.;@Test_	public void enclosingConfigFirstParentDefinesBeanWithScanning() {_		AnnotationConfigApplicationContext ctx= new AnnotationConfigApplicationContext()__		context = ctx__		ctx.scan(AEnclosingConfig.class.getPackage().getName())__		ctx.refresh()__		assertThat(context.getBean("myBean",String.class), equalTo("myBean"))__	};prior,to,fixing,spr,10546,this,might,have,succeeded,depending,on,the,ordering,the,classes,were,picked,up,if,they,are,picked,up,in,the,same,order,as,link,enclosing,config,first,parent,defines,bean,then,it,would,fail,this,test,is,mostly,for,illustration,purposes,but,doesn,t,hurt,to,continue,using,it,p,we,purposely,use,the,link,aenclosing,config,to,make,it,alphabetically,prior,to,the,link,aenclosing,config,child,config,which,encourages,this,to,occur,with,the,classpath,scanning,implementation,being,used,by,the,author,of,this,test;test,public,void,enclosing,config,first,parent,defines,bean,with,scanning,annotation,config,application,context,ctx,new,annotation,config,application,context,context,ctx,ctx,scan,aenclosing,config,class,get,package,get,name,ctx,refresh,assert,that,context,get,bean,my,bean,string,class,equal,to,my,bean
Spr10546Tests -> @Test 	public void enclosingConfigFirstParentDefinesBeanWithScanning();1385507683;Prior to fixing SPR-10546 this might have succeeded depending on the ordering the_classes were picked up. If they are picked up in the same order as_{@link #enclosingConfigFirstParentDefinesBean()} then it would fail. This test is_mostly for illustration purposes, but doesn't hurt to continue using it.__<p>We purposely use the {@link AEnclosingConfig} to make it alphabetically prior to the_{@link AEnclosingConfig.ChildConfig} which encourages this to occur with the_classpath scanning implementation being used by the author of this test.;@Test_	public void enclosingConfigFirstParentDefinesBeanWithScanning() {_		AnnotationConfigApplicationContext ctx= new AnnotationConfigApplicationContext()__		context = ctx__		ctx.scan(AEnclosingConfig.class.getPackage().getName())__		ctx.refresh()__		assertThat(context.getBean("myBean",String.class), equalTo("myBean"))__	};prior,to,fixing,spr,10546,this,might,have,succeeded,depending,on,the,ordering,the,classes,were,picked,up,if,they,are,picked,up,in,the,same,order,as,link,enclosing,config,first,parent,defines,bean,then,it,would,fail,this,test,is,mostly,for,illustration,purposes,but,doesn,t,hurt,to,continue,using,it,p,we,purposely,use,the,link,aenclosing,config,to,make,it,alphabetically,prior,to,the,link,aenclosing,config,child,config,which,encourages,this,to,occur,with,the,classpath,scanning,implementation,being,used,by,the,author,of,this,test;test,public,void,enclosing,config,first,parent,defines,bean,with,scanning,annotation,config,application,context,ctx,new,annotation,config,application,context,context,ctx,ctx,scan,aenclosing,config,class,get,package,get,name,ctx,refresh,assert,that,context,get,bean,my,bean,string,class,equal,to,my,bean
Spr10546Tests -> @Test 	public void enclosingConfigFirstParentDefinesBeanWithScanning();1413848647;Prior to fixing SPR-10546 this might have succeeded depending on the ordering the_classes were picked up. If they are picked up in the same order as_{@link #enclosingConfigFirstParentDefinesBean()} then it would fail. This test is_mostly for illustration purposes, but doesn't hurt to continue using it.__<p>We purposely use the {@link AEnclosingConfig} to make it alphabetically prior to the_{@link AEnclosingConfig.ChildConfig} which encourages this to occur with the_classpath scanning implementation being used by the author of this test.;@Test_	public void enclosingConfigFirstParentDefinesBeanWithScanning() {_		AnnotationConfigApplicationContext ctx= new AnnotationConfigApplicationContext()__		context = ctx__		ctx.scan(AEnclosingConfig.class.getPackage().getName())__		ctx.refresh()__		assertThat(context.getBean("myBean",String.class), equalTo("myBean"))__	};prior,to,fixing,spr,10546,this,might,have,succeeded,depending,on,the,ordering,the,classes,were,picked,up,if,they,are,picked,up,in,the,same,order,as,link,enclosing,config,first,parent,defines,bean,then,it,would,fail,this,test,is,mostly,for,illustration,purposes,but,doesn,t,hurt,to,continue,using,it,p,we,purposely,use,the,link,aenclosing,config,to,make,it,alphabetically,prior,to,the,link,aenclosing,config,child,config,which,encourages,this,to,occur,with,the,classpath,scanning,implementation,being,used,by,the,author,of,this,test;test,public,void,enclosing,config,first,parent,defines,bean,with,scanning,annotation,config,application,context,ctx,new,annotation,config,application,context,context,ctx,ctx,scan,aenclosing,config,class,get,package,get,name,ctx,refresh,assert,that,context,get,bean,my,bean,string,class,equal,to,my,bean
Spr10546Tests -> @Test 	public void enclosingConfigFirstParentDefinesBeanWithScanning();1458843770;Prior to fixing SPR-10546 this might have succeeded depending on the ordering the_classes were picked up. If they are picked up in the same order as_{@link #enclosingConfigFirstParentDefinesBean()} then it would fail. This test is_mostly for illustration purposes, but doesn't hurt to continue using it.__<p>We purposely use the {@link AEnclosingConfig} to make it alphabetically prior to the_{@link AEnclosingConfig.ChildConfig} which encourages this to occur with the_classpath scanning implementation being used by the author of this test.;@Test_	public void enclosingConfigFirstParentDefinesBeanWithScanning() {_		AnnotationConfigApplicationContext ctx= new AnnotationConfigApplicationContext()__		context = ctx__		ctx.scan(AEnclosingConfig.class.getPackage().getName())__		ctx.refresh()__		assertThat(context.getBean("myBean",String.class), equalTo("myBean"))__	};prior,to,fixing,spr,10546,this,might,have,succeeded,depending,on,the,ordering,the,classes,were,picked,up,if,they,are,picked,up,in,the,same,order,as,link,enclosing,config,first,parent,defines,bean,then,it,would,fail,this,test,is,mostly,for,illustration,purposes,but,doesn,t,hurt,to,continue,using,it,p,we,purposely,use,the,link,aenclosing,config,to,make,it,alphabetically,prior,to,the,link,aenclosing,config,child,config,which,encourages,this,to,occur,with,the,classpath,scanning,implementation,being,used,by,the,author,of,this,test;test,public,void,enclosing,config,first,parent,defines,bean,with,scanning,annotation,config,application,context,ctx,new,annotation,config,application,context,context,ctx,ctx,scan,aenclosing,config,class,get,package,get,name,ctx,refresh,assert,that,context,get,bean,my,bean,string,class,equal,to,my,bean
