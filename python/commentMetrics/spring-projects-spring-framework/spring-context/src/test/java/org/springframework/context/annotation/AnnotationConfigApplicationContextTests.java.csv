# id;timestamp;commentText;codeText;commentWords;codeWords
AnnotationConfigApplicationContextTests -> @Test 	public void explicitConfigClassBeanNameIsRespected();1328020251;Tests that specifying @Configuration(value="foo") results in registering_the configuration class with bean name 'foo'.;@Test_	public void explicitConfigClassBeanNameIsRespected() {_		AnnotationConfigApplicationContext context =_			new AnnotationConfigApplicationContext(ConfigWithCustomName.class)___		_		ConfigWithCustomName configObject =_			(ConfigWithCustomName) context.getBean("customConfigBeanName")__		assertNotNull(configObject)__	};tests,that,specifying,configuration,value,foo,results,in,registering,the,configuration,class,with,bean,name,foo;test,public,void,explicit,config,class,bean,name,is,respected,annotation,config,application,context,context,new,annotation,config,application,context,config,with,custom,name,class,config,with,custom,name,config,object,config,with,custom,name,context,get,bean,custom,config,bean,name,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void explicitConfigClassBeanNameIsRespected();1347368696;Tests that specifying @Configuration(value="foo") results in registering_the configuration class with bean name 'foo'.;@Test_	public void explicitConfigClassBeanNameIsRespected() {_		AnnotationConfigApplicationContext context =_			new AnnotationConfigApplicationContext(ConfigWithCustomName.class)___		_		ConfigWithCustomName configObject =_			(ConfigWithCustomName) context.getBean("customConfigBeanName")__		assertNotNull(configObject)__	};tests,that,specifying,configuration,value,foo,results,in,registering,the,configuration,class,with,bean,name,foo;test,public,void,explicit,config,class,bean,name,is,respected,annotation,config,application,context,context,new,annotation,config,application,context,config,with,custom,name,class,config,with,custom,name,config,object,config,with,custom,name,context,get,bean,custom,config,bean,name,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void explicitConfigClassBeanNameIsRespected();1356735495;Tests that specifying @Configuration(value="foo") results in registering_the configuration class with bean name 'foo'.;@Test_	public void explicitConfigClassBeanNameIsRespected() {_		AnnotationConfigApplicationContext context =_			new AnnotationConfigApplicationContext(ConfigWithCustomName.class)___		_		ConfigWithCustomName configObject =_			(ConfigWithCustomName) context.getBean("customConfigBeanName")__		assertNotNull(configObject)__	};tests,that,specifying,configuration,value,foo,results,in,registering,the,configuration,class,with,bean,name,foo;test,public,void,explicit,config,class,bean,name,is,respected,annotation,config,application,context,context,new,annotation,config,application,context,config,with,custom,name,class,config,with,custom,name,config,object,config,with,custom,name,context,get,bean,custom,config,bean,name,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void explicitConfigClassBeanNameIsRespected();1362408075;Tests that specifying @Configuration(value="foo") results in registering_the configuration class with bean name 'foo'.;@Test_	public void explicitConfigClassBeanNameIsRespected() {_		AnnotationConfigApplicationContext context =_			new AnnotationConfigApplicationContext(ConfigWithCustomName.class)___		_		ConfigWithCustomName configObject =_			(ConfigWithCustomName) context.getBean("customConfigBeanName")__		assertNotNull(configObject)__	};tests,that,specifying,configuration,value,foo,results,in,registering,the,configuration,class,with,bean,name,foo;test,public,void,explicit,config,class,bean,name,is,respected,annotation,config,application,context,context,new,annotation,config,application,context,config,with,custom,name,class,config,with,custom,name,config,object,config,with,custom,name,context,get,bean,custom,config,bean,name,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void explicitConfigClassBeanNameIsRespected();1446723029;Tests that specifying @Configuration(value="foo") results in registering_the configuration class with bean name 'foo'.;@Test_	public void explicitConfigClassBeanNameIsRespected() {_		ApplicationContext context = new AnnotationConfigApplicationContext(ConfigWithCustomName.class)___		_		ConfigWithCustomName configObject = (ConfigWithCustomName) context.getBean("customConfigBeanName")__		assertNotNull(configObject)__	};tests,that,specifying,configuration,value,foo,results,in,registering,the,configuration,class,with,bean,name,foo;test,public,void,explicit,config,class,bean,name,is,respected,application,context,context,new,annotation,config,application,context,config,with,custom,name,class,config,with,custom,name,config,object,config,with,custom,name,context,get,bean,custom,config,bean,name,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void explicitConfigClassBeanNameIsRespected();1477690745;Tests that specifying @Configuration(value="foo") results in registering_the configuration class with bean name 'foo'.;@Test_	public void explicitConfigClassBeanNameIsRespected() {_		ApplicationContext context = new AnnotationConfigApplicationContext(ConfigWithCustomName.class)___		_		ConfigWithCustomName configObject = (ConfigWithCustomName) context.getBean("customConfigBeanName")__		assertNotNull(configObject)__	};tests,that,specifying,configuration,value,foo,results,in,registering,the,configuration,class,with,bean,name,foo;test,public,void,explicit,config,class,bean,name,is,respected,application,context,context,new,annotation,config,application,context,config,with,custom,name,class,config,with,custom,name,config,object,config,with,custom,name,context,get,bean,custom,config,bean,name,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void explicitConfigClassBeanNameIsRespected();1482260264;Tests that specifying @Configuration(value="foo") results in registering_the configuration class with bean name 'foo'.;@Test_	public void explicitConfigClassBeanNameIsRespected() {_		ApplicationContext context = new AnnotationConfigApplicationContext(ConfigWithCustomName.class)___		_		ConfigWithCustomName configObject = (ConfigWithCustomName) context.getBean("customConfigBeanName")__		assertNotNull(configObject)__	};tests,that,specifying,configuration,value,foo,results,in,registering,the,configuration,class,with,bean,name,foo;test,public,void,explicit,config,class,bean,name,is,respected,application,context,context,new,annotation,config,application,context,config,with,custom,name,class,config,with,custom,name,config,object,config,with,custom,name,context,get,bean,custom,config,bean,name,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void explicitConfigClassBeanNameIsRespected();1482492407;Tests that specifying @Configuration(value="foo") results in registering_the configuration class with bean name 'foo'.;@Test_	public void explicitConfigClassBeanNameIsRespected() {_		ApplicationContext context = new AnnotationConfigApplicationContext(ConfigWithCustomName.class)___		_		ConfigWithCustomName configObject = (ConfigWithCustomName) context.getBean("customConfigBeanName")__		assertNotNull(configObject)__	};tests,that,specifying,configuration,value,foo,results,in,registering,the,configuration,class,with,bean,name,foo;test,public,void,explicit,config,class,bean,name,is,respected,application,context,context,new,annotation,config,application,context,config,with,custom,name,class,config,with,custom,name,config,object,config,with,custom,name,context,get,bean,custom,config,bean,name,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void explicitConfigClassBeanNameIsRespected();1491580888;Tests that specifying @Configuration(value="foo") results in registering_the configuration class with bean name 'foo'.;@Test_	public void explicitConfigClassBeanNameIsRespected() {_		ApplicationContext context = new AnnotationConfigApplicationContext(ConfigWithCustomName.class)___		_		ConfigWithCustomName configObject = (ConfigWithCustomName) context.getBean("customConfigBeanName")__		assertNotNull(configObject)__	};tests,that,specifying,configuration,value,foo,results,in,registering,the,configuration,class,with,bean,name,foo;test,public,void,explicit,config,class,bean,name,is,respected,application,context,context,new,annotation,config,application,context,config,with,custom,name,class,config,with,custom,name,config,object,config,with,custom,name,context,get,bean,custom,config,bean,name,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void explicitConfigClassBeanNameIsRespected();1531920366;Tests that specifying @Configuration(value="foo") results in registering_the configuration class with bean name 'foo'.;@Test_	public void explicitConfigClassBeanNameIsRespected() {_		ApplicationContext context = new AnnotationConfigApplicationContext(ConfigWithCustomName.class)___		_		ConfigWithCustomName configObject = (ConfigWithCustomName) context.getBean("customConfigBeanName")__		assertNotNull(configObject)__	};tests,that,specifying,configuration,value,foo,results,in,registering,the,configuration,class,with,bean,name,foo;test,public,void,explicit,config,class,bean,name,is,respected,application,context,context,new,annotation,config,application,context,config,with,custom,name,class,config,with,custom,name,config,object,config,with,custom,name,context,get,bean,custom,config,bean,name,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void explicitConfigClassBeanNameIsRespected();1531998860;Tests that specifying @Configuration(value="foo") results in registering_the configuration class with bean name 'foo'.;@Test_	public void explicitConfigClassBeanNameIsRespected() {_		ApplicationContext context = new AnnotationConfigApplicationContext(ConfigWithCustomName.class)___		_		ConfigWithCustomName configObject = (ConfigWithCustomName) context.getBean("customConfigBeanName")__		assertNotNull(configObject)__	};tests,that,specifying,configuration,value,foo,results,in,registering,the,configuration,class,with,bean,name,foo;test,public,void,explicit,config,class,bean,name,is,respected,application,context,context,new,annotation,config,application,context,config,with,custom,name,class,config,with,custom,name,config,object,config,with,custom,name,context,get,bean,custom,config,bean,name,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void explicitConfigClassBeanNameIsRespected();1532385723;Tests that specifying @Configuration(value="foo") results in registering_the configuration class with bean name 'foo'.;@Test_	public void explicitConfigClassBeanNameIsRespected() {_		ApplicationContext context = new AnnotationConfigApplicationContext(ConfigWithCustomName.class)___		_		ConfigWithCustomName configObject = (ConfigWithCustomName) context.getBean("customConfigBeanName")__		assertNotNull(configObject)__	};tests,that,specifying,configuration,value,foo,results,in,registering,the,configuration,class,with,bean,name,foo;test,public,void,explicit,config,class,bean,name,is,respected,application,context,context,new,annotation,config,application,context,config,with,custom,name,class,config,with,custom,name,config,object,config,with,custom,name,context,get,bean,custom,config,bean,name,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void explicitConfigClassBeanNameIsRespected();1537388383;Tests that specifying @Configuration(value="foo") results in registering_the configuration class with bean name 'foo'.;@Test_	public void explicitConfigClassBeanNameIsRespected() {_		ApplicationContext context = new AnnotationConfigApplicationContext(ConfigWithCustomName.class)___		_		ConfigWithCustomName configObject = (ConfigWithCustomName) context.getBean("customConfigBeanName")__		assertNotNull(configObject)__	};tests,that,specifying,configuration,value,foo,results,in,registering,the,configuration,class,with,bean,name,foo;test,public,void,explicit,config,class,bean,name,is,respected,application,context,context,new,annotation,config,application,context,config,with,custom,name,class,config,with,custom,name,config,object,config,with,custom,name,context,get,bean,custom,config,bean,name,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void explicitConfigClassBeanNameIsRespected();1537391140;Tests that specifying @Configuration(value="foo") results in registering_the configuration class with bean name 'foo'.;@Test_	public void explicitConfigClassBeanNameIsRespected() {_		ApplicationContext context = new AnnotationConfigApplicationContext(ConfigWithCustomName.class)___		_		ConfigWithCustomName configObject = (ConfigWithCustomName) context.getBean("customConfigBeanName")__		assertNotNull(configObject)__	};tests,that,specifying,configuration,value,foo,results,in,registering,the,configuration,class,with,bean,name,foo;test,public,void,explicit,config,class,bean,name,is,respected,application,context,context,new,annotation,config,application,context,config,with,custom,name,class,config,with,custom,name,config,object,config,with,custom,name,context,get,bean,custom,config,bean,name,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void defaultConfigClassBeanNameIsGeneratedProperly();1328020251;Tests that Configuration classes are registered according to convention_@see org.springframework.beans.factory.support.DefaultBeanNameGenerator#generateBeanName;@Test_	public void defaultConfigClassBeanNameIsGeneratedProperly() {_		AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(Config.class)___		_		Config configObject = (Config) context.getBean("annotationConfigApplicationContextTests.Config")__		assertNotNull(configObject)__	};tests,that,configuration,classes,are,registered,according,to,convention,see,org,springframework,beans,factory,support,default,bean,name,generator,generate,bean,name;test,public,void,default,config,class,bean,name,is,generated,properly,annotation,config,application,context,context,new,annotation,config,application,context,config,class,config,config,object,config,context,get,bean,annotation,config,application,context,tests,config,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void defaultConfigClassBeanNameIsGeneratedProperly();1347368696;Tests that Configuration classes are registered according to convention_@see org.springframework.beans.factory.support.DefaultBeanNameGenerator#generateBeanName;@Test_	public void defaultConfigClassBeanNameIsGeneratedProperly() {_		AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(Config.class)___		_		Config configObject = (Config) context.getBean("annotationConfigApplicationContextTests.Config")__		assertNotNull(configObject)__	};tests,that,configuration,classes,are,registered,according,to,convention,see,org,springframework,beans,factory,support,default,bean,name,generator,generate,bean,name;test,public,void,default,config,class,bean,name,is,generated,properly,annotation,config,application,context,context,new,annotation,config,application,context,config,class,config,config,object,config,context,get,bean,annotation,config,application,context,tests,config,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void defaultConfigClassBeanNameIsGeneratedProperly();1356735495;Tests that Configuration classes are registered according to convention_@see org.springframework.beans.factory.support.DefaultBeanNameGenerator#generateBeanName;@Test_	public void defaultConfigClassBeanNameIsGeneratedProperly() {_		AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(Config.class)___		_		Config configObject = (Config) context.getBean("annotationConfigApplicationContextTests.Config")__		assertNotNull(configObject)__	};tests,that,configuration,classes,are,registered,according,to,convention,see,org,springframework,beans,factory,support,default,bean,name,generator,generate,bean,name;test,public,void,default,config,class,bean,name,is,generated,properly,annotation,config,application,context,context,new,annotation,config,application,context,config,class,config,config,object,config,context,get,bean,annotation,config,application,context,tests,config,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void defaultConfigClassBeanNameIsGeneratedProperly();1362408075;Tests that Configuration classes are registered according to convention_@see org.springframework.beans.factory.support.DefaultBeanNameGenerator#generateBeanName;@Test_	public void defaultConfigClassBeanNameIsGeneratedProperly() {_		AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(Config.class)___		_		Config configObject = (Config) context.getBean("annotationConfigApplicationContextTests.Config")__		assertNotNull(configObject)__	};tests,that,configuration,classes,are,registered,according,to,convention,see,org,springframework,beans,factory,support,default,bean,name,generator,generate,bean,name;test,public,void,default,config,class,bean,name,is,generated,properly,annotation,config,application,context,context,new,annotation,config,application,context,config,class,config,config,object,config,context,get,bean,annotation,config,application,context,tests,config,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void defaultConfigClassBeanNameIsGeneratedProperly();1446723029;Tests that Configuration classes are registered according to convention_@see org.springframework.beans.factory.support.DefaultBeanNameGenerator#generateBeanName;@Test_	public void defaultConfigClassBeanNameIsGeneratedProperly() {_		ApplicationContext context = new AnnotationConfigApplicationContext(Config.class)___		_		Config configObject = (Config) context.getBean("annotationConfigApplicationContextTests.Config")__		assertNotNull(configObject)__	};tests,that,configuration,classes,are,registered,according,to,convention,see,org,springframework,beans,factory,support,default,bean,name,generator,generate,bean,name;test,public,void,default,config,class,bean,name,is,generated,properly,application,context,context,new,annotation,config,application,context,config,class,config,config,object,config,context,get,bean,annotation,config,application,context,tests,config,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void defaultConfigClassBeanNameIsGeneratedProperly();1477690745;Tests that Configuration classes are registered according to convention_@see org.springframework.beans.factory.support.DefaultBeanNameGenerator#generateBeanName;@Test_	public void defaultConfigClassBeanNameIsGeneratedProperly() {_		ApplicationContext context = new AnnotationConfigApplicationContext(Config.class)___		_		Config configObject = (Config) context.getBean("annotationConfigApplicationContextTests.Config")__		assertNotNull(configObject)__	};tests,that,configuration,classes,are,registered,according,to,convention,see,org,springframework,beans,factory,support,default,bean,name,generator,generate,bean,name;test,public,void,default,config,class,bean,name,is,generated,properly,application,context,context,new,annotation,config,application,context,config,class,config,config,object,config,context,get,bean,annotation,config,application,context,tests,config,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void defaultConfigClassBeanNameIsGeneratedProperly();1482260264;Tests that Configuration classes are registered according to convention_@see org.springframework.beans.factory.support.DefaultBeanNameGenerator#generateBeanName;@Test_	public void defaultConfigClassBeanNameIsGeneratedProperly() {_		ApplicationContext context = new AnnotationConfigApplicationContext(Config.class)___		_		Config configObject = (Config) context.getBean("annotationConfigApplicationContextTests.Config")__		assertNotNull(configObject)__	};tests,that,configuration,classes,are,registered,according,to,convention,see,org,springframework,beans,factory,support,default,bean,name,generator,generate,bean,name;test,public,void,default,config,class,bean,name,is,generated,properly,application,context,context,new,annotation,config,application,context,config,class,config,config,object,config,context,get,bean,annotation,config,application,context,tests,config,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void defaultConfigClassBeanNameIsGeneratedProperly();1482492407;Tests that Configuration classes are registered according to convention_@see org.springframework.beans.factory.support.DefaultBeanNameGenerator#generateBeanName;@Test_	public void defaultConfigClassBeanNameIsGeneratedProperly() {_		ApplicationContext context = new AnnotationConfigApplicationContext(Config.class)___		_		Config configObject = (Config) context.getBean("annotationConfigApplicationContextTests.Config")__		assertNotNull(configObject)__	};tests,that,configuration,classes,are,registered,according,to,convention,see,org,springframework,beans,factory,support,default,bean,name,generator,generate,bean,name;test,public,void,default,config,class,bean,name,is,generated,properly,application,context,context,new,annotation,config,application,context,config,class,config,config,object,config,context,get,bean,annotation,config,application,context,tests,config,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void defaultConfigClassBeanNameIsGeneratedProperly();1491580888;Tests that Configuration classes are registered according to convention_@see org.springframework.beans.factory.support.DefaultBeanNameGenerator#generateBeanName;@Test_	public void defaultConfigClassBeanNameIsGeneratedProperly() {_		ApplicationContext context = new AnnotationConfigApplicationContext(Config.class)___		_		Config configObject = (Config) context.getBean("annotationConfigApplicationContextTests.Config")__		assertNotNull(configObject)__	};tests,that,configuration,classes,are,registered,according,to,convention,see,org,springframework,beans,factory,support,default,bean,name,generator,generate,bean,name;test,public,void,default,config,class,bean,name,is,generated,properly,application,context,context,new,annotation,config,application,context,config,class,config,config,object,config,context,get,bean,annotation,config,application,context,tests,config,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void defaultConfigClassBeanNameIsGeneratedProperly();1531920366;Tests that Configuration classes are registered according to convention_@see org.springframework.beans.factory.support.DefaultBeanNameGenerator#generateBeanName;@Test_	public void defaultConfigClassBeanNameIsGeneratedProperly() {_		ApplicationContext context = new AnnotationConfigApplicationContext(Config.class)___		_		Config configObject = (Config) context.getBean("annotationConfigApplicationContextTests.Config")__		assertNotNull(configObject)__	};tests,that,configuration,classes,are,registered,according,to,convention,see,org,springframework,beans,factory,support,default,bean,name,generator,generate,bean,name;test,public,void,default,config,class,bean,name,is,generated,properly,application,context,context,new,annotation,config,application,context,config,class,config,config,object,config,context,get,bean,annotation,config,application,context,tests,config,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void defaultConfigClassBeanNameIsGeneratedProperly();1531998860;Tests that Configuration classes are registered according to convention_@see org.springframework.beans.factory.support.DefaultBeanNameGenerator#generateBeanName;@Test_	public void defaultConfigClassBeanNameIsGeneratedProperly() {_		ApplicationContext context = new AnnotationConfigApplicationContext(Config.class)___		_		Config configObject = (Config) context.getBean("annotationConfigApplicationContextTests.Config")__		assertNotNull(configObject)__	};tests,that,configuration,classes,are,registered,according,to,convention,see,org,springframework,beans,factory,support,default,bean,name,generator,generate,bean,name;test,public,void,default,config,class,bean,name,is,generated,properly,application,context,context,new,annotation,config,application,context,config,class,config,config,object,config,context,get,bean,annotation,config,application,context,tests,config,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void defaultConfigClassBeanNameIsGeneratedProperly();1532385723;Tests that Configuration classes are registered according to convention_@see org.springframework.beans.factory.support.DefaultBeanNameGenerator#generateBeanName;@Test_	public void defaultConfigClassBeanNameIsGeneratedProperly() {_		ApplicationContext context = new AnnotationConfigApplicationContext(Config.class)___		_		Config configObject = (Config) context.getBean("annotationConfigApplicationContextTests.Config")__		assertNotNull(configObject)__	};tests,that,configuration,classes,are,registered,according,to,convention,see,org,springframework,beans,factory,support,default,bean,name,generator,generate,bean,name;test,public,void,default,config,class,bean,name,is,generated,properly,application,context,context,new,annotation,config,application,context,config,class,config,config,object,config,context,get,bean,annotation,config,application,context,tests,config,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void defaultConfigClassBeanNameIsGeneratedProperly();1537388383;Tests that Configuration classes are registered according to convention_@see org.springframework.beans.factory.support.DefaultBeanNameGenerator#generateBeanName;@Test_	public void defaultConfigClassBeanNameIsGeneratedProperly() {_		ApplicationContext context = new AnnotationConfigApplicationContext(Config.class)___		_		Config configObject = (Config) context.getBean("annotationConfigApplicationContextTests.Config")__		assertNotNull(configObject)__	};tests,that,configuration,classes,are,registered,according,to,convention,see,org,springframework,beans,factory,support,default,bean,name,generator,generate,bean,name;test,public,void,default,config,class,bean,name,is,generated,properly,application,context,context,new,annotation,config,application,context,config,class,config,config,object,config,context,get,bean,annotation,config,application,context,tests,config,assert,not,null,config,object
AnnotationConfigApplicationContextTests -> @Test 	public void defaultConfigClassBeanNameIsGeneratedProperly();1537391140;Tests that Configuration classes are registered according to convention_@see org.springframework.beans.factory.support.DefaultBeanNameGenerator#generateBeanName;@Test_	public void defaultConfigClassBeanNameIsGeneratedProperly() {_		ApplicationContext context = new AnnotationConfigApplicationContext(Config.class)___		_		Config configObject = (Config) context.getBean("annotationConfigApplicationContextTests.Config")__		assertNotNull(configObject)__	};tests,that,configuration,classes,are,registered,according,to,convention,see,org,springframework,beans,factory,support,default,bean,name,generator,generate,bean,name;test,public,void,default,config,class,bean,name,is,generated,properly,application,context,context,new,annotation,config,application,context,config,class,config,config,object,config,context,get,bean,annotation,config,application,context,tests,config,assert,not,null,config,object
