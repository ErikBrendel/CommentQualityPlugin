commented;modifiers;parameterAmount;loc;comment;code
false;public;0;8;;@Test public void getCandidateTypes() {     CandidateComponentsIndex index = new CandidateComponentsIndex(Collections.singletonList(createSampleProperties())).     Set<String> actual = index.getCandidateTypes("com.example.service", "service").     assertThat(actual, containsInAnyOrder("com.example.service.One", "com.example.service.sub.Two", "com.example.service.Three")). }
false;public;0;7;;@Test public void getCandidateTypesSubPackage() {     CandidateComponentsIndex index = new CandidateComponentsIndex(Collections.singletonList(createSampleProperties())).     Set<String> actual = index.getCandidateTypes("com.example.service.sub", "service").     assertThat(actual, containsInAnyOrder("com.example.service.sub.Two")). }
false;public;0;7;;@Test public void getCandidateTypesSubPackageNoMatch() {     CandidateComponentsIndex index = new CandidateComponentsIndex(Collections.singletonList(createSampleProperties())).     Set<String> actual = index.getCandidateTypes("com.example.service.none", "service").     assertThat(actual, hasSize(0)). }
false;public;0;7;;@Test public void getCandidateTypesNoMatch() {     CandidateComponentsIndex index = new CandidateComponentsIndex(Collections.singletonList(createSampleProperties())).     Set<String> actual = index.getCandidateTypes("com.example.service", "entity").     assertThat(actual, hasSize(0)). }
false;public;0;10;;@Test public void mergeCandidateStereotypes() {     CandidateComponentsIndex index = new CandidateComponentsIndex(Arrays.asList(createProperties("com.example.Foo", "service"), createProperties("com.example.Foo", "entity"))).     assertThat(index.getCandidateTypes("com.example", "service"), contains("com.example.Foo")).     assertThat(index.getCandidateTypes("com.example", "entity"), contains("com.example.Foo")). }
false;private,static;2;5;;private static Properties createProperties(String key, String stereotypes) {     Properties properties = new Properties().     properties.put(key, String.join(",", stereotypes)).     return properties. }
false;private,static;0;8;;private static Properties createSampleProperties() {     Properties properties = new Properties().     properties.put("com.example.service.One", "service").     properties.put("com.example.service.sub.Two", "service").     properties.put("com.example.service.Three", "service").     properties.put("com.example.domain.Four", "entity").     return properties. }
