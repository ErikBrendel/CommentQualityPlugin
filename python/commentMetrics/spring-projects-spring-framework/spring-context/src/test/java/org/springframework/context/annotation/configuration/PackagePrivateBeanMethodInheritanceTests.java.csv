commented;modifiers;parameterAmount;loc;comment;code
false;public;0;10;;@Test public void repro() {     AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext().     ctx.register(ReproConfig.class).     ctx.refresh().     Foo foo1 = ctx.getBean("foo1", Foo.class).     Foo foo2 = ctx.getBean("foo2", Foo.class).     // <-- i.e. @Bean was registered     ctx.getBean("packagePrivateBar", Bar.class).     // <-- i.e. @Bean *not* enhanced     assertThat(foo1.bar, not(is(foo2.bar))). }
false;public;0;10;;@Test public void workaround() {     AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext().     ctx.register(WorkaroundConfig.class).     ctx.refresh().     Foo foo1 = ctx.getBean("foo1", Foo.class).     Foo foo2 = ctx.getBean("foo2", Foo.class).     // <-- i.e. @Bean was registered     ctx.getBean("protectedBar", Bar.class).     // <-- i.e. @Bean *was* enhanced     assertThat(foo1.bar, is(foo2.bar)). }
false;public;0;4;;@Bean public Foo foo1() {     return new Foo(reproBar()). }
false;public;0;4;;@Bean public Foo foo2() {     return new Foo(reproBar()). }
false;public;0;4;;@Bean public Foo foo1() {     return new Foo(workaroundBar()). }
false;public;0;4;;@Bean public Foo foo2() {     return new Foo(workaroundBar()). }
