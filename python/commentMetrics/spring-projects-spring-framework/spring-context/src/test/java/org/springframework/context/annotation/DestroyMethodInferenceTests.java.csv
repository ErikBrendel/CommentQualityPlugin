commented;modifiers;parameterAmount;loc;comment;code
false;public;0;36;;@Test public void beanMethods() {     ConfigurableApplicationContext ctx = new AnnotationConfigApplicationContext(Config.class).     WithExplicitDestroyMethod c0 = ctx.getBean(WithExplicitDestroyMethod.class).     WithLocalCloseMethod c1 = ctx.getBean("c1", WithLocalCloseMethod.class).     WithLocalCloseMethod c2 = ctx.getBean("c2", WithLocalCloseMethod.class).     WithInheritedCloseMethod c3 = ctx.getBean("c3", WithInheritedCloseMethod.class).     WithInheritedCloseMethod c4 = ctx.getBean("c4", WithInheritedCloseMethod.class).     WithInheritedCloseMethod c5 = ctx.getBean("c5", WithInheritedCloseMethod.class).     WithNoCloseMethod c6 = ctx.getBean("c6", WithNoCloseMethod.class).     WithLocalShutdownMethod c7 = ctx.getBean("c7", WithLocalShutdownMethod.class).     WithInheritedCloseMethod c8 = ctx.getBean("c8", WithInheritedCloseMethod.class).     WithDisposableBean c9 = ctx.getBean("c9", WithDisposableBean.class).     assertThat(c0.closed, is(false)).     assertThat(c1.closed, is(false)).     assertThat(c2.closed, is(false)).     assertThat(c3.closed, is(false)).     assertThat(c4.closed, is(false)).     assertThat(c5.closed, is(false)).     assertThat(c6.closed, is(false)).     assertThat(c7.closed, is(false)).     assertThat(c8.closed, is(false)).     assertThat(c9.closed, is(false)).     ctx.close().     assertThat("c0", c0.closed, is(true)).     assertThat("c1", c1.closed, is(true)).     assertThat("c2", c2.closed, is(true)).     assertThat("c3", c3.closed, is(true)).     assertThat("c4", c4.closed, is(true)).     assertThat("c5", c5.closed, is(true)).     assertThat("c6", c6.closed, is(false)).     assertThat("c7", c7.closed, is(true)).     assertThat("c8", c8.closed, is(false)).     assertThat("c9", c9.closed, is(true)). }
false;public;0;21;;@Test public void xml() {     ConfigurableApplicationContext ctx = new GenericXmlApplicationContext(getClass(), "DestroyMethodInferenceTests-context.xml").     WithLocalCloseMethod x1 = ctx.getBean("x1", WithLocalCloseMethod.class).     WithLocalCloseMethod x2 = ctx.getBean("x2", WithLocalCloseMethod.class).     WithLocalCloseMethod x3 = ctx.getBean("x3", WithLocalCloseMethod.class).     WithNoCloseMethod x4 = ctx.getBean("x4", WithNoCloseMethod.class).     WithInheritedCloseMethod x8 = ctx.getBean("x8", WithInheritedCloseMethod.class).     assertThat(x1.closed, is(false)).     assertThat(x2.closed, is(false)).     assertThat(x3.closed, is(false)).     assertThat(x4.closed, is(false)).     ctx.close().     assertThat(x1.closed, is(false)).     assertThat(x2.closed, is(true)).     assertThat(x3.closed, is(true)).     assertThat(x4.closed, is(false)).     assertThat(x8.closed, is(false)). }
false;public;0;4;;@Bean(destroyMethod = "explicitClose") public WithExplicitDestroyMethod c0() {     return new WithExplicitDestroyMethod(). }
false;public;0;4;;@Bean public WithLocalCloseMethod c1() {     return new WithLocalCloseMethod(). }
false;public;0;4;;@Bean public Object c2() {     return new WithLocalCloseMethod(). }
false;public;0;4;;@Bean public WithInheritedCloseMethod c3() {     return new WithInheritedCloseMethod(). }
false;public;0;4;;@Bean public Closeable c4() {     return new WithInheritedCloseMethod(). }
false;public;0;4;;@Override public void close() {     throw new IllegalStateException("close() should not be called"). }
false;public;0;4;;@SuppressWarnings("unused") public void other() {     this.closed = true. }
false;public;0;13;;@Bean(destroyMethod = "other") public WithInheritedCloseMethod c5() {     return new WithInheritedCloseMethod() {          @Override         public void close() {             throw new IllegalStateException("close() should not be called").         }          @SuppressWarnings("unused")         public void other() {             this.closed = true.         }     }. }
false;public;0;4;;@Bean public WithNoCloseMethod c6() {     return new WithNoCloseMethod(). }
false;public;0;4;;@Bean public WithLocalShutdownMethod c7() {     return new WithLocalShutdownMethod(). }
false;public;0;4;;@Bean(destroyMethod = "") public WithInheritedCloseMethod c8() {     return new WithInheritedCloseMethod(). }
false;public;0;4;;@Bean(destroyMethod = "") public WithDisposableBean c9() {     return new WithDisposableBean(). }
false;public;0;3;;public void explicitClose() {     closed = true. }
false;public;0;3;;public void close() {     closed = true. }
false;public;0;4;;@Override public void close() {     closed = true. }
false;public;0;4;;@Override public void destroy() {     closed = true. }
false;public;0;3;;public void shutdown() {     closed = true. }
