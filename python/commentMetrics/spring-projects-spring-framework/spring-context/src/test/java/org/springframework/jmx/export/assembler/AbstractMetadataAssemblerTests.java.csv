# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractMetadataAssemblerTests -> public void testWithOnlyGetter() throws Exception;1328020251;Tests the situation where the property only has a setter.;public void testWithOnlyGetter() throws Exception {_		ModelMBeanInfo info = getMBeanInfoFromAssembler()__		ModelMBeanAttributeInfo attr = info.getAttribute("Superman")__		assertNotNull("Attribute should not be null", attr)__	};tests,the,situation,where,the,property,only,has,a,setter;public,void,test,with,only,getter,throws,exception,model,mbean,info,info,get,mbean,info,from,assembler,model,mbean,attribute,info,attr,info,get,attribute,superman,assert,not,null,attribute,should,not,be,null,attr
AbstractMetadataAssemblerTests -> public void testWithOnlyGetter() throws Exception;1356735495;Tests the situation where the property only has a setter.;public void testWithOnlyGetter() throws Exception {_		ModelMBeanInfo info = getMBeanInfoFromAssembler()__		ModelMBeanAttributeInfo attr = info.getAttribute("Superman")__		assertNotNull("Attribute should not be null", attr)__	};tests,the,situation,where,the,property,only,has,a,setter;public,void,test,with,only,getter,throws,exception,model,mbean,info,info,get,mbean,info,from,assembler,model,mbean,attribute,info,attr,info,get,attribute,superman,assert,not,null,attribute,should,not,be,null,attr
AbstractMetadataAssemblerTests -> @Test 	public void testWithOnlySetter() throws Exception;1362408075;Tests the situation where the property only has a getter.;@Test_	public void testWithOnlySetter() throws Exception {_		ModelMBeanInfo inf = getMBeanInfoFromAssembler()__		ModelMBeanAttributeInfo attr = inf.getAttribute("NickName")__		assertNotNull("Attribute should not be null", attr)__	};tests,the,situation,where,the,property,only,has,a,getter;test,public,void,test,with,only,setter,throws,exception,model,mbean,info,inf,get,mbean,info,from,assembler,model,mbean,attribute,info,attr,inf,get,attribute,nick,name,assert,not,null,attribute,should,not,be,null,attr
AbstractMetadataAssemblerTests -> @Test 	public void testWithOnlySetter() throws Exception;1402388547;Tests the situation where the property only has a getter.;@Test_	public void testWithOnlySetter() throws Exception {_		ModelMBeanInfo inf = getMBeanInfoFromAssembler()__		ModelMBeanAttributeInfo attr = inf.getAttribute("NickName")__		assertNotNull("Attribute should not be null", attr)__	};tests,the,situation,where,the,property,only,has,a,getter;test,public,void,test,with,only,setter,throws,exception,model,mbean,info,inf,get,mbean,info,from,assembler,model,mbean,attribute,info,attr,inf,get,attribute,nick,name,assert,not,null,attribute,should,not,be,null,attr
AbstractMetadataAssemblerTests -> @Test 	public void testWithOnlySetter() throws Exception;1413848647;Tests the situation where the property only has a getter.;@Test_	public void testWithOnlySetter() throws Exception {_		ModelMBeanInfo inf = getMBeanInfoFromAssembler()__		ModelMBeanAttributeInfo attr = inf.getAttribute("NickName")__		assertNotNull("Attribute should not be null", attr)__	};tests,the,situation,where,the,property,only,has,a,getter;test,public,void,test,with,only,setter,throws,exception,model,mbean,info,inf,get,mbean,info,from,assembler,model,mbean,attribute,info,attr,inf,get,attribute,nick,name,assert,not,null,attribute,should,not,be,null,attr
AbstractMetadataAssemblerTests -> @Test 	public void testWithOnlySetter() throws Exception;1460400578;Tests the situation where the property only has a getter.;@Test_	public void testWithOnlySetter() throws Exception {_		ModelMBeanInfo inf = getMBeanInfoFromAssembler()__		ModelMBeanAttributeInfo attr = inf.getAttribute("NickName")__		assertNotNull("Attribute should not be null", attr)__	};tests,the,situation,where,the,property,only,has,a,getter;test,public,void,test,with,only,setter,throws,exception,model,mbean,info,inf,get,mbean,info,from,assembler,model,mbean,attribute,info,attr,inf,get,attribute,nick,name,assert,not,null,attribute,should,not,be,null,attr
AbstractMetadataAssemblerTests -> @Test 	public void testWithOnlySetter() throws Exception;1467730834;Tests the situation where the property only has a getter.;@Test_	public void testWithOnlySetter() throws Exception {_		ModelMBeanInfo inf = getMBeanInfoFromAssembler()__		ModelMBeanAttributeInfo attr = inf.getAttribute("NickName")__		assertNotNull("Attribute should not be null", attr)__	};tests,the,situation,where,the,property,only,has,a,getter;test,public,void,test,with,only,setter,throws,exception,model,mbean,info,inf,get,mbean,info,from,assembler,model,mbean,attribute,info,attr,inf,get,attribute,nick,name,assert,not,null,attribute,should,not,be,null,attr
AbstractMetadataAssemblerTests -> public void testReadOnlyAttribute() throws Exception;1328020251;Tests the situation where the attribute is only defined on the getter.;public void testReadOnlyAttribute() throws Exception {_		ModelMBeanInfo inf = getMBeanInfoFromAssembler()__		ModelMBeanAttributeInfo attr = inf.getAttribute(AGE_ATTRIBUTE)__		assertFalse("The age attribute should not be writable", attr.isWritable())__	};tests,the,situation,where,the,attribute,is,only,defined,on,the,getter;public,void,test,read,only,attribute,throws,exception,model,mbean,info,inf,get,mbean,info,from,assembler,model,mbean,attribute,info,attr,inf,get,attribute,assert,false,the,age,attribute,should,not,be,writable,attr,is,writable
AbstractMetadataAssemblerTests -> public void testReadOnlyAttribute() throws Exception;1356735495;Tests the situation where the attribute is only defined on the getter.;public void testReadOnlyAttribute() throws Exception {_		ModelMBeanInfo inf = getMBeanInfoFromAssembler()__		ModelMBeanAttributeInfo attr = inf.getAttribute(AGE_ATTRIBUTE)__		assertFalse("The age attribute should not be writable", attr.isWritable())__	};tests,the,situation,where,the,attribute,is,only,defined,on,the,getter;public,void,test,read,only,attribute,throws,exception,model,mbean,info,inf,get,mbean,info,from,assembler,model,mbean,attribute,info,attr,inf,get,attribute,assert,false,the,age,attribute,should,not,be,writable,attr,is,writable
AbstractMetadataAssemblerTests -> public void testWithOnlySetter() throws Exception;1328020251;Tests the situation where the property only has a getter.;public void testWithOnlySetter() throws Exception {_		ModelMBeanInfo inf = getMBeanInfoFromAssembler()__		ModelMBeanAttributeInfo attr = inf.getAttribute("NickName")__		assertNotNull("Attribute should not be null", attr)__	};tests,the,situation,where,the,property,only,has,a,getter;public,void,test,with,only,setter,throws,exception,model,mbean,info,inf,get,mbean,info,from,assembler,model,mbean,attribute,info,attr,inf,get,attribute,nick,name,assert,not,null,attribute,should,not,be,null,attr
AbstractMetadataAssemblerTests -> public void testWithOnlySetter() throws Exception;1356735495;Tests the situation where the property only has a getter.;public void testWithOnlySetter() throws Exception {_		ModelMBeanInfo inf = getMBeanInfoFromAssembler()__		ModelMBeanAttributeInfo attr = inf.getAttribute("NickName")__		assertNotNull("Attribute should not be null", attr)__	};tests,the,situation,where,the,property,only,has,a,getter;public,void,test,with,only,setter,throws,exception,model,mbean,info,inf,get,mbean,info,from,assembler,model,mbean,attribute,info,attr,inf,get,attribute,nick,name,assert,not,null,attribute,should,not,be,null,attr
AbstractMetadataAssemblerTests -> @Test 	public void testWithOnlyGetter() throws Exception;1362408075;Tests the situation where the property only has a setter.;@Test_	public void testWithOnlyGetter() throws Exception {_		ModelMBeanInfo info = getMBeanInfoFromAssembler()__		ModelMBeanAttributeInfo attr = info.getAttribute("Superman")__		assertNotNull("Attribute should not be null", attr)__	};tests,the,situation,where,the,property,only,has,a,setter;test,public,void,test,with,only,getter,throws,exception,model,mbean,info,info,get,mbean,info,from,assembler,model,mbean,attribute,info,attr,info,get,attribute,superman,assert,not,null,attribute,should,not,be,null,attr
AbstractMetadataAssemblerTests -> @Test 	public void testWithOnlyGetter() throws Exception;1402388547;Tests the situation where the property only has a setter.;@Test_	public void testWithOnlyGetter() throws Exception {_		ModelMBeanInfo info = getMBeanInfoFromAssembler()__		ModelMBeanAttributeInfo attr = info.getAttribute("Superman")__		assertNotNull("Attribute should not be null", attr)__	};tests,the,situation,where,the,property,only,has,a,setter;test,public,void,test,with,only,getter,throws,exception,model,mbean,info,info,get,mbean,info,from,assembler,model,mbean,attribute,info,attr,info,get,attribute,superman,assert,not,null,attribute,should,not,be,null,attr
AbstractMetadataAssemblerTests -> @Test 	public void testWithOnlyGetter() throws Exception;1413848647;Tests the situation where the property only has a setter.;@Test_	public void testWithOnlyGetter() throws Exception {_		ModelMBeanInfo info = getMBeanInfoFromAssembler()__		ModelMBeanAttributeInfo attr = info.getAttribute("Superman")__		assertNotNull("Attribute should not be null", attr)__	};tests,the,situation,where,the,property,only,has,a,setter;test,public,void,test,with,only,getter,throws,exception,model,mbean,info,info,get,mbean,info,from,assembler,model,mbean,attribute,info,attr,info,get,attribute,superman,assert,not,null,attribute,should,not,be,null,attr
AbstractMetadataAssemblerTests -> @Test 	public void testWithOnlyGetter() throws Exception;1460400578;Tests the situation where the property only has a setter.;@Test_	public void testWithOnlyGetter() throws Exception {_		ModelMBeanInfo info = getMBeanInfoFromAssembler()__		ModelMBeanAttributeInfo attr = info.getAttribute("Superman")__		assertNotNull("Attribute should not be null", attr)__	};tests,the,situation,where,the,property,only,has,a,setter;test,public,void,test,with,only,getter,throws,exception,model,mbean,info,info,get,mbean,info,from,assembler,model,mbean,attribute,info,attr,info,get,attribute,superman,assert,not,null,attribute,should,not,be,null,attr
AbstractMetadataAssemblerTests -> @Test 	public void testWithOnlyGetter() throws Exception;1467730834;Tests the situation where the property only has a setter.;@Test_	public void testWithOnlyGetter() throws Exception {_		ModelMBeanInfo info = getMBeanInfoFromAssembler()__		ModelMBeanAttributeInfo attr = info.getAttribute("Superman")__		assertNotNull("Attribute should not be null", attr)__	};tests,the,situation,where,the,property,only,has,a,setter;test,public,void,test,with,only,getter,throws,exception,model,mbean,info,info,get,mbean,info,from,assembler,model,mbean,attribute,info,attr,info,get,attribute,superman,assert,not,null,attribute,should,not,be,null,attr
AbstractMetadataAssemblerTests -> @Test 	public void testReadOnlyAttribute() throws Exception;1362408075;Tests the situation where the attribute is only defined on the getter.;@Test_	public void testReadOnlyAttribute() throws Exception {_		ModelMBeanInfo inf = getMBeanInfoFromAssembler()__		ModelMBeanAttributeInfo attr = inf.getAttribute(AGE_ATTRIBUTE)__		assertFalse("The age attribute should not be writable", attr.isWritable())__	};tests,the,situation,where,the,attribute,is,only,defined,on,the,getter;test,public,void,test,read,only,attribute,throws,exception,model,mbean,info,inf,get,mbean,info,from,assembler,model,mbean,attribute,info,attr,inf,get,attribute,assert,false,the,age,attribute,should,not,be,writable,attr,is,writable
AbstractMetadataAssemblerTests -> @Test 	public void testReadOnlyAttribute() throws Exception;1402388547;Tests the situation where the attribute is only defined on the getter.;@Test_	public void testReadOnlyAttribute() throws Exception {_		ModelMBeanInfo inf = getMBeanInfoFromAssembler()__		ModelMBeanAttributeInfo attr = inf.getAttribute(AGE_ATTRIBUTE)__		assertFalse("The age attribute should not be writable", attr.isWritable())__	};tests,the,situation,where,the,attribute,is,only,defined,on,the,getter;test,public,void,test,read,only,attribute,throws,exception,model,mbean,info,inf,get,mbean,info,from,assembler,model,mbean,attribute,info,attr,inf,get,attribute,assert,false,the,age,attribute,should,not,be,writable,attr,is,writable
AbstractMetadataAssemblerTests -> @Test 	public void testReadOnlyAttribute() throws Exception;1413848647;Tests the situation where the attribute is only defined on the getter.;@Test_	public void testReadOnlyAttribute() throws Exception {_		ModelMBeanInfo inf = getMBeanInfoFromAssembler()__		ModelMBeanAttributeInfo attr = inf.getAttribute(AGE_ATTRIBUTE)__		assertFalse("The age attribute should not be writable", attr.isWritable())__	};tests,the,situation,where,the,attribute,is,only,defined,on,the,getter;test,public,void,test,read,only,attribute,throws,exception,model,mbean,info,inf,get,mbean,info,from,assembler,model,mbean,attribute,info,attr,inf,get,attribute,assert,false,the,age,attribute,should,not,be,writable,attr,is,writable
AbstractMetadataAssemblerTests -> @Test 	public void testReadOnlyAttribute() throws Exception;1460400578;Tests the situation where the attribute is only defined on the getter.;@Test_	public void testReadOnlyAttribute() throws Exception {_		ModelMBeanInfo inf = getMBeanInfoFromAssembler()__		ModelMBeanAttributeInfo attr = inf.getAttribute(AGE_ATTRIBUTE)__		assertFalse("The age attribute should not be writable", attr.isWritable())__	};tests,the,situation,where,the,attribute,is,only,defined,on,the,getter;test,public,void,test,read,only,attribute,throws,exception,model,mbean,info,inf,get,mbean,info,from,assembler,model,mbean,attribute,info,attr,inf,get,attribute,assert,false,the,age,attribute,should,not,be,writable,attr,is,writable
AbstractMetadataAssemblerTests -> @Test 	public void testReadOnlyAttribute() throws Exception;1467730834;Tests the situation where the attribute is only defined on the getter.;@Test_	public void testReadOnlyAttribute() throws Exception {_		ModelMBeanInfo inf = getMBeanInfoFromAssembler()__		ModelMBeanAttributeInfo attr = inf.getAttribute(AGE_ATTRIBUTE)__		assertFalse("The age attribute should not be writable", attr.isWritable())__	};tests,the,situation,where,the,attribute,is,only,defined,on,the,getter;test,public,void,test,read,only,attribute,throws,exception,model,mbean,info,inf,get,mbean,info,from,assembler,model,mbean,attribute,info,attr,inf,get,attribute,assert,false,the,age,attribute,should,not,be,writable,attr,is,writable
