commented;modifiers;parameterAmount;loc;comment;code
false;public;0;12;;@Test public void testExceptionOnConfigParsingWithMismatchedAdviceMethod() {     try {         new ClassPathXmlApplicationContext(getClass().getSimpleName() + ".xml", getClass()).     } catch (BeanCreationException ex) {         Throwable cause = ex.getRootCause().         assertTrue("Should be IllegalArgumentException", cause instanceof IllegalArgumentException).         assertTrue("invalidAbsoluteTypeName should be detected by AJ", cause.getMessage().contains("invalidAbsoluteTypeName")).     } }
false;public;0;12;;@Test public void testExceptionOnConfigParsingWithAmbiguousAdviceMethod() {     try {         new ClassPathXmlApplicationContext(getClass().getSimpleName() + "-ambiguous.xml", getClass()).     } catch (BeanCreationException ex) {         Throwable cause = ex.getRootCause().         assertTrue("Should be IllegalArgumentException", cause instanceof IllegalArgumentException).         assertTrue("Cannot resolve method 'myBeforeAdvice' to a unique method", cause.getMessage().contains("Cannot resolve method 'myBeforeAdvice' to a unique method")).     } }
false;public;1;3;;public void myBeforeAdvice(String name) { // no-op }
false;public;1;3;;public void myBeforeAdvice(int age) { // no-op }
