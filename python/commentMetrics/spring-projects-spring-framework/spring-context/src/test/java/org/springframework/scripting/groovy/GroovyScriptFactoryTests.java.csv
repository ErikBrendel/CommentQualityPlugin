# id;timestamp;commentText;codeText;commentWords;codeWords
GroovyScriptFactoryTests -> @Test 	public void testCanPassInMoreThanOneProperty();1328020251;Tests the SPR-2098 bug whereby no more than 1 property element could be_passed to a scripted bean :(;@Test_	public void testCanPassInMoreThanOneProperty() {_		ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-multiple-properties.xml", getClass())__		TestBean tb = (TestBean) ctx.getBean("testBean")___		ContextScriptBean bean = (ContextScriptBean) ctx.getBean("bean")__		assertEquals("The first property ain't bein' injected.", "Sophie Marceau", bean.getName())__		assertEquals("The second property ain't bein' injected.", 31, bean.getAge())__		assertEquals(tb, bean.getTestBean())__		assertEquals(ctx, bean.getApplicationContext())___		ContextScriptBean bean2 = (ContextScriptBean) ctx.getBean("bean2")__		assertEquals(tb, bean2.getTestBean())__		assertEquals(ctx, bean2.getApplicationContext())___		try {_			ctx.getBean("bean3")__			fail("Should have thrown BeanCreationException")__		} catch (BeanCreationException ex) {_			_			assertTrue(ex.contains(UnsatisfiedDependencyException.class))__		}_	};tests,the,spr,2098,bug,whereby,no,more,than,1,property,element,could,be,passed,to,a,scripted,bean;test,public,void,test,can,pass,in,more,than,one,property,application,context,ctx,new,class,path,xml,application,context,groovy,multiple,properties,xml,get,class,test,bean,tb,test,bean,ctx,get,bean,test,bean,context,script,bean,bean,context,script,bean,ctx,get,bean,bean,assert,equals,the,first,property,ain,t,bein,injected,sophie,marceau,bean,get,name,assert,equals,the,second,property,ain,t,bein,injected,31,bean,get,age,assert,equals,tb,bean,get,test,bean,assert,equals,ctx,bean,get,application,context,context,script,bean,bean2,context,script,bean,ctx,get,bean,bean2,assert,equals,tb,bean2,get,test,bean,assert,equals,ctx,bean2,get,application,context,try,ctx,get,bean,bean3,fail,should,have,thrown,bean,creation,exception,catch,bean,creation,exception,ex,assert,true,ex,contains,unsatisfied,dependency,exception,class
GroovyScriptFactoryTests -> @Test 	public void testCanPassInMoreThanOneProperty();1356735495;Tests the SPR-2098 bug whereby no more than 1 property element could be_passed to a scripted bean :(;@Test_	public void testCanPassInMoreThanOneProperty() {_		ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-multiple-properties.xml", getClass())__		TestBean tb = (TestBean) ctx.getBean("testBean")___		ContextScriptBean bean = (ContextScriptBean) ctx.getBean("bean")__		assertEquals("The first property ain't bein' injected.", "Sophie Marceau", bean.getName())__		assertEquals("The second property ain't bein' injected.", 31, bean.getAge())__		assertEquals(tb, bean.getTestBean())__		assertEquals(ctx, bean.getApplicationContext())___		ContextScriptBean bean2 = (ContextScriptBean) ctx.getBean("bean2")__		assertEquals(tb, bean2.getTestBean())__		assertEquals(ctx, bean2.getApplicationContext())___		try {_			ctx.getBean("bean3")__			fail("Should have thrown BeanCreationException")__		} catch (BeanCreationException ex) {_			_			assertTrue(ex.contains(UnsatisfiedDependencyException.class))__		}_	};tests,the,spr,2098,bug,whereby,no,more,than,1,property,element,could,be,passed,to,a,scripted,bean;test,public,void,test,can,pass,in,more,than,one,property,application,context,ctx,new,class,path,xml,application,context,groovy,multiple,properties,xml,get,class,test,bean,tb,test,bean,ctx,get,bean,test,bean,context,script,bean,bean,context,script,bean,ctx,get,bean,bean,assert,equals,the,first,property,ain,t,bein,injected,sophie,marceau,bean,get,name,assert,equals,the,second,property,ain,t,bein,injected,31,bean,get,age,assert,equals,tb,bean,get,test,bean,assert,equals,ctx,bean,get,application,context,context,script,bean,bean2,context,script,bean,ctx,get,bean,bean2,assert,equals,tb,bean2,get,test,bean,assert,equals,ctx,bean2,get,application,context,try,ctx,get,bean,bean3,fail,should,have,thrown,bean,creation,exception,catch,bean,creation,exception,ex,assert,true,ex,contains,unsatisfied,dependency,exception,class
GroovyScriptFactoryTests -> @Test 	public void testCanPassInMoreThanOneProperty();1357248712;Tests the SPR-2098 bug whereby no more than 1 property element could be_passed to a scripted bean :(;@Test_	public void testCanPassInMoreThanOneProperty() {_		ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-multiple-properties.xml", getClass())__		TestBean tb = (TestBean) ctx.getBean("testBean")___		ContextScriptBean bean = (ContextScriptBean) ctx.getBean("bean")__		assertEquals("The first property ain't bein' injected.", "Sophie Marceau", bean.getName())__		assertEquals("The second property ain't bein' injected.", 31, bean.getAge())__		assertEquals(tb, bean.getTestBean())__		assertEquals(ctx, bean.getApplicationContext())___		ContextScriptBean bean2 = (ContextScriptBean) ctx.getBean("bean2")__		assertEquals(tb, bean2.getTestBean())__		assertEquals(ctx, bean2.getApplicationContext())___		try {_			ctx.getBean("bean3")__			fail("Should have thrown BeanCreationException")__		} catch (BeanCreationException ex) {_			_			assertTrue(ex.contains(UnsatisfiedDependencyException.class))__		}_	};tests,the,spr,2098,bug,whereby,no,more,than,1,property,element,could,be,passed,to,a,scripted,bean;test,public,void,test,can,pass,in,more,than,one,property,application,context,ctx,new,class,path,xml,application,context,groovy,multiple,properties,xml,get,class,test,bean,tb,test,bean,ctx,get,bean,test,bean,context,script,bean,bean,context,script,bean,ctx,get,bean,bean,assert,equals,the,first,property,ain,t,bein,injected,sophie,marceau,bean,get,name,assert,equals,the,second,property,ain,t,bein,injected,31,bean,get,age,assert,equals,tb,bean,get,test,bean,assert,equals,ctx,bean,get,application,context,context,script,bean,bean2,context,script,bean,ctx,get,bean,bean2,assert,equals,tb,bean2,get,test,bean,assert,equals,ctx,bean2,get,application,context,try,ctx,get,bean,bean3,fail,should,have,thrown,bean,creation,exception,catch,bean,creation,exception,ex,assert,true,ex,contains,unsatisfied,dependency,exception,class
GroovyScriptFactoryTests -> @Test 	public void testCanPassInMoreThanOneProperty();1362408075;Tests the SPR-2098 bug whereby no more than 1 property element could be_passed to a scripted bean :(;@Test_	public void testCanPassInMoreThanOneProperty() {_		ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-multiple-properties.xml", getClass())__		TestBean tb = (TestBean) ctx.getBean("testBean")___		ContextScriptBean bean = (ContextScriptBean) ctx.getBean("bean")__		assertEquals("The first property ain't bein' injected.", "Sophie Marceau", bean.getName())__		assertEquals("The second property ain't bein' injected.", 31, bean.getAge())__		assertEquals(tb, bean.getTestBean())__		assertEquals(ctx, bean.getApplicationContext())___		ContextScriptBean bean2 = (ContextScriptBean) ctx.getBean("bean2")__		assertEquals(tb, bean2.getTestBean())__		assertEquals(ctx, bean2.getApplicationContext())___		try {_			ctx.getBean("bean3")__			fail("Should have thrown BeanCreationException")__		} catch (BeanCreationException ex) {_			_			assertTrue(ex.contains(UnsatisfiedDependencyException.class))__		}_	};tests,the,spr,2098,bug,whereby,no,more,than,1,property,element,could,be,passed,to,a,scripted,bean;test,public,void,test,can,pass,in,more,than,one,property,application,context,ctx,new,class,path,xml,application,context,groovy,multiple,properties,xml,get,class,test,bean,tb,test,bean,ctx,get,bean,test,bean,context,script,bean,bean,context,script,bean,ctx,get,bean,bean,assert,equals,the,first,property,ain,t,bein,injected,sophie,marceau,bean,get,name,assert,equals,the,second,property,ain,t,bein,injected,31,bean,get,age,assert,equals,tb,bean,get,test,bean,assert,equals,ctx,bean,get,application,context,context,script,bean,bean2,context,script,bean,ctx,get,bean,bean2,assert,equals,tb,bean2,get,test,bean,assert,equals,ctx,bean2,get,application,context,try,ctx,get,bean,bean3,fail,should,have,thrown,bean,creation,exception,catch,bean,creation,exception,ex,assert,true,ex,contains,unsatisfied,dependency,exception,class
GroovyScriptFactoryTests -> @Test 	public void testCanPassInMoreThanOneProperty();1363208506;Tests the SPR-2098 bug whereby no more than 1 property element could be_passed to a scripted bean :(;@Test_	public void testCanPassInMoreThanOneProperty() {_		ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-multiple-properties.xml", getClass())__		TestBean tb = (TestBean) ctx.getBean("testBean")___		ContextScriptBean bean = (ContextScriptBean) ctx.getBean("bean")__		assertEquals("The first property ain't bein' injected.", "Sophie Marceau", bean.getName())__		assertEquals("The second property ain't bein' injected.", 31, bean.getAge())__		assertEquals(tb, bean.getTestBean())__		assertEquals(ctx, bean.getApplicationContext())___		ContextScriptBean bean2 = (ContextScriptBean) ctx.getBean("bean2")__		assertEquals(tb, bean2.getTestBean())__		assertEquals(ctx, bean2.getApplicationContext())___		try {_			ctx.getBean("bean3")__			fail("Should have thrown BeanCreationException")__		} catch (BeanCreationException ex) {_			_			assertTrue(ex.contains(UnsatisfiedDependencyException.class))__		}_	};tests,the,spr,2098,bug,whereby,no,more,than,1,property,element,could,be,passed,to,a,scripted,bean;test,public,void,test,can,pass,in,more,than,one,property,application,context,ctx,new,class,path,xml,application,context,groovy,multiple,properties,xml,get,class,test,bean,tb,test,bean,ctx,get,bean,test,bean,context,script,bean,bean,context,script,bean,ctx,get,bean,bean,assert,equals,the,first,property,ain,t,bein,injected,sophie,marceau,bean,get,name,assert,equals,the,second,property,ain,t,bein,injected,31,bean,get,age,assert,equals,tb,bean,get,test,bean,assert,equals,ctx,bean,get,application,context,context,script,bean,bean2,context,script,bean,ctx,get,bean,bean2,assert,equals,tb,bean2,get,test,bean,assert,equals,ctx,bean2,get,application,context,try,ctx,get,bean,bean3,fail,should,have,thrown,bean,creation,exception,catch,bean,creation,exception,ex,assert,true,ex,contains,unsatisfied,dependency,exception,class
GroovyScriptFactoryTests -> @Test 	public void testCanPassInMoreThanOneProperty();1382746895;Tests the SPR-2098 bug whereby no more than 1 property element could be_passed to a scripted bean :(;@Test_	public void testCanPassInMoreThanOneProperty() {_		ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-multiple-properties.xml", getClass())__		TestBean tb = (TestBean) ctx.getBean("testBean")___		ContextScriptBean bean = (ContextScriptBean) ctx.getBean("bean")__		assertEquals("The first property ain't bein' injected.", "Sophie Marceau", bean.getName())__		assertEquals("The second property ain't bein' injected.", 31, bean.getAge())__		assertEquals(tb, bean.getTestBean())__		assertEquals(ctx, bean.getApplicationContext())___		ContextScriptBean bean2 = (ContextScriptBean) ctx.getBean("bean2")__		assertEquals(tb, bean2.getTestBean())__		assertEquals(ctx, bean2.getApplicationContext())___		try {_			ctx.getBean("bean3")__			fail("Should have thrown BeanCreationException")__		}_		catch (BeanCreationException ex) {_			_			assertTrue(ex.contains(UnsatisfiedDependencyException.class))__		}_	};tests,the,spr,2098,bug,whereby,no,more,than,1,property,element,could,be,passed,to,a,scripted,bean;test,public,void,test,can,pass,in,more,than,one,property,application,context,ctx,new,class,path,xml,application,context,groovy,multiple,properties,xml,get,class,test,bean,tb,test,bean,ctx,get,bean,test,bean,context,script,bean,bean,context,script,bean,ctx,get,bean,bean,assert,equals,the,first,property,ain,t,bein,injected,sophie,marceau,bean,get,name,assert,equals,the,second,property,ain,t,bein,injected,31,bean,get,age,assert,equals,tb,bean,get,test,bean,assert,equals,ctx,bean,get,application,context,context,script,bean,bean2,context,script,bean,ctx,get,bean,bean2,assert,equals,tb,bean2,get,test,bean,assert,equals,ctx,bean2,get,application,context,try,ctx,get,bean,bean3,fail,should,have,thrown,bean,creation,exception,catch,bean,creation,exception,ex,assert,true,ex,contains,unsatisfied,dependency,exception,class
GroovyScriptFactoryTests -> @Test 	public void testCanPassInMoreThanOneProperty();1384168190;Tests the SPR-2098 bug whereby no more than 1 property element could be_passed to a scripted bean :(;@Test_	public void testCanPassInMoreThanOneProperty() {_		ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-multiple-properties.xml", getClass())__		TestBean tb = (TestBean) ctx.getBean("testBean")___		ContextScriptBean bean = (ContextScriptBean) ctx.getBean("bean")__		assertEquals("The first property ain't bein' injected.", "Sophie Marceau", bean.getName())__		assertEquals("The second property ain't bein' injected.", 31, bean.getAge())__		assertEquals(tb, bean.getTestBean())__		assertEquals(ctx, bean.getApplicationContext())___		ContextScriptBean bean2 = (ContextScriptBean) ctx.getBean("bean2")__		assertEquals(tb, bean2.getTestBean())__		assertEquals(ctx, bean2.getApplicationContext())___		try {_			ctx.getBean("bean3")__			fail("Should have thrown BeanCreationException")__		}_		catch (BeanCreationException ex) {_			_			assertTrue(ex.contains(UnsatisfiedDependencyException.class))__		}_	};tests,the,spr,2098,bug,whereby,no,more,than,1,property,element,could,be,passed,to,a,scripted,bean;test,public,void,test,can,pass,in,more,than,one,property,application,context,ctx,new,class,path,xml,application,context,groovy,multiple,properties,xml,get,class,test,bean,tb,test,bean,ctx,get,bean,test,bean,context,script,bean,bean,context,script,bean,ctx,get,bean,bean,assert,equals,the,first,property,ain,t,bein,injected,sophie,marceau,bean,get,name,assert,equals,the,second,property,ain,t,bein,injected,31,bean,get,age,assert,equals,tb,bean,get,test,bean,assert,equals,ctx,bean,get,application,context,context,script,bean,bean2,context,script,bean,ctx,get,bean,bean2,assert,equals,tb,bean2,get,test,bean,assert,equals,ctx,bean2,get,application,context,try,ctx,get,bean,bean3,fail,should,have,thrown,bean,creation,exception,catch,bean,creation,exception,ex,assert,true,ex,contains,unsatisfied,dependency,exception,class
GroovyScriptFactoryTests -> @Test 	public void testCanPassInMoreThanOneProperty();1389647622;Tests the SPR-2098 bug whereby no more than 1 property element could be_passed to a scripted bean :(;@Test_	public void testCanPassInMoreThanOneProperty() {_		ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-multiple-properties.xml", getClass())__		TestBean tb = (TestBean) ctx.getBean("testBean")___		ContextScriptBean bean = (ContextScriptBean) ctx.getBean("bean")__		assertEquals("The first property ain't bein' injected.", "Sophie Marceau", bean.getName())__		assertEquals("The second property ain't bein' injected.", 31, bean.getAge())__		assertEquals(tb, bean.getTestBean())__		assertEquals(ctx, bean.getApplicationContext())___		ContextScriptBean bean2 = (ContextScriptBean) ctx.getBean("bean2")__		assertEquals(tb, bean2.getTestBean())__		assertEquals(ctx, bean2.getApplicationContext())___		try {_			ctx.getBean("bean3")__			fail("Should have thrown BeanCreationException")__		}_		catch (BeanCreationException ex) {_			_			assertTrue(ex.contains(UnsatisfiedDependencyException.class))__		}_	};tests,the,spr,2098,bug,whereby,no,more,than,1,property,element,could,be,passed,to,a,scripted,bean;test,public,void,test,can,pass,in,more,than,one,property,application,context,ctx,new,class,path,xml,application,context,groovy,multiple,properties,xml,get,class,test,bean,tb,test,bean,ctx,get,bean,test,bean,context,script,bean,bean,context,script,bean,ctx,get,bean,bean,assert,equals,the,first,property,ain,t,bein,injected,sophie,marceau,bean,get,name,assert,equals,the,second,property,ain,t,bein,injected,31,bean,get,age,assert,equals,tb,bean,get,test,bean,assert,equals,ctx,bean,get,application,context,context,script,bean,bean2,context,script,bean,ctx,get,bean,bean2,assert,equals,tb,bean2,get,test,bean,assert,equals,ctx,bean2,get,application,context,try,ctx,get,bean,bean3,fail,should,have,thrown,bean,creation,exception,catch,bean,creation,exception,ex,assert,true,ex,contains,unsatisfied,dependency,exception,class
GroovyScriptFactoryTests -> @Test 	public void testCanPassInMoreThanOneProperty();1398153432;Tests the SPR-2098 bug whereby no more than 1 property element could be_passed to a scripted bean :(;@Test_	public void testCanPassInMoreThanOneProperty() {_		ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-multiple-properties.xml", getClass())__		TestBean tb = (TestBean) ctx.getBean("testBean")___		ContextScriptBean bean = (ContextScriptBean) ctx.getBean("bean")__		assertEquals("The first property ain't bein' injected.", "Sophie Marceau", bean.getName())__		assertEquals("The second property ain't bein' injected.", 31, bean.getAge())__		assertEquals(tb, bean.getTestBean())__		assertEquals(ctx, bean.getApplicationContext())___		ContextScriptBean bean2 = (ContextScriptBean) ctx.getBean("bean2")__		assertEquals(tb, bean2.getTestBean())__		assertEquals(ctx, bean2.getApplicationContext())___		try {_			ctx.getBean("bean3")__			fail("Should have thrown BeanCreationException")__		}_		catch (BeanCreationException ex) {_			_			assertTrue(ex.contains(UnsatisfiedDependencyException.class))__		}_	};tests,the,spr,2098,bug,whereby,no,more,than,1,property,element,could,be,passed,to,a,scripted,bean;test,public,void,test,can,pass,in,more,than,one,property,application,context,ctx,new,class,path,xml,application,context,groovy,multiple,properties,xml,get,class,test,bean,tb,test,bean,ctx,get,bean,test,bean,context,script,bean,bean,context,script,bean,ctx,get,bean,bean,assert,equals,the,first,property,ain,t,bein,injected,sophie,marceau,bean,get,name,assert,equals,the,second,property,ain,t,bein,injected,31,bean,get,age,assert,equals,tb,bean,get,test,bean,assert,equals,ctx,bean,get,application,context,context,script,bean,bean2,context,script,bean,ctx,get,bean,bean2,assert,equals,tb,bean2,get,test,bean,assert,equals,ctx,bean2,get,application,context,try,ctx,get,bean,bean3,fail,should,have,thrown,bean,creation,exception,catch,bean,creation,exception,ex,assert,true,ex,contains,unsatisfied,dependency,exception,class
GroovyScriptFactoryTests -> @Test 	public void testCanPassInMoreThanOneProperty();1413848647;Tests the SPR-2098 bug whereby no more than 1 property element could be_passed to a scripted bean :(;@Test_	public void testCanPassInMoreThanOneProperty() {_		ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-multiple-properties.xml", getClass())__		TestBean tb = (TestBean) ctx.getBean("testBean")___		ContextScriptBean bean = (ContextScriptBean) ctx.getBean("bean")__		assertEquals("The first property ain't bein' injected.", "Sophie Marceau", bean.getName())__		assertEquals("The second property ain't bein' injected.", 31, bean.getAge())__		assertEquals(tb, bean.getTestBean())__		assertEquals(ctx, bean.getApplicationContext())___		ContextScriptBean bean2 = (ContextScriptBean) ctx.getBean("bean2")__		assertEquals(tb, bean2.getTestBean())__		assertEquals(ctx, bean2.getApplicationContext())___		try {_			ctx.getBean("bean3")__			fail("Should have thrown BeanCreationException")__		}_		catch (BeanCreationException ex) {_			_			assertTrue(ex.contains(UnsatisfiedDependencyException.class))__		}_	};tests,the,spr,2098,bug,whereby,no,more,than,1,property,element,could,be,passed,to,a,scripted,bean;test,public,void,test,can,pass,in,more,than,one,property,application,context,ctx,new,class,path,xml,application,context,groovy,multiple,properties,xml,get,class,test,bean,tb,test,bean,ctx,get,bean,test,bean,context,script,bean,bean,context,script,bean,ctx,get,bean,bean,assert,equals,the,first,property,ain,t,bein,injected,sophie,marceau,bean,get,name,assert,equals,the,second,property,ain,t,bein,injected,31,bean,get,age,assert,equals,tb,bean,get,test,bean,assert,equals,ctx,bean,get,application,context,context,script,bean,bean2,context,script,bean,ctx,get,bean,bean2,assert,equals,tb,bean2,get,test,bean,assert,equals,ctx,bean2,get,application,context,try,ctx,get,bean,bean3,fail,should,have,thrown,bean,creation,exception,catch,bean,creation,exception,ex,assert,true,ex,contains,unsatisfied,dependency,exception,class
GroovyScriptFactoryTests -> @Test 	public void testCanPassInMoreThanOneProperty();1431122168;Tests the SPR-2098 bug whereby no more than 1 property element could be_passed to a scripted bean :(;@Test_	public void testCanPassInMoreThanOneProperty() {_		ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-multiple-properties.xml", getClass())__		TestBean tb = (TestBean) ctx.getBean("testBean")___		ContextScriptBean bean = (ContextScriptBean) ctx.getBean("bean")__		assertEquals("The first property ain't bein' injected.", "Sophie Marceau", bean.getName())__		assertEquals("The second property ain't bein' injected.", 31, bean.getAge())__		assertEquals(tb, bean.getTestBean())__		assertEquals(ctx, bean.getApplicationContext())___		ContextScriptBean bean2 = (ContextScriptBean) ctx.getBean("bean2")__		assertEquals(tb, bean2.getTestBean())__		assertEquals(ctx, bean2.getApplicationContext())___		try {_			ctx.getBean("bean3")__			fail("Should have thrown BeanCreationException")__		}_		catch (BeanCreationException ex) {_			_			assertTrue(ex.contains(UnsatisfiedDependencyException.class))__		}_	};tests,the,spr,2098,bug,whereby,no,more,than,1,property,element,could,be,passed,to,a,scripted,bean;test,public,void,test,can,pass,in,more,than,one,property,application,context,ctx,new,class,path,xml,application,context,groovy,multiple,properties,xml,get,class,test,bean,tb,test,bean,ctx,get,bean,test,bean,context,script,bean,bean,context,script,bean,ctx,get,bean,bean,assert,equals,the,first,property,ain,t,bein,injected,sophie,marceau,bean,get,name,assert,equals,the,second,property,ain,t,bein,injected,31,bean,get,age,assert,equals,tb,bean,get,test,bean,assert,equals,ctx,bean,get,application,context,context,script,bean,bean2,context,script,bean,ctx,get,bean,bean2,assert,equals,tb,bean2,get,test,bean,assert,equals,ctx,bean2,get,application,context,try,ctx,get,bean,bean3,fail,should,have,thrown,bean,creation,exception,catch,bean,creation,exception,ex,assert,true,ex,contains,unsatisfied,dependency,exception,class
GroovyScriptFactoryTests -> @Test 	public void testCanPassInMoreThanOneProperty();1432018141;Tests the SPR-2098 bug whereby no more than 1 property element could be_passed to a scripted bean :(;@Test_	public void testCanPassInMoreThanOneProperty() {_		ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-multiple-properties.xml", getClass())__		TestBean tb = (TestBean) ctx.getBean("testBean")___		ContextScriptBean bean = (ContextScriptBean) ctx.getBean("bean")__		assertEquals("The first property ain't bein' injected.", "Sophie Marceau", bean.getName())__		assertEquals("The second property ain't bein' injected.", 31, bean.getAge())__		assertEquals(tb, bean.getTestBean())__		assertEquals(ctx, bean.getApplicationContext())___		ContextScriptBean bean2 = (ContextScriptBean) ctx.getBean("bean2")__		assertEquals(tb, bean2.getTestBean())__		assertEquals(ctx, bean2.getApplicationContext())___		try {_			ctx.getBean("bean3")__			fail("Should have thrown BeanCreationException")__		}_		catch (BeanCreationException ex) {_			_			assertTrue(ex.contains(UnsatisfiedDependencyException.class))__		}_	};tests,the,spr,2098,bug,whereby,no,more,than,1,property,element,could,be,passed,to,a,scripted,bean;test,public,void,test,can,pass,in,more,than,one,property,application,context,ctx,new,class,path,xml,application,context,groovy,multiple,properties,xml,get,class,test,bean,tb,test,bean,ctx,get,bean,test,bean,context,script,bean,bean,context,script,bean,ctx,get,bean,bean,assert,equals,the,first,property,ain,t,bein,injected,sophie,marceau,bean,get,name,assert,equals,the,second,property,ain,t,bein,injected,31,bean,get,age,assert,equals,tb,bean,get,test,bean,assert,equals,ctx,bean,get,application,context,context,script,bean,bean2,context,script,bean,ctx,get,bean,bean2,assert,equals,tb,bean2,get,test,bean,assert,equals,ctx,bean2,get,application,context,try,ctx,get,bean,bean3,fail,should,have,thrown,bean,creation,exception,catch,bean,creation,exception,ex,assert,true,ex,contains,unsatisfied,dependency,exception,class
GroovyScriptFactoryTests -> @Test 	public void testCanPassInMoreThanOneProperty();1458754769;Tests the SPR-2098 bug whereby no more than 1 property element could be_passed to a scripted bean :(;@Test_	public void testCanPassInMoreThanOneProperty() {_		ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-multiple-properties.xml", getClass())__		TestBean tb = (TestBean) ctx.getBean("testBean")___		ContextScriptBean bean = (ContextScriptBean) ctx.getBean("bean")__		assertEquals("The first property ain't bein' injected.", "Sophie Marceau", bean.getName())__		assertEquals("The second property ain't bein' injected.", 31, bean.getAge())__		assertEquals(tb, bean.getTestBean())__		assertEquals(ctx, bean.getApplicationContext())___		ContextScriptBean bean2 = (ContextScriptBean) ctx.getBean("bean2")__		assertEquals(tb, bean2.getTestBean())__		assertEquals(ctx, bean2.getApplicationContext())___		try {_			ctx.getBean("bean3")__			fail("Should have thrown BeanCreationException")__		}_		catch (BeanCreationException ex) {_			_			assertTrue(ex.contains(UnsatisfiedDependencyException.class))__		}_	};tests,the,spr,2098,bug,whereby,no,more,than,1,property,element,could,be,passed,to,a,scripted,bean;test,public,void,test,can,pass,in,more,than,one,property,application,context,ctx,new,class,path,xml,application,context,groovy,multiple,properties,xml,get,class,test,bean,tb,test,bean,ctx,get,bean,test,bean,context,script,bean,bean,context,script,bean,ctx,get,bean,bean,assert,equals,the,first,property,ain,t,bein,injected,sophie,marceau,bean,get,name,assert,equals,the,second,property,ain,t,bein,injected,31,bean,get,age,assert,equals,tb,bean,get,test,bean,assert,equals,ctx,bean,get,application,context,context,script,bean,bean2,context,script,bean,ctx,get,bean,bean2,assert,equals,tb,bean2,get,test,bean,assert,equals,ctx,bean2,get,application,context,try,ctx,get,bean,bean3,fail,should,have,thrown,bean,creation,exception,catch,bean,creation,exception,ex,assert,true,ex,contains,unsatisfied,dependency,exception,class
GroovyScriptFactoryTests -> @Test 	public void testCanPassInMoreThanOneProperty();1467726413;Tests the SPR-2098 bug whereby no more than 1 property element could be_passed to a scripted bean :(;@Test_	public void testCanPassInMoreThanOneProperty() {_		ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-multiple-properties.xml", getClass())__		TestBean tb = (TestBean) ctx.getBean("testBean")___		ContextScriptBean bean = (ContextScriptBean) ctx.getBean("bean")__		assertEquals("The first property ain't bein' injected.", "Sophie Marceau", bean.getName())__		assertEquals("The second property ain't bein' injected.", 31, bean.getAge())__		assertEquals(tb, bean.getTestBean())__		assertEquals(ctx, bean.getApplicationContext())___		ContextScriptBean bean2 = (ContextScriptBean) ctx.getBean("bean2")__		assertEquals(tb, bean2.getTestBean())__		assertEquals(ctx, bean2.getApplicationContext())___		try {_			ctx.getBean("bean3")__			fail("Should have thrown BeanCreationException")__		}_		catch (BeanCreationException ex) {_			_			assertTrue(ex.contains(UnsatisfiedDependencyException.class))__		}_	};tests,the,spr,2098,bug,whereby,no,more,than,1,property,element,could,be,passed,to,a,scripted,bean;test,public,void,test,can,pass,in,more,than,one,property,application,context,ctx,new,class,path,xml,application,context,groovy,multiple,properties,xml,get,class,test,bean,tb,test,bean,ctx,get,bean,test,bean,context,script,bean,bean,context,script,bean,ctx,get,bean,bean,assert,equals,the,first,property,ain,t,bein,injected,sophie,marceau,bean,get,name,assert,equals,the,second,property,ain,t,bein,injected,31,bean,get,age,assert,equals,tb,bean,get,test,bean,assert,equals,ctx,bean,get,application,context,context,script,bean,bean2,context,script,bean,ctx,get,bean,bean2,assert,equals,tb,bean2,get,test,bean,assert,equals,ctx,bean2,get,application,context,try,ctx,get,bean,bean3,fail,should,have,thrown,bean,creation,exception,catch,bean,creation,exception,ex,assert,true,ex,contains,unsatisfied,dependency,exception,class
GroovyScriptFactoryTests -> @Test 	public void testCanPassInMoreThanOneProperty();1467744603;Tests the SPR-2098 bug whereby no more than 1 property element could be_passed to a scripted bean :(;@Test_	public void testCanPassInMoreThanOneProperty() {_		ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-multiple-properties.xml", getClass())__		TestBean tb = (TestBean) ctx.getBean("testBean")___		ContextScriptBean bean = (ContextScriptBean) ctx.getBean("bean")__		assertEquals("The first property ain't bein' injected.", "Sophie Marceau", bean.getName())__		assertEquals("The second property ain't bein' injected.", 31, bean.getAge())__		assertEquals(tb, bean.getTestBean())__		assertEquals(ctx, bean.getApplicationContext())___		ContextScriptBean bean2 = (ContextScriptBean) ctx.getBean("bean2")__		assertEquals(tb, bean2.getTestBean())__		assertEquals(ctx, bean2.getApplicationContext())__	};tests,the,spr,2098,bug,whereby,no,more,than,1,property,element,could,be,passed,to,a,scripted,bean;test,public,void,test,can,pass,in,more,than,one,property,application,context,ctx,new,class,path,xml,application,context,groovy,multiple,properties,xml,get,class,test,bean,tb,test,bean,ctx,get,bean,test,bean,context,script,bean,bean,context,script,bean,ctx,get,bean,bean,assert,equals,the,first,property,ain,t,bein,injected,sophie,marceau,bean,get,name,assert,equals,the,second,property,ain,t,bein,injected,31,bean,get,age,assert,equals,tb,bean,get,test,bean,assert,equals,ctx,bean,get,application,context,context,script,bean,bean2,context,script,bean,ctx,get,bean,bean2,assert,equals,tb,bean2,get,test,bean,assert,equals,ctx,bean2,get,application,context
GroovyScriptFactoryTests -> @Test 	public void testCanPassInMoreThanOneProperty();1468951740;Tests the SPR-2098 bug whereby no more than 1 property element could be_passed to a scripted bean :(;@Test_	public void testCanPassInMoreThanOneProperty() {_		ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-multiple-properties.xml", getClass())__		TestBean tb = (TestBean) ctx.getBean("testBean")___		ContextScriptBean bean = (ContextScriptBean) ctx.getBean("bean")__		assertEquals("The first property ain't bein' injected.", "Sophie Marceau", bean.getName())__		assertEquals("The second property ain't bein' injected.", 31, bean.getAge())__		assertEquals(tb, bean.getTestBean())__		assertEquals(ctx, bean.getApplicationContext())___		ContextScriptBean bean2 = (ContextScriptBean) ctx.getBean("bean2")__		assertEquals(tb, bean2.getTestBean())__		assertEquals(ctx, bean2.getApplicationContext())__	};tests,the,spr,2098,bug,whereby,no,more,than,1,property,element,could,be,passed,to,a,scripted,bean;test,public,void,test,can,pass,in,more,than,one,property,application,context,ctx,new,class,path,xml,application,context,groovy,multiple,properties,xml,get,class,test,bean,tb,test,bean,ctx,get,bean,test,bean,context,script,bean,bean,context,script,bean,ctx,get,bean,bean,assert,equals,the,first,property,ain,t,bein,injected,sophie,marceau,bean,get,name,assert,equals,the,second,property,ain,t,bein,injected,31,bean,get,age,assert,equals,tb,bean,get,test,bean,assert,equals,ctx,bean,get,application,context,context,script,bean,bean2,context,script,bean,ctx,get,bean,bean2,assert,equals,tb,bean2,get,test,bean,assert,equals,ctx,bean2,get,application,context
GroovyScriptFactoryTests -> @Test 	public void testCanPassInMoreThanOneProperty();1471426189;Tests the SPR-2098 bug whereby no more than 1 property element could be_passed to a scripted bean :(;@Test_	public void testCanPassInMoreThanOneProperty() {_		ApplicationContext ctx = new ClassPathXmlApplicationContext("groovy-multiple-properties.xml", getClass())__		TestBean tb = (TestBean) ctx.getBean("testBean")___		ContextScriptBean bean = (ContextScriptBean) ctx.getBean("bean")__		assertEquals("The first property ain't bein' injected.", "Sophie Marceau", bean.getName())__		assertEquals("The second property ain't bein' injected.", 31, bean.getAge())__		assertEquals(tb, bean.getTestBean())__		assertEquals(ctx, bean.getApplicationContext())___		ContextScriptBean bean2 = (ContextScriptBean) ctx.getBean("bean2")__		assertEquals(tb, bean2.getTestBean())__		assertEquals(ctx, bean2.getApplicationContext())__	};tests,the,spr,2098,bug,whereby,no,more,than,1,property,element,could,be,passed,to,a,scripted,bean;test,public,void,test,can,pass,in,more,than,one,property,application,context,ctx,new,class,path,xml,application,context,groovy,multiple,properties,xml,get,class,test,bean,tb,test,bean,ctx,get,bean,test,bean,context,script,bean,bean,context,script,bean,ctx,get,bean,bean,assert,equals,the,first,property,ain,t,bein,injected,sophie,marceau,bean,get,name,assert,equals,the,second,property,ain,t,bein,injected,31,bean,get,age,assert,equals,tb,bean,get,test,bean,assert,equals,ctx,bean,get,application,context,context,script,bean,bean2,context,script,bean,ctx,get,bean,bean2,assert,equals,tb,bean2,get,test,bean,assert,equals,ctx,bean2,get,application,context
