commented;modifiers;parameterAmount;loc;comment;code
false;public;0;15;;@Test public void contextStartedEvent() {     StaticApplicationContext context = new StaticApplicationContext().     context.registerSingleton("lifecycle", LifecycleTestBean.class).     context.registerSingleton("listener", LifecycleListener.class).     context.refresh().     LifecycleTestBean lifecycleBean = (LifecycleTestBean) context.getBean("lifecycle").     LifecycleListener listener = (LifecycleListener) context.getBean("listener").     assertFalse(lifecycleBean.isRunning()).     assertEquals(0, listener.getStartedCount()).     context.start().     assertTrue(lifecycleBean.isRunning()).     assertEquals(1, listener.getStartedCount()).     assertSame(context, listener.getApplicationContext()). }
false;public;0;17;;@Test public void contextStoppedEvent() {     StaticApplicationContext context = new StaticApplicationContext().     context.registerSingleton("lifecycle", LifecycleTestBean.class).     context.registerSingleton("listener", LifecycleListener.class).     context.refresh().     LifecycleTestBean lifecycleBean = (LifecycleTestBean) context.getBean("lifecycle").     LifecycleListener listener = (LifecycleListener) context.getBean("listener").     assertFalse(lifecycleBean.isRunning()).     context.start().     assertTrue(lifecycleBean.isRunning()).     assertEquals(0, listener.getStoppedCount()).     context.stop().     assertFalse(lifecycleBean.isRunning()).     assertEquals(1, listener.getStoppedCount()).     assertSame(context, listener.getApplicationContext()). }
false;public;1;11;;@Override public void onApplicationEvent(ApplicationEvent event) {     if (event instanceof ContextStartedEvent) {         this.context = ((ContextStartedEvent) event).getApplicationContext().         this.startedCount++.     } else if (event instanceof ContextStoppedEvent) {         this.context = ((ContextStoppedEvent) event).getApplicationContext().         this.stoppedCount++.     } }
false;public;0;3;;public ApplicationContext getApplicationContext() {     return this.context. }
false;public;0;3;;public int getStartedCount() {     return this.startedCount. }
false;public;0;3;;public int getStoppedCount() {     return this.stoppedCount. }
false;public;0;4;;@Override public boolean isRunning() {     return this.running. }
false;public;0;4;;@Override public void start() {     this.running = true. }
false;public;0;4;;@Override public void stop() {     this.running = false. }
