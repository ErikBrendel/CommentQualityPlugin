# id;timestamp;commentText;codeText;commentWords;codeWords
HibernateTemplate -> public SessionFactory getSessionFactory();1467668243;Return the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;public SessionFactory getSessionFactory() {_		return this.sessionFactory__	};return,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;public,session,factory,get,session,factory,return,this,session,factory
HibernateTemplate -> public SessionFactory getSessionFactory();1467811209;Return the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;public SessionFactory getSessionFactory() {_		return this.sessionFactory__	};return,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;public,session,factory,get,session,factory,return,this,session,factory
HibernateTemplate -> public SessionFactory getSessionFactory();1468441852;Return the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;public SessionFactory getSessionFactory() {_		return this.sessionFactory__	};return,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;public,session,factory,get,session,factory,return,this,session,factory
HibernateTemplate -> public SessionFactory getSessionFactory();1469534553;Return the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;public SessionFactory getSessionFactory() {_		return this.sessionFactory__	};return,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;public,session,factory,get,session,factory,return,this,session,factory
HibernateTemplate -> public SessionFactory getSessionFactory();1473503884;Return the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;public SessionFactory getSessionFactory() {_		return this.sessionFactory__	};return,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;public,session,factory,get,session,factory,return,this,session,factory
HibernateTemplate -> public SessionFactory getSessionFactory();1495868221;Return the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;public SessionFactory getSessionFactory() {_		return this.sessionFactory__	};return,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;public,session,factory,get,session,factory,return,this,session,factory
HibernateTemplate -> public SessionFactory getSessionFactory();1496259743;Return the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;public SessionFactory getSessionFactory() {_		return this.sessionFactory__	};return,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;public,session,factory,get,session,factory,return,this,session,factory
HibernateTemplate -> @SuppressWarnings("deprecation") 	@Nullable 	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException;1495868221;Execute the action specified by the given action object within a Session._@param action callback object that specifies the Hibernate action_@param enforceNativeSession whether to enforce exposure of the native_Hibernate Session to callback code_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;@SuppressWarnings("deprecation")_	@Nullable_	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException {_		Assert.notNull(action, "Callback object must not be null")___		Session session = null__		boolean isNew = false__		try {_			session = getSessionFactory().getCurrentSession()__		}_		catch (HibernateException ex) {_			logger.debug("Could not retrieve pre-bound Hibernate session", ex)__		}_		if (session == null) {_			session = getSessionFactory().openSession()__			session.setFlushMode(FlushMode.MANUAL)__			isNew = true__		}__		try {_			enableFilters(session)__			Session sessionToExpose =_					(enforceNativeSession || isExposeNativeSession() ? session : createSessionProxy(session))__			return action.doInHibernate(sessionToExpose)__		}_		catch (HibernateException ex) {_			throw SessionFactoryUtils.convertHibernateAccessException(ex)__		}_		catch (PersistenceException ex) {_			if (ex.getCause() instanceof HibernateException) {_				throw SessionFactoryUtils.convertHibernateAccessException((HibernateException) ex.getCause())__			}_			throw ex__		}_		catch (RuntimeException ex) {_			_			throw ex__		}_		finally {_			if (isNew) {_				SessionFactoryUtils.closeSession(session)__			}_			else {_				disableFilters(session)__			}_		}_	};execute,the,action,specified,by,the,given,action,object,within,a,session,param,action,callback,object,that,specifies,the,hibernate,action,param,enforce,native,session,whether,to,enforce,exposure,of,the,native,hibernate,session,to,callback,code,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;suppress,warnings,deprecation,nullable,protected,t,t,do,execute,hibernate,callback,t,action,boolean,enforce,native,session,throws,data,access,exception,assert,not,null,action,callback,object,must,not,be,null,session,session,null,boolean,is,new,false,try,session,get,session,factory,get,current,session,catch,hibernate,exception,ex,logger,debug,could,not,retrieve,pre,bound,hibernate,session,ex,if,session,null,session,get,session,factory,open,session,session,set,flush,mode,flush,mode,manual,is,new,true,try,enable,filters,session,session,session,to,expose,enforce,native,session,is,expose,native,session,session,create,session,proxy,session,return,action,do,in,hibernate,session,to,expose,catch,hibernate,exception,ex,throw,session,factory,utils,convert,hibernate,access,exception,ex,catch,persistence,exception,ex,if,ex,get,cause,instanceof,hibernate,exception,throw,session,factory,utils,convert,hibernate,access,exception,hibernate,exception,ex,get,cause,throw,ex,catch,runtime,exception,ex,throw,ex,finally,if,is,new,session,factory,utils,close,session,session,else,disable,filters,session
HibernateTemplate -> @SuppressWarnings("deprecation") 	@Nullable 	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException;1496259743;Execute the action specified by the given action object within a Session._@param action callback object that specifies the Hibernate action_@param enforceNativeSession whether to enforce exposure of the native_Hibernate Session to callback code_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;@SuppressWarnings("deprecation")_	@Nullable_	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException {_		Assert.notNull(action, "Callback object must not be null")___		Session session = null__		boolean isNew = false__		try {_			session = getSessionFactory().getCurrentSession()__		}_		catch (HibernateException ex) {_			logger.debug("Could not retrieve pre-bound Hibernate session", ex)__		}_		if (session == null) {_			session = getSessionFactory().openSession()__			session.setFlushMode(FlushMode.MANUAL)__			isNew = true__		}__		try {_			enableFilters(session)__			Session sessionToExpose =_					(enforceNativeSession || isExposeNativeSession() ? session : createSessionProxy(session))__			return action.doInHibernate(sessionToExpose)__		}_		catch (HibernateException ex) {_			throw SessionFactoryUtils.convertHibernateAccessException(ex)__		}_		catch (PersistenceException ex) {_			if (ex.getCause() instanceof HibernateException) {_				throw SessionFactoryUtils.convertHibernateAccessException((HibernateException) ex.getCause())__			}_			throw ex__		}_		catch (RuntimeException ex) {_			_			throw ex__		}_		finally {_			if (isNew) {_				SessionFactoryUtils.closeSession(session)__			}_			else {_				disableFilters(session)__			}_		}_	};execute,the,action,specified,by,the,given,action,object,within,a,session,param,action,callback,object,that,specifies,the,hibernate,action,param,enforce,native,session,whether,to,enforce,exposure,of,the,native,hibernate,session,to,callback,code,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;suppress,warnings,deprecation,nullable,protected,t,t,do,execute,hibernate,callback,t,action,boolean,enforce,native,session,throws,data,access,exception,assert,not,null,action,callback,object,must,not,be,null,session,session,null,boolean,is,new,false,try,session,get,session,factory,get,current,session,catch,hibernate,exception,ex,logger,debug,could,not,retrieve,pre,bound,hibernate,session,ex,if,session,null,session,get,session,factory,open,session,session,set,flush,mode,flush,mode,manual,is,new,true,try,enable,filters,session,session,session,to,expose,enforce,native,session,is,expose,native,session,session,create,session,proxy,session,return,action,do,in,hibernate,session,to,expose,catch,hibernate,exception,ex,throw,session,factory,utils,convert,hibernate,access,exception,ex,catch,persistence,exception,ex,if,ex,get,cause,instanceof,hibernate,exception,throw,session,factory,utils,convert,hibernate,access,exception,hibernate,exception,ex,get,cause,throw,ex,catch,runtime,exception,ex,throw,ex,finally,if,is,new,session,factory,utils,close,session,session,else,disable,filters,session
HibernateTemplate -> @SuppressWarnings("deprecation") 	@Nullable 	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException;1496837955;Execute the action specified by the given action object within a Session._@param action callback object that specifies the Hibernate action_@param enforceNativeSession whether to enforce exposure of the native_Hibernate Session to callback code_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;@SuppressWarnings("deprecation")_	@Nullable_	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException {_		Assert.notNull(action, "Callback object must not be null")___		Session session = null__		boolean isNew = false__		try {_			session = obtainSessionFactory().getCurrentSession()__		}_		catch (HibernateException ex) {_			logger.debug("Could not retrieve pre-bound Hibernate session", ex)__		}_		if (session == null) {_			session = obtainSessionFactory().openSession()__			session.setFlushMode(FlushMode.MANUAL)__			isNew = true__		}__		try {_			enableFilters(session)__			Session sessionToExpose =_					(enforceNativeSession || isExposeNativeSession() ? session : createSessionProxy(session))__			return action.doInHibernate(sessionToExpose)__		}_		catch (HibernateException ex) {_			throw SessionFactoryUtils.convertHibernateAccessException(ex)__		}_		catch (PersistenceException ex) {_			if (ex.getCause() instanceof HibernateException) {_				throw SessionFactoryUtils.convertHibernateAccessException((HibernateException) ex.getCause())__			}_			throw ex__		}_		catch (RuntimeException ex) {_			_			throw ex__		}_		finally {_			if (isNew) {_				SessionFactoryUtils.closeSession(session)__			}_			else {_				disableFilters(session)__			}_		}_	};execute,the,action,specified,by,the,given,action,object,within,a,session,param,action,callback,object,that,specifies,the,hibernate,action,param,enforce,native,session,whether,to,enforce,exposure,of,the,native,hibernate,session,to,callback,code,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;suppress,warnings,deprecation,nullable,protected,t,t,do,execute,hibernate,callback,t,action,boolean,enforce,native,session,throws,data,access,exception,assert,not,null,action,callback,object,must,not,be,null,session,session,null,boolean,is,new,false,try,session,obtain,session,factory,get,current,session,catch,hibernate,exception,ex,logger,debug,could,not,retrieve,pre,bound,hibernate,session,ex,if,session,null,session,obtain,session,factory,open,session,session,set,flush,mode,flush,mode,manual,is,new,true,try,enable,filters,session,session,session,to,expose,enforce,native,session,is,expose,native,session,session,create,session,proxy,session,return,action,do,in,hibernate,session,to,expose,catch,hibernate,exception,ex,throw,session,factory,utils,convert,hibernate,access,exception,ex,catch,persistence,exception,ex,if,ex,get,cause,instanceof,hibernate,exception,throw,session,factory,utils,convert,hibernate,access,exception,hibernate,exception,ex,get,cause,throw,ex,catch,runtime,exception,ex,throw,ex,finally,if,is,new,session,factory,utils,close,session,session,else,disable,filters,session
HibernateTemplate -> @SuppressWarnings("deprecation") 	@Nullable 	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException;1500448076;Execute the action specified by the given action object within a Session._@param action callback object that specifies the Hibernate action_@param enforceNativeSession whether to enforce exposure of the native_Hibernate Session to callback code_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;@SuppressWarnings("deprecation")_	@Nullable_	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException {_		Assert.notNull(action, "Callback object must not be null")___		Session session = null__		boolean isNew = false__		try {_			session = obtainSessionFactory().getCurrentSession()__		}_		catch (HibernateException ex) {_			logger.debug("Could not retrieve pre-bound Hibernate session", ex)__		}_		if (session == null) {_			session = obtainSessionFactory().openSession()__			session.setFlushMode(FlushMode.MANUAL)__			isNew = true__		}__		try {_			enableFilters(session)__			Session sessionToExpose =_					(enforceNativeSession || isExposeNativeSession() ? session : createSessionProxy(session))__			return action.doInHibernate(sessionToExpose)__		}_		catch (HibernateException ex) {_			throw SessionFactoryUtils.convertHibernateAccessException(ex)__		}_		catch (PersistenceException ex) {_			if (ex.getCause() instanceof HibernateException) {_				throw SessionFactoryUtils.convertHibernateAccessException((HibernateException) ex.getCause())__			}_			throw ex__		}_		catch (RuntimeException ex) {_			_			throw ex__		}_		finally {_			if (isNew) {_				SessionFactoryUtils.closeSession(session)__			}_			else {_				disableFilters(session)__			}_		}_	};execute,the,action,specified,by,the,given,action,object,within,a,session,param,action,callback,object,that,specifies,the,hibernate,action,param,enforce,native,session,whether,to,enforce,exposure,of,the,native,hibernate,session,to,callback,code,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;suppress,warnings,deprecation,nullable,protected,t,t,do,execute,hibernate,callback,t,action,boolean,enforce,native,session,throws,data,access,exception,assert,not,null,action,callback,object,must,not,be,null,session,session,null,boolean,is,new,false,try,session,obtain,session,factory,get,current,session,catch,hibernate,exception,ex,logger,debug,could,not,retrieve,pre,bound,hibernate,session,ex,if,session,null,session,obtain,session,factory,open,session,session,set,flush,mode,flush,mode,manual,is,new,true,try,enable,filters,session,session,session,to,expose,enforce,native,session,is,expose,native,session,session,create,session,proxy,session,return,action,do,in,hibernate,session,to,expose,catch,hibernate,exception,ex,throw,session,factory,utils,convert,hibernate,access,exception,ex,catch,persistence,exception,ex,if,ex,get,cause,instanceof,hibernate,exception,throw,session,factory,utils,convert,hibernate,access,exception,hibernate,exception,ex,get,cause,throw,ex,catch,runtime,exception,ex,throw,ex,finally,if,is,new,session,factory,utils,close,session,session,else,disable,filters,session
HibernateTemplate -> @SuppressWarnings("deprecation") 	@Nullable 	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException;1502974979;Execute the action specified by the given action object within a Session._@param action callback object that specifies the Hibernate action_@param enforceNativeSession whether to enforce exposure of the native_Hibernate Session to callback code_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;@SuppressWarnings("deprecation")_	@Nullable_	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException {_		Assert.notNull(action, "Callback object must not be null")___		Session session = null__		boolean isNew = false__		try {_			session = obtainSessionFactory().getCurrentSession()__		}_		catch (HibernateException ex) {_			logger.debug("Could not retrieve pre-bound Hibernate session", ex)__		}_		if (session == null) {_			session = obtainSessionFactory().openSession()__			session.setFlushMode(FlushMode.MANUAL)__			isNew = true__		}__		try {_			enableFilters(session)__			Session sessionToExpose =_					(enforceNativeSession || isExposeNativeSession() ? session : createSessionProxy(session))__			return action.doInHibernate(sessionToExpose)__		}_		catch (HibernateException ex) {_			throw SessionFactoryUtils.convertHibernateAccessException(ex)__		}_		catch (PersistenceException ex) {_			if (ex.getCause() instanceof HibernateException) {_				throw SessionFactoryUtils.convertHibernateAccessException((HibernateException) ex.getCause())__			}_			throw ex__		}_		catch (RuntimeException ex) {_			_			throw ex__		}_		finally {_			if (isNew) {_				SessionFactoryUtils.closeSession(session)__			}_			else {_				disableFilters(session)__			}_		}_	};execute,the,action,specified,by,the,given,action,object,within,a,session,param,action,callback,object,that,specifies,the,hibernate,action,param,enforce,native,session,whether,to,enforce,exposure,of,the,native,hibernate,session,to,callback,code,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;suppress,warnings,deprecation,nullable,protected,t,t,do,execute,hibernate,callback,t,action,boolean,enforce,native,session,throws,data,access,exception,assert,not,null,action,callback,object,must,not,be,null,session,session,null,boolean,is,new,false,try,session,obtain,session,factory,get,current,session,catch,hibernate,exception,ex,logger,debug,could,not,retrieve,pre,bound,hibernate,session,ex,if,session,null,session,obtain,session,factory,open,session,session,set,flush,mode,flush,mode,manual,is,new,true,try,enable,filters,session,session,session,to,expose,enforce,native,session,is,expose,native,session,session,create,session,proxy,session,return,action,do,in,hibernate,session,to,expose,catch,hibernate,exception,ex,throw,session,factory,utils,convert,hibernate,access,exception,ex,catch,persistence,exception,ex,if,ex,get,cause,instanceof,hibernate,exception,throw,session,factory,utils,convert,hibernate,access,exception,hibernate,exception,ex,get,cause,throw,ex,catch,runtime,exception,ex,throw,ex,finally,if,is,new,session,factory,utils,close,session,session,else,disable,filters,session
HibernateTemplate -> @SuppressWarnings("deprecation") 	@Nullable 	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException;1517247608;Execute the action specified by the given action object within a Session._@param action callback object that specifies the Hibernate action_@param enforceNativeSession whether to enforce exposure of the native_Hibernate Session to callback code_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;@SuppressWarnings("deprecation")_	@Nullable_	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException {_		Assert.notNull(action, "Callback object must not be null")___		Session session = null__		boolean isNew = false__		try {_			session = obtainSessionFactory().getCurrentSession()__		}_		catch (HibernateException ex) {_			logger.debug("Could not retrieve pre-bound Hibernate session", ex)__		}_		if (session == null) {_			session = obtainSessionFactory().openSession()__			session.setFlushMode(FlushMode.MANUAL)__			isNew = true__		}__		try {_			enableFilters(session)__			Session sessionToExpose =_					(enforceNativeSession || isExposeNativeSession() ? session : createSessionProxy(session))__			return action.doInHibernate(sessionToExpose)__		}_		catch (HibernateException ex) {_			throw SessionFactoryUtils.convertHibernateAccessException(ex)__		}_		catch (PersistenceException ex) {_			if (ex.getCause() instanceof HibernateException) {_				throw SessionFactoryUtils.convertHibernateAccessException((HibernateException) ex.getCause())__			}_			throw ex__		}_		catch (RuntimeException ex) {_			_			throw ex__		}_		finally {_			if (isNew) {_				SessionFactoryUtils.closeSession(session)__			}_			else {_				disableFilters(session)__			}_		}_	};execute,the,action,specified,by,the,given,action,object,within,a,session,param,action,callback,object,that,specifies,the,hibernate,action,param,enforce,native,session,whether,to,enforce,exposure,of,the,native,hibernate,session,to,callback,code,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;suppress,warnings,deprecation,nullable,protected,t,t,do,execute,hibernate,callback,t,action,boolean,enforce,native,session,throws,data,access,exception,assert,not,null,action,callback,object,must,not,be,null,session,session,null,boolean,is,new,false,try,session,obtain,session,factory,get,current,session,catch,hibernate,exception,ex,logger,debug,could,not,retrieve,pre,bound,hibernate,session,ex,if,session,null,session,obtain,session,factory,open,session,session,set,flush,mode,flush,mode,manual,is,new,true,try,enable,filters,session,session,session,to,expose,enforce,native,session,is,expose,native,session,session,create,session,proxy,session,return,action,do,in,hibernate,session,to,expose,catch,hibernate,exception,ex,throw,session,factory,utils,convert,hibernate,access,exception,ex,catch,persistence,exception,ex,if,ex,get,cause,instanceof,hibernate,exception,throw,session,factory,utils,convert,hibernate,access,exception,hibernate,exception,ex,get,cause,throw,ex,catch,runtime,exception,ex,throw,ex,finally,if,is,new,session,factory,utils,close,session,session,else,disable,filters,session
HibernateTemplate -> @SuppressWarnings("deprecation") 	@Nullable 	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException;1519944186;Execute the action specified by the given action object within a Session._@param action callback object that specifies the Hibernate action_@param enforceNativeSession whether to enforce exposure of the native_Hibernate Session to callback code_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;@SuppressWarnings("deprecation")_	@Nullable_	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException {_		Assert.notNull(action, "Callback object must not be null")___		Session session = null__		boolean isNew = false__		try {_			session = obtainSessionFactory().getCurrentSession()__		}_		catch (HibernateException ex) {_			logger.debug("Could not retrieve pre-bound Hibernate session", ex)__		}_		if (session == null) {_			session = obtainSessionFactory().openSession()__			session.setFlushMode(FlushMode.MANUAL)__			isNew = true__		}__		try {_			enableFilters(session)__			Session sessionToExpose =_					(enforceNativeSession || isExposeNativeSession() ? session : createSessionProxy(session))__			return action.doInHibernate(sessionToExpose)__		}_		catch (HibernateException ex) {_			throw SessionFactoryUtils.convertHibernateAccessException(ex)__		}_		catch (PersistenceException ex) {_			if (ex.getCause() instanceof HibernateException) {_				throw SessionFactoryUtils.convertHibernateAccessException((HibernateException) ex.getCause())__			}_			throw ex__		}_		catch (RuntimeException ex) {_			_			throw ex__		}_		finally {_			if (isNew) {_				SessionFactoryUtils.closeSession(session)__			}_			else {_				disableFilters(session)__			}_		}_	};execute,the,action,specified,by,the,given,action,object,within,a,session,param,action,callback,object,that,specifies,the,hibernate,action,param,enforce,native,session,whether,to,enforce,exposure,of,the,native,hibernate,session,to,callback,code,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;suppress,warnings,deprecation,nullable,protected,t,t,do,execute,hibernate,callback,t,action,boolean,enforce,native,session,throws,data,access,exception,assert,not,null,action,callback,object,must,not,be,null,session,session,null,boolean,is,new,false,try,session,obtain,session,factory,get,current,session,catch,hibernate,exception,ex,logger,debug,could,not,retrieve,pre,bound,hibernate,session,ex,if,session,null,session,obtain,session,factory,open,session,session,set,flush,mode,flush,mode,manual,is,new,true,try,enable,filters,session,session,session,to,expose,enforce,native,session,is,expose,native,session,session,create,session,proxy,session,return,action,do,in,hibernate,session,to,expose,catch,hibernate,exception,ex,throw,session,factory,utils,convert,hibernate,access,exception,ex,catch,persistence,exception,ex,if,ex,get,cause,instanceof,hibernate,exception,throw,session,factory,utils,convert,hibernate,access,exception,hibernate,exception,ex,get,cause,throw,ex,catch,runtime,exception,ex,throw,ex,finally,if,is,new,session,factory,utils,close,session,session,else,disable,filters,session
HibernateTemplate -> @SuppressWarnings("deprecation") 	@Nullable 	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException;1519995197;Execute the action specified by the given action object within a Session._@param action callback object that specifies the Hibernate action_@param enforceNativeSession whether to enforce exposure of the native_Hibernate Session to callback code_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;@SuppressWarnings("deprecation")_	@Nullable_	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException {_		Assert.notNull(action, "Callback object must not be null")___		Session session = null__		boolean isNew = false__		try {_			session = obtainSessionFactory().getCurrentSession()__		}_		catch (HibernateException ex) {_			logger.debug("Could not retrieve pre-bound Hibernate session", ex)__		}_		if (session == null) {_			session = obtainSessionFactory().openSession()__			session.setFlushMode(FlushMode.MANUAL)__			isNew = true__		}__		try {_			enableFilters(session)__			Session sessionToExpose =_					(enforceNativeSession || isExposeNativeSession() ? session : createSessionProxy(session))__			return action.doInHibernate(sessionToExpose)__		}_		catch (HibernateException ex) {_			throw SessionFactoryUtils.convertHibernateAccessException(ex)__		}_		catch (PersistenceException ex) {_			if (ex.getCause() instanceof HibernateException) {_				throw SessionFactoryUtils.convertHibernateAccessException((HibernateException) ex.getCause())__			}_			throw ex__		}_		catch (RuntimeException ex) {_			_			throw ex__		}_		finally {_			if (isNew) {_				SessionFactoryUtils.closeSession(session)__			}_			else {_				disableFilters(session)__			}_		}_	};execute,the,action,specified,by,the,given,action,object,within,a,session,param,action,callback,object,that,specifies,the,hibernate,action,param,enforce,native,session,whether,to,enforce,exposure,of,the,native,hibernate,session,to,callback,code,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;suppress,warnings,deprecation,nullable,protected,t,t,do,execute,hibernate,callback,t,action,boolean,enforce,native,session,throws,data,access,exception,assert,not,null,action,callback,object,must,not,be,null,session,session,null,boolean,is,new,false,try,session,obtain,session,factory,get,current,session,catch,hibernate,exception,ex,logger,debug,could,not,retrieve,pre,bound,hibernate,session,ex,if,session,null,session,obtain,session,factory,open,session,session,set,flush,mode,flush,mode,manual,is,new,true,try,enable,filters,session,session,session,to,expose,enforce,native,session,is,expose,native,session,session,create,session,proxy,session,return,action,do,in,hibernate,session,to,expose,catch,hibernate,exception,ex,throw,session,factory,utils,convert,hibernate,access,exception,ex,catch,persistence,exception,ex,if,ex,get,cause,instanceof,hibernate,exception,throw,session,factory,utils,convert,hibernate,access,exception,hibernate,exception,ex,get,cause,throw,ex,catch,runtime,exception,ex,throw,ex,finally,if,is,new,session,factory,utils,close,session,session,else,disable,filters,session
HibernateTemplate -> @SuppressWarnings("deprecation") 	@Nullable 	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException;1530174524;Execute the action specified by the given action object within a Session._@param action callback object that specifies the Hibernate action_@param enforceNativeSession whether to enforce exposure of the native_Hibernate Session to callback code_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;@SuppressWarnings("deprecation")_	@Nullable_	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException {_		Assert.notNull(action, "Callback object must not be null")___		Session session = null__		boolean isNew = false__		try {_			session = obtainSessionFactory().getCurrentSession()__		}_		catch (HibernateException ex) {_			logger.debug("Could not retrieve pre-bound Hibernate session", ex)__		}_		if (session == null) {_			session = obtainSessionFactory().openSession()__			session.setFlushMode(FlushMode.MANUAL)__			isNew = true__		}__		try {_			enableFilters(session)__			Session sessionToExpose =_					(enforceNativeSession || isExposeNativeSession() ? session : createSessionProxy(session))__			return action.doInHibernate(sessionToExpose)__		}_		catch (HibernateException ex) {_			throw SessionFactoryUtils.convertHibernateAccessException(ex)__		}_		catch (PersistenceException ex) {_			if (ex.getCause() instanceof HibernateException) {_				throw SessionFactoryUtils.convertHibernateAccessException((HibernateException) ex.getCause())__			}_			throw ex__		}_		catch (RuntimeException ex) {_			_			throw ex__		}_		finally {_			if (isNew) {_				SessionFactoryUtils.closeSession(session)__			}_			else {_				disableFilters(session)__			}_		}_	};execute,the,action,specified,by,the,given,action,object,within,a,session,param,action,callback,object,that,specifies,the,hibernate,action,param,enforce,native,session,whether,to,enforce,exposure,of,the,native,hibernate,session,to,callback,code,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;suppress,warnings,deprecation,nullable,protected,t,t,do,execute,hibernate,callback,t,action,boolean,enforce,native,session,throws,data,access,exception,assert,not,null,action,callback,object,must,not,be,null,session,session,null,boolean,is,new,false,try,session,obtain,session,factory,get,current,session,catch,hibernate,exception,ex,logger,debug,could,not,retrieve,pre,bound,hibernate,session,ex,if,session,null,session,obtain,session,factory,open,session,session,set,flush,mode,flush,mode,manual,is,new,true,try,enable,filters,session,session,session,to,expose,enforce,native,session,is,expose,native,session,session,create,session,proxy,session,return,action,do,in,hibernate,session,to,expose,catch,hibernate,exception,ex,throw,session,factory,utils,convert,hibernate,access,exception,ex,catch,persistence,exception,ex,if,ex,get,cause,instanceof,hibernate,exception,throw,session,factory,utils,convert,hibernate,access,exception,hibernate,exception,ex,get,cause,throw,ex,catch,runtime,exception,ex,throw,ex,finally,if,is,new,session,factory,utils,close,session,session,else,disable,filters,session
HibernateTemplate -> @SuppressWarnings("deprecation") 	@Nullable 	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException;1530709629;Execute the action specified by the given action object within a Session._@param action callback object that specifies the Hibernate action_@param enforceNativeSession whether to enforce exposure of the native_Hibernate Session to callback code_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;@SuppressWarnings("deprecation")_	@Nullable_	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException {_		Assert.notNull(action, "Callback object must not be null")___		Session session = null__		boolean isNew = false__		try {_			session = obtainSessionFactory().getCurrentSession()__		}_		catch (HibernateException ex) {_			logger.debug("Could not retrieve pre-bound Hibernate session", ex)__		}_		if (session == null) {_			session = obtainSessionFactory().openSession()__			session.setFlushMode(FlushMode.MANUAL)__			isNew = true__		}__		try {_			enableFilters(session)__			Session sessionToExpose =_					(enforceNativeSession || isExposeNativeSession() ? session : createSessionProxy(session))__			return action.doInHibernate(sessionToExpose)__		}_		catch (HibernateException ex) {_			throw SessionFactoryUtils.convertHibernateAccessException(ex)__		}_		catch (PersistenceException ex) {_			if (ex.getCause() instanceof HibernateException) {_				throw SessionFactoryUtils.convertHibernateAccessException((HibernateException) ex.getCause())__			}_			throw ex__		}_		catch (RuntimeException ex) {_			_			throw ex__		}_		finally {_			if (isNew) {_				SessionFactoryUtils.closeSession(session)__			}_			else {_				disableFilters(session)__			}_		}_	};execute,the,action,specified,by,the,given,action,object,within,a,session,param,action,callback,object,that,specifies,the,hibernate,action,param,enforce,native,session,whether,to,enforce,exposure,of,the,native,hibernate,session,to,callback,code,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;suppress,warnings,deprecation,nullable,protected,t,t,do,execute,hibernate,callback,t,action,boolean,enforce,native,session,throws,data,access,exception,assert,not,null,action,callback,object,must,not,be,null,session,session,null,boolean,is,new,false,try,session,obtain,session,factory,get,current,session,catch,hibernate,exception,ex,logger,debug,could,not,retrieve,pre,bound,hibernate,session,ex,if,session,null,session,obtain,session,factory,open,session,session,set,flush,mode,flush,mode,manual,is,new,true,try,enable,filters,session,session,session,to,expose,enforce,native,session,is,expose,native,session,session,create,session,proxy,session,return,action,do,in,hibernate,session,to,expose,catch,hibernate,exception,ex,throw,session,factory,utils,convert,hibernate,access,exception,ex,catch,persistence,exception,ex,if,ex,get,cause,instanceof,hibernate,exception,throw,session,factory,utils,convert,hibernate,access,exception,hibernate,exception,ex,get,cause,throw,ex,catch,runtime,exception,ex,throw,ex,finally,if,is,new,session,factory,utils,close,session,session,else,disable,filters,session
HibernateTemplate -> public void setCacheQueries(boolean cacheQueries);1467668243;Set whether to cache all queries executed by this template._<p>If this is "true", all Query and Criteria objects created by_this template will be marked as cacheable (including all_queries through find methods)._<p>To specify the query region to be used for queries cached_by this template, set the "queryCacheRegion" property._@see #setQueryCacheRegion_@see org.hibernate.Query#setCacheable_@see Criteria#setCacheable;public void setCacheQueries(boolean cacheQueries) {_		this.cacheQueries = cacheQueries__	};set,whether,to,cache,all,queries,executed,by,this,template,p,if,this,is,true,all,query,and,criteria,objects,created,by,this,template,will,be,marked,as,cacheable,including,all,queries,through,find,methods,p,to,specify,the,query,region,to,be,used,for,queries,cached,by,this,template,set,the,query,cache,region,property,see,set,query,cache,region,see,org,hibernate,query,set,cacheable,see,criteria,set,cacheable;public,void,set,cache,queries,boolean,cache,queries,this,cache,queries,cache,queries
HibernateTemplate -> public void setCacheQueries(boolean cacheQueries);1467811209;Set whether to cache all queries executed by this template._<p>If this is "true", all Query and Criteria objects created by_this template will be marked as cacheable (including all_queries through find methods)._<p>To specify the query region to be used for queries cached_by this template, set the "queryCacheRegion" property._@see #setQueryCacheRegion_@see org.hibernate.Query#setCacheable_@see Criteria#setCacheable;public void setCacheQueries(boolean cacheQueries) {_		this.cacheQueries = cacheQueries__	};set,whether,to,cache,all,queries,executed,by,this,template,p,if,this,is,true,all,query,and,criteria,objects,created,by,this,template,will,be,marked,as,cacheable,including,all,queries,through,find,methods,p,to,specify,the,query,region,to,be,used,for,queries,cached,by,this,template,set,the,query,cache,region,property,see,set,query,cache,region,see,org,hibernate,query,set,cacheable,see,criteria,set,cacheable;public,void,set,cache,queries,boolean,cache,queries,this,cache,queries,cache,queries
HibernateTemplate -> public void setCacheQueries(boolean cacheQueries);1468441852;Set whether to cache all queries executed by this template._<p>If this is "true", all Query and Criteria objects created by_this template will be marked as cacheable (including all_queries through find methods)._<p>To specify the query region to be used for queries cached_by this template, set the "queryCacheRegion" property._@see #setQueryCacheRegion_@see org.hibernate.Query#setCacheable_@see Criteria#setCacheable;public void setCacheQueries(boolean cacheQueries) {_		this.cacheQueries = cacheQueries__	};set,whether,to,cache,all,queries,executed,by,this,template,p,if,this,is,true,all,query,and,criteria,objects,created,by,this,template,will,be,marked,as,cacheable,including,all,queries,through,find,methods,p,to,specify,the,query,region,to,be,used,for,queries,cached,by,this,template,set,the,query,cache,region,property,see,set,query,cache,region,see,org,hibernate,query,set,cacheable,see,criteria,set,cacheable;public,void,set,cache,queries,boolean,cache,queries,this,cache,queries,cache,queries
HibernateTemplate -> public void setCacheQueries(boolean cacheQueries);1469534553;Set whether to cache all queries executed by this template._<p>If this is "true", all Query and Criteria objects created by_this template will be marked as cacheable (including all_queries through find methods)._<p>To specify the query region to be used for queries cached_by this template, set the "queryCacheRegion" property._@see #setQueryCacheRegion_@see org.hibernate.Query#setCacheable_@see Criteria#setCacheable;public void setCacheQueries(boolean cacheQueries) {_		this.cacheQueries = cacheQueries__	};set,whether,to,cache,all,queries,executed,by,this,template,p,if,this,is,true,all,query,and,criteria,objects,created,by,this,template,will,be,marked,as,cacheable,including,all,queries,through,find,methods,p,to,specify,the,query,region,to,be,used,for,queries,cached,by,this,template,set,the,query,cache,region,property,see,set,query,cache,region,see,org,hibernate,query,set,cacheable,see,criteria,set,cacheable;public,void,set,cache,queries,boolean,cache,queries,this,cache,queries,cache,queries
HibernateTemplate -> public void setCacheQueries(boolean cacheQueries);1473503884;Set whether to cache all queries executed by this template._<p>If this is "true", all Query and Criteria objects created by_this template will be marked as cacheable (including all_queries through find methods)._<p>To specify the query region to be used for queries cached_by this template, set the "queryCacheRegion" property._@see #setQueryCacheRegion_@see org.hibernate.Query#setCacheable_@see Criteria#setCacheable;public void setCacheQueries(boolean cacheQueries) {_		this.cacheQueries = cacheQueries__	};set,whether,to,cache,all,queries,executed,by,this,template,p,if,this,is,true,all,query,and,criteria,objects,created,by,this,template,will,be,marked,as,cacheable,including,all,queries,through,find,methods,p,to,specify,the,query,region,to,be,used,for,queries,cached,by,this,template,set,the,query,cache,region,property,see,set,query,cache,region,see,org,hibernate,query,set,cacheable,see,criteria,set,cacheable;public,void,set,cache,queries,boolean,cache,queries,this,cache,queries,cache,queries
HibernateTemplate -> public void setCacheQueries(boolean cacheQueries);1495868221;Set whether to cache all queries executed by this template._<p>If this is "true", all Query and Criteria objects created by_this template will be marked as cacheable (including all_queries through find methods)._<p>To specify the query region to be used for queries cached_by this template, set the "queryCacheRegion" property._@see #setQueryCacheRegion_@see org.hibernate.Query#setCacheable_@see Criteria#setCacheable;public void setCacheQueries(boolean cacheQueries) {_		this.cacheQueries = cacheQueries__	};set,whether,to,cache,all,queries,executed,by,this,template,p,if,this,is,true,all,query,and,criteria,objects,created,by,this,template,will,be,marked,as,cacheable,including,all,queries,through,find,methods,p,to,specify,the,query,region,to,be,used,for,queries,cached,by,this,template,set,the,query,cache,region,property,see,set,query,cache,region,see,org,hibernate,query,set,cacheable,see,criteria,set,cacheable;public,void,set,cache,queries,boolean,cache,queries,this,cache,queries,cache,queries
HibernateTemplate -> public void setCacheQueries(boolean cacheQueries);1496259743;Set whether to cache all queries executed by this template._<p>If this is "true", all Query and Criteria objects created by_this template will be marked as cacheable (including all_queries through find methods)._<p>To specify the query region to be used for queries cached_by this template, set the "queryCacheRegion" property._@see #setQueryCacheRegion_@see org.hibernate.Query#setCacheable_@see Criteria#setCacheable;public void setCacheQueries(boolean cacheQueries) {_		this.cacheQueries = cacheQueries__	};set,whether,to,cache,all,queries,executed,by,this,template,p,if,this,is,true,all,query,and,criteria,objects,created,by,this,template,will,be,marked,as,cacheable,including,all,queries,through,find,methods,p,to,specify,the,query,region,to,be,used,for,queries,cached,by,this,template,set,the,query,cache,region,property,see,set,query,cache,region,see,org,hibernate,query,set,cacheable,see,criteria,set,cacheable;public,void,set,cache,queries,boolean,cache,queries,this,cache,queries,cache,queries
HibernateTemplate -> public void setCacheQueries(boolean cacheQueries);1496837955;Set whether to cache all queries executed by this template._<p>If this is "true", all Query and Criteria objects created by_this template will be marked as cacheable (including all_queries through find methods)._<p>To specify the query region to be used for queries cached_by this template, set the "queryCacheRegion" property._@see #setQueryCacheRegion_@see org.hibernate.Query#setCacheable_@see Criteria#setCacheable;public void setCacheQueries(boolean cacheQueries) {_		this.cacheQueries = cacheQueries__	};set,whether,to,cache,all,queries,executed,by,this,template,p,if,this,is,true,all,query,and,criteria,objects,created,by,this,template,will,be,marked,as,cacheable,including,all,queries,through,find,methods,p,to,specify,the,query,region,to,be,used,for,queries,cached,by,this,template,set,the,query,cache,region,property,see,set,query,cache,region,see,org,hibernate,query,set,cacheable,see,criteria,set,cacheable;public,void,set,cache,queries,boolean,cache,queries,this,cache,queries,cache,queries
HibernateTemplate -> public void setCacheQueries(boolean cacheQueries);1500448076;Set whether to cache all queries executed by this template._<p>If this is "true", all Query and Criteria objects created by_this template will be marked as cacheable (including all_queries through find methods)._<p>To specify the query region to be used for queries cached_by this template, set the "queryCacheRegion" property._@see #setQueryCacheRegion_@see org.hibernate.Query#setCacheable_@see Criteria#setCacheable;public void setCacheQueries(boolean cacheQueries) {_		this.cacheQueries = cacheQueries__	};set,whether,to,cache,all,queries,executed,by,this,template,p,if,this,is,true,all,query,and,criteria,objects,created,by,this,template,will,be,marked,as,cacheable,including,all,queries,through,find,methods,p,to,specify,the,query,region,to,be,used,for,queries,cached,by,this,template,set,the,query,cache,region,property,see,set,query,cache,region,see,org,hibernate,query,set,cacheable,see,criteria,set,cacheable;public,void,set,cache,queries,boolean,cache,queries,this,cache,queries,cache,queries
HibernateTemplate -> public void setCacheQueries(boolean cacheQueries);1502974979;Set whether to cache all queries executed by this template._<p>If this is "true", all Query and Criteria objects created by_this template will be marked as cacheable (including all_queries through find methods)._<p>To specify the query region to be used for queries cached_by this template, set the "queryCacheRegion" property._@see #setQueryCacheRegion_@see org.hibernate.Query#setCacheable_@see Criteria#setCacheable;public void setCacheQueries(boolean cacheQueries) {_		this.cacheQueries = cacheQueries__	};set,whether,to,cache,all,queries,executed,by,this,template,p,if,this,is,true,all,query,and,criteria,objects,created,by,this,template,will,be,marked,as,cacheable,including,all,queries,through,find,methods,p,to,specify,the,query,region,to,be,used,for,queries,cached,by,this,template,set,the,query,cache,region,property,see,set,query,cache,region,see,org,hibernate,query,set,cacheable,see,criteria,set,cacheable;public,void,set,cache,queries,boolean,cache,queries,this,cache,queries,cache,queries
HibernateTemplate -> public void setCacheQueries(boolean cacheQueries);1517247608;Set whether to cache all queries executed by this template._<p>If this is "true", all Query and Criteria objects created by_this template will be marked as cacheable (including all_queries through find methods)._<p>To specify the query region to be used for queries cached_by this template, set the "queryCacheRegion" property._@see #setQueryCacheRegion_@see org.hibernate.Query#setCacheable_@see Criteria#setCacheable;public void setCacheQueries(boolean cacheQueries) {_		this.cacheQueries = cacheQueries__	};set,whether,to,cache,all,queries,executed,by,this,template,p,if,this,is,true,all,query,and,criteria,objects,created,by,this,template,will,be,marked,as,cacheable,including,all,queries,through,find,methods,p,to,specify,the,query,region,to,be,used,for,queries,cached,by,this,template,set,the,query,cache,region,property,see,set,query,cache,region,see,org,hibernate,query,set,cacheable,see,criteria,set,cacheable;public,void,set,cache,queries,boolean,cache,queries,this,cache,queries,cache,queries
HibernateTemplate -> public void setCacheQueries(boolean cacheQueries);1519944186;Set whether to cache all queries executed by this template._<p>If this is "true", all Query and Criteria objects created by_this template will be marked as cacheable (including all_queries through find methods)._<p>To specify the query region to be used for queries cached_by this template, set the "queryCacheRegion" property._@see #setQueryCacheRegion_@see org.hibernate.Query#setCacheable_@see Criteria#setCacheable;public void setCacheQueries(boolean cacheQueries) {_		this.cacheQueries = cacheQueries__	};set,whether,to,cache,all,queries,executed,by,this,template,p,if,this,is,true,all,query,and,criteria,objects,created,by,this,template,will,be,marked,as,cacheable,including,all,queries,through,find,methods,p,to,specify,the,query,region,to,be,used,for,queries,cached,by,this,template,set,the,query,cache,region,property,see,set,query,cache,region,see,org,hibernate,query,set,cacheable,see,criteria,set,cacheable;public,void,set,cache,queries,boolean,cache,queries,this,cache,queries,cache,queries
HibernateTemplate -> public void setCacheQueries(boolean cacheQueries);1519995197;Set whether to cache all queries executed by this template._<p>If this is "true", all Query and Criteria objects created by_this template will be marked as cacheable (including all_queries through find methods)._<p>To specify the query region to be used for queries cached_by this template, set the "queryCacheRegion" property._@see #setQueryCacheRegion_@see org.hibernate.Query#setCacheable_@see Criteria#setCacheable;public void setCacheQueries(boolean cacheQueries) {_		this.cacheQueries = cacheQueries__	};set,whether,to,cache,all,queries,executed,by,this,template,p,if,this,is,true,all,query,and,criteria,objects,created,by,this,template,will,be,marked,as,cacheable,including,all,queries,through,find,methods,p,to,specify,the,query,region,to,be,used,for,queries,cached,by,this,template,set,the,query,cache,region,property,see,set,query,cache,region,see,org,hibernate,query,set,cacheable,see,criteria,set,cacheable;public,void,set,cache,queries,boolean,cache,queries,this,cache,queries,cache,queries
HibernateTemplate -> public void setCacheQueries(boolean cacheQueries);1530174524;Set whether to cache all queries executed by this template._<p>If this is "true", all Query and Criteria objects created by_this template will be marked as cacheable (including all_queries through find methods)._<p>To specify the query region to be used for queries cached_by this template, set the "queryCacheRegion" property._@see #setQueryCacheRegion_@see org.hibernate.Query#setCacheable_@see Criteria#setCacheable;public void setCacheQueries(boolean cacheQueries) {_		this.cacheQueries = cacheQueries__	};set,whether,to,cache,all,queries,executed,by,this,template,p,if,this,is,true,all,query,and,criteria,objects,created,by,this,template,will,be,marked,as,cacheable,including,all,queries,through,find,methods,p,to,specify,the,query,region,to,be,used,for,queries,cached,by,this,template,set,the,query,cache,region,property,see,set,query,cache,region,see,org,hibernate,query,set,cacheable,see,criteria,set,cacheable;public,void,set,cache,queries,boolean,cache,queries,this,cache,queries,cache,queries
HibernateTemplate -> public void setCacheQueries(boolean cacheQueries);1530709629;Set whether to cache all queries executed by this template._<p>If this is "true", all Query and Criteria objects created by_this template will be marked as cacheable (including all_queries through find methods)._<p>To specify the query region to be used for queries cached_by this template, set the "queryCacheRegion" property._@see #setQueryCacheRegion_@see org.hibernate.Query#setCacheable_@see Criteria#setCacheable;public void setCacheQueries(boolean cacheQueries) {_		this.cacheQueries = cacheQueries__	};set,whether,to,cache,all,queries,executed,by,this,template,p,if,this,is,true,all,query,and,criteria,objects,created,by,this,template,will,be,marked,as,cacheable,including,all,queries,through,find,methods,p,to,specify,the,query,region,to,be,used,for,queries,cached,by,this,template,set,the,query,cache,region,property,see,set,query,cache,region,see,org,hibernate,query,set,cacheable,see,criteria,set,cacheable;public,void,set,cache,queries,boolean,cache,queries,this,cache,queries,cache,queries
HibernateTemplate -> public void setFetchSize(int fetchSize);1467668243;Set the fetch size for this HibernateTemplate. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the JDBC driver's default.;public void setFetchSize(int fetchSize) {_		this.fetchSize = fetchSize__	};set,the,fetch,size,for,this,hibernate,template,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,fetch,size,int,fetch,size,this,fetch,size,fetch,size
HibernateTemplate -> public void setFetchSize(int fetchSize);1467811209;Set the fetch size for this HibernateTemplate. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the JDBC driver's default.;public void setFetchSize(int fetchSize) {_		this.fetchSize = fetchSize__	};set,the,fetch,size,for,this,hibernate,template,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,fetch,size,int,fetch,size,this,fetch,size,fetch,size
HibernateTemplate -> public void setFetchSize(int fetchSize);1468441852;Set the fetch size for this HibernateTemplate. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the JDBC driver's default.;public void setFetchSize(int fetchSize) {_		this.fetchSize = fetchSize__	};set,the,fetch,size,for,this,hibernate,template,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,fetch,size,int,fetch,size,this,fetch,size,fetch,size
HibernateTemplate -> public void setFetchSize(int fetchSize);1469534553;Set the fetch size for this HibernateTemplate. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the JDBC driver's default.;public void setFetchSize(int fetchSize) {_		this.fetchSize = fetchSize__	};set,the,fetch,size,for,this,hibernate,template,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,fetch,size,int,fetch,size,this,fetch,size,fetch,size
HibernateTemplate -> public void setFetchSize(int fetchSize);1473503884;Set the fetch size for this HibernateTemplate. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the JDBC driver's default.;public void setFetchSize(int fetchSize) {_		this.fetchSize = fetchSize__	};set,the,fetch,size,for,this,hibernate,template,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,fetch,size,int,fetch,size,this,fetch,size,fetch,size
HibernateTemplate -> public void setFetchSize(int fetchSize);1495868221;Set the fetch size for this HibernateTemplate. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the JDBC driver's default.;public void setFetchSize(int fetchSize) {_		this.fetchSize = fetchSize__	};set,the,fetch,size,for,this,hibernate,template,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,fetch,size,int,fetch,size,this,fetch,size,fetch,size
HibernateTemplate -> public void setFetchSize(int fetchSize);1496259743;Set the fetch size for this HibernateTemplate. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the JDBC driver's default.;public void setFetchSize(int fetchSize) {_		this.fetchSize = fetchSize__	};set,the,fetch,size,for,this,hibernate,template,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,fetch,size,int,fetch,size,this,fetch,size,fetch,size
HibernateTemplate -> public void setFetchSize(int fetchSize);1496837955;Set the fetch size for this HibernateTemplate. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the JDBC driver's default.;public void setFetchSize(int fetchSize) {_		this.fetchSize = fetchSize__	};set,the,fetch,size,for,this,hibernate,template,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,fetch,size,int,fetch,size,this,fetch,size,fetch,size
HibernateTemplate -> public void setFetchSize(int fetchSize);1500448076;Set the fetch size for this HibernateTemplate. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the JDBC driver's default.;public void setFetchSize(int fetchSize) {_		this.fetchSize = fetchSize__	};set,the,fetch,size,for,this,hibernate,template,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,fetch,size,int,fetch,size,this,fetch,size,fetch,size
HibernateTemplate -> public void setFetchSize(int fetchSize);1502974979;Set the fetch size for this HibernateTemplate. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the JDBC driver's default.;public void setFetchSize(int fetchSize) {_		this.fetchSize = fetchSize__	};set,the,fetch,size,for,this,hibernate,template,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,fetch,size,int,fetch,size,this,fetch,size,fetch,size
HibernateTemplate -> public void setFetchSize(int fetchSize);1517247608;Set the fetch size for this HibernateTemplate. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the JDBC driver's default.;public void setFetchSize(int fetchSize) {_		this.fetchSize = fetchSize__	};set,the,fetch,size,for,this,hibernate,template,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,fetch,size,int,fetch,size,this,fetch,size,fetch,size
HibernateTemplate -> public void setFetchSize(int fetchSize);1519944186;Set the fetch size for this HibernateTemplate. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the JDBC driver's default.;public void setFetchSize(int fetchSize) {_		this.fetchSize = fetchSize__	};set,the,fetch,size,for,this,hibernate,template,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,fetch,size,int,fetch,size,this,fetch,size,fetch,size
HibernateTemplate -> public void setFetchSize(int fetchSize);1519995197;Set the fetch size for this HibernateTemplate. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the JDBC driver's default.;public void setFetchSize(int fetchSize) {_		this.fetchSize = fetchSize__	};set,the,fetch,size,for,this,hibernate,template,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,fetch,size,int,fetch,size,this,fetch,size,fetch,size
HibernateTemplate -> public void setFetchSize(int fetchSize);1530174524;Set the fetch size for this HibernateTemplate. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the JDBC driver's default.;public void setFetchSize(int fetchSize) {_		this.fetchSize = fetchSize__	};set,the,fetch,size,for,this,hibernate,template,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,fetch,size,int,fetch,size,this,fetch,size,fetch,size
HibernateTemplate -> public void setFetchSize(int fetchSize);1530709629;Set the fetch size for this HibernateTemplate. This is important for processing_large result sets: Setting this higher than the default value will increase_processing speed at the cost of memory consumption_ setting this lower can_avoid transferring row data that will never be read by the application._<p>Default is 0, indicating to use the JDBC driver's default.;public void setFetchSize(int fetchSize) {_		this.fetchSize = fetchSize__	};set,the,fetch,size,for,this,hibernate,template,this,is,important,for,processing,large,result,sets,setting,this,higher,than,the,default,value,will,increase,processing,speed,at,the,cost,of,memory,consumption,setting,this,lower,can,avoid,transferring,row,data,that,will,never,be,read,by,the,application,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,fetch,size,int,fetch,size,this,fetch,size,fetch,size
HibernateTemplate -> public void setSessionFactory(SessionFactory sessionFactory);1467668243;Set the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;public void setSessionFactory(SessionFactory sessionFactory) {_		this.sessionFactory = sessionFactory__	};set,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;public,void,set,session,factory,session,factory,session,factory,this,session,factory,session,factory
HibernateTemplate -> public void setSessionFactory(SessionFactory sessionFactory);1467811209;Set the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;public void setSessionFactory(SessionFactory sessionFactory) {_		this.sessionFactory = sessionFactory__	};set,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;public,void,set,session,factory,session,factory,session,factory,this,session,factory,session,factory
HibernateTemplate -> public void setSessionFactory(SessionFactory sessionFactory);1468441852;Set the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;public void setSessionFactory(SessionFactory sessionFactory) {_		this.sessionFactory = sessionFactory__	};set,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;public,void,set,session,factory,session,factory,session,factory,this,session,factory,session,factory
HibernateTemplate -> public void setSessionFactory(SessionFactory sessionFactory);1469534553;Set the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;public void setSessionFactory(SessionFactory sessionFactory) {_		this.sessionFactory = sessionFactory__	};set,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;public,void,set,session,factory,session,factory,session,factory,this,session,factory,session,factory
HibernateTemplate -> public void setSessionFactory(SessionFactory sessionFactory);1473503884;Set the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;public void setSessionFactory(SessionFactory sessionFactory) {_		this.sessionFactory = sessionFactory__	};set,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;public,void,set,session,factory,session,factory,session,factory,this,session,factory,session,factory
HibernateTemplate -> public void setSessionFactory(SessionFactory sessionFactory);1495868221;Set the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;public void setSessionFactory(SessionFactory sessionFactory) {_		this.sessionFactory = sessionFactory__	};set,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;public,void,set,session,factory,session,factory,session,factory,this,session,factory,session,factory
HibernateTemplate -> public void setSessionFactory(SessionFactory sessionFactory);1496259743;Set the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;public void setSessionFactory(SessionFactory sessionFactory) {_		this.sessionFactory = sessionFactory__	};set,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;public,void,set,session,factory,session,factory,session,factory,this,session,factory,session,factory
HibernateTemplate -> public void setSessionFactory(SessionFactory sessionFactory);1496837955;Set the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;public void setSessionFactory(SessionFactory sessionFactory) {_		this.sessionFactory = sessionFactory__	};set,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;public,void,set,session,factory,session,factory,session,factory,this,session,factory,session,factory
HibernateTemplate -> @SuppressWarnings({"rawtypes", "deprecation"}) 	protected void prepareQuery(org.hibernate.Query queryObject);1467668243;Prepare the given Query object, applying cache settings and/or_a transaction timeout._@param queryObject the Query object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;@SuppressWarnings({"rawtypes", "deprecation"})_	protected void prepareQuery(org.hibernate.Query queryObject) {_		if (isCacheQueries()) {_			queryObject.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				queryObject.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			queryObject.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			queryObject.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(getSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			queryObject.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,query,object,applying,cache,settings,and,or,a,transaction,timeout,param,query,object,the,query,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;suppress,warnings,rawtypes,deprecation,protected,void,prepare,query,org,hibernate,query,query,object,if,is,cache,queries,query,object,set,cacheable,true,if,get,query,cache,region,null,query,object,set,cache,region,get,query,cache,region,if,get,fetch,size,0,query,object,set,fetch,size,get,fetch,size,if,get,max,results,0,query,object,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,get,session,factory,if,session,holder,null,session,holder,has,timeout,query,object,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> @SuppressWarnings({"rawtypes", "deprecation"}) 	protected void prepareQuery(org.hibernate.Query queryObject);1467811209;Prepare the given Query object, applying cache settings and/or_a transaction timeout._@param queryObject the Query object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;@SuppressWarnings({"rawtypes", "deprecation"})_	protected void prepareQuery(org.hibernate.Query queryObject) {_		if (isCacheQueries()) {_			queryObject.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				queryObject.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			queryObject.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			queryObject.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(getSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			queryObject.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,query,object,applying,cache,settings,and,or,a,transaction,timeout,param,query,object,the,query,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;suppress,warnings,rawtypes,deprecation,protected,void,prepare,query,org,hibernate,query,query,object,if,is,cache,queries,query,object,set,cacheable,true,if,get,query,cache,region,null,query,object,set,cache,region,get,query,cache,region,if,get,fetch,size,0,query,object,set,fetch,size,get,fetch,size,if,get,max,results,0,query,object,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,get,session,factory,if,session,holder,null,session,holder,has,timeout,query,object,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> @SuppressWarnings({"rawtypes", "deprecation"}) 	protected void prepareQuery(org.hibernate.Query queryObject);1468441852;Prepare the given Query object, applying cache settings and/or_a transaction timeout._@param queryObject the Query object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;@SuppressWarnings({"rawtypes", "deprecation"})_	protected void prepareQuery(org.hibernate.Query queryObject) {_		if (isCacheQueries()) {_			queryObject.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				queryObject.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			queryObject.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			queryObject.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(getSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			queryObject.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,query,object,applying,cache,settings,and,or,a,transaction,timeout,param,query,object,the,query,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;suppress,warnings,rawtypes,deprecation,protected,void,prepare,query,org,hibernate,query,query,object,if,is,cache,queries,query,object,set,cacheable,true,if,get,query,cache,region,null,query,object,set,cache,region,get,query,cache,region,if,get,fetch,size,0,query,object,set,fetch,size,get,fetch,size,if,get,max,results,0,query,object,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,get,session,factory,if,session,holder,null,session,holder,has,timeout,query,object,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> @SuppressWarnings({"rawtypes", "deprecation"}) 	protected void prepareQuery(org.hibernate.Query queryObject);1469534553;Prepare the given Query object, applying cache settings and/or_a transaction timeout._@param queryObject the Query object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;@SuppressWarnings({"rawtypes", "deprecation"})_	protected void prepareQuery(org.hibernate.Query queryObject) {_		if (isCacheQueries()) {_			queryObject.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				queryObject.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			queryObject.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			queryObject.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(getSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			queryObject.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,query,object,applying,cache,settings,and,or,a,transaction,timeout,param,query,object,the,query,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;suppress,warnings,rawtypes,deprecation,protected,void,prepare,query,org,hibernate,query,query,object,if,is,cache,queries,query,object,set,cacheable,true,if,get,query,cache,region,null,query,object,set,cache,region,get,query,cache,region,if,get,fetch,size,0,query,object,set,fetch,size,get,fetch,size,if,get,max,results,0,query,object,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,get,session,factory,if,session,holder,null,session,holder,has,timeout,query,object,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> @SuppressWarnings({"rawtypes", "deprecation"}) 	protected void prepareQuery(org.hibernate.Query queryObject);1473503884;Prepare the given Query object, applying cache settings and/or_a transaction timeout._@param queryObject the Query object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;@SuppressWarnings({"rawtypes", "deprecation"})_	protected void prepareQuery(org.hibernate.Query queryObject) {_		if (isCacheQueries()) {_			queryObject.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				queryObject.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			queryObject.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			queryObject.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(getSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			queryObject.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,query,object,applying,cache,settings,and,or,a,transaction,timeout,param,query,object,the,query,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;suppress,warnings,rawtypes,deprecation,protected,void,prepare,query,org,hibernate,query,query,object,if,is,cache,queries,query,object,set,cacheable,true,if,get,query,cache,region,null,query,object,set,cache,region,get,query,cache,region,if,get,fetch,size,0,query,object,set,fetch,size,get,fetch,size,if,get,max,results,0,query,object,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,get,session,factory,if,session,holder,null,session,holder,has,timeout,query,object,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> @SuppressWarnings({"rawtypes", "deprecation"}) 	protected void prepareQuery(org.hibernate.Query queryObject);1495868221;Prepare the given Query object, applying cache settings and/or_a transaction timeout._@param queryObject the Query object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;@SuppressWarnings({"rawtypes", "deprecation"})_	protected void prepareQuery(org.hibernate.Query queryObject) {_		if (isCacheQueries()) {_			queryObject.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				queryObject.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			queryObject.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			queryObject.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(getSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			queryObject.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,query,object,applying,cache,settings,and,or,a,transaction,timeout,param,query,object,the,query,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;suppress,warnings,rawtypes,deprecation,protected,void,prepare,query,org,hibernate,query,query,object,if,is,cache,queries,query,object,set,cacheable,true,if,get,query,cache,region,null,query,object,set,cache,region,get,query,cache,region,if,get,fetch,size,0,query,object,set,fetch,size,get,fetch,size,if,get,max,results,0,query,object,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,get,session,factory,if,session,holder,null,session,holder,has,timeout,query,object,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> @SuppressWarnings({"rawtypes", "deprecation"}) 	protected void prepareQuery(org.hibernate.Query queryObject);1496259743;Prepare the given Query object, applying cache settings and/or_a transaction timeout._@param queryObject the Query object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;@SuppressWarnings({"rawtypes", "deprecation"})_	protected void prepareQuery(org.hibernate.Query queryObject) {_		if (isCacheQueries()) {_			queryObject.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				queryObject.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			queryObject.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			queryObject.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(getSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			queryObject.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,query,object,applying,cache,settings,and,or,a,transaction,timeout,param,query,object,the,query,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;suppress,warnings,rawtypes,deprecation,protected,void,prepare,query,org,hibernate,query,query,object,if,is,cache,queries,query,object,set,cacheable,true,if,get,query,cache,region,null,query,object,set,cache,region,get,query,cache,region,if,get,fetch,size,0,query,object,set,fetch,size,get,fetch,size,if,get,max,results,0,query,object,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,get,session,factory,if,session,holder,null,session,holder,has,timeout,query,object,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> @SuppressWarnings({"rawtypes", "deprecation"}) 	protected void prepareQuery(org.hibernate.Query queryObject);1496837955;Prepare the given Query object, applying cache settings and/or_a transaction timeout._@param queryObject the Query object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;@SuppressWarnings({"rawtypes", "deprecation"})_	protected void prepareQuery(org.hibernate.Query queryObject) {_		if (isCacheQueries()) {_			queryObject.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				queryObject.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			queryObject.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			queryObject.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(obtainSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			queryObject.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,query,object,applying,cache,settings,and,or,a,transaction,timeout,param,query,object,the,query,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;suppress,warnings,rawtypes,deprecation,protected,void,prepare,query,org,hibernate,query,query,object,if,is,cache,queries,query,object,set,cacheable,true,if,get,query,cache,region,null,query,object,set,cache,region,get,query,cache,region,if,get,fetch,size,0,query,object,set,fetch,size,get,fetch,size,if,get,max,results,0,query,object,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,obtain,session,factory,if,session,holder,null,session,holder,has,timeout,query,object,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> @SuppressWarnings({"rawtypes", "deprecation"}) 	protected void prepareQuery(org.hibernate.Query queryObject);1500448076;Prepare the given Query object, applying cache settings and/or_a transaction timeout._@param queryObject the Query object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;@SuppressWarnings({"rawtypes", "deprecation"})_	protected void prepareQuery(org.hibernate.Query queryObject) {_		if (isCacheQueries()) {_			queryObject.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				queryObject.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			queryObject.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			queryObject.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(obtainSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			queryObject.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,query,object,applying,cache,settings,and,or,a,transaction,timeout,param,query,object,the,query,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;suppress,warnings,rawtypes,deprecation,protected,void,prepare,query,org,hibernate,query,query,object,if,is,cache,queries,query,object,set,cacheable,true,if,get,query,cache,region,null,query,object,set,cache,region,get,query,cache,region,if,get,fetch,size,0,query,object,set,fetch,size,get,fetch,size,if,get,max,results,0,query,object,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,obtain,session,factory,if,session,holder,null,session,holder,has,timeout,query,object,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> @SuppressWarnings({"rawtypes", "deprecation"}) 	protected void prepareQuery(org.hibernate.Query queryObject);1502974979;Prepare the given Query object, applying cache settings and/or_a transaction timeout._@param queryObject the Query object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;@SuppressWarnings({"rawtypes", "deprecation"})_	protected void prepareQuery(org.hibernate.Query queryObject) {_		if (isCacheQueries()) {_			queryObject.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				queryObject.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			queryObject.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			queryObject.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(obtainSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			queryObject.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,query,object,applying,cache,settings,and,or,a,transaction,timeout,param,query,object,the,query,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;suppress,warnings,rawtypes,deprecation,protected,void,prepare,query,org,hibernate,query,query,object,if,is,cache,queries,query,object,set,cacheable,true,if,get,query,cache,region,null,query,object,set,cache,region,get,query,cache,region,if,get,fetch,size,0,query,object,set,fetch,size,get,fetch,size,if,get,max,results,0,query,object,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,obtain,session,factory,if,session,holder,null,session,holder,has,timeout,query,object,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> @SuppressWarnings({"rawtypes", "deprecation"}) 	protected void prepareQuery(org.hibernate.Query queryObject);1519944186;Prepare the given Query object, applying cache settings and/or_a transaction timeout._@param queryObject the Query object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;@SuppressWarnings({"rawtypes", "deprecation"})_	protected void prepareQuery(org.hibernate.Query queryObject) {_		if (isCacheQueries()) {_			queryObject.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				queryObject.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			queryObject.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			queryObject.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(obtainSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			queryObject.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,query,object,applying,cache,settings,and,or,a,transaction,timeout,param,query,object,the,query,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;suppress,warnings,rawtypes,deprecation,protected,void,prepare,query,org,hibernate,query,query,object,if,is,cache,queries,query,object,set,cacheable,true,if,get,query,cache,region,null,query,object,set,cache,region,get,query,cache,region,if,get,fetch,size,0,query,object,set,fetch,size,get,fetch,size,if,get,max,results,0,query,object,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,obtain,session,factory,if,session,holder,null,session,holder,has,timeout,query,object,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> @SuppressWarnings({"rawtypes", "deprecation"}) 	protected void prepareQuery(org.hibernate.Query queryObject);1519995197;Prepare the given Query object, applying cache settings and/or_a transaction timeout._@param queryObject the Query object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;@SuppressWarnings({"rawtypes", "deprecation"})_	protected void prepareQuery(org.hibernate.Query queryObject) {_		if (isCacheQueries()) {_			queryObject.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				queryObject.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			queryObject.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			queryObject.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(obtainSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			queryObject.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,query,object,applying,cache,settings,and,or,a,transaction,timeout,param,query,object,the,query,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;suppress,warnings,rawtypes,deprecation,protected,void,prepare,query,org,hibernate,query,query,object,if,is,cache,queries,query,object,set,cacheable,true,if,get,query,cache,region,null,query,object,set,cache,region,get,query,cache,region,if,get,fetch,size,0,query,object,set,fetch,size,get,fetch,size,if,get,max,results,0,query,object,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,obtain,session,factory,if,session,holder,null,session,holder,has,timeout,query,object,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> @SuppressWarnings({"rawtypes", "deprecation"}) 	protected void prepareQuery(org.hibernate.Query queryObject);1530174524;Prepare the given Query object, applying cache settings and/or_a transaction timeout._@param queryObject the Query object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;@SuppressWarnings({"rawtypes", "deprecation"})_	protected void prepareQuery(org.hibernate.Query queryObject) {_		if (isCacheQueries()) {_			queryObject.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				queryObject.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			queryObject.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			queryObject.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(obtainSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			queryObject.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,query,object,applying,cache,settings,and,or,a,transaction,timeout,param,query,object,the,query,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;suppress,warnings,rawtypes,deprecation,protected,void,prepare,query,org,hibernate,query,query,object,if,is,cache,queries,query,object,set,cacheable,true,if,get,query,cache,region,null,query,object,set,cache,region,get,query,cache,region,if,get,fetch,size,0,query,object,set,fetch,size,get,fetch,size,if,get,max,results,0,query,object,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,obtain,session,factory,if,session,holder,null,session,holder,has,timeout,query,object,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> @SuppressWarnings({"rawtypes", "deprecation"}) 	protected void prepareQuery(org.hibernate.Query queryObject);1530709629;Prepare the given Query object, applying cache settings and/or_a transaction timeout._@param queryObject the Query object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;@SuppressWarnings({"rawtypes", "deprecation"})_	protected void prepareQuery(org.hibernate.Query queryObject) {_		if (isCacheQueries()) {_			queryObject.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				queryObject.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			queryObject.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			queryObject.setMaxResults(getMaxResults())__		}__		ResourceHolderSupport sessionHolder =_				(ResourceHolderSupport) TransactionSynchronizationManager.getResource(obtainSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			queryObject.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,query,object,applying,cache,settings,and,or,a,transaction,timeout,param,query,object,the,query,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;suppress,warnings,rawtypes,deprecation,protected,void,prepare,query,org,hibernate,query,query,object,if,is,cache,queries,query,object,set,cacheable,true,if,get,query,cache,region,null,query,object,set,cache,region,get,query,cache,region,if,get,fetch,size,0,query,object,set,fetch,size,get,fetch,size,if,get,max,results,0,query,object,set,max,results,get,max,results,resource,holder,support,session,holder,resource,holder,support,transaction,synchronization,manager,get,resource,obtain,session,factory,if,session,holder,null,session,holder,has,timeout,query,object,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> public void setSessionFactory(@Nullable  SessionFactory sessionFactory);1500448076;Set the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;public void setSessionFactory(@Nullable  SessionFactory sessionFactory) {_		this.sessionFactory = sessionFactory__	};set,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;public,void,set,session,factory,nullable,session,factory,session,factory,this,session,factory,session,factory
HibernateTemplate -> public void setSessionFactory(@Nullable  SessionFactory sessionFactory);1502974979;Set the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;public void setSessionFactory(@Nullable  SessionFactory sessionFactory) {_		this.sessionFactory = sessionFactory__	};set,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;public,void,set,session,factory,nullable,session,factory,session,factory,this,session,factory,session,factory
HibernateTemplate -> public void setSessionFactory(@Nullable  SessionFactory sessionFactory);1517247608;Set the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;public void setSessionFactory(@Nullable  SessionFactory sessionFactory) {_		this.sessionFactory = sessionFactory__	};set,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;public,void,set,session,factory,nullable,session,factory,session,factory,this,session,factory,session,factory
HibernateTemplate -> public void setSessionFactory(@Nullable  SessionFactory sessionFactory);1519944186;Set the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;public void setSessionFactory(@Nullable  SessionFactory sessionFactory) {_		this.sessionFactory = sessionFactory__	};set,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;public,void,set,session,factory,nullable,session,factory,session,factory,this,session,factory,session,factory
HibernateTemplate -> public void setSessionFactory(@Nullable  SessionFactory sessionFactory);1519995197;Set the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;public void setSessionFactory(@Nullable  SessionFactory sessionFactory) {_		this.sessionFactory = sessionFactory__	};set,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;public,void,set,session,factory,nullable,session,factory,session,factory,this,session,factory,session,factory
HibernateTemplate -> public void setSessionFactory(@Nullable  SessionFactory sessionFactory);1530174524;Set the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;public void setSessionFactory(@Nullable  SessionFactory sessionFactory) {_		this.sessionFactory = sessionFactory__	};set,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;public,void,set,session,factory,nullable,session,factory,session,factory,this,session,factory,session,factory
HibernateTemplate -> public void setSessionFactory(@Nullable  SessionFactory sessionFactory);1530709629;Set the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;public void setSessionFactory(@Nullable  SessionFactory sessionFactory) {_		this.sessionFactory = sessionFactory__	};set,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;public,void,set,session,factory,nullable,session,factory,session,factory,this,session,factory,session,factory
HibernateTemplate -> public void setExposeNativeSession(boolean exposeNativeSession);1467668243;Set whether to expose the native Hibernate Session to_HibernateCallback code._<p>Default is "false": a Session proxy will be returned, suppressing_{@code close} calls and automatically applying query cache_settings and transaction timeouts._@see HibernateCallback_@see Session_@see #setCacheQueries_@see #setQueryCacheRegion_@see #prepareQuery_@see #prepareCriteria;public void setExposeNativeSession(boolean exposeNativeSession) {_		this.exposeNativeSession = exposeNativeSession__	};set,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,p,default,is,false,a,session,proxy,will,be,returned,suppressing,code,close,calls,and,automatically,applying,query,cache,settings,and,transaction,timeouts,see,hibernate,callback,see,session,see,set,cache,queries,see,set,query,cache,region,see,prepare,query,see,prepare,criteria;public,void,set,expose,native,session,boolean,expose,native,session,this,expose,native,session,expose,native,session
HibernateTemplate -> public void setExposeNativeSession(boolean exposeNativeSession);1467811209;Set whether to expose the native Hibernate Session to_HibernateCallback code._<p>Default is "false": a Session proxy will be returned, suppressing_{@code close} calls and automatically applying query cache_settings and transaction timeouts._@see HibernateCallback_@see Session_@see #setCacheQueries_@see #setQueryCacheRegion_@see #prepareQuery_@see #prepareCriteria;public void setExposeNativeSession(boolean exposeNativeSession) {_		this.exposeNativeSession = exposeNativeSession__	};set,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,p,default,is,false,a,session,proxy,will,be,returned,suppressing,code,close,calls,and,automatically,applying,query,cache,settings,and,transaction,timeouts,see,hibernate,callback,see,session,see,set,cache,queries,see,set,query,cache,region,see,prepare,query,see,prepare,criteria;public,void,set,expose,native,session,boolean,expose,native,session,this,expose,native,session,expose,native,session
HibernateTemplate -> public void setExposeNativeSession(boolean exposeNativeSession);1468441852;Set whether to expose the native Hibernate Session to_HibernateCallback code._<p>Default is "false": a Session proxy will be returned, suppressing_{@code close} calls and automatically applying query cache_settings and transaction timeouts._@see HibernateCallback_@see Session_@see #setCacheQueries_@see #setQueryCacheRegion_@see #prepareQuery_@see #prepareCriteria;public void setExposeNativeSession(boolean exposeNativeSession) {_		this.exposeNativeSession = exposeNativeSession__	};set,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,p,default,is,false,a,session,proxy,will,be,returned,suppressing,code,close,calls,and,automatically,applying,query,cache,settings,and,transaction,timeouts,see,hibernate,callback,see,session,see,set,cache,queries,see,set,query,cache,region,see,prepare,query,see,prepare,criteria;public,void,set,expose,native,session,boolean,expose,native,session,this,expose,native,session,expose,native,session
HibernateTemplate -> public void setExposeNativeSession(boolean exposeNativeSession);1469534553;Set whether to expose the native Hibernate Session to_HibernateCallback code._<p>Default is "false": a Session proxy will be returned, suppressing_{@code close} calls and automatically applying query cache_settings and transaction timeouts._@see HibernateCallback_@see Session_@see #setCacheQueries_@see #setQueryCacheRegion_@see #prepareQuery_@see #prepareCriteria;public void setExposeNativeSession(boolean exposeNativeSession) {_		this.exposeNativeSession = exposeNativeSession__	};set,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,p,default,is,false,a,session,proxy,will,be,returned,suppressing,code,close,calls,and,automatically,applying,query,cache,settings,and,transaction,timeouts,see,hibernate,callback,see,session,see,set,cache,queries,see,set,query,cache,region,see,prepare,query,see,prepare,criteria;public,void,set,expose,native,session,boolean,expose,native,session,this,expose,native,session,expose,native,session
HibernateTemplate -> public void setExposeNativeSession(boolean exposeNativeSession);1473503884;Set whether to expose the native Hibernate Session to_HibernateCallback code._<p>Default is "false": a Session proxy will be returned, suppressing_{@code close} calls and automatically applying query cache_settings and transaction timeouts._@see HibernateCallback_@see Session_@see #setCacheQueries_@see #setQueryCacheRegion_@see #prepareQuery_@see #prepareCriteria;public void setExposeNativeSession(boolean exposeNativeSession) {_		this.exposeNativeSession = exposeNativeSession__	};set,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,p,default,is,false,a,session,proxy,will,be,returned,suppressing,code,close,calls,and,automatically,applying,query,cache,settings,and,transaction,timeouts,see,hibernate,callback,see,session,see,set,cache,queries,see,set,query,cache,region,see,prepare,query,see,prepare,criteria;public,void,set,expose,native,session,boolean,expose,native,session,this,expose,native,session,expose,native,session
HibernateTemplate -> public void setExposeNativeSession(boolean exposeNativeSession);1495868221;Set whether to expose the native Hibernate Session to_HibernateCallback code._<p>Default is "false": a Session proxy will be returned, suppressing_{@code close} calls and automatically applying query cache_settings and transaction timeouts._@see HibernateCallback_@see Session_@see #setCacheQueries_@see #setQueryCacheRegion_@see #prepareQuery_@see #prepareCriteria;public void setExposeNativeSession(boolean exposeNativeSession) {_		this.exposeNativeSession = exposeNativeSession__	};set,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,p,default,is,false,a,session,proxy,will,be,returned,suppressing,code,close,calls,and,automatically,applying,query,cache,settings,and,transaction,timeouts,see,hibernate,callback,see,session,see,set,cache,queries,see,set,query,cache,region,see,prepare,query,see,prepare,criteria;public,void,set,expose,native,session,boolean,expose,native,session,this,expose,native,session,expose,native,session
HibernateTemplate -> public void setExposeNativeSession(boolean exposeNativeSession);1496259743;Set whether to expose the native Hibernate Session to_HibernateCallback code._<p>Default is "false": a Session proxy will be returned, suppressing_{@code close} calls and automatically applying query cache_settings and transaction timeouts._@see HibernateCallback_@see Session_@see #setCacheQueries_@see #setQueryCacheRegion_@see #prepareQuery_@see #prepareCriteria;public void setExposeNativeSession(boolean exposeNativeSession) {_		this.exposeNativeSession = exposeNativeSession__	};set,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,p,default,is,false,a,session,proxy,will,be,returned,suppressing,code,close,calls,and,automatically,applying,query,cache,settings,and,transaction,timeouts,see,hibernate,callback,see,session,see,set,cache,queries,see,set,query,cache,region,see,prepare,query,see,prepare,criteria;public,void,set,expose,native,session,boolean,expose,native,session,this,expose,native,session,expose,native,session
HibernateTemplate -> public void setExposeNativeSession(boolean exposeNativeSession);1496837955;Set whether to expose the native Hibernate Session to_HibernateCallback code._<p>Default is "false": a Session proxy will be returned, suppressing_{@code close} calls and automatically applying query cache_settings and transaction timeouts._@see HibernateCallback_@see Session_@see #setCacheQueries_@see #setQueryCacheRegion_@see #prepareQuery_@see #prepareCriteria;public void setExposeNativeSession(boolean exposeNativeSession) {_		this.exposeNativeSession = exposeNativeSession__	};set,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,p,default,is,false,a,session,proxy,will,be,returned,suppressing,code,close,calls,and,automatically,applying,query,cache,settings,and,transaction,timeouts,see,hibernate,callback,see,session,see,set,cache,queries,see,set,query,cache,region,see,prepare,query,see,prepare,criteria;public,void,set,expose,native,session,boolean,expose,native,session,this,expose,native,session,expose,native,session
HibernateTemplate -> public void setExposeNativeSession(boolean exposeNativeSession);1500448076;Set whether to expose the native Hibernate Session to_HibernateCallback code._<p>Default is "false": a Session proxy will be returned, suppressing_{@code close} calls and automatically applying query cache_settings and transaction timeouts._@see HibernateCallback_@see Session_@see #setCacheQueries_@see #setQueryCacheRegion_@see #prepareQuery_@see #prepareCriteria;public void setExposeNativeSession(boolean exposeNativeSession) {_		this.exposeNativeSession = exposeNativeSession__	};set,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,p,default,is,false,a,session,proxy,will,be,returned,suppressing,code,close,calls,and,automatically,applying,query,cache,settings,and,transaction,timeouts,see,hibernate,callback,see,session,see,set,cache,queries,see,set,query,cache,region,see,prepare,query,see,prepare,criteria;public,void,set,expose,native,session,boolean,expose,native,session,this,expose,native,session,expose,native,session
HibernateTemplate -> public void setExposeNativeSession(boolean exposeNativeSession);1502974979;Set whether to expose the native Hibernate Session to_HibernateCallback code._<p>Default is "false": a Session proxy will be returned, suppressing_{@code close} calls and automatically applying query cache_settings and transaction timeouts._@see HibernateCallback_@see Session_@see #setCacheQueries_@see #setQueryCacheRegion_@see #prepareQuery_@see #prepareCriteria;public void setExposeNativeSession(boolean exposeNativeSession) {_		this.exposeNativeSession = exposeNativeSession__	};set,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,p,default,is,false,a,session,proxy,will,be,returned,suppressing,code,close,calls,and,automatically,applying,query,cache,settings,and,transaction,timeouts,see,hibernate,callback,see,session,see,set,cache,queries,see,set,query,cache,region,see,prepare,query,see,prepare,criteria;public,void,set,expose,native,session,boolean,expose,native,session,this,expose,native,session,expose,native,session
HibernateTemplate -> public void setExposeNativeSession(boolean exposeNativeSession);1517247608;Set whether to expose the native Hibernate Session to_HibernateCallback code._<p>Default is "false": a Session proxy will be returned, suppressing_{@code close} calls and automatically applying query cache_settings and transaction timeouts._@see HibernateCallback_@see Session_@see #setCacheQueries_@see #setQueryCacheRegion_@see #prepareQuery_@see #prepareCriteria;public void setExposeNativeSession(boolean exposeNativeSession) {_		this.exposeNativeSession = exposeNativeSession__	};set,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,p,default,is,false,a,session,proxy,will,be,returned,suppressing,code,close,calls,and,automatically,applying,query,cache,settings,and,transaction,timeouts,see,hibernate,callback,see,session,see,set,cache,queries,see,set,query,cache,region,see,prepare,query,see,prepare,criteria;public,void,set,expose,native,session,boolean,expose,native,session,this,expose,native,session,expose,native,session
HibernateTemplate -> public void setExposeNativeSession(boolean exposeNativeSession);1519944186;Set whether to expose the native Hibernate Session to_HibernateCallback code._<p>Default is "false": a Session proxy will be returned, suppressing_{@code close} calls and automatically applying query cache_settings and transaction timeouts._@see HibernateCallback_@see Session_@see #setCacheQueries_@see #setQueryCacheRegion_@see #prepareQuery_@see #prepareCriteria;public void setExposeNativeSession(boolean exposeNativeSession) {_		this.exposeNativeSession = exposeNativeSession__	};set,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,p,default,is,false,a,session,proxy,will,be,returned,suppressing,code,close,calls,and,automatically,applying,query,cache,settings,and,transaction,timeouts,see,hibernate,callback,see,session,see,set,cache,queries,see,set,query,cache,region,see,prepare,query,see,prepare,criteria;public,void,set,expose,native,session,boolean,expose,native,session,this,expose,native,session,expose,native,session
HibernateTemplate -> public void setExposeNativeSession(boolean exposeNativeSession);1519995197;Set whether to expose the native Hibernate Session to_HibernateCallback code._<p>Default is "false": a Session proxy will be returned, suppressing_{@code close} calls and automatically applying query cache_settings and transaction timeouts._@see HibernateCallback_@see Session_@see #setCacheQueries_@see #setQueryCacheRegion_@see #prepareQuery_@see #prepareCriteria;public void setExposeNativeSession(boolean exposeNativeSession) {_		this.exposeNativeSession = exposeNativeSession__	};set,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,p,default,is,false,a,session,proxy,will,be,returned,suppressing,code,close,calls,and,automatically,applying,query,cache,settings,and,transaction,timeouts,see,hibernate,callback,see,session,see,set,cache,queries,see,set,query,cache,region,see,prepare,query,see,prepare,criteria;public,void,set,expose,native,session,boolean,expose,native,session,this,expose,native,session,expose,native,session
HibernateTemplate -> public void setExposeNativeSession(boolean exposeNativeSession);1530174524;Set whether to expose the native Hibernate Session to_HibernateCallback code._<p>Default is "false": a Session proxy will be returned, suppressing_{@code close} calls and automatically applying query cache_settings and transaction timeouts._@see HibernateCallback_@see Session_@see #setCacheQueries_@see #setQueryCacheRegion_@see #prepareQuery_@see #prepareCriteria;public void setExposeNativeSession(boolean exposeNativeSession) {_		this.exposeNativeSession = exposeNativeSession__	};set,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,p,default,is,false,a,session,proxy,will,be,returned,suppressing,code,close,calls,and,automatically,applying,query,cache,settings,and,transaction,timeouts,see,hibernate,callback,see,session,see,set,cache,queries,see,set,query,cache,region,see,prepare,query,see,prepare,criteria;public,void,set,expose,native,session,boolean,expose,native,session,this,expose,native,session,expose,native,session
HibernateTemplate -> public void setExposeNativeSession(boolean exposeNativeSession);1530709629;Set whether to expose the native Hibernate Session to_HibernateCallback code._<p>Default is "false": a Session proxy will be returned, suppressing_{@code close} calls and automatically applying query cache_settings and transaction timeouts._@see HibernateCallback_@see Session_@see #setCacheQueries_@see #setQueryCacheRegion_@see #prepareQuery_@see #prepareCriteria;public void setExposeNativeSession(boolean exposeNativeSession) {_		this.exposeNativeSession = exposeNativeSession__	};set,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,p,default,is,false,a,session,proxy,will,be,returned,suppressing,code,close,calls,and,automatically,applying,query,cache,settings,and,transaction,timeouts,see,hibernate,callback,see,session,see,set,cache,queries,see,set,query,cache,region,see,prepare,query,see,prepare,criteria;public,void,set,expose,native,session,boolean,expose,native,session,this,expose,native,session,expose,native,session
HibernateTemplate -> public boolean isCacheQueries();1467668243;Return whether to cache all queries executed by this template.;public boolean isCacheQueries() {_		return this.cacheQueries__	};return,whether,to,cache,all,queries,executed,by,this,template;public,boolean,is,cache,queries,return,this,cache,queries
HibernateTemplate -> public boolean isCacheQueries();1467811209;Return whether to cache all queries executed by this template.;public boolean isCacheQueries() {_		return this.cacheQueries__	};return,whether,to,cache,all,queries,executed,by,this,template;public,boolean,is,cache,queries,return,this,cache,queries
HibernateTemplate -> public boolean isCacheQueries();1468441852;Return whether to cache all queries executed by this template.;public boolean isCacheQueries() {_		return this.cacheQueries__	};return,whether,to,cache,all,queries,executed,by,this,template;public,boolean,is,cache,queries,return,this,cache,queries
HibernateTemplate -> public boolean isCacheQueries();1469534553;Return whether to cache all queries executed by this template.;public boolean isCacheQueries() {_		return this.cacheQueries__	};return,whether,to,cache,all,queries,executed,by,this,template;public,boolean,is,cache,queries,return,this,cache,queries
HibernateTemplate -> public boolean isCacheQueries();1473503884;Return whether to cache all queries executed by this template.;public boolean isCacheQueries() {_		return this.cacheQueries__	};return,whether,to,cache,all,queries,executed,by,this,template;public,boolean,is,cache,queries,return,this,cache,queries
HibernateTemplate -> public boolean isCacheQueries();1495868221;Return whether to cache all queries executed by this template.;public boolean isCacheQueries() {_		return this.cacheQueries__	};return,whether,to,cache,all,queries,executed,by,this,template;public,boolean,is,cache,queries,return,this,cache,queries
HibernateTemplate -> public boolean isCacheQueries();1496259743;Return whether to cache all queries executed by this template.;public boolean isCacheQueries() {_		return this.cacheQueries__	};return,whether,to,cache,all,queries,executed,by,this,template;public,boolean,is,cache,queries,return,this,cache,queries
HibernateTemplate -> public boolean isCacheQueries();1496837955;Return whether to cache all queries executed by this template.;public boolean isCacheQueries() {_		return this.cacheQueries__	};return,whether,to,cache,all,queries,executed,by,this,template;public,boolean,is,cache,queries,return,this,cache,queries
HibernateTemplate -> public boolean isCacheQueries();1500448076;Return whether to cache all queries executed by this template.;public boolean isCacheQueries() {_		return this.cacheQueries__	};return,whether,to,cache,all,queries,executed,by,this,template;public,boolean,is,cache,queries,return,this,cache,queries
HibernateTemplate -> public boolean isCacheQueries();1502974979;Return whether to cache all queries executed by this template.;public boolean isCacheQueries() {_		return this.cacheQueries__	};return,whether,to,cache,all,queries,executed,by,this,template;public,boolean,is,cache,queries,return,this,cache,queries
HibernateTemplate -> public boolean isCacheQueries();1517247608;Return whether to cache all queries executed by this template.;public boolean isCacheQueries() {_		return this.cacheQueries__	};return,whether,to,cache,all,queries,executed,by,this,template;public,boolean,is,cache,queries,return,this,cache,queries
HibernateTemplate -> public boolean isCacheQueries();1519944186;Return whether to cache all queries executed by this template.;public boolean isCacheQueries() {_		return this.cacheQueries__	};return,whether,to,cache,all,queries,executed,by,this,template;public,boolean,is,cache,queries,return,this,cache,queries
HibernateTemplate -> public boolean isCacheQueries();1519995197;Return whether to cache all queries executed by this template.;public boolean isCacheQueries() {_		return this.cacheQueries__	};return,whether,to,cache,all,queries,executed,by,this,template;public,boolean,is,cache,queries,return,this,cache,queries
HibernateTemplate -> public boolean isCacheQueries();1530174524;Return whether to cache all queries executed by this template.;public boolean isCacheQueries() {_		return this.cacheQueries__	};return,whether,to,cache,all,queries,executed,by,this,template;public,boolean,is,cache,queries,return,this,cache,queries
HibernateTemplate -> public boolean isCacheQueries();1530709629;Return whether to cache all queries executed by this template.;public boolean isCacheQueries() {_		return this.cacheQueries__	};return,whether,to,cache,all,queries,executed,by,this,template;public,boolean,is,cache,queries,return,this,cache,queries
HibernateTemplate -> public HibernateTemplate(SessionFactory sessionFactory);1467668243;Create a new HibernateTemplate instance._@param sessionFactory the SessionFactory to create Sessions with;public HibernateTemplate(SessionFactory sessionFactory) {_		setSessionFactory(sessionFactory)__		afterPropertiesSet()__	};create,a,new,hibernate,template,instance,param,session,factory,the,session,factory,to,create,sessions,with;public,hibernate,template,session,factory,session,factory,set,session,factory,session,factory,after,properties,set
HibernateTemplate -> public HibernateTemplate(SessionFactory sessionFactory);1467811209;Create a new HibernateTemplate instance._@param sessionFactory the SessionFactory to create Sessions with;public HibernateTemplate(SessionFactory sessionFactory) {_		setSessionFactory(sessionFactory)__		afterPropertiesSet()__	};create,a,new,hibernate,template,instance,param,session,factory,the,session,factory,to,create,sessions,with;public,hibernate,template,session,factory,session,factory,set,session,factory,session,factory,after,properties,set
HibernateTemplate -> public HibernateTemplate(SessionFactory sessionFactory);1468441852;Create a new HibernateTemplate instance._@param sessionFactory the SessionFactory to create Sessions with;public HibernateTemplate(SessionFactory sessionFactory) {_		setSessionFactory(sessionFactory)__		afterPropertiesSet()__	};create,a,new,hibernate,template,instance,param,session,factory,the,session,factory,to,create,sessions,with;public,hibernate,template,session,factory,session,factory,set,session,factory,session,factory,after,properties,set
HibernateTemplate -> public HibernateTemplate(SessionFactory sessionFactory);1469534553;Create a new HibernateTemplate instance._@param sessionFactory the SessionFactory to create Sessions with;public HibernateTemplate(SessionFactory sessionFactory) {_		setSessionFactory(sessionFactory)__		afterPropertiesSet()__	};create,a,new,hibernate,template,instance,param,session,factory,the,session,factory,to,create,sessions,with;public,hibernate,template,session,factory,session,factory,set,session,factory,session,factory,after,properties,set
HibernateTemplate -> public HibernateTemplate(SessionFactory sessionFactory);1473503884;Create a new HibernateTemplate instance._@param sessionFactory the SessionFactory to create Sessions with;public HibernateTemplate(SessionFactory sessionFactory) {_		setSessionFactory(sessionFactory)__		afterPropertiesSet()__	};create,a,new,hibernate,template,instance,param,session,factory,the,session,factory,to,create,sessions,with;public,hibernate,template,session,factory,session,factory,set,session,factory,session,factory,after,properties,set
HibernateTemplate -> public HibernateTemplate(SessionFactory sessionFactory);1495868221;Create a new HibernateTemplate instance._@param sessionFactory the SessionFactory to create Sessions with;public HibernateTemplate(SessionFactory sessionFactory) {_		setSessionFactory(sessionFactory)__		afterPropertiesSet()__	};create,a,new,hibernate,template,instance,param,session,factory,the,session,factory,to,create,sessions,with;public,hibernate,template,session,factory,session,factory,set,session,factory,session,factory,after,properties,set
HibernateTemplate -> public HibernateTemplate(SessionFactory sessionFactory);1496259743;Create a new HibernateTemplate instance._@param sessionFactory the SessionFactory to create Sessions with;public HibernateTemplate(SessionFactory sessionFactory) {_		setSessionFactory(sessionFactory)__		afterPropertiesSet()__	};create,a,new,hibernate,template,instance,param,session,factory,the,session,factory,to,create,sessions,with;public,hibernate,template,session,factory,session,factory,set,session,factory,session,factory,after,properties,set
HibernateTemplate -> public HibernateTemplate(SessionFactory sessionFactory);1496837955;Create a new HibernateTemplate instance._@param sessionFactory the SessionFactory to create Sessions with;public HibernateTemplate(SessionFactory sessionFactory) {_		setSessionFactory(sessionFactory)__		afterPropertiesSet()__	};create,a,new,hibernate,template,instance,param,session,factory,the,session,factory,to,create,sessions,with;public,hibernate,template,session,factory,session,factory,set,session,factory,session,factory,after,properties,set
HibernateTemplate -> public HibernateTemplate(SessionFactory sessionFactory);1500448076;Create a new HibernateTemplate instance._@param sessionFactory the SessionFactory to create Sessions with;public HibernateTemplate(SessionFactory sessionFactory) {_		setSessionFactory(sessionFactory)__		afterPropertiesSet()__	};create,a,new,hibernate,template,instance,param,session,factory,the,session,factory,to,create,sessions,with;public,hibernate,template,session,factory,session,factory,set,session,factory,session,factory,after,properties,set
HibernateTemplate -> public HibernateTemplate(SessionFactory sessionFactory);1502974979;Create a new HibernateTemplate instance._@param sessionFactory the SessionFactory to create Sessions with;public HibernateTemplate(SessionFactory sessionFactory) {_		setSessionFactory(sessionFactory)__		afterPropertiesSet()__	};create,a,new,hibernate,template,instance,param,session,factory,the,session,factory,to,create,sessions,with;public,hibernate,template,session,factory,session,factory,set,session,factory,session,factory,after,properties,set
HibernateTemplate -> public HibernateTemplate(SessionFactory sessionFactory);1517247608;Create a new HibernateTemplate instance._@param sessionFactory the SessionFactory to create Sessions with;public HibernateTemplate(SessionFactory sessionFactory) {_		setSessionFactory(sessionFactory)__		afterPropertiesSet()__	};create,a,new,hibernate,template,instance,param,session,factory,the,session,factory,to,create,sessions,with;public,hibernate,template,session,factory,session,factory,set,session,factory,session,factory,after,properties,set
HibernateTemplate -> public HibernateTemplate(SessionFactory sessionFactory);1519944186;Create a new HibernateTemplate instance._@param sessionFactory the SessionFactory to create Sessions with;public HibernateTemplate(SessionFactory sessionFactory) {_		setSessionFactory(sessionFactory)__		afterPropertiesSet()__	};create,a,new,hibernate,template,instance,param,session,factory,the,session,factory,to,create,sessions,with;public,hibernate,template,session,factory,session,factory,set,session,factory,session,factory,after,properties,set
HibernateTemplate -> public HibernateTemplate(SessionFactory sessionFactory);1519995197;Create a new HibernateTemplate instance._@param sessionFactory the SessionFactory to create Sessions with;public HibernateTemplate(SessionFactory sessionFactory) {_		setSessionFactory(sessionFactory)__		afterPropertiesSet()__	};create,a,new,hibernate,template,instance,param,session,factory,the,session,factory,to,create,sessions,with;public,hibernate,template,session,factory,session,factory,set,session,factory,session,factory,after,properties,set
HibernateTemplate -> public HibernateTemplate(SessionFactory sessionFactory);1530174524;Create a new HibernateTemplate instance._@param sessionFactory the SessionFactory to create Sessions with;public HibernateTemplate(SessionFactory sessionFactory) {_		setSessionFactory(sessionFactory)__		afterPropertiesSet()__	};create,a,new,hibernate,template,instance,param,session,factory,the,session,factory,to,create,sessions,with;public,hibernate,template,session,factory,session,factory,set,session,factory,session,factory,after,properties,set
HibernateTemplate -> public HibernateTemplate(SessionFactory sessionFactory);1530709629;Create a new HibernateTemplate instance._@param sessionFactory the SessionFactory to create Sessions with;public HibernateTemplate(SessionFactory sessionFactory) {_		setSessionFactory(sessionFactory)__		afterPropertiesSet()__	};create,a,new,hibernate,template,instance,param,session,factory,the,session,factory,to,create,sessions,with;public,hibernate,template,session,factory,session,factory,set,session,factory,session,factory,after,properties,set
HibernateTemplate -> @Nullable 	public <T> T executeWithNativeSession(HibernateCallback<T> action);1495868221;Execute the action specified by the given action object within a_native {@link Session}._<p>This execute variant overrides the template-wide_{@link #isExposeNativeSession() "exposeNativeSession"} setting._@param action callback object that specifies the Hibernate action_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;@Nullable_	public <T> T executeWithNativeSession(HibernateCallback<T> action) {_		return doExecute(action, true)__	};execute,the,action,specified,by,the,given,action,object,within,a,native,link,session,p,this,execute,variant,overrides,the,template,wide,link,is,expose,native,session,expose,native,session,setting,param,action,callback,object,that,specifies,the,hibernate,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;nullable,public,t,t,execute,with,native,session,hibernate,callback,t,action,return,do,execute,action,true
HibernateTemplate -> @Nullable 	public <T> T executeWithNativeSession(HibernateCallback<T> action);1496259743;Execute the action specified by the given action object within a_native {@link Session}._<p>This execute variant overrides the template-wide_{@link #isExposeNativeSession() "exposeNativeSession"} setting._@param action callback object that specifies the Hibernate action_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;@Nullable_	public <T> T executeWithNativeSession(HibernateCallback<T> action) {_		return doExecute(action, true)__	};execute,the,action,specified,by,the,given,action,object,within,a,native,link,session,p,this,execute,variant,overrides,the,template,wide,link,is,expose,native,session,expose,native,session,setting,param,action,callback,object,that,specifies,the,hibernate,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;nullable,public,t,t,execute,with,native,session,hibernate,callback,t,action,return,do,execute,action,true
HibernateTemplate -> @Nullable 	public <T> T executeWithNativeSession(HibernateCallback<T> action);1496837955;Execute the action specified by the given action object within a_native {@link Session}._<p>This execute variant overrides the template-wide_{@link #isExposeNativeSession() "exposeNativeSession"} setting._@param action callback object that specifies the Hibernate action_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;@Nullable_	public <T> T executeWithNativeSession(HibernateCallback<T> action) {_		return doExecute(action, true)__	};execute,the,action,specified,by,the,given,action,object,within,a,native,link,session,p,this,execute,variant,overrides,the,template,wide,link,is,expose,native,session,expose,native,session,setting,param,action,callback,object,that,specifies,the,hibernate,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;nullable,public,t,t,execute,with,native,session,hibernate,callback,t,action,return,do,execute,action,true
HibernateTemplate -> @Nullable 	public <T> T executeWithNativeSession(HibernateCallback<T> action);1500448076;Execute the action specified by the given action object within a_native {@link Session}._<p>This execute variant overrides the template-wide_{@link #isExposeNativeSession() "exposeNativeSession"} setting._@param action callback object that specifies the Hibernate action_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;@Nullable_	public <T> T executeWithNativeSession(HibernateCallback<T> action) {_		return doExecute(action, true)__	};execute,the,action,specified,by,the,given,action,object,within,a,native,link,session,p,this,execute,variant,overrides,the,template,wide,link,is,expose,native,session,expose,native,session,setting,param,action,callback,object,that,specifies,the,hibernate,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;nullable,public,t,t,execute,with,native,session,hibernate,callback,t,action,return,do,execute,action,true
HibernateTemplate -> @Nullable 	public <T> T executeWithNativeSession(HibernateCallback<T> action);1502974979;Execute the action specified by the given action object within a_native {@link Session}._<p>This execute variant overrides the template-wide_{@link #isExposeNativeSession() "exposeNativeSession"} setting._@param action callback object that specifies the Hibernate action_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;@Nullable_	public <T> T executeWithNativeSession(HibernateCallback<T> action) {_		return doExecute(action, true)__	};execute,the,action,specified,by,the,given,action,object,within,a,native,link,session,p,this,execute,variant,overrides,the,template,wide,link,is,expose,native,session,expose,native,session,setting,param,action,callback,object,that,specifies,the,hibernate,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;nullable,public,t,t,execute,with,native,session,hibernate,callback,t,action,return,do,execute,action,true
HibernateTemplate -> @Nullable 	public <T> T executeWithNativeSession(HibernateCallback<T> action);1517247608;Execute the action specified by the given action object within a_native {@link Session}._<p>This execute variant overrides the template-wide_{@link #isExposeNativeSession() "exposeNativeSession"} setting._@param action callback object that specifies the Hibernate action_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;@Nullable_	public <T> T executeWithNativeSession(HibernateCallback<T> action) {_		return doExecute(action, true)__	};execute,the,action,specified,by,the,given,action,object,within,a,native,link,session,p,this,execute,variant,overrides,the,template,wide,link,is,expose,native,session,expose,native,session,setting,param,action,callback,object,that,specifies,the,hibernate,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;nullable,public,t,t,execute,with,native,session,hibernate,callback,t,action,return,do,execute,action,true
HibernateTemplate -> @Nullable 	public <T> T executeWithNativeSession(HibernateCallback<T> action);1519944186;Execute the action specified by the given action object within a_native {@link Session}._<p>This execute variant overrides the template-wide_{@link #isExposeNativeSession() "exposeNativeSession"} setting._@param action callback object that specifies the Hibernate action_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;@Nullable_	public <T> T executeWithNativeSession(HibernateCallback<T> action) {_		return doExecute(action, true)__	};execute,the,action,specified,by,the,given,action,object,within,a,native,link,session,p,this,execute,variant,overrides,the,template,wide,link,is,expose,native,session,expose,native,session,setting,param,action,callback,object,that,specifies,the,hibernate,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;nullable,public,t,t,execute,with,native,session,hibernate,callback,t,action,return,do,execute,action,true
HibernateTemplate -> @Nullable 	public <T> T executeWithNativeSession(HibernateCallback<T> action);1519995197;Execute the action specified by the given action object within a_native {@link Session}._<p>This execute variant overrides the template-wide_{@link #isExposeNativeSession() "exposeNativeSession"} setting._@param action callback object that specifies the Hibernate action_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;@Nullable_	public <T> T executeWithNativeSession(HibernateCallback<T> action) {_		return doExecute(action, true)__	};execute,the,action,specified,by,the,given,action,object,within,a,native,link,session,p,this,execute,variant,overrides,the,template,wide,link,is,expose,native,session,expose,native,session,setting,param,action,callback,object,that,specifies,the,hibernate,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;nullable,public,t,t,execute,with,native,session,hibernate,callback,t,action,return,do,execute,action,true
HibernateTemplate -> @Nullable 	public <T> T executeWithNativeSession(HibernateCallback<T> action);1530174524;Execute the action specified by the given action object within a_native {@link Session}._<p>This execute variant overrides the template-wide_{@link #isExposeNativeSession() "exposeNativeSession"} setting._@param action callback object that specifies the Hibernate action_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;@Nullable_	public <T> T executeWithNativeSession(HibernateCallback<T> action) {_		return doExecute(action, true)__	};execute,the,action,specified,by,the,given,action,object,within,a,native,link,session,p,this,execute,variant,overrides,the,template,wide,link,is,expose,native,session,expose,native,session,setting,param,action,callback,object,that,specifies,the,hibernate,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;nullable,public,t,t,execute,with,native,session,hibernate,callback,t,action,return,do,execute,action,true
HibernateTemplate -> @Nullable 	public <T> T executeWithNativeSession(HibernateCallback<T> action);1530709629;Execute the action specified by the given action object within a_native {@link Session}._<p>This execute variant overrides the template-wide_{@link #isExposeNativeSession() "exposeNativeSession"} setting._@param action callback object that specifies the Hibernate action_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;@Nullable_	public <T> T executeWithNativeSession(HibernateCallback<T> action) {_		return doExecute(action, true)__	};execute,the,action,specified,by,the,given,action,object,within,a,native,link,session,p,this,execute,variant,overrides,the,template,wide,link,is,expose,native,session,expose,native,session,setting,param,action,callback,object,that,specifies,the,hibernate,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;nullable,public,t,t,execute,with,native,session,hibernate,callback,t,action,return,do,execute,action,true
HibernateTemplate -> public void setCheckWriteOperations(boolean checkWriteOperations);1467668243;Set whether to check that the Hibernate Session is not in read-only mode_in case of write operations (save/update/delete)._<p>Default is "true", for fail-fast behavior when attempting write operations_within a read-only transaction. Turn this off to allow save/update/delete_on a Session with flush mode MANUAL._@see #checkWriteOperationAllowed_@see org.springframework.transaction.TransactionDefinition#isReadOnly;public void setCheckWriteOperations(boolean checkWriteOperations) {_		this.checkWriteOperations = checkWriteOperations__	};set,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete,p,default,is,true,for,fail,fast,behavior,when,attempting,write,operations,within,a,read,only,transaction,turn,this,off,to,allow,save,update,delete,on,a,session,with,flush,mode,manual,see,check,write,operation,allowed,see,org,springframework,transaction,transaction,definition,is,read,only;public,void,set,check,write,operations,boolean,check,write,operations,this,check,write,operations,check,write,operations
HibernateTemplate -> public void setCheckWriteOperations(boolean checkWriteOperations);1467811209;Set whether to check that the Hibernate Session is not in read-only mode_in case of write operations (save/update/delete)._<p>Default is "true", for fail-fast behavior when attempting write operations_within a read-only transaction. Turn this off to allow save/update/delete_on a Session with flush mode MANUAL._@see #checkWriteOperationAllowed_@see org.springframework.transaction.TransactionDefinition#isReadOnly;public void setCheckWriteOperations(boolean checkWriteOperations) {_		this.checkWriteOperations = checkWriteOperations__	};set,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete,p,default,is,true,for,fail,fast,behavior,when,attempting,write,operations,within,a,read,only,transaction,turn,this,off,to,allow,save,update,delete,on,a,session,with,flush,mode,manual,see,check,write,operation,allowed,see,org,springframework,transaction,transaction,definition,is,read,only;public,void,set,check,write,operations,boolean,check,write,operations,this,check,write,operations,check,write,operations
HibernateTemplate -> public void setCheckWriteOperations(boolean checkWriteOperations);1468441852;Set whether to check that the Hibernate Session is not in read-only mode_in case of write operations (save/update/delete)._<p>Default is "true", for fail-fast behavior when attempting write operations_within a read-only transaction. Turn this off to allow save/update/delete_on a Session with flush mode MANUAL._@see #checkWriteOperationAllowed_@see org.springframework.transaction.TransactionDefinition#isReadOnly;public void setCheckWriteOperations(boolean checkWriteOperations) {_		this.checkWriteOperations = checkWriteOperations__	};set,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete,p,default,is,true,for,fail,fast,behavior,when,attempting,write,operations,within,a,read,only,transaction,turn,this,off,to,allow,save,update,delete,on,a,session,with,flush,mode,manual,see,check,write,operation,allowed,see,org,springframework,transaction,transaction,definition,is,read,only;public,void,set,check,write,operations,boolean,check,write,operations,this,check,write,operations,check,write,operations
HibernateTemplate -> public void setCheckWriteOperations(boolean checkWriteOperations);1469534553;Set whether to check that the Hibernate Session is not in read-only mode_in case of write operations (save/update/delete)._<p>Default is "true", for fail-fast behavior when attempting write operations_within a read-only transaction. Turn this off to allow save/update/delete_on a Session with flush mode MANUAL._@see #checkWriteOperationAllowed_@see org.springframework.transaction.TransactionDefinition#isReadOnly;public void setCheckWriteOperations(boolean checkWriteOperations) {_		this.checkWriteOperations = checkWriteOperations__	};set,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete,p,default,is,true,for,fail,fast,behavior,when,attempting,write,operations,within,a,read,only,transaction,turn,this,off,to,allow,save,update,delete,on,a,session,with,flush,mode,manual,see,check,write,operation,allowed,see,org,springframework,transaction,transaction,definition,is,read,only;public,void,set,check,write,operations,boolean,check,write,operations,this,check,write,operations,check,write,operations
HibernateTemplate -> public void setCheckWriteOperations(boolean checkWriteOperations);1473503884;Set whether to check that the Hibernate Session is not in read-only mode_in case of write operations (save/update/delete)._<p>Default is "true", for fail-fast behavior when attempting write operations_within a read-only transaction. Turn this off to allow save/update/delete_on a Session with flush mode MANUAL._@see #checkWriteOperationAllowed_@see org.springframework.transaction.TransactionDefinition#isReadOnly;public void setCheckWriteOperations(boolean checkWriteOperations) {_		this.checkWriteOperations = checkWriteOperations__	};set,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete,p,default,is,true,for,fail,fast,behavior,when,attempting,write,operations,within,a,read,only,transaction,turn,this,off,to,allow,save,update,delete,on,a,session,with,flush,mode,manual,see,check,write,operation,allowed,see,org,springframework,transaction,transaction,definition,is,read,only;public,void,set,check,write,operations,boolean,check,write,operations,this,check,write,operations,check,write,operations
HibernateTemplate -> public void setCheckWriteOperations(boolean checkWriteOperations);1495868221;Set whether to check that the Hibernate Session is not in read-only mode_in case of write operations (save/update/delete)._<p>Default is "true", for fail-fast behavior when attempting write operations_within a read-only transaction. Turn this off to allow save/update/delete_on a Session with flush mode MANUAL._@see #checkWriteOperationAllowed_@see org.springframework.transaction.TransactionDefinition#isReadOnly;public void setCheckWriteOperations(boolean checkWriteOperations) {_		this.checkWriteOperations = checkWriteOperations__	};set,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete,p,default,is,true,for,fail,fast,behavior,when,attempting,write,operations,within,a,read,only,transaction,turn,this,off,to,allow,save,update,delete,on,a,session,with,flush,mode,manual,see,check,write,operation,allowed,see,org,springframework,transaction,transaction,definition,is,read,only;public,void,set,check,write,operations,boolean,check,write,operations,this,check,write,operations,check,write,operations
HibernateTemplate -> public void setCheckWriteOperations(boolean checkWriteOperations);1496259743;Set whether to check that the Hibernate Session is not in read-only mode_in case of write operations (save/update/delete)._<p>Default is "true", for fail-fast behavior when attempting write operations_within a read-only transaction. Turn this off to allow save/update/delete_on a Session with flush mode MANUAL._@see #checkWriteOperationAllowed_@see org.springframework.transaction.TransactionDefinition#isReadOnly;public void setCheckWriteOperations(boolean checkWriteOperations) {_		this.checkWriteOperations = checkWriteOperations__	};set,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete,p,default,is,true,for,fail,fast,behavior,when,attempting,write,operations,within,a,read,only,transaction,turn,this,off,to,allow,save,update,delete,on,a,session,with,flush,mode,manual,see,check,write,operation,allowed,see,org,springframework,transaction,transaction,definition,is,read,only;public,void,set,check,write,operations,boolean,check,write,operations,this,check,write,operations,check,write,operations
HibernateTemplate -> public void setCheckWriteOperations(boolean checkWriteOperations);1496837955;Set whether to check that the Hibernate Session is not in read-only mode_in case of write operations (save/update/delete)._<p>Default is "true", for fail-fast behavior when attempting write operations_within a read-only transaction. Turn this off to allow save/update/delete_on a Session with flush mode MANUAL._@see #checkWriteOperationAllowed_@see org.springframework.transaction.TransactionDefinition#isReadOnly;public void setCheckWriteOperations(boolean checkWriteOperations) {_		this.checkWriteOperations = checkWriteOperations__	};set,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete,p,default,is,true,for,fail,fast,behavior,when,attempting,write,operations,within,a,read,only,transaction,turn,this,off,to,allow,save,update,delete,on,a,session,with,flush,mode,manual,see,check,write,operation,allowed,see,org,springframework,transaction,transaction,definition,is,read,only;public,void,set,check,write,operations,boolean,check,write,operations,this,check,write,operations,check,write,operations
HibernateTemplate -> public void setCheckWriteOperations(boolean checkWriteOperations);1500448076;Set whether to check that the Hibernate Session is not in read-only mode_in case of write operations (save/update/delete)._<p>Default is "true", for fail-fast behavior when attempting write operations_within a read-only transaction. Turn this off to allow save/update/delete_on a Session with flush mode MANUAL._@see #checkWriteOperationAllowed_@see org.springframework.transaction.TransactionDefinition#isReadOnly;public void setCheckWriteOperations(boolean checkWriteOperations) {_		this.checkWriteOperations = checkWriteOperations__	};set,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete,p,default,is,true,for,fail,fast,behavior,when,attempting,write,operations,within,a,read,only,transaction,turn,this,off,to,allow,save,update,delete,on,a,session,with,flush,mode,manual,see,check,write,operation,allowed,see,org,springframework,transaction,transaction,definition,is,read,only;public,void,set,check,write,operations,boolean,check,write,operations,this,check,write,operations,check,write,operations
HibernateTemplate -> public void setCheckWriteOperations(boolean checkWriteOperations);1502974979;Set whether to check that the Hibernate Session is not in read-only mode_in case of write operations (save/update/delete)._<p>Default is "true", for fail-fast behavior when attempting write operations_within a read-only transaction. Turn this off to allow save/update/delete_on a Session with flush mode MANUAL._@see #checkWriteOperationAllowed_@see org.springframework.transaction.TransactionDefinition#isReadOnly;public void setCheckWriteOperations(boolean checkWriteOperations) {_		this.checkWriteOperations = checkWriteOperations__	};set,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete,p,default,is,true,for,fail,fast,behavior,when,attempting,write,operations,within,a,read,only,transaction,turn,this,off,to,allow,save,update,delete,on,a,session,with,flush,mode,manual,see,check,write,operation,allowed,see,org,springframework,transaction,transaction,definition,is,read,only;public,void,set,check,write,operations,boolean,check,write,operations,this,check,write,operations,check,write,operations
HibernateTemplate -> public void setCheckWriteOperations(boolean checkWriteOperations);1517247608;Set whether to check that the Hibernate Session is not in read-only mode_in case of write operations (save/update/delete)._<p>Default is "true", for fail-fast behavior when attempting write operations_within a read-only transaction. Turn this off to allow save/update/delete_on a Session with flush mode MANUAL._@see #checkWriteOperationAllowed_@see org.springframework.transaction.TransactionDefinition#isReadOnly;public void setCheckWriteOperations(boolean checkWriteOperations) {_		this.checkWriteOperations = checkWriteOperations__	};set,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete,p,default,is,true,for,fail,fast,behavior,when,attempting,write,operations,within,a,read,only,transaction,turn,this,off,to,allow,save,update,delete,on,a,session,with,flush,mode,manual,see,check,write,operation,allowed,see,org,springframework,transaction,transaction,definition,is,read,only;public,void,set,check,write,operations,boolean,check,write,operations,this,check,write,operations,check,write,operations
HibernateTemplate -> public void setCheckWriteOperations(boolean checkWriteOperations);1519944186;Set whether to check that the Hibernate Session is not in read-only mode_in case of write operations (save/update/delete)._<p>Default is "true", for fail-fast behavior when attempting write operations_within a read-only transaction. Turn this off to allow save/update/delete_on a Session with flush mode MANUAL._@see #checkWriteOperationAllowed_@see org.springframework.transaction.TransactionDefinition#isReadOnly;public void setCheckWriteOperations(boolean checkWriteOperations) {_		this.checkWriteOperations = checkWriteOperations__	};set,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete,p,default,is,true,for,fail,fast,behavior,when,attempting,write,operations,within,a,read,only,transaction,turn,this,off,to,allow,save,update,delete,on,a,session,with,flush,mode,manual,see,check,write,operation,allowed,see,org,springframework,transaction,transaction,definition,is,read,only;public,void,set,check,write,operations,boolean,check,write,operations,this,check,write,operations,check,write,operations
HibernateTemplate -> public void setCheckWriteOperations(boolean checkWriteOperations);1519995197;Set whether to check that the Hibernate Session is not in read-only mode_in case of write operations (save/update/delete)._<p>Default is "true", for fail-fast behavior when attempting write operations_within a read-only transaction. Turn this off to allow save/update/delete_on a Session with flush mode MANUAL._@see #checkWriteOperationAllowed_@see org.springframework.transaction.TransactionDefinition#isReadOnly;public void setCheckWriteOperations(boolean checkWriteOperations) {_		this.checkWriteOperations = checkWriteOperations__	};set,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete,p,default,is,true,for,fail,fast,behavior,when,attempting,write,operations,within,a,read,only,transaction,turn,this,off,to,allow,save,update,delete,on,a,session,with,flush,mode,manual,see,check,write,operation,allowed,see,org,springframework,transaction,transaction,definition,is,read,only;public,void,set,check,write,operations,boolean,check,write,operations,this,check,write,operations,check,write,operations
HibernateTemplate -> public void setCheckWriteOperations(boolean checkWriteOperations);1530174524;Set whether to check that the Hibernate Session is not in read-only mode_in case of write operations (save/update/delete)._<p>Default is "true", for fail-fast behavior when attempting write operations_within a read-only transaction. Turn this off to allow save/update/delete_on a Session with flush mode MANUAL._@see #checkWriteOperationAllowed_@see org.springframework.transaction.TransactionDefinition#isReadOnly;public void setCheckWriteOperations(boolean checkWriteOperations) {_		this.checkWriteOperations = checkWriteOperations__	};set,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete,p,default,is,true,for,fail,fast,behavior,when,attempting,write,operations,within,a,read,only,transaction,turn,this,off,to,allow,save,update,delete,on,a,session,with,flush,mode,manual,see,check,write,operation,allowed,see,org,springframework,transaction,transaction,definition,is,read,only;public,void,set,check,write,operations,boolean,check,write,operations,this,check,write,operations,check,write,operations
HibernateTemplate -> public void setCheckWriteOperations(boolean checkWriteOperations);1530709629;Set whether to check that the Hibernate Session is not in read-only mode_in case of write operations (save/update/delete)._<p>Default is "true", for fail-fast behavior when attempting write operations_within a read-only transaction. Turn this off to allow save/update/delete_on a Session with flush mode MANUAL._@see #checkWriteOperationAllowed_@see org.springframework.transaction.TransactionDefinition#isReadOnly;public void setCheckWriteOperations(boolean checkWriteOperations) {_		this.checkWriteOperations = checkWriteOperations__	};set,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete,p,default,is,true,for,fail,fast,behavior,when,attempting,write,operations,within,a,read,only,transaction,turn,this,off,to,allow,save,update,delete,on,a,session,with,flush,mode,manual,see,check,write,operation,allowed,see,org,springframework,transaction,transaction,definition,is,read,only;public,void,set,check,write,operations,boolean,check,write,operations,this,check,write,operations,check,write,operations
HibernateTemplate -> public <T> T executeWithNativeSession(HibernateCallback<T> action);1467668243;Execute the action specified by the given action object within a_native {@link Session}._<p>This execute variant overrides the template-wide_{@link #isExposeNativeSession() "exposeNativeSession"} setting._@param action callback object that specifies the Hibernate action_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;public <T> T executeWithNativeSession(HibernateCallback<T> action) {_		return doExecute(action, true)__	};execute,the,action,specified,by,the,given,action,object,within,a,native,link,session,p,this,execute,variant,overrides,the,template,wide,link,is,expose,native,session,expose,native,session,setting,param,action,callback,object,that,specifies,the,hibernate,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;public,t,t,execute,with,native,session,hibernate,callback,t,action,return,do,execute,action,true
HibernateTemplate -> public <T> T executeWithNativeSession(HibernateCallback<T> action);1467811209;Execute the action specified by the given action object within a_native {@link Session}._<p>This execute variant overrides the template-wide_{@link #isExposeNativeSession() "exposeNativeSession"} setting._@param action callback object that specifies the Hibernate action_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;public <T> T executeWithNativeSession(HibernateCallback<T> action) {_		return doExecute(action, true)__	};execute,the,action,specified,by,the,given,action,object,within,a,native,link,session,p,this,execute,variant,overrides,the,template,wide,link,is,expose,native,session,expose,native,session,setting,param,action,callback,object,that,specifies,the,hibernate,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;public,t,t,execute,with,native,session,hibernate,callback,t,action,return,do,execute,action,true
HibernateTemplate -> public <T> T executeWithNativeSession(HibernateCallback<T> action);1468441852;Execute the action specified by the given action object within a_native {@link Session}._<p>This execute variant overrides the template-wide_{@link #isExposeNativeSession() "exposeNativeSession"} setting._@param action callback object that specifies the Hibernate action_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;public <T> T executeWithNativeSession(HibernateCallback<T> action) {_		return doExecute(action, true)__	};execute,the,action,specified,by,the,given,action,object,within,a,native,link,session,p,this,execute,variant,overrides,the,template,wide,link,is,expose,native,session,expose,native,session,setting,param,action,callback,object,that,specifies,the,hibernate,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;public,t,t,execute,with,native,session,hibernate,callback,t,action,return,do,execute,action,true
HibernateTemplate -> public <T> T executeWithNativeSession(HibernateCallback<T> action);1469534553;Execute the action specified by the given action object within a_native {@link Session}._<p>This execute variant overrides the template-wide_{@link #isExposeNativeSession() "exposeNativeSession"} setting._@param action callback object that specifies the Hibernate action_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;public <T> T executeWithNativeSession(HibernateCallback<T> action) {_		return doExecute(action, true)__	};execute,the,action,specified,by,the,given,action,object,within,a,native,link,session,p,this,execute,variant,overrides,the,template,wide,link,is,expose,native,session,expose,native,session,setting,param,action,callback,object,that,specifies,the,hibernate,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;public,t,t,execute,with,native,session,hibernate,callback,t,action,return,do,execute,action,true
HibernateTemplate -> public <T> T executeWithNativeSession(HibernateCallback<T> action);1473503884;Execute the action specified by the given action object within a_native {@link Session}._<p>This execute variant overrides the template-wide_{@link #isExposeNativeSession() "exposeNativeSession"} setting._@param action callback object that specifies the Hibernate action_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;public <T> T executeWithNativeSession(HibernateCallback<T> action) {_		return doExecute(action, true)__	};execute,the,action,specified,by,the,given,action,object,within,a,native,link,session,p,this,execute,variant,overrides,the,template,wide,link,is,expose,native,session,expose,native,session,setting,param,action,callback,object,that,specifies,the,hibernate,action,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;public,t,t,execute,with,native,session,hibernate,callback,t,action,return,do,execute,action,true
HibernateTemplate -> public String[] getFilterNames();1467668243;Return the names of Hibernate filters to be activated, if any.;public String[] getFilterNames() {_		return this.filterNames__	};return,the,names,of,hibernate,filters,to,be,activated,if,any;public,string,get,filter,names,return,this,filter,names
HibernateTemplate -> public String[] getFilterNames();1467811209;Return the names of Hibernate filters to be activated, if any.;public String[] getFilterNames() {_		return this.filterNames__	};return,the,names,of,hibernate,filters,to,be,activated,if,any;public,string,get,filter,names,return,this,filter,names
HibernateTemplate -> public String[] getFilterNames();1468441852;Return the names of Hibernate filters to be activated, if any.;public String[] getFilterNames() {_		return this.filterNames__	};return,the,names,of,hibernate,filters,to,be,activated,if,any;public,string,get,filter,names,return,this,filter,names
HibernateTemplate -> public String[] getFilterNames();1469534553;Return the names of Hibernate filters to be activated, if any.;public String[] getFilterNames() {_		return this.filterNames__	};return,the,names,of,hibernate,filters,to,be,activated,if,any;public,string,get,filter,names,return,this,filter,names
HibernateTemplate -> public String[] getFilterNames();1473503884;Return the names of Hibernate filters to be activated, if any.;public String[] getFilterNames() {_		return this.filterNames__	};return,the,names,of,hibernate,filters,to,be,activated,if,any;public,string,get,filter,names,return,this,filter,names
HibernateTemplate -> public int getFetchSize();1467668243;Return the fetch size specified for this HibernateTemplate.;public int getFetchSize() {_		return this.fetchSize__	};return,the,fetch,size,specified,for,this,hibernate,template;public,int,get,fetch,size,return,this,fetch,size
HibernateTemplate -> public int getFetchSize();1467811209;Return the fetch size specified for this HibernateTemplate.;public int getFetchSize() {_		return this.fetchSize__	};return,the,fetch,size,specified,for,this,hibernate,template;public,int,get,fetch,size,return,this,fetch,size
HibernateTemplate -> public int getFetchSize();1468441852;Return the fetch size specified for this HibernateTemplate.;public int getFetchSize() {_		return this.fetchSize__	};return,the,fetch,size,specified,for,this,hibernate,template;public,int,get,fetch,size,return,this,fetch,size
HibernateTemplate -> public int getFetchSize();1469534553;Return the fetch size specified for this HibernateTemplate.;public int getFetchSize() {_		return this.fetchSize__	};return,the,fetch,size,specified,for,this,hibernate,template;public,int,get,fetch,size,return,this,fetch,size
HibernateTemplate -> public int getFetchSize();1473503884;Return the fetch size specified for this HibernateTemplate.;public int getFetchSize() {_		return this.fetchSize__	};return,the,fetch,size,specified,for,this,hibernate,template;public,int,get,fetch,size,return,this,fetch,size
HibernateTemplate -> public int getFetchSize();1495868221;Return the fetch size specified for this HibernateTemplate.;public int getFetchSize() {_		return this.fetchSize__	};return,the,fetch,size,specified,for,this,hibernate,template;public,int,get,fetch,size,return,this,fetch,size
HibernateTemplate -> public int getFetchSize();1496259743;Return the fetch size specified for this HibernateTemplate.;public int getFetchSize() {_		return this.fetchSize__	};return,the,fetch,size,specified,for,this,hibernate,template;public,int,get,fetch,size,return,this,fetch,size
HibernateTemplate -> public int getFetchSize();1496837955;Return the fetch size specified for this HibernateTemplate.;public int getFetchSize() {_		return this.fetchSize__	};return,the,fetch,size,specified,for,this,hibernate,template;public,int,get,fetch,size,return,this,fetch,size
HibernateTemplate -> public int getFetchSize();1500448076;Return the fetch size specified for this HibernateTemplate.;public int getFetchSize() {_		return this.fetchSize__	};return,the,fetch,size,specified,for,this,hibernate,template;public,int,get,fetch,size,return,this,fetch,size
HibernateTemplate -> public int getFetchSize();1502974979;Return the fetch size specified for this HibernateTemplate.;public int getFetchSize() {_		return this.fetchSize__	};return,the,fetch,size,specified,for,this,hibernate,template;public,int,get,fetch,size,return,this,fetch,size
HibernateTemplate -> public int getFetchSize();1517247608;Return the fetch size specified for this HibernateTemplate.;public int getFetchSize() {_		return this.fetchSize__	};return,the,fetch,size,specified,for,this,hibernate,template;public,int,get,fetch,size,return,this,fetch,size
HibernateTemplate -> public int getFetchSize();1519944186;Return the fetch size specified for this HibernateTemplate.;public int getFetchSize() {_		return this.fetchSize__	};return,the,fetch,size,specified,for,this,hibernate,template;public,int,get,fetch,size,return,this,fetch,size
HibernateTemplate -> public int getFetchSize();1519995197;Return the fetch size specified for this HibernateTemplate.;public int getFetchSize() {_		return this.fetchSize__	};return,the,fetch,size,specified,for,this,hibernate,template;public,int,get,fetch,size,return,this,fetch,size
HibernateTemplate -> public int getFetchSize();1530174524;Return the fetch size specified for this HibernateTemplate.;public int getFetchSize() {_		return this.fetchSize__	};return,the,fetch,size,specified,for,this,hibernate,template;public,int,get,fetch,size,return,this,fetch,size
HibernateTemplate -> public int getFetchSize();1530709629;Return the fetch size specified for this HibernateTemplate.;public int getFetchSize() {_		return this.fetchSize__	};return,the,fetch,size,specified,for,this,hibernate,template;public,int,get,fetch,size,return,this,fetch,size
HibernateTemplate -> public void setFilterNames(@Nullable  String... filterNames);1500448076;Set one or more names of Hibernate filters to be activated for all_Sessions that this accessor works with._<p>Each of those filters will be enabled at the beginning of each_operation and correspondingly disabled at the end of the operation._This will work for newly opened Sessions as well as for existing_Sessions (for example, within a transaction)._@see #enableFilters(Session)_@see Session#enableFilter(String);public void setFilterNames(@Nullable  String... filterNames) {_		this.filterNames = filterNames__	};set,one,or,more,names,of,hibernate,filters,to,be,activated,for,all,sessions,that,this,accessor,works,with,p,each,of,those,filters,will,be,enabled,at,the,beginning,of,each,operation,and,correspondingly,disabled,at,the,end,of,the,operation,this,will,work,for,newly,opened,sessions,as,well,as,for,existing,sessions,for,example,within,a,transaction,see,enable,filters,session,see,session,enable,filter,string;public,void,set,filter,names,nullable,string,filter,names,this,filter,names,filter,names
HibernateTemplate -> public void setFilterNames(@Nullable  String... filterNames);1502974979;Set one or more names of Hibernate filters to be activated for all_Sessions that this accessor works with._<p>Each of those filters will be enabled at the beginning of each_operation and correspondingly disabled at the end of the operation._This will work for newly opened Sessions as well as for existing_Sessions (for example, within a transaction)._@see #enableFilters(Session)_@see Session#enableFilter(String);public void setFilterNames(@Nullable  String... filterNames) {_		this.filterNames = filterNames__	};set,one,or,more,names,of,hibernate,filters,to,be,activated,for,all,sessions,that,this,accessor,works,with,p,each,of,those,filters,will,be,enabled,at,the,beginning,of,each,operation,and,correspondingly,disabled,at,the,end,of,the,operation,this,will,work,for,newly,opened,sessions,as,well,as,for,existing,sessions,for,example,within,a,transaction,see,enable,filters,session,see,session,enable,filter,string;public,void,set,filter,names,nullable,string,filter,names,this,filter,names,filter,names
HibernateTemplate -> public void setFilterNames(@Nullable  String... filterNames);1517247608;Set one or more names of Hibernate filters to be activated for all_Sessions that this accessor works with._<p>Each of those filters will be enabled at the beginning of each_operation and correspondingly disabled at the end of the operation._This will work for newly opened Sessions as well as for existing_Sessions (for example, within a transaction)._@see #enableFilters(Session)_@see Session#enableFilter(String);public void setFilterNames(@Nullable  String... filterNames) {_		this.filterNames = filterNames__	};set,one,or,more,names,of,hibernate,filters,to,be,activated,for,all,sessions,that,this,accessor,works,with,p,each,of,those,filters,will,be,enabled,at,the,beginning,of,each,operation,and,correspondingly,disabled,at,the,end,of,the,operation,this,will,work,for,newly,opened,sessions,as,well,as,for,existing,sessions,for,example,within,a,transaction,see,enable,filters,session,see,session,enable,filter,string;public,void,set,filter,names,nullable,string,filter,names,this,filter,names,filter,names
HibernateTemplate -> public void setFilterNames(@Nullable  String... filterNames);1519944186;Set one or more names of Hibernate filters to be activated for all_Sessions that this accessor works with._<p>Each of those filters will be enabled at the beginning of each_operation and correspondingly disabled at the end of the operation._This will work for newly opened Sessions as well as for existing_Sessions (for example, within a transaction)._@see #enableFilters(Session)_@see Session#enableFilter(String);public void setFilterNames(@Nullable  String... filterNames) {_		this.filterNames = filterNames__	};set,one,or,more,names,of,hibernate,filters,to,be,activated,for,all,sessions,that,this,accessor,works,with,p,each,of,those,filters,will,be,enabled,at,the,beginning,of,each,operation,and,correspondingly,disabled,at,the,end,of,the,operation,this,will,work,for,newly,opened,sessions,as,well,as,for,existing,sessions,for,example,within,a,transaction,see,enable,filters,session,see,session,enable,filter,string;public,void,set,filter,names,nullable,string,filter,names,this,filter,names,filter,names
HibernateTemplate -> public void setFilterNames(@Nullable  String... filterNames);1519995197;Set one or more names of Hibernate filters to be activated for all_Sessions that this accessor works with._<p>Each of those filters will be enabled at the beginning of each_operation and correspondingly disabled at the end of the operation._This will work for newly opened Sessions as well as for existing_Sessions (for example, within a transaction)._@see #enableFilters(Session)_@see Session#enableFilter(String);public void setFilterNames(@Nullable  String... filterNames) {_		this.filterNames = filterNames__	};set,one,or,more,names,of,hibernate,filters,to,be,activated,for,all,sessions,that,this,accessor,works,with,p,each,of,those,filters,will,be,enabled,at,the,beginning,of,each,operation,and,correspondingly,disabled,at,the,end,of,the,operation,this,will,work,for,newly,opened,sessions,as,well,as,for,existing,sessions,for,example,within,a,transaction,see,enable,filters,session,see,session,enable,filter,string;public,void,set,filter,names,nullable,string,filter,names,this,filter,names,filter,names
HibernateTemplate -> public void setFilterNames(@Nullable  String... filterNames);1530174524;Set one or more names of Hibernate filters to be activated for all_Sessions that this accessor works with._<p>Each of those filters will be enabled at the beginning of each_operation and correspondingly disabled at the end of the operation._This will work for newly opened Sessions as well as for existing_Sessions (for example, within a transaction)._@see #enableFilters(Session)_@see Session#enableFilter(String);public void setFilterNames(@Nullable  String... filterNames) {_		this.filterNames = filterNames__	};set,one,or,more,names,of,hibernate,filters,to,be,activated,for,all,sessions,that,this,accessor,works,with,p,each,of,those,filters,will,be,enabled,at,the,beginning,of,each,operation,and,correspondingly,disabled,at,the,end,of,the,operation,this,will,work,for,newly,opened,sessions,as,well,as,for,existing,sessions,for,example,within,a,transaction,see,enable,filters,session,see,session,enable,filter,string;public,void,set,filter,names,nullable,string,filter,names,this,filter,names,filter,names
HibernateTemplate -> public void setFilterNames(@Nullable  String... filterNames);1530709629;Set one or more names of Hibernate filters to be activated for all_Sessions that this accessor works with._<p>Each of those filters will be enabled at the beginning of each_operation and correspondingly disabled at the end of the operation._This will work for newly opened Sessions as well as for existing_Sessions (for example, within a transaction)._@see #enableFilters(Session)_@see Session#enableFilter(String);public void setFilterNames(@Nullable  String... filterNames) {_		this.filterNames = filterNames__	};set,one,or,more,names,of,hibernate,filters,to,be,activated,for,all,sessions,that,this,accessor,works,with,p,each,of,those,filters,will,be,enabled,at,the,beginning,of,each,operation,and,correspondingly,disabled,at,the,end,of,the,operation,this,will,work,for,newly,opened,sessions,as,well,as,for,existing,sessions,for,example,within,a,transaction,see,enable,filters,session,see,session,enable,filter,string;public,void,set,filter,names,nullable,string,filter,names,this,filter,names,filter,names
HibernateTemplate -> public void setQueryCacheRegion(String queryCacheRegion);1467668243;Set the name of the cache region for queries executed by this template._<p>If this is specified, it will be applied to all Query and Criteria objects_created by this template (including all queries through find methods)._<p>The cache region will not take effect unless queries created by this_template are configured to be cached via the "cacheQueries" property._@see #setCacheQueries_@see org.hibernate.Query#setCacheRegion_@see Criteria#setCacheRegion;public void setQueryCacheRegion(String queryCacheRegion) {_		this.queryCacheRegion = queryCacheRegion__	};set,the,name,of,the,cache,region,for,queries,executed,by,this,template,p,if,this,is,specified,it,will,be,applied,to,all,query,and,criteria,objects,created,by,this,template,including,all,queries,through,find,methods,p,the,cache,region,will,not,take,effect,unless,queries,created,by,this,template,are,configured,to,be,cached,via,the,cache,queries,property,see,set,cache,queries,see,org,hibernate,query,set,cache,region,see,criteria,set,cache,region;public,void,set,query,cache,region,string,query,cache,region,this,query,cache,region,query,cache,region
HibernateTemplate -> public void setQueryCacheRegion(String queryCacheRegion);1467811209;Set the name of the cache region for queries executed by this template._<p>If this is specified, it will be applied to all Query and Criteria objects_created by this template (including all queries through find methods)._<p>The cache region will not take effect unless queries created by this_template are configured to be cached via the "cacheQueries" property._@see #setCacheQueries_@see org.hibernate.Query#setCacheRegion_@see Criteria#setCacheRegion;public void setQueryCacheRegion(String queryCacheRegion) {_		this.queryCacheRegion = queryCacheRegion__	};set,the,name,of,the,cache,region,for,queries,executed,by,this,template,p,if,this,is,specified,it,will,be,applied,to,all,query,and,criteria,objects,created,by,this,template,including,all,queries,through,find,methods,p,the,cache,region,will,not,take,effect,unless,queries,created,by,this,template,are,configured,to,be,cached,via,the,cache,queries,property,see,set,cache,queries,see,org,hibernate,query,set,cache,region,see,criteria,set,cache,region;public,void,set,query,cache,region,string,query,cache,region,this,query,cache,region,query,cache,region
HibernateTemplate -> public void setQueryCacheRegion(String queryCacheRegion);1468441852;Set the name of the cache region for queries executed by this template._<p>If this is specified, it will be applied to all Query and Criteria objects_created by this template (including all queries through find methods)._<p>The cache region will not take effect unless queries created by this_template are configured to be cached via the "cacheQueries" property._@see #setCacheQueries_@see org.hibernate.Query#setCacheRegion_@see Criteria#setCacheRegion;public void setQueryCacheRegion(String queryCacheRegion) {_		this.queryCacheRegion = queryCacheRegion__	};set,the,name,of,the,cache,region,for,queries,executed,by,this,template,p,if,this,is,specified,it,will,be,applied,to,all,query,and,criteria,objects,created,by,this,template,including,all,queries,through,find,methods,p,the,cache,region,will,not,take,effect,unless,queries,created,by,this,template,are,configured,to,be,cached,via,the,cache,queries,property,see,set,cache,queries,see,org,hibernate,query,set,cache,region,see,criteria,set,cache,region;public,void,set,query,cache,region,string,query,cache,region,this,query,cache,region,query,cache,region
HibernateTemplate -> public void setQueryCacheRegion(String queryCacheRegion);1469534553;Set the name of the cache region for queries executed by this template._<p>If this is specified, it will be applied to all Query and Criteria objects_created by this template (including all queries through find methods)._<p>The cache region will not take effect unless queries created by this_template are configured to be cached via the "cacheQueries" property._@see #setCacheQueries_@see org.hibernate.Query#setCacheRegion_@see Criteria#setCacheRegion;public void setQueryCacheRegion(String queryCacheRegion) {_		this.queryCacheRegion = queryCacheRegion__	};set,the,name,of,the,cache,region,for,queries,executed,by,this,template,p,if,this,is,specified,it,will,be,applied,to,all,query,and,criteria,objects,created,by,this,template,including,all,queries,through,find,methods,p,the,cache,region,will,not,take,effect,unless,queries,created,by,this,template,are,configured,to,be,cached,via,the,cache,queries,property,see,set,cache,queries,see,org,hibernate,query,set,cache,region,see,criteria,set,cache,region;public,void,set,query,cache,region,string,query,cache,region,this,query,cache,region,query,cache,region
HibernateTemplate -> public void setQueryCacheRegion(String queryCacheRegion);1473503884;Set the name of the cache region for queries executed by this template._<p>If this is specified, it will be applied to all Query and Criteria objects_created by this template (including all queries through find methods)._<p>The cache region will not take effect unless queries created by this_template are configured to be cached via the "cacheQueries" property._@see #setCacheQueries_@see org.hibernate.Query#setCacheRegion_@see Criteria#setCacheRegion;public void setQueryCacheRegion(String queryCacheRegion) {_		this.queryCacheRegion = queryCacheRegion__	};set,the,name,of,the,cache,region,for,queries,executed,by,this,template,p,if,this,is,specified,it,will,be,applied,to,all,query,and,criteria,objects,created,by,this,template,including,all,queries,through,find,methods,p,the,cache,region,will,not,take,effect,unless,queries,created,by,this,template,are,configured,to,be,cached,via,the,cache,queries,property,see,set,cache,queries,see,org,hibernate,query,set,cache,region,see,criteria,set,cache,region;public,void,set,query,cache,region,string,query,cache,region,this,query,cache,region,query,cache,region
HibernateTemplate -> public void setQueryCacheRegion(String queryCacheRegion);1495868221;Set the name of the cache region for queries executed by this template._<p>If this is specified, it will be applied to all Query and Criteria objects_created by this template (including all queries through find methods)._<p>The cache region will not take effect unless queries created by this_template are configured to be cached via the "cacheQueries" property._@see #setCacheQueries_@see org.hibernate.Query#setCacheRegion_@see Criteria#setCacheRegion;public void setQueryCacheRegion(String queryCacheRegion) {_		this.queryCacheRegion = queryCacheRegion__	};set,the,name,of,the,cache,region,for,queries,executed,by,this,template,p,if,this,is,specified,it,will,be,applied,to,all,query,and,criteria,objects,created,by,this,template,including,all,queries,through,find,methods,p,the,cache,region,will,not,take,effect,unless,queries,created,by,this,template,are,configured,to,be,cached,via,the,cache,queries,property,see,set,cache,queries,see,org,hibernate,query,set,cache,region,see,criteria,set,cache,region;public,void,set,query,cache,region,string,query,cache,region,this,query,cache,region,query,cache,region
HibernateTemplate -> public void setQueryCacheRegion(String queryCacheRegion);1496259743;Set the name of the cache region for queries executed by this template._<p>If this is specified, it will be applied to all Query and Criteria objects_created by this template (including all queries through find methods)._<p>The cache region will not take effect unless queries created by this_template are configured to be cached via the "cacheQueries" property._@see #setCacheQueries_@see org.hibernate.Query#setCacheRegion_@see Criteria#setCacheRegion;public void setQueryCacheRegion(String queryCacheRegion) {_		this.queryCacheRegion = queryCacheRegion__	};set,the,name,of,the,cache,region,for,queries,executed,by,this,template,p,if,this,is,specified,it,will,be,applied,to,all,query,and,criteria,objects,created,by,this,template,including,all,queries,through,find,methods,p,the,cache,region,will,not,take,effect,unless,queries,created,by,this,template,are,configured,to,be,cached,via,the,cache,queries,property,see,set,cache,queries,see,org,hibernate,query,set,cache,region,see,criteria,set,cache,region;public,void,set,query,cache,region,string,query,cache,region,this,query,cache,region,query,cache,region
HibernateTemplate -> public void setQueryCacheRegion(String queryCacheRegion);1496837955;Set the name of the cache region for queries executed by this template._<p>If this is specified, it will be applied to all Query and Criteria objects_created by this template (including all queries through find methods)._<p>The cache region will not take effect unless queries created by this_template are configured to be cached via the "cacheQueries" property._@see #setCacheQueries_@see org.hibernate.Query#setCacheRegion_@see Criteria#setCacheRegion;public void setQueryCacheRegion(String queryCacheRegion) {_		this.queryCacheRegion = queryCacheRegion__	};set,the,name,of,the,cache,region,for,queries,executed,by,this,template,p,if,this,is,specified,it,will,be,applied,to,all,query,and,criteria,objects,created,by,this,template,including,all,queries,through,find,methods,p,the,cache,region,will,not,take,effect,unless,queries,created,by,this,template,are,configured,to,be,cached,via,the,cache,queries,property,see,set,cache,queries,see,org,hibernate,query,set,cache,region,see,criteria,set,cache,region;public,void,set,query,cache,region,string,query,cache,region,this,query,cache,region,query,cache,region
HibernateTemplate -> @Deprecated 	@SuppressWarnings({"rawtypes", "deprecation"}) 	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value) 			throws HibernateException;1517247608;Apply the given name parameter to the given Query object._@param queryObject the Query object_@param paramName the name of the parameter_@param value the value of the parameter_@throws HibernateException if thrown by the Query object;@Deprecated_	@SuppressWarnings({"rawtypes", "deprecation"})_	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value)_			throws HibernateException {__		if (value instanceof Collection) {_			queryObject.setParameterList(paramName, (Collection<?>) value)__		}_		else if (value instanceof Object[]) {_			queryObject.setParameterList(paramName, (Object[]) value)__		}_		else {_			queryObject.setParameter(paramName, value)__		}_	};apply,the,given,name,parameter,to,the,given,query,object,param,query,object,the,query,object,param,param,name,the,name,of,the,parameter,param,value,the,value,of,the,parameter,throws,hibernate,exception,if,thrown,by,the,query,object;deprecated,suppress,warnings,rawtypes,deprecation,protected,void,apply,named,parameter,to,query,org,hibernate,query,query,object,string,param,name,object,value,throws,hibernate,exception,if,value,instanceof,collection,query,object,set,parameter,list,param,name,collection,value,else,if,value,instanceof,object,query,object,set,parameter,list,param,name,object,value,else,query,object,set,parameter,param,name,value
HibernateTemplate -> @Deprecated 	@SuppressWarnings({"rawtypes", "deprecation"}) 	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value) 			throws HibernateException;1519944186;Apply the given name parameter to the given Query object._@param queryObject the Query object_@param paramName the name of the parameter_@param value the value of the parameter_@throws HibernateException if thrown by the Query object;@Deprecated_	@SuppressWarnings({"rawtypes", "deprecation"})_	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value)_			throws HibernateException {__		if (value instanceof Collection) {_			queryObject.setParameterList(paramName, (Collection<?>) value)__		}_		else if (value instanceof Object[]) {_			queryObject.setParameterList(paramName, (Object[]) value)__		}_		else {_			queryObject.setParameter(paramName, value)__		}_	};apply,the,given,name,parameter,to,the,given,query,object,param,query,object,the,query,object,param,param,name,the,name,of,the,parameter,param,value,the,value,of,the,parameter,throws,hibernate,exception,if,thrown,by,the,query,object;deprecated,suppress,warnings,rawtypes,deprecation,protected,void,apply,named,parameter,to,query,org,hibernate,query,query,object,string,param,name,object,value,throws,hibernate,exception,if,value,instanceof,collection,query,object,set,parameter,list,param,name,collection,value,else,if,value,instanceof,object,query,object,set,parameter,list,param,name,object,value,else,query,object,set,parameter,param,name,value
HibernateTemplate -> @Deprecated 	@SuppressWarnings({"rawtypes", "deprecation"}) 	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value) 			throws HibernateException;1519995197;Apply the given name parameter to the given Query object._@param queryObject the Query object_@param paramName the name of the parameter_@param value the value of the parameter_@throws HibernateException if thrown by the Query object;@Deprecated_	@SuppressWarnings({"rawtypes", "deprecation"})_	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value)_			throws HibernateException {__		if (value instanceof Collection) {_			queryObject.setParameterList(paramName, (Collection<?>) value)__		}_		else if (value instanceof Object[]) {_			queryObject.setParameterList(paramName, (Object[]) value)__		}_		else {_			queryObject.setParameter(paramName, value)__		}_	};apply,the,given,name,parameter,to,the,given,query,object,param,query,object,the,query,object,param,param,name,the,name,of,the,parameter,param,value,the,value,of,the,parameter,throws,hibernate,exception,if,thrown,by,the,query,object;deprecated,suppress,warnings,rawtypes,deprecation,protected,void,apply,named,parameter,to,query,org,hibernate,query,query,object,string,param,name,object,value,throws,hibernate,exception,if,value,instanceof,collection,query,object,set,parameter,list,param,name,collection,value,else,if,value,instanceof,object,query,object,set,parameter,list,param,name,object,value,else,query,object,set,parameter,param,name,value
HibernateTemplate -> @Deprecated 	@SuppressWarnings({"rawtypes", "deprecation"}) 	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value) 			throws HibernateException;1530174524;Apply the given name parameter to the given Query object._@param queryObject the Query object_@param paramName the name of the parameter_@param value the value of the parameter_@throws HibernateException if thrown by the Query object;@Deprecated_	@SuppressWarnings({"rawtypes", "deprecation"})_	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value)_			throws HibernateException {__		if (value instanceof Collection) {_			queryObject.setParameterList(paramName, (Collection<?>) value)__		}_		else if (value instanceof Object[]) {_			queryObject.setParameterList(paramName, (Object[]) value)__		}_		else {_			queryObject.setParameter(paramName, value)__		}_	};apply,the,given,name,parameter,to,the,given,query,object,param,query,object,the,query,object,param,param,name,the,name,of,the,parameter,param,value,the,value,of,the,parameter,throws,hibernate,exception,if,thrown,by,the,query,object;deprecated,suppress,warnings,rawtypes,deprecation,protected,void,apply,named,parameter,to,query,org,hibernate,query,query,object,string,param,name,object,value,throws,hibernate,exception,if,value,instanceof,collection,query,object,set,parameter,list,param,name,collection,value,else,if,value,instanceof,object,query,object,set,parameter,list,param,name,object,value,else,query,object,set,parameter,param,name,value
HibernateTemplate -> @Deprecated 	@SuppressWarnings({"rawtypes", "deprecation"}) 	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value) 			throws HibernateException;1530709629;Apply the given name parameter to the given Query object._@param queryObject the Query object_@param paramName the name of the parameter_@param value the value of the parameter_@throws HibernateException if thrown by the Query object;@Deprecated_	@SuppressWarnings({"rawtypes", "deprecation"})_	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value)_			throws HibernateException {__		if (value instanceof Collection) {_			queryObject.setParameterList(paramName, (Collection<?>) value)__		}_		else if (value instanceof Object[]) {_			queryObject.setParameterList(paramName, (Object[]) value)__		}_		else {_			queryObject.setParameter(paramName, value)__		}_	};apply,the,given,name,parameter,to,the,given,query,object,param,query,object,the,query,object,param,param,name,the,name,of,the,parameter,param,value,the,value,of,the,parameter,throws,hibernate,exception,if,thrown,by,the,query,object;deprecated,suppress,warnings,rawtypes,deprecation,protected,void,apply,named,parameter,to,query,org,hibernate,query,query,object,string,param,name,object,value,throws,hibernate,exception,if,value,instanceof,collection,query,object,set,parameter,list,param,name,collection,value,else,if,value,instanceof,object,query,object,set,parameter,list,param,name,object,value,else,query,object,set,parameter,param,name,value
HibernateTemplate -> public int getMaxResults();1467668243;Return the maximum number of rows specified for this HibernateTemplate.;public int getMaxResults() {_		return this.maxResults__	};return,the,maximum,number,of,rows,specified,for,this,hibernate,template;public,int,get,max,results,return,this,max,results
HibernateTemplate -> public int getMaxResults();1467811209;Return the maximum number of rows specified for this HibernateTemplate.;public int getMaxResults() {_		return this.maxResults__	};return,the,maximum,number,of,rows,specified,for,this,hibernate,template;public,int,get,max,results,return,this,max,results
HibernateTemplate -> public int getMaxResults();1468441852;Return the maximum number of rows specified for this HibernateTemplate.;public int getMaxResults() {_		return this.maxResults__	};return,the,maximum,number,of,rows,specified,for,this,hibernate,template;public,int,get,max,results,return,this,max,results
HibernateTemplate -> public int getMaxResults();1469534553;Return the maximum number of rows specified for this HibernateTemplate.;public int getMaxResults() {_		return this.maxResults__	};return,the,maximum,number,of,rows,specified,for,this,hibernate,template;public,int,get,max,results,return,this,max,results
HibernateTemplate -> public int getMaxResults();1473503884;Return the maximum number of rows specified for this HibernateTemplate.;public int getMaxResults() {_		return this.maxResults__	};return,the,maximum,number,of,rows,specified,for,this,hibernate,template;public,int,get,max,results,return,this,max,results
HibernateTemplate -> public int getMaxResults();1495868221;Return the maximum number of rows specified for this HibernateTemplate.;public int getMaxResults() {_		return this.maxResults__	};return,the,maximum,number,of,rows,specified,for,this,hibernate,template;public,int,get,max,results,return,this,max,results
HibernateTemplate -> public int getMaxResults();1496259743;Return the maximum number of rows specified for this HibernateTemplate.;public int getMaxResults() {_		return this.maxResults__	};return,the,maximum,number,of,rows,specified,for,this,hibernate,template;public,int,get,max,results,return,this,max,results
HibernateTemplate -> public int getMaxResults();1496837955;Return the maximum number of rows specified for this HibernateTemplate.;public int getMaxResults() {_		return this.maxResults__	};return,the,maximum,number,of,rows,specified,for,this,hibernate,template;public,int,get,max,results,return,this,max,results
HibernateTemplate -> public int getMaxResults();1500448076;Return the maximum number of rows specified for this HibernateTemplate.;public int getMaxResults() {_		return this.maxResults__	};return,the,maximum,number,of,rows,specified,for,this,hibernate,template;public,int,get,max,results,return,this,max,results
HibernateTemplate -> public int getMaxResults();1502974979;Return the maximum number of rows specified for this HibernateTemplate.;public int getMaxResults() {_		return this.maxResults__	};return,the,maximum,number,of,rows,specified,for,this,hibernate,template;public,int,get,max,results,return,this,max,results
HibernateTemplate -> public int getMaxResults();1517247608;Return the maximum number of rows specified for this HibernateTemplate.;public int getMaxResults() {_		return this.maxResults__	};return,the,maximum,number,of,rows,specified,for,this,hibernate,template;public,int,get,max,results,return,this,max,results
HibernateTemplate -> public int getMaxResults();1519944186;Return the maximum number of rows specified for this HibernateTemplate.;public int getMaxResults() {_		return this.maxResults__	};return,the,maximum,number,of,rows,specified,for,this,hibernate,template;public,int,get,max,results,return,this,max,results
HibernateTemplate -> public int getMaxResults();1519995197;Return the maximum number of rows specified for this HibernateTemplate.;public int getMaxResults() {_		return this.maxResults__	};return,the,maximum,number,of,rows,specified,for,this,hibernate,template;public,int,get,max,results,return,this,max,results
HibernateTemplate -> public int getMaxResults();1530174524;Return the maximum number of rows specified for this HibernateTemplate.;public int getMaxResults() {_		return this.maxResults__	};return,the,maximum,number,of,rows,specified,for,this,hibernate,template;public,int,get,max,results,return,this,max,results
HibernateTemplate -> public int getMaxResults();1530709629;Return the maximum number of rows specified for this HibernateTemplate.;public int getMaxResults() {_		return this.maxResults__	};return,the,maximum,number,of,rows,specified,for,this,hibernate,template;public,int,get,max,results,return,this,max,results
HibernateTemplate -> public boolean isCheckWriteOperations();1467668243;Return whether to check that the Hibernate Session is not in read-only_mode in case of write operations (save/update/delete).;public boolean isCheckWriteOperations() {_		return this.checkWriteOperations__	};return,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete;public,boolean,is,check,write,operations,return,this,check,write,operations
HibernateTemplate -> public boolean isCheckWriteOperations();1467811209;Return whether to check that the Hibernate Session is not in read-only_mode in case of write operations (save/update/delete).;public boolean isCheckWriteOperations() {_		return this.checkWriteOperations__	};return,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete;public,boolean,is,check,write,operations,return,this,check,write,operations
HibernateTemplate -> public boolean isCheckWriteOperations();1468441852;Return whether to check that the Hibernate Session is not in read-only_mode in case of write operations (save/update/delete).;public boolean isCheckWriteOperations() {_		return this.checkWriteOperations__	};return,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete;public,boolean,is,check,write,operations,return,this,check,write,operations
HibernateTemplate -> public boolean isCheckWriteOperations();1469534553;Return whether to check that the Hibernate Session is not in read-only_mode in case of write operations (save/update/delete).;public boolean isCheckWriteOperations() {_		return this.checkWriteOperations__	};return,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete;public,boolean,is,check,write,operations,return,this,check,write,operations
HibernateTemplate -> public boolean isCheckWriteOperations();1473503884;Return whether to check that the Hibernate Session is not in read-only_mode in case of write operations (save/update/delete).;public boolean isCheckWriteOperations() {_		return this.checkWriteOperations__	};return,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete;public,boolean,is,check,write,operations,return,this,check,write,operations
HibernateTemplate -> public boolean isCheckWriteOperations();1495868221;Return whether to check that the Hibernate Session is not in read-only_mode in case of write operations (save/update/delete).;public boolean isCheckWriteOperations() {_		return this.checkWriteOperations__	};return,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete;public,boolean,is,check,write,operations,return,this,check,write,operations
HibernateTemplate -> public boolean isCheckWriteOperations();1496259743;Return whether to check that the Hibernate Session is not in read-only_mode in case of write operations (save/update/delete).;public boolean isCheckWriteOperations() {_		return this.checkWriteOperations__	};return,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete;public,boolean,is,check,write,operations,return,this,check,write,operations
HibernateTemplate -> public boolean isCheckWriteOperations();1496837955;Return whether to check that the Hibernate Session is not in read-only_mode in case of write operations (save/update/delete).;public boolean isCheckWriteOperations() {_		return this.checkWriteOperations__	};return,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete;public,boolean,is,check,write,operations,return,this,check,write,operations
HibernateTemplate -> public boolean isCheckWriteOperations();1500448076;Return whether to check that the Hibernate Session is not in read-only_mode in case of write operations (save/update/delete).;public boolean isCheckWriteOperations() {_		return this.checkWriteOperations__	};return,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete;public,boolean,is,check,write,operations,return,this,check,write,operations
HibernateTemplate -> public boolean isCheckWriteOperations();1502974979;Return whether to check that the Hibernate Session is not in read-only_mode in case of write operations (save/update/delete).;public boolean isCheckWriteOperations() {_		return this.checkWriteOperations__	};return,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete;public,boolean,is,check,write,operations,return,this,check,write,operations
HibernateTemplate -> public boolean isCheckWriteOperations();1517247608;Return whether to check that the Hibernate Session is not in read-only_mode in case of write operations (save/update/delete).;public boolean isCheckWriteOperations() {_		return this.checkWriteOperations__	};return,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete;public,boolean,is,check,write,operations,return,this,check,write,operations
HibernateTemplate -> public boolean isCheckWriteOperations();1519944186;Return whether to check that the Hibernate Session is not in read-only_mode in case of write operations (save/update/delete).;public boolean isCheckWriteOperations() {_		return this.checkWriteOperations__	};return,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete;public,boolean,is,check,write,operations,return,this,check,write,operations
HibernateTemplate -> public boolean isCheckWriteOperations();1519995197;Return whether to check that the Hibernate Session is not in read-only_mode in case of write operations (save/update/delete).;public boolean isCheckWriteOperations() {_		return this.checkWriteOperations__	};return,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete;public,boolean,is,check,write,operations,return,this,check,write,operations
HibernateTemplate -> public boolean isCheckWriteOperations();1530174524;Return whether to check that the Hibernate Session is not in read-only_mode in case of write operations (save/update/delete).;public boolean isCheckWriteOperations() {_		return this.checkWriteOperations__	};return,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete;public,boolean,is,check,write,operations,return,this,check,write,operations
HibernateTemplate -> public boolean isCheckWriteOperations();1530709629;Return whether to check that the Hibernate Session is not in read-only_mode in case of write operations (save/update/delete).;public boolean isCheckWriteOperations() {_		return this.checkWriteOperations__	};return,whether,to,check,that,the,hibernate,session,is,not,in,read,only,mode,in,case,of,write,operations,save,update,delete;public,boolean,is,check,write,operations,return,this,check,write,operations
HibernateTemplate -> public void setQueryCacheRegion(@Nullable String queryCacheRegion);1500448076;Set the name of the cache region for queries executed by this template._<p>If this is specified, it will be applied to all Query and Criteria objects_created by this template (including all queries through find methods)._<p>The cache region will not take effect unless queries created by this_template are configured to be cached via the "cacheQueries" property._@see #setCacheQueries_@see org.hibernate.Query#setCacheRegion_@see Criteria#setCacheRegion;public void setQueryCacheRegion(@Nullable String queryCacheRegion) {_		this.queryCacheRegion = queryCacheRegion__	};set,the,name,of,the,cache,region,for,queries,executed,by,this,template,p,if,this,is,specified,it,will,be,applied,to,all,query,and,criteria,objects,created,by,this,template,including,all,queries,through,find,methods,p,the,cache,region,will,not,take,effect,unless,queries,created,by,this,template,are,configured,to,be,cached,via,the,cache,queries,property,see,set,cache,queries,see,org,hibernate,query,set,cache,region,see,criteria,set,cache,region;public,void,set,query,cache,region,nullable,string,query,cache,region,this,query,cache,region,query,cache,region
HibernateTemplate -> public void setQueryCacheRegion(@Nullable String queryCacheRegion);1502974979;Set the name of the cache region for queries executed by this template._<p>If this is specified, it will be applied to all Query and Criteria objects_created by this template (including all queries through find methods)._<p>The cache region will not take effect unless queries created by this_template are configured to be cached via the "cacheQueries" property._@see #setCacheQueries_@see org.hibernate.Query#setCacheRegion_@see Criteria#setCacheRegion;public void setQueryCacheRegion(@Nullable String queryCacheRegion) {_		this.queryCacheRegion = queryCacheRegion__	};set,the,name,of,the,cache,region,for,queries,executed,by,this,template,p,if,this,is,specified,it,will,be,applied,to,all,query,and,criteria,objects,created,by,this,template,including,all,queries,through,find,methods,p,the,cache,region,will,not,take,effect,unless,queries,created,by,this,template,are,configured,to,be,cached,via,the,cache,queries,property,see,set,cache,queries,see,org,hibernate,query,set,cache,region,see,criteria,set,cache,region;public,void,set,query,cache,region,nullable,string,query,cache,region,this,query,cache,region,query,cache,region
HibernateTemplate -> public void setQueryCacheRegion(@Nullable String queryCacheRegion);1517247608;Set the name of the cache region for queries executed by this template._<p>If this is specified, it will be applied to all Query and Criteria objects_created by this template (including all queries through find methods)._<p>The cache region will not take effect unless queries created by this_template are configured to be cached via the "cacheQueries" property._@see #setCacheQueries_@see org.hibernate.Query#setCacheRegion_@see Criteria#setCacheRegion;public void setQueryCacheRegion(@Nullable String queryCacheRegion) {_		this.queryCacheRegion = queryCacheRegion__	};set,the,name,of,the,cache,region,for,queries,executed,by,this,template,p,if,this,is,specified,it,will,be,applied,to,all,query,and,criteria,objects,created,by,this,template,including,all,queries,through,find,methods,p,the,cache,region,will,not,take,effect,unless,queries,created,by,this,template,are,configured,to,be,cached,via,the,cache,queries,property,see,set,cache,queries,see,org,hibernate,query,set,cache,region,see,criteria,set,cache,region;public,void,set,query,cache,region,nullable,string,query,cache,region,this,query,cache,region,query,cache,region
HibernateTemplate -> public void setQueryCacheRegion(@Nullable String queryCacheRegion);1519944186;Set the name of the cache region for queries executed by this template._<p>If this is specified, it will be applied to all Query and Criteria objects_created by this template (including all queries through find methods)._<p>The cache region will not take effect unless queries created by this_template are configured to be cached via the "cacheQueries" property._@see #setCacheQueries_@see org.hibernate.Query#setCacheRegion_@see Criteria#setCacheRegion;public void setQueryCacheRegion(@Nullable String queryCacheRegion) {_		this.queryCacheRegion = queryCacheRegion__	};set,the,name,of,the,cache,region,for,queries,executed,by,this,template,p,if,this,is,specified,it,will,be,applied,to,all,query,and,criteria,objects,created,by,this,template,including,all,queries,through,find,methods,p,the,cache,region,will,not,take,effect,unless,queries,created,by,this,template,are,configured,to,be,cached,via,the,cache,queries,property,see,set,cache,queries,see,org,hibernate,query,set,cache,region,see,criteria,set,cache,region;public,void,set,query,cache,region,nullable,string,query,cache,region,this,query,cache,region,query,cache,region
HibernateTemplate -> public void setQueryCacheRegion(@Nullable String queryCacheRegion);1519995197;Set the name of the cache region for queries executed by this template._<p>If this is specified, it will be applied to all Query and Criteria objects_created by this template (including all queries through find methods)._<p>The cache region will not take effect unless queries created by this_template are configured to be cached via the "cacheQueries" property._@see #setCacheQueries_@see org.hibernate.Query#setCacheRegion_@see Criteria#setCacheRegion;public void setQueryCacheRegion(@Nullable String queryCacheRegion) {_		this.queryCacheRegion = queryCacheRegion__	};set,the,name,of,the,cache,region,for,queries,executed,by,this,template,p,if,this,is,specified,it,will,be,applied,to,all,query,and,criteria,objects,created,by,this,template,including,all,queries,through,find,methods,p,the,cache,region,will,not,take,effect,unless,queries,created,by,this,template,are,configured,to,be,cached,via,the,cache,queries,property,see,set,cache,queries,see,org,hibernate,query,set,cache,region,see,criteria,set,cache,region;public,void,set,query,cache,region,nullable,string,query,cache,region,this,query,cache,region,query,cache,region
HibernateTemplate -> public void setQueryCacheRegion(@Nullable String queryCacheRegion);1530174524;Set the name of the cache region for queries executed by this template._<p>If this is specified, it will be applied to all Query and Criteria objects_created by this template (including all queries through find methods)._<p>The cache region will not take effect unless queries created by this_template are configured to be cached via the "cacheQueries" property._@see #setCacheQueries_@see org.hibernate.Query#setCacheRegion_@see Criteria#setCacheRegion;public void setQueryCacheRegion(@Nullable String queryCacheRegion) {_		this.queryCacheRegion = queryCacheRegion__	};set,the,name,of,the,cache,region,for,queries,executed,by,this,template,p,if,this,is,specified,it,will,be,applied,to,all,query,and,criteria,objects,created,by,this,template,including,all,queries,through,find,methods,p,the,cache,region,will,not,take,effect,unless,queries,created,by,this,template,are,configured,to,be,cached,via,the,cache,queries,property,see,set,cache,queries,see,org,hibernate,query,set,cache,region,see,criteria,set,cache,region;public,void,set,query,cache,region,nullable,string,query,cache,region,this,query,cache,region,query,cache,region
HibernateTemplate -> public void setQueryCacheRegion(@Nullable String queryCacheRegion);1530709629;Set the name of the cache region for queries executed by this template._<p>If this is specified, it will be applied to all Query and Criteria objects_created by this template (including all queries through find methods)._<p>The cache region will not take effect unless queries created by this_template are configured to be cached via the "cacheQueries" property._@see #setCacheQueries_@see org.hibernate.Query#setCacheRegion_@see Criteria#setCacheRegion;public void setQueryCacheRegion(@Nullable String queryCacheRegion) {_		this.queryCacheRegion = queryCacheRegion__	};set,the,name,of,the,cache,region,for,queries,executed,by,this,template,p,if,this,is,specified,it,will,be,applied,to,all,query,and,criteria,objects,created,by,this,template,including,all,queries,through,find,methods,p,the,cache,region,will,not,take,effect,unless,queries,created,by,this,template,are,configured,to,be,cached,via,the,cache,queries,property,see,set,cache,queries,see,org,hibernate,query,set,cache,region,see,criteria,set,cache,region;public,void,set,query,cache,region,nullable,string,query,cache,region,this,query,cache,region,query,cache,region
HibernateTemplate -> protected Session createSessionProxy(Session session);1467668243;Create a close-suppressing proxy for the given Hibernate Session._The proxy also prepares returned Query and Criteria objects._@param session the Hibernate Session to create a proxy for_@return the Session proxy_@see Session#close()_@see #prepareQuery_@see #prepareCriteria;protected Session createSessionProxy(Session session) {_		return (Session) Proxy.newProxyInstance(_				session.getClass().getClassLoader(), new Class<?>[] {Session.class},_				new CloseSuppressingInvocationHandler(session))__	};create,a,close,suppressing,proxy,for,the,given,hibernate,session,the,proxy,also,prepares,returned,query,and,criteria,objects,param,session,the,hibernate,session,to,create,a,proxy,for,return,the,session,proxy,see,session,close,see,prepare,query,see,prepare,criteria;protected,session,create,session,proxy,session,session,return,session,proxy,new,proxy,instance,session,get,class,get,class,loader,new,class,session,class,new,close,suppressing,invocation,handler,session
HibernateTemplate -> protected Session createSessionProxy(Session session);1467811209;Create a close-suppressing proxy for the given Hibernate Session._The proxy also prepares returned Query and Criteria objects._@param session the Hibernate Session to create a proxy for_@return the Session proxy_@see Session#close()_@see #prepareQuery_@see #prepareCriteria;protected Session createSessionProxy(Session session) {_		return (Session) Proxy.newProxyInstance(_				session.getClass().getClassLoader(), new Class<?>[] {Session.class},_				new CloseSuppressingInvocationHandler(session))__	};create,a,close,suppressing,proxy,for,the,given,hibernate,session,the,proxy,also,prepares,returned,query,and,criteria,objects,param,session,the,hibernate,session,to,create,a,proxy,for,return,the,session,proxy,see,session,close,see,prepare,query,see,prepare,criteria;protected,session,create,session,proxy,session,session,return,session,proxy,new,proxy,instance,session,get,class,get,class,loader,new,class,session,class,new,close,suppressing,invocation,handler,session
HibernateTemplate -> protected Session createSessionProxy(Session session);1468441852;Create a close-suppressing proxy for the given Hibernate Session._The proxy also prepares returned Query and Criteria objects._@param session the Hibernate Session to create a proxy for_@return the Session proxy_@see Session#close()_@see #prepareQuery_@see #prepareCriteria;protected Session createSessionProxy(Session session) {_		return (Session) Proxy.newProxyInstance(_				session.getClass().getClassLoader(), new Class<?>[] {Session.class},_				new CloseSuppressingInvocationHandler(session))__	};create,a,close,suppressing,proxy,for,the,given,hibernate,session,the,proxy,also,prepares,returned,query,and,criteria,objects,param,session,the,hibernate,session,to,create,a,proxy,for,return,the,session,proxy,see,session,close,see,prepare,query,see,prepare,criteria;protected,session,create,session,proxy,session,session,return,session,proxy,new,proxy,instance,session,get,class,get,class,loader,new,class,session,class,new,close,suppressing,invocation,handler,session
HibernateTemplate -> protected Session createSessionProxy(Session session);1469534553;Create a close-suppressing proxy for the given Hibernate Session._The proxy also prepares returned Query and Criteria objects._@param session the Hibernate Session to create a proxy for_@return the Session proxy_@see Session#close()_@see #prepareQuery_@see #prepareCriteria;protected Session createSessionProxy(Session session) {_		return (Session) Proxy.newProxyInstance(_				session.getClass().getClassLoader(), new Class<?>[] {Session.class},_				new CloseSuppressingInvocationHandler(session))__	};create,a,close,suppressing,proxy,for,the,given,hibernate,session,the,proxy,also,prepares,returned,query,and,criteria,objects,param,session,the,hibernate,session,to,create,a,proxy,for,return,the,session,proxy,see,session,close,see,prepare,query,see,prepare,criteria;protected,session,create,session,proxy,session,session,return,session,proxy,new,proxy,instance,session,get,class,get,class,loader,new,class,session,class,new,close,suppressing,invocation,handler,session
HibernateTemplate -> protected Session createSessionProxy(Session session);1473503884;Create a close-suppressing proxy for the given Hibernate Session._The proxy also prepares returned Query and Criteria objects._@param session the Hibernate Session to create a proxy for_@return the Session proxy_@see Session#close()_@see #prepareQuery_@see #prepareCriteria;protected Session createSessionProxy(Session session) {_		return (Session) Proxy.newProxyInstance(_				session.getClass().getClassLoader(), new Class<?>[] {Session.class},_				new CloseSuppressingInvocationHandler(session))__	};create,a,close,suppressing,proxy,for,the,given,hibernate,session,the,proxy,also,prepares,returned,query,and,criteria,objects,param,session,the,hibernate,session,to,create,a,proxy,for,return,the,session,proxy,see,session,close,see,prepare,query,see,prepare,criteria;protected,session,create,session,proxy,session,session,return,session,proxy,new,proxy,instance,session,get,class,get,class,loader,new,class,session,class,new,close,suppressing,invocation,handler,session
HibernateTemplate -> protected Session createSessionProxy(Session session);1495868221;Create a close-suppressing proxy for the given Hibernate Session._The proxy also prepares returned Query and Criteria objects._@param session the Hibernate Session to create a proxy for_@return the Session proxy_@see Session#close()_@see #prepareQuery_@see #prepareCriteria;protected Session createSessionProxy(Session session) {_		return (Session) Proxy.newProxyInstance(_				session.getClass().getClassLoader(), new Class<?>[] {Session.class},_				new CloseSuppressingInvocationHandler(session))__	};create,a,close,suppressing,proxy,for,the,given,hibernate,session,the,proxy,also,prepares,returned,query,and,criteria,objects,param,session,the,hibernate,session,to,create,a,proxy,for,return,the,session,proxy,see,session,close,see,prepare,query,see,prepare,criteria;protected,session,create,session,proxy,session,session,return,session,proxy,new,proxy,instance,session,get,class,get,class,loader,new,class,session,class,new,close,suppressing,invocation,handler,session
HibernateTemplate -> protected Session createSessionProxy(Session session);1496259743;Create a close-suppressing proxy for the given Hibernate Session._The proxy also prepares returned Query and Criteria objects._@param session the Hibernate Session to create a proxy for_@return the Session proxy_@see Session#close()_@see #prepareQuery_@see #prepareCriteria;protected Session createSessionProxy(Session session) {_		return (Session) Proxy.newProxyInstance(_				session.getClass().getClassLoader(), new Class<?>[] {Session.class},_				new CloseSuppressingInvocationHandler(session))__	};create,a,close,suppressing,proxy,for,the,given,hibernate,session,the,proxy,also,prepares,returned,query,and,criteria,objects,param,session,the,hibernate,session,to,create,a,proxy,for,return,the,session,proxy,see,session,close,see,prepare,query,see,prepare,criteria;protected,session,create,session,proxy,session,session,return,session,proxy,new,proxy,instance,session,get,class,get,class,loader,new,class,session,class,new,close,suppressing,invocation,handler,session
HibernateTemplate -> protected Session createSessionProxy(Session session);1496837955;Create a close-suppressing proxy for the given Hibernate Session._The proxy also prepares returned Query and Criteria objects._@param session the Hibernate Session to create a proxy for_@return the Session proxy_@see Session#close()_@see #prepareQuery_@see #prepareCriteria;protected Session createSessionProxy(Session session) {_		return (Session) Proxy.newProxyInstance(_				session.getClass().getClassLoader(), new Class<?>[] {Session.class},_				new CloseSuppressingInvocationHandler(session))__	};create,a,close,suppressing,proxy,for,the,given,hibernate,session,the,proxy,also,prepares,returned,query,and,criteria,objects,param,session,the,hibernate,session,to,create,a,proxy,for,return,the,session,proxy,see,session,close,see,prepare,query,see,prepare,criteria;protected,session,create,session,proxy,session,session,return,session,proxy,new,proxy,instance,session,get,class,get,class,loader,new,class,session,class,new,close,suppressing,invocation,handler,session
HibernateTemplate -> protected Session createSessionProxy(Session session);1500448076;Create a close-suppressing proxy for the given Hibernate Session._The proxy also prepares returned Query and Criteria objects._@param session the Hibernate Session to create a proxy for_@return the Session proxy_@see Session#close()_@see #prepareQuery_@see #prepareCriteria;protected Session createSessionProxy(Session session) {_		return (Session) Proxy.newProxyInstance(_				session.getClass().getClassLoader(), new Class<?>[] {Session.class},_				new CloseSuppressingInvocationHandler(session))__	};create,a,close,suppressing,proxy,for,the,given,hibernate,session,the,proxy,also,prepares,returned,query,and,criteria,objects,param,session,the,hibernate,session,to,create,a,proxy,for,return,the,session,proxy,see,session,close,see,prepare,query,see,prepare,criteria;protected,session,create,session,proxy,session,session,return,session,proxy,new,proxy,instance,session,get,class,get,class,loader,new,class,session,class,new,close,suppressing,invocation,handler,session
HibernateTemplate -> protected Session createSessionProxy(Session session);1502974979;Create a close-suppressing proxy for the given Hibernate Session._The proxy also prepares returned Query and Criteria objects._@param session the Hibernate Session to create a proxy for_@return the Session proxy_@see Session#close()_@see #prepareQuery_@see #prepareCriteria;protected Session createSessionProxy(Session session) {_		return (Session) Proxy.newProxyInstance(_				session.getClass().getClassLoader(), new Class<?>[] {Session.class},_				new CloseSuppressingInvocationHandler(session))__	};create,a,close,suppressing,proxy,for,the,given,hibernate,session,the,proxy,also,prepares,returned,query,and,criteria,objects,param,session,the,hibernate,session,to,create,a,proxy,for,return,the,session,proxy,see,session,close,see,prepare,query,see,prepare,criteria;protected,session,create,session,proxy,session,session,return,session,proxy,new,proxy,instance,session,get,class,get,class,loader,new,class,session,class,new,close,suppressing,invocation,handler,session
HibernateTemplate -> protected Session createSessionProxy(Session session);1517247608;Create a close-suppressing proxy for the given Hibernate Session._The proxy also prepares returned Query and Criteria objects._@param session the Hibernate Session to create a proxy for_@return the Session proxy_@see Session#close()_@see #prepareQuery_@see #prepareCriteria;protected Session createSessionProxy(Session session) {_		return (Session) Proxy.newProxyInstance(_				session.getClass().getClassLoader(), new Class<?>[] {Session.class},_				new CloseSuppressingInvocationHandler(session))__	};create,a,close,suppressing,proxy,for,the,given,hibernate,session,the,proxy,also,prepares,returned,query,and,criteria,objects,param,session,the,hibernate,session,to,create,a,proxy,for,return,the,session,proxy,see,session,close,see,prepare,query,see,prepare,criteria;protected,session,create,session,proxy,session,session,return,session,proxy,new,proxy,instance,session,get,class,get,class,loader,new,class,session,class,new,close,suppressing,invocation,handler,session
HibernateTemplate -> protected Session createSessionProxy(Session session);1519944186;Create a close-suppressing proxy for the given Hibernate Session._The proxy also prepares returned Query and Criteria objects._@param session the Hibernate Session to create a proxy for_@return the Session proxy_@see Session#close()_@see #prepareQuery_@see #prepareCriteria;protected Session createSessionProxy(Session session) {_		return (Session) Proxy.newProxyInstance(_				session.getClass().getClassLoader(), new Class<?>[] {Session.class},_				new CloseSuppressingInvocationHandler(session))__	};create,a,close,suppressing,proxy,for,the,given,hibernate,session,the,proxy,also,prepares,returned,query,and,criteria,objects,param,session,the,hibernate,session,to,create,a,proxy,for,return,the,session,proxy,see,session,close,see,prepare,query,see,prepare,criteria;protected,session,create,session,proxy,session,session,return,session,proxy,new,proxy,instance,session,get,class,get,class,loader,new,class,session,class,new,close,suppressing,invocation,handler,session
HibernateTemplate -> protected Session createSessionProxy(Session session);1519995197;Create a close-suppressing proxy for the given Hibernate Session._The proxy also prepares returned Query and Criteria objects._@param session the Hibernate Session to create a proxy for_@return the Session proxy_@see Session#close()_@see #prepareQuery_@see #prepareCriteria;protected Session createSessionProxy(Session session) {_		return (Session) Proxy.newProxyInstance(_				session.getClass().getClassLoader(), new Class<?>[] {Session.class},_				new CloseSuppressingInvocationHandler(session))__	};create,a,close,suppressing,proxy,for,the,given,hibernate,session,the,proxy,also,prepares,returned,query,and,criteria,objects,param,session,the,hibernate,session,to,create,a,proxy,for,return,the,session,proxy,see,session,close,see,prepare,query,see,prepare,criteria;protected,session,create,session,proxy,session,session,return,session,proxy,new,proxy,instance,session,get,class,get,class,loader,new,class,session,class,new,close,suppressing,invocation,handler,session
HibernateTemplate -> protected Session createSessionProxy(Session session);1530174524;Create a close-suppressing proxy for the given Hibernate Session._The proxy also prepares returned Query and Criteria objects._@param session the Hibernate Session to create a proxy for_@return the Session proxy_@see Session#close()_@see #prepareQuery_@see #prepareCriteria;protected Session createSessionProxy(Session session) {_		return (Session) Proxy.newProxyInstance(_				session.getClass().getClassLoader(), new Class<?>[] {Session.class},_				new CloseSuppressingInvocationHandler(session))__	};create,a,close,suppressing,proxy,for,the,given,hibernate,session,the,proxy,also,prepares,returned,query,and,criteria,objects,param,session,the,hibernate,session,to,create,a,proxy,for,return,the,session,proxy,see,session,close,see,prepare,query,see,prepare,criteria;protected,session,create,session,proxy,session,session,return,session,proxy,new,proxy,instance,session,get,class,get,class,loader,new,class,session,class,new,close,suppressing,invocation,handler,session
HibernateTemplate -> protected Session createSessionProxy(Session session);1530709629;Create a close-suppressing proxy for the given Hibernate Session._The proxy also prepares returned Query and Criteria objects._@param session the Hibernate Session to create a proxy for_@return the Session proxy_@see Session#close()_@see #prepareQuery_@see #prepareCriteria;protected Session createSessionProxy(Session session) {_		return (Session) Proxy.newProxyInstance(_				session.getClass().getClassLoader(), new Class<?>[] {Session.class},_				new CloseSuppressingInvocationHandler(session))__	};create,a,close,suppressing,proxy,for,the,given,hibernate,session,the,proxy,also,prepares,returned,query,and,criteria,objects,param,session,the,hibernate,session,to,create,a,proxy,for,return,the,session,proxy,see,session,close,see,prepare,query,see,prepare,criteria;protected,session,create,session,proxy,session,session,return,session,proxy,new,proxy,instance,session,get,class,get,class,loader,new,class,session,class,new,close,suppressing,invocation,handler,session
HibernateTemplate -> public void setFilterNames(String... filterNames);1467668243;Set one or more names of Hibernate filters to be activated for all_Sessions that this accessor works with._<p>Each of those filters will be enabled at the beginning of each_operation and correspondingly disabled at the end of the operation._This will work for newly opened Sessions as well as for existing_Sessions (for example, within a transaction)._@see #enableFilters(Session)_@see Session#enableFilter(String);public void setFilterNames(String... filterNames) {_		this.filterNames = filterNames__	};set,one,or,more,names,of,hibernate,filters,to,be,activated,for,all,sessions,that,this,accessor,works,with,p,each,of,those,filters,will,be,enabled,at,the,beginning,of,each,operation,and,correspondingly,disabled,at,the,end,of,the,operation,this,will,work,for,newly,opened,sessions,as,well,as,for,existing,sessions,for,example,within,a,transaction,see,enable,filters,session,see,session,enable,filter,string;public,void,set,filter,names,string,filter,names,this,filter,names,filter,names
HibernateTemplate -> public void setFilterNames(String... filterNames);1467811209;Set one or more names of Hibernate filters to be activated for all_Sessions that this accessor works with._<p>Each of those filters will be enabled at the beginning of each_operation and correspondingly disabled at the end of the operation._This will work for newly opened Sessions as well as for existing_Sessions (for example, within a transaction)._@see #enableFilters(Session)_@see Session#enableFilter(String);public void setFilterNames(String... filterNames) {_		this.filterNames = filterNames__	};set,one,or,more,names,of,hibernate,filters,to,be,activated,for,all,sessions,that,this,accessor,works,with,p,each,of,those,filters,will,be,enabled,at,the,beginning,of,each,operation,and,correspondingly,disabled,at,the,end,of,the,operation,this,will,work,for,newly,opened,sessions,as,well,as,for,existing,sessions,for,example,within,a,transaction,see,enable,filters,session,see,session,enable,filter,string;public,void,set,filter,names,string,filter,names,this,filter,names,filter,names
HibernateTemplate -> public void setFilterNames(String... filterNames);1468441852;Set one or more names of Hibernate filters to be activated for all_Sessions that this accessor works with._<p>Each of those filters will be enabled at the beginning of each_operation and correspondingly disabled at the end of the operation._This will work for newly opened Sessions as well as for existing_Sessions (for example, within a transaction)._@see #enableFilters(Session)_@see Session#enableFilter(String);public void setFilterNames(String... filterNames) {_		this.filterNames = filterNames__	};set,one,or,more,names,of,hibernate,filters,to,be,activated,for,all,sessions,that,this,accessor,works,with,p,each,of,those,filters,will,be,enabled,at,the,beginning,of,each,operation,and,correspondingly,disabled,at,the,end,of,the,operation,this,will,work,for,newly,opened,sessions,as,well,as,for,existing,sessions,for,example,within,a,transaction,see,enable,filters,session,see,session,enable,filter,string;public,void,set,filter,names,string,filter,names,this,filter,names,filter,names
HibernateTemplate -> public void setFilterNames(String... filterNames);1469534553;Set one or more names of Hibernate filters to be activated for all_Sessions that this accessor works with._<p>Each of those filters will be enabled at the beginning of each_operation and correspondingly disabled at the end of the operation._This will work for newly opened Sessions as well as for existing_Sessions (for example, within a transaction)._@see #enableFilters(Session)_@see Session#enableFilter(String);public void setFilterNames(String... filterNames) {_		this.filterNames = filterNames__	};set,one,or,more,names,of,hibernate,filters,to,be,activated,for,all,sessions,that,this,accessor,works,with,p,each,of,those,filters,will,be,enabled,at,the,beginning,of,each,operation,and,correspondingly,disabled,at,the,end,of,the,operation,this,will,work,for,newly,opened,sessions,as,well,as,for,existing,sessions,for,example,within,a,transaction,see,enable,filters,session,see,session,enable,filter,string;public,void,set,filter,names,string,filter,names,this,filter,names,filter,names
HibernateTemplate -> public void setFilterNames(String... filterNames);1473503884;Set one or more names of Hibernate filters to be activated for all_Sessions that this accessor works with._<p>Each of those filters will be enabled at the beginning of each_operation and correspondingly disabled at the end of the operation._This will work for newly opened Sessions as well as for existing_Sessions (for example, within a transaction)._@see #enableFilters(Session)_@see Session#enableFilter(String);public void setFilterNames(String... filterNames) {_		this.filterNames = filterNames__	};set,one,or,more,names,of,hibernate,filters,to,be,activated,for,all,sessions,that,this,accessor,works,with,p,each,of,those,filters,will,be,enabled,at,the,beginning,of,each,operation,and,correspondingly,disabled,at,the,end,of,the,operation,this,will,work,for,newly,opened,sessions,as,well,as,for,existing,sessions,for,example,within,a,transaction,see,enable,filters,session,see,session,enable,filter,string;public,void,set,filter,names,string,filter,names,this,filter,names,filter,names
HibernateTemplate -> public void setFilterNames(String... filterNames);1495868221;Set one or more names of Hibernate filters to be activated for all_Sessions that this accessor works with._<p>Each of those filters will be enabled at the beginning of each_operation and correspondingly disabled at the end of the operation._This will work for newly opened Sessions as well as for existing_Sessions (for example, within a transaction)._@see #enableFilters(Session)_@see Session#enableFilter(String);public void setFilterNames(String... filterNames) {_		this.filterNames = filterNames__	};set,one,or,more,names,of,hibernate,filters,to,be,activated,for,all,sessions,that,this,accessor,works,with,p,each,of,those,filters,will,be,enabled,at,the,beginning,of,each,operation,and,correspondingly,disabled,at,the,end,of,the,operation,this,will,work,for,newly,opened,sessions,as,well,as,for,existing,sessions,for,example,within,a,transaction,see,enable,filters,session,see,session,enable,filter,string;public,void,set,filter,names,string,filter,names,this,filter,names,filter,names
HibernateTemplate -> public void setFilterNames(String... filterNames);1496259743;Set one or more names of Hibernate filters to be activated for all_Sessions that this accessor works with._<p>Each of those filters will be enabled at the beginning of each_operation and correspondingly disabled at the end of the operation._This will work for newly opened Sessions as well as for existing_Sessions (for example, within a transaction)._@see #enableFilters(Session)_@see Session#enableFilter(String);public void setFilterNames(String... filterNames) {_		this.filterNames = filterNames__	};set,one,or,more,names,of,hibernate,filters,to,be,activated,for,all,sessions,that,this,accessor,works,with,p,each,of,those,filters,will,be,enabled,at,the,beginning,of,each,operation,and,correspondingly,disabled,at,the,end,of,the,operation,this,will,work,for,newly,opened,sessions,as,well,as,for,existing,sessions,for,example,within,a,transaction,see,enable,filters,session,see,session,enable,filter,string;public,void,set,filter,names,string,filter,names,this,filter,names,filter,names
HibernateTemplate -> public void setFilterNames(String... filterNames);1496837955;Set one or more names of Hibernate filters to be activated for all_Sessions that this accessor works with._<p>Each of those filters will be enabled at the beginning of each_operation and correspondingly disabled at the end of the operation._This will work for newly opened Sessions as well as for existing_Sessions (for example, within a transaction)._@see #enableFilters(Session)_@see Session#enableFilter(String);public void setFilterNames(String... filterNames) {_		this.filterNames = filterNames__	};set,one,or,more,names,of,hibernate,filters,to,be,activated,for,all,sessions,that,this,accessor,works,with,p,each,of,those,filters,will,be,enabled,at,the,beginning,of,each,operation,and,correspondingly,disabled,at,the,end,of,the,operation,this,will,work,for,newly,opened,sessions,as,well,as,for,existing,sessions,for,example,within,a,transaction,see,enable,filters,session,see,session,enable,filter,string;public,void,set,filter,names,string,filter,names,this,filter,names,filter,names
HibernateTemplate -> protected void enableFilters(Session session);1467668243;Enable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#enableFilter(String);protected void enableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.enableFilter(filterName)__			}_		}_	};enable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,enable,filter,string;protected,void,enable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,enable,filter,filter,name
HibernateTemplate -> protected void enableFilters(Session session);1467811209;Enable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#enableFilter(String);protected void enableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.enableFilter(filterName)__			}_		}_	};enable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,enable,filter,string;protected,void,enable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,enable,filter,filter,name
HibernateTemplate -> protected void enableFilters(Session session);1468441852;Enable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#enableFilter(String);protected void enableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.enableFilter(filterName)__			}_		}_	};enable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,enable,filter,string;protected,void,enable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,enable,filter,filter,name
HibernateTemplate -> protected void enableFilters(Session session);1469534553;Enable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#enableFilter(String);protected void enableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.enableFilter(filterName)__			}_		}_	};enable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,enable,filter,string;protected,void,enable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,enable,filter,filter,name
HibernateTemplate -> protected void enableFilters(Session session);1473503884;Enable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#enableFilter(String);protected void enableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.enableFilter(filterName)__			}_		}_	};enable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,enable,filter,string;protected,void,enable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,enable,filter,filter,name
HibernateTemplate -> protected void enableFilters(Session session);1495868221;Enable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#enableFilter(String);protected void enableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.enableFilter(filterName)__			}_		}_	};enable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,enable,filter,string;protected,void,enable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,enable,filter,filter,name
HibernateTemplate -> protected void enableFilters(Session session);1496259743;Enable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#enableFilter(String);protected void enableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.enableFilter(filterName)__			}_		}_	};enable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,enable,filter,string;protected,void,enable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,enable,filter,filter,name
HibernateTemplate -> protected void enableFilters(Session session);1496837955;Enable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#enableFilter(String);protected void enableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.enableFilter(filterName)__			}_		}_	};enable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,enable,filter,string;protected,void,enable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,enable,filter,filter,name
HibernateTemplate -> protected void enableFilters(Session session);1500448076;Enable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#enableFilter(String);protected void enableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.enableFilter(filterName)__			}_		}_	};enable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,enable,filter,string;protected,void,enable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,enable,filter,filter,name
HibernateTemplate -> protected void enableFilters(Session session);1502974979;Enable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#enableFilter(String);protected void enableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.enableFilter(filterName)__			}_		}_	};enable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,enable,filter,string;protected,void,enable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,enable,filter,filter,name
HibernateTemplate -> protected void enableFilters(Session session);1517247608;Enable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#enableFilter(String);protected void enableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.enableFilter(filterName)__			}_		}_	};enable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,enable,filter,string;protected,void,enable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,enable,filter,filter,name
HibernateTemplate -> protected void enableFilters(Session session);1519944186;Enable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#enableFilter(String);protected void enableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.enableFilter(filterName)__			}_		}_	};enable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,enable,filter,string;protected,void,enable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,enable,filter,filter,name
HibernateTemplate -> protected void enableFilters(Session session);1519995197;Enable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#enableFilter(String);protected void enableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.enableFilter(filterName)__			}_		}_	};enable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,enable,filter,string;protected,void,enable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,enable,filter,filter,name
HibernateTemplate -> protected void enableFilters(Session session);1530174524;Enable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#enableFilter(String);protected void enableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.enableFilter(filterName)__			}_		}_	};enable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,enable,filter,string;protected,void,enable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,enable,filter,filter,name
HibernateTemplate -> protected void enableFilters(Session session);1530709629;Enable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#enableFilter(String);protected void enableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.enableFilter(filterName)__			}_		}_	};enable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,enable,filter,string;protected,void,enable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,enable,filter,filter,name
HibernateTemplate -> public void setMaxResults(int maxResults);1467668243;Set the maximum number of rows for this HibernateTemplate. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver if we're_never interested in the entire result in the first place (for example,_when performing searches that might return a large number of matches)._<p>Default is 0, indicating to use the JDBC driver's default.;public void setMaxResults(int maxResults) {_		this.maxResults = maxResults__	};set,the,maximum,number,of,rows,for,this,hibernate,template,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,if,we,re,never,interested,in,the,entire,result,in,the,first,place,for,example,when,performing,searches,that,might,return,a,large,number,of,matches,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,max,results,int,max,results,this,max,results,max,results
HibernateTemplate -> public void setMaxResults(int maxResults);1467811209;Set the maximum number of rows for this HibernateTemplate. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver if we're_never interested in the entire result in the first place (for example,_when performing searches that might return a large number of matches)._<p>Default is 0, indicating to use the JDBC driver's default.;public void setMaxResults(int maxResults) {_		this.maxResults = maxResults__	};set,the,maximum,number,of,rows,for,this,hibernate,template,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,if,we,re,never,interested,in,the,entire,result,in,the,first,place,for,example,when,performing,searches,that,might,return,a,large,number,of,matches,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,max,results,int,max,results,this,max,results,max,results
HibernateTemplate -> public void setMaxResults(int maxResults);1468441852;Set the maximum number of rows for this HibernateTemplate. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver if we're_never interested in the entire result in the first place (for example,_when performing searches that might return a large number of matches)._<p>Default is 0, indicating to use the JDBC driver's default.;public void setMaxResults(int maxResults) {_		this.maxResults = maxResults__	};set,the,maximum,number,of,rows,for,this,hibernate,template,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,if,we,re,never,interested,in,the,entire,result,in,the,first,place,for,example,when,performing,searches,that,might,return,a,large,number,of,matches,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,max,results,int,max,results,this,max,results,max,results
HibernateTemplate -> public void setMaxResults(int maxResults);1469534553;Set the maximum number of rows for this HibernateTemplate. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver if we're_never interested in the entire result in the first place (for example,_when performing searches that might return a large number of matches)._<p>Default is 0, indicating to use the JDBC driver's default.;public void setMaxResults(int maxResults) {_		this.maxResults = maxResults__	};set,the,maximum,number,of,rows,for,this,hibernate,template,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,if,we,re,never,interested,in,the,entire,result,in,the,first,place,for,example,when,performing,searches,that,might,return,a,large,number,of,matches,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,max,results,int,max,results,this,max,results,max,results
HibernateTemplate -> public void setMaxResults(int maxResults);1473503884;Set the maximum number of rows for this HibernateTemplate. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver if we're_never interested in the entire result in the first place (for example,_when performing searches that might return a large number of matches)._<p>Default is 0, indicating to use the JDBC driver's default.;public void setMaxResults(int maxResults) {_		this.maxResults = maxResults__	};set,the,maximum,number,of,rows,for,this,hibernate,template,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,if,we,re,never,interested,in,the,entire,result,in,the,first,place,for,example,when,performing,searches,that,might,return,a,large,number,of,matches,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,max,results,int,max,results,this,max,results,max,results
HibernateTemplate -> public void setMaxResults(int maxResults);1495868221;Set the maximum number of rows for this HibernateTemplate. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver if we're_never interested in the entire result in the first place (for example,_when performing searches that might return a large number of matches)._<p>Default is 0, indicating to use the JDBC driver's default.;public void setMaxResults(int maxResults) {_		this.maxResults = maxResults__	};set,the,maximum,number,of,rows,for,this,hibernate,template,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,if,we,re,never,interested,in,the,entire,result,in,the,first,place,for,example,when,performing,searches,that,might,return,a,large,number,of,matches,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,max,results,int,max,results,this,max,results,max,results
HibernateTemplate -> public void setMaxResults(int maxResults);1496259743;Set the maximum number of rows for this HibernateTemplate. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver if we're_never interested in the entire result in the first place (for example,_when performing searches that might return a large number of matches)._<p>Default is 0, indicating to use the JDBC driver's default.;public void setMaxResults(int maxResults) {_		this.maxResults = maxResults__	};set,the,maximum,number,of,rows,for,this,hibernate,template,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,if,we,re,never,interested,in,the,entire,result,in,the,first,place,for,example,when,performing,searches,that,might,return,a,large,number,of,matches,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,max,results,int,max,results,this,max,results,max,results
HibernateTemplate -> public void setMaxResults(int maxResults);1496837955;Set the maximum number of rows for this HibernateTemplate. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver if we're_never interested in the entire result in the first place (for example,_when performing searches that might return a large number of matches)._<p>Default is 0, indicating to use the JDBC driver's default.;public void setMaxResults(int maxResults) {_		this.maxResults = maxResults__	};set,the,maximum,number,of,rows,for,this,hibernate,template,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,if,we,re,never,interested,in,the,entire,result,in,the,first,place,for,example,when,performing,searches,that,might,return,a,large,number,of,matches,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,max,results,int,max,results,this,max,results,max,results
HibernateTemplate -> public void setMaxResults(int maxResults);1500448076;Set the maximum number of rows for this HibernateTemplate. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver if we're_never interested in the entire result in the first place (for example,_when performing searches that might return a large number of matches)._<p>Default is 0, indicating to use the JDBC driver's default.;public void setMaxResults(int maxResults) {_		this.maxResults = maxResults__	};set,the,maximum,number,of,rows,for,this,hibernate,template,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,if,we,re,never,interested,in,the,entire,result,in,the,first,place,for,example,when,performing,searches,that,might,return,a,large,number,of,matches,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,max,results,int,max,results,this,max,results,max,results
HibernateTemplate -> public void setMaxResults(int maxResults);1502974979;Set the maximum number of rows for this HibernateTemplate. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver if we're_never interested in the entire result in the first place (for example,_when performing searches that might return a large number of matches)._<p>Default is 0, indicating to use the JDBC driver's default.;public void setMaxResults(int maxResults) {_		this.maxResults = maxResults__	};set,the,maximum,number,of,rows,for,this,hibernate,template,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,if,we,re,never,interested,in,the,entire,result,in,the,first,place,for,example,when,performing,searches,that,might,return,a,large,number,of,matches,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,max,results,int,max,results,this,max,results,max,results
HibernateTemplate -> public void setMaxResults(int maxResults);1517247608;Set the maximum number of rows for this HibernateTemplate. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver if we're_never interested in the entire result in the first place (for example,_when performing searches that might return a large number of matches)._<p>Default is 0, indicating to use the JDBC driver's default.;public void setMaxResults(int maxResults) {_		this.maxResults = maxResults__	};set,the,maximum,number,of,rows,for,this,hibernate,template,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,if,we,re,never,interested,in,the,entire,result,in,the,first,place,for,example,when,performing,searches,that,might,return,a,large,number,of,matches,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,max,results,int,max,results,this,max,results,max,results
HibernateTemplate -> public void setMaxResults(int maxResults);1519944186;Set the maximum number of rows for this HibernateTemplate. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver if we're_never interested in the entire result in the first place (for example,_when performing searches that might return a large number of matches)._<p>Default is 0, indicating to use the JDBC driver's default.;public void setMaxResults(int maxResults) {_		this.maxResults = maxResults__	};set,the,maximum,number,of,rows,for,this,hibernate,template,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,if,we,re,never,interested,in,the,entire,result,in,the,first,place,for,example,when,performing,searches,that,might,return,a,large,number,of,matches,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,max,results,int,max,results,this,max,results,max,results
HibernateTemplate -> public void setMaxResults(int maxResults);1519995197;Set the maximum number of rows for this HibernateTemplate. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver if we're_never interested in the entire result in the first place (for example,_when performing searches that might return a large number of matches)._<p>Default is 0, indicating to use the JDBC driver's default.;public void setMaxResults(int maxResults) {_		this.maxResults = maxResults__	};set,the,maximum,number,of,rows,for,this,hibernate,template,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,if,we,re,never,interested,in,the,entire,result,in,the,first,place,for,example,when,performing,searches,that,might,return,a,large,number,of,matches,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,max,results,int,max,results,this,max,results,max,results
HibernateTemplate -> public void setMaxResults(int maxResults);1530174524;Set the maximum number of rows for this HibernateTemplate. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver if we're_never interested in the entire result in the first place (for example,_when performing searches that might return a large number of matches)._<p>Default is 0, indicating to use the JDBC driver's default.;public void setMaxResults(int maxResults) {_		this.maxResults = maxResults__	};set,the,maximum,number,of,rows,for,this,hibernate,template,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,if,we,re,never,interested,in,the,entire,result,in,the,first,place,for,example,when,performing,searches,that,might,return,a,large,number,of,matches,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,max,results,int,max,results,this,max,results,max,results
HibernateTemplate -> public void setMaxResults(int maxResults);1530709629;Set the maximum number of rows for this HibernateTemplate. This is important_for processing subsets of large result sets, avoiding to read and hold_the entire result set in the database or in the JDBC driver if we're_never interested in the entire result in the first place (for example,_when performing searches that might return a large number of matches)._<p>Default is 0, indicating to use the JDBC driver's default.;public void setMaxResults(int maxResults) {_		this.maxResults = maxResults__	};set,the,maximum,number,of,rows,for,this,hibernate,template,this,is,important,for,processing,subsets,of,large,result,sets,avoiding,to,read,and,hold,the,entire,result,set,in,the,database,or,in,the,jdbc,driver,if,we,re,never,interested,in,the,entire,result,in,the,first,place,for,example,when,performing,searches,that,might,return,a,large,number,of,matches,p,default,is,0,indicating,to,use,the,jdbc,driver,s,default;public,void,set,max,results,int,max,results,this,max,results,max,results
HibernateTemplate -> @SuppressWarnings({"rawtypes", "deprecation"}) 	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value) 			throws HibernateException;1467668243;Apply the given name parameter to the given Query object._@param queryObject the Query object_@param paramName the name of the parameter_@param value the value of the parameter_@throws HibernateException if thrown by the Query object;@SuppressWarnings({"rawtypes", "deprecation"})_	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value)_			throws HibernateException {__		if (value instanceof Collection) {_			queryObject.setParameterList(paramName, (Collection<?>) value)__		}_		else if (value instanceof Object[]) {_			queryObject.setParameterList(paramName, (Object[]) value)__		}_		else {_			queryObject.setParameter(paramName, value)__		}_	};apply,the,given,name,parameter,to,the,given,query,object,param,query,object,the,query,object,param,param,name,the,name,of,the,parameter,param,value,the,value,of,the,parameter,throws,hibernate,exception,if,thrown,by,the,query,object;suppress,warnings,rawtypes,deprecation,protected,void,apply,named,parameter,to,query,org,hibernate,query,query,object,string,param,name,object,value,throws,hibernate,exception,if,value,instanceof,collection,query,object,set,parameter,list,param,name,collection,value,else,if,value,instanceof,object,query,object,set,parameter,list,param,name,object,value,else,query,object,set,parameter,param,name,value
HibernateTemplate -> @SuppressWarnings({"rawtypes", "deprecation"}) 	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value) 			throws HibernateException;1467811209;Apply the given name parameter to the given Query object._@param queryObject the Query object_@param paramName the name of the parameter_@param value the value of the parameter_@throws HibernateException if thrown by the Query object;@SuppressWarnings({"rawtypes", "deprecation"})_	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value)_			throws HibernateException {__		if (value instanceof Collection) {_			queryObject.setParameterList(paramName, (Collection<?>) value)__		}_		else if (value instanceof Object[]) {_			queryObject.setParameterList(paramName, (Object[]) value)__		}_		else {_			queryObject.setParameter(paramName, value)__		}_	};apply,the,given,name,parameter,to,the,given,query,object,param,query,object,the,query,object,param,param,name,the,name,of,the,parameter,param,value,the,value,of,the,parameter,throws,hibernate,exception,if,thrown,by,the,query,object;suppress,warnings,rawtypes,deprecation,protected,void,apply,named,parameter,to,query,org,hibernate,query,query,object,string,param,name,object,value,throws,hibernate,exception,if,value,instanceof,collection,query,object,set,parameter,list,param,name,collection,value,else,if,value,instanceof,object,query,object,set,parameter,list,param,name,object,value,else,query,object,set,parameter,param,name,value
HibernateTemplate -> @SuppressWarnings({"rawtypes", "deprecation"}) 	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value) 			throws HibernateException;1468441852;Apply the given name parameter to the given Query object._@param queryObject the Query object_@param paramName the name of the parameter_@param value the value of the parameter_@throws HibernateException if thrown by the Query object;@SuppressWarnings({"rawtypes", "deprecation"})_	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value)_			throws HibernateException {__		if (value instanceof Collection) {_			queryObject.setParameterList(paramName, (Collection<?>) value)__		}_		else if (value instanceof Object[]) {_			queryObject.setParameterList(paramName, (Object[]) value)__		}_		else {_			queryObject.setParameter(paramName, value)__		}_	};apply,the,given,name,parameter,to,the,given,query,object,param,query,object,the,query,object,param,param,name,the,name,of,the,parameter,param,value,the,value,of,the,parameter,throws,hibernate,exception,if,thrown,by,the,query,object;suppress,warnings,rawtypes,deprecation,protected,void,apply,named,parameter,to,query,org,hibernate,query,query,object,string,param,name,object,value,throws,hibernate,exception,if,value,instanceof,collection,query,object,set,parameter,list,param,name,collection,value,else,if,value,instanceof,object,query,object,set,parameter,list,param,name,object,value,else,query,object,set,parameter,param,name,value
HibernateTemplate -> @SuppressWarnings({"rawtypes", "deprecation"}) 	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value) 			throws HibernateException;1469534553;Apply the given name parameter to the given Query object._@param queryObject the Query object_@param paramName the name of the parameter_@param value the value of the parameter_@throws HibernateException if thrown by the Query object;@SuppressWarnings({"rawtypes", "deprecation"})_	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value)_			throws HibernateException {__		if (value instanceof Collection) {_			queryObject.setParameterList(paramName, (Collection<?>) value)__		}_		else if (value instanceof Object[]) {_			queryObject.setParameterList(paramName, (Object[]) value)__		}_		else {_			queryObject.setParameter(paramName, value)__		}_	};apply,the,given,name,parameter,to,the,given,query,object,param,query,object,the,query,object,param,param,name,the,name,of,the,parameter,param,value,the,value,of,the,parameter,throws,hibernate,exception,if,thrown,by,the,query,object;suppress,warnings,rawtypes,deprecation,protected,void,apply,named,parameter,to,query,org,hibernate,query,query,object,string,param,name,object,value,throws,hibernate,exception,if,value,instanceof,collection,query,object,set,parameter,list,param,name,collection,value,else,if,value,instanceof,object,query,object,set,parameter,list,param,name,object,value,else,query,object,set,parameter,param,name,value
HibernateTemplate -> @SuppressWarnings({"rawtypes", "deprecation"}) 	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value) 			throws HibernateException;1473503884;Apply the given name parameter to the given Query object._@param queryObject the Query object_@param paramName the name of the parameter_@param value the value of the parameter_@throws HibernateException if thrown by the Query object;@SuppressWarnings({"rawtypes", "deprecation"})_	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value)_			throws HibernateException {__		if (value instanceof Collection) {_			queryObject.setParameterList(paramName, (Collection<?>) value)__		}_		else if (value instanceof Object[]) {_			queryObject.setParameterList(paramName, (Object[]) value)__		}_		else {_			queryObject.setParameter(paramName, value)__		}_	};apply,the,given,name,parameter,to,the,given,query,object,param,query,object,the,query,object,param,param,name,the,name,of,the,parameter,param,value,the,value,of,the,parameter,throws,hibernate,exception,if,thrown,by,the,query,object;suppress,warnings,rawtypes,deprecation,protected,void,apply,named,parameter,to,query,org,hibernate,query,query,object,string,param,name,object,value,throws,hibernate,exception,if,value,instanceof,collection,query,object,set,parameter,list,param,name,collection,value,else,if,value,instanceof,object,query,object,set,parameter,list,param,name,object,value,else,query,object,set,parameter,param,name,value
HibernateTemplate -> @SuppressWarnings({"rawtypes", "deprecation"}) 	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value) 			throws HibernateException;1495868221;Apply the given name parameter to the given Query object._@param queryObject the Query object_@param paramName the name of the parameter_@param value the value of the parameter_@throws HibernateException if thrown by the Query object;@SuppressWarnings({"rawtypes", "deprecation"})_	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value)_			throws HibernateException {__		if (value instanceof Collection) {_			queryObject.setParameterList(paramName, (Collection<?>) value)__		}_		else if (value instanceof Object[]) {_			queryObject.setParameterList(paramName, (Object[]) value)__		}_		else {_			queryObject.setParameter(paramName, value)__		}_	};apply,the,given,name,parameter,to,the,given,query,object,param,query,object,the,query,object,param,param,name,the,name,of,the,parameter,param,value,the,value,of,the,parameter,throws,hibernate,exception,if,thrown,by,the,query,object;suppress,warnings,rawtypes,deprecation,protected,void,apply,named,parameter,to,query,org,hibernate,query,query,object,string,param,name,object,value,throws,hibernate,exception,if,value,instanceof,collection,query,object,set,parameter,list,param,name,collection,value,else,if,value,instanceof,object,query,object,set,parameter,list,param,name,object,value,else,query,object,set,parameter,param,name,value
HibernateTemplate -> @SuppressWarnings({"rawtypes", "deprecation"}) 	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value) 			throws HibernateException;1496259743;Apply the given name parameter to the given Query object._@param queryObject the Query object_@param paramName the name of the parameter_@param value the value of the parameter_@throws HibernateException if thrown by the Query object;@SuppressWarnings({"rawtypes", "deprecation"})_	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value)_			throws HibernateException {__		if (value instanceof Collection) {_			queryObject.setParameterList(paramName, (Collection<?>) value)__		}_		else if (value instanceof Object[]) {_			queryObject.setParameterList(paramName, (Object[]) value)__		}_		else {_			queryObject.setParameter(paramName, value)__		}_	};apply,the,given,name,parameter,to,the,given,query,object,param,query,object,the,query,object,param,param,name,the,name,of,the,parameter,param,value,the,value,of,the,parameter,throws,hibernate,exception,if,thrown,by,the,query,object;suppress,warnings,rawtypes,deprecation,protected,void,apply,named,parameter,to,query,org,hibernate,query,query,object,string,param,name,object,value,throws,hibernate,exception,if,value,instanceof,collection,query,object,set,parameter,list,param,name,collection,value,else,if,value,instanceof,object,query,object,set,parameter,list,param,name,object,value,else,query,object,set,parameter,param,name,value
HibernateTemplate -> @SuppressWarnings({"rawtypes", "deprecation"}) 	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value) 			throws HibernateException;1496837955;Apply the given name parameter to the given Query object._@param queryObject the Query object_@param paramName the name of the parameter_@param value the value of the parameter_@throws HibernateException if thrown by the Query object;@SuppressWarnings({"rawtypes", "deprecation"})_	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value)_			throws HibernateException {__		if (value instanceof Collection) {_			queryObject.setParameterList(paramName, (Collection<?>) value)__		}_		else if (value instanceof Object[]) {_			queryObject.setParameterList(paramName, (Object[]) value)__		}_		else {_			queryObject.setParameter(paramName, value)__		}_	};apply,the,given,name,parameter,to,the,given,query,object,param,query,object,the,query,object,param,param,name,the,name,of,the,parameter,param,value,the,value,of,the,parameter,throws,hibernate,exception,if,thrown,by,the,query,object;suppress,warnings,rawtypes,deprecation,protected,void,apply,named,parameter,to,query,org,hibernate,query,query,object,string,param,name,object,value,throws,hibernate,exception,if,value,instanceof,collection,query,object,set,parameter,list,param,name,collection,value,else,if,value,instanceof,object,query,object,set,parameter,list,param,name,object,value,else,query,object,set,parameter,param,name,value
HibernateTemplate -> @SuppressWarnings({"rawtypes", "deprecation"}) 	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value) 			throws HibernateException;1500448076;Apply the given name parameter to the given Query object._@param queryObject the Query object_@param paramName the name of the parameter_@param value the value of the parameter_@throws HibernateException if thrown by the Query object;@SuppressWarnings({"rawtypes", "deprecation"})_	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value)_			throws HibernateException {__		if (value instanceof Collection) {_			queryObject.setParameterList(paramName, (Collection<?>) value)__		}_		else if (value instanceof Object[]) {_			queryObject.setParameterList(paramName, (Object[]) value)__		}_		else {_			queryObject.setParameter(paramName, value)__		}_	};apply,the,given,name,parameter,to,the,given,query,object,param,query,object,the,query,object,param,param,name,the,name,of,the,parameter,param,value,the,value,of,the,parameter,throws,hibernate,exception,if,thrown,by,the,query,object;suppress,warnings,rawtypes,deprecation,protected,void,apply,named,parameter,to,query,org,hibernate,query,query,object,string,param,name,object,value,throws,hibernate,exception,if,value,instanceof,collection,query,object,set,parameter,list,param,name,collection,value,else,if,value,instanceof,object,query,object,set,parameter,list,param,name,object,value,else,query,object,set,parameter,param,name,value
HibernateTemplate -> @SuppressWarnings({"rawtypes", "deprecation"}) 	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value) 			throws HibernateException;1502974979;Apply the given name parameter to the given Query object._@param queryObject the Query object_@param paramName the name of the parameter_@param value the value of the parameter_@throws HibernateException if thrown by the Query object;@SuppressWarnings({"rawtypes", "deprecation"})_	protected void applyNamedParameterToQuery(org.hibernate.Query queryObject, String paramName, Object value)_			throws HibernateException {__		if (value instanceof Collection) {_			queryObject.setParameterList(paramName, (Collection<?>) value)__		}_		else if (value instanceof Object[]) {_			queryObject.setParameterList(paramName, (Object[]) value)__		}_		else {_			queryObject.setParameter(paramName, value)__		}_	};apply,the,given,name,parameter,to,the,given,query,object,param,query,object,the,query,object,param,param,name,the,name,of,the,parameter,param,value,the,value,of,the,parameter,throws,hibernate,exception,if,thrown,by,the,query,object;suppress,warnings,rawtypes,deprecation,protected,void,apply,named,parameter,to,query,org,hibernate,query,query,object,string,param,name,object,value,throws,hibernate,exception,if,value,instanceof,collection,query,object,set,parameter,list,param,name,collection,value,else,if,value,instanceof,object,query,object,set,parameter,list,param,name,object,value,else,query,object,set,parameter,param,name,value
HibernateTemplate -> public boolean isExposeNativeSession();1467668243;Return whether to expose the native Hibernate Session to_HibernateCallback code, or rather a Session proxy.;public boolean isExposeNativeSession() {_		return this.exposeNativeSession__	};return,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,or,rather,a,session,proxy;public,boolean,is,expose,native,session,return,this,expose,native,session
HibernateTemplate -> public boolean isExposeNativeSession();1467811209;Return whether to expose the native Hibernate Session to_HibernateCallback code, or rather a Session proxy.;public boolean isExposeNativeSession() {_		return this.exposeNativeSession__	};return,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,or,rather,a,session,proxy;public,boolean,is,expose,native,session,return,this,expose,native,session
HibernateTemplate -> public boolean isExposeNativeSession();1468441852;Return whether to expose the native Hibernate Session to_HibernateCallback code, or rather a Session proxy.;public boolean isExposeNativeSession() {_		return this.exposeNativeSession__	};return,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,or,rather,a,session,proxy;public,boolean,is,expose,native,session,return,this,expose,native,session
HibernateTemplate -> public boolean isExposeNativeSession();1469534553;Return whether to expose the native Hibernate Session to_HibernateCallback code, or rather a Session proxy.;public boolean isExposeNativeSession() {_		return this.exposeNativeSession__	};return,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,or,rather,a,session,proxy;public,boolean,is,expose,native,session,return,this,expose,native,session
HibernateTemplate -> public boolean isExposeNativeSession();1473503884;Return whether to expose the native Hibernate Session to_HibernateCallback code, or rather a Session proxy.;public boolean isExposeNativeSession() {_		return this.exposeNativeSession__	};return,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,or,rather,a,session,proxy;public,boolean,is,expose,native,session,return,this,expose,native,session
HibernateTemplate -> public boolean isExposeNativeSession();1495868221;Return whether to expose the native Hibernate Session to_HibernateCallback code, or rather a Session proxy.;public boolean isExposeNativeSession() {_		return this.exposeNativeSession__	};return,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,or,rather,a,session,proxy;public,boolean,is,expose,native,session,return,this,expose,native,session
HibernateTemplate -> public boolean isExposeNativeSession();1496259743;Return whether to expose the native Hibernate Session to_HibernateCallback code, or rather a Session proxy.;public boolean isExposeNativeSession() {_		return this.exposeNativeSession__	};return,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,or,rather,a,session,proxy;public,boolean,is,expose,native,session,return,this,expose,native,session
HibernateTemplate -> public boolean isExposeNativeSession();1496837955;Return whether to expose the native Hibernate Session to_HibernateCallback code, or rather a Session proxy.;public boolean isExposeNativeSession() {_		return this.exposeNativeSession__	};return,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,or,rather,a,session,proxy;public,boolean,is,expose,native,session,return,this,expose,native,session
HibernateTemplate -> public boolean isExposeNativeSession();1500448076;Return whether to expose the native Hibernate Session to_HibernateCallback code, or rather a Session proxy.;public boolean isExposeNativeSession() {_		return this.exposeNativeSession__	};return,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,or,rather,a,session,proxy;public,boolean,is,expose,native,session,return,this,expose,native,session
HibernateTemplate -> public boolean isExposeNativeSession();1502974979;Return whether to expose the native Hibernate Session to_HibernateCallback code, or rather a Session proxy.;public boolean isExposeNativeSession() {_		return this.exposeNativeSession__	};return,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,or,rather,a,session,proxy;public,boolean,is,expose,native,session,return,this,expose,native,session
HibernateTemplate -> public boolean isExposeNativeSession();1517247608;Return whether to expose the native Hibernate Session to_HibernateCallback code, or rather a Session proxy.;public boolean isExposeNativeSession() {_		return this.exposeNativeSession__	};return,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,or,rather,a,session,proxy;public,boolean,is,expose,native,session,return,this,expose,native,session
HibernateTemplate -> public boolean isExposeNativeSession();1519944186;Return whether to expose the native Hibernate Session to_HibernateCallback code, or rather a Session proxy.;public boolean isExposeNativeSession() {_		return this.exposeNativeSession__	};return,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,or,rather,a,session,proxy;public,boolean,is,expose,native,session,return,this,expose,native,session
HibernateTemplate -> public boolean isExposeNativeSession();1519995197;Return whether to expose the native Hibernate Session to_HibernateCallback code, or rather a Session proxy.;public boolean isExposeNativeSession() {_		return this.exposeNativeSession__	};return,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,or,rather,a,session,proxy;public,boolean,is,expose,native,session,return,this,expose,native,session
HibernateTemplate -> public boolean isExposeNativeSession();1530174524;Return whether to expose the native Hibernate Session to_HibernateCallback code, or rather a Session proxy.;public boolean isExposeNativeSession() {_		return this.exposeNativeSession__	};return,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,or,rather,a,session,proxy;public,boolean,is,expose,native,session,return,this,expose,native,session
HibernateTemplate -> public boolean isExposeNativeSession();1530709629;Return whether to expose the native Hibernate Session to_HibernateCallback code, or rather a Session proxy.;public boolean isExposeNativeSession() {_		return this.exposeNativeSession__	};return,whether,to,expose,the,native,hibernate,session,to,hibernate,callback,code,or,rather,a,session,proxy;public,boolean,is,expose,native,session,return,this,expose,native,session
HibernateTemplate -> @Nullable 	public String[] getFilterNames();1495868221;Return the names of Hibernate filters to be activated, if any.;@Nullable_	public String[] getFilterNames() {_		return this.filterNames__	};return,the,names,of,hibernate,filters,to,be,activated,if,any;nullable,public,string,get,filter,names,return,this,filter,names
HibernateTemplate -> @Nullable 	public String[] getFilterNames();1496259743;Return the names of Hibernate filters to be activated, if any.;@Nullable_	public String[] getFilterNames() {_		return this.filterNames__	};return,the,names,of,hibernate,filters,to,be,activated,if,any;nullable,public,string,get,filter,names,return,this,filter,names
HibernateTemplate -> @Nullable 	public String[] getFilterNames();1496837955;Return the names of Hibernate filters to be activated, if any.;@Nullable_	public String[] getFilterNames() {_		return this.filterNames__	};return,the,names,of,hibernate,filters,to,be,activated,if,any;nullable,public,string,get,filter,names,return,this,filter,names
HibernateTemplate -> @Nullable 	public String[] getFilterNames();1500448076;Return the names of Hibernate filters to be activated, if any.;@Nullable_	public String[] getFilterNames() {_		return this.filterNames__	};return,the,names,of,hibernate,filters,to,be,activated,if,any;nullable,public,string,get,filter,names,return,this,filter,names
HibernateTemplate -> @Nullable 	public String[] getFilterNames();1502974979;Return the names of Hibernate filters to be activated, if any.;@Nullable_	public String[] getFilterNames() {_		return this.filterNames__	};return,the,names,of,hibernate,filters,to,be,activated,if,any;nullable,public,string,get,filter,names,return,this,filter,names
HibernateTemplate -> @Nullable 	public String[] getFilterNames();1517247608;Return the names of Hibernate filters to be activated, if any.;@Nullable_	public String[] getFilterNames() {_		return this.filterNames__	};return,the,names,of,hibernate,filters,to,be,activated,if,any;nullable,public,string,get,filter,names,return,this,filter,names
HibernateTemplate -> @Nullable 	public String[] getFilterNames();1519944186;Return the names of Hibernate filters to be activated, if any.;@Nullable_	public String[] getFilterNames() {_		return this.filterNames__	};return,the,names,of,hibernate,filters,to,be,activated,if,any;nullable,public,string,get,filter,names,return,this,filter,names
HibernateTemplate -> @Nullable 	public String[] getFilterNames();1519995197;Return the names of Hibernate filters to be activated, if any.;@Nullable_	public String[] getFilterNames() {_		return this.filterNames__	};return,the,names,of,hibernate,filters,to,be,activated,if,any;nullable,public,string,get,filter,names,return,this,filter,names
HibernateTemplate -> @Nullable 	public String[] getFilterNames();1530174524;Return the names of Hibernate filters to be activated, if any.;@Nullable_	public String[] getFilterNames() {_		return this.filterNames__	};return,the,names,of,hibernate,filters,to,be,activated,if,any;nullable,public,string,get,filter,names,return,this,filter,names
HibernateTemplate -> @Nullable 	public String[] getFilterNames();1530709629;Return the names of Hibernate filters to be activated, if any.;@Nullable_	public String[] getFilterNames() {_		return this.filterNames__	};return,the,names,of,hibernate,filters,to,be,activated,if,any;nullable,public,string,get,filter,names,return,this,filter,names
HibernateTemplate -> protected final SessionFactory obtainSessionFactory();1496837955;Obtain the SessionFactory for actual use._@return the SessionFactory (never {@code null})_@throws IllegalStateException in case of no SessionFactory set_@since 5.0;protected final SessionFactory obtainSessionFactory() {_		SessionFactory sessionFactory = getSessionFactory()__		Assert.state(sessionFactory != null, "No SessionFactory set")__		return sessionFactory__	};obtain,the,session,factory,for,actual,use,return,the,session,factory,never,code,null,throws,illegal,state,exception,in,case,of,no,session,factory,set,since,5,0;protected,final,session,factory,obtain,session,factory,session,factory,session,factory,get,session,factory,assert,state,session,factory,null,no,session,factory,set,return,session,factory
HibernateTemplate -> protected final SessionFactory obtainSessionFactory();1500448076;Obtain the SessionFactory for actual use._@return the SessionFactory (never {@code null})_@throws IllegalStateException in case of no SessionFactory set_@since 5.0;protected final SessionFactory obtainSessionFactory() {_		SessionFactory sessionFactory = getSessionFactory()__		Assert.state(sessionFactory != null, "No SessionFactory set")__		return sessionFactory__	};obtain,the,session,factory,for,actual,use,return,the,session,factory,never,code,null,throws,illegal,state,exception,in,case,of,no,session,factory,set,since,5,0;protected,final,session,factory,obtain,session,factory,session,factory,session,factory,get,session,factory,assert,state,session,factory,null,no,session,factory,set,return,session,factory
HibernateTemplate -> protected final SessionFactory obtainSessionFactory();1502974979;Obtain the SessionFactory for actual use._@return the SessionFactory (never {@code null})_@throws IllegalStateException in case of no SessionFactory set_@since 5.0;protected final SessionFactory obtainSessionFactory() {_		SessionFactory sessionFactory = getSessionFactory()__		Assert.state(sessionFactory != null, "No SessionFactory set")__		return sessionFactory__	};obtain,the,session,factory,for,actual,use,return,the,session,factory,never,code,null,throws,illegal,state,exception,in,case,of,no,session,factory,set,since,5,0;protected,final,session,factory,obtain,session,factory,session,factory,session,factory,get,session,factory,assert,state,session,factory,null,no,session,factory,set,return,session,factory
HibernateTemplate -> protected final SessionFactory obtainSessionFactory();1517247608;Obtain the SessionFactory for actual use._@return the SessionFactory (never {@code null})_@throws IllegalStateException in case of no SessionFactory set_@since 5.0;protected final SessionFactory obtainSessionFactory() {_		SessionFactory sessionFactory = getSessionFactory()__		Assert.state(sessionFactory != null, "No SessionFactory set")__		return sessionFactory__	};obtain,the,session,factory,for,actual,use,return,the,session,factory,never,code,null,throws,illegal,state,exception,in,case,of,no,session,factory,set,since,5,0;protected,final,session,factory,obtain,session,factory,session,factory,session,factory,get,session,factory,assert,state,session,factory,null,no,session,factory,set,return,session,factory
HibernateTemplate -> protected final SessionFactory obtainSessionFactory();1519944186;Obtain the SessionFactory for actual use._@return the SessionFactory (never {@code null})_@throws IllegalStateException in case of no SessionFactory set_@since 5.0;protected final SessionFactory obtainSessionFactory() {_		SessionFactory sessionFactory = getSessionFactory()__		Assert.state(sessionFactory != null, "No SessionFactory set")__		return sessionFactory__	};obtain,the,session,factory,for,actual,use,return,the,session,factory,never,code,null,throws,illegal,state,exception,in,case,of,no,session,factory,set,since,5,0;protected,final,session,factory,obtain,session,factory,session,factory,session,factory,get,session,factory,assert,state,session,factory,null,no,session,factory,set,return,session,factory
HibernateTemplate -> protected final SessionFactory obtainSessionFactory();1519995197;Obtain the SessionFactory for actual use._@return the SessionFactory (never {@code null})_@throws IllegalStateException in case of no SessionFactory set_@since 5.0;protected final SessionFactory obtainSessionFactory() {_		SessionFactory sessionFactory = getSessionFactory()__		Assert.state(sessionFactory != null, "No SessionFactory set")__		return sessionFactory__	};obtain,the,session,factory,for,actual,use,return,the,session,factory,never,code,null,throws,illegal,state,exception,in,case,of,no,session,factory,set,since,5,0;protected,final,session,factory,obtain,session,factory,session,factory,session,factory,get,session,factory,assert,state,session,factory,null,no,session,factory,set,return,session,factory
HibernateTemplate -> protected final SessionFactory obtainSessionFactory();1530174524;Obtain the SessionFactory for actual use._@return the SessionFactory (never {@code null})_@throws IllegalStateException in case of no SessionFactory set_@since 5.0;protected final SessionFactory obtainSessionFactory() {_		SessionFactory sessionFactory = getSessionFactory()__		Assert.state(sessionFactory != null, "No SessionFactory set")__		return sessionFactory__	};obtain,the,session,factory,for,actual,use,return,the,session,factory,never,code,null,throws,illegal,state,exception,in,case,of,no,session,factory,set,since,5,0;protected,final,session,factory,obtain,session,factory,session,factory,session,factory,get,session,factory,assert,state,session,factory,null,no,session,factory,set,return,session,factory
HibernateTemplate -> protected final SessionFactory obtainSessionFactory();1530709629;Obtain the SessionFactory for actual use._@return the SessionFactory (never {@code null})_@throws IllegalStateException in case of no SessionFactory set_@since 5.0;protected final SessionFactory obtainSessionFactory() {_		SessionFactory sessionFactory = getSessionFactory()__		Assert.state(sessionFactory != null, "No SessionFactory set")__		return sessionFactory__	};obtain,the,session,factory,for,actual,use,return,the,session,factory,never,code,null,throws,illegal,state,exception,in,case,of,no,session,factory,set,since,5,0;protected,final,session,factory,obtain,session,factory,session,factory,session,factory,get,session,factory,assert,state,session,factory,null,no,session,factory,set,return,session,factory
HibernateTemplate -> @Nullable 	public String getQueryCacheRegion();1496837955;Return the name of the cache region for queries executed by this template.;@Nullable_	public String getQueryCacheRegion() {_		return this.queryCacheRegion__	};return,the,name,of,the,cache,region,for,queries,executed,by,this,template;nullable,public,string,get,query,cache,region,return,this,query,cache,region
HibernateTemplate -> @Nullable 	public String getQueryCacheRegion();1500448076;Return the name of the cache region for queries executed by this template.;@Nullable_	public String getQueryCacheRegion() {_		return this.queryCacheRegion__	};return,the,name,of,the,cache,region,for,queries,executed,by,this,template;nullable,public,string,get,query,cache,region,return,this,query,cache,region
HibernateTemplate -> @Nullable 	public String getQueryCacheRegion();1502974979;Return the name of the cache region for queries executed by this template.;@Nullable_	public String getQueryCacheRegion() {_		return this.queryCacheRegion__	};return,the,name,of,the,cache,region,for,queries,executed,by,this,template;nullable,public,string,get,query,cache,region,return,this,query,cache,region
HibernateTemplate -> @Nullable 	public String getQueryCacheRegion();1517247608;Return the name of the cache region for queries executed by this template.;@Nullable_	public String getQueryCacheRegion() {_		return this.queryCacheRegion__	};return,the,name,of,the,cache,region,for,queries,executed,by,this,template;nullable,public,string,get,query,cache,region,return,this,query,cache,region
HibernateTemplate -> @Nullable 	public String getQueryCacheRegion();1519944186;Return the name of the cache region for queries executed by this template.;@Nullable_	public String getQueryCacheRegion() {_		return this.queryCacheRegion__	};return,the,name,of,the,cache,region,for,queries,executed,by,this,template;nullable,public,string,get,query,cache,region,return,this,query,cache,region
HibernateTemplate -> @Nullable 	public String getQueryCacheRegion();1519995197;Return the name of the cache region for queries executed by this template.;@Nullable_	public String getQueryCacheRegion() {_		return this.queryCacheRegion__	};return,the,name,of,the,cache,region,for,queries,executed,by,this,template;nullable,public,string,get,query,cache,region,return,this,query,cache,region
HibernateTemplate -> @Nullable 	public String getQueryCacheRegion();1530174524;Return the name of the cache region for queries executed by this template.;@Nullable_	public String getQueryCacheRegion() {_		return this.queryCacheRegion__	};return,the,name,of,the,cache,region,for,queries,executed,by,this,template;nullable,public,string,get,query,cache,region,return,this,query,cache,region
HibernateTemplate -> @Nullable 	public String getQueryCacheRegion();1530709629;Return the name of the cache region for queries executed by this template.;@Nullable_	public String getQueryCacheRegion() {_		return this.queryCacheRegion__	};return,the,name,of,the,cache,region,for,queries,executed,by,this,template;nullable,public,string,get,query,cache,region,return,this,query,cache,region
HibernateTemplate -> protected void prepareCriteria(Criteria criteria);1467668243;Prepare the given Criteria object, applying cache settings and/or_a transaction timeout._@param criteria the Criteria object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;protected void prepareCriteria(Criteria criteria) {_		if (isCacheQueries()) {_			criteria.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				criteria.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			criteria.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			criteria.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(getSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			criteria.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,criteria,object,applying,cache,settings,and,or,a,transaction,timeout,param,criteria,the,criteria,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;protected,void,prepare,criteria,criteria,criteria,if,is,cache,queries,criteria,set,cacheable,true,if,get,query,cache,region,null,criteria,set,cache,region,get,query,cache,region,if,get,fetch,size,0,criteria,set,fetch,size,get,fetch,size,if,get,max,results,0,criteria,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,get,session,factory,if,session,holder,null,session,holder,has,timeout,criteria,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> protected void prepareCriteria(Criteria criteria);1467811209;Prepare the given Criteria object, applying cache settings and/or_a transaction timeout._@param criteria the Criteria object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;protected void prepareCriteria(Criteria criteria) {_		if (isCacheQueries()) {_			criteria.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				criteria.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			criteria.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			criteria.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(getSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			criteria.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,criteria,object,applying,cache,settings,and,or,a,transaction,timeout,param,criteria,the,criteria,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;protected,void,prepare,criteria,criteria,criteria,if,is,cache,queries,criteria,set,cacheable,true,if,get,query,cache,region,null,criteria,set,cache,region,get,query,cache,region,if,get,fetch,size,0,criteria,set,fetch,size,get,fetch,size,if,get,max,results,0,criteria,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,get,session,factory,if,session,holder,null,session,holder,has,timeout,criteria,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> protected void prepareCriteria(Criteria criteria);1468441852;Prepare the given Criteria object, applying cache settings and/or_a transaction timeout._@param criteria the Criteria object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;protected void prepareCriteria(Criteria criteria) {_		if (isCacheQueries()) {_			criteria.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				criteria.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			criteria.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			criteria.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(getSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			criteria.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,criteria,object,applying,cache,settings,and,or,a,transaction,timeout,param,criteria,the,criteria,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;protected,void,prepare,criteria,criteria,criteria,if,is,cache,queries,criteria,set,cacheable,true,if,get,query,cache,region,null,criteria,set,cache,region,get,query,cache,region,if,get,fetch,size,0,criteria,set,fetch,size,get,fetch,size,if,get,max,results,0,criteria,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,get,session,factory,if,session,holder,null,session,holder,has,timeout,criteria,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> protected void prepareCriteria(Criteria criteria);1469534553;Prepare the given Criteria object, applying cache settings and/or_a transaction timeout._@param criteria the Criteria object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;protected void prepareCriteria(Criteria criteria) {_		if (isCacheQueries()) {_			criteria.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				criteria.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			criteria.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			criteria.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(getSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			criteria.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,criteria,object,applying,cache,settings,and,or,a,transaction,timeout,param,criteria,the,criteria,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;protected,void,prepare,criteria,criteria,criteria,if,is,cache,queries,criteria,set,cacheable,true,if,get,query,cache,region,null,criteria,set,cache,region,get,query,cache,region,if,get,fetch,size,0,criteria,set,fetch,size,get,fetch,size,if,get,max,results,0,criteria,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,get,session,factory,if,session,holder,null,session,holder,has,timeout,criteria,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> protected void prepareCriteria(Criteria criteria);1473503884;Prepare the given Criteria object, applying cache settings and/or_a transaction timeout._@param criteria the Criteria object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;protected void prepareCriteria(Criteria criteria) {_		if (isCacheQueries()) {_			criteria.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				criteria.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			criteria.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			criteria.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(getSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			criteria.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,criteria,object,applying,cache,settings,and,or,a,transaction,timeout,param,criteria,the,criteria,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;protected,void,prepare,criteria,criteria,criteria,if,is,cache,queries,criteria,set,cacheable,true,if,get,query,cache,region,null,criteria,set,cache,region,get,query,cache,region,if,get,fetch,size,0,criteria,set,fetch,size,get,fetch,size,if,get,max,results,0,criteria,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,get,session,factory,if,session,holder,null,session,holder,has,timeout,criteria,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> protected void prepareCriteria(Criteria criteria);1495868221;Prepare the given Criteria object, applying cache settings and/or_a transaction timeout._@param criteria the Criteria object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;protected void prepareCriteria(Criteria criteria) {_		if (isCacheQueries()) {_			criteria.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				criteria.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			criteria.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			criteria.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(getSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			criteria.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,criteria,object,applying,cache,settings,and,or,a,transaction,timeout,param,criteria,the,criteria,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;protected,void,prepare,criteria,criteria,criteria,if,is,cache,queries,criteria,set,cacheable,true,if,get,query,cache,region,null,criteria,set,cache,region,get,query,cache,region,if,get,fetch,size,0,criteria,set,fetch,size,get,fetch,size,if,get,max,results,0,criteria,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,get,session,factory,if,session,holder,null,session,holder,has,timeout,criteria,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> protected void prepareCriteria(Criteria criteria);1496259743;Prepare the given Criteria object, applying cache settings and/or_a transaction timeout._@param criteria the Criteria object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;protected void prepareCriteria(Criteria criteria) {_		if (isCacheQueries()) {_			criteria.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				criteria.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			criteria.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			criteria.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(getSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			criteria.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,criteria,object,applying,cache,settings,and,or,a,transaction,timeout,param,criteria,the,criteria,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;protected,void,prepare,criteria,criteria,criteria,if,is,cache,queries,criteria,set,cacheable,true,if,get,query,cache,region,null,criteria,set,cache,region,get,query,cache,region,if,get,fetch,size,0,criteria,set,fetch,size,get,fetch,size,if,get,max,results,0,criteria,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,get,session,factory,if,session,holder,null,session,holder,has,timeout,criteria,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> protected void prepareCriteria(Criteria criteria);1496837955;Prepare the given Criteria object, applying cache settings and/or_a transaction timeout._@param criteria the Criteria object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;protected void prepareCriteria(Criteria criteria) {_		if (isCacheQueries()) {_			criteria.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				criteria.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			criteria.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			criteria.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(obtainSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			criteria.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,criteria,object,applying,cache,settings,and,or,a,transaction,timeout,param,criteria,the,criteria,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;protected,void,prepare,criteria,criteria,criteria,if,is,cache,queries,criteria,set,cacheable,true,if,get,query,cache,region,null,criteria,set,cache,region,get,query,cache,region,if,get,fetch,size,0,criteria,set,fetch,size,get,fetch,size,if,get,max,results,0,criteria,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,obtain,session,factory,if,session,holder,null,session,holder,has,timeout,criteria,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> protected void prepareCriteria(Criteria criteria);1500448076;Prepare the given Criteria object, applying cache settings and/or_a transaction timeout._@param criteria the Criteria object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;protected void prepareCriteria(Criteria criteria) {_		if (isCacheQueries()) {_			criteria.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				criteria.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			criteria.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			criteria.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(obtainSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			criteria.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,criteria,object,applying,cache,settings,and,or,a,transaction,timeout,param,criteria,the,criteria,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;protected,void,prepare,criteria,criteria,criteria,if,is,cache,queries,criteria,set,cacheable,true,if,get,query,cache,region,null,criteria,set,cache,region,get,query,cache,region,if,get,fetch,size,0,criteria,set,fetch,size,get,fetch,size,if,get,max,results,0,criteria,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,obtain,session,factory,if,session,holder,null,session,holder,has,timeout,criteria,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> protected void prepareCriteria(Criteria criteria);1502974979;Prepare the given Criteria object, applying cache settings and/or_a transaction timeout._@param criteria the Criteria object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;protected void prepareCriteria(Criteria criteria) {_		if (isCacheQueries()) {_			criteria.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				criteria.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			criteria.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			criteria.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(obtainSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			criteria.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,criteria,object,applying,cache,settings,and,or,a,transaction,timeout,param,criteria,the,criteria,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;protected,void,prepare,criteria,criteria,criteria,if,is,cache,queries,criteria,set,cacheable,true,if,get,query,cache,region,null,criteria,set,cache,region,get,query,cache,region,if,get,fetch,size,0,criteria,set,fetch,size,get,fetch,size,if,get,max,results,0,criteria,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,obtain,session,factory,if,session,holder,null,session,holder,has,timeout,criteria,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> protected void prepareCriteria(Criteria criteria);1517247608;Prepare the given Criteria object, applying cache settings and/or_a transaction timeout._@param criteria the Criteria object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;protected void prepareCriteria(Criteria criteria) {_		if (isCacheQueries()) {_			criteria.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				criteria.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			criteria.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			criteria.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(obtainSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			criteria.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,criteria,object,applying,cache,settings,and,or,a,transaction,timeout,param,criteria,the,criteria,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;protected,void,prepare,criteria,criteria,criteria,if,is,cache,queries,criteria,set,cacheable,true,if,get,query,cache,region,null,criteria,set,cache,region,get,query,cache,region,if,get,fetch,size,0,criteria,set,fetch,size,get,fetch,size,if,get,max,results,0,criteria,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,obtain,session,factory,if,session,holder,null,session,holder,has,timeout,criteria,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> protected void prepareCriteria(Criteria criteria);1519944186;Prepare the given Criteria object, applying cache settings and/or_a transaction timeout._@param criteria the Criteria object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;protected void prepareCriteria(Criteria criteria) {_		if (isCacheQueries()) {_			criteria.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				criteria.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			criteria.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			criteria.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(obtainSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			criteria.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,criteria,object,applying,cache,settings,and,or,a,transaction,timeout,param,criteria,the,criteria,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;protected,void,prepare,criteria,criteria,criteria,if,is,cache,queries,criteria,set,cacheable,true,if,get,query,cache,region,null,criteria,set,cache,region,get,query,cache,region,if,get,fetch,size,0,criteria,set,fetch,size,get,fetch,size,if,get,max,results,0,criteria,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,obtain,session,factory,if,session,holder,null,session,holder,has,timeout,criteria,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> protected void prepareCriteria(Criteria criteria);1519995197;Prepare the given Criteria object, applying cache settings and/or_a transaction timeout._@param criteria the Criteria object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;protected void prepareCriteria(Criteria criteria) {_		if (isCacheQueries()) {_			criteria.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				criteria.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			criteria.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			criteria.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(obtainSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			criteria.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,criteria,object,applying,cache,settings,and,or,a,transaction,timeout,param,criteria,the,criteria,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;protected,void,prepare,criteria,criteria,criteria,if,is,cache,queries,criteria,set,cacheable,true,if,get,query,cache,region,null,criteria,set,cache,region,get,query,cache,region,if,get,fetch,size,0,criteria,set,fetch,size,get,fetch,size,if,get,max,results,0,criteria,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,obtain,session,factory,if,session,holder,null,session,holder,has,timeout,criteria,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> protected void prepareCriteria(Criteria criteria);1530174524;Prepare the given Criteria object, applying cache settings and/or_a transaction timeout._@param criteria the Criteria object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;protected void prepareCriteria(Criteria criteria) {_		if (isCacheQueries()) {_			criteria.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				criteria.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			criteria.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			criteria.setMaxResults(getMaxResults())__		}__		SessionHolder sessionHolder =_				(SessionHolder) TransactionSynchronizationManager.getResource(obtainSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			criteria.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,criteria,object,applying,cache,settings,and,or,a,transaction,timeout,param,criteria,the,criteria,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;protected,void,prepare,criteria,criteria,criteria,if,is,cache,queries,criteria,set,cacheable,true,if,get,query,cache,region,null,criteria,set,cache,region,get,query,cache,region,if,get,fetch,size,0,criteria,set,fetch,size,get,fetch,size,if,get,max,results,0,criteria,set,max,results,get,max,results,session,holder,session,holder,session,holder,transaction,synchronization,manager,get,resource,obtain,session,factory,if,session,holder,null,session,holder,has,timeout,criteria,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> protected void prepareCriteria(Criteria criteria);1530709629;Prepare the given Criteria object, applying cache settings and/or_a transaction timeout._@param criteria the Criteria object to prepare_@see #setCacheQueries_@see #setQueryCacheRegion;protected void prepareCriteria(Criteria criteria) {_		if (isCacheQueries()) {_			criteria.setCacheable(true)__			if (getQueryCacheRegion() != null) {_				criteria.setCacheRegion(getQueryCacheRegion())__			}_		}_		if (getFetchSize() > 0) {_			criteria.setFetchSize(getFetchSize())__		}_		if (getMaxResults() > 0) {_			criteria.setMaxResults(getMaxResults())__		}__		ResourceHolderSupport sessionHolder =_				(ResourceHolderSupport) TransactionSynchronizationManager.getResource(obtainSessionFactory())__		if (sessionHolder != null && sessionHolder.hasTimeout()) {_			criteria.setTimeout(sessionHolder.getTimeToLiveInSeconds())__		}_	};prepare,the,given,criteria,object,applying,cache,settings,and,or,a,transaction,timeout,param,criteria,the,criteria,object,to,prepare,see,set,cache,queries,see,set,query,cache,region;protected,void,prepare,criteria,criteria,criteria,if,is,cache,queries,criteria,set,cacheable,true,if,get,query,cache,region,null,criteria,set,cache,region,get,query,cache,region,if,get,fetch,size,0,criteria,set,fetch,size,get,fetch,size,if,get,max,results,0,criteria,set,max,results,get,max,results,resource,holder,support,session,holder,resource,holder,support,transaction,synchronization,manager,get,resource,obtain,session,factory,if,session,holder,null,session,holder,has,timeout,criteria,set,timeout,session,holder,get,time,to,live,in,seconds
HibernateTemplate -> @Nullable 	public SessionFactory getSessionFactory();1496837955;Return the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;@Nullable_	public SessionFactory getSessionFactory() {_		return this.sessionFactory__	};return,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;nullable,public,session,factory,get,session,factory,return,this,session,factory
HibernateTemplate -> @Nullable 	public SessionFactory getSessionFactory();1500448076;Return the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;@Nullable_	public SessionFactory getSessionFactory() {_		return this.sessionFactory__	};return,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;nullable,public,session,factory,get,session,factory,return,this,session,factory
HibernateTemplate -> @Nullable 	public SessionFactory getSessionFactory();1502974979;Return the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;@Nullable_	public SessionFactory getSessionFactory() {_		return this.sessionFactory__	};return,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;nullable,public,session,factory,get,session,factory,return,this,session,factory
HibernateTemplate -> @Nullable 	public SessionFactory getSessionFactory();1517247608;Return the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;@Nullable_	public SessionFactory getSessionFactory() {_		return this.sessionFactory__	};return,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;nullable,public,session,factory,get,session,factory,return,this,session,factory
HibernateTemplate -> @Nullable 	public SessionFactory getSessionFactory();1519944186;Return the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;@Nullable_	public SessionFactory getSessionFactory() {_		return this.sessionFactory__	};return,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;nullable,public,session,factory,get,session,factory,return,this,session,factory
HibernateTemplate -> @Nullable 	public SessionFactory getSessionFactory();1519995197;Return the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;@Nullable_	public SessionFactory getSessionFactory() {_		return this.sessionFactory__	};return,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;nullable,public,session,factory,get,session,factory,return,this,session,factory
HibernateTemplate -> @Nullable 	public SessionFactory getSessionFactory();1530174524;Return the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;@Nullable_	public SessionFactory getSessionFactory() {_		return this.sessionFactory__	};return,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;nullable,public,session,factory,get,session,factory,return,this,session,factory
HibernateTemplate -> @Nullable 	public SessionFactory getSessionFactory();1530709629;Return the Hibernate SessionFactory that should be used to create_Hibernate Sessions.;@Nullable_	public SessionFactory getSessionFactory() {_		return this.sessionFactory__	};return,the,hibernate,session,factory,that,should,be,used,to,create,hibernate,sessions;nullable,public,session,factory,get,session,factory,return,this,session,factory
HibernateTemplate -> protected void disableFilters(Session session);1467668243;Disable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#disableFilter(String);protected void disableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.disableFilter(filterName)__			}_		}_	};disable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,disable,filter,string;protected,void,disable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,disable,filter,filter,name
HibernateTemplate -> protected void disableFilters(Session session);1467811209;Disable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#disableFilter(String);protected void disableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.disableFilter(filterName)__			}_		}_	};disable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,disable,filter,string;protected,void,disable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,disable,filter,filter,name
HibernateTemplate -> protected void disableFilters(Session session);1468441852;Disable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#disableFilter(String);protected void disableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.disableFilter(filterName)__			}_		}_	};disable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,disable,filter,string;protected,void,disable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,disable,filter,filter,name
HibernateTemplate -> protected void disableFilters(Session session);1469534553;Disable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#disableFilter(String);protected void disableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.disableFilter(filterName)__			}_		}_	};disable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,disable,filter,string;protected,void,disable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,disable,filter,filter,name
HibernateTemplate -> protected void disableFilters(Session session);1473503884;Disable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#disableFilter(String);protected void disableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.disableFilter(filterName)__			}_		}_	};disable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,disable,filter,string;protected,void,disable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,disable,filter,filter,name
HibernateTemplate -> protected void disableFilters(Session session);1495868221;Disable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#disableFilter(String);protected void disableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.disableFilter(filterName)__			}_		}_	};disable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,disable,filter,string;protected,void,disable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,disable,filter,filter,name
HibernateTemplate -> protected void disableFilters(Session session);1496259743;Disable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#disableFilter(String);protected void disableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.disableFilter(filterName)__			}_		}_	};disable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,disable,filter,string;protected,void,disable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,disable,filter,filter,name
HibernateTemplate -> protected void disableFilters(Session session);1496837955;Disable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#disableFilter(String);protected void disableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.disableFilter(filterName)__			}_		}_	};disable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,disable,filter,string;protected,void,disable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,disable,filter,filter,name
HibernateTemplate -> protected void disableFilters(Session session);1500448076;Disable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#disableFilter(String);protected void disableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.disableFilter(filterName)__			}_		}_	};disable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,disable,filter,string;protected,void,disable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,disable,filter,filter,name
HibernateTemplate -> protected void disableFilters(Session session);1502974979;Disable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#disableFilter(String);protected void disableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.disableFilter(filterName)__			}_		}_	};disable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,disable,filter,string;protected,void,disable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,disable,filter,filter,name
HibernateTemplate -> protected void disableFilters(Session session);1517247608;Disable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#disableFilter(String);protected void disableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.disableFilter(filterName)__			}_		}_	};disable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,disable,filter,string;protected,void,disable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,disable,filter,filter,name
HibernateTemplate -> protected void disableFilters(Session session);1519944186;Disable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#disableFilter(String);protected void disableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.disableFilter(filterName)__			}_		}_	};disable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,disable,filter,string;protected,void,disable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,disable,filter,filter,name
HibernateTemplate -> protected void disableFilters(Session session);1519995197;Disable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#disableFilter(String);protected void disableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.disableFilter(filterName)__			}_		}_	};disable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,disable,filter,string;protected,void,disable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,disable,filter,filter,name
HibernateTemplate -> protected void disableFilters(Session session);1530174524;Disable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#disableFilter(String);protected void disableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.disableFilter(filterName)__			}_		}_	};disable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,disable,filter,string;protected,void,disable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,disable,filter,filter,name
HibernateTemplate -> protected void disableFilters(Session session);1530709629;Disable the specified filters on the given Session._@param session the current Hibernate Session_@see #setFilterNames_@see Session#disableFilter(String);protected void disableFilters(Session session) {_		String[] filterNames = getFilterNames()__		if (filterNames != null) {_			for (String filterName : filterNames) {_				session.disableFilter(filterName)__			}_		}_	};disable,the,specified,filters,on,the,given,session,param,session,the,current,hibernate,session,see,set,filter,names,see,session,disable,filter,string;protected,void,disable,filters,session,session,string,filter,names,get,filter,names,if,filter,names,null,for,string,filter,name,filter,names,session,disable,filter,filter,name
HibernateTemplate -> public String getQueryCacheRegion();1467668243;Return the name of the cache region for queries executed by this template.;public String getQueryCacheRegion() {_		return this.queryCacheRegion__	};return,the,name,of,the,cache,region,for,queries,executed,by,this,template;public,string,get,query,cache,region,return,this,query,cache,region
HibernateTemplate -> public String getQueryCacheRegion();1467811209;Return the name of the cache region for queries executed by this template.;public String getQueryCacheRegion() {_		return this.queryCacheRegion__	};return,the,name,of,the,cache,region,for,queries,executed,by,this,template;public,string,get,query,cache,region,return,this,query,cache,region
HibernateTemplate -> public String getQueryCacheRegion();1468441852;Return the name of the cache region for queries executed by this template.;public String getQueryCacheRegion() {_		return this.queryCacheRegion__	};return,the,name,of,the,cache,region,for,queries,executed,by,this,template;public,string,get,query,cache,region,return,this,query,cache,region
HibernateTemplate -> public String getQueryCacheRegion();1469534553;Return the name of the cache region for queries executed by this template.;public String getQueryCacheRegion() {_		return this.queryCacheRegion__	};return,the,name,of,the,cache,region,for,queries,executed,by,this,template;public,string,get,query,cache,region,return,this,query,cache,region
HibernateTemplate -> public String getQueryCacheRegion();1473503884;Return the name of the cache region for queries executed by this template.;public String getQueryCacheRegion() {_		return this.queryCacheRegion__	};return,the,name,of,the,cache,region,for,queries,executed,by,this,template;public,string,get,query,cache,region,return,this,query,cache,region
HibernateTemplate -> public String getQueryCacheRegion();1495868221;Return the name of the cache region for queries executed by this template.;public String getQueryCacheRegion() {_		return this.queryCacheRegion__	};return,the,name,of,the,cache,region,for,queries,executed,by,this,template;public,string,get,query,cache,region,return,this,query,cache,region
HibernateTemplate -> public String getQueryCacheRegion();1496259743;Return the name of the cache region for queries executed by this template.;public String getQueryCacheRegion() {_		return this.queryCacheRegion__	};return,the,name,of,the,cache,region,for,queries,executed,by,this,template;public,string,get,query,cache,region,return,this,query,cache,region
HibernateTemplate -> @SuppressWarnings("deprecation") 	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException;1467668243;Execute the action specified by the given action object within a Session._@param action callback object that specifies the Hibernate action_@param enforceNativeSession whether to enforce exposure of the native_Hibernate Session to callback code_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;@SuppressWarnings("deprecation")_	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException {_		Assert.notNull(action, "Callback object must not be null")___		Session session = null__		boolean isNew = false__		try {_			session = getSessionFactory().getCurrentSession()__		}_		catch (HibernateException ex) {_			logger.debug("Could not retrieve pre-bound Hibernate session", ex)__		}_		if (session == null) {_			session = getSessionFactory().openSession()__			session.setFlushMode(FlushMode.MANUAL)__			isNew = true__		}__		try {_			enableFilters(session)__			Session sessionToExpose =_					(enforceNativeSession || isExposeNativeSession() ? session : createSessionProxy(session))__			return action.doInHibernate(sessionToExpose)__		}_		catch (HibernateException ex) {_			throw SessionFactoryUtils.convertHibernateAccessException(ex)__		}_		catch (RuntimeException ex) {_			_			throw ex__		}_		finally {_			if (isNew) {_				SessionFactoryUtils.closeSession(session)__			}_			else {_				disableFilters(session)__			}_		}_	};execute,the,action,specified,by,the,given,action,object,within,a,session,param,action,callback,object,that,specifies,the,hibernate,action,param,enforce,native,session,whether,to,enforce,exposure,of,the,native,hibernate,session,to,callback,code,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;suppress,warnings,deprecation,protected,t,t,do,execute,hibernate,callback,t,action,boolean,enforce,native,session,throws,data,access,exception,assert,not,null,action,callback,object,must,not,be,null,session,session,null,boolean,is,new,false,try,session,get,session,factory,get,current,session,catch,hibernate,exception,ex,logger,debug,could,not,retrieve,pre,bound,hibernate,session,ex,if,session,null,session,get,session,factory,open,session,session,set,flush,mode,flush,mode,manual,is,new,true,try,enable,filters,session,session,session,to,expose,enforce,native,session,is,expose,native,session,session,create,session,proxy,session,return,action,do,in,hibernate,session,to,expose,catch,hibernate,exception,ex,throw,session,factory,utils,convert,hibernate,access,exception,ex,catch,runtime,exception,ex,throw,ex,finally,if,is,new,session,factory,utils,close,session,session,else,disable,filters,session
HibernateTemplate -> @SuppressWarnings("deprecation") 	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException;1467811209;Execute the action specified by the given action object within a Session._@param action callback object that specifies the Hibernate action_@param enforceNativeSession whether to enforce exposure of the native_Hibernate Session to callback code_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;@SuppressWarnings("deprecation")_	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException {_		Assert.notNull(action, "Callback object must not be null")___		Session session = null__		boolean isNew = false__		try {_			session = getSessionFactory().getCurrentSession()__		}_		catch (HibernateException ex) {_			logger.debug("Could not retrieve pre-bound Hibernate session", ex)__		}_		if (session == null) {_			session = getSessionFactory().openSession()__			session.setFlushMode(FlushMode.MANUAL)__			isNew = true__		}__		try {_			enableFilters(session)__			Session sessionToExpose =_					(enforceNativeSession || isExposeNativeSession() ? session : createSessionProxy(session))__			return action.doInHibernate(sessionToExpose)__		}_		catch (HibernateException ex) {_			throw SessionFactoryUtils.convertHibernateAccessException(ex)__		}_		catch (RuntimeException ex) {_			_			throw ex__		}_		finally {_			if (isNew) {_				SessionFactoryUtils.closeSession(session)__			}_			else {_				disableFilters(session)__			}_		}_	};execute,the,action,specified,by,the,given,action,object,within,a,session,param,action,callback,object,that,specifies,the,hibernate,action,param,enforce,native,session,whether,to,enforce,exposure,of,the,native,hibernate,session,to,callback,code,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;suppress,warnings,deprecation,protected,t,t,do,execute,hibernate,callback,t,action,boolean,enforce,native,session,throws,data,access,exception,assert,not,null,action,callback,object,must,not,be,null,session,session,null,boolean,is,new,false,try,session,get,session,factory,get,current,session,catch,hibernate,exception,ex,logger,debug,could,not,retrieve,pre,bound,hibernate,session,ex,if,session,null,session,get,session,factory,open,session,session,set,flush,mode,flush,mode,manual,is,new,true,try,enable,filters,session,session,session,to,expose,enforce,native,session,is,expose,native,session,session,create,session,proxy,session,return,action,do,in,hibernate,session,to,expose,catch,hibernate,exception,ex,throw,session,factory,utils,convert,hibernate,access,exception,ex,catch,runtime,exception,ex,throw,ex,finally,if,is,new,session,factory,utils,close,session,session,else,disable,filters,session
HibernateTemplate -> @SuppressWarnings("deprecation") 	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException;1468441852;Execute the action specified by the given action object within a Session._@param action callback object that specifies the Hibernate action_@param enforceNativeSession whether to enforce exposure of the native_Hibernate Session to callback code_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;@SuppressWarnings("deprecation")_	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException {_		Assert.notNull(action, "Callback object must not be null")___		Session session = null__		boolean isNew = false__		try {_			session = getSessionFactory().getCurrentSession()__		}_		catch (HibernateException ex) {_			logger.debug("Could not retrieve pre-bound Hibernate session", ex)__		}_		if (session == null) {_			session = getSessionFactory().openSession()__			session.setFlushMode(FlushMode.MANUAL)__			isNew = true__		}__		try {_			enableFilters(session)__			Session sessionToExpose =_					(enforceNativeSession || isExposeNativeSession() ? session : createSessionProxy(session))__			return action.doInHibernate(sessionToExpose)__		}_		catch (HibernateException ex) {_			throw SessionFactoryUtils.convertHibernateAccessException(ex)__		}_		catch (PersistenceException ex) {_			if (ex.getCause() instanceof HibernateException) {_				throw SessionFactoryUtils.convertHibernateAccessException((HibernateException) ex.getCause())__			}_			throw ex__		}_		catch (RuntimeException ex) {_			_			throw ex__		}_		finally {_			if (isNew) {_				SessionFactoryUtils.closeSession(session)__			}_			else {_				disableFilters(session)__			}_		}_	};execute,the,action,specified,by,the,given,action,object,within,a,session,param,action,callback,object,that,specifies,the,hibernate,action,param,enforce,native,session,whether,to,enforce,exposure,of,the,native,hibernate,session,to,callback,code,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;suppress,warnings,deprecation,protected,t,t,do,execute,hibernate,callback,t,action,boolean,enforce,native,session,throws,data,access,exception,assert,not,null,action,callback,object,must,not,be,null,session,session,null,boolean,is,new,false,try,session,get,session,factory,get,current,session,catch,hibernate,exception,ex,logger,debug,could,not,retrieve,pre,bound,hibernate,session,ex,if,session,null,session,get,session,factory,open,session,session,set,flush,mode,flush,mode,manual,is,new,true,try,enable,filters,session,session,session,to,expose,enforce,native,session,is,expose,native,session,session,create,session,proxy,session,return,action,do,in,hibernate,session,to,expose,catch,hibernate,exception,ex,throw,session,factory,utils,convert,hibernate,access,exception,ex,catch,persistence,exception,ex,if,ex,get,cause,instanceof,hibernate,exception,throw,session,factory,utils,convert,hibernate,access,exception,hibernate,exception,ex,get,cause,throw,ex,catch,runtime,exception,ex,throw,ex,finally,if,is,new,session,factory,utils,close,session,session,else,disable,filters,session
HibernateTemplate -> @SuppressWarnings("deprecation") 	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException;1469534553;Execute the action specified by the given action object within a Session._@param action callback object that specifies the Hibernate action_@param enforceNativeSession whether to enforce exposure of the native_Hibernate Session to callback code_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;@SuppressWarnings("deprecation")_	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException {_		Assert.notNull(action, "Callback object must not be null")___		Session session = null__		boolean isNew = false__		try {_			session = getSessionFactory().getCurrentSession()__		}_		catch (HibernateException ex) {_			logger.debug("Could not retrieve pre-bound Hibernate session", ex)__		}_		if (session == null) {_			session = getSessionFactory().openSession()__			session.setFlushMode(FlushMode.MANUAL)__			isNew = true__		}__		try {_			enableFilters(session)__			Session sessionToExpose =_					(enforceNativeSession || isExposeNativeSession() ? session : createSessionProxy(session))__			return action.doInHibernate(sessionToExpose)__		}_		catch (HibernateException ex) {_			throw SessionFactoryUtils.convertHibernateAccessException(ex)__		}_		catch (PersistenceException ex) {_			if (ex.getCause() instanceof HibernateException) {_				throw SessionFactoryUtils.convertHibernateAccessException((HibernateException) ex.getCause())__			}_			throw ex__		}_		catch (RuntimeException ex) {_			_			throw ex__		}_		finally {_			if (isNew) {_				SessionFactoryUtils.closeSession(session)__			}_			else {_				disableFilters(session)__			}_		}_	};execute,the,action,specified,by,the,given,action,object,within,a,session,param,action,callback,object,that,specifies,the,hibernate,action,param,enforce,native,session,whether,to,enforce,exposure,of,the,native,hibernate,session,to,callback,code,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;suppress,warnings,deprecation,protected,t,t,do,execute,hibernate,callback,t,action,boolean,enforce,native,session,throws,data,access,exception,assert,not,null,action,callback,object,must,not,be,null,session,session,null,boolean,is,new,false,try,session,get,session,factory,get,current,session,catch,hibernate,exception,ex,logger,debug,could,not,retrieve,pre,bound,hibernate,session,ex,if,session,null,session,get,session,factory,open,session,session,set,flush,mode,flush,mode,manual,is,new,true,try,enable,filters,session,session,session,to,expose,enforce,native,session,is,expose,native,session,session,create,session,proxy,session,return,action,do,in,hibernate,session,to,expose,catch,hibernate,exception,ex,throw,session,factory,utils,convert,hibernate,access,exception,ex,catch,persistence,exception,ex,if,ex,get,cause,instanceof,hibernate,exception,throw,session,factory,utils,convert,hibernate,access,exception,hibernate,exception,ex,get,cause,throw,ex,catch,runtime,exception,ex,throw,ex,finally,if,is,new,session,factory,utils,close,session,session,else,disable,filters,session
HibernateTemplate -> @SuppressWarnings("deprecation") 	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException;1473503884;Execute the action specified by the given action object within a Session._@param action callback object that specifies the Hibernate action_@param enforceNativeSession whether to enforce exposure of the native_Hibernate Session to callback code_@return a result object returned by the action, or {@code null}_@throws DataAccessException in case of Hibernate errors;@SuppressWarnings("deprecation")_	protected <T> T doExecute(HibernateCallback<T> action, boolean enforceNativeSession) throws DataAccessException {_		Assert.notNull(action, "Callback object must not be null")___		Session session = null__		boolean isNew = false__		try {_			session = getSessionFactory().getCurrentSession()__		}_		catch (HibernateException ex) {_			logger.debug("Could not retrieve pre-bound Hibernate session", ex)__		}_		if (session == null) {_			session = getSessionFactory().openSession()__			session.setFlushMode(FlushMode.MANUAL)__			isNew = true__		}__		try {_			enableFilters(session)__			Session sessionToExpose =_					(enforceNativeSession || isExposeNativeSession() ? session : createSessionProxy(session))__			return action.doInHibernate(sessionToExpose)__		}_		catch (HibernateException ex) {_			throw SessionFactoryUtils.convertHibernateAccessException(ex)__		}_		catch (PersistenceException ex) {_			if (ex.getCause() instanceof HibernateException) {_				throw SessionFactoryUtils.convertHibernateAccessException((HibernateException) ex.getCause())__			}_			throw ex__		}_		catch (RuntimeException ex) {_			_			throw ex__		}_		finally {_			if (isNew) {_				SessionFactoryUtils.closeSession(session)__			}_			else {_				disableFilters(session)__			}_		}_	};execute,the,action,specified,by,the,given,action,object,within,a,session,param,action,callback,object,that,specifies,the,hibernate,action,param,enforce,native,session,whether,to,enforce,exposure,of,the,native,hibernate,session,to,callback,code,return,a,result,object,returned,by,the,action,or,code,null,throws,data,access,exception,in,case,of,hibernate,errors;suppress,warnings,deprecation,protected,t,t,do,execute,hibernate,callback,t,action,boolean,enforce,native,session,throws,data,access,exception,assert,not,null,action,callback,object,must,not,be,null,session,session,null,boolean,is,new,false,try,session,get,session,factory,get,current,session,catch,hibernate,exception,ex,logger,debug,could,not,retrieve,pre,bound,hibernate,session,ex,if,session,null,session,get,session,factory,open,session,session,set,flush,mode,flush,mode,manual,is,new,true,try,enable,filters,session,session,session,to,expose,enforce,native,session,is,expose,native,session,session,create,session,proxy,session,return,action,do,in,hibernate,session,to,expose,catch,hibernate,exception,ex,throw,session,factory,utils,convert,hibernate,access,exception,ex,catch,persistence,exception,ex,if,ex,get,cause,instanceof,hibernate,exception,throw,session,factory,utils,convert,hibernate,access,exception,hibernate,exception,ex,get,cause,throw,ex,catch,runtime,exception,ex,throw,ex,finally,if,is,new,session,factory,utils,close,session,session,else,disable,filters,session
HibernateTemplate -> public HibernateTemplate();1467668243;Create a new HibernateTemplate instance.;public HibernateTemplate() {_	};create,a,new,hibernate,template,instance;public,hibernate,template
HibernateTemplate -> public HibernateTemplate();1467811209;Create a new HibernateTemplate instance.;public HibernateTemplate() {_	};create,a,new,hibernate,template,instance;public,hibernate,template
HibernateTemplate -> public HibernateTemplate();1468441852;Create a new HibernateTemplate instance.;public HibernateTemplate() {_	};create,a,new,hibernate,template,instance;public,hibernate,template
HibernateTemplate -> public HibernateTemplate();1469534553;Create a new HibernateTemplate instance.;public HibernateTemplate() {_	};create,a,new,hibernate,template,instance;public,hibernate,template
HibernateTemplate -> public HibernateTemplate();1473503884;Create a new HibernateTemplate instance.;public HibernateTemplate() {_	};create,a,new,hibernate,template,instance;public,hibernate,template
HibernateTemplate -> public HibernateTemplate();1495868221;Create a new HibernateTemplate instance.;public HibernateTemplate() {_	};create,a,new,hibernate,template,instance;public,hibernate,template
HibernateTemplate -> public HibernateTemplate();1496259743;Create a new HibernateTemplate instance.;public HibernateTemplate() {_	};create,a,new,hibernate,template,instance;public,hibernate,template
HibernateTemplate -> public HibernateTemplate();1496837955;Create a new HibernateTemplate instance.;public HibernateTemplate() {_	};create,a,new,hibernate,template,instance;public,hibernate,template
HibernateTemplate -> public HibernateTemplate();1500448076;Create a new HibernateTemplate instance.;public HibernateTemplate() {_	};create,a,new,hibernate,template,instance;public,hibernate,template
HibernateTemplate -> public HibernateTemplate();1502974979;Create a new HibernateTemplate instance.;public HibernateTemplate() {_	};create,a,new,hibernate,template,instance;public,hibernate,template
HibernateTemplate -> public HibernateTemplate();1517247608;Create a new HibernateTemplate instance.;public HibernateTemplate() {_	};create,a,new,hibernate,template,instance;public,hibernate,template
HibernateTemplate -> public HibernateTemplate();1519944186;Create a new HibernateTemplate instance.;public HibernateTemplate() {_	};create,a,new,hibernate,template,instance;public,hibernate,template
HibernateTemplate -> public HibernateTemplate();1519995197;Create a new HibernateTemplate instance.;public HibernateTemplate() {_	};create,a,new,hibernate,template,instance;public,hibernate,template
HibernateTemplate -> public HibernateTemplate();1530174524;Create a new HibernateTemplate instance.;public HibernateTemplate() {_	};create,a,new,hibernate,template,instance;public,hibernate,template
HibernateTemplate -> public HibernateTemplate();1530709629;Create a new HibernateTemplate instance.;public HibernateTemplate() {_	};create,a,new,hibernate,template,instance;public,hibernate,template
HibernateTemplate -> protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException;1467668243;Check whether write operations are allowed on the given Session._<p>Default implementation throws an InvalidDataAccessApiUsageException in_case of {@code FlushMode.MANUAL}. Can be overridden in subclasses._@param session current Hibernate Session_@throws InvalidDataAccessApiUsageException if write operations are not allowed_@see #setCheckWriteOperations_@see Session#getFlushMode()_@see FlushMode#MANUAL;protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException {_		if (isCheckWriteOperations() && SessionFactoryUtils.getFlushMode(session).lessThan(FlushMode.COMMIT)) {_			throw new InvalidDataAccessApiUsageException(_					"Write operations are not allowed in read-only mode (FlushMode.MANUAL): "+_					"Turn your Session into FlushMode.COMMIT/AUTO or remove 'readOnly' marker from transaction definition.")__		}_	};check,whether,write,operations,are,allowed,on,the,given,session,p,default,implementation,throws,an,invalid,data,access,api,usage,exception,in,case,of,code,flush,mode,manual,can,be,overridden,in,subclasses,param,session,current,hibernate,session,throws,invalid,data,access,api,usage,exception,if,write,operations,are,not,allowed,see,set,check,write,operations,see,session,get,flush,mode,see,flush,mode,manual;protected,void,check,write,operation,allowed,session,session,throws,invalid,data,access,api,usage,exception,if,is,check,write,operations,session,factory,utils,get,flush,mode,session,less,than,flush,mode,commit,throw,new,invalid,data,access,api,usage,exception,write,operations,are,not,allowed,in,read,only,mode,flush,mode,manual,turn,your,session,into,flush,mode,commit,auto,or,remove,read,only,marker,from,transaction,definition
HibernateTemplate -> protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException;1467811209;Check whether write operations are allowed on the given Session._<p>Default implementation throws an InvalidDataAccessApiUsageException in_case of {@code FlushMode.MANUAL}. Can be overridden in subclasses._@param session current Hibernate Session_@throws InvalidDataAccessApiUsageException if write operations are not allowed_@see #setCheckWriteOperations_@see Session#getFlushMode()_@see FlushMode#MANUAL;protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException {_		if (isCheckWriteOperations() && SessionFactoryUtils.getFlushMode(session).lessThan(FlushMode.COMMIT)) {_			throw new InvalidDataAccessApiUsageException(_					"Write operations are not allowed in read-only mode (FlushMode.MANUAL): "+_					"Turn your Session into FlushMode.COMMIT/AUTO or remove 'readOnly' marker from transaction definition.")__		}_	};check,whether,write,operations,are,allowed,on,the,given,session,p,default,implementation,throws,an,invalid,data,access,api,usage,exception,in,case,of,code,flush,mode,manual,can,be,overridden,in,subclasses,param,session,current,hibernate,session,throws,invalid,data,access,api,usage,exception,if,write,operations,are,not,allowed,see,set,check,write,operations,see,session,get,flush,mode,see,flush,mode,manual;protected,void,check,write,operation,allowed,session,session,throws,invalid,data,access,api,usage,exception,if,is,check,write,operations,session,factory,utils,get,flush,mode,session,less,than,flush,mode,commit,throw,new,invalid,data,access,api,usage,exception,write,operations,are,not,allowed,in,read,only,mode,flush,mode,manual,turn,your,session,into,flush,mode,commit,auto,or,remove,read,only,marker,from,transaction,definition
HibernateTemplate -> protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException;1468441852;Check whether write operations are allowed on the given Session._<p>Default implementation throws an InvalidDataAccessApiUsageException in_case of {@code FlushMode.MANUAL}. Can be overridden in subclasses._@param session current Hibernate Session_@throws InvalidDataAccessApiUsageException if write operations are not allowed_@see #setCheckWriteOperations_@see Session#getFlushMode()_@see FlushMode#MANUAL;protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException {_		if (isCheckWriteOperations() && SessionFactoryUtils.getFlushMode(session).lessThan(FlushMode.COMMIT)) {_			throw new InvalidDataAccessApiUsageException(_					"Write operations are not allowed in read-only mode (FlushMode.MANUAL): "+_					"Turn your Session into FlushMode.COMMIT/AUTO or remove 'readOnly' marker from transaction definition.")__		}_	};check,whether,write,operations,are,allowed,on,the,given,session,p,default,implementation,throws,an,invalid,data,access,api,usage,exception,in,case,of,code,flush,mode,manual,can,be,overridden,in,subclasses,param,session,current,hibernate,session,throws,invalid,data,access,api,usage,exception,if,write,operations,are,not,allowed,see,set,check,write,operations,see,session,get,flush,mode,see,flush,mode,manual;protected,void,check,write,operation,allowed,session,session,throws,invalid,data,access,api,usage,exception,if,is,check,write,operations,session,factory,utils,get,flush,mode,session,less,than,flush,mode,commit,throw,new,invalid,data,access,api,usage,exception,write,operations,are,not,allowed,in,read,only,mode,flush,mode,manual,turn,your,session,into,flush,mode,commit,auto,or,remove,read,only,marker,from,transaction,definition
HibernateTemplate -> protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException;1469534553;Check whether write operations are allowed on the given Session._<p>Default implementation throws an InvalidDataAccessApiUsageException in_case of {@code FlushMode.MANUAL}. Can be overridden in subclasses._@param session current Hibernate Session_@throws InvalidDataAccessApiUsageException if write operations are not allowed_@see #setCheckWriteOperations_@see Session#getFlushMode()_@see FlushMode#MANUAL;protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException {_		if (isCheckWriteOperations() && SessionFactoryUtils.getFlushMode(session).lessThan(FlushMode.COMMIT)) {_			throw new InvalidDataAccessApiUsageException(_					"Write operations are not allowed in read-only mode (FlushMode.MANUAL): "+_					"Turn your Session into FlushMode.COMMIT/AUTO or remove 'readOnly' marker from transaction definition.")__		}_	};check,whether,write,operations,are,allowed,on,the,given,session,p,default,implementation,throws,an,invalid,data,access,api,usage,exception,in,case,of,code,flush,mode,manual,can,be,overridden,in,subclasses,param,session,current,hibernate,session,throws,invalid,data,access,api,usage,exception,if,write,operations,are,not,allowed,see,set,check,write,operations,see,session,get,flush,mode,see,flush,mode,manual;protected,void,check,write,operation,allowed,session,session,throws,invalid,data,access,api,usage,exception,if,is,check,write,operations,session,factory,utils,get,flush,mode,session,less,than,flush,mode,commit,throw,new,invalid,data,access,api,usage,exception,write,operations,are,not,allowed,in,read,only,mode,flush,mode,manual,turn,your,session,into,flush,mode,commit,auto,or,remove,read,only,marker,from,transaction,definition
HibernateTemplate -> protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException;1473503884;Check whether write operations are allowed on the given Session._<p>Default implementation throws an InvalidDataAccessApiUsageException in_case of {@code FlushMode.MANUAL}. Can be overridden in subclasses._@param session current Hibernate Session_@throws InvalidDataAccessApiUsageException if write operations are not allowed_@see #setCheckWriteOperations_@see Session#getFlushMode()_@see FlushMode#MANUAL;protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException {_		if (isCheckWriteOperations() && SessionFactoryUtils.getFlushMode(session).lessThan(FlushMode.COMMIT)) {_			throw new InvalidDataAccessApiUsageException(_					"Write operations are not allowed in read-only mode (FlushMode.MANUAL): "+_					"Turn your Session into FlushMode.COMMIT/AUTO or remove 'readOnly' marker from transaction definition.")__		}_	};check,whether,write,operations,are,allowed,on,the,given,session,p,default,implementation,throws,an,invalid,data,access,api,usage,exception,in,case,of,code,flush,mode,manual,can,be,overridden,in,subclasses,param,session,current,hibernate,session,throws,invalid,data,access,api,usage,exception,if,write,operations,are,not,allowed,see,set,check,write,operations,see,session,get,flush,mode,see,flush,mode,manual;protected,void,check,write,operation,allowed,session,session,throws,invalid,data,access,api,usage,exception,if,is,check,write,operations,session,factory,utils,get,flush,mode,session,less,than,flush,mode,commit,throw,new,invalid,data,access,api,usage,exception,write,operations,are,not,allowed,in,read,only,mode,flush,mode,manual,turn,your,session,into,flush,mode,commit,auto,or,remove,read,only,marker,from,transaction,definition
HibernateTemplate -> protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException;1495868221;Check whether write operations are allowed on the given Session._<p>Default implementation throws an InvalidDataAccessApiUsageException in_case of {@code FlushMode.MANUAL}. Can be overridden in subclasses._@param session current Hibernate Session_@throws InvalidDataAccessApiUsageException if write operations are not allowed_@see #setCheckWriteOperations_@see Session#getFlushMode()_@see FlushMode#MANUAL;protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException {_		if (isCheckWriteOperations() && SessionFactoryUtils.getFlushMode(session).lessThan(FlushMode.COMMIT)) {_			throw new InvalidDataAccessApiUsageException(_					"Write operations are not allowed in read-only mode (FlushMode.MANUAL): "+_					"Turn your Session into FlushMode.COMMIT/AUTO or remove 'readOnly' marker from transaction definition.")__		}_	};check,whether,write,operations,are,allowed,on,the,given,session,p,default,implementation,throws,an,invalid,data,access,api,usage,exception,in,case,of,code,flush,mode,manual,can,be,overridden,in,subclasses,param,session,current,hibernate,session,throws,invalid,data,access,api,usage,exception,if,write,operations,are,not,allowed,see,set,check,write,operations,see,session,get,flush,mode,see,flush,mode,manual;protected,void,check,write,operation,allowed,session,session,throws,invalid,data,access,api,usage,exception,if,is,check,write,operations,session,factory,utils,get,flush,mode,session,less,than,flush,mode,commit,throw,new,invalid,data,access,api,usage,exception,write,operations,are,not,allowed,in,read,only,mode,flush,mode,manual,turn,your,session,into,flush,mode,commit,auto,or,remove,read,only,marker,from,transaction,definition
HibernateTemplate -> protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException;1496259743;Check whether write operations are allowed on the given Session._<p>Default implementation throws an InvalidDataAccessApiUsageException in_case of {@code FlushMode.MANUAL}. Can be overridden in subclasses._@param session current Hibernate Session_@throws InvalidDataAccessApiUsageException if write operations are not allowed_@see #setCheckWriteOperations_@see Session#getFlushMode()_@see FlushMode#MANUAL;protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException {_		if (isCheckWriteOperations() && SessionFactoryUtils.getFlushMode(session).lessThan(FlushMode.COMMIT)) {_			throw new InvalidDataAccessApiUsageException(_					"Write operations are not allowed in read-only mode (FlushMode.MANUAL): "+_					"Turn your Session into FlushMode.COMMIT/AUTO or remove 'readOnly' marker from transaction definition.")__		}_	};check,whether,write,operations,are,allowed,on,the,given,session,p,default,implementation,throws,an,invalid,data,access,api,usage,exception,in,case,of,code,flush,mode,manual,can,be,overridden,in,subclasses,param,session,current,hibernate,session,throws,invalid,data,access,api,usage,exception,if,write,operations,are,not,allowed,see,set,check,write,operations,see,session,get,flush,mode,see,flush,mode,manual;protected,void,check,write,operation,allowed,session,session,throws,invalid,data,access,api,usage,exception,if,is,check,write,operations,session,factory,utils,get,flush,mode,session,less,than,flush,mode,commit,throw,new,invalid,data,access,api,usage,exception,write,operations,are,not,allowed,in,read,only,mode,flush,mode,manual,turn,your,session,into,flush,mode,commit,auto,or,remove,read,only,marker,from,transaction,definition
HibernateTemplate -> protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException;1496837955;Check whether write operations are allowed on the given Session._<p>Default implementation throws an InvalidDataAccessApiUsageException in_case of {@code FlushMode.MANUAL}. Can be overridden in subclasses._@param session current Hibernate Session_@throws InvalidDataAccessApiUsageException if write operations are not allowed_@see #setCheckWriteOperations_@see Session#getFlushMode()_@see FlushMode#MANUAL;protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException {_		if (isCheckWriteOperations() && SessionFactoryUtils.getFlushMode(session).lessThan(FlushMode.COMMIT)) {_			throw new InvalidDataAccessApiUsageException(_					"Write operations are not allowed in read-only mode (FlushMode.MANUAL): "+_					"Turn your Session into FlushMode.COMMIT/AUTO or remove 'readOnly' marker from transaction definition.")__		}_	};check,whether,write,operations,are,allowed,on,the,given,session,p,default,implementation,throws,an,invalid,data,access,api,usage,exception,in,case,of,code,flush,mode,manual,can,be,overridden,in,subclasses,param,session,current,hibernate,session,throws,invalid,data,access,api,usage,exception,if,write,operations,are,not,allowed,see,set,check,write,operations,see,session,get,flush,mode,see,flush,mode,manual;protected,void,check,write,operation,allowed,session,session,throws,invalid,data,access,api,usage,exception,if,is,check,write,operations,session,factory,utils,get,flush,mode,session,less,than,flush,mode,commit,throw,new,invalid,data,access,api,usage,exception,write,operations,are,not,allowed,in,read,only,mode,flush,mode,manual,turn,your,session,into,flush,mode,commit,auto,or,remove,read,only,marker,from,transaction,definition
HibernateTemplate -> protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException;1500448076;Check whether write operations are allowed on the given Session._<p>Default implementation throws an InvalidDataAccessApiUsageException in_case of {@code FlushMode.MANUAL}. Can be overridden in subclasses._@param session current Hibernate Session_@throws InvalidDataAccessApiUsageException if write operations are not allowed_@see #setCheckWriteOperations_@see Session#getFlushMode()_@see FlushMode#MANUAL;protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException {_		if (isCheckWriteOperations() && SessionFactoryUtils.getFlushMode(session).lessThan(FlushMode.COMMIT)) {_			throw new InvalidDataAccessApiUsageException(_					"Write operations are not allowed in read-only mode (FlushMode.MANUAL): "+_					"Turn your Session into FlushMode.COMMIT/AUTO or remove 'readOnly' marker from transaction definition.")__		}_	};check,whether,write,operations,are,allowed,on,the,given,session,p,default,implementation,throws,an,invalid,data,access,api,usage,exception,in,case,of,code,flush,mode,manual,can,be,overridden,in,subclasses,param,session,current,hibernate,session,throws,invalid,data,access,api,usage,exception,if,write,operations,are,not,allowed,see,set,check,write,operations,see,session,get,flush,mode,see,flush,mode,manual;protected,void,check,write,operation,allowed,session,session,throws,invalid,data,access,api,usage,exception,if,is,check,write,operations,session,factory,utils,get,flush,mode,session,less,than,flush,mode,commit,throw,new,invalid,data,access,api,usage,exception,write,operations,are,not,allowed,in,read,only,mode,flush,mode,manual,turn,your,session,into,flush,mode,commit,auto,or,remove,read,only,marker,from,transaction,definition
HibernateTemplate -> protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException;1502974979;Check whether write operations are allowed on the given Session._<p>Default implementation throws an InvalidDataAccessApiUsageException in_case of {@code FlushMode.MANUAL}. Can be overridden in subclasses._@param session current Hibernate Session_@throws InvalidDataAccessApiUsageException if write operations are not allowed_@see #setCheckWriteOperations_@see Session#getFlushMode()_@see FlushMode#MANUAL;protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException {_		if (isCheckWriteOperations() && SessionFactoryUtils.getFlushMode(session).lessThan(FlushMode.COMMIT)) {_			throw new InvalidDataAccessApiUsageException(_					"Write operations are not allowed in read-only mode (FlushMode.MANUAL): "+_					"Turn your Session into FlushMode.COMMIT/AUTO or remove 'readOnly' marker from transaction definition.")__		}_	};check,whether,write,operations,are,allowed,on,the,given,session,p,default,implementation,throws,an,invalid,data,access,api,usage,exception,in,case,of,code,flush,mode,manual,can,be,overridden,in,subclasses,param,session,current,hibernate,session,throws,invalid,data,access,api,usage,exception,if,write,operations,are,not,allowed,see,set,check,write,operations,see,session,get,flush,mode,see,flush,mode,manual;protected,void,check,write,operation,allowed,session,session,throws,invalid,data,access,api,usage,exception,if,is,check,write,operations,session,factory,utils,get,flush,mode,session,less,than,flush,mode,commit,throw,new,invalid,data,access,api,usage,exception,write,operations,are,not,allowed,in,read,only,mode,flush,mode,manual,turn,your,session,into,flush,mode,commit,auto,or,remove,read,only,marker,from,transaction,definition
HibernateTemplate -> protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException;1517247608;Check whether write operations are allowed on the given Session._<p>Default implementation throws an InvalidDataAccessApiUsageException in_case of {@code FlushMode.MANUAL}. Can be overridden in subclasses._@param session current Hibernate Session_@throws InvalidDataAccessApiUsageException if write operations are not allowed_@see #setCheckWriteOperations_@see Session#getFlushMode()_@see FlushMode#MANUAL;protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException {_		if (isCheckWriteOperations() && SessionFactoryUtils.getFlushMode(session).lessThan(FlushMode.COMMIT)) {_			throw new InvalidDataAccessApiUsageException(_					"Write operations are not allowed in read-only mode (FlushMode.MANUAL): "+_					"Turn your Session into FlushMode.COMMIT/AUTO or remove 'readOnly' marker from transaction definition.")__		}_	};check,whether,write,operations,are,allowed,on,the,given,session,p,default,implementation,throws,an,invalid,data,access,api,usage,exception,in,case,of,code,flush,mode,manual,can,be,overridden,in,subclasses,param,session,current,hibernate,session,throws,invalid,data,access,api,usage,exception,if,write,operations,are,not,allowed,see,set,check,write,operations,see,session,get,flush,mode,see,flush,mode,manual;protected,void,check,write,operation,allowed,session,session,throws,invalid,data,access,api,usage,exception,if,is,check,write,operations,session,factory,utils,get,flush,mode,session,less,than,flush,mode,commit,throw,new,invalid,data,access,api,usage,exception,write,operations,are,not,allowed,in,read,only,mode,flush,mode,manual,turn,your,session,into,flush,mode,commit,auto,or,remove,read,only,marker,from,transaction,definition
HibernateTemplate -> protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException;1519944186;Check whether write operations are allowed on the given Session._<p>Default implementation throws an InvalidDataAccessApiUsageException in_case of {@code FlushMode.MANUAL}. Can be overridden in subclasses._@param session current Hibernate Session_@throws InvalidDataAccessApiUsageException if write operations are not allowed_@see #setCheckWriteOperations_@see Session#getFlushMode()_@see FlushMode#MANUAL;protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException {_		if (isCheckWriteOperations() && SessionFactoryUtils.getFlushMode(session).lessThan(FlushMode.COMMIT)) {_			throw new InvalidDataAccessApiUsageException(_					"Write operations are not allowed in read-only mode (FlushMode.MANUAL): "+_					"Turn your Session into FlushMode.COMMIT/AUTO or remove 'readOnly' marker from transaction definition.")__		}_	};check,whether,write,operations,are,allowed,on,the,given,session,p,default,implementation,throws,an,invalid,data,access,api,usage,exception,in,case,of,code,flush,mode,manual,can,be,overridden,in,subclasses,param,session,current,hibernate,session,throws,invalid,data,access,api,usage,exception,if,write,operations,are,not,allowed,see,set,check,write,operations,see,session,get,flush,mode,see,flush,mode,manual;protected,void,check,write,operation,allowed,session,session,throws,invalid,data,access,api,usage,exception,if,is,check,write,operations,session,factory,utils,get,flush,mode,session,less,than,flush,mode,commit,throw,new,invalid,data,access,api,usage,exception,write,operations,are,not,allowed,in,read,only,mode,flush,mode,manual,turn,your,session,into,flush,mode,commit,auto,or,remove,read,only,marker,from,transaction,definition
HibernateTemplate -> protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException;1519995197;Check whether write operations are allowed on the given Session._<p>Default implementation throws an InvalidDataAccessApiUsageException in_case of {@code FlushMode.MANUAL}. Can be overridden in subclasses._@param session current Hibernate Session_@throws InvalidDataAccessApiUsageException if write operations are not allowed_@see #setCheckWriteOperations_@see Session#getFlushMode()_@see FlushMode#MANUAL;protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException {_		if (isCheckWriteOperations() && SessionFactoryUtils.getFlushMode(session).lessThan(FlushMode.COMMIT)) {_			throw new InvalidDataAccessApiUsageException(_					"Write operations are not allowed in read-only mode (FlushMode.MANUAL): "+_					"Turn your Session into FlushMode.COMMIT/AUTO or remove 'readOnly' marker from transaction definition.")__		}_	};check,whether,write,operations,are,allowed,on,the,given,session,p,default,implementation,throws,an,invalid,data,access,api,usage,exception,in,case,of,code,flush,mode,manual,can,be,overridden,in,subclasses,param,session,current,hibernate,session,throws,invalid,data,access,api,usage,exception,if,write,operations,are,not,allowed,see,set,check,write,operations,see,session,get,flush,mode,see,flush,mode,manual;protected,void,check,write,operation,allowed,session,session,throws,invalid,data,access,api,usage,exception,if,is,check,write,operations,session,factory,utils,get,flush,mode,session,less,than,flush,mode,commit,throw,new,invalid,data,access,api,usage,exception,write,operations,are,not,allowed,in,read,only,mode,flush,mode,manual,turn,your,session,into,flush,mode,commit,auto,or,remove,read,only,marker,from,transaction,definition
HibernateTemplate -> protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException;1530174524;Check whether write operations are allowed on the given Session._<p>Default implementation throws an InvalidDataAccessApiUsageException in_case of {@code FlushMode.MANUAL}. Can be overridden in subclasses._@param session current Hibernate Session_@throws InvalidDataAccessApiUsageException if write operations are not allowed_@see #setCheckWriteOperations_@see Session#getFlushMode()_@see FlushMode#MANUAL;protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException {_		if (isCheckWriteOperations() && SessionFactoryUtils.getFlushMode(session).lessThan(FlushMode.COMMIT)) {_			throw new InvalidDataAccessApiUsageException(_					"Write operations are not allowed in read-only mode (FlushMode.MANUAL): "+_					"Turn your Session into FlushMode.COMMIT/AUTO or remove 'readOnly' marker from transaction definition.")__		}_	};check,whether,write,operations,are,allowed,on,the,given,session,p,default,implementation,throws,an,invalid,data,access,api,usage,exception,in,case,of,code,flush,mode,manual,can,be,overridden,in,subclasses,param,session,current,hibernate,session,throws,invalid,data,access,api,usage,exception,if,write,operations,are,not,allowed,see,set,check,write,operations,see,session,get,flush,mode,see,flush,mode,manual;protected,void,check,write,operation,allowed,session,session,throws,invalid,data,access,api,usage,exception,if,is,check,write,operations,session,factory,utils,get,flush,mode,session,less,than,flush,mode,commit,throw,new,invalid,data,access,api,usage,exception,write,operations,are,not,allowed,in,read,only,mode,flush,mode,manual,turn,your,session,into,flush,mode,commit,auto,or,remove,read,only,marker,from,transaction,definition
HibernateTemplate -> protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException;1530709629;Check whether write operations are allowed on the given Session._<p>Default implementation throws an InvalidDataAccessApiUsageException in_case of {@code FlushMode.MANUAL}. Can be overridden in subclasses._@param session current Hibernate Session_@throws InvalidDataAccessApiUsageException if write operations are not allowed_@see #setCheckWriteOperations_@see Session#getFlushMode()_@see FlushMode#MANUAL;protected void checkWriteOperationAllowed(Session session) throws InvalidDataAccessApiUsageException {_		if (isCheckWriteOperations() && SessionFactoryUtils.getFlushMode(session).lessThan(FlushMode.COMMIT)) {_			throw new InvalidDataAccessApiUsageException(_					"Write operations are not allowed in read-only mode (FlushMode.MANUAL): "+_					"Turn your Session into FlushMode.COMMIT/AUTO or remove 'readOnly' marker from transaction definition.")__		}_	};check,whether,write,operations,are,allowed,on,the,given,session,p,default,implementation,throws,an,invalid,data,access,api,usage,exception,in,case,of,code,flush,mode,manual,can,be,overridden,in,subclasses,param,session,current,hibernate,session,throws,invalid,data,access,api,usage,exception,if,write,operations,are,not,allowed,see,set,check,write,operations,see,session,get,flush,mode,see,flush,mode,manual;protected,void,check,write,operation,allowed,session,session,throws,invalid,data,access,api,usage,exception,if,is,check,write,operations,session,factory,utils,get,flush,mode,session,less,than,flush,mode,commit,throw,new,invalid,data,access,api,usage,exception,write,operations,are,not,allowed,in,read,only,mode,flush,mode,manual,turn,your,session,into,flush,mode,commit,auto,or,remove,read,only,marker,from,transaction,definition
