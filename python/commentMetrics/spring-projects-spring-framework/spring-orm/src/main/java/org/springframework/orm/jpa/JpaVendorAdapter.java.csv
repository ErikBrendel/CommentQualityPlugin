# id;timestamp;commentText;codeText;commentWords;codeWords
JpaVendorAdapter -> Class<? extends EntityManager> getEntityManagerInterface()_;1328020251;Return the vendor-specific EntityManager interface_that this provider's EntityManagers will implement._<p>If the provider does not offer any EntityManager extensions,_the adapter should simply return the standard_{@link javax.persistence.EntityManager} class here.;Class<? extends EntityManager> getEntityManagerInterface()_;return,the,vendor,specific,entity,manager,interface,that,this,provider,s,entity,managers,will,implement,p,if,the,provider,does,not,offer,any,entity,manager,extensions,the,adapter,should,simply,return,the,standard,link,javax,persistence,entity,manager,class,here;class,extends,entity,manager,get,entity,manager,interface
JpaVendorAdapter -> Class<? extends EntityManager> getEntityManagerInterface()_;1356735495;Return the vendor-specific EntityManager interface_that this provider's EntityManagers will implement._<p>If the provider does not offer any EntityManager extensions,_the adapter should simply return the standard_{@link javax.persistence.EntityManager} class here.;Class<? extends EntityManager> getEntityManagerInterface()_;return,the,vendor,specific,entity,manager,interface,that,this,provider,s,entity,managers,will,implement,p,if,the,provider,does,not,offer,any,entity,manager,extensions,the,adapter,should,simply,return,the,standard,link,javax,persistence,entity,manager,class,here;class,extends,entity,manager,get,entity,manager,interface
JpaVendorAdapter -> Class<? extends EntityManager> getEntityManagerInterface()_;1413848647;Return the vendor-specific EntityManager interface_that this provider's EntityManagers will implement._<p>If the provider does not offer any EntityManager extensions,_the adapter should simply return the standard_{@link javax.persistence.EntityManager} class here.;Class<? extends EntityManager> getEntityManagerInterface()_;return,the,vendor,specific,entity,manager,interface,that,this,provider,s,entity,managers,will,implement,p,if,the,provider,does,not,offer,any,entity,manager,extensions,the,adapter,should,simply,return,the,standard,link,javax,persistence,entity,manager,class,here;class,extends,entity,manager,get,entity,manager,interface
JpaVendorAdapter -> Class<? extends EntityManager> getEntityManagerInterface()_;1461047077;Return the vendor-specific EntityManager interface_that this provider's EntityManagers will implement._<p>If the provider does not offer any EntityManager extensions,_the adapter should simply return the standard_{@link javax.persistence.EntityManager} class here.;Class<? extends EntityManager> getEntityManagerInterface()_;return,the,vendor,specific,entity,manager,interface,that,this,provider,s,entity,managers,will,implement,p,if,the,provider,does,not,offer,any,entity,manager,extensions,the,adapter,should,simply,return,the,standard,link,javax,persistence,entity,manager,class,here;class,extends,entity,manager,get,entity,manager,interface
JpaVendorAdapter -> Class<? extends EntityManager> getEntityManagerInterface()_;1495868221;Return the vendor-specific EntityManager interface_that this provider's EntityManagers will implement._<p>If the provider does not offer any EntityManager extensions,_the adapter should simply return the standard_{@link javax.persistence.EntityManager} class here.;Class<? extends EntityManager> getEntityManagerInterface()_;return,the,vendor,specific,entity,manager,interface,that,this,provider,s,entity,managers,will,implement,p,if,the,provider,does,not,offer,any,entity,manager,extensions,the,adapter,should,simply,return,the,standard,link,javax,persistence,entity,manager,class,here;class,extends,entity,manager,get,entity,manager,interface
JpaVendorAdapter -> PersistenceProvider getPersistenceProvider()_;1328020251;Return the vendor-specific persistence provider.;PersistenceProvider getPersistenceProvider()_;return,the,vendor,specific,persistence,provider;persistence,provider,get,persistence,provider
JpaVendorAdapter -> PersistenceProvider getPersistenceProvider()_;1356735495;Return the vendor-specific persistence provider.;PersistenceProvider getPersistenceProvider()_;return,the,vendor,specific,persistence,provider;persistence,provider,get,persistence,provider
JpaVendorAdapter -> PersistenceProvider getPersistenceProvider()_;1413848647;Return the vendor-specific persistence provider.;PersistenceProvider getPersistenceProvider()_;return,the,vendor,specific,persistence,provider;persistence,provider,get,persistence,provider
JpaVendorAdapter -> PersistenceProvider getPersistenceProvider()_;1461047077;Return the vendor-specific persistence provider.;PersistenceProvider getPersistenceProvider()_;return,the,vendor,specific,persistence,provider;persistence,provider,get,persistence,provider
JpaVendorAdapter -> PersistenceProvider getPersistenceProvider()_;1495868221;Return the vendor-specific persistence provider.;PersistenceProvider getPersistenceProvider()_;return,the,vendor,specific,persistence,provider;persistence,provider,get,persistence,provider
JpaVendorAdapter -> PersistenceProvider getPersistenceProvider()_;1510341663;Return the vendor-specific persistence provider.;PersistenceProvider getPersistenceProvider()_;return,the,vendor,specific,persistence,provider;persistence,provider,get,persistence,provider
JpaVendorAdapter -> PersistenceProvider getPersistenceProvider()_;1510422223;Return the vendor-specific persistence provider.;PersistenceProvider getPersistenceProvider()_;return,the,vendor,specific,persistence,provider;persistence,provider,get,persistence,provider
JpaVendorAdapter -> JpaDialect getJpaDialect()_;1328020251;Return the vendor-specific JpaDialect implementation for this_provider, or <code>null</code> if there is none.;JpaDialect getJpaDialect()_;return,the,vendor,specific,jpa,dialect,implementation,for,this,provider,or,code,null,code,if,there,is,none;jpa,dialect,get,jpa,dialect
JpaVendorAdapter -> JpaDialect getJpaDialect()_;1356735495;Return the vendor-specific JpaDialect implementation for this_provider, or {@code null} if there is none.;JpaDialect getJpaDialect()_;return,the,vendor,specific,jpa,dialect,implementation,for,this,provider,or,code,null,if,there,is,none;jpa,dialect,get,jpa,dialect
JpaVendorAdapter -> JpaDialect getJpaDialect()_;1413848647;Return the vendor-specific JpaDialect implementation for this_provider, or {@code null} if there is none.;JpaDialect getJpaDialect()_;return,the,vendor,specific,jpa,dialect,implementation,for,this,provider,or,code,null,if,there,is,none;jpa,dialect,get,jpa,dialect
JpaVendorAdapter -> JpaDialect getJpaDialect()_;1461047077;Return the vendor-specific JpaDialect implementation for this_provider, or {@code null} if there is none.;JpaDialect getJpaDialect()_;return,the,vendor,specific,jpa,dialect,implementation,for,this,provider,or,code,null,if,there,is,none;jpa,dialect,get,jpa,dialect
JpaVendorAdapter -> default Class<? extends EntityManagerFactory> getEntityManagerFactoryInterface();1510341663;Return the vendor-specific EntityManagerFactory interface_that the EntityManagerFactory proxy is supposed to implement._<p>If the provider does not offer any EntityManagerFactory extensions,_the adapter should simply return the standard_{@link javax.persistence.EntityManagerFactory} class here._@since 2.5.2;default Class<? extends EntityManagerFactory> getEntityManagerFactoryInterface() {_		return EntityManagerFactory.class__	};return,the,vendor,specific,entity,manager,factory,interface,that,the,entity,manager,factory,proxy,is,supposed,to,implement,p,if,the,provider,does,not,offer,any,entity,manager,factory,extensions,the,adapter,should,simply,return,the,standard,link,javax,persistence,entity,manager,factory,class,here,since,2,5,2;default,class,extends,entity,manager,factory,get,entity,manager,factory,interface,return,entity,manager,factory,class
JpaVendorAdapter -> default Class<? extends EntityManagerFactory> getEntityManagerFactoryInterface();1510422223;Return the vendor-specific EntityManagerFactory interface_that the EntityManagerFactory proxy is supposed to implement._<p>If the provider does not offer any EntityManagerFactory extensions,_the adapter should simply return the standard_{@link javax.persistence.EntityManagerFactory} class here._@since 2.5.2;default Class<? extends EntityManagerFactory> getEntityManagerFactoryInterface() {_		return EntityManagerFactory.class__	};return,the,vendor,specific,entity,manager,factory,interface,that,the,entity,manager,factory,proxy,is,supposed,to,implement,p,if,the,provider,does,not,offer,any,entity,manager,factory,extensions,the,adapter,should,simply,return,the,standard,link,javax,persistence,entity,manager,factory,class,here,since,2,5,2;default,class,extends,entity,manager,factory,get,entity,manager,factory,interface,return,entity,manager,factory,class
JpaVendorAdapter -> void postProcessEntityManagerFactory(EntityManagerFactory emf)_;1328020251;Optional callback for post-processing the native EntityManagerFactory_before active use._<p>This can be used for triggering vendor-specific initialization processes._While this is not expected to be used for most providers, it is included_here as a general extension hook.;void postProcessEntityManagerFactory(EntityManagerFactory emf)_;optional,callback,for,post,processing,the,native,entity,manager,factory,before,active,use,p,this,can,be,used,for,triggering,vendor,specific,initialization,processes,while,this,is,not,expected,to,be,used,for,most,providers,it,is,included,here,as,a,general,extension,hook;void,post,process,entity,manager,factory,entity,manager,factory,emf
JpaVendorAdapter -> void postProcessEntityManagerFactory(EntityManagerFactory emf)_;1356735495;Optional callback for post-processing the native EntityManagerFactory_before active use._<p>This can be used for triggering vendor-specific initialization processes._While this is not expected to be used for most providers, it is included_here as a general extension hook.;void postProcessEntityManagerFactory(EntityManagerFactory emf)_;optional,callback,for,post,processing,the,native,entity,manager,factory,before,active,use,p,this,can,be,used,for,triggering,vendor,specific,initialization,processes,while,this,is,not,expected,to,be,used,for,most,providers,it,is,included,here,as,a,general,extension,hook;void,post,process,entity,manager,factory,entity,manager,factory,emf
JpaVendorAdapter -> void postProcessEntityManagerFactory(EntityManagerFactory emf)_;1413848647;Optional callback for post-processing the native EntityManagerFactory_before active use._<p>This can be used for triggering vendor-specific initialization processes._While this is not expected to be used for most providers, it is included_here as a general extension hook.;void postProcessEntityManagerFactory(EntityManagerFactory emf)_;optional,callback,for,post,processing,the,native,entity,manager,factory,before,active,use,p,this,can,be,used,for,triggering,vendor,specific,initialization,processes,while,this,is,not,expected,to,be,used,for,most,providers,it,is,included,here,as,a,general,extension,hook;void,post,process,entity,manager,factory,entity,manager,factory,emf
JpaVendorAdapter -> void postProcessEntityManagerFactory(EntityManagerFactory emf)_;1461047077;Optional callback for post-processing the native EntityManagerFactory_before active use._<p>This can be used for triggering vendor-specific initialization processes._While this is not expected to be used for most providers, it is included_here as a general extension hook.;void postProcessEntityManagerFactory(EntityManagerFactory emf)_;optional,callback,for,post,processing,the,native,entity,manager,factory,before,active,use,p,this,can,be,used,for,triggering,vendor,specific,initialization,processes,while,this,is,not,expected,to,be,used,for,most,providers,it,is,included,here,as,a,general,extension,hook;void,post,process,entity,manager,factory,entity,manager,factory,emf
JpaVendorAdapter -> void postProcessEntityManagerFactory(EntityManagerFactory emf)_;1495868221;Optional callback for post-processing the native EntityManagerFactory_before active use._<p>This can be used for triggering vendor-specific initialization processes._While this is not expected to be used for most providers, it is included_here as a general extension hook.;void postProcessEntityManagerFactory(EntityManagerFactory emf)_;optional,callback,for,post,processing,the,native,entity,manager,factory,before,active,use,p,this,can,be,used,for,triggering,vendor,specific,initialization,processes,while,this,is,not,expected,to,be,used,for,most,providers,it,is,included,here,as,a,general,extension,hook;void,post,process,entity,manager,factory,entity,manager,factory,emf
JpaVendorAdapter -> Class<? extends EntityManagerFactory> getEntityManagerFactoryInterface()_;1328020251;Return the vendor-specific EntityManagerFactory interface_that the EntityManagerFactory proxy is supposed to implement._<p>If the provider does not offer any EntityManagerFactory extensions,_the adapter should simply return the standard_{@link javax.persistence.EntityManagerFactory} class here._@since 2.5.2;Class<? extends EntityManagerFactory> getEntityManagerFactoryInterface()_;return,the,vendor,specific,entity,manager,factory,interface,that,the,entity,manager,factory,proxy,is,supposed,to,implement,p,if,the,provider,does,not,offer,any,entity,manager,factory,extensions,the,adapter,should,simply,return,the,standard,link,javax,persistence,entity,manager,factory,class,here,since,2,5,2;class,extends,entity,manager,factory,get,entity,manager,factory,interface
JpaVendorAdapter -> Class<? extends EntityManagerFactory> getEntityManagerFactoryInterface()_;1356735495;Return the vendor-specific EntityManagerFactory interface_that the EntityManagerFactory proxy is supposed to implement._<p>If the provider does not offer any EntityManagerFactory extensions,_the adapter should simply return the standard_{@link javax.persistence.EntityManagerFactory} class here._@since 2.5.2;Class<? extends EntityManagerFactory> getEntityManagerFactoryInterface()_;return,the,vendor,specific,entity,manager,factory,interface,that,the,entity,manager,factory,proxy,is,supposed,to,implement,p,if,the,provider,does,not,offer,any,entity,manager,factory,extensions,the,adapter,should,simply,return,the,standard,link,javax,persistence,entity,manager,factory,class,here,since,2,5,2;class,extends,entity,manager,factory,get,entity,manager,factory,interface
JpaVendorAdapter -> Class<? extends EntityManagerFactory> getEntityManagerFactoryInterface()_;1413848647;Return the vendor-specific EntityManagerFactory interface_that the EntityManagerFactory proxy is supposed to implement._<p>If the provider does not offer any EntityManagerFactory extensions,_the adapter should simply return the standard_{@link javax.persistence.EntityManagerFactory} class here._@since 2.5.2;Class<? extends EntityManagerFactory> getEntityManagerFactoryInterface()_;return,the,vendor,specific,entity,manager,factory,interface,that,the,entity,manager,factory,proxy,is,supposed,to,implement,p,if,the,provider,does,not,offer,any,entity,manager,factory,extensions,the,adapter,should,simply,return,the,standard,link,javax,persistence,entity,manager,factory,class,here,since,2,5,2;class,extends,entity,manager,factory,get,entity,manager,factory,interface
JpaVendorAdapter -> Class<? extends EntityManagerFactory> getEntityManagerFactoryInterface()_;1461047077;Return the vendor-specific EntityManagerFactory interface_that the EntityManagerFactory proxy is supposed to implement._<p>If the provider does not offer any EntityManagerFactory extensions,_the adapter should simply return the standard_{@link javax.persistence.EntityManagerFactory} class here._@since 2.5.2;Class<? extends EntityManagerFactory> getEntityManagerFactoryInterface()_;return,the,vendor,specific,entity,manager,factory,interface,that,the,entity,manager,factory,proxy,is,supposed,to,implement,p,if,the,provider,does,not,offer,any,entity,manager,factory,extensions,the,adapter,should,simply,return,the,standard,link,javax,persistence,entity,manager,factory,class,here,since,2,5,2;class,extends,entity,manager,factory,get,entity,manager,factory,interface
JpaVendorAdapter -> Class<? extends EntityManagerFactory> getEntityManagerFactoryInterface()_;1495868221;Return the vendor-specific EntityManagerFactory interface_that the EntityManagerFactory proxy is supposed to implement._<p>If the provider does not offer any EntityManagerFactory extensions,_the adapter should simply return the standard_{@link javax.persistence.EntityManagerFactory} class here._@since 2.5.2;Class<? extends EntityManagerFactory> getEntityManagerFactoryInterface()_;return,the,vendor,specific,entity,manager,factory,interface,that,the,entity,manager,factory,proxy,is,supposed,to,implement,p,if,the,provider,does,not,offer,any,entity,manager,factory,extensions,the,adapter,should,simply,return,the,standard,link,javax,persistence,entity,manager,factory,class,here,since,2,5,2;class,extends,entity,manager,factory,get,entity,manager,factory,interface
JpaVendorAdapter -> @Nullable 	default JpaDialect getJpaDialect();1510341663;Return the vendor-specific JpaDialect implementation for this_provider, or {@code null} if there is none.;@Nullable_	default JpaDialect getJpaDialect() {_		return null__	};return,the,vendor,specific,jpa,dialect,implementation,for,this,provider,or,code,null,if,there,is,none;nullable,default,jpa,dialect,get,jpa,dialect,return,null
JpaVendorAdapter -> @Nullable 	default JpaDialect getJpaDialect();1510422223;Return the vendor-specific JpaDialect implementation for this_provider, or {@code null} if there is none.;@Nullable_	default JpaDialect getJpaDialect() {_		return null__	};return,the,vendor,specific,jpa,dialect,implementation,for,this,provider,or,code,null,if,there,is,none;nullable,default,jpa,dialect,get,jpa,dialect,return,null
JpaVendorAdapter -> default Class<? extends EntityManager> getEntityManagerInterface();1510341663;Return the vendor-specific EntityManager interface_that this provider's EntityManagers will implement._<p>If the provider does not offer any EntityManager extensions,_the adapter should simply return the standard_{@link javax.persistence.EntityManager} class here.;default Class<? extends EntityManager> getEntityManagerInterface() {_		return EntityManager.class__	};return,the,vendor,specific,entity,manager,interface,that,this,provider,s,entity,managers,will,implement,p,if,the,provider,does,not,offer,any,entity,manager,extensions,the,adapter,should,simply,return,the,standard,link,javax,persistence,entity,manager,class,here;default,class,extends,entity,manager,get,entity,manager,interface,return,entity,manager,class
JpaVendorAdapter -> default Class<? extends EntityManager> getEntityManagerInterface();1510422223;Return the vendor-specific EntityManager interface_that this provider's EntityManagers will implement._<p>If the provider does not offer any EntityManager extensions,_the adapter should simply return the standard_{@link javax.persistence.EntityManager} class here.;default Class<? extends EntityManager> getEntityManagerInterface() {_		return EntityManager.class__	};return,the,vendor,specific,entity,manager,interface,that,this,provider,s,entity,managers,will,implement,p,if,the,provider,does,not,offer,any,entity,manager,extensions,the,adapter,should,simply,return,the,standard,link,javax,persistence,entity,manager,class,here;default,class,extends,entity,manager,get,entity,manager,interface,return,entity,manager,class
JpaVendorAdapter -> default Map<String, ?> getJpaPropertyMap();1510341663;Return a Map of vendor-specific JPA properties,_typically based on settings in this JpaVendorAdapter instance._<p>Note that there might be further JPA properties defined on the_EntityManagerFactory bean, which might potentially override individual_JPA property values specified here._@return a Map of JPA properties, as accepted by the standard JPA bootstrap_facilities, or an empty Map if there are no properties to expose_@see javax.persistence.Persistence#createEntityManagerFactory(String, Map);default Map<String, ?> getJpaPropertyMap() {_		return Collections.emptyMap()__	};return,a,map,of,vendor,specific,jpa,properties,typically,based,on,settings,in,this,jpa,vendor,adapter,instance,p,note,that,there,might,be,further,jpa,properties,defined,on,the,entity,manager,factory,bean,which,might,potentially,override,individual,jpa,property,values,specified,here,return,a,map,of,jpa,properties,as,accepted,by,the,standard,jpa,bootstrap,facilities,or,an,empty,map,if,there,are,no,properties,to,expose,see,javax,persistence,persistence,create,entity,manager,factory,string,map;default,map,string,get,jpa,property,map,return,collections,empty,map
JpaVendorAdapter -> default Map<String, ?> getJpaPropertyMap();1510422223;Return a Map of vendor-specific JPA properties,_typically based on settings in this JpaVendorAdapter instance._<p>Note that there might be further JPA properties defined on the_EntityManagerFactory bean, which might potentially override individual_JPA property values specified here._@return a Map of JPA properties, as accepted by the standard JPA bootstrap_facilities, or an empty Map if there are no properties to expose_@see javax.persistence.Persistence#createEntityManagerFactory(String, Map);default Map<String, ?> getJpaPropertyMap() {_		return Collections.emptyMap()__	};return,a,map,of,vendor,specific,jpa,properties,typically,based,on,settings,in,this,jpa,vendor,adapter,instance,p,note,that,there,might,be,further,jpa,properties,defined,on,the,entity,manager,factory,bean,which,might,potentially,override,individual,jpa,property,values,specified,here,return,a,map,of,jpa,properties,as,accepted,by,the,standard,jpa,bootstrap,facilities,or,an,empty,map,if,there,are,no,properties,to,expose,see,javax,persistence,persistence,create,entity,manager,factory,string,map;default,map,string,get,jpa,property,map,return,collections,empty,map
JpaVendorAdapter -> default Map<String, ?> getJpaPropertyMap(PersistenceUnitInfo pui);1510341663;Return a Map of vendor-specific JPA properties for the given persistence_unit, typically based on settings in this JpaVendorAdapter instance._<p>Note that there might be further JPA properties defined on the_EntityManagerFactory bean, which might potentially override individual_JPA property values specified here._<p>This implementation delegates to {@link #getJpaPropertyMap()} for_non-unit-dependent properties. Effectively, this PersistenceUnitInfo-based_variant only needs to be implemented if there is an actual need to react_to unit-specific characteristics such as the transaction type._@param pui the PersistenceUnitInfo for the current persistence unit_@return a Map of JPA properties, as accepted by the standard JPA bootstrap_facilities, or an empty Map if there are no properties to expose_@since 4.3.13_@see PersistenceUnitInfo#getTransactionType()_@see javax.persistence.spi.PersistenceProvider#createContainerEntityManagerFactory(PersistenceUnitInfo, Map);default Map<String, ?> getJpaPropertyMap(PersistenceUnitInfo pui) {_		return getJpaPropertyMap()__	};return,a,map,of,vendor,specific,jpa,properties,for,the,given,persistence,unit,typically,based,on,settings,in,this,jpa,vendor,adapter,instance,p,note,that,there,might,be,further,jpa,properties,defined,on,the,entity,manager,factory,bean,which,might,potentially,override,individual,jpa,property,values,specified,here,p,this,implementation,delegates,to,link,get,jpa,property,map,for,non,unit,dependent,properties,effectively,this,persistence,unit,info,based,variant,only,needs,to,be,implemented,if,there,is,an,actual,need,to,react,to,unit,specific,characteristics,such,as,the,transaction,type,param,pui,the,persistence,unit,info,for,the,current,persistence,unit,return,a,map,of,jpa,properties,as,accepted,by,the,standard,jpa,bootstrap,facilities,or,an,empty,map,if,there,are,no,properties,to,expose,since,4,3,13,see,persistence,unit,info,get,transaction,type,see,javax,persistence,spi,persistence,provider,create,container,entity,manager,factory,persistence,unit,info,map;default,map,string,get,jpa,property,map,persistence,unit,info,pui,return,get,jpa,property,map
JpaVendorAdapter -> default Map<String, ?> getJpaPropertyMap(PersistenceUnitInfo pui);1510422223;Return a Map of vendor-specific JPA properties for the given persistence_unit, typically based on settings in this JpaVendorAdapter instance._<p>Note that there might be further JPA properties defined on the_EntityManagerFactory bean, which might potentially override individual_JPA property values specified here._<p>This implementation delegates to {@link #getJpaPropertyMap()} for_non-unit-dependent properties. Effectively, this PersistenceUnitInfo-based_variant only needs to be implemented if there is an actual need to react_to unit-specific characteristics such as the transaction type._<p><b>NOTE:</b> This variant will only be invoked in case of Java EE style_container bootstrapping where a {@link PersistenceUnitInfo} is present_(i.e. {@link LocalContainerEntityManagerFactoryBean}. In case of simple_Java SE style bootstrapping via {@link javax.persistence.Persistence}_(i.e. {@link LocalEntityManagerFactoryBean}), the parameter-less_{@link #getJpaPropertyMap()} variant will be called directly._@param pui the PersistenceUnitInfo for the current persistence unit_@return a Map of JPA properties, as accepted by the standard JPA bootstrap_facilities, or an empty Map if there are no properties to expose_@since 4.3.13_@see PersistenceUnitInfo#getTransactionType()_@see javax.persistence.spi.PersistenceProvider#createContainerEntityManagerFactory(PersistenceUnitInfo, Map);default Map<String, ?> getJpaPropertyMap(PersistenceUnitInfo pui) {_		return getJpaPropertyMap()__	};return,a,map,of,vendor,specific,jpa,properties,for,the,given,persistence,unit,typically,based,on,settings,in,this,jpa,vendor,adapter,instance,p,note,that,there,might,be,further,jpa,properties,defined,on,the,entity,manager,factory,bean,which,might,potentially,override,individual,jpa,property,values,specified,here,p,this,implementation,delegates,to,link,get,jpa,property,map,for,non,unit,dependent,properties,effectively,this,persistence,unit,info,based,variant,only,needs,to,be,implemented,if,there,is,an,actual,need,to,react,to,unit,specific,characteristics,such,as,the,transaction,type,p,b,note,b,this,variant,will,only,be,invoked,in,case,of,java,ee,style,container,bootstrapping,where,a,link,persistence,unit,info,is,present,i,e,link,local,container,entity,manager,factory,bean,in,case,of,simple,java,se,style,bootstrapping,via,link,javax,persistence,persistence,i,e,link,local,entity,manager,factory,bean,the,parameter,less,link,get,jpa,property,map,variant,will,be,called,directly,param,pui,the,persistence,unit,info,for,the,current,persistence,unit,return,a,map,of,jpa,properties,as,accepted,by,the,standard,jpa,bootstrap,facilities,or,an,empty,map,if,there,are,no,properties,to,expose,since,4,3,13,see,persistence,unit,info,get,transaction,type,see,javax,persistence,spi,persistence,provider,create,container,entity,manager,factory,persistence,unit,info,map;default,map,string,get,jpa,property,map,persistence,unit,info,pui,return,get,jpa,property,map
JpaVendorAdapter -> default void postProcessEntityManagerFactory(EntityManagerFactory emf);1510341663;Optional callback for post-processing the native EntityManagerFactory_before active use._<p>This can be used for triggering vendor-specific initialization processes._While this is not expected to be used for most providers, it is included_here as a general extension hook.;default void postProcessEntityManagerFactory(EntityManagerFactory emf) {_	};optional,callback,for,post,processing,the,native,entity,manager,factory,before,active,use,p,this,can,be,used,for,triggering,vendor,specific,initialization,processes,while,this,is,not,expected,to,be,used,for,most,providers,it,is,included,here,as,a,general,extension,hook;default,void,post,process,entity,manager,factory,entity,manager,factory,emf
JpaVendorAdapter -> default void postProcessEntityManagerFactory(EntityManagerFactory emf);1510422223;Optional callback for post-processing the native EntityManagerFactory_before active use._<p>This can be used for triggering vendor-specific initialization processes._While this is not expected to be used for most providers, it is included_here as a general extension hook.;default void postProcessEntityManagerFactory(EntityManagerFactory emf) {_	};optional,callback,for,post,processing,the,native,entity,manager,factory,before,active,use,p,this,can,be,used,for,triggering,vendor,specific,initialization,processes,while,this,is,not,expected,to,be,used,for,most,providers,it,is,included,here,as,a,general,extension,hook;default,void,post,process,entity,manager,factory,entity,manager,factory,emf
JpaVendorAdapter -> String getPersistenceProviderRootPackage()_;1328020251;Return the name of the persistence provider's root package_(e.g. "oracle.toplink.essentials"). Will be used for_excluding provider classes from temporary class overriding._@since 2.5.2;String getPersistenceProviderRootPackage()_;return,the,name,of,the,persistence,provider,s,root,package,e,g,oracle,toplink,essentials,will,be,used,for,excluding,provider,classes,from,temporary,class,overriding,since,2,5,2;string,get,persistence,provider,root,package
JpaVendorAdapter -> String getPersistenceProviderRootPackage()_;1356735495;Return the name of the persistence provider's root package_(e.g. "oracle.toplink.essentials"). Will be used for_excluding provider classes from temporary class overriding._@since 2.5.2;String getPersistenceProviderRootPackage()_;return,the,name,of,the,persistence,provider,s,root,package,e,g,oracle,toplink,essentials,will,be,used,for,excluding,provider,classes,from,temporary,class,overriding,since,2,5,2;string,get,persistence,provider,root,package
JpaVendorAdapter -> String getPersistenceProviderRootPackage()_;1413848647;Return the name of the persistence provider's root package_(e.g. "oracle.toplink.essentials"). Will be used for_excluding provider classes from temporary class overriding._@since 2.5.2;String getPersistenceProviderRootPackage()_;return,the,name,of,the,persistence,provider,s,root,package,e,g,oracle,toplink,essentials,will,be,used,for,excluding,provider,classes,from,temporary,class,overriding,since,2,5,2;string,get,persistence,provider,root,package
JpaVendorAdapter -> String getPersistenceProviderRootPackage()_;1461047077;Return the name of the persistence provider's root package_(e.g. "oracle.toplink.essentials"). Will be used for_excluding provider classes from temporary class overriding._@since 2.5.2;String getPersistenceProviderRootPackage()_;return,the,name,of,the,persistence,provider,s,root,package,e,g,oracle,toplink,essentials,will,be,used,for,excluding,provider,classes,from,temporary,class,overriding,since,2,5,2;string,get,persistence,provider,root,package
JpaVendorAdapter -> @Nullable 	default String getPersistenceProviderRootPackage();1510341663;Return the name of the persistence provider's root package_(e.g. "oracle.toplink.essentials"). Will be used for_excluding provider classes from temporary class overriding._@since 2.5.2;@Nullable_	default String getPersistenceProviderRootPackage() {_		return null__	};return,the,name,of,the,persistence,provider,s,root,package,e,g,oracle,toplink,essentials,will,be,used,for,excluding,provider,classes,from,temporary,class,overriding,since,2,5,2;nullable,default,string,get,persistence,provider,root,package,return,null
JpaVendorAdapter -> @Nullable 	default String getPersistenceProviderRootPackage();1510422223;Return the name of the persistence provider's root package_(e.g. "oracle.toplink.essentials"). Will be used for_excluding provider classes from temporary class overriding._@since 2.5.2;@Nullable_	default String getPersistenceProviderRootPackage() {_		return null__	};return,the,name,of,the,persistence,provider,s,root,package,e,g,oracle,toplink,essentials,will,be,used,for,excluding,provider,classes,from,temporary,class,overriding,since,2,5,2;nullable,default,string,get,persistence,provider,root,package,return,null
JpaVendorAdapter -> Map<String, ?> getJpaPropertyMap()_;1328020251;Return a Map of vendor-specific JPA properties,_typically based on settings in this JpaVendorAdapter instance._<p>Note that there might be further JPA properties defined on_the EntityManagerFactory bean, which might potentially override_individual JPA property values specified here._@return a Map of JPA properties, as as accepted by the standard_JPA bootstrap facilities, or <code>null</code> or an empty Map_if there are no such properties to expose_@see javax.persistence.Persistence#createEntityManagerFactory(String, java.util.Map)_@see javax.persistence.spi.PersistenceProvider#createContainerEntityManagerFactory(javax.persistence.spi.PersistenceUnitInfo, java.util.Map);Map<String, ?> getJpaPropertyMap()_;return,a,map,of,vendor,specific,jpa,properties,typically,based,on,settings,in,this,jpa,vendor,adapter,instance,p,note,that,there,might,be,further,jpa,properties,defined,on,the,entity,manager,factory,bean,which,might,potentially,override,individual,jpa,property,values,specified,here,return,a,map,of,jpa,properties,as,as,accepted,by,the,standard,jpa,bootstrap,facilities,or,code,null,code,or,an,empty,map,if,there,are,no,such,properties,to,expose,see,javax,persistence,persistence,create,entity,manager,factory,string,java,util,map,see,javax,persistence,spi,persistence,provider,create,container,entity,manager,factory,javax,persistence,spi,persistence,unit,info,java,util,map;map,string,get,jpa,property,map
JpaVendorAdapter -> Map<String, ?> getJpaPropertyMap()_;1356735495;Return a Map of vendor-specific JPA properties,_typically based on settings in this JpaVendorAdapter instance._<p>Note that there might be further JPA properties defined on_the EntityManagerFactory bean, which might potentially override_individual JPA property values specified here._@return a Map of JPA properties, as as accepted by the standard_JPA bootstrap facilities, or {@code null} or an empty Map_if there are no such properties to expose_@see javax.persistence.Persistence#createEntityManagerFactory(String, java.util.Map)_@see javax.persistence.spi.PersistenceProvider#createContainerEntityManagerFactory(javax.persistence.spi.PersistenceUnitInfo, java.util.Map);Map<String, ?> getJpaPropertyMap()_;return,a,map,of,vendor,specific,jpa,properties,typically,based,on,settings,in,this,jpa,vendor,adapter,instance,p,note,that,there,might,be,further,jpa,properties,defined,on,the,entity,manager,factory,bean,which,might,potentially,override,individual,jpa,property,values,specified,here,return,a,map,of,jpa,properties,as,as,accepted,by,the,standard,jpa,bootstrap,facilities,or,code,null,or,an,empty,map,if,there,are,no,such,properties,to,expose,see,javax,persistence,persistence,create,entity,manager,factory,string,java,util,map,see,javax,persistence,spi,persistence,provider,create,container,entity,manager,factory,javax,persistence,spi,persistence,unit,info,java,util,map;map,string,get,jpa,property,map
JpaVendorAdapter -> Map<String, ?> getJpaPropertyMap()_;1413848647;Return a Map of vendor-specific JPA properties,_typically based on settings in this JpaVendorAdapter instance._<p>Note that there might be further JPA properties defined on_the EntityManagerFactory bean, which might potentially override_individual JPA property values specified here._@return a Map of JPA properties, as as accepted by the standard_JPA bootstrap facilities, or {@code null} or an empty Map_if there are no such properties to expose_@see javax.persistence.Persistence#createEntityManagerFactory(String, java.util.Map)_@see javax.persistence.spi.PersistenceProvider#createContainerEntityManagerFactory(javax.persistence.spi.PersistenceUnitInfo, java.util.Map);Map<String, ?> getJpaPropertyMap()_;return,a,map,of,vendor,specific,jpa,properties,typically,based,on,settings,in,this,jpa,vendor,adapter,instance,p,note,that,there,might,be,further,jpa,properties,defined,on,the,entity,manager,factory,bean,which,might,potentially,override,individual,jpa,property,values,specified,here,return,a,map,of,jpa,properties,as,as,accepted,by,the,standard,jpa,bootstrap,facilities,or,code,null,or,an,empty,map,if,there,are,no,such,properties,to,expose,see,javax,persistence,persistence,create,entity,manager,factory,string,java,util,map,see,javax,persistence,spi,persistence,provider,create,container,entity,manager,factory,javax,persistence,spi,persistence,unit,info,java,util,map;map,string,get,jpa,property,map
JpaVendorAdapter -> Map<String, ?> getJpaPropertyMap()_;1461047077;Return a Map of vendor-specific JPA properties,_typically based on settings in this JpaVendorAdapter instance._<p>Note that there might be further JPA properties defined on_the EntityManagerFactory bean, which might potentially override_individual JPA property values specified here._@return a Map of JPA properties, as accepted by the standard_JPA bootstrap facilities, or {@code null} or an empty Map_if there are no such properties to expose_@see javax.persistence.Persistence#createEntityManagerFactory(String, java.util.Map)_@see javax.persistence.spi.PersistenceProvider#createContainerEntityManagerFactory(javax.persistence.spi.PersistenceUnitInfo, java.util.Map);Map<String, ?> getJpaPropertyMap()_;return,a,map,of,vendor,specific,jpa,properties,typically,based,on,settings,in,this,jpa,vendor,adapter,instance,p,note,that,there,might,be,further,jpa,properties,defined,on,the,entity,manager,factory,bean,which,might,potentially,override,individual,jpa,property,values,specified,here,return,a,map,of,jpa,properties,as,accepted,by,the,standard,jpa,bootstrap,facilities,or,code,null,or,an,empty,map,if,there,are,no,such,properties,to,expose,see,javax,persistence,persistence,create,entity,manager,factory,string,java,util,map,see,javax,persistence,spi,persistence,provider,create,container,entity,manager,factory,javax,persistence,spi,persistence,unit,info,java,util,map;map,string,get,jpa,property,map
