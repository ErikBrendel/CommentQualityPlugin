# id;timestamp;commentText;codeText;commentWords;codeWords
LocalSessionFactoryBean -> public void setMappingJarLocations(Resource... mappingJarLocations);1467668243;Set locations of jar files that contain Hibernate mapping resources,_like "WEB-INF/lib/example.hbm.jar"._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addJar(File);public void setMappingJarLocations(Resource... mappingJarLocations) {_		this.mappingJarLocations = mappingJarLocations__	};set,locations,of,jar,files,that,contain,hibernate,mapping,resources,like,web,inf,lib,example,hbm,jar,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,jar,file;public,void,set,mapping,jar,locations,resource,mapping,jar,locations,this,mapping,jar,locations,mapping,jar,locations
LocalSessionFactoryBean -> public void setMappingJarLocations(Resource... mappingJarLocations);1477661704;Set locations of jar files that contain Hibernate mapping resources,_like "WEB-INF/lib/example.hbm.jar"._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addJar(File);public void setMappingJarLocations(Resource... mappingJarLocations) {_		this.mappingJarLocations = mappingJarLocations__	};set,locations,of,jar,files,that,contain,hibernate,mapping,resources,like,web,inf,lib,example,hbm,jar,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,jar,file;public,void,set,mapping,jar,locations,resource,mapping,jar,locations,this,mapping,jar,locations,mapping,jar,locations
LocalSessionFactoryBean -> public void setMappingJarLocations(Resource... mappingJarLocations);1496259743;Set locations of jar files that contain Hibernate mapping resources,_like "WEB-INF/lib/example.hbm.jar"._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addJar(File);public void setMappingJarLocations(Resource... mappingJarLocations) {_		this.mappingJarLocations = mappingJarLocations__	};set,locations,of,jar,files,that,contain,hibernate,mapping,resources,like,web,inf,lib,example,hbm,jar,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,jar,file;public,void,set,mapping,jar,locations,resource,mapping,jar,locations,this,mapping,jar,locations,mapping,jar,locations
LocalSessionFactoryBean -> public void setMappingJarLocations(Resource... mappingJarLocations);1498780456;Set locations of jar files that contain Hibernate mapping resources,_like "WEB-INF/lib/example.hbm.jar"._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addJar(File);public void setMappingJarLocations(Resource... mappingJarLocations) {_		this.mappingJarLocations = mappingJarLocations__	};set,locations,of,jar,files,that,contain,hibernate,mapping,resources,like,web,inf,lib,example,hbm,jar,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,jar,file;public,void,set,mapping,jar,locations,resource,mapping,jar,locations,this,mapping,jar,locations,mapping,jar,locations
LocalSessionFactoryBean -> public void setMappingJarLocations(Resource... mappingJarLocations);1502974979;Set locations of jar files that contain Hibernate mapping resources,_like "WEB-INF/lib/example.hbm.jar"._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addJar(File);public void setMappingJarLocations(Resource... mappingJarLocations) {_		this.mappingJarLocations = mappingJarLocations__	};set,locations,of,jar,files,that,contain,hibernate,mapping,resources,like,web,inf,lib,example,hbm,jar,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,jar,file;public,void,set,mapping,jar,locations,resource,mapping,jar,locations,this,mapping,jar,locations,mapping,jar,locations
LocalSessionFactoryBean -> public void setMappingJarLocations(Resource... mappingJarLocations);1530174524;Set locations of jar files that contain Hibernate mapping resources,_like "WEB-INF/lib/example.hbm.jar"._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addJar(File);public void setMappingJarLocations(Resource... mappingJarLocations) {_		this.mappingJarLocations = mappingJarLocations__	};set,locations,of,jar,files,that,contain,hibernate,mapping,resources,like,web,inf,lib,example,hbm,jar,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,jar,file;public,void,set,mapping,jar,locations,resource,mapping,jar,locations,this,mapping,jar,locations,mapping,jar,locations
LocalSessionFactoryBean -> public void setMappingJarLocations(Resource... mappingJarLocations);1530188116;Set locations of jar files that contain Hibernate mapping resources,_like "WEB-INF/lib/example.hbm.jar"._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addJar(File);public void setMappingJarLocations(Resource... mappingJarLocations) {_		this.mappingJarLocations = mappingJarLocations__	};set,locations,of,jar,files,that,contain,hibernate,mapping,resources,like,web,inf,lib,example,hbm,jar,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,jar,file;public,void,set,mapping,jar,locations,resource,mapping,jar,locations,this,mapping,jar,locations,mapping,jar,locations
LocalSessionFactoryBean -> public void setMappingJarLocations(Resource... mappingJarLocations);1530724999;Set locations of jar files that contain Hibernate mapping resources,_like "WEB-INF/lib/example.hbm.jar"._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addJar(File);public void setMappingJarLocations(Resource... mappingJarLocations) {_		this.mappingJarLocations = mappingJarLocations__	};set,locations,of,jar,files,that,contain,hibernate,mapping,resources,like,web,inf,lib,example,hbm,jar,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,jar,file;public,void,set,mapping,jar,locations,resource,mapping,jar,locations,this,mapping,jar,locations,mapping,jar,locations
LocalSessionFactoryBean -> public void setMappingJarLocations(Resource... mappingJarLocations);1530802115;Set locations of jar files that contain Hibernate mapping resources,_like "WEB-INF/lib/example.hbm.jar"._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addJar(File);public void setMappingJarLocations(Resource... mappingJarLocations) {_		this.mappingJarLocations = mappingJarLocations__	};set,locations,of,jar,files,that,contain,hibernate,mapping,resources,like,web,inf,lib,example,hbm,jar,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,jar,file;public,void,set,mapping,jar,locations,resource,mapping,jar,locations,this,mapping,jar,locations,mapping,jar,locations
LocalSessionFactoryBean -> public void setMappingJarLocations(Resource... mappingJarLocations);1531739026;Set locations of jar files that contain Hibernate mapping resources,_like "WEB-INF/lib/example.hbm.jar"._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addJar(File);public void setMappingJarLocations(Resource... mappingJarLocations) {_		this.mappingJarLocations = mappingJarLocations__	};set,locations,of,jar,files,that,contain,hibernate,mapping,resources,like,web,inf,lib,example,hbm,jar,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,jar,file;public,void,set,mapping,jar,locations,resource,mapping,jar,locations,this,mapping,jar,locations,mapping,jar,locations
LocalSessionFactoryBean -> protected SessionFactory buildSessionFactory(LocalSessionFactoryBuilder sfb);1467668243;Subclasses can override this method to perform custom initialization_of the SessionFactory instance, creating it via the given Configuration_object that got prepared by this LocalSessionFactoryBean._<p>The default implementation invokes LocalSessionFactoryBuilder's buildSessionFactory._A custom implementation could prepare the instance in a specific way (e.g. applying_a custom ServiceRegistry) or use a custom SessionFactoryImpl subclass._@param sfb LocalSessionFactoryBuilder prepared by this LocalSessionFactoryBean_@return the SessionFactory instance_@see LocalSessionFactoryBuilder#buildSessionFactory;protected SessionFactory buildSessionFactory(LocalSessionFactoryBuilder sfb) {_		return (this.bootstrapExecutor != null ? sfb.buildSessionFactory(this.bootstrapExecutor) :_				sfb.buildSessionFactory())__	};subclasses,can,override,this,method,to,perform,custom,initialization,of,the,session,factory,instance,creating,it,via,the,given,configuration,object,that,got,prepared,by,this,local,session,factory,bean,p,the,default,implementation,invokes,local,session,factory,builder,s,build,session,factory,a,custom,implementation,could,prepare,the,instance,in,a,specific,way,e,g,applying,a,custom,service,registry,or,use,a,custom,session,factory,impl,subclass,param,sfb,local,session,factory,builder,prepared,by,this,local,session,factory,bean,return,the,session,factory,instance,see,local,session,factory,builder,build,session,factory;protected,session,factory,build,session,factory,local,session,factory,builder,sfb,return,this,bootstrap,executor,null,sfb,build,session,factory,this,bootstrap,executor,sfb,build,session,factory
LocalSessionFactoryBean -> protected SessionFactory buildSessionFactory(LocalSessionFactoryBuilder sfb);1477661704;Subclasses can override this method to perform custom initialization_of the SessionFactory instance, creating it via the given Configuration_object that got prepared by this LocalSessionFactoryBean._<p>The default implementation invokes LocalSessionFactoryBuilder's buildSessionFactory._A custom implementation could prepare the instance in a specific way (e.g. applying_a custom ServiceRegistry) or use a custom SessionFactoryImpl subclass._@param sfb LocalSessionFactoryBuilder prepared by this LocalSessionFactoryBean_@return the SessionFactory instance_@see LocalSessionFactoryBuilder#buildSessionFactory;protected SessionFactory buildSessionFactory(LocalSessionFactoryBuilder sfb) {_		return (this.bootstrapExecutor != null ? sfb.buildSessionFactory(this.bootstrapExecutor) :_				sfb.buildSessionFactory())__	};subclasses,can,override,this,method,to,perform,custom,initialization,of,the,session,factory,instance,creating,it,via,the,given,configuration,object,that,got,prepared,by,this,local,session,factory,bean,p,the,default,implementation,invokes,local,session,factory,builder,s,build,session,factory,a,custom,implementation,could,prepare,the,instance,in,a,specific,way,e,g,applying,a,custom,service,registry,or,use,a,custom,session,factory,impl,subclass,param,sfb,local,session,factory,builder,prepared,by,this,local,session,factory,bean,return,the,session,factory,instance,see,local,session,factory,builder,build,session,factory;protected,session,factory,build,session,factory,local,session,factory,builder,sfb,return,this,bootstrap,executor,null,sfb,build,session,factory,this,bootstrap,executor,sfb,build,session,factory
LocalSessionFactoryBean -> protected SessionFactory buildSessionFactory(LocalSessionFactoryBuilder sfb);1496259743;Subclasses can override this method to perform custom initialization_of the SessionFactory instance, creating it via the given Configuration_object that got prepared by this LocalSessionFactoryBean._<p>The default implementation invokes LocalSessionFactoryBuilder's buildSessionFactory._A custom implementation could prepare the instance in a specific way (e.g. applying_a custom ServiceRegistry) or use a custom SessionFactoryImpl subclass._@param sfb LocalSessionFactoryBuilder prepared by this LocalSessionFactoryBean_@return the SessionFactory instance_@see LocalSessionFactoryBuilder#buildSessionFactory;protected SessionFactory buildSessionFactory(LocalSessionFactoryBuilder sfb) {_		return (this.bootstrapExecutor != null ? sfb.buildSessionFactory(this.bootstrapExecutor) :_				sfb.buildSessionFactory())__	};subclasses,can,override,this,method,to,perform,custom,initialization,of,the,session,factory,instance,creating,it,via,the,given,configuration,object,that,got,prepared,by,this,local,session,factory,bean,p,the,default,implementation,invokes,local,session,factory,builder,s,build,session,factory,a,custom,implementation,could,prepare,the,instance,in,a,specific,way,e,g,applying,a,custom,service,registry,or,use,a,custom,session,factory,impl,subclass,param,sfb,local,session,factory,builder,prepared,by,this,local,session,factory,bean,return,the,session,factory,instance,see,local,session,factory,builder,build,session,factory;protected,session,factory,build,session,factory,local,session,factory,builder,sfb,return,this,bootstrap,executor,null,sfb,build,session,factory,this,bootstrap,executor,sfb,build,session,factory
LocalSessionFactoryBean -> protected SessionFactory buildSessionFactory(LocalSessionFactoryBuilder sfb);1498780456;Subclasses can override this method to perform custom initialization_of the SessionFactory instance, creating it via the given Configuration_object that got prepared by this LocalSessionFactoryBean._<p>The default implementation invokes LocalSessionFactoryBuilder's buildSessionFactory._A custom implementation could prepare the instance in a specific way (e.g. applying_a custom ServiceRegistry) or use a custom SessionFactoryImpl subclass._@param sfb LocalSessionFactoryBuilder prepared by this LocalSessionFactoryBean_@return the SessionFactory instance_@see LocalSessionFactoryBuilder#buildSessionFactory;protected SessionFactory buildSessionFactory(LocalSessionFactoryBuilder sfb) {_		return (this.bootstrapExecutor != null ? sfb.buildSessionFactory(this.bootstrapExecutor) :_				sfb.buildSessionFactory())__	};subclasses,can,override,this,method,to,perform,custom,initialization,of,the,session,factory,instance,creating,it,via,the,given,configuration,object,that,got,prepared,by,this,local,session,factory,bean,p,the,default,implementation,invokes,local,session,factory,builder,s,build,session,factory,a,custom,implementation,could,prepare,the,instance,in,a,specific,way,e,g,applying,a,custom,service,registry,or,use,a,custom,session,factory,impl,subclass,param,sfb,local,session,factory,builder,prepared,by,this,local,session,factory,bean,return,the,session,factory,instance,see,local,session,factory,builder,build,session,factory;protected,session,factory,build,session,factory,local,session,factory,builder,sfb,return,this,bootstrap,executor,null,sfb,build,session,factory,this,bootstrap,executor,sfb,build,session,factory
LocalSessionFactoryBean -> protected SessionFactory buildSessionFactory(LocalSessionFactoryBuilder sfb);1502974979;Subclasses can override this method to perform custom initialization_of the SessionFactory instance, creating it via the given Configuration_object that got prepared by this LocalSessionFactoryBean._<p>The default implementation invokes LocalSessionFactoryBuilder's buildSessionFactory._A custom implementation could prepare the instance in a specific way (e.g. applying_a custom ServiceRegistry) or use a custom SessionFactoryImpl subclass._@param sfb LocalSessionFactoryBuilder prepared by this LocalSessionFactoryBean_@return the SessionFactory instance_@see LocalSessionFactoryBuilder#buildSessionFactory;protected SessionFactory buildSessionFactory(LocalSessionFactoryBuilder sfb) {_		return (this.bootstrapExecutor != null ? sfb.buildSessionFactory(this.bootstrapExecutor) :_				sfb.buildSessionFactory())__	};subclasses,can,override,this,method,to,perform,custom,initialization,of,the,session,factory,instance,creating,it,via,the,given,configuration,object,that,got,prepared,by,this,local,session,factory,bean,p,the,default,implementation,invokes,local,session,factory,builder,s,build,session,factory,a,custom,implementation,could,prepare,the,instance,in,a,specific,way,e,g,applying,a,custom,service,registry,or,use,a,custom,session,factory,impl,subclass,param,sfb,local,session,factory,builder,prepared,by,this,local,session,factory,bean,return,the,session,factory,instance,see,local,session,factory,builder,build,session,factory;protected,session,factory,build,session,factory,local,session,factory,builder,sfb,return,this,bootstrap,executor,null,sfb,build,session,factory,this,bootstrap,executor,sfb,build,session,factory
LocalSessionFactoryBean -> protected SessionFactory buildSessionFactory(LocalSessionFactoryBuilder sfb);1530174524;Subclasses can override this method to perform custom initialization_of the SessionFactory instance, creating it via the given Configuration_object that got prepared by this LocalSessionFactoryBean._<p>The default implementation invokes LocalSessionFactoryBuilder's buildSessionFactory._A custom implementation could prepare the instance in a specific way (e.g. applying_a custom ServiceRegistry) or use a custom SessionFactoryImpl subclass._@param sfb a LocalSessionFactoryBuilder prepared by this LocalSessionFactoryBean_@return the SessionFactory instance_@see LocalSessionFactoryBuilder#buildSessionFactory;protected SessionFactory buildSessionFactory(LocalSessionFactoryBuilder sfb) {_		return (this.bootstrapExecutor != null ? sfb.buildSessionFactory(this.bootstrapExecutor) :_				sfb.buildSessionFactory())__	};subclasses,can,override,this,method,to,perform,custom,initialization,of,the,session,factory,instance,creating,it,via,the,given,configuration,object,that,got,prepared,by,this,local,session,factory,bean,p,the,default,implementation,invokes,local,session,factory,builder,s,build,session,factory,a,custom,implementation,could,prepare,the,instance,in,a,specific,way,e,g,applying,a,custom,service,registry,or,use,a,custom,session,factory,impl,subclass,param,sfb,a,local,session,factory,builder,prepared,by,this,local,session,factory,bean,return,the,session,factory,instance,see,local,session,factory,builder,build,session,factory;protected,session,factory,build,session,factory,local,session,factory,builder,sfb,return,this,bootstrap,executor,null,sfb,build,session,factory,this,bootstrap,executor,sfb,build,session,factory
LocalSessionFactoryBean -> protected SessionFactory buildSessionFactory(LocalSessionFactoryBuilder sfb);1530188116;Subclasses can override this method to perform custom initialization_of the SessionFactory instance, creating it via the given Configuration_object that got prepared by this LocalSessionFactoryBean._<p>The default implementation invokes LocalSessionFactoryBuilder's buildSessionFactory._A custom implementation could prepare the instance in a specific way (e.g. applying_a custom ServiceRegistry) or use a custom SessionFactoryImpl subclass._@param sfb a LocalSessionFactoryBuilder prepared by this LocalSessionFactoryBean_@return the SessionFactory instance_@see LocalSessionFactoryBuilder#buildSessionFactory;protected SessionFactory buildSessionFactory(LocalSessionFactoryBuilder sfb) {_		return (this.bootstrapExecutor != null ? sfb.buildSessionFactory(this.bootstrapExecutor) :_				sfb.buildSessionFactory())__	};subclasses,can,override,this,method,to,perform,custom,initialization,of,the,session,factory,instance,creating,it,via,the,given,configuration,object,that,got,prepared,by,this,local,session,factory,bean,p,the,default,implementation,invokes,local,session,factory,builder,s,build,session,factory,a,custom,implementation,could,prepare,the,instance,in,a,specific,way,e,g,applying,a,custom,service,registry,or,use,a,custom,session,factory,impl,subclass,param,sfb,a,local,session,factory,builder,prepared,by,this,local,session,factory,bean,return,the,session,factory,instance,see,local,session,factory,builder,build,session,factory;protected,session,factory,build,session,factory,local,session,factory,builder,sfb,return,this,bootstrap,executor,null,sfb,build,session,factory,this,bootstrap,executor,sfb,build,session,factory
LocalSessionFactoryBean -> protected SessionFactory buildSessionFactory(LocalSessionFactoryBuilder sfb);1530724999;Subclasses can override this method to perform custom initialization_of the SessionFactory instance, creating it via the given Configuration_object that got prepared by this LocalSessionFactoryBean._<p>The default implementation invokes LocalSessionFactoryBuilder's buildSessionFactory._A custom implementation could prepare the instance in a specific way (e.g. applying_a custom ServiceRegistry) or use a custom SessionFactoryImpl subclass._@param sfb a LocalSessionFactoryBuilder prepared by this LocalSessionFactoryBean_@return the SessionFactory instance_@see LocalSessionFactoryBuilder#buildSessionFactory;protected SessionFactory buildSessionFactory(LocalSessionFactoryBuilder sfb) {_		return (this.bootstrapExecutor != null ? sfb.buildSessionFactory(this.bootstrapExecutor) :_				sfb.buildSessionFactory())__	};subclasses,can,override,this,method,to,perform,custom,initialization,of,the,session,factory,instance,creating,it,via,the,given,configuration,object,that,got,prepared,by,this,local,session,factory,bean,p,the,default,implementation,invokes,local,session,factory,builder,s,build,session,factory,a,custom,implementation,could,prepare,the,instance,in,a,specific,way,e,g,applying,a,custom,service,registry,or,use,a,custom,session,factory,impl,subclass,param,sfb,a,local,session,factory,builder,prepared,by,this,local,session,factory,bean,return,the,session,factory,instance,see,local,session,factory,builder,build,session,factory;protected,session,factory,build,session,factory,local,session,factory,builder,sfb,return,this,bootstrap,executor,null,sfb,build,session,factory,this,bootstrap,executor,sfb,build,session,factory
LocalSessionFactoryBean -> protected SessionFactory buildSessionFactory(LocalSessionFactoryBuilder sfb);1530802115;Subclasses can override this method to perform custom initialization_of the SessionFactory instance, creating it via the given Configuration_object that got prepared by this LocalSessionFactoryBean._<p>The default implementation invokes LocalSessionFactoryBuilder's buildSessionFactory._A custom implementation could prepare the instance in a specific way (e.g. applying_a custom ServiceRegistry) or use a custom SessionFactoryImpl subclass._@param sfb a LocalSessionFactoryBuilder prepared by this LocalSessionFactoryBean_@return the SessionFactory instance_@see LocalSessionFactoryBuilder#buildSessionFactory;protected SessionFactory buildSessionFactory(LocalSessionFactoryBuilder sfb) {_		return (this.bootstrapExecutor != null ? sfb.buildSessionFactory(this.bootstrapExecutor) :_				sfb.buildSessionFactory())__	};subclasses,can,override,this,method,to,perform,custom,initialization,of,the,session,factory,instance,creating,it,via,the,given,configuration,object,that,got,prepared,by,this,local,session,factory,bean,p,the,default,implementation,invokes,local,session,factory,builder,s,build,session,factory,a,custom,implementation,could,prepare,the,instance,in,a,specific,way,e,g,applying,a,custom,service,registry,or,use,a,custom,session,factory,impl,subclass,param,sfb,a,local,session,factory,builder,prepared,by,this,local,session,factory,bean,return,the,session,factory,instance,see,local,session,factory,builder,build,session,factory;protected,session,factory,build,session,factory,local,session,factory,builder,sfb,return,this,bootstrap,executor,null,sfb,build,session,factory,this,bootstrap,executor,sfb,build,session,factory
LocalSessionFactoryBean -> protected SessionFactory buildSessionFactory(LocalSessionFactoryBuilder sfb);1531739026;Subclasses can override this method to perform custom initialization_of the SessionFactory instance, creating it via the given Configuration_object that got prepared by this LocalSessionFactoryBean._<p>The default implementation invokes LocalSessionFactoryBuilder's buildSessionFactory._A custom implementation could prepare the instance in a specific way (e.g. applying_a custom ServiceRegistry) or use a custom SessionFactoryImpl subclass._@param sfb a LocalSessionFactoryBuilder prepared by this LocalSessionFactoryBean_@return the SessionFactory instance_@see LocalSessionFactoryBuilder#buildSessionFactory;protected SessionFactory buildSessionFactory(LocalSessionFactoryBuilder sfb) {_		return (this.bootstrapExecutor != null ? sfb.buildSessionFactory(this.bootstrapExecutor) :_				sfb.buildSessionFactory())__	};subclasses,can,override,this,method,to,perform,custom,initialization,of,the,session,factory,instance,creating,it,via,the,given,configuration,object,that,got,prepared,by,this,local,session,factory,bean,p,the,default,implementation,invokes,local,session,factory,builder,s,build,session,factory,a,custom,implementation,could,prepare,the,instance,in,a,specific,way,e,g,applying,a,custom,service,registry,or,use,a,custom,session,factory,impl,subclass,param,sfb,a,local,session,factory,builder,prepared,by,this,local,session,factory,bean,return,the,session,factory,instance,see,local,session,factory,builder,build,session,factory;protected,session,factory,build,session,factory,local,session,factory,builder,sfb,return,this,bootstrap,executor,null,sfb,build,session,factory,this,bootstrap,executor,sfb,build,session,factory
LocalSessionFactoryBean -> public void setConfigLocation(Resource configLocation);1467668243;Set the location of a single Hibernate XML config file, for example as_classpath resource "classpath:hibernate.cfg.xml"._<p>Note: Can be omitted when all necessary properties and mapping_resources are specified locally via this bean._@see Configuration#configure(java.net.URL);public void setConfigLocation(Resource configLocation) {_		this.configLocations = new Resource[] {configLocation}__	};set,the,location,of,a,single,hibernate,xml,config,file,for,example,as,classpath,resource,classpath,hibernate,cfg,xml,p,note,can,be,omitted,when,all,necessary,properties,and,mapping,resources,are,specified,locally,via,this,bean,see,configuration,configure,java,net,url;public,void,set,config,location,resource,config,location,this,config,locations,new,resource,config,location
LocalSessionFactoryBean -> public void setConfigLocation(Resource configLocation);1477661704;Set the location of a single Hibernate XML config file, for example as_classpath resource "classpath:hibernate.cfg.xml"._<p>Note: Can be omitted when all necessary properties and mapping_resources are specified locally via this bean._@see Configuration#configure(java.net.URL);public void setConfigLocation(Resource configLocation) {_		this.configLocations = new Resource[] {configLocation}__	};set,the,location,of,a,single,hibernate,xml,config,file,for,example,as,classpath,resource,classpath,hibernate,cfg,xml,p,note,can,be,omitted,when,all,necessary,properties,and,mapping,resources,are,specified,locally,via,this,bean,see,configuration,configure,java,net,url;public,void,set,config,location,resource,config,location,this,config,locations,new,resource,config,location
LocalSessionFactoryBean -> public void setConfigLocation(Resource configLocation);1496259743;Set the location of a single Hibernate XML config file, for example as_classpath resource "classpath:hibernate.cfg.xml"._<p>Note: Can be omitted when all necessary properties and mapping_resources are specified locally via this bean._@see Configuration#configure(java.net.URL);public void setConfigLocation(Resource configLocation) {_		this.configLocations = new Resource[] {configLocation}__	};set,the,location,of,a,single,hibernate,xml,config,file,for,example,as,classpath,resource,classpath,hibernate,cfg,xml,p,note,can,be,omitted,when,all,necessary,properties,and,mapping,resources,are,specified,locally,via,this,bean,see,configuration,configure,java,net,url;public,void,set,config,location,resource,config,location,this,config,locations,new,resource,config,location
LocalSessionFactoryBean -> public void setConfigLocation(Resource configLocation);1498780456;Set the location of a single Hibernate XML config file, for example as_classpath resource "classpath:hibernate.cfg.xml"._<p>Note: Can be omitted when all necessary properties and mapping_resources are specified locally via this bean._@see Configuration#configure(java.net.URL);public void setConfigLocation(Resource configLocation) {_		this.configLocations = new Resource[] {configLocation}__	};set,the,location,of,a,single,hibernate,xml,config,file,for,example,as,classpath,resource,classpath,hibernate,cfg,xml,p,note,can,be,omitted,when,all,necessary,properties,and,mapping,resources,are,specified,locally,via,this,bean,see,configuration,configure,java,net,url;public,void,set,config,location,resource,config,location,this,config,locations,new,resource,config,location
LocalSessionFactoryBean -> public void setConfigLocation(Resource configLocation);1502974979;Set the location of a single Hibernate XML config file, for example as_classpath resource "classpath:hibernate.cfg.xml"._<p>Note: Can be omitted when all necessary properties and mapping_resources are specified locally via this bean._@see Configuration#configure(java.net.URL);public void setConfigLocation(Resource configLocation) {_		this.configLocations = new Resource[] {configLocation}__	};set,the,location,of,a,single,hibernate,xml,config,file,for,example,as,classpath,resource,classpath,hibernate,cfg,xml,p,note,can,be,omitted,when,all,necessary,properties,and,mapping,resources,are,specified,locally,via,this,bean,see,configuration,configure,java,net,url;public,void,set,config,location,resource,config,location,this,config,locations,new,resource,config,location
LocalSessionFactoryBean -> public void setConfigLocation(Resource configLocation);1530174524;Set the location of a single Hibernate XML config file, for example as_classpath resource "classpath:hibernate.cfg.xml"._<p>Note: Can be omitted when all necessary properties and mapping_resources are specified locally via this bean._@see Configuration#configure(java.net.URL);public void setConfigLocation(Resource configLocation) {_		this.configLocations = new Resource[] {configLocation}__	};set,the,location,of,a,single,hibernate,xml,config,file,for,example,as,classpath,resource,classpath,hibernate,cfg,xml,p,note,can,be,omitted,when,all,necessary,properties,and,mapping,resources,are,specified,locally,via,this,bean,see,configuration,configure,java,net,url;public,void,set,config,location,resource,config,location,this,config,locations,new,resource,config,location
LocalSessionFactoryBean -> public void setConfigLocation(Resource configLocation);1530188116;Set the location of a single Hibernate XML config file, for example as_classpath resource "classpath:hibernate.cfg.xml"._<p>Note: Can be omitted when all necessary properties and mapping_resources are specified locally via this bean._@see Configuration#configure(java.net.URL);public void setConfigLocation(Resource configLocation) {_		this.configLocations = new Resource[] {configLocation}__	};set,the,location,of,a,single,hibernate,xml,config,file,for,example,as,classpath,resource,classpath,hibernate,cfg,xml,p,note,can,be,omitted,when,all,necessary,properties,and,mapping,resources,are,specified,locally,via,this,bean,see,configuration,configure,java,net,url;public,void,set,config,location,resource,config,location,this,config,locations,new,resource,config,location
LocalSessionFactoryBean -> public void setConfigLocation(Resource configLocation);1530724999;Set the location of a single Hibernate XML config file, for example as_classpath resource "classpath:hibernate.cfg.xml"._<p>Note: Can be omitted when all necessary properties and mapping_resources are specified locally via this bean._@see Configuration#configure(java.net.URL);public void setConfigLocation(Resource configLocation) {_		this.configLocations = new Resource[] {configLocation}__	};set,the,location,of,a,single,hibernate,xml,config,file,for,example,as,classpath,resource,classpath,hibernate,cfg,xml,p,note,can,be,omitted,when,all,necessary,properties,and,mapping,resources,are,specified,locally,via,this,bean,see,configuration,configure,java,net,url;public,void,set,config,location,resource,config,location,this,config,locations,new,resource,config,location
LocalSessionFactoryBean -> public void setConfigLocation(Resource configLocation);1530802115;Set the location of a single Hibernate XML config file, for example as_classpath resource "classpath:hibernate.cfg.xml"._<p>Note: Can be omitted when all necessary properties and mapping_resources are specified locally via this bean._@see Configuration#configure(java.net.URL);public void setConfigLocation(Resource configLocation) {_		this.configLocations = new Resource[] {configLocation}__	};set,the,location,of,a,single,hibernate,xml,config,file,for,example,as,classpath,resource,classpath,hibernate,cfg,xml,p,note,can,be,omitted,when,all,necessary,properties,and,mapping,resources,are,specified,locally,via,this,bean,see,configuration,configure,java,net,url;public,void,set,config,location,resource,config,location,this,config,locations,new,resource,config,location
LocalSessionFactoryBean -> public void setConfigLocation(Resource configLocation);1531739026;Set the location of a single Hibernate XML config file, for example as_classpath resource "classpath:hibernate.cfg.xml"._<p>Note: Can be omitted when all necessary properties and mapping_resources are specified locally via this bean._@see Configuration#configure(java.net.URL);public void setConfigLocation(Resource configLocation) {_		this.configLocations = new Resource[] {configLocation}__	};set,the,location,of,a,single,hibernate,xml,config,file,for,example,as,classpath,resource,classpath,hibernate,cfg,xml,p,note,can,be,omitted,when,all,necessary,properties,and,mapping,resources,are,specified,locally,via,this,bean,see,configuration,configure,java,net,url;public,void,set,config,location,resource,config,location,this,config,locations,new,resource,config,location
LocalSessionFactoryBean -> public void setHibernateProperties(Properties hibernateProperties);1467668243;Set Hibernate properties, such as "hibernate.dialect"._<p>Note: Do not specify a transaction provider here when using_Spring-driven transactions. It is also advisable to omit connection_provider settings and use a Spring-set DataSource instead._@see #setDataSource;public void setHibernateProperties(Properties hibernateProperties) {_		this.hibernateProperties = hibernateProperties__	};set,hibernate,properties,such,as,hibernate,dialect,p,note,do,not,specify,a,transaction,provider,here,when,using,spring,driven,transactions,it,is,also,advisable,to,omit,connection,provider,settings,and,use,a,spring,set,data,source,instead,see,set,data,source;public,void,set,hibernate,properties,properties,hibernate,properties,this,hibernate,properties,hibernate,properties
LocalSessionFactoryBean -> public void setHibernateProperties(Properties hibernateProperties);1477661704;Set Hibernate properties, such as "hibernate.dialect"._<p>Note: Do not specify a transaction provider here when using_Spring-driven transactions. It is also advisable to omit connection_provider settings and use a Spring-set DataSource instead._@see #setDataSource;public void setHibernateProperties(Properties hibernateProperties) {_		this.hibernateProperties = hibernateProperties__	};set,hibernate,properties,such,as,hibernate,dialect,p,note,do,not,specify,a,transaction,provider,here,when,using,spring,driven,transactions,it,is,also,advisable,to,omit,connection,provider,settings,and,use,a,spring,set,data,source,instead,see,set,data,source;public,void,set,hibernate,properties,properties,hibernate,properties,this,hibernate,properties,hibernate,properties
LocalSessionFactoryBean -> public void setHibernateProperties(Properties hibernateProperties);1496259743;Set Hibernate properties, such as "hibernate.dialect"._<p>Note: Do not specify a transaction provider here when using_Spring-driven transactions. It is also advisable to omit connection_provider settings and use a Spring-set DataSource instead._@see #setDataSource;public void setHibernateProperties(Properties hibernateProperties) {_		this.hibernateProperties = hibernateProperties__	};set,hibernate,properties,such,as,hibernate,dialect,p,note,do,not,specify,a,transaction,provider,here,when,using,spring,driven,transactions,it,is,also,advisable,to,omit,connection,provider,settings,and,use,a,spring,set,data,source,instead,see,set,data,source;public,void,set,hibernate,properties,properties,hibernate,properties,this,hibernate,properties,hibernate,properties
LocalSessionFactoryBean -> public void setHibernateProperties(Properties hibernateProperties);1498780456;Set Hibernate properties, such as "hibernate.dialect"._<p>Note: Do not specify a transaction provider here when using_Spring-driven transactions. It is also advisable to omit connection_provider settings and use a Spring-set DataSource instead._@see #setDataSource;public void setHibernateProperties(Properties hibernateProperties) {_		this.hibernateProperties = hibernateProperties__	};set,hibernate,properties,such,as,hibernate,dialect,p,note,do,not,specify,a,transaction,provider,here,when,using,spring,driven,transactions,it,is,also,advisable,to,omit,connection,provider,settings,and,use,a,spring,set,data,source,instead,see,set,data,source;public,void,set,hibernate,properties,properties,hibernate,properties,this,hibernate,properties,hibernate,properties
LocalSessionFactoryBean -> public void setHibernateProperties(Properties hibernateProperties);1502974979;Set Hibernate properties, such as "hibernate.dialect"._<p>Note: Do not specify a transaction provider here when using_Spring-driven transactions. It is also advisable to omit connection_provider settings and use a Spring-set DataSource instead._@see #setDataSource;public void setHibernateProperties(Properties hibernateProperties) {_		this.hibernateProperties = hibernateProperties__	};set,hibernate,properties,such,as,hibernate,dialect,p,note,do,not,specify,a,transaction,provider,here,when,using,spring,driven,transactions,it,is,also,advisable,to,omit,connection,provider,settings,and,use,a,spring,set,data,source,instead,see,set,data,source;public,void,set,hibernate,properties,properties,hibernate,properties,this,hibernate,properties,hibernate,properties
LocalSessionFactoryBean -> public void setHibernateProperties(Properties hibernateProperties);1530174524;Set Hibernate properties, such as "hibernate.dialect"._<p>Note: Do not specify a transaction provider here when using_Spring-driven transactions. It is also advisable to omit connection_provider settings and use a Spring-set DataSource instead._@see #setDataSource;public void setHibernateProperties(Properties hibernateProperties) {_		this.hibernateProperties = hibernateProperties__	};set,hibernate,properties,such,as,hibernate,dialect,p,note,do,not,specify,a,transaction,provider,here,when,using,spring,driven,transactions,it,is,also,advisable,to,omit,connection,provider,settings,and,use,a,spring,set,data,source,instead,see,set,data,source;public,void,set,hibernate,properties,properties,hibernate,properties,this,hibernate,properties,hibernate,properties
LocalSessionFactoryBean -> public void setHibernateProperties(Properties hibernateProperties);1530188116;Set Hibernate properties, such as "hibernate.dialect"._<p>Note: Do not specify a transaction provider here when using_Spring-driven transactions. It is also advisable to omit connection_provider settings and use a Spring-set DataSource instead._@see #setDataSource;public void setHibernateProperties(Properties hibernateProperties) {_		this.hibernateProperties = hibernateProperties__	};set,hibernate,properties,such,as,hibernate,dialect,p,note,do,not,specify,a,transaction,provider,here,when,using,spring,driven,transactions,it,is,also,advisable,to,omit,connection,provider,settings,and,use,a,spring,set,data,source,instead,see,set,data,source;public,void,set,hibernate,properties,properties,hibernate,properties,this,hibernate,properties,hibernate,properties
LocalSessionFactoryBean -> public void setHibernateProperties(Properties hibernateProperties);1530724999;Set Hibernate properties, such as "hibernate.dialect"._<p>Note: Do not specify a transaction provider here when using_Spring-driven transactions. It is also advisable to omit connection_provider settings and use a Spring-set DataSource instead._@see #setDataSource;public void setHibernateProperties(Properties hibernateProperties) {_		this.hibernateProperties = hibernateProperties__	};set,hibernate,properties,such,as,hibernate,dialect,p,note,do,not,specify,a,transaction,provider,here,when,using,spring,driven,transactions,it,is,also,advisable,to,omit,connection,provider,settings,and,use,a,spring,set,data,source,instead,see,set,data,source;public,void,set,hibernate,properties,properties,hibernate,properties,this,hibernate,properties,hibernate,properties
LocalSessionFactoryBean -> public void setHibernateProperties(Properties hibernateProperties);1530802115;Set Hibernate properties, such as "hibernate.dialect"._<p>Note: Do not specify a transaction provider here when using_Spring-driven transactions. It is also advisable to omit connection_provider settings and use a Spring-set DataSource instead._@see #setDataSource;public void setHibernateProperties(Properties hibernateProperties) {_		this.hibernateProperties = hibernateProperties__	};set,hibernate,properties,such,as,hibernate,dialect,p,note,do,not,specify,a,transaction,provider,here,when,using,spring,driven,transactions,it,is,also,advisable,to,omit,connection,provider,settings,and,use,a,spring,set,data,source,instead,see,set,data,source;public,void,set,hibernate,properties,properties,hibernate,properties,this,hibernate,properties,hibernate,properties
LocalSessionFactoryBean -> public void setHibernateProperties(Properties hibernateProperties);1531739026;Set Hibernate properties, such as "hibernate.dialect"._<p>Note: Do not specify a transaction provider here when using_Spring-driven transactions. It is also advisable to omit connection_provider settings and use a Spring-set DataSource instead._@see #setDataSource;public void setHibernateProperties(Properties hibernateProperties) {_		this.hibernateProperties = hibernateProperties__	};set,hibernate,properties,such,as,hibernate,dialect,p,note,do,not,specify,a,transaction,provider,here,when,using,spring,driven,transactions,it,is,also,advisable,to,omit,connection,provider,settings,and,use,a,spring,set,data,source,instead,see,set,data,source;public,void,set,hibernate,properties,properties,hibernate,properties,this,hibernate,properties,hibernate,properties
LocalSessionFactoryBean -> public MetadataSources getMetadataSources();1467668243;Determine the Hibernate {@link MetadataSources} to use._<p>Can also be externally called to initialize and pre-populate a {@link MetadataSources}_instance which is then going to be used for {@link SessionFactory} building._@return the MetadataSources to use (never {@code null})_@since 4.3_@see LocalSessionFactoryBuilder#LocalSessionFactoryBuilder(DataSource, ResourceLoader, MetadataSources);public MetadataSources getMetadataSources() {_		if (this.metadataSources == null) {_			BootstrapServiceRegistryBuilder builder = new BootstrapServiceRegistryBuilder()__			if (this.resourcePatternResolver != null) {_				builder = builder.applyClassLoader(this.resourcePatternResolver.getClassLoader())__			}_			this.metadataSources = new MetadataSources(builder.build())__		}_		return this.metadataSources__	};determine,the,hibernate,link,metadata,sources,to,use,p,can,also,be,externally,called,to,initialize,and,pre,populate,a,link,metadata,sources,instance,which,is,then,going,to,be,used,for,link,session,factory,building,return,the,metadata,sources,to,use,never,code,null,since,4,3,see,local,session,factory,builder,local,session,factory,builder,data,source,resource,loader,metadata,sources;public,metadata,sources,get,metadata,sources,if,this,metadata,sources,null,bootstrap,service,registry,builder,builder,new,bootstrap,service,registry,builder,if,this,resource,pattern,resolver,null,builder,builder,apply,class,loader,this,resource,pattern,resolver,get,class,loader,this,metadata,sources,new,metadata,sources,builder,build,return,this,metadata,sources
LocalSessionFactoryBean -> public MetadataSources getMetadataSources();1477661704;Determine the Hibernate {@link MetadataSources} to use._<p>Can also be externally called to initialize and pre-populate a {@link MetadataSources}_instance which is then going to be used for {@link SessionFactory} building._@return the MetadataSources to use (never {@code null})_@since 4.3_@see LocalSessionFactoryBuilder#LocalSessionFactoryBuilder(DataSource, ResourceLoader, MetadataSources);public MetadataSources getMetadataSources() {_		this.metadataSourcesAccessed = true__		if (this.metadataSources == null) {_			BootstrapServiceRegistryBuilder builder = new BootstrapServiceRegistryBuilder()__			if (this.resourcePatternResolver != null) {_				builder = builder.applyClassLoader(this.resourcePatternResolver.getClassLoader())__			}_			this.metadataSources = new MetadataSources(builder.build())__		}_		return this.metadataSources__	};determine,the,hibernate,link,metadata,sources,to,use,p,can,also,be,externally,called,to,initialize,and,pre,populate,a,link,metadata,sources,instance,which,is,then,going,to,be,used,for,link,session,factory,building,return,the,metadata,sources,to,use,never,code,null,since,4,3,see,local,session,factory,builder,local,session,factory,builder,data,source,resource,loader,metadata,sources;public,metadata,sources,get,metadata,sources,this,metadata,sources,accessed,true,if,this,metadata,sources,null,bootstrap,service,registry,builder,builder,new,bootstrap,service,registry,builder,if,this,resource,pattern,resolver,null,builder,builder,apply,class,loader,this,resource,pattern,resolver,get,class,loader,this,metadata,sources,new,metadata,sources,builder,build,return,this,metadata,sources
LocalSessionFactoryBean -> public MetadataSources getMetadataSources();1496259743;Determine the Hibernate {@link MetadataSources} to use._<p>Can also be externally called to initialize and pre-populate a {@link MetadataSources}_instance which is then going to be used for {@link SessionFactory} building._@return the MetadataSources to use (never {@code null})_@since 4.3_@see LocalSessionFactoryBuilder#LocalSessionFactoryBuilder(DataSource, ResourceLoader, MetadataSources);public MetadataSources getMetadataSources() {_		this.metadataSourcesAccessed = true__		if (this.metadataSources == null) {_			BootstrapServiceRegistryBuilder builder = new BootstrapServiceRegistryBuilder()__			if (this.resourcePatternResolver != null) {_				builder = builder.applyClassLoader(this.resourcePatternResolver.getClassLoader())__			}_			this.metadataSources = new MetadataSources(builder.build())__		}_		return this.metadataSources__	};determine,the,hibernate,link,metadata,sources,to,use,p,can,also,be,externally,called,to,initialize,and,pre,populate,a,link,metadata,sources,instance,which,is,then,going,to,be,used,for,link,session,factory,building,return,the,metadata,sources,to,use,never,code,null,since,4,3,see,local,session,factory,builder,local,session,factory,builder,data,source,resource,loader,metadata,sources;public,metadata,sources,get,metadata,sources,this,metadata,sources,accessed,true,if,this,metadata,sources,null,bootstrap,service,registry,builder,builder,new,bootstrap,service,registry,builder,if,this,resource,pattern,resolver,null,builder,builder,apply,class,loader,this,resource,pattern,resolver,get,class,loader,this,metadata,sources,new,metadata,sources,builder,build,return,this,metadata,sources
LocalSessionFactoryBean -> public MetadataSources getMetadataSources();1498780456;Determine the Hibernate {@link MetadataSources} to use._<p>Can also be externally called to initialize and pre-populate a {@link MetadataSources}_instance which is then going to be used for {@link SessionFactory} building._@return the MetadataSources to use (never {@code null})_@since 4.3_@see LocalSessionFactoryBuilder#LocalSessionFactoryBuilder(DataSource, ResourceLoader, MetadataSources);public MetadataSources getMetadataSources() {_		this.metadataSourcesAccessed = true__		if (this.metadataSources == null) {_			BootstrapServiceRegistryBuilder builder = new BootstrapServiceRegistryBuilder()__			if (this.resourcePatternResolver != null) {_				builder = builder.applyClassLoader(this.resourcePatternResolver.getClassLoader())__			}_			this.metadataSources = new MetadataSources(builder.build())__		}_		return this.metadataSources__	};determine,the,hibernate,link,metadata,sources,to,use,p,can,also,be,externally,called,to,initialize,and,pre,populate,a,link,metadata,sources,instance,which,is,then,going,to,be,used,for,link,session,factory,building,return,the,metadata,sources,to,use,never,code,null,since,4,3,see,local,session,factory,builder,local,session,factory,builder,data,source,resource,loader,metadata,sources;public,metadata,sources,get,metadata,sources,this,metadata,sources,accessed,true,if,this,metadata,sources,null,bootstrap,service,registry,builder,builder,new,bootstrap,service,registry,builder,if,this,resource,pattern,resolver,null,builder,builder,apply,class,loader,this,resource,pattern,resolver,get,class,loader,this,metadata,sources,new,metadata,sources,builder,build,return,this,metadata,sources
LocalSessionFactoryBean -> public MetadataSources getMetadataSources();1502974979;Determine the Hibernate {@link MetadataSources} to use._<p>Can also be externally called to initialize and pre-populate a {@link MetadataSources}_instance which is then going to be used for {@link SessionFactory} building._@return the MetadataSources to use (never {@code null})_@since 4.3_@see LocalSessionFactoryBuilder#LocalSessionFactoryBuilder(DataSource, ResourceLoader, MetadataSources);public MetadataSources getMetadataSources() {_		this.metadataSourcesAccessed = true__		if (this.metadataSources == null) {_			BootstrapServiceRegistryBuilder builder = new BootstrapServiceRegistryBuilder()__			if (this.resourcePatternResolver != null) {_				builder = builder.applyClassLoader(this.resourcePatternResolver.getClassLoader())__			}_			this.metadataSources = new MetadataSources(builder.build())__		}_		return this.metadataSources__	};determine,the,hibernate,link,metadata,sources,to,use,p,can,also,be,externally,called,to,initialize,and,pre,populate,a,link,metadata,sources,instance,which,is,then,going,to,be,used,for,link,session,factory,building,return,the,metadata,sources,to,use,never,code,null,since,4,3,see,local,session,factory,builder,local,session,factory,builder,data,source,resource,loader,metadata,sources;public,metadata,sources,get,metadata,sources,this,metadata,sources,accessed,true,if,this,metadata,sources,null,bootstrap,service,registry,builder,builder,new,bootstrap,service,registry,builder,if,this,resource,pattern,resolver,null,builder,builder,apply,class,loader,this,resource,pattern,resolver,get,class,loader,this,metadata,sources,new,metadata,sources,builder,build,return,this,metadata,sources
LocalSessionFactoryBean -> public MetadataSources getMetadataSources();1530174524;Determine the Hibernate {@link MetadataSources} to use._<p>Can also be externally called to initialize and pre-populate a {@link MetadataSources}_instance which is then going to be used for {@link SessionFactory} building._@return the MetadataSources to use (never {@code null})_@since 4.3_@see LocalSessionFactoryBuilder#LocalSessionFactoryBuilder(DataSource, ResourceLoader, MetadataSources);public MetadataSources getMetadataSources() {_		this.metadataSourcesAccessed = true__		if (this.metadataSources == null) {_			BootstrapServiceRegistryBuilder builder = new BootstrapServiceRegistryBuilder()__			if (this.resourcePatternResolver != null) {_				builder = builder.applyClassLoader(this.resourcePatternResolver.getClassLoader())__			}_			this.metadataSources = new MetadataSources(builder.build())__		}_		return this.metadataSources__	};determine,the,hibernate,link,metadata,sources,to,use,p,can,also,be,externally,called,to,initialize,and,pre,populate,a,link,metadata,sources,instance,which,is,then,going,to,be,used,for,link,session,factory,building,return,the,metadata,sources,to,use,never,code,null,since,4,3,see,local,session,factory,builder,local,session,factory,builder,data,source,resource,loader,metadata,sources;public,metadata,sources,get,metadata,sources,this,metadata,sources,accessed,true,if,this,metadata,sources,null,bootstrap,service,registry,builder,builder,new,bootstrap,service,registry,builder,if,this,resource,pattern,resolver,null,builder,builder,apply,class,loader,this,resource,pattern,resolver,get,class,loader,this,metadata,sources,new,metadata,sources,builder,build,return,this,metadata,sources
LocalSessionFactoryBean -> public MetadataSources getMetadataSources();1530188116;Determine the Hibernate {@link MetadataSources} to use._<p>Can also be externally called to initialize and pre-populate a {@link MetadataSources}_instance which is then going to be used for {@link SessionFactory} building._@return the MetadataSources to use (never {@code null})_@since 4.3_@see LocalSessionFactoryBuilder#LocalSessionFactoryBuilder(DataSource, ResourceLoader, MetadataSources);public MetadataSources getMetadataSources() {_		this.metadataSourcesAccessed = true__		if (this.metadataSources == null) {_			BootstrapServiceRegistryBuilder builder = new BootstrapServiceRegistryBuilder()__			if (this.resourcePatternResolver != null) {_				builder = builder.applyClassLoader(this.resourcePatternResolver.getClassLoader())__			}_			if (this.hibernateIntegrators != null) {_				for (Integrator integrator : this.hibernateIntegrators) {_					builder = builder.applyIntegrator(integrator)__				}_			}_			this.metadataSources = new MetadataSources(builder.build())__		}_		return this.metadataSources__	};determine,the,hibernate,link,metadata,sources,to,use,p,can,also,be,externally,called,to,initialize,and,pre,populate,a,link,metadata,sources,instance,which,is,then,going,to,be,used,for,link,session,factory,building,return,the,metadata,sources,to,use,never,code,null,since,4,3,see,local,session,factory,builder,local,session,factory,builder,data,source,resource,loader,metadata,sources;public,metadata,sources,get,metadata,sources,this,metadata,sources,accessed,true,if,this,metadata,sources,null,bootstrap,service,registry,builder,builder,new,bootstrap,service,registry,builder,if,this,resource,pattern,resolver,null,builder,builder,apply,class,loader,this,resource,pattern,resolver,get,class,loader,if,this,hibernate,integrators,null,for,integrator,integrator,this,hibernate,integrators,builder,builder,apply,integrator,integrator,this,metadata,sources,new,metadata,sources,builder,build,return,this,metadata,sources
LocalSessionFactoryBean -> public MetadataSources getMetadataSources();1530724999;Determine the Hibernate {@link MetadataSources} to use._<p>Can also be externally called to initialize and pre-populate a {@link MetadataSources}_instance which is then going to be used for {@link SessionFactory} building._@return the MetadataSources to use (never {@code null})_@since 4.3_@see LocalSessionFactoryBuilder#LocalSessionFactoryBuilder(DataSource, ResourceLoader, MetadataSources);public MetadataSources getMetadataSources() {_		this.metadataSourcesAccessed = true__		if (this.metadataSources == null) {_			BootstrapServiceRegistryBuilder builder = new BootstrapServiceRegistryBuilder()__			if (this.resourcePatternResolver != null) {_				builder = builder.applyClassLoader(this.resourcePatternResolver.getClassLoader())__			}_			if (this.hibernateIntegrators != null) {_				for (Integrator integrator : this.hibernateIntegrators) {_					builder = builder.applyIntegrator(integrator)__				}_			}_			this.metadataSources = new MetadataSources(builder.build())__		}_		return this.metadataSources__	};determine,the,hibernate,link,metadata,sources,to,use,p,can,also,be,externally,called,to,initialize,and,pre,populate,a,link,metadata,sources,instance,which,is,then,going,to,be,used,for,link,session,factory,building,return,the,metadata,sources,to,use,never,code,null,since,4,3,see,local,session,factory,builder,local,session,factory,builder,data,source,resource,loader,metadata,sources;public,metadata,sources,get,metadata,sources,this,metadata,sources,accessed,true,if,this,metadata,sources,null,bootstrap,service,registry,builder,builder,new,bootstrap,service,registry,builder,if,this,resource,pattern,resolver,null,builder,builder,apply,class,loader,this,resource,pattern,resolver,get,class,loader,if,this,hibernate,integrators,null,for,integrator,integrator,this,hibernate,integrators,builder,builder,apply,integrator,integrator,this,metadata,sources,new,metadata,sources,builder,build,return,this,metadata,sources
LocalSessionFactoryBean -> public MetadataSources getMetadataSources();1530802115;Determine the Hibernate {@link MetadataSources} to use._<p>Can also be externally called to initialize and pre-populate a {@link MetadataSources}_instance which is then going to be used for {@link SessionFactory} building._@return the MetadataSources to use (never {@code null})_@since 4.3_@see LocalSessionFactoryBuilder#LocalSessionFactoryBuilder(DataSource, ResourceLoader, MetadataSources);public MetadataSources getMetadataSources() {_		this.metadataSourcesAccessed = true__		if (this.metadataSources == null) {_			BootstrapServiceRegistryBuilder builder = new BootstrapServiceRegistryBuilder()__			if (this.resourcePatternResolver != null) {_				builder = builder.applyClassLoader(this.resourcePatternResolver.getClassLoader())__			}_			if (this.hibernateIntegrators != null) {_				for (Integrator integrator : this.hibernateIntegrators) {_					builder = builder.applyIntegrator(integrator)__				}_			}_			this.metadataSources = new MetadataSources(builder.build())__		}_		return this.metadataSources__	};determine,the,hibernate,link,metadata,sources,to,use,p,can,also,be,externally,called,to,initialize,and,pre,populate,a,link,metadata,sources,instance,which,is,then,going,to,be,used,for,link,session,factory,building,return,the,metadata,sources,to,use,never,code,null,since,4,3,see,local,session,factory,builder,local,session,factory,builder,data,source,resource,loader,metadata,sources;public,metadata,sources,get,metadata,sources,this,metadata,sources,accessed,true,if,this,metadata,sources,null,bootstrap,service,registry,builder,builder,new,bootstrap,service,registry,builder,if,this,resource,pattern,resolver,null,builder,builder,apply,class,loader,this,resource,pattern,resolver,get,class,loader,if,this,hibernate,integrators,null,for,integrator,integrator,this,hibernate,integrators,builder,builder,apply,integrator,integrator,this,metadata,sources,new,metadata,sources,builder,build,return,this,metadata,sources
LocalSessionFactoryBean -> public MetadataSources getMetadataSources();1531739026;Determine the Hibernate {@link MetadataSources} to use._<p>Can also be externally called to initialize and pre-populate a {@link MetadataSources}_instance which is then going to be used for {@link SessionFactory} building._@return the MetadataSources to use (never {@code null})_@since 4.3_@see LocalSessionFactoryBuilder#LocalSessionFactoryBuilder(DataSource, ResourceLoader, MetadataSources);public MetadataSources getMetadataSources() {_		this.metadataSourcesAccessed = true__		if (this.metadataSources == null) {_			BootstrapServiceRegistryBuilder builder = new BootstrapServiceRegistryBuilder()__			if (this.resourcePatternResolver != null) {_				builder = builder.applyClassLoader(this.resourcePatternResolver.getClassLoader())__			}_			if (this.hibernateIntegrators != null) {_				for (Integrator integrator : this.hibernateIntegrators) {_					builder = builder.applyIntegrator(integrator)__				}_			}_			this.metadataSources = new MetadataSources(builder.build())__		}_		return this.metadataSources__	};determine,the,hibernate,link,metadata,sources,to,use,p,can,also,be,externally,called,to,initialize,and,pre,populate,a,link,metadata,sources,instance,which,is,then,going,to,be,used,for,link,session,factory,building,return,the,metadata,sources,to,use,never,code,null,since,4,3,see,local,session,factory,builder,local,session,factory,builder,data,source,resource,loader,metadata,sources;public,metadata,sources,get,metadata,sources,this,metadata,sources,accessed,true,if,this,metadata,sources,null,bootstrap,service,registry,builder,builder,new,bootstrap,service,registry,builder,if,this,resource,pattern,resolver,null,builder,builder,apply,class,loader,this,resource,pattern,resolver,get,class,loader,if,this,hibernate,integrators,null,for,integrator,integrator,this,hibernate,integrators,builder,builder,apply,integrator,integrator,this,metadata,sources,new,metadata,sources,builder,build,return,this,metadata,sources
LocalSessionFactoryBean -> public void setImplicitNamingStrategy(ImplicitNamingStrategy implicitNamingStrategy);1467668243;Set a Hibernate 5.0 ImplicitNamingStrategy for the SessionFactory._@see Configuration#setImplicitNamingStrategy;public void setImplicitNamingStrategy(ImplicitNamingStrategy implicitNamingStrategy) {_		this.implicitNamingStrategy = implicitNamingStrategy__	};set,a,hibernate,5,0,implicit,naming,strategy,for,the,session,factory,see,configuration,set,implicit,naming,strategy;public,void,set,implicit,naming,strategy,implicit,naming,strategy,implicit,naming,strategy,this,implicit,naming,strategy,implicit,naming,strategy
LocalSessionFactoryBean -> public void setImplicitNamingStrategy(ImplicitNamingStrategy implicitNamingStrategy);1477661704;Set a Hibernate 5.0 ImplicitNamingStrategy for the SessionFactory._@see Configuration#setImplicitNamingStrategy;public void setImplicitNamingStrategy(ImplicitNamingStrategy implicitNamingStrategy) {_		this.implicitNamingStrategy = implicitNamingStrategy__	};set,a,hibernate,5,0,implicit,naming,strategy,for,the,session,factory,see,configuration,set,implicit,naming,strategy;public,void,set,implicit,naming,strategy,implicit,naming,strategy,implicit,naming,strategy,this,implicit,naming,strategy,implicit,naming,strategy
LocalSessionFactoryBean -> public void setImplicitNamingStrategy(ImplicitNamingStrategy implicitNamingStrategy);1496259743;Set a Hibernate 5.0 ImplicitNamingStrategy for the SessionFactory._@see Configuration#setImplicitNamingStrategy;public void setImplicitNamingStrategy(ImplicitNamingStrategy implicitNamingStrategy) {_		this.implicitNamingStrategy = implicitNamingStrategy__	};set,a,hibernate,5,0,implicit,naming,strategy,for,the,session,factory,see,configuration,set,implicit,naming,strategy;public,void,set,implicit,naming,strategy,implicit,naming,strategy,implicit,naming,strategy,this,implicit,naming,strategy,implicit,naming,strategy
LocalSessionFactoryBean -> public void setImplicitNamingStrategy(ImplicitNamingStrategy implicitNamingStrategy);1498780456;Set a Hibernate 5.0 ImplicitNamingStrategy for the SessionFactory._@see Configuration#setImplicitNamingStrategy;public void setImplicitNamingStrategy(ImplicitNamingStrategy implicitNamingStrategy) {_		this.implicitNamingStrategy = implicitNamingStrategy__	};set,a,hibernate,5,0,implicit,naming,strategy,for,the,session,factory,see,configuration,set,implicit,naming,strategy;public,void,set,implicit,naming,strategy,implicit,naming,strategy,implicit,naming,strategy,this,implicit,naming,strategy,implicit,naming,strategy
LocalSessionFactoryBean -> public void setImplicitNamingStrategy(ImplicitNamingStrategy implicitNamingStrategy);1502974979;Set a Hibernate 5.0 ImplicitNamingStrategy for the SessionFactory._@see Configuration#setImplicitNamingStrategy;public void setImplicitNamingStrategy(ImplicitNamingStrategy implicitNamingStrategy) {_		this.implicitNamingStrategy = implicitNamingStrategy__	};set,a,hibernate,5,0,implicit,naming,strategy,for,the,session,factory,see,configuration,set,implicit,naming,strategy;public,void,set,implicit,naming,strategy,implicit,naming,strategy,implicit,naming,strategy,this,implicit,naming,strategy,implicit,naming,strategy
LocalSessionFactoryBean -> public void setImplicitNamingStrategy(ImplicitNamingStrategy implicitNamingStrategy);1530174524;Set a Hibernate 5.0 ImplicitNamingStrategy for the SessionFactory._@see Configuration#setImplicitNamingStrategy;public void setImplicitNamingStrategy(ImplicitNamingStrategy implicitNamingStrategy) {_		this.implicitNamingStrategy = implicitNamingStrategy__	};set,a,hibernate,5,0,implicit,naming,strategy,for,the,session,factory,see,configuration,set,implicit,naming,strategy;public,void,set,implicit,naming,strategy,implicit,naming,strategy,implicit,naming,strategy,this,implicit,naming,strategy,implicit,naming,strategy
LocalSessionFactoryBean -> public void setImplicitNamingStrategy(ImplicitNamingStrategy implicitNamingStrategy);1530188116;Set a Hibernate 5.0 ImplicitNamingStrategy for the SessionFactory._@see Configuration#setImplicitNamingStrategy;public void setImplicitNamingStrategy(ImplicitNamingStrategy implicitNamingStrategy) {_		this.implicitNamingStrategy = implicitNamingStrategy__	};set,a,hibernate,5,0,implicit,naming,strategy,for,the,session,factory,see,configuration,set,implicit,naming,strategy;public,void,set,implicit,naming,strategy,implicit,naming,strategy,implicit,naming,strategy,this,implicit,naming,strategy,implicit,naming,strategy
LocalSessionFactoryBean -> public void setImplicitNamingStrategy(ImplicitNamingStrategy implicitNamingStrategy);1530724999;Set a Hibernate 5.0 ImplicitNamingStrategy for the SessionFactory._@see Configuration#setImplicitNamingStrategy;public void setImplicitNamingStrategy(ImplicitNamingStrategy implicitNamingStrategy) {_		this.implicitNamingStrategy = implicitNamingStrategy__	};set,a,hibernate,5,0,implicit,naming,strategy,for,the,session,factory,see,configuration,set,implicit,naming,strategy;public,void,set,implicit,naming,strategy,implicit,naming,strategy,implicit,naming,strategy,this,implicit,naming,strategy,implicit,naming,strategy
LocalSessionFactoryBean -> public void setImplicitNamingStrategy(ImplicitNamingStrategy implicitNamingStrategy);1530802115;Set a Hibernate 5.0 ImplicitNamingStrategy for the SessionFactory._@see Configuration#setImplicitNamingStrategy;public void setImplicitNamingStrategy(ImplicitNamingStrategy implicitNamingStrategy) {_		this.implicitNamingStrategy = implicitNamingStrategy__	};set,a,hibernate,5,0,implicit,naming,strategy,for,the,session,factory,see,configuration,set,implicit,naming,strategy;public,void,set,implicit,naming,strategy,implicit,naming,strategy,implicit,naming,strategy,this,implicit,naming,strategy,implicit,naming,strategy
LocalSessionFactoryBean -> public void setImplicitNamingStrategy(ImplicitNamingStrategy implicitNamingStrategy);1531739026;Set a Hibernate 5 {@link ImplicitNamingStrategy} for the SessionFactory._@see Configuration#setImplicitNamingStrategy;public void setImplicitNamingStrategy(ImplicitNamingStrategy implicitNamingStrategy) {_		this.implicitNamingStrategy = implicitNamingStrategy__	};set,a,hibernate,5,link,implicit,naming,strategy,for,the,session,factory,see,configuration,set,implicit,naming,strategy;public,void,set,implicit,naming,strategy,implicit,naming,strategy,implicit,naming,strategy,this,implicit,naming,strategy,implicit,naming,strategy
LocalSessionFactoryBean -> public void setMetadataSources(MetadataSources metadataSources);1467668243;Specify a Hibernate {@link MetadataSources} service to use (e.g. reusing an_existing one), potentially populated with a custom Hibernate bootstrap_{@link org.hibernate.service.ServiceRegistry} as well._@since 4.3;public void setMetadataSources(MetadataSources metadataSources) {_		Assert.notNull(metadataSources, "MetadataSources must not be null")__		this.metadataSources = metadataSources__	};specify,a,hibernate,link,metadata,sources,service,to,use,e,g,reusing,an,existing,one,potentially,populated,with,a,custom,hibernate,bootstrap,link,org,hibernate,service,service,registry,as,well,since,4,3;public,void,set,metadata,sources,metadata,sources,metadata,sources,assert,not,null,metadata,sources,metadata,sources,must,not,be,null,this,metadata,sources,metadata,sources
LocalSessionFactoryBean -> public void setMetadataSources(MetadataSources metadataSources);1477661704;Specify a Hibernate {@link MetadataSources} service to use (e.g. reusing an_existing one), potentially populated with a custom Hibernate bootstrap_{@link org.hibernate.service.ServiceRegistry} as well._@since 4.3;public void setMetadataSources(MetadataSources metadataSources) {_		Assert.notNull(metadataSources, "MetadataSources must not be null")__		this.metadataSourcesAccessed = true__		this.metadataSources = metadataSources__	};specify,a,hibernate,link,metadata,sources,service,to,use,e,g,reusing,an,existing,one,potentially,populated,with,a,custom,hibernate,bootstrap,link,org,hibernate,service,service,registry,as,well,since,4,3;public,void,set,metadata,sources,metadata,sources,metadata,sources,assert,not,null,metadata,sources,metadata,sources,must,not,be,null,this,metadata,sources,accessed,true,this,metadata,sources,metadata,sources
LocalSessionFactoryBean -> public void setMetadataSources(MetadataSources metadataSources);1496259743;Specify a Hibernate {@link MetadataSources} service to use (e.g. reusing an_existing one), potentially populated with a custom Hibernate bootstrap_{@link org.hibernate.service.ServiceRegistry} as well._@since 4.3;public void setMetadataSources(MetadataSources metadataSources) {_		Assert.notNull(metadataSources, "MetadataSources must not be null")__		this.metadataSourcesAccessed = true__		this.metadataSources = metadataSources__	};specify,a,hibernate,link,metadata,sources,service,to,use,e,g,reusing,an,existing,one,potentially,populated,with,a,custom,hibernate,bootstrap,link,org,hibernate,service,service,registry,as,well,since,4,3;public,void,set,metadata,sources,metadata,sources,metadata,sources,assert,not,null,metadata,sources,metadata,sources,must,not,be,null,this,metadata,sources,accessed,true,this,metadata,sources,metadata,sources
LocalSessionFactoryBean -> public void setMetadataSources(MetadataSources metadataSources);1498780456;Specify a Hibernate {@link MetadataSources} service to use (e.g. reusing an_existing one), potentially populated with a custom Hibernate bootstrap_{@link org.hibernate.service.ServiceRegistry} as well._@since 4.3;public void setMetadataSources(MetadataSources metadataSources) {_		Assert.notNull(metadataSources, "MetadataSources must not be null")__		this.metadataSourcesAccessed = true__		this.metadataSources = metadataSources__	};specify,a,hibernate,link,metadata,sources,service,to,use,e,g,reusing,an,existing,one,potentially,populated,with,a,custom,hibernate,bootstrap,link,org,hibernate,service,service,registry,as,well,since,4,3;public,void,set,metadata,sources,metadata,sources,metadata,sources,assert,not,null,metadata,sources,metadata,sources,must,not,be,null,this,metadata,sources,accessed,true,this,metadata,sources,metadata,sources
LocalSessionFactoryBean -> public void setMetadataSources(MetadataSources metadataSources);1502974979;Specify a Hibernate {@link MetadataSources} service to use (e.g. reusing an_existing one), potentially populated with a custom Hibernate bootstrap_{@link org.hibernate.service.ServiceRegistry} as well._@since 4.3;public void setMetadataSources(MetadataSources metadataSources) {_		Assert.notNull(metadataSources, "MetadataSources must not be null")__		this.metadataSourcesAccessed = true__		this.metadataSources = metadataSources__	};specify,a,hibernate,link,metadata,sources,service,to,use,e,g,reusing,an,existing,one,potentially,populated,with,a,custom,hibernate,bootstrap,link,org,hibernate,service,service,registry,as,well,since,4,3;public,void,set,metadata,sources,metadata,sources,metadata,sources,assert,not,null,metadata,sources,metadata,sources,must,not,be,null,this,metadata,sources,accessed,true,this,metadata,sources,metadata,sources
LocalSessionFactoryBean -> public void setMetadataSources(MetadataSources metadataSources);1530174524;Specify a Hibernate {@link MetadataSources} service to use (e.g. reusing an_existing one), potentially populated with a custom Hibernate bootstrap_{@link org.hibernate.service.ServiceRegistry} as well._@since 4.3;public void setMetadataSources(MetadataSources metadataSources) {_		Assert.notNull(metadataSources, "MetadataSources must not be null")__		this.metadataSourcesAccessed = true__		this.metadataSources = metadataSources__	};specify,a,hibernate,link,metadata,sources,service,to,use,e,g,reusing,an,existing,one,potentially,populated,with,a,custom,hibernate,bootstrap,link,org,hibernate,service,service,registry,as,well,since,4,3;public,void,set,metadata,sources,metadata,sources,metadata,sources,assert,not,null,metadata,sources,metadata,sources,must,not,be,null,this,metadata,sources,accessed,true,this,metadata,sources,metadata,sources
LocalSessionFactoryBean -> public void setMetadataSources(MetadataSources metadataSources);1530188116;Specify a Hibernate {@link MetadataSources} service to use (e.g. reusing an_existing one), potentially populated with a custom Hibernate bootstrap_{@link org.hibernate.service.ServiceRegistry} as well._@since 4.3_@see MetadataSources#MetadataSources(ServiceRegistry)_@see BootstrapServiceRegistryBuilder#build();public void setMetadataSources(MetadataSources metadataSources) {_		this.metadataSourcesAccessed = true__		this.metadataSources = metadataSources__	};specify,a,hibernate,link,metadata,sources,service,to,use,e,g,reusing,an,existing,one,potentially,populated,with,a,custom,hibernate,bootstrap,link,org,hibernate,service,service,registry,as,well,since,4,3,see,metadata,sources,metadata,sources,service,registry,see,bootstrap,service,registry,builder,build;public,void,set,metadata,sources,metadata,sources,metadata,sources,this,metadata,sources,accessed,true,this,metadata,sources,metadata,sources
LocalSessionFactoryBean -> public void setMetadataSources(MetadataSources metadataSources);1530724999;Specify a Hibernate {@link MetadataSources} service to use (e.g. reusing an_existing one), potentially populated with a custom Hibernate bootstrap_{@link org.hibernate.service.ServiceRegistry} as well._@since 4.3_@see MetadataSources#MetadataSources(ServiceRegistry)_@see BootstrapServiceRegistryBuilder#build();public void setMetadataSources(MetadataSources metadataSources) {_		this.metadataSourcesAccessed = true__		this.metadataSources = metadataSources__	};specify,a,hibernate,link,metadata,sources,service,to,use,e,g,reusing,an,existing,one,potentially,populated,with,a,custom,hibernate,bootstrap,link,org,hibernate,service,service,registry,as,well,since,4,3,see,metadata,sources,metadata,sources,service,registry,see,bootstrap,service,registry,builder,build;public,void,set,metadata,sources,metadata,sources,metadata,sources,this,metadata,sources,accessed,true,this,metadata,sources,metadata,sources
LocalSessionFactoryBean -> public void setMetadataSources(MetadataSources metadataSources);1530802115;Specify a Hibernate {@link MetadataSources} service to use (e.g. reusing an_existing one), potentially populated with a custom Hibernate bootstrap_{@link org.hibernate.service.ServiceRegistry} as well._@since 4.3_@see MetadataSources#MetadataSources(ServiceRegistry)_@see BootstrapServiceRegistryBuilder#build();public void setMetadataSources(MetadataSources metadataSources) {_		this.metadataSourcesAccessed = true__		this.metadataSources = metadataSources__	};specify,a,hibernate,link,metadata,sources,service,to,use,e,g,reusing,an,existing,one,potentially,populated,with,a,custom,hibernate,bootstrap,link,org,hibernate,service,service,registry,as,well,since,4,3,see,metadata,sources,metadata,sources,service,registry,see,bootstrap,service,registry,builder,build;public,void,set,metadata,sources,metadata,sources,metadata,sources,this,metadata,sources,accessed,true,this,metadata,sources,metadata,sources
LocalSessionFactoryBean -> public void setMetadataSources(MetadataSources metadataSources);1531739026;Specify a Hibernate {@link MetadataSources} service to use (e.g. reusing an_existing one), potentially populated with a custom Hibernate bootstrap_{@link org.hibernate.service.ServiceRegistry} as well._@since 4.3_@see MetadataSources#MetadataSources(ServiceRegistry)_@see BootstrapServiceRegistryBuilder#build();public void setMetadataSources(MetadataSources metadataSources) {_		this.metadataSourcesAccessed = true__		this.metadataSources = metadataSources__	};specify,a,hibernate,link,metadata,sources,service,to,use,e,g,reusing,an,existing,one,potentially,populated,with,a,custom,hibernate,bootstrap,link,org,hibernate,service,service,registry,as,well,since,4,3,see,metadata,sources,metadata,sources,service,registry,see,bootstrap,service,registry,builder,build;public,void,set,metadata,sources,metadata,sources,metadata,sources,this,metadata,sources,accessed,true,this,metadata,sources,metadata,sources
LocalSessionFactoryBean -> public void setHibernateIntegrators(Integrator... hibernateIntegrators);1530188116;Specify one or more Hibernate {@link Integrator} implementations to apply._<p>This will only be applied for an internally built {@link MetadataSources}_instance. {@link #setMetadataSources} effectively overrides such settings,_with integrators to be applied to the externally built {@link MetadataSources}._@since 5.1_@see #setMetadataSources_@see BootstrapServiceRegistryBuilder#applyIntegrator;public void setHibernateIntegrators(Integrator... hibernateIntegrators) {_		this.hibernateIntegrators = hibernateIntegrators__	};specify,one,or,more,hibernate,link,integrator,implementations,to,apply,p,this,will,only,be,applied,for,an,internally,built,link,metadata,sources,instance,link,set,metadata,sources,effectively,overrides,such,settings,with,integrators,to,be,applied,to,the,externally,built,link,metadata,sources,since,5,1,see,set,metadata,sources,see,bootstrap,service,registry,builder,apply,integrator;public,void,set,hibernate,integrators,integrator,hibernate,integrators,this,hibernate,integrators,hibernate,integrators
LocalSessionFactoryBean -> public void setHibernateIntegrators(Integrator... hibernateIntegrators);1530724999;Specify one or more Hibernate {@link Integrator} implementations to apply._<p>This will only be applied for an internally built {@link MetadataSources}_instance. {@link #setMetadataSources} effectively overrides such settings,_with integrators to be applied to the externally built {@link MetadataSources}._@since 5.1_@see #setMetadataSources_@see BootstrapServiceRegistryBuilder#applyIntegrator;public void setHibernateIntegrators(Integrator... hibernateIntegrators) {_		this.hibernateIntegrators = hibernateIntegrators__	};specify,one,or,more,hibernate,link,integrator,implementations,to,apply,p,this,will,only,be,applied,for,an,internally,built,link,metadata,sources,instance,link,set,metadata,sources,effectively,overrides,such,settings,with,integrators,to,be,applied,to,the,externally,built,link,metadata,sources,since,5,1,see,set,metadata,sources,see,bootstrap,service,registry,builder,apply,integrator;public,void,set,hibernate,integrators,integrator,hibernate,integrators,this,hibernate,integrators,hibernate,integrators
LocalSessionFactoryBean -> public void setHibernateIntegrators(Integrator... hibernateIntegrators);1530802115;Specify one or more Hibernate {@link Integrator} implementations to apply._<p>This will only be applied for an internally built {@link MetadataSources}_instance. {@link #setMetadataSources} effectively overrides such settings,_with integrators to be applied to the externally built {@link MetadataSources}._@since 5.1_@see #setMetadataSources_@see BootstrapServiceRegistryBuilder#applyIntegrator;public void setHibernateIntegrators(Integrator... hibernateIntegrators) {_		this.hibernateIntegrators = hibernateIntegrators__	};specify,one,or,more,hibernate,link,integrator,implementations,to,apply,p,this,will,only,be,applied,for,an,internally,built,link,metadata,sources,instance,link,set,metadata,sources,effectively,overrides,such,settings,with,integrators,to,be,applied,to,the,externally,built,link,metadata,sources,since,5,1,see,set,metadata,sources,see,bootstrap,service,registry,builder,apply,integrator;public,void,set,hibernate,integrators,integrator,hibernate,integrators,this,hibernate,integrators,hibernate,integrators
LocalSessionFactoryBean -> public void setHibernateIntegrators(Integrator... hibernateIntegrators);1531739026;Specify one or more Hibernate {@link Integrator} implementations to apply._<p>This will only be applied for an internally built {@link MetadataSources}_instance. {@link #setMetadataSources} effectively overrides such settings,_with integrators to be applied to the externally built {@link MetadataSources}._@since 5.1_@see #setMetadataSources_@see BootstrapServiceRegistryBuilder#applyIntegrator;public void setHibernateIntegrators(Integrator... hibernateIntegrators) {_		this.hibernateIntegrators = hibernateIntegrators__	};specify,one,or,more,hibernate,link,integrator,implementations,to,apply,p,this,will,only,be,applied,for,an,internally,built,link,metadata,sources,instance,link,set,metadata,sources,effectively,overrides,such,settings,with,integrators,to,be,applied,to,the,externally,built,link,metadata,sources,since,5,1,see,set,metadata,sources,see,bootstrap,service,registry,builder,apply,integrator;public,void,set,hibernate,integrators,integrator,hibernate,integrators,this,hibernate,integrators,hibernate,integrators
LocalSessionFactoryBean -> public void setDataSource(DataSource dataSource);1467668243;Set the DataSource to be used by the SessionFactory._If set, this will override corresponding settings in Hibernate properties._<p>If this is set, the Hibernate settings should not define_a connection provider to avoid meaningless double configuration.;public void setDataSource(DataSource dataSource) {_		this.dataSource = dataSource__	};set,the,data,source,to,be,used,by,the,session,factory,if,set,this,will,override,corresponding,settings,in,hibernate,properties,p,if,this,is,set,the,hibernate,settings,should,not,define,a,connection,provider,to,avoid,meaningless,double,configuration;public,void,set,data,source,data,source,data,source,this,data,source,data,source
LocalSessionFactoryBean -> public void setDataSource(DataSource dataSource);1477661704;Set the DataSource to be used by the SessionFactory._If set, this will override corresponding settings in Hibernate properties._<p>If this is set, the Hibernate settings should not define_a connection provider to avoid meaningless double configuration.;public void setDataSource(DataSource dataSource) {_		this.dataSource = dataSource__	};set,the,data,source,to,be,used,by,the,session,factory,if,set,this,will,override,corresponding,settings,in,hibernate,properties,p,if,this,is,set,the,hibernate,settings,should,not,define,a,connection,provider,to,avoid,meaningless,double,configuration;public,void,set,data,source,data,source,data,source,this,data,source,data,source
LocalSessionFactoryBean -> public void setDataSource(DataSource dataSource);1496259743;Set the DataSource to be used by the SessionFactory._If set, this will override corresponding settings in Hibernate properties._<p>If this is set, the Hibernate settings should not define_a connection provider to avoid meaningless double configuration.;public void setDataSource(DataSource dataSource) {_		this.dataSource = dataSource__	};set,the,data,source,to,be,used,by,the,session,factory,if,set,this,will,override,corresponding,settings,in,hibernate,properties,p,if,this,is,set,the,hibernate,settings,should,not,define,a,connection,provider,to,avoid,meaningless,double,configuration;public,void,set,data,source,data,source,data,source,this,data,source,data,source
LocalSessionFactoryBean -> public void setDataSource(DataSource dataSource);1498780456;Set the DataSource to be used by the SessionFactory._If set, this will override corresponding settings in Hibernate properties._<p>If this is set, the Hibernate settings should not define_a connection provider to avoid meaningless double configuration.;public void setDataSource(DataSource dataSource) {_		this.dataSource = dataSource__	};set,the,data,source,to,be,used,by,the,session,factory,if,set,this,will,override,corresponding,settings,in,hibernate,properties,p,if,this,is,set,the,hibernate,settings,should,not,define,a,connection,provider,to,avoid,meaningless,double,configuration;public,void,set,data,source,data,source,data,source,this,data,source,data,source
LocalSessionFactoryBean -> public void setDataSource(DataSource dataSource);1502974979;Set the DataSource to be used by the SessionFactory._If set, this will override corresponding settings in Hibernate properties._<p>If this is set, the Hibernate settings should not define_a connection provider to avoid meaningless double configuration.;public void setDataSource(DataSource dataSource) {_		this.dataSource = dataSource__	};set,the,data,source,to,be,used,by,the,session,factory,if,set,this,will,override,corresponding,settings,in,hibernate,properties,p,if,this,is,set,the,hibernate,settings,should,not,define,a,connection,provider,to,avoid,meaningless,double,configuration;public,void,set,data,source,data,source,data,source,this,data,source,data,source
LocalSessionFactoryBean -> public void setDataSource(DataSource dataSource);1530174524;Set the DataSource to be used by the SessionFactory._If set, this will override corresponding settings in Hibernate properties._<p>If this is set, the Hibernate settings should not define_a connection provider to avoid meaningless double configuration.;public void setDataSource(DataSource dataSource) {_		this.dataSource = dataSource__	};set,the,data,source,to,be,used,by,the,session,factory,if,set,this,will,override,corresponding,settings,in,hibernate,properties,p,if,this,is,set,the,hibernate,settings,should,not,define,a,connection,provider,to,avoid,meaningless,double,configuration;public,void,set,data,source,data,source,data,source,this,data,source,data,source
LocalSessionFactoryBean -> public void setDataSource(DataSource dataSource);1530188116;Set the DataSource to be used by the SessionFactory._If set, this will override corresponding settings in Hibernate properties._<p>If this is set, the Hibernate settings should not define_a connection provider to avoid meaningless double configuration.;public void setDataSource(DataSource dataSource) {_		this.dataSource = dataSource__	};set,the,data,source,to,be,used,by,the,session,factory,if,set,this,will,override,corresponding,settings,in,hibernate,properties,p,if,this,is,set,the,hibernate,settings,should,not,define,a,connection,provider,to,avoid,meaningless,double,configuration;public,void,set,data,source,data,source,data,source,this,data,source,data,source
LocalSessionFactoryBean -> public void setDataSource(DataSource dataSource);1530724999;Set the DataSource to be used by the SessionFactory._If set, this will override corresponding settings in Hibernate properties._<p>If this is set, the Hibernate settings should not define_a connection provider to avoid meaningless double configuration.;public void setDataSource(DataSource dataSource) {_		this.dataSource = dataSource__	};set,the,data,source,to,be,used,by,the,session,factory,if,set,this,will,override,corresponding,settings,in,hibernate,properties,p,if,this,is,set,the,hibernate,settings,should,not,define,a,connection,provider,to,avoid,meaningless,double,configuration;public,void,set,data,source,data,source,data,source,this,data,source,data,source
LocalSessionFactoryBean -> public void setDataSource(DataSource dataSource);1530802115;Set the DataSource to be used by the SessionFactory._If set, this will override corresponding settings in Hibernate properties._<p>If this is set, the Hibernate settings should not define_a connection provider to avoid meaningless double configuration.;public void setDataSource(DataSource dataSource) {_		this.dataSource = dataSource__	};set,the,data,source,to,be,used,by,the,session,factory,if,set,this,will,override,corresponding,settings,in,hibernate,properties,p,if,this,is,set,the,hibernate,settings,should,not,define,a,connection,provider,to,avoid,meaningless,double,configuration;public,void,set,data,source,data,source,data,source,this,data,source,data,source
LocalSessionFactoryBean -> public void setDataSource(DataSource dataSource);1531739026;Set the DataSource to be used by the SessionFactory._If set, this will override corresponding settings in Hibernate properties._<p>If this is set, the Hibernate settings should not define_a connection provider to avoid meaningless double configuration.;public void setDataSource(DataSource dataSource) {_		this.dataSource = dataSource__	};set,the,data,source,to,be,used,by,the,session,factory,if,set,this,will,override,corresponding,settings,in,hibernate,properties,p,if,this,is,set,the,hibernate,settings,should,not,define,a,connection,provider,to,avoid,meaningless,double,configuration;public,void,set,data,source,data,source,data,source,this,data,source,data,source
LocalSessionFactoryBean -> public void setCacheableMappingLocations(Resource... cacheableMappingLocations);1467668243;Set locations of cacheable Hibernate mapping files, for example as web app_resource "/WEB-INF/mapping/example.hbm.xml". Supports any resource location_via Spring's resource abstraction, as long as the resource can be resolved_in the file system._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addCacheableFile(File);public void setCacheableMappingLocations(Resource... cacheableMappingLocations) {_		this.cacheableMappingLocations = cacheableMappingLocations__	};set,locations,of,cacheable,hibernate,mapping,files,for,example,as,web,app,resource,web,inf,mapping,example,hbm,xml,supports,any,resource,location,via,spring,s,resource,abstraction,as,long,as,the,resource,can,be,resolved,in,the,file,system,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,cacheable,file,file;public,void,set,cacheable,mapping,locations,resource,cacheable,mapping,locations,this,cacheable,mapping,locations,cacheable,mapping,locations
LocalSessionFactoryBean -> public void setCacheableMappingLocations(Resource... cacheableMappingLocations);1477661704;Set locations of cacheable Hibernate mapping files, for example as web app_resource "/WEB-INF/mapping/example.hbm.xml". Supports any resource location_via Spring's resource abstraction, as long as the resource can be resolved_in the file system._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addCacheableFile(File);public void setCacheableMappingLocations(Resource... cacheableMappingLocations) {_		this.cacheableMappingLocations = cacheableMappingLocations__	};set,locations,of,cacheable,hibernate,mapping,files,for,example,as,web,app,resource,web,inf,mapping,example,hbm,xml,supports,any,resource,location,via,spring,s,resource,abstraction,as,long,as,the,resource,can,be,resolved,in,the,file,system,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,cacheable,file,file;public,void,set,cacheable,mapping,locations,resource,cacheable,mapping,locations,this,cacheable,mapping,locations,cacheable,mapping,locations
LocalSessionFactoryBean -> public void setCacheableMappingLocations(Resource... cacheableMappingLocations);1496259743;Set locations of cacheable Hibernate mapping files, for example as web app_resource "/WEB-INF/mapping/example.hbm.xml". Supports any resource location_via Spring's resource abstraction, as long as the resource can be resolved_in the file system._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addCacheableFile(File);public void setCacheableMappingLocations(Resource... cacheableMappingLocations) {_		this.cacheableMappingLocations = cacheableMappingLocations__	};set,locations,of,cacheable,hibernate,mapping,files,for,example,as,web,app,resource,web,inf,mapping,example,hbm,xml,supports,any,resource,location,via,spring,s,resource,abstraction,as,long,as,the,resource,can,be,resolved,in,the,file,system,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,cacheable,file,file;public,void,set,cacheable,mapping,locations,resource,cacheable,mapping,locations,this,cacheable,mapping,locations,cacheable,mapping,locations
LocalSessionFactoryBean -> public void setCacheableMappingLocations(Resource... cacheableMappingLocations);1498780456;Set locations of cacheable Hibernate mapping files, for example as web app_resource "/WEB-INF/mapping/example.hbm.xml". Supports any resource location_via Spring's resource abstraction, as long as the resource can be resolved_in the file system._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addCacheableFile(File);public void setCacheableMappingLocations(Resource... cacheableMappingLocations) {_		this.cacheableMappingLocations = cacheableMappingLocations__	};set,locations,of,cacheable,hibernate,mapping,files,for,example,as,web,app,resource,web,inf,mapping,example,hbm,xml,supports,any,resource,location,via,spring,s,resource,abstraction,as,long,as,the,resource,can,be,resolved,in,the,file,system,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,cacheable,file,file;public,void,set,cacheable,mapping,locations,resource,cacheable,mapping,locations,this,cacheable,mapping,locations,cacheable,mapping,locations
LocalSessionFactoryBean -> public void setCacheableMappingLocations(Resource... cacheableMappingLocations);1502974979;Set locations of cacheable Hibernate mapping files, for example as web app_resource "/WEB-INF/mapping/example.hbm.xml". Supports any resource location_via Spring's resource abstraction, as long as the resource can be resolved_in the file system._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addCacheableFile(File);public void setCacheableMappingLocations(Resource... cacheableMappingLocations) {_		this.cacheableMappingLocations = cacheableMappingLocations__	};set,locations,of,cacheable,hibernate,mapping,files,for,example,as,web,app,resource,web,inf,mapping,example,hbm,xml,supports,any,resource,location,via,spring,s,resource,abstraction,as,long,as,the,resource,can,be,resolved,in,the,file,system,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,cacheable,file,file;public,void,set,cacheable,mapping,locations,resource,cacheable,mapping,locations,this,cacheable,mapping,locations,cacheable,mapping,locations
LocalSessionFactoryBean -> public void setCacheableMappingLocations(Resource... cacheableMappingLocations);1530174524;Set locations of cacheable Hibernate mapping files, for example as web app_resource "/WEB-INF/mapping/example.hbm.xml". Supports any resource location_via Spring's resource abstraction, as long as the resource can be resolved_in the file system._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addCacheableFile(File);public void setCacheableMappingLocations(Resource... cacheableMappingLocations) {_		this.cacheableMappingLocations = cacheableMappingLocations__	};set,locations,of,cacheable,hibernate,mapping,files,for,example,as,web,app,resource,web,inf,mapping,example,hbm,xml,supports,any,resource,location,via,spring,s,resource,abstraction,as,long,as,the,resource,can,be,resolved,in,the,file,system,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,cacheable,file,file;public,void,set,cacheable,mapping,locations,resource,cacheable,mapping,locations,this,cacheable,mapping,locations,cacheable,mapping,locations
LocalSessionFactoryBean -> public void setCacheableMappingLocations(Resource... cacheableMappingLocations);1530188116;Set locations of cacheable Hibernate mapping files, for example as web app_resource "/WEB-INF/mapping/example.hbm.xml". Supports any resource location_via Spring's resource abstraction, as long as the resource can be resolved_in the file system._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addCacheableFile(File);public void setCacheableMappingLocations(Resource... cacheableMappingLocations) {_		this.cacheableMappingLocations = cacheableMappingLocations__	};set,locations,of,cacheable,hibernate,mapping,files,for,example,as,web,app,resource,web,inf,mapping,example,hbm,xml,supports,any,resource,location,via,spring,s,resource,abstraction,as,long,as,the,resource,can,be,resolved,in,the,file,system,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,cacheable,file,file;public,void,set,cacheable,mapping,locations,resource,cacheable,mapping,locations,this,cacheable,mapping,locations,cacheable,mapping,locations
LocalSessionFactoryBean -> public void setCacheableMappingLocations(Resource... cacheableMappingLocations);1530724999;Set locations of cacheable Hibernate mapping files, for example as web app_resource "/WEB-INF/mapping/example.hbm.xml". Supports any resource location_via Spring's resource abstraction, as long as the resource can be resolved_in the file system._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addCacheableFile(File);public void setCacheableMappingLocations(Resource... cacheableMappingLocations) {_		this.cacheableMappingLocations = cacheableMappingLocations__	};set,locations,of,cacheable,hibernate,mapping,files,for,example,as,web,app,resource,web,inf,mapping,example,hbm,xml,supports,any,resource,location,via,spring,s,resource,abstraction,as,long,as,the,resource,can,be,resolved,in,the,file,system,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,cacheable,file,file;public,void,set,cacheable,mapping,locations,resource,cacheable,mapping,locations,this,cacheable,mapping,locations,cacheable,mapping,locations
LocalSessionFactoryBean -> public void setCacheableMappingLocations(Resource... cacheableMappingLocations);1530802115;Set locations of cacheable Hibernate mapping files, for example as web app_resource "/WEB-INF/mapping/example.hbm.xml". Supports any resource location_via Spring's resource abstraction, as long as the resource can be resolved_in the file system._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addCacheableFile(File);public void setCacheableMappingLocations(Resource... cacheableMappingLocations) {_		this.cacheableMappingLocations = cacheableMappingLocations__	};set,locations,of,cacheable,hibernate,mapping,files,for,example,as,web,app,resource,web,inf,mapping,example,hbm,xml,supports,any,resource,location,via,spring,s,resource,abstraction,as,long,as,the,resource,can,be,resolved,in,the,file,system,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,cacheable,file,file;public,void,set,cacheable,mapping,locations,resource,cacheable,mapping,locations,this,cacheable,mapping,locations,cacheable,mapping,locations
LocalSessionFactoryBean -> public void setCacheableMappingLocations(Resource... cacheableMappingLocations);1531739026;Set locations of cacheable Hibernate mapping files, for example as web app_resource "/WEB-INF/mapping/example.hbm.xml". Supports any resource location_via Spring's resource abstraction, as long as the resource can be resolved_in the file system._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addCacheableFile(File);public void setCacheableMappingLocations(Resource... cacheableMappingLocations) {_		this.cacheableMappingLocations = cacheableMappingLocations__	};set,locations,of,cacheable,hibernate,mapping,files,for,example,as,web,app,resource,web,inf,mapping,example,hbm,xml,supports,any,resource,location,via,spring,s,resource,abstraction,as,long,as,the,resource,can,be,resolved,in,the,file,system,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,cacheable,file,file;public,void,set,cacheable,mapping,locations,resource,cacheable,mapping,locations,this,cacheable,mapping,locations,cacheable,mapping,locations
LocalSessionFactoryBean -> @Override 	public void setBeanFactory(BeanFactory beanFactory);1530724999;Accept the containing {@link BeanFactory}, registering corresponding Hibernate_{@link org.hibernate.resource.beans.container.spi.BeanContainer} integration for_it if possible. This requires a Spring {@link ConfigurableListableBeanFactory}_and Hibernate 5.3 or higher on the classpath._@since 5.1_@see LocalSessionFactoryBuilder#setBeanContainer;@Override_	public void setBeanFactory(BeanFactory beanFactory) {_		if (beanFactory instanceof ConfigurableListableBeanFactory &&_				ClassUtils.isPresent("org.hibernate.resource.beans.container.spi.BeanContainer",_						getClass().getClassLoader())) {_			this.beanFactory = (ConfigurableListableBeanFactory) beanFactory__		}_	};accept,the,containing,link,bean,factory,registering,corresponding,hibernate,link,org,hibernate,resource,beans,container,spi,bean,container,integration,for,it,if,possible,this,requires,a,spring,link,configurable,listable,bean,factory,and,hibernate,5,3,or,higher,on,the,classpath,since,5,1,see,local,session,factory,builder,set,bean,container;override,public,void,set,bean,factory,bean,factory,bean,factory,if,bean,factory,instanceof,configurable,listable,bean,factory,class,utils,is,present,org,hibernate,resource,beans,container,spi,bean,container,get,class,get,class,loader,this,bean,factory,configurable,listable,bean,factory,bean,factory
LocalSessionFactoryBean -> @Override 	public void setBeanFactory(BeanFactory beanFactory);1530802115;Accept the containing {@link BeanFactory}, registering corresponding Hibernate_{@link org.hibernate.resource.beans.container.spi.BeanContainer} integration for_it if possible. This requires a Spring {@link ConfigurableListableBeanFactory}_and Hibernate 5.3 or higher on the classpath._@since 5.1_@see SpringBeanContainer_@see LocalSessionFactoryBuilder#setBeanContainer;@Override_	public void setBeanFactory(BeanFactory beanFactory) {_		if (beanFactory instanceof ConfigurableListableBeanFactory &&_				ClassUtils.isPresent("org.hibernate.resource.beans.container.spi.BeanContainer",_						getClass().getClassLoader())) {_			this.beanFactory = (ConfigurableListableBeanFactory) beanFactory__		}_	};accept,the,containing,link,bean,factory,registering,corresponding,hibernate,link,org,hibernate,resource,beans,container,spi,bean,container,integration,for,it,if,possible,this,requires,a,spring,link,configurable,listable,bean,factory,and,hibernate,5,3,or,higher,on,the,classpath,since,5,1,see,spring,bean,container,see,local,session,factory,builder,set,bean,container;override,public,void,set,bean,factory,bean,factory,bean,factory,if,bean,factory,instanceof,configurable,listable,bean,factory,class,utils,is,present,org,hibernate,resource,beans,container,spi,bean,container,get,class,get,class,loader,this,bean,factory,configurable,listable,bean,factory,bean,factory
LocalSessionFactoryBean -> @Override 	public void setBeanFactory(BeanFactory beanFactory);1531739026;Accept the containing {@link BeanFactory}, registering corresponding Hibernate_{@link org.hibernate.resource.beans.container.spi.BeanContainer} integration for_it if possible. This requires a Spring {@link ConfigurableListableBeanFactory}_and Hibernate 5.3 or higher on the classpath._@since 5.1_@see SpringBeanContainer_@see LocalSessionFactoryBuilder#setBeanContainer;@Override_	public void setBeanFactory(BeanFactory beanFactory) {_		if (beanFactory instanceof ConfigurableListableBeanFactory &&_				ClassUtils.isPresent("org.hibernate.resource.beans.container.spi.BeanContainer",_						getClass().getClassLoader())) {_			this.beanFactory = (ConfigurableListableBeanFactory) beanFactory__		}_	};accept,the,containing,link,bean,factory,registering,corresponding,hibernate,link,org,hibernate,resource,beans,container,spi,bean,container,integration,for,it,if,possible,this,requires,a,spring,link,configurable,listable,bean,factory,and,hibernate,5,3,or,higher,on,the,classpath,since,5,1,see,spring,bean,container,see,local,session,factory,builder,set,bean,container;override,public,void,set,bean,factory,bean,factory,bean,factory,if,bean,factory,instanceof,configurable,listable,bean,factory,class,utils,is,present,org,hibernate,resource,beans,container,spi,bean,container,get,class,get,class,loader,this,bean,factory,configurable,listable,bean,factory,bean,factory
LocalSessionFactoryBean -> public void setBootstrapExecutor(AsyncTaskExecutor bootstrapExecutor);1467668243;Specify an asynchronous executor for background bootstrapping,_e.g. a {@link org.springframework.core.task.SimpleAsyncTaskExecutor}._<p>{@code SessionFactory} initialization will then switch into background_bootstrap mode, with a {@code SessionFactory} proxy immediately returned for_injection purposes instead of waiting for Hibernate's bootstrapping to complete._However, note that the first actual call to a {@code SessionFactory} method will_then block until Hibernate's bootstrapping completed, if not ready by then._For maximum benefit, make sure to avoid early {@code SessionFactory} calls_in init methods of related beans, even for metadata introspection purposes._@see LocalSessionFactoryBuilder#buildSessionFactory(AsyncTaskExecutor)_@since 4.3;public void setBootstrapExecutor(AsyncTaskExecutor bootstrapExecutor) {_		this.bootstrapExecutor = bootstrapExecutor__	};specify,an,asynchronous,executor,for,background,bootstrapping,e,g,a,link,org,springframework,core,task,simple,async,task,executor,p,code,session,factory,initialization,will,then,switch,into,background,bootstrap,mode,with,a,code,session,factory,proxy,immediately,returned,for,injection,purposes,instead,of,waiting,for,hibernate,s,bootstrapping,to,complete,however,note,that,the,first,actual,call,to,a,code,session,factory,method,will,then,block,until,hibernate,s,bootstrapping,completed,if,not,ready,by,then,for,maximum,benefit,make,sure,to,avoid,early,code,session,factory,calls,in,init,methods,of,related,beans,even,for,metadata,introspection,purposes,see,local,session,factory,builder,build,session,factory,async,task,executor,since,4,3;public,void,set,bootstrap,executor,async,task,executor,bootstrap,executor,this,bootstrap,executor,bootstrap,executor
LocalSessionFactoryBean -> public void setBootstrapExecutor(AsyncTaskExecutor bootstrapExecutor);1477661704;Specify an asynchronous executor for background bootstrapping,_e.g. a {@link org.springframework.core.task.SimpleAsyncTaskExecutor}._<p>{@code SessionFactory} initialization will then switch into background_bootstrap mode, with a {@code SessionFactory} proxy immediately returned for_injection purposes instead of waiting for Hibernate's bootstrapping to complete._However, note that the first actual call to a {@code SessionFactory} method will_then block until Hibernate's bootstrapping completed, if not ready by then._For maximum benefit, make sure to avoid early {@code SessionFactory} calls_in init methods of related beans, even for metadata introspection purposes._@see LocalSessionFactoryBuilder#buildSessionFactory(AsyncTaskExecutor)_@since 4.3;public void setBootstrapExecutor(AsyncTaskExecutor bootstrapExecutor) {_		this.bootstrapExecutor = bootstrapExecutor__	};specify,an,asynchronous,executor,for,background,bootstrapping,e,g,a,link,org,springframework,core,task,simple,async,task,executor,p,code,session,factory,initialization,will,then,switch,into,background,bootstrap,mode,with,a,code,session,factory,proxy,immediately,returned,for,injection,purposes,instead,of,waiting,for,hibernate,s,bootstrapping,to,complete,however,note,that,the,first,actual,call,to,a,code,session,factory,method,will,then,block,until,hibernate,s,bootstrapping,completed,if,not,ready,by,then,for,maximum,benefit,make,sure,to,avoid,early,code,session,factory,calls,in,init,methods,of,related,beans,even,for,metadata,introspection,purposes,see,local,session,factory,builder,build,session,factory,async,task,executor,since,4,3;public,void,set,bootstrap,executor,async,task,executor,bootstrap,executor,this,bootstrap,executor,bootstrap,executor
LocalSessionFactoryBean -> public void setBootstrapExecutor(AsyncTaskExecutor bootstrapExecutor);1496259743;Specify an asynchronous executor for background bootstrapping,_e.g. a {@link org.springframework.core.task.SimpleAsyncTaskExecutor}._<p>{@code SessionFactory} initialization will then switch into background_bootstrap mode, with a {@code SessionFactory} proxy immediately returned for_injection purposes instead of waiting for Hibernate's bootstrapping to complete._However, note that the first actual call to a {@code SessionFactory} method will_then block until Hibernate's bootstrapping completed, if not ready by then._For maximum benefit, make sure to avoid early {@code SessionFactory} calls_in init methods of related beans, even for metadata introspection purposes._@see LocalSessionFactoryBuilder#buildSessionFactory(AsyncTaskExecutor)_@since 4.3;public void setBootstrapExecutor(AsyncTaskExecutor bootstrapExecutor) {_		this.bootstrapExecutor = bootstrapExecutor__	};specify,an,asynchronous,executor,for,background,bootstrapping,e,g,a,link,org,springframework,core,task,simple,async,task,executor,p,code,session,factory,initialization,will,then,switch,into,background,bootstrap,mode,with,a,code,session,factory,proxy,immediately,returned,for,injection,purposes,instead,of,waiting,for,hibernate,s,bootstrapping,to,complete,however,note,that,the,first,actual,call,to,a,code,session,factory,method,will,then,block,until,hibernate,s,bootstrapping,completed,if,not,ready,by,then,for,maximum,benefit,make,sure,to,avoid,early,code,session,factory,calls,in,init,methods,of,related,beans,even,for,metadata,introspection,purposes,see,local,session,factory,builder,build,session,factory,async,task,executor,since,4,3;public,void,set,bootstrap,executor,async,task,executor,bootstrap,executor,this,bootstrap,executor,bootstrap,executor
LocalSessionFactoryBean -> public void setBootstrapExecutor(AsyncTaskExecutor bootstrapExecutor);1498780456;Specify an asynchronous executor for background bootstrapping,_e.g. a {@link org.springframework.core.task.SimpleAsyncTaskExecutor}._<p>{@code SessionFactory} initialization will then switch into background_bootstrap mode, with a {@code SessionFactory} proxy immediately returned for_injection purposes instead of waiting for Hibernate's bootstrapping to complete._However, note that the first actual call to a {@code SessionFactory} method will_then block until Hibernate's bootstrapping completed, if not ready by then._For maximum benefit, make sure to avoid early {@code SessionFactory} calls_in init methods of related beans, even for metadata introspection purposes._@see LocalSessionFactoryBuilder#buildSessionFactory(AsyncTaskExecutor)_@since 4.3;public void setBootstrapExecutor(AsyncTaskExecutor bootstrapExecutor) {_		this.bootstrapExecutor = bootstrapExecutor__	};specify,an,asynchronous,executor,for,background,bootstrapping,e,g,a,link,org,springframework,core,task,simple,async,task,executor,p,code,session,factory,initialization,will,then,switch,into,background,bootstrap,mode,with,a,code,session,factory,proxy,immediately,returned,for,injection,purposes,instead,of,waiting,for,hibernate,s,bootstrapping,to,complete,however,note,that,the,first,actual,call,to,a,code,session,factory,method,will,then,block,until,hibernate,s,bootstrapping,completed,if,not,ready,by,then,for,maximum,benefit,make,sure,to,avoid,early,code,session,factory,calls,in,init,methods,of,related,beans,even,for,metadata,introspection,purposes,see,local,session,factory,builder,build,session,factory,async,task,executor,since,4,3;public,void,set,bootstrap,executor,async,task,executor,bootstrap,executor,this,bootstrap,executor,bootstrap,executor
LocalSessionFactoryBean -> public void setBootstrapExecutor(AsyncTaskExecutor bootstrapExecutor);1502974979;Specify an asynchronous executor for background bootstrapping,_e.g. a {@link org.springframework.core.task.SimpleAsyncTaskExecutor}._<p>{@code SessionFactory} initialization will then switch into background_bootstrap mode, with a {@code SessionFactory} proxy immediately returned for_injection purposes instead of waiting for Hibernate's bootstrapping to complete._However, note that the first actual call to a {@code SessionFactory} method will_then block until Hibernate's bootstrapping completed, if not ready by then._For maximum benefit, make sure to avoid early {@code SessionFactory} calls_in init methods of related beans, even for metadata introspection purposes._@see LocalSessionFactoryBuilder#buildSessionFactory(AsyncTaskExecutor)_@since 4.3;public void setBootstrapExecutor(AsyncTaskExecutor bootstrapExecutor) {_		this.bootstrapExecutor = bootstrapExecutor__	};specify,an,asynchronous,executor,for,background,bootstrapping,e,g,a,link,org,springframework,core,task,simple,async,task,executor,p,code,session,factory,initialization,will,then,switch,into,background,bootstrap,mode,with,a,code,session,factory,proxy,immediately,returned,for,injection,purposes,instead,of,waiting,for,hibernate,s,bootstrapping,to,complete,however,note,that,the,first,actual,call,to,a,code,session,factory,method,will,then,block,until,hibernate,s,bootstrapping,completed,if,not,ready,by,then,for,maximum,benefit,make,sure,to,avoid,early,code,session,factory,calls,in,init,methods,of,related,beans,even,for,metadata,introspection,purposes,see,local,session,factory,builder,build,session,factory,async,task,executor,since,4,3;public,void,set,bootstrap,executor,async,task,executor,bootstrap,executor,this,bootstrap,executor,bootstrap,executor
LocalSessionFactoryBean -> public void setBootstrapExecutor(AsyncTaskExecutor bootstrapExecutor);1530174524;Specify an asynchronous executor for background bootstrapping,_e.g. a {@link org.springframework.core.task.SimpleAsyncTaskExecutor}._<p>{@code SessionFactory} initialization will then switch into background_bootstrap mode, with a {@code SessionFactory} proxy immediately returned for_injection purposes instead of waiting for Hibernate's bootstrapping to complete._However, note that the first actual call to a {@code SessionFactory} method will_then block until Hibernate's bootstrapping completed, if not ready by then._For maximum benefit, make sure to avoid early {@code SessionFactory} calls_in init methods of related beans, even for metadata introspection purposes._@since 4.3_@see LocalSessionFactoryBuilder#buildSessionFactory(AsyncTaskExecutor);public void setBootstrapExecutor(AsyncTaskExecutor bootstrapExecutor) {_		this.bootstrapExecutor = bootstrapExecutor__	};specify,an,asynchronous,executor,for,background,bootstrapping,e,g,a,link,org,springframework,core,task,simple,async,task,executor,p,code,session,factory,initialization,will,then,switch,into,background,bootstrap,mode,with,a,code,session,factory,proxy,immediately,returned,for,injection,purposes,instead,of,waiting,for,hibernate,s,bootstrapping,to,complete,however,note,that,the,first,actual,call,to,a,code,session,factory,method,will,then,block,until,hibernate,s,bootstrapping,completed,if,not,ready,by,then,for,maximum,benefit,make,sure,to,avoid,early,code,session,factory,calls,in,init,methods,of,related,beans,even,for,metadata,introspection,purposes,since,4,3,see,local,session,factory,builder,build,session,factory,async,task,executor;public,void,set,bootstrap,executor,async,task,executor,bootstrap,executor,this,bootstrap,executor,bootstrap,executor
LocalSessionFactoryBean -> public void setBootstrapExecutor(AsyncTaskExecutor bootstrapExecutor);1530188116;Specify an asynchronous executor for background bootstrapping,_e.g. a {@link org.springframework.core.task.SimpleAsyncTaskExecutor}._<p>{@code SessionFactory} initialization will then switch into background_bootstrap mode, with a {@code SessionFactory} proxy immediately returned for_injection purposes instead of waiting for Hibernate's bootstrapping to complete._However, note that the first actual call to a {@code SessionFactory} method will_then block until Hibernate's bootstrapping completed, if not ready by then._For maximum benefit, make sure to avoid early {@code SessionFactory} calls_in init methods of related beans, even for metadata introspection purposes._@since 4.3_@see LocalSessionFactoryBuilder#buildSessionFactory(AsyncTaskExecutor);public void setBootstrapExecutor(AsyncTaskExecutor bootstrapExecutor) {_		this.bootstrapExecutor = bootstrapExecutor__	};specify,an,asynchronous,executor,for,background,bootstrapping,e,g,a,link,org,springframework,core,task,simple,async,task,executor,p,code,session,factory,initialization,will,then,switch,into,background,bootstrap,mode,with,a,code,session,factory,proxy,immediately,returned,for,injection,purposes,instead,of,waiting,for,hibernate,s,bootstrapping,to,complete,however,note,that,the,first,actual,call,to,a,code,session,factory,method,will,then,block,until,hibernate,s,bootstrapping,completed,if,not,ready,by,then,for,maximum,benefit,make,sure,to,avoid,early,code,session,factory,calls,in,init,methods,of,related,beans,even,for,metadata,introspection,purposes,since,4,3,see,local,session,factory,builder,build,session,factory,async,task,executor;public,void,set,bootstrap,executor,async,task,executor,bootstrap,executor,this,bootstrap,executor,bootstrap,executor
LocalSessionFactoryBean -> public void setBootstrapExecutor(AsyncTaskExecutor bootstrapExecutor);1530724999;Specify an asynchronous executor for background bootstrapping,_e.g. a {@link org.springframework.core.task.SimpleAsyncTaskExecutor}._<p>{@code SessionFactory} initialization will then switch into background_bootstrap mode, with a {@code SessionFactory} proxy immediately returned for_injection purposes instead of waiting for Hibernate's bootstrapping to complete._However, note that the first actual call to a {@code SessionFactory} method will_then block until Hibernate's bootstrapping completed, if not ready by then._For maximum benefit, make sure to avoid early {@code SessionFactory} calls_in init methods of related beans, even for metadata introspection purposes._@since 4.3_@see LocalSessionFactoryBuilder#buildSessionFactory(AsyncTaskExecutor);public void setBootstrapExecutor(AsyncTaskExecutor bootstrapExecutor) {_		this.bootstrapExecutor = bootstrapExecutor__	};specify,an,asynchronous,executor,for,background,bootstrapping,e,g,a,link,org,springframework,core,task,simple,async,task,executor,p,code,session,factory,initialization,will,then,switch,into,background,bootstrap,mode,with,a,code,session,factory,proxy,immediately,returned,for,injection,purposes,instead,of,waiting,for,hibernate,s,bootstrapping,to,complete,however,note,that,the,first,actual,call,to,a,code,session,factory,method,will,then,block,until,hibernate,s,bootstrapping,completed,if,not,ready,by,then,for,maximum,benefit,make,sure,to,avoid,early,code,session,factory,calls,in,init,methods,of,related,beans,even,for,metadata,introspection,purposes,since,4,3,see,local,session,factory,builder,build,session,factory,async,task,executor;public,void,set,bootstrap,executor,async,task,executor,bootstrap,executor,this,bootstrap,executor,bootstrap,executor
LocalSessionFactoryBean -> public void setBootstrapExecutor(AsyncTaskExecutor bootstrapExecutor);1530802115;Specify an asynchronous executor for background bootstrapping,_e.g. a {@link org.springframework.core.task.SimpleAsyncTaskExecutor}._<p>{@code SessionFactory} initialization will then switch into background_bootstrap mode, with a {@code SessionFactory} proxy immediately returned for_injection purposes instead of waiting for Hibernate's bootstrapping to complete._However, note that the first actual call to a {@code SessionFactory} method will_then block until Hibernate's bootstrapping completed, if not ready by then._For maximum benefit, make sure to avoid early {@code SessionFactory} calls_in init methods of related beans, even for metadata introspection purposes._@since 4.3_@see LocalSessionFactoryBuilder#buildSessionFactory(AsyncTaskExecutor);public void setBootstrapExecutor(AsyncTaskExecutor bootstrapExecutor) {_		this.bootstrapExecutor = bootstrapExecutor__	};specify,an,asynchronous,executor,for,background,bootstrapping,e,g,a,link,org,springframework,core,task,simple,async,task,executor,p,code,session,factory,initialization,will,then,switch,into,background,bootstrap,mode,with,a,code,session,factory,proxy,immediately,returned,for,injection,purposes,instead,of,waiting,for,hibernate,s,bootstrapping,to,complete,however,note,that,the,first,actual,call,to,a,code,session,factory,method,will,then,block,until,hibernate,s,bootstrapping,completed,if,not,ready,by,then,for,maximum,benefit,make,sure,to,avoid,early,code,session,factory,calls,in,init,methods,of,related,beans,even,for,metadata,introspection,purposes,since,4,3,see,local,session,factory,builder,build,session,factory,async,task,executor;public,void,set,bootstrap,executor,async,task,executor,bootstrap,executor,this,bootstrap,executor,bootstrap,executor
LocalSessionFactoryBean -> public void setBootstrapExecutor(AsyncTaskExecutor bootstrapExecutor);1531739026;Specify an asynchronous executor for background bootstrapping,_e.g. a {@link org.springframework.core.task.SimpleAsyncTaskExecutor}._<p>{@code SessionFactory} initialization will then switch into background_bootstrap mode, with a {@code SessionFactory} proxy immediately returned for_injection purposes instead of waiting for Hibernate's bootstrapping to complete._However, note that the first actual call to a {@code SessionFactory} method will_then block until Hibernate's bootstrapping completed, if not ready by then._For maximum benefit, make sure to avoid early {@code SessionFactory} calls_in init methods of related beans, even for metadata introspection purposes._@since 4.3_@see LocalSessionFactoryBuilder#buildSessionFactory(AsyncTaskExecutor);public void setBootstrapExecutor(AsyncTaskExecutor bootstrapExecutor) {_		this.bootstrapExecutor = bootstrapExecutor__	};specify,an,asynchronous,executor,for,background,bootstrapping,e,g,a,link,org,springframework,core,task,simple,async,task,executor,p,code,session,factory,initialization,will,then,switch,into,background,bootstrap,mode,with,a,code,session,factory,proxy,immediately,returned,for,injection,purposes,instead,of,waiting,for,hibernate,s,bootstrapping,to,complete,however,note,that,the,first,actual,call,to,a,code,session,factory,method,will,then,block,until,hibernate,s,bootstrapping,completed,if,not,ready,by,then,for,maximum,benefit,make,sure,to,avoid,early,code,session,factory,calls,in,init,methods,of,related,beans,even,for,metadata,introspection,purposes,since,4,3,see,local,session,factory,builder,build,session,factory,async,task,executor;public,void,set,bootstrap,executor,async,task,executor,bootstrap,executor,this,bootstrap,executor,bootstrap,executor
LocalSessionFactoryBean -> public void setMappingLocations(Resource... mappingLocations);1467668243;Set locations of Hibernate mapping files, for example as classpath_resource "classpath:example.hbm.xml". Supports any resource location_via Spring's resource abstraction, for example relative paths like_"WEB-INF/mappings/example.hbm.xml" when running in an application context._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addInputStream;public void setMappingLocations(Resource... mappingLocations) {_		this.mappingLocations = mappingLocations__	};set,locations,of,hibernate,mapping,files,for,example,as,classpath,resource,classpath,example,hbm,xml,supports,any,resource,location,via,spring,s,resource,abstraction,for,example,relative,paths,like,web,inf,mappings,example,hbm,xml,when,running,in,an,application,context,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,input,stream;public,void,set,mapping,locations,resource,mapping,locations,this,mapping,locations,mapping,locations
LocalSessionFactoryBean -> public void setMappingLocations(Resource... mappingLocations);1477661704;Set locations of Hibernate mapping files, for example as classpath_resource "classpath:example.hbm.xml". Supports any resource location_via Spring's resource abstraction, for example relative paths like_"WEB-INF/mappings/example.hbm.xml" when running in an application context._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addInputStream;public void setMappingLocations(Resource... mappingLocations) {_		this.mappingLocations = mappingLocations__	};set,locations,of,hibernate,mapping,files,for,example,as,classpath,resource,classpath,example,hbm,xml,supports,any,resource,location,via,spring,s,resource,abstraction,for,example,relative,paths,like,web,inf,mappings,example,hbm,xml,when,running,in,an,application,context,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,input,stream;public,void,set,mapping,locations,resource,mapping,locations,this,mapping,locations,mapping,locations
LocalSessionFactoryBean -> public void setMappingLocations(Resource... mappingLocations);1496259743;Set locations of Hibernate mapping files, for example as classpath_resource "classpath:example.hbm.xml". Supports any resource location_via Spring's resource abstraction, for example relative paths like_"WEB-INF/mappings/example.hbm.xml" when running in an application context._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addInputStream;public void setMappingLocations(Resource... mappingLocations) {_		this.mappingLocations = mappingLocations__	};set,locations,of,hibernate,mapping,files,for,example,as,classpath,resource,classpath,example,hbm,xml,supports,any,resource,location,via,spring,s,resource,abstraction,for,example,relative,paths,like,web,inf,mappings,example,hbm,xml,when,running,in,an,application,context,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,input,stream;public,void,set,mapping,locations,resource,mapping,locations,this,mapping,locations,mapping,locations
LocalSessionFactoryBean -> public void setMappingLocations(Resource... mappingLocations);1498780456;Set locations of Hibernate mapping files, for example as classpath_resource "classpath:example.hbm.xml". Supports any resource location_via Spring's resource abstraction, for example relative paths like_"WEB-INF/mappings/example.hbm.xml" when running in an application context._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addInputStream;public void setMappingLocations(Resource... mappingLocations) {_		this.mappingLocations = mappingLocations__	};set,locations,of,hibernate,mapping,files,for,example,as,classpath,resource,classpath,example,hbm,xml,supports,any,resource,location,via,spring,s,resource,abstraction,for,example,relative,paths,like,web,inf,mappings,example,hbm,xml,when,running,in,an,application,context,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,input,stream;public,void,set,mapping,locations,resource,mapping,locations,this,mapping,locations,mapping,locations
LocalSessionFactoryBean -> public void setMappingLocations(Resource... mappingLocations);1502974979;Set locations of Hibernate mapping files, for example as classpath_resource "classpath:example.hbm.xml". Supports any resource location_via Spring's resource abstraction, for example relative paths like_"WEB-INF/mappings/example.hbm.xml" when running in an application context._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addInputStream;public void setMappingLocations(Resource... mappingLocations) {_		this.mappingLocations = mappingLocations__	};set,locations,of,hibernate,mapping,files,for,example,as,classpath,resource,classpath,example,hbm,xml,supports,any,resource,location,via,spring,s,resource,abstraction,for,example,relative,paths,like,web,inf,mappings,example,hbm,xml,when,running,in,an,application,context,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,input,stream;public,void,set,mapping,locations,resource,mapping,locations,this,mapping,locations,mapping,locations
LocalSessionFactoryBean -> public void setMappingLocations(Resource... mappingLocations);1530174524;Set locations of Hibernate mapping files, for example as classpath_resource "classpath:example.hbm.xml". Supports any resource location_via Spring's resource abstraction, for example relative paths like_"WEB-INF/mappings/example.hbm.xml" when running in an application context._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addInputStream;public void setMappingLocations(Resource... mappingLocations) {_		this.mappingLocations = mappingLocations__	};set,locations,of,hibernate,mapping,files,for,example,as,classpath,resource,classpath,example,hbm,xml,supports,any,resource,location,via,spring,s,resource,abstraction,for,example,relative,paths,like,web,inf,mappings,example,hbm,xml,when,running,in,an,application,context,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,input,stream;public,void,set,mapping,locations,resource,mapping,locations,this,mapping,locations,mapping,locations
LocalSessionFactoryBean -> public void setMappingLocations(Resource... mappingLocations);1530188116;Set locations of Hibernate mapping files, for example as classpath_resource "classpath:example.hbm.xml". Supports any resource location_via Spring's resource abstraction, for example relative paths like_"WEB-INF/mappings/example.hbm.xml" when running in an application context._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addInputStream;public void setMappingLocations(Resource... mappingLocations) {_		this.mappingLocations = mappingLocations__	};set,locations,of,hibernate,mapping,files,for,example,as,classpath,resource,classpath,example,hbm,xml,supports,any,resource,location,via,spring,s,resource,abstraction,for,example,relative,paths,like,web,inf,mappings,example,hbm,xml,when,running,in,an,application,context,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,input,stream;public,void,set,mapping,locations,resource,mapping,locations,this,mapping,locations,mapping,locations
LocalSessionFactoryBean -> public void setMappingLocations(Resource... mappingLocations);1530724999;Set locations of Hibernate mapping files, for example as classpath_resource "classpath:example.hbm.xml". Supports any resource location_via Spring's resource abstraction, for example relative paths like_"WEB-INF/mappings/example.hbm.xml" when running in an application context._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addInputStream;public void setMappingLocations(Resource... mappingLocations) {_		this.mappingLocations = mappingLocations__	};set,locations,of,hibernate,mapping,files,for,example,as,classpath,resource,classpath,example,hbm,xml,supports,any,resource,location,via,spring,s,resource,abstraction,for,example,relative,paths,like,web,inf,mappings,example,hbm,xml,when,running,in,an,application,context,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,input,stream;public,void,set,mapping,locations,resource,mapping,locations,this,mapping,locations,mapping,locations
LocalSessionFactoryBean -> public void setMappingLocations(Resource... mappingLocations);1530802115;Set locations of Hibernate mapping files, for example as classpath_resource "classpath:example.hbm.xml". Supports any resource location_via Spring's resource abstraction, for example relative paths like_"WEB-INF/mappings/example.hbm.xml" when running in an application context._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addInputStream;public void setMappingLocations(Resource... mappingLocations) {_		this.mappingLocations = mappingLocations__	};set,locations,of,hibernate,mapping,files,for,example,as,classpath,resource,classpath,example,hbm,xml,supports,any,resource,location,via,spring,s,resource,abstraction,for,example,relative,paths,like,web,inf,mappings,example,hbm,xml,when,running,in,an,application,context,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,input,stream;public,void,set,mapping,locations,resource,mapping,locations,this,mapping,locations,mapping,locations
LocalSessionFactoryBean -> public void setMappingLocations(Resource... mappingLocations);1531739026;Set locations of Hibernate mapping files, for example as classpath_resource "classpath:example.hbm.xml". Supports any resource location_via Spring's resource abstraction, for example relative paths like_"WEB-INF/mappings/example.hbm.xml" when running in an application context._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addInputStream;public void setMappingLocations(Resource... mappingLocations) {_		this.mappingLocations = mappingLocations__	};set,locations,of,hibernate,mapping,files,for,example,as,classpath,resource,classpath,example,hbm,xml,supports,any,resource,location,via,spring,s,resource,abstraction,for,example,relative,paths,like,web,inf,mappings,example,hbm,xml,when,running,in,an,application,context,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,input,stream;public,void,set,mapping,locations,resource,mapping,locations,this,mapping,locations,mapping,locations
LocalSessionFactoryBean -> public void setCurrentTenantIdentifierResolver(CurrentTenantIdentifierResolver currentTenantIdentifierResolver);1467668243;Set a {@link CurrentTenantIdentifierResolver} to be passed on to the SessionFactory._@see LocalSessionFactoryBuilder#setCurrentTenantIdentifierResolver;public void setCurrentTenantIdentifierResolver(CurrentTenantIdentifierResolver currentTenantIdentifierResolver) {_		this.currentTenantIdentifierResolver = currentTenantIdentifierResolver__	};set,a,link,current,tenant,identifier,resolver,to,be,passed,on,to,the,session,factory,see,local,session,factory,builder,set,current,tenant,identifier,resolver;public,void,set,current,tenant,identifier,resolver,current,tenant,identifier,resolver,current,tenant,identifier,resolver,this,current,tenant,identifier,resolver,current,tenant,identifier,resolver
LocalSessionFactoryBean -> public void setCurrentTenantIdentifierResolver(CurrentTenantIdentifierResolver currentTenantIdentifierResolver);1477661704;Set a {@link CurrentTenantIdentifierResolver} to be passed on to the SessionFactory._@see LocalSessionFactoryBuilder#setCurrentTenantIdentifierResolver;public void setCurrentTenantIdentifierResolver(CurrentTenantIdentifierResolver currentTenantIdentifierResolver) {_		this.currentTenantIdentifierResolver = currentTenantIdentifierResolver__	};set,a,link,current,tenant,identifier,resolver,to,be,passed,on,to,the,session,factory,see,local,session,factory,builder,set,current,tenant,identifier,resolver;public,void,set,current,tenant,identifier,resolver,current,tenant,identifier,resolver,current,tenant,identifier,resolver,this,current,tenant,identifier,resolver,current,tenant,identifier,resolver
LocalSessionFactoryBean -> public void setCurrentTenantIdentifierResolver(CurrentTenantIdentifierResolver currentTenantIdentifierResolver);1496259743;Set a {@link CurrentTenantIdentifierResolver} to be passed on to the SessionFactory._@see LocalSessionFactoryBuilder#setCurrentTenantIdentifierResolver;public void setCurrentTenantIdentifierResolver(CurrentTenantIdentifierResolver currentTenantIdentifierResolver) {_		this.currentTenantIdentifierResolver = currentTenantIdentifierResolver__	};set,a,link,current,tenant,identifier,resolver,to,be,passed,on,to,the,session,factory,see,local,session,factory,builder,set,current,tenant,identifier,resolver;public,void,set,current,tenant,identifier,resolver,current,tenant,identifier,resolver,current,tenant,identifier,resolver,this,current,tenant,identifier,resolver,current,tenant,identifier,resolver
LocalSessionFactoryBean -> public void setCurrentTenantIdentifierResolver(CurrentTenantIdentifierResolver currentTenantIdentifierResolver);1498780456;Set a {@link CurrentTenantIdentifierResolver} to be passed on to the SessionFactory._@see LocalSessionFactoryBuilder#setCurrentTenantIdentifierResolver;public void setCurrentTenantIdentifierResolver(CurrentTenantIdentifierResolver currentTenantIdentifierResolver) {_		this.currentTenantIdentifierResolver = currentTenantIdentifierResolver__	};set,a,link,current,tenant,identifier,resolver,to,be,passed,on,to,the,session,factory,see,local,session,factory,builder,set,current,tenant,identifier,resolver;public,void,set,current,tenant,identifier,resolver,current,tenant,identifier,resolver,current,tenant,identifier,resolver,this,current,tenant,identifier,resolver,current,tenant,identifier,resolver
LocalSessionFactoryBean -> public void setCurrentTenantIdentifierResolver(CurrentTenantIdentifierResolver currentTenantIdentifierResolver);1502974979;Set a {@link CurrentTenantIdentifierResolver} to be passed on to the SessionFactory._@see LocalSessionFactoryBuilder#setCurrentTenantIdentifierResolver;public void setCurrentTenantIdentifierResolver(CurrentTenantIdentifierResolver currentTenantIdentifierResolver) {_		this.currentTenantIdentifierResolver = currentTenantIdentifierResolver__	};set,a,link,current,tenant,identifier,resolver,to,be,passed,on,to,the,session,factory,see,local,session,factory,builder,set,current,tenant,identifier,resolver;public,void,set,current,tenant,identifier,resolver,current,tenant,identifier,resolver,current,tenant,identifier,resolver,this,current,tenant,identifier,resolver,current,tenant,identifier,resolver
LocalSessionFactoryBean -> public void setCurrentTenantIdentifierResolver(CurrentTenantIdentifierResolver currentTenantIdentifierResolver);1530174524;Set a {@link CurrentTenantIdentifierResolver} to be passed on to the SessionFactory._@see LocalSessionFactoryBuilder#setCurrentTenantIdentifierResolver;public void setCurrentTenantIdentifierResolver(CurrentTenantIdentifierResolver currentTenantIdentifierResolver) {_		this.currentTenantIdentifierResolver = currentTenantIdentifierResolver__	};set,a,link,current,tenant,identifier,resolver,to,be,passed,on,to,the,session,factory,see,local,session,factory,builder,set,current,tenant,identifier,resolver;public,void,set,current,tenant,identifier,resolver,current,tenant,identifier,resolver,current,tenant,identifier,resolver,this,current,tenant,identifier,resolver,current,tenant,identifier,resolver
LocalSessionFactoryBean -> public void setCurrentTenantIdentifierResolver(CurrentTenantIdentifierResolver currentTenantIdentifierResolver);1530188116;Set a {@link CurrentTenantIdentifierResolver} to be passed on to the SessionFactory._@see LocalSessionFactoryBuilder#setCurrentTenantIdentifierResolver;public void setCurrentTenantIdentifierResolver(CurrentTenantIdentifierResolver currentTenantIdentifierResolver) {_		this.currentTenantIdentifierResolver = currentTenantIdentifierResolver__	};set,a,link,current,tenant,identifier,resolver,to,be,passed,on,to,the,session,factory,see,local,session,factory,builder,set,current,tenant,identifier,resolver;public,void,set,current,tenant,identifier,resolver,current,tenant,identifier,resolver,current,tenant,identifier,resolver,this,current,tenant,identifier,resolver,current,tenant,identifier,resolver
LocalSessionFactoryBean -> public void setCurrentTenantIdentifierResolver(CurrentTenantIdentifierResolver currentTenantIdentifierResolver);1530724999;Set a {@link CurrentTenantIdentifierResolver} to be passed on to the SessionFactory._@see LocalSessionFactoryBuilder#setCurrentTenantIdentifierResolver;public void setCurrentTenantIdentifierResolver(CurrentTenantIdentifierResolver currentTenantIdentifierResolver) {_		this.currentTenantIdentifierResolver = currentTenantIdentifierResolver__	};set,a,link,current,tenant,identifier,resolver,to,be,passed,on,to,the,session,factory,see,local,session,factory,builder,set,current,tenant,identifier,resolver;public,void,set,current,tenant,identifier,resolver,current,tenant,identifier,resolver,current,tenant,identifier,resolver,this,current,tenant,identifier,resolver,current,tenant,identifier,resolver
LocalSessionFactoryBean -> public void setCurrentTenantIdentifierResolver(CurrentTenantIdentifierResolver currentTenantIdentifierResolver);1530802115;Set a {@link CurrentTenantIdentifierResolver} to be passed on to the SessionFactory._@see LocalSessionFactoryBuilder#setCurrentTenantIdentifierResolver;public void setCurrentTenantIdentifierResolver(CurrentTenantIdentifierResolver currentTenantIdentifierResolver) {_		this.currentTenantIdentifierResolver = currentTenantIdentifierResolver__	};set,a,link,current,tenant,identifier,resolver,to,be,passed,on,to,the,session,factory,see,local,session,factory,builder,set,current,tenant,identifier,resolver;public,void,set,current,tenant,identifier,resolver,current,tenant,identifier,resolver,current,tenant,identifier,resolver,this,current,tenant,identifier,resolver,current,tenant,identifier,resolver
LocalSessionFactoryBean -> public void setCurrentTenantIdentifierResolver(CurrentTenantIdentifierResolver currentTenantIdentifierResolver);1531739026;Set a {@link CurrentTenantIdentifierResolver} to be passed on to the SessionFactory._@see LocalSessionFactoryBuilder#setCurrentTenantIdentifierResolver;public void setCurrentTenantIdentifierResolver(CurrentTenantIdentifierResolver currentTenantIdentifierResolver) {_		this.currentTenantIdentifierResolver = currentTenantIdentifierResolver__	};set,a,link,current,tenant,identifier,resolver,to,be,passed,on,to,the,session,factory,see,local,session,factory,builder,set,current,tenant,identifier,resolver;public,void,set,current,tenant,identifier,resolver,current,tenant,identifier,resolver,current,tenant,identifier,resolver,this,current,tenant,identifier,resolver,current,tenant,identifier,resolver
LocalSessionFactoryBean -> @Override 	public void setResourceLoader(ResourceLoader resourceLoader);1467668243;Specify a Spring {@link ResourceLoader} to use for Hibernate metadata._@param resourceLoader the ResourceLoader to use (never {@code null});@Override_	public void setResourceLoader(ResourceLoader resourceLoader) {_		this.resourcePatternResolver = ResourcePatternUtils.getResourcePatternResolver(resourceLoader)__	};specify,a,spring,link,resource,loader,to,use,for,hibernate,metadata,param,resource,loader,the,resource,loader,to,use,never,code,null;override,public,void,set,resource,loader,resource,loader,resource,loader,this,resource,pattern,resolver,resource,pattern,utils,get,resource,pattern,resolver,resource,loader
LocalSessionFactoryBean -> @Override 	public void setResourceLoader(ResourceLoader resourceLoader);1477661704;Specify a Spring {@link ResourceLoader} to use for Hibernate metadata._@param resourceLoader the ResourceLoader to use (never {@code null});@Override_	public void setResourceLoader(ResourceLoader resourceLoader) {_		this.resourcePatternResolver = ResourcePatternUtils.getResourcePatternResolver(resourceLoader)__	};specify,a,spring,link,resource,loader,to,use,for,hibernate,metadata,param,resource,loader,the,resource,loader,to,use,never,code,null;override,public,void,set,resource,loader,resource,loader,resource,loader,this,resource,pattern,resolver,resource,pattern,utils,get,resource,pattern,resolver,resource,loader
LocalSessionFactoryBean -> @Override 	public void setResourceLoader(ResourceLoader resourceLoader);1498780456;Specify a Spring {@link ResourceLoader} to use for Hibernate metadata._@param resourceLoader the ResourceLoader to use (never {@code null});@Override_	public void setResourceLoader(ResourceLoader resourceLoader) {_		this.resourcePatternResolver = ResourcePatternUtils.getResourcePatternResolver(resourceLoader)__	};specify,a,spring,link,resource,loader,to,use,for,hibernate,metadata,param,resource,loader,the,resource,loader,to,use,never,code,null;override,public,void,set,resource,loader,resource,loader,resource,loader,this,resource,pattern,resolver,resource,pattern,utils,get,resource,pattern,resolver,resource,loader
LocalSessionFactoryBean -> @Override 	public void setResourceLoader(ResourceLoader resourceLoader);1502974979;Specify a Spring {@link ResourceLoader} to use for Hibernate metadata._@param resourceLoader the ResourceLoader to use (never {@code null});@Override_	public void setResourceLoader(ResourceLoader resourceLoader) {_		this.resourcePatternResolver = ResourcePatternUtils.getResourcePatternResolver(resourceLoader)__	};specify,a,spring,link,resource,loader,to,use,for,hibernate,metadata,param,resource,loader,the,resource,loader,to,use,never,code,null;override,public,void,set,resource,loader,resource,loader,resource,loader,this,resource,pattern,resolver,resource,pattern,utils,get,resource,pattern,resolver,resource,loader
LocalSessionFactoryBean -> @Override 	public void setResourceLoader(ResourceLoader resourceLoader);1530174524;Specify a Spring {@link ResourceLoader} to use for Hibernate metadata._@param resourceLoader the ResourceLoader to use (never {@code null});@Override_	public void setResourceLoader(ResourceLoader resourceLoader) {_		this.resourcePatternResolver = ResourcePatternUtils.getResourcePatternResolver(resourceLoader)__	};specify,a,spring,link,resource,loader,to,use,for,hibernate,metadata,param,resource,loader,the,resource,loader,to,use,never,code,null;override,public,void,set,resource,loader,resource,loader,resource,loader,this,resource,pattern,resolver,resource,pattern,utils,get,resource,pattern,resolver,resource,loader
LocalSessionFactoryBean -> @Override 	public void setResourceLoader(ResourceLoader resourceLoader);1530188116;Specify a Spring {@link ResourceLoader} to use for Hibernate metadata._@param resourceLoader the ResourceLoader to use (never {@code null});@Override_	public void setResourceLoader(ResourceLoader resourceLoader) {_		this.resourcePatternResolver = ResourcePatternUtils.getResourcePatternResolver(resourceLoader)__	};specify,a,spring,link,resource,loader,to,use,for,hibernate,metadata,param,resource,loader,the,resource,loader,to,use,never,code,null;override,public,void,set,resource,loader,resource,loader,resource,loader,this,resource,pattern,resolver,resource,pattern,utils,get,resource,pattern,resolver,resource,loader
LocalSessionFactoryBean -> @Override 	public void setResourceLoader(ResourceLoader resourceLoader);1530724999;Specify a Spring {@link ResourceLoader} to use for Hibernate metadata._@param resourceLoader the ResourceLoader to use (never {@code null});@Override_	public void setResourceLoader(ResourceLoader resourceLoader) {_		this.resourcePatternResolver = ResourcePatternUtils.getResourcePatternResolver(resourceLoader)__	};specify,a,spring,link,resource,loader,to,use,for,hibernate,metadata,param,resource,loader,the,resource,loader,to,use,never,code,null;override,public,void,set,resource,loader,resource,loader,resource,loader,this,resource,pattern,resolver,resource,pattern,utils,get,resource,pattern,resolver,resource,loader
LocalSessionFactoryBean -> @Override 	public void setResourceLoader(ResourceLoader resourceLoader);1530802115;Specify a Spring {@link ResourceLoader} to use for Hibernate metadata._@param resourceLoader the ResourceLoader to use (never {@code null});@Override_	public void setResourceLoader(ResourceLoader resourceLoader) {_		this.resourcePatternResolver = ResourcePatternUtils.getResourcePatternResolver(resourceLoader)__	};specify,a,spring,link,resource,loader,to,use,for,hibernate,metadata,param,resource,loader,the,resource,loader,to,use,never,code,null;override,public,void,set,resource,loader,resource,loader,resource,loader,this,resource,pattern,resolver,resource,pattern,utils,get,resource,pattern,resolver,resource,loader
LocalSessionFactoryBean -> @Override 	public void setResourceLoader(ResourceLoader resourceLoader);1531739026;Specify a Spring {@link ResourceLoader} to use for Hibernate metadata._@param resourceLoader the ResourceLoader to use (never {@code null});@Override_	public void setResourceLoader(ResourceLoader resourceLoader) {_		this.resourcePatternResolver = ResourcePatternUtils.getResourcePatternResolver(resourceLoader)__	};specify,a,spring,link,resource,loader,to,use,for,hibernate,metadata,param,resource,loader,the,resource,loader,to,use,never,code,null;override,public,void,set,resource,loader,resource,loader,resource,loader,this,resource,pattern,resolver,resource,pattern,utils,get,resource,pattern,resolver,resource,loader
LocalSessionFactoryBean -> public void setMultiTenantConnectionProvider(MultiTenantConnectionProvider multiTenantConnectionProvider);1467668243;Set a {@link MultiTenantConnectionProvider} to be passed on to the SessionFactory._@since 4.3_@see LocalSessionFactoryBuilder#setMultiTenantConnectionProvider;public void setMultiTenantConnectionProvider(MultiTenantConnectionProvider multiTenantConnectionProvider) {_		this.multiTenantConnectionProvider = multiTenantConnectionProvider__	};set,a,link,multi,tenant,connection,provider,to,be,passed,on,to,the,session,factory,since,4,3,see,local,session,factory,builder,set,multi,tenant,connection,provider;public,void,set,multi,tenant,connection,provider,multi,tenant,connection,provider,multi,tenant,connection,provider,this,multi,tenant,connection,provider,multi,tenant,connection,provider
LocalSessionFactoryBean -> public void setMultiTenantConnectionProvider(MultiTenantConnectionProvider multiTenantConnectionProvider);1477661704;Set a {@link MultiTenantConnectionProvider} to be passed on to the SessionFactory._@since 4.3_@see LocalSessionFactoryBuilder#setMultiTenantConnectionProvider;public void setMultiTenantConnectionProvider(MultiTenantConnectionProvider multiTenantConnectionProvider) {_		this.multiTenantConnectionProvider = multiTenantConnectionProvider__	};set,a,link,multi,tenant,connection,provider,to,be,passed,on,to,the,session,factory,since,4,3,see,local,session,factory,builder,set,multi,tenant,connection,provider;public,void,set,multi,tenant,connection,provider,multi,tenant,connection,provider,multi,tenant,connection,provider,this,multi,tenant,connection,provider,multi,tenant,connection,provider
LocalSessionFactoryBean -> public void setMultiTenantConnectionProvider(MultiTenantConnectionProvider multiTenantConnectionProvider);1496259743;Set a {@link MultiTenantConnectionProvider} to be passed on to the SessionFactory._@since 4.3_@see LocalSessionFactoryBuilder#setMultiTenantConnectionProvider;public void setMultiTenantConnectionProvider(MultiTenantConnectionProvider multiTenantConnectionProvider) {_		this.multiTenantConnectionProvider = multiTenantConnectionProvider__	};set,a,link,multi,tenant,connection,provider,to,be,passed,on,to,the,session,factory,since,4,3,see,local,session,factory,builder,set,multi,tenant,connection,provider;public,void,set,multi,tenant,connection,provider,multi,tenant,connection,provider,multi,tenant,connection,provider,this,multi,tenant,connection,provider,multi,tenant,connection,provider
LocalSessionFactoryBean -> public void setMultiTenantConnectionProvider(MultiTenantConnectionProvider multiTenantConnectionProvider);1498780456;Set a {@link MultiTenantConnectionProvider} to be passed on to the SessionFactory._@since 4.3_@see LocalSessionFactoryBuilder#setMultiTenantConnectionProvider;public void setMultiTenantConnectionProvider(MultiTenantConnectionProvider multiTenantConnectionProvider) {_		this.multiTenantConnectionProvider = multiTenantConnectionProvider__	};set,a,link,multi,tenant,connection,provider,to,be,passed,on,to,the,session,factory,since,4,3,see,local,session,factory,builder,set,multi,tenant,connection,provider;public,void,set,multi,tenant,connection,provider,multi,tenant,connection,provider,multi,tenant,connection,provider,this,multi,tenant,connection,provider,multi,tenant,connection,provider
LocalSessionFactoryBean -> public void setMultiTenantConnectionProvider(MultiTenantConnectionProvider multiTenantConnectionProvider);1502974979;Set a {@link MultiTenantConnectionProvider} to be passed on to the SessionFactory._@since 4.3_@see LocalSessionFactoryBuilder#setMultiTenantConnectionProvider;public void setMultiTenantConnectionProvider(MultiTenantConnectionProvider multiTenantConnectionProvider) {_		this.multiTenantConnectionProvider = multiTenantConnectionProvider__	};set,a,link,multi,tenant,connection,provider,to,be,passed,on,to,the,session,factory,since,4,3,see,local,session,factory,builder,set,multi,tenant,connection,provider;public,void,set,multi,tenant,connection,provider,multi,tenant,connection,provider,multi,tenant,connection,provider,this,multi,tenant,connection,provider,multi,tenant,connection,provider
LocalSessionFactoryBean -> public void setMultiTenantConnectionProvider(MultiTenantConnectionProvider multiTenantConnectionProvider);1530174524;Set a {@link MultiTenantConnectionProvider} to be passed on to the SessionFactory._@since 4.3_@see LocalSessionFactoryBuilder#setMultiTenantConnectionProvider;public void setMultiTenantConnectionProvider(MultiTenantConnectionProvider multiTenantConnectionProvider) {_		this.multiTenantConnectionProvider = multiTenantConnectionProvider__	};set,a,link,multi,tenant,connection,provider,to,be,passed,on,to,the,session,factory,since,4,3,see,local,session,factory,builder,set,multi,tenant,connection,provider;public,void,set,multi,tenant,connection,provider,multi,tenant,connection,provider,multi,tenant,connection,provider,this,multi,tenant,connection,provider,multi,tenant,connection,provider
LocalSessionFactoryBean -> public void setMultiTenantConnectionProvider(MultiTenantConnectionProvider multiTenantConnectionProvider);1530188116;Set a {@link MultiTenantConnectionProvider} to be passed on to the SessionFactory._@since 4.3_@see LocalSessionFactoryBuilder#setMultiTenantConnectionProvider;public void setMultiTenantConnectionProvider(MultiTenantConnectionProvider multiTenantConnectionProvider) {_		this.multiTenantConnectionProvider = multiTenantConnectionProvider__	};set,a,link,multi,tenant,connection,provider,to,be,passed,on,to,the,session,factory,since,4,3,see,local,session,factory,builder,set,multi,tenant,connection,provider;public,void,set,multi,tenant,connection,provider,multi,tenant,connection,provider,multi,tenant,connection,provider,this,multi,tenant,connection,provider,multi,tenant,connection,provider
LocalSessionFactoryBean -> public void setMultiTenantConnectionProvider(MultiTenantConnectionProvider multiTenantConnectionProvider);1530724999;Set a {@link MultiTenantConnectionProvider} to be passed on to the SessionFactory._@since 4.3_@see LocalSessionFactoryBuilder#setMultiTenantConnectionProvider;public void setMultiTenantConnectionProvider(MultiTenantConnectionProvider multiTenantConnectionProvider) {_		this.multiTenantConnectionProvider = multiTenantConnectionProvider__	};set,a,link,multi,tenant,connection,provider,to,be,passed,on,to,the,session,factory,since,4,3,see,local,session,factory,builder,set,multi,tenant,connection,provider;public,void,set,multi,tenant,connection,provider,multi,tenant,connection,provider,multi,tenant,connection,provider,this,multi,tenant,connection,provider,multi,tenant,connection,provider
LocalSessionFactoryBean -> public void setMultiTenantConnectionProvider(MultiTenantConnectionProvider multiTenantConnectionProvider);1530802115;Set a {@link MultiTenantConnectionProvider} to be passed on to the SessionFactory._@since 4.3_@see LocalSessionFactoryBuilder#setMultiTenantConnectionProvider;public void setMultiTenantConnectionProvider(MultiTenantConnectionProvider multiTenantConnectionProvider) {_		this.multiTenantConnectionProvider = multiTenantConnectionProvider__	};set,a,link,multi,tenant,connection,provider,to,be,passed,on,to,the,session,factory,since,4,3,see,local,session,factory,builder,set,multi,tenant,connection,provider;public,void,set,multi,tenant,connection,provider,multi,tenant,connection,provider,multi,tenant,connection,provider,this,multi,tenant,connection,provider,multi,tenant,connection,provider
LocalSessionFactoryBean -> public void setMultiTenantConnectionProvider(MultiTenantConnectionProvider multiTenantConnectionProvider);1531739026;Set a {@link MultiTenantConnectionProvider} to be passed on to the SessionFactory._@since 4.3_@see LocalSessionFactoryBuilder#setMultiTenantConnectionProvider;public void setMultiTenantConnectionProvider(MultiTenantConnectionProvider multiTenantConnectionProvider) {_		this.multiTenantConnectionProvider = multiTenantConnectionProvider__	};set,a,link,multi,tenant,connection,provider,to,be,passed,on,to,the,session,factory,since,4,3,see,local,session,factory,builder,set,multi,tenant,connection,provider;public,void,set,multi,tenant,connection,provider,multi,tenant,connection,provider,multi,tenant,connection,provider,this,multi,tenant,connection,provider,multi,tenant,connection,provider
LocalSessionFactoryBean -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1467668243;Specify annotated entity classes to register with this Hibernate SessionFactory._@see Configuration#addAnnotatedClass(Class);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};specify,annotated,entity,classes,to,register,with,this,hibernate,session,factory,see,configuration,add,annotated,class,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
LocalSessionFactoryBean -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1477661704;Specify annotated entity classes to register with this Hibernate SessionFactory._@see Configuration#addAnnotatedClass(Class);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};specify,annotated,entity,classes,to,register,with,this,hibernate,session,factory,see,configuration,add,annotated,class,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
LocalSessionFactoryBean -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1496259743;Specify annotated entity classes to register with this Hibernate SessionFactory._@see Configuration#addAnnotatedClass(Class);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};specify,annotated,entity,classes,to,register,with,this,hibernate,session,factory,see,configuration,add,annotated,class,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
LocalSessionFactoryBean -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1498780456;Specify annotated entity classes to register with this Hibernate SessionFactory._@see Configuration#addAnnotatedClass(Class);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};specify,annotated,entity,classes,to,register,with,this,hibernate,session,factory,see,configuration,add,annotated,class,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
LocalSessionFactoryBean -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1502974979;Specify annotated entity classes to register with this Hibernate SessionFactory._@see Configuration#addAnnotatedClass(Class);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};specify,annotated,entity,classes,to,register,with,this,hibernate,session,factory,see,configuration,add,annotated,class,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
LocalSessionFactoryBean -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1530174524;Specify annotated entity classes to register with this Hibernate SessionFactory._@see Configuration#addAnnotatedClass(Class);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};specify,annotated,entity,classes,to,register,with,this,hibernate,session,factory,see,configuration,add,annotated,class,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
LocalSessionFactoryBean -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1530188116;Specify annotated entity classes to register with this Hibernate SessionFactory._@see Configuration#addAnnotatedClass(Class);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};specify,annotated,entity,classes,to,register,with,this,hibernate,session,factory,see,configuration,add,annotated,class,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
LocalSessionFactoryBean -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1530724999;Specify annotated entity classes to register with this Hibernate SessionFactory._@see Configuration#addAnnotatedClass(Class);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};specify,annotated,entity,classes,to,register,with,this,hibernate,session,factory,see,configuration,add,annotated,class,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
LocalSessionFactoryBean -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1530802115;Specify annotated entity classes to register with this Hibernate SessionFactory._@see Configuration#addAnnotatedClass(Class);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};specify,annotated,entity,classes,to,register,with,this,hibernate,session,factory,see,configuration,add,annotated,class,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
LocalSessionFactoryBean -> public void setAnnotatedClasses(Class<?>... annotatedClasses);1531739026;Specify annotated entity classes to register with this Hibernate SessionFactory._@see Configuration#addAnnotatedClass(Class);public void setAnnotatedClasses(Class<?>... annotatedClasses) {_		this.annotatedClasses = annotatedClasses__	};specify,annotated,entity,classes,to,register,with,this,hibernate,session,factory,see,configuration,add,annotated,class,class;public,void,set,annotated,classes,class,annotated,classes,this,annotated,classes,annotated,classes
LocalSessionFactoryBean -> public void setJtaTransactionManager(Object jtaTransactionManager);1467668243;Set the Spring {@link org.springframework.transaction.jta.JtaTransactionManager}_or the JTA {@link javax.transaction.TransactionManager} to be used with Hibernate,_if any. Implicitly sets up {@code JtaPlatform}._@see LocalSessionFactoryBuilder#setJtaTransactionManager;public void setJtaTransactionManager(Object jtaTransactionManager) {_		this.jtaTransactionManager = jtaTransactionManager__	};set,the,spring,link,org,springframework,transaction,jta,jta,transaction,manager,or,the,jta,link,javax,transaction,transaction,manager,to,be,used,with,hibernate,if,any,implicitly,sets,up,code,jta,platform,see,local,session,factory,builder,set,jta,transaction,manager;public,void,set,jta,transaction,manager,object,jta,transaction,manager,this,jta,transaction,manager,jta,transaction,manager
LocalSessionFactoryBean -> public void setJtaTransactionManager(Object jtaTransactionManager);1477661704;Set the Spring {@link org.springframework.transaction.jta.JtaTransactionManager}_or the JTA {@link javax.transaction.TransactionManager} to be used with Hibernate,_if any. Implicitly sets up {@code JtaPlatform}._@see LocalSessionFactoryBuilder#setJtaTransactionManager;public void setJtaTransactionManager(Object jtaTransactionManager) {_		this.jtaTransactionManager = jtaTransactionManager__	};set,the,spring,link,org,springframework,transaction,jta,jta,transaction,manager,or,the,jta,link,javax,transaction,transaction,manager,to,be,used,with,hibernate,if,any,implicitly,sets,up,code,jta,platform,see,local,session,factory,builder,set,jta,transaction,manager;public,void,set,jta,transaction,manager,object,jta,transaction,manager,this,jta,transaction,manager,jta,transaction,manager
LocalSessionFactoryBean -> public void setJtaTransactionManager(Object jtaTransactionManager);1496259743;Set the Spring {@link org.springframework.transaction.jta.JtaTransactionManager}_or the JTA {@link javax.transaction.TransactionManager} to be used with Hibernate,_if any. Implicitly sets up {@code JtaPlatform}._@see LocalSessionFactoryBuilder#setJtaTransactionManager;public void setJtaTransactionManager(Object jtaTransactionManager) {_		this.jtaTransactionManager = jtaTransactionManager__	};set,the,spring,link,org,springframework,transaction,jta,jta,transaction,manager,or,the,jta,link,javax,transaction,transaction,manager,to,be,used,with,hibernate,if,any,implicitly,sets,up,code,jta,platform,see,local,session,factory,builder,set,jta,transaction,manager;public,void,set,jta,transaction,manager,object,jta,transaction,manager,this,jta,transaction,manager,jta,transaction,manager
LocalSessionFactoryBean -> public void setJtaTransactionManager(Object jtaTransactionManager);1498780456;Set the Spring {@link org.springframework.transaction.jta.JtaTransactionManager}_or the JTA {@link javax.transaction.TransactionManager} to be used with Hibernate,_if any. Implicitly sets up {@code JtaPlatform}._@see LocalSessionFactoryBuilder#setJtaTransactionManager;public void setJtaTransactionManager(Object jtaTransactionManager) {_		this.jtaTransactionManager = jtaTransactionManager__	};set,the,spring,link,org,springframework,transaction,jta,jta,transaction,manager,or,the,jta,link,javax,transaction,transaction,manager,to,be,used,with,hibernate,if,any,implicitly,sets,up,code,jta,platform,see,local,session,factory,builder,set,jta,transaction,manager;public,void,set,jta,transaction,manager,object,jta,transaction,manager,this,jta,transaction,manager,jta,transaction,manager
LocalSessionFactoryBean -> public void setJtaTransactionManager(Object jtaTransactionManager);1502974979;Set the Spring {@link org.springframework.transaction.jta.JtaTransactionManager}_or the JTA {@link javax.transaction.TransactionManager} to be used with Hibernate,_if any. Implicitly sets up {@code JtaPlatform}._@see LocalSessionFactoryBuilder#setJtaTransactionManager;public void setJtaTransactionManager(Object jtaTransactionManager) {_		this.jtaTransactionManager = jtaTransactionManager__	};set,the,spring,link,org,springframework,transaction,jta,jta,transaction,manager,or,the,jta,link,javax,transaction,transaction,manager,to,be,used,with,hibernate,if,any,implicitly,sets,up,code,jta,platform,see,local,session,factory,builder,set,jta,transaction,manager;public,void,set,jta,transaction,manager,object,jta,transaction,manager,this,jta,transaction,manager,jta,transaction,manager
LocalSessionFactoryBean -> public void setJtaTransactionManager(Object jtaTransactionManager);1530174524;Set the Spring {@link org.springframework.transaction.jta.JtaTransactionManager}_or the JTA {@link javax.transaction.TransactionManager} to be used with Hibernate,_if any. Implicitly sets up {@code JtaPlatform}._@see LocalSessionFactoryBuilder#setJtaTransactionManager;public void setJtaTransactionManager(Object jtaTransactionManager) {_		this.jtaTransactionManager = jtaTransactionManager__	};set,the,spring,link,org,springframework,transaction,jta,jta,transaction,manager,or,the,jta,link,javax,transaction,transaction,manager,to,be,used,with,hibernate,if,any,implicitly,sets,up,code,jta,platform,see,local,session,factory,builder,set,jta,transaction,manager;public,void,set,jta,transaction,manager,object,jta,transaction,manager,this,jta,transaction,manager,jta,transaction,manager
LocalSessionFactoryBean -> public void setJtaTransactionManager(Object jtaTransactionManager);1530188116;Set the Spring {@link org.springframework.transaction.jta.JtaTransactionManager}_or the JTA {@link javax.transaction.TransactionManager} to be used with Hibernate,_if any. Implicitly sets up {@code JtaPlatform}._@see LocalSessionFactoryBuilder#setJtaTransactionManager;public void setJtaTransactionManager(Object jtaTransactionManager) {_		this.jtaTransactionManager = jtaTransactionManager__	};set,the,spring,link,org,springframework,transaction,jta,jta,transaction,manager,or,the,jta,link,javax,transaction,transaction,manager,to,be,used,with,hibernate,if,any,implicitly,sets,up,code,jta,platform,see,local,session,factory,builder,set,jta,transaction,manager;public,void,set,jta,transaction,manager,object,jta,transaction,manager,this,jta,transaction,manager,jta,transaction,manager
LocalSessionFactoryBean -> public void setJtaTransactionManager(Object jtaTransactionManager);1530724999;Set the Spring {@link org.springframework.transaction.jta.JtaTransactionManager}_or the JTA {@link javax.transaction.TransactionManager} to be used with Hibernate,_if any. Implicitly sets up {@code JtaPlatform}._@see LocalSessionFactoryBuilder#setJtaTransactionManager;public void setJtaTransactionManager(Object jtaTransactionManager) {_		this.jtaTransactionManager = jtaTransactionManager__	};set,the,spring,link,org,springframework,transaction,jta,jta,transaction,manager,or,the,jta,link,javax,transaction,transaction,manager,to,be,used,with,hibernate,if,any,implicitly,sets,up,code,jta,platform,see,local,session,factory,builder,set,jta,transaction,manager;public,void,set,jta,transaction,manager,object,jta,transaction,manager,this,jta,transaction,manager,jta,transaction,manager
LocalSessionFactoryBean -> public void setJtaTransactionManager(Object jtaTransactionManager);1530802115;Set the Spring {@link org.springframework.transaction.jta.JtaTransactionManager}_or the JTA {@link javax.transaction.TransactionManager} to be used with Hibernate,_if any. Implicitly sets up {@code JtaPlatform}._@see LocalSessionFactoryBuilder#setJtaTransactionManager;public void setJtaTransactionManager(Object jtaTransactionManager) {_		this.jtaTransactionManager = jtaTransactionManager__	};set,the,spring,link,org,springframework,transaction,jta,jta,transaction,manager,or,the,jta,link,javax,transaction,transaction,manager,to,be,used,with,hibernate,if,any,implicitly,sets,up,code,jta,platform,see,local,session,factory,builder,set,jta,transaction,manager;public,void,set,jta,transaction,manager,object,jta,transaction,manager,this,jta,transaction,manager,jta,transaction,manager
LocalSessionFactoryBean -> public void setJtaTransactionManager(Object jtaTransactionManager);1531739026;Set the Spring {@link org.springframework.transaction.jta.JtaTransactionManager}_or the JTA {@link javax.transaction.TransactionManager} to be used with Hibernate,_if any. Implicitly sets up {@code JtaPlatform}._@see LocalSessionFactoryBuilder#setJtaTransactionManager;public void setJtaTransactionManager(Object jtaTransactionManager) {_		this.jtaTransactionManager = jtaTransactionManager__	};set,the,spring,link,org,springframework,transaction,jta,jta,transaction,manager,or,the,jta,link,javax,transaction,transaction,manager,to,be,used,with,hibernate,if,any,implicitly,sets,up,code,jta,platform,see,local,session,factory,builder,set,jta,transaction,manager;public,void,set,jta,transaction,manager,object,jta,transaction,manager,this,jta,transaction,manager,jta,transaction,manager
LocalSessionFactoryBean -> public void setAnnotatedPackages(String... annotatedPackages);1467668243;Specify the names of annotated packages, for which package-level_annotation metadata will be read._@see Configuration#addPackage(String);public void setAnnotatedPackages(String... annotatedPackages) {_		this.annotatedPackages = annotatedPackages__	};specify,the,names,of,annotated,packages,for,which,package,level,annotation,metadata,will,be,read,see,configuration,add,package,string;public,void,set,annotated,packages,string,annotated,packages,this,annotated,packages,annotated,packages
LocalSessionFactoryBean -> public void setAnnotatedPackages(String... annotatedPackages);1477661704;Specify the names of annotated packages, for which package-level_annotation metadata will be read._@see Configuration#addPackage(String);public void setAnnotatedPackages(String... annotatedPackages) {_		this.annotatedPackages = annotatedPackages__	};specify,the,names,of,annotated,packages,for,which,package,level,annotation,metadata,will,be,read,see,configuration,add,package,string;public,void,set,annotated,packages,string,annotated,packages,this,annotated,packages,annotated,packages
LocalSessionFactoryBean -> public void setAnnotatedPackages(String... annotatedPackages);1496259743;Specify the names of annotated packages, for which package-level_annotation metadata will be read._@see Configuration#addPackage(String);public void setAnnotatedPackages(String... annotatedPackages) {_		this.annotatedPackages = annotatedPackages__	};specify,the,names,of,annotated,packages,for,which,package,level,annotation,metadata,will,be,read,see,configuration,add,package,string;public,void,set,annotated,packages,string,annotated,packages,this,annotated,packages,annotated,packages
LocalSessionFactoryBean -> public void setAnnotatedPackages(String... annotatedPackages);1498780456;Specify the names of annotated packages, for which package-level_annotation metadata will be read._@see Configuration#addPackage(String);public void setAnnotatedPackages(String... annotatedPackages) {_		this.annotatedPackages = annotatedPackages__	};specify,the,names,of,annotated,packages,for,which,package,level,annotation,metadata,will,be,read,see,configuration,add,package,string;public,void,set,annotated,packages,string,annotated,packages,this,annotated,packages,annotated,packages
LocalSessionFactoryBean -> public void setAnnotatedPackages(String... annotatedPackages);1502974979;Specify the names of annotated packages, for which package-level_annotation metadata will be read._@see Configuration#addPackage(String);public void setAnnotatedPackages(String... annotatedPackages) {_		this.annotatedPackages = annotatedPackages__	};specify,the,names,of,annotated,packages,for,which,package,level,annotation,metadata,will,be,read,see,configuration,add,package,string;public,void,set,annotated,packages,string,annotated,packages,this,annotated,packages,annotated,packages
LocalSessionFactoryBean -> public void setAnnotatedPackages(String... annotatedPackages);1530174524;Specify the names of annotated packages, for which package-level_annotation metadata will be read._@see Configuration#addPackage(String);public void setAnnotatedPackages(String... annotatedPackages) {_		this.annotatedPackages = annotatedPackages__	};specify,the,names,of,annotated,packages,for,which,package,level,annotation,metadata,will,be,read,see,configuration,add,package,string;public,void,set,annotated,packages,string,annotated,packages,this,annotated,packages,annotated,packages
LocalSessionFactoryBean -> public void setAnnotatedPackages(String... annotatedPackages);1530188116;Specify the names of annotated packages, for which package-level_annotation metadata will be read._@see Configuration#addPackage(String);public void setAnnotatedPackages(String... annotatedPackages) {_		this.annotatedPackages = annotatedPackages__	};specify,the,names,of,annotated,packages,for,which,package,level,annotation,metadata,will,be,read,see,configuration,add,package,string;public,void,set,annotated,packages,string,annotated,packages,this,annotated,packages,annotated,packages
LocalSessionFactoryBean -> public void setAnnotatedPackages(String... annotatedPackages);1530724999;Specify the names of annotated packages, for which package-level_annotation metadata will be read._@see Configuration#addPackage(String);public void setAnnotatedPackages(String... annotatedPackages) {_		this.annotatedPackages = annotatedPackages__	};specify,the,names,of,annotated,packages,for,which,package,level,annotation,metadata,will,be,read,see,configuration,add,package,string;public,void,set,annotated,packages,string,annotated,packages,this,annotated,packages,annotated,packages
LocalSessionFactoryBean -> public void setAnnotatedPackages(String... annotatedPackages);1530802115;Specify the names of annotated packages, for which package-level_annotation metadata will be read._@see Configuration#addPackage(String);public void setAnnotatedPackages(String... annotatedPackages) {_		this.annotatedPackages = annotatedPackages__	};specify,the,names,of,annotated,packages,for,which,package,level,annotation,metadata,will,be,read,see,configuration,add,package,string;public,void,set,annotated,packages,string,annotated,packages,this,annotated,packages,annotated,packages
LocalSessionFactoryBean -> public void setAnnotatedPackages(String... annotatedPackages);1531739026;Specify the names of annotated packages, for which package-level_annotation metadata will be read._@see Configuration#addPackage(String);public void setAnnotatedPackages(String... annotatedPackages) {_		this.annotatedPackages = annotatedPackages__	};specify,the,names,of,annotated,packages,for,which,package,level,annotation,metadata,will,be,read,see,configuration,add,package,string;public,void,set,annotated,packages,string,annotated,packages,this,annotated,packages,annotated,packages
LocalSessionFactoryBean -> public final Configuration getConfiguration();1467668243;Return the Hibernate Configuration object used to build the SessionFactory._Allows for access to configuration metadata stored there (rarely needed)._@throws IllegalStateException if the Configuration object has not been initialized yet;public final Configuration getConfiguration() {_		if (this.configuration == null) {_			throw new IllegalStateException("Configuration not initialized yet")__		}_		return this.configuration__	};return,the,hibernate,configuration,object,used,to,build,the,session,factory,allows,for,access,to,configuration,metadata,stored,there,rarely,needed,throws,illegal,state,exception,if,the,configuration,object,has,not,been,initialized,yet;public,final,configuration,get,configuration,if,this,configuration,null,throw,new,illegal,state,exception,configuration,not,initialized,yet,return,this,configuration
LocalSessionFactoryBean -> public final Configuration getConfiguration();1477661704;Return the Hibernate Configuration object used to build the SessionFactory._Allows for access to configuration metadata stored there (rarely needed)._@throws IllegalStateException if the Configuration object has not been initialized yet;public final Configuration getConfiguration() {_		if (this.configuration == null) {_			throw new IllegalStateException("Configuration not initialized yet")__		}_		return this.configuration__	};return,the,hibernate,configuration,object,used,to,build,the,session,factory,allows,for,access,to,configuration,metadata,stored,there,rarely,needed,throws,illegal,state,exception,if,the,configuration,object,has,not,been,initialized,yet;public,final,configuration,get,configuration,if,this,configuration,null,throw,new,illegal,state,exception,configuration,not,initialized,yet,return,this,configuration
LocalSessionFactoryBean -> public final Configuration getConfiguration();1496259743;Return the Hibernate Configuration object used to build the SessionFactory._Allows for access to configuration metadata stored there (rarely needed)._@throws IllegalStateException if the Configuration object has not been initialized yet;public final Configuration getConfiguration() {_		if (this.configuration == null) {_			throw new IllegalStateException("Configuration not initialized yet")__		}_		return this.configuration__	};return,the,hibernate,configuration,object,used,to,build,the,session,factory,allows,for,access,to,configuration,metadata,stored,there,rarely,needed,throws,illegal,state,exception,if,the,configuration,object,has,not,been,initialized,yet;public,final,configuration,get,configuration,if,this,configuration,null,throw,new,illegal,state,exception,configuration,not,initialized,yet,return,this,configuration
LocalSessionFactoryBean -> public final Configuration getConfiguration();1498780456;Return the Hibernate Configuration object used to build the SessionFactory._Allows for access to configuration metadata stored there (rarely needed)._@throws IllegalStateException if the Configuration object has not been initialized yet;public final Configuration getConfiguration() {_		if (this.configuration == null) {_			throw new IllegalStateException("Configuration not initialized yet")__		}_		return this.configuration__	};return,the,hibernate,configuration,object,used,to,build,the,session,factory,allows,for,access,to,configuration,metadata,stored,there,rarely,needed,throws,illegal,state,exception,if,the,configuration,object,has,not,been,initialized,yet;public,final,configuration,get,configuration,if,this,configuration,null,throw,new,illegal,state,exception,configuration,not,initialized,yet,return,this,configuration
LocalSessionFactoryBean -> public final Configuration getConfiguration();1502974979;Return the Hibernate Configuration object used to build the SessionFactory._Allows for access to configuration metadata stored there (rarely needed)._@throws IllegalStateException if the Configuration object has not been initialized yet;public final Configuration getConfiguration() {_		if (this.configuration == null) {_			throw new IllegalStateException("Configuration not initialized yet")__		}_		return this.configuration__	};return,the,hibernate,configuration,object,used,to,build,the,session,factory,allows,for,access,to,configuration,metadata,stored,there,rarely,needed,throws,illegal,state,exception,if,the,configuration,object,has,not,been,initialized,yet;public,final,configuration,get,configuration,if,this,configuration,null,throw,new,illegal,state,exception,configuration,not,initialized,yet,return,this,configuration
LocalSessionFactoryBean -> public final Configuration getConfiguration();1530174524;Return the Hibernate Configuration object used to build the SessionFactory._Allows for access to configuration metadata stored there (rarely needed)._@throws IllegalStateException if the Configuration object has not been initialized yet;public final Configuration getConfiguration() {_		if (this.configuration == null) {_			throw new IllegalStateException("Configuration not initialized yet")__		}_		return this.configuration__	};return,the,hibernate,configuration,object,used,to,build,the,session,factory,allows,for,access,to,configuration,metadata,stored,there,rarely,needed,throws,illegal,state,exception,if,the,configuration,object,has,not,been,initialized,yet;public,final,configuration,get,configuration,if,this,configuration,null,throw,new,illegal,state,exception,configuration,not,initialized,yet,return,this,configuration
LocalSessionFactoryBean -> public final Configuration getConfiguration();1530188116;Return the Hibernate Configuration object used to build the SessionFactory._Allows for access to configuration metadata stored there (rarely needed)._@throws IllegalStateException if the Configuration object has not been initialized yet;public final Configuration getConfiguration() {_		if (this.configuration == null) {_			throw new IllegalStateException("Configuration not initialized yet")__		}_		return this.configuration__	};return,the,hibernate,configuration,object,used,to,build,the,session,factory,allows,for,access,to,configuration,metadata,stored,there,rarely,needed,throws,illegal,state,exception,if,the,configuration,object,has,not,been,initialized,yet;public,final,configuration,get,configuration,if,this,configuration,null,throw,new,illegal,state,exception,configuration,not,initialized,yet,return,this,configuration
LocalSessionFactoryBean -> public final Configuration getConfiguration();1530724999;Return the Hibernate Configuration object used to build the SessionFactory._Allows for access to configuration metadata stored there (rarely needed)._@throws IllegalStateException if the Configuration object has not been initialized yet;public final Configuration getConfiguration() {_		if (this.configuration == null) {_			throw new IllegalStateException("Configuration not initialized yet")__		}_		return this.configuration__	};return,the,hibernate,configuration,object,used,to,build,the,session,factory,allows,for,access,to,configuration,metadata,stored,there,rarely,needed,throws,illegal,state,exception,if,the,configuration,object,has,not,been,initialized,yet;public,final,configuration,get,configuration,if,this,configuration,null,throw,new,illegal,state,exception,configuration,not,initialized,yet,return,this,configuration
LocalSessionFactoryBean -> public final Configuration getConfiguration();1530802115;Return the Hibernate Configuration object used to build the SessionFactory._Allows for access to configuration metadata stored there (rarely needed)._@throws IllegalStateException if the Configuration object has not been initialized yet;public final Configuration getConfiguration() {_		if (this.configuration == null) {_			throw new IllegalStateException("Configuration not initialized yet")__		}_		return this.configuration__	};return,the,hibernate,configuration,object,used,to,build,the,session,factory,allows,for,access,to,configuration,metadata,stored,there,rarely,needed,throws,illegal,state,exception,if,the,configuration,object,has,not,been,initialized,yet;public,final,configuration,get,configuration,if,this,configuration,null,throw,new,illegal,state,exception,configuration,not,initialized,yet,return,this,configuration
LocalSessionFactoryBean -> public final Configuration getConfiguration();1531739026;Return the Hibernate Configuration object used to build the SessionFactory._Allows for access to configuration metadata stored there (rarely needed)._@throws IllegalStateException if the Configuration object has not been initialized yet;public final Configuration getConfiguration() {_		if (this.configuration == null) {_			throw new IllegalStateException("Configuration not initialized yet")__		}_		return this.configuration__	};return,the,hibernate,configuration,object,used,to,build,the,session,factory,allows,for,access,to,configuration,metadata,stored,there,rarely,needed,throws,illegal,state,exception,if,the,configuration,object,has,not,been,initialized,yet;public,final,configuration,get,configuration,if,this,configuration,null,throw,new,illegal,state,exception,configuration,not,initialized,yet,return,this,configuration
LocalSessionFactoryBean -> public void setConfigLocations(Resource... configLocations);1467668243;Set the locations of multiple Hibernate XML config files, for example as_classpath resources "classpath:hibernate.cfg.xml,classpath:extension.cfg.xml"._<p>Note: Can be omitted when all necessary properties and mapping_resources are specified locally via this bean._@see Configuration#configure(java.net.URL);public void setConfigLocations(Resource... configLocations) {_		this.configLocations = configLocations__	};set,the,locations,of,multiple,hibernate,xml,config,files,for,example,as,classpath,resources,classpath,hibernate,cfg,xml,classpath,extension,cfg,xml,p,note,can,be,omitted,when,all,necessary,properties,and,mapping,resources,are,specified,locally,via,this,bean,see,configuration,configure,java,net,url;public,void,set,config,locations,resource,config,locations,this,config,locations,config,locations
LocalSessionFactoryBean -> public void setConfigLocations(Resource... configLocations);1477661704;Set the locations of multiple Hibernate XML config files, for example as_classpath resources "classpath:hibernate.cfg.xml,classpath:extension.cfg.xml"._<p>Note: Can be omitted when all necessary properties and mapping_resources are specified locally via this bean._@see Configuration#configure(java.net.URL);public void setConfigLocations(Resource... configLocations) {_		this.configLocations = configLocations__	};set,the,locations,of,multiple,hibernate,xml,config,files,for,example,as,classpath,resources,classpath,hibernate,cfg,xml,classpath,extension,cfg,xml,p,note,can,be,omitted,when,all,necessary,properties,and,mapping,resources,are,specified,locally,via,this,bean,see,configuration,configure,java,net,url;public,void,set,config,locations,resource,config,locations,this,config,locations,config,locations
LocalSessionFactoryBean -> public void setConfigLocations(Resource... configLocations);1496259743;Set the locations of multiple Hibernate XML config files, for example as_classpath resources "classpath:hibernate.cfg.xml,classpath:extension.cfg.xml"._<p>Note: Can be omitted when all necessary properties and mapping_resources are specified locally via this bean._@see Configuration#configure(java.net.URL);public void setConfigLocations(Resource... configLocations) {_		this.configLocations = configLocations__	};set,the,locations,of,multiple,hibernate,xml,config,files,for,example,as,classpath,resources,classpath,hibernate,cfg,xml,classpath,extension,cfg,xml,p,note,can,be,omitted,when,all,necessary,properties,and,mapping,resources,are,specified,locally,via,this,bean,see,configuration,configure,java,net,url;public,void,set,config,locations,resource,config,locations,this,config,locations,config,locations
LocalSessionFactoryBean -> public void setConfigLocations(Resource... configLocations);1498780456;Set the locations of multiple Hibernate XML config files, for example as_classpath resources "classpath:hibernate.cfg.xml,classpath:extension.cfg.xml"._<p>Note: Can be omitted when all necessary properties and mapping_resources are specified locally via this bean._@see Configuration#configure(java.net.URL);public void setConfigLocations(Resource... configLocations) {_		this.configLocations = configLocations__	};set,the,locations,of,multiple,hibernate,xml,config,files,for,example,as,classpath,resources,classpath,hibernate,cfg,xml,classpath,extension,cfg,xml,p,note,can,be,omitted,when,all,necessary,properties,and,mapping,resources,are,specified,locally,via,this,bean,see,configuration,configure,java,net,url;public,void,set,config,locations,resource,config,locations,this,config,locations,config,locations
LocalSessionFactoryBean -> public void setConfigLocations(Resource... configLocations);1502974979;Set the locations of multiple Hibernate XML config files, for example as_classpath resources "classpath:hibernate.cfg.xml,classpath:extension.cfg.xml"._<p>Note: Can be omitted when all necessary properties and mapping_resources are specified locally via this bean._@see Configuration#configure(java.net.URL);public void setConfigLocations(Resource... configLocations) {_		this.configLocations = configLocations__	};set,the,locations,of,multiple,hibernate,xml,config,files,for,example,as,classpath,resources,classpath,hibernate,cfg,xml,classpath,extension,cfg,xml,p,note,can,be,omitted,when,all,necessary,properties,and,mapping,resources,are,specified,locally,via,this,bean,see,configuration,configure,java,net,url;public,void,set,config,locations,resource,config,locations,this,config,locations,config,locations
LocalSessionFactoryBean -> public void setConfigLocations(Resource... configLocations);1530174524;Set the locations of multiple Hibernate XML config files, for example as_classpath resources "classpath:hibernate.cfg.xml,classpath:extension.cfg.xml"._<p>Note: Can be omitted when all necessary properties and mapping_resources are specified locally via this bean._@see Configuration#configure(java.net.URL);public void setConfigLocations(Resource... configLocations) {_		this.configLocations = configLocations__	};set,the,locations,of,multiple,hibernate,xml,config,files,for,example,as,classpath,resources,classpath,hibernate,cfg,xml,classpath,extension,cfg,xml,p,note,can,be,omitted,when,all,necessary,properties,and,mapping,resources,are,specified,locally,via,this,bean,see,configuration,configure,java,net,url;public,void,set,config,locations,resource,config,locations,this,config,locations,config,locations
LocalSessionFactoryBean -> public void setConfigLocations(Resource... configLocations);1530188116;Set the locations of multiple Hibernate XML config files, for example as_classpath resources "classpath:hibernate.cfg.xml,classpath:extension.cfg.xml"._<p>Note: Can be omitted when all necessary properties and mapping_resources are specified locally via this bean._@see Configuration#configure(java.net.URL);public void setConfigLocations(Resource... configLocations) {_		this.configLocations = configLocations__	};set,the,locations,of,multiple,hibernate,xml,config,files,for,example,as,classpath,resources,classpath,hibernate,cfg,xml,classpath,extension,cfg,xml,p,note,can,be,omitted,when,all,necessary,properties,and,mapping,resources,are,specified,locally,via,this,bean,see,configuration,configure,java,net,url;public,void,set,config,locations,resource,config,locations,this,config,locations,config,locations
LocalSessionFactoryBean -> public void setConfigLocations(Resource... configLocations);1530724999;Set the locations of multiple Hibernate XML config files, for example as_classpath resources "classpath:hibernate.cfg.xml,classpath:extension.cfg.xml"._<p>Note: Can be omitted when all necessary properties and mapping_resources are specified locally via this bean._@see Configuration#configure(java.net.URL);public void setConfigLocations(Resource... configLocations) {_		this.configLocations = configLocations__	};set,the,locations,of,multiple,hibernate,xml,config,files,for,example,as,classpath,resources,classpath,hibernate,cfg,xml,classpath,extension,cfg,xml,p,note,can,be,omitted,when,all,necessary,properties,and,mapping,resources,are,specified,locally,via,this,bean,see,configuration,configure,java,net,url;public,void,set,config,locations,resource,config,locations,this,config,locations,config,locations
LocalSessionFactoryBean -> public void setConfigLocations(Resource... configLocations);1530802115;Set the locations of multiple Hibernate XML config files, for example as_classpath resources "classpath:hibernate.cfg.xml,classpath:extension.cfg.xml"._<p>Note: Can be omitted when all necessary properties and mapping_resources are specified locally via this bean._@see Configuration#configure(java.net.URL);public void setConfigLocations(Resource... configLocations) {_		this.configLocations = configLocations__	};set,the,locations,of,multiple,hibernate,xml,config,files,for,example,as,classpath,resources,classpath,hibernate,cfg,xml,classpath,extension,cfg,xml,p,note,can,be,omitted,when,all,necessary,properties,and,mapping,resources,are,specified,locally,via,this,bean,see,configuration,configure,java,net,url;public,void,set,config,locations,resource,config,locations,this,config,locations,config,locations
LocalSessionFactoryBean -> public void setConfigLocations(Resource... configLocations);1531739026;Set the locations of multiple Hibernate XML config files, for example as_classpath resources "classpath:hibernate.cfg.xml,classpath:extension.cfg.xml"._<p>Note: Can be omitted when all necessary properties and mapping_resources are specified locally via this bean._@see Configuration#configure(java.net.URL);public void setConfigLocations(Resource... configLocations) {_		this.configLocations = configLocations__	};set,the,locations,of,multiple,hibernate,xml,config,files,for,example,as,classpath,resources,classpath,hibernate,cfg,xml,classpath,extension,cfg,xml,p,note,can,be,omitted,when,all,necessary,properties,and,mapping,resources,are,specified,locally,via,this,bean,see,configuration,configure,java,net,url;public,void,set,config,locations,resource,config,locations,this,config,locations,config,locations
LocalSessionFactoryBean -> public void setPhysicalNamingStrategy(PhysicalNamingStrategy physicalNamingStrategy);1467668243;Set a Hibernate 5.0 PhysicalNamingStrategy for the SessionFactory._@see Configuration#setPhysicalNamingStrategy;public void setPhysicalNamingStrategy(PhysicalNamingStrategy physicalNamingStrategy) {_		this.physicalNamingStrategy = physicalNamingStrategy__	};set,a,hibernate,5,0,physical,naming,strategy,for,the,session,factory,see,configuration,set,physical,naming,strategy;public,void,set,physical,naming,strategy,physical,naming,strategy,physical,naming,strategy,this,physical,naming,strategy,physical,naming,strategy
LocalSessionFactoryBean -> public void setPhysicalNamingStrategy(PhysicalNamingStrategy physicalNamingStrategy);1477661704;Set a Hibernate 5.0 PhysicalNamingStrategy for the SessionFactory._@see Configuration#setPhysicalNamingStrategy;public void setPhysicalNamingStrategy(PhysicalNamingStrategy physicalNamingStrategy) {_		this.physicalNamingStrategy = physicalNamingStrategy__	};set,a,hibernate,5,0,physical,naming,strategy,for,the,session,factory,see,configuration,set,physical,naming,strategy;public,void,set,physical,naming,strategy,physical,naming,strategy,physical,naming,strategy,this,physical,naming,strategy,physical,naming,strategy
LocalSessionFactoryBean -> public void setPhysicalNamingStrategy(PhysicalNamingStrategy physicalNamingStrategy);1496259743;Set a Hibernate 5.0 PhysicalNamingStrategy for the SessionFactory._@see Configuration#setPhysicalNamingStrategy;public void setPhysicalNamingStrategy(PhysicalNamingStrategy physicalNamingStrategy) {_		this.physicalNamingStrategy = physicalNamingStrategy__	};set,a,hibernate,5,0,physical,naming,strategy,for,the,session,factory,see,configuration,set,physical,naming,strategy;public,void,set,physical,naming,strategy,physical,naming,strategy,physical,naming,strategy,this,physical,naming,strategy,physical,naming,strategy
LocalSessionFactoryBean -> public void setPhysicalNamingStrategy(PhysicalNamingStrategy physicalNamingStrategy);1498780456;Set a Hibernate 5.0 PhysicalNamingStrategy for the SessionFactory._@see Configuration#setPhysicalNamingStrategy;public void setPhysicalNamingStrategy(PhysicalNamingStrategy physicalNamingStrategy) {_		this.physicalNamingStrategy = physicalNamingStrategy__	};set,a,hibernate,5,0,physical,naming,strategy,for,the,session,factory,see,configuration,set,physical,naming,strategy;public,void,set,physical,naming,strategy,physical,naming,strategy,physical,naming,strategy,this,physical,naming,strategy,physical,naming,strategy
LocalSessionFactoryBean -> public void setPhysicalNamingStrategy(PhysicalNamingStrategy physicalNamingStrategy);1502974979;Set a Hibernate 5.0 PhysicalNamingStrategy for the SessionFactory._@see Configuration#setPhysicalNamingStrategy;public void setPhysicalNamingStrategy(PhysicalNamingStrategy physicalNamingStrategy) {_		this.physicalNamingStrategy = physicalNamingStrategy__	};set,a,hibernate,5,0,physical,naming,strategy,for,the,session,factory,see,configuration,set,physical,naming,strategy;public,void,set,physical,naming,strategy,physical,naming,strategy,physical,naming,strategy,this,physical,naming,strategy,physical,naming,strategy
LocalSessionFactoryBean -> public void setPhysicalNamingStrategy(PhysicalNamingStrategy physicalNamingStrategy);1530174524;Set a Hibernate 5.0 PhysicalNamingStrategy for the SessionFactory._@see Configuration#setPhysicalNamingStrategy;public void setPhysicalNamingStrategy(PhysicalNamingStrategy physicalNamingStrategy) {_		this.physicalNamingStrategy = physicalNamingStrategy__	};set,a,hibernate,5,0,physical,naming,strategy,for,the,session,factory,see,configuration,set,physical,naming,strategy;public,void,set,physical,naming,strategy,physical,naming,strategy,physical,naming,strategy,this,physical,naming,strategy,physical,naming,strategy
LocalSessionFactoryBean -> public void setPhysicalNamingStrategy(PhysicalNamingStrategy physicalNamingStrategy);1530188116;Set a Hibernate 5.0 PhysicalNamingStrategy for the SessionFactory._@see Configuration#setPhysicalNamingStrategy;public void setPhysicalNamingStrategy(PhysicalNamingStrategy physicalNamingStrategy) {_		this.physicalNamingStrategy = physicalNamingStrategy__	};set,a,hibernate,5,0,physical,naming,strategy,for,the,session,factory,see,configuration,set,physical,naming,strategy;public,void,set,physical,naming,strategy,physical,naming,strategy,physical,naming,strategy,this,physical,naming,strategy,physical,naming,strategy
LocalSessionFactoryBean -> public void setPhysicalNamingStrategy(PhysicalNamingStrategy physicalNamingStrategy);1530724999;Set a Hibernate 5.0 PhysicalNamingStrategy for the SessionFactory._@see Configuration#setPhysicalNamingStrategy;public void setPhysicalNamingStrategy(PhysicalNamingStrategy physicalNamingStrategy) {_		this.physicalNamingStrategy = physicalNamingStrategy__	};set,a,hibernate,5,0,physical,naming,strategy,for,the,session,factory,see,configuration,set,physical,naming,strategy;public,void,set,physical,naming,strategy,physical,naming,strategy,physical,naming,strategy,this,physical,naming,strategy,physical,naming,strategy
LocalSessionFactoryBean -> public void setPhysicalNamingStrategy(PhysicalNamingStrategy physicalNamingStrategy);1530802115;Set a Hibernate 5.0 PhysicalNamingStrategy for the SessionFactory._@see Configuration#setPhysicalNamingStrategy;public void setPhysicalNamingStrategy(PhysicalNamingStrategy physicalNamingStrategy) {_		this.physicalNamingStrategy = physicalNamingStrategy__	};set,a,hibernate,5,0,physical,naming,strategy,for,the,session,factory,see,configuration,set,physical,naming,strategy;public,void,set,physical,naming,strategy,physical,naming,strategy,physical,naming,strategy,this,physical,naming,strategy,physical,naming,strategy
LocalSessionFactoryBean -> public void setPhysicalNamingStrategy(PhysicalNamingStrategy physicalNamingStrategy);1531739026;Set a Hibernate 5 {@link PhysicalNamingStrategy} for the SessionFactory._@see Configuration#setPhysicalNamingStrategy;public void setPhysicalNamingStrategy(PhysicalNamingStrategy physicalNamingStrategy) {_		this.physicalNamingStrategy = physicalNamingStrategy__	};set,a,hibernate,5,link,physical,naming,strategy,for,the,session,factory,see,configuration,set,physical,naming,strategy;public,void,set,physical,naming,strategy,physical,naming,strategy,physical,naming,strategy,this,physical,naming,strategy,physical,naming,strategy
LocalSessionFactoryBean -> public void setPackagesToScan(String... packagesToScan);1467668243;Specify packages to search for autodetection of your entity classes in the_classpath. This is analogous to Spring's component-scan feature_({@link org.springframework.context.annotation.ClassPathBeanDefinitionScanner}).;public void setPackagesToScan(String... packagesToScan) {_		this.packagesToScan = packagesToScan__	};specify,packages,to,search,for,autodetection,of,your,entity,classes,in,the,classpath,this,is,analogous,to,spring,s,component,scan,feature,link,org,springframework,context,annotation,class,path,bean,definition,scanner;public,void,set,packages,to,scan,string,packages,to,scan,this,packages,to,scan,packages,to,scan
LocalSessionFactoryBean -> public void setPackagesToScan(String... packagesToScan);1477661704;Specify packages to search for autodetection of your entity classes in the_classpath. This is analogous to Spring's component-scan feature_({@link org.springframework.context.annotation.ClassPathBeanDefinitionScanner}).;public void setPackagesToScan(String... packagesToScan) {_		this.packagesToScan = packagesToScan__	};specify,packages,to,search,for,autodetection,of,your,entity,classes,in,the,classpath,this,is,analogous,to,spring,s,component,scan,feature,link,org,springframework,context,annotation,class,path,bean,definition,scanner;public,void,set,packages,to,scan,string,packages,to,scan,this,packages,to,scan,packages,to,scan
LocalSessionFactoryBean -> public void setPackagesToScan(String... packagesToScan);1496259743;Specify packages to search for autodetection of your entity classes in the_classpath. This is analogous to Spring's component-scan feature_({@link org.springframework.context.annotation.ClassPathBeanDefinitionScanner}).;public void setPackagesToScan(String... packagesToScan) {_		this.packagesToScan = packagesToScan__	};specify,packages,to,search,for,autodetection,of,your,entity,classes,in,the,classpath,this,is,analogous,to,spring,s,component,scan,feature,link,org,springframework,context,annotation,class,path,bean,definition,scanner;public,void,set,packages,to,scan,string,packages,to,scan,this,packages,to,scan,packages,to,scan
LocalSessionFactoryBean -> public void setPackagesToScan(String... packagesToScan);1498780456;Specify packages to search for autodetection of your entity classes in the_classpath. This is analogous to Spring's component-scan feature_({@link org.springframework.context.annotation.ClassPathBeanDefinitionScanner}).;public void setPackagesToScan(String... packagesToScan) {_		this.packagesToScan = packagesToScan__	};specify,packages,to,search,for,autodetection,of,your,entity,classes,in,the,classpath,this,is,analogous,to,spring,s,component,scan,feature,link,org,springframework,context,annotation,class,path,bean,definition,scanner;public,void,set,packages,to,scan,string,packages,to,scan,this,packages,to,scan,packages,to,scan
LocalSessionFactoryBean -> public void setPackagesToScan(String... packagesToScan);1502974979;Specify packages to search for autodetection of your entity classes in the_classpath. This is analogous to Spring's component-scan feature_({@link org.springframework.context.annotation.ClassPathBeanDefinitionScanner}).;public void setPackagesToScan(String... packagesToScan) {_		this.packagesToScan = packagesToScan__	};specify,packages,to,search,for,autodetection,of,your,entity,classes,in,the,classpath,this,is,analogous,to,spring,s,component,scan,feature,link,org,springframework,context,annotation,class,path,bean,definition,scanner;public,void,set,packages,to,scan,string,packages,to,scan,this,packages,to,scan,packages,to,scan
LocalSessionFactoryBean -> public void setPackagesToScan(String... packagesToScan);1530174524;Specify packages to search for autodetection of your entity classes in the_classpath. This is analogous to Spring's component-scan feature_({@link org.springframework.context.annotation.ClassPathBeanDefinitionScanner}).;public void setPackagesToScan(String... packagesToScan) {_		this.packagesToScan = packagesToScan__	};specify,packages,to,search,for,autodetection,of,your,entity,classes,in,the,classpath,this,is,analogous,to,spring,s,component,scan,feature,link,org,springframework,context,annotation,class,path,bean,definition,scanner;public,void,set,packages,to,scan,string,packages,to,scan,this,packages,to,scan,packages,to,scan
LocalSessionFactoryBean -> public void setPackagesToScan(String... packagesToScan);1530188116;Specify packages to search for autodetection of your entity classes in the_classpath. This is analogous to Spring's component-scan feature_({@link org.springframework.context.annotation.ClassPathBeanDefinitionScanner}).;public void setPackagesToScan(String... packagesToScan) {_		this.packagesToScan = packagesToScan__	};specify,packages,to,search,for,autodetection,of,your,entity,classes,in,the,classpath,this,is,analogous,to,spring,s,component,scan,feature,link,org,springframework,context,annotation,class,path,bean,definition,scanner;public,void,set,packages,to,scan,string,packages,to,scan,this,packages,to,scan,packages,to,scan
LocalSessionFactoryBean -> public void setPackagesToScan(String... packagesToScan);1530724999;Specify packages to search for autodetection of your entity classes in the_classpath. This is analogous to Spring's component-scan feature_({@link org.springframework.context.annotation.ClassPathBeanDefinitionScanner}).;public void setPackagesToScan(String... packagesToScan) {_		this.packagesToScan = packagesToScan__	};specify,packages,to,search,for,autodetection,of,your,entity,classes,in,the,classpath,this,is,analogous,to,spring,s,component,scan,feature,link,org,springframework,context,annotation,class,path,bean,definition,scanner;public,void,set,packages,to,scan,string,packages,to,scan,this,packages,to,scan,packages,to,scan
LocalSessionFactoryBean -> public void setPackagesToScan(String... packagesToScan);1530802115;Specify packages to search for autodetection of your entity classes in the_classpath. This is analogous to Spring's component-scan feature_({@link org.springframework.context.annotation.ClassPathBeanDefinitionScanner}).;public void setPackagesToScan(String... packagesToScan) {_		this.packagesToScan = packagesToScan__	};specify,packages,to,search,for,autodetection,of,your,entity,classes,in,the,classpath,this,is,analogous,to,spring,s,component,scan,feature,link,org,springframework,context,annotation,class,path,bean,definition,scanner;public,void,set,packages,to,scan,string,packages,to,scan,this,packages,to,scan,packages,to,scan
LocalSessionFactoryBean -> public void setPackagesToScan(String... packagesToScan);1531739026;Specify packages to search for autodetection of your entity classes in the_classpath. This is analogous to Spring's component-scan feature_({@link org.springframework.context.annotation.ClassPathBeanDefinitionScanner}).;public void setPackagesToScan(String... packagesToScan) {_		this.packagesToScan = packagesToScan__	};specify,packages,to,search,for,autodetection,of,your,entity,classes,in,the,classpath,this,is,analogous,to,spring,s,component,scan,feature,link,org,springframework,context,annotation,class,path,bean,definition,scanner;public,void,set,packages,to,scan,string,packages,to,scan,this,packages,to,scan,packages,to,scan
LocalSessionFactoryBean -> public void setEntityTypeFilters(TypeFilter... entityTypeFilters);1467668243;Specify custom type filters for Spring-based scanning for entity classes._<p>Default is to search all specified packages for classes annotated with_{@code @javax.persistence.Entity}, {@code @javax.persistence.Embeddable}_or {@code @javax.persistence.MappedSuperclass}._@see #setPackagesToScan;public void setEntityTypeFilters(TypeFilter... entityTypeFilters) {_		this.entityTypeFilters = entityTypeFilters__	};specify,custom,type,filters,for,spring,based,scanning,for,entity,classes,p,default,is,to,search,all,specified,packages,for,classes,annotated,with,code,javax,persistence,entity,code,javax,persistence,embeddable,or,code,javax,persistence,mapped,superclass,see,set,packages,to,scan;public,void,set,entity,type,filters,type,filter,entity,type,filters,this,entity,type,filters,entity,type,filters
LocalSessionFactoryBean -> public void setEntityTypeFilters(TypeFilter... entityTypeFilters);1477661704;Specify custom type filters for Spring-based scanning for entity classes._<p>Default is to search all specified packages for classes annotated with_{@code @javax.persistence.Entity}, {@code @javax.persistence.Embeddable}_or {@code @javax.persistence.MappedSuperclass}._@see #setPackagesToScan;public void setEntityTypeFilters(TypeFilter... entityTypeFilters) {_		this.entityTypeFilters = entityTypeFilters__	};specify,custom,type,filters,for,spring,based,scanning,for,entity,classes,p,default,is,to,search,all,specified,packages,for,classes,annotated,with,code,javax,persistence,entity,code,javax,persistence,embeddable,or,code,javax,persistence,mapped,superclass,see,set,packages,to,scan;public,void,set,entity,type,filters,type,filter,entity,type,filters,this,entity,type,filters,entity,type,filters
LocalSessionFactoryBean -> public void setEntityTypeFilters(TypeFilter... entityTypeFilters);1496259743;Specify custom type filters for Spring-based scanning for entity classes._<p>Default is to search all specified packages for classes annotated with_{@code @javax.persistence.Entity}, {@code @javax.persistence.Embeddable}_or {@code @javax.persistence.MappedSuperclass}._@see #setPackagesToScan;public void setEntityTypeFilters(TypeFilter... entityTypeFilters) {_		this.entityTypeFilters = entityTypeFilters__	};specify,custom,type,filters,for,spring,based,scanning,for,entity,classes,p,default,is,to,search,all,specified,packages,for,classes,annotated,with,code,javax,persistence,entity,code,javax,persistence,embeddable,or,code,javax,persistence,mapped,superclass,see,set,packages,to,scan;public,void,set,entity,type,filters,type,filter,entity,type,filters,this,entity,type,filters,entity,type,filters
LocalSessionFactoryBean -> public void setEntityTypeFilters(TypeFilter... entityTypeFilters);1498780456;Specify custom type filters for Spring-based scanning for entity classes._<p>Default is to search all specified packages for classes annotated with_{@code @javax.persistence.Entity}, {@code @javax.persistence.Embeddable}_or {@code @javax.persistence.MappedSuperclass}._@see #setPackagesToScan;public void setEntityTypeFilters(TypeFilter... entityTypeFilters) {_		this.entityTypeFilters = entityTypeFilters__	};specify,custom,type,filters,for,spring,based,scanning,for,entity,classes,p,default,is,to,search,all,specified,packages,for,classes,annotated,with,code,javax,persistence,entity,code,javax,persistence,embeddable,or,code,javax,persistence,mapped,superclass,see,set,packages,to,scan;public,void,set,entity,type,filters,type,filter,entity,type,filters,this,entity,type,filters,entity,type,filters
LocalSessionFactoryBean -> public void setEntityTypeFilters(TypeFilter... entityTypeFilters);1502974979;Specify custom type filters for Spring-based scanning for entity classes._<p>Default is to search all specified packages for classes annotated with_{@code @javax.persistence.Entity}, {@code @javax.persistence.Embeddable}_or {@code @javax.persistence.MappedSuperclass}._@see #setPackagesToScan;public void setEntityTypeFilters(TypeFilter... entityTypeFilters) {_		this.entityTypeFilters = entityTypeFilters__	};specify,custom,type,filters,for,spring,based,scanning,for,entity,classes,p,default,is,to,search,all,specified,packages,for,classes,annotated,with,code,javax,persistence,entity,code,javax,persistence,embeddable,or,code,javax,persistence,mapped,superclass,see,set,packages,to,scan;public,void,set,entity,type,filters,type,filter,entity,type,filters,this,entity,type,filters,entity,type,filters
LocalSessionFactoryBean -> public void setEntityTypeFilters(TypeFilter... entityTypeFilters);1530174524;Specify custom type filters for Spring-based scanning for entity classes._<p>Default is to search all specified packages for classes annotated with_{@code @javax.persistence.Entity}, {@code @javax.persistence.Embeddable}_or {@code @javax.persistence.MappedSuperclass}._@see #setPackagesToScan;public void setEntityTypeFilters(TypeFilter... entityTypeFilters) {_		this.entityTypeFilters = entityTypeFilters__	};specify,custom,type,filters,for,spring,based,scanning,for,entity,classes,p,default,is,to,search,all,specified,packages,for,classes,annotated,with,code,javax,persistence,entity,code,javax,persistence,embeddable,or,code,javax,persistence,mapped,superclass,see,set,packages,to,scan;public,void,set,entity,type,filters,type,filter,entity,type,filters,this,entity,type,filters,entity,type,filters
LocalSessionFactoryBean -> public void setEntityTypeFilters(TypeFilter... entityTypeFilters);1530188116;Specify custom type filters for Spring-based scanning for entity classes._<p>Default is to search all specified packages for classes annotated with_{@code @javax.persistence.Entity}, {@code @javax.persistence.Embeddable}_or {@code @javax.persistence.MappedSuperclass}._@see #setPackagesToScan;public void setEntityTypeFilters(TypeFilter... entityTypeFilters) {_		this.entityTypeFilters = entityTypeFilters__	};specify,custom,type,filters,for,spring,based,scanning,for,entity,classes,p,default,is,to,search,all,specified,packages,for,classes,annotated,with,code,javax,persistence,entity,code,javax,persistence,embeddable,or,code,javax,persistence,mapped,superclass,see,set,packages,to,scan;public,void,set,entity,type,filters,type,filter,entity,type,filters,this,entity,type,filters,entity,type,filters
LocalSessionFactoryBean -> public void setEntityTypeFilters(TypeFilter... entityTypeFilters);1530724999;Specify custom type filters for Spring-based scanning for entity classes._<p>Default is to search all specified packages for classes annotated with_{@code @javax.persistence.Entity}, {@code @javax.persistence.Embeddable}_or {@code @javax.persistence.MappedSuperclass}._@see #setPackagesToScan;public void setEntityTypeFilters(TypeFilter... entityTypeFilters) {_		this.entityTypeFilters = entityTypeFilters__	};specify,custom,type,filters,for,spring,based,scanning,for,entity,classes,p,default,is,to,search,all,specified,packages,for,classes,annotated,with,code,javax,persistence,entity,code,javax,persistence,embeddable,or,code,javax,persistence,mapped,superclass,see,set,packages,to,scan;public,void,set,entity,type,filters,type,filter,entity,type,filters,this,entity,type,filters,entity,type,filters
LocalSessionFactoryBean -> public void setEntityTypeFilters(TypeFilter... entityTypeFilters);1530802115;Specify custom type filters for Spring-based scanning for entity classes._<p>Default is to search all specified packages for classes annotated with_{@code @javax.persistence.Entity}, {@code @javax.persistence.Embeddable}_or {@code @javax.persistence.MappedSuperclass}._@see #setPackagesToScan;public void setEntityTypeFilters(TypeFilter... entityTypeFilters) {_		this.entityTypeFilters = entityTypeFilters__	};specify,custom,type,filters,for,spring,based,scanning,for,entity,classes,p,default,is,to,search,all,specified,packages,for,classes,annotated,with,code,javax,persistence,entity,code,javax,persistence,embeddable,or,code,javax,persistence,mapped,superclass,see,set,packages,to,scan;public,void,set,entity,type,filters,type,filter,entity,type,filters,this,entity,type,filters,entity,type,filters
LocalSessionFactoryBean -> public void setEntityTypeFilters(TypeFilter... entityTypeFilters);1531739026;Specify custom type filters for Spring-based scanning for entity classes._<p>Default is to search all specified packages for classes annotated with_{@code @javax.persistence.Entity}, {@code @javax.persistence.Embeddable}_or {@code @javax.persistence.MappedSuperclass}._@see #setPackagesToScan;public void setEntityTypeFilters(TypeFilter... entityTypeFilters) {_		this.entityTypeFilters = entityTypeFilters__	};specify,custom,type,filters,for,spring,based,scanning,for,entity,classes,p,default,is,to,search,all,specified,packages,for,classes,annotated,with,code,javax,persistence,entity,code,javax,persistence,embeddable,or,code,javax,persistence,mapped,superclass,see,set,packages,to,scan;public,void,set,entity,type,filters,type,filter,entity,type,filters,this,entity,type,filters,entity,type,filters
LocalSessionFactoryBean -> public ResourceLoader getResourceLoader();1467668243;Determine the Spring {@link ResourceLoader} to use for Hibernate metadata._@return the ResourceLoader to use (never {@code null})_@since 4.3;public ResourceLoader getResourceLoader() {_		if (this.resourcePatternResolver == null) {_			this.resourcePatternResolver = new PathMatchingResourcePatternResolver()__		}_		return this.resourcePatternResolver__	};determine,the,spring,link,resource,loader,to,use,for,hibernate,metadata,return,the,resource,loader,to,use,never,code,null,since,4,3;public,resource,loader,get,resource,loader,if,this,resource,pattern,resolver,null,this,resource,pattern,resolver,new,path,matching,resource,pattern,resolver,return,this,resource,pattern,resolver
LocalSessionFactoryBean -> public ResourceLoader getResourceLoader();1477661704;Determine the Spring {@link ResourceLoader} to use for Hibernate metadata._@return the ResourceLoader to use (never {@code null})_@since 4.3;public ResourceLoader getResourceLoader() {_		if (this.resourcePatternResolver == null) {_			this.resourcePatternResolver = new PathMatchingResourcePatternResolver()__		}_		return this.resourcePatternResolver__	};determine,the,spring,link,resource,loader,to,use,for,hibernate,metadata,return,the,resource,loader,to,use,never,code,null,since,4,3;public,resource,loader,get,resource,loader,if,this,resource,pattern,resolver,null,this,resource,pattern,resolver,new,path,matching,resource,pattern,resolver,return,this,resource,pattern,resolver
LocalSessionFactoryBean -> public ResourceLoader getResourceLoader();1496259743;Determine the Spring {@link ResourceLoader} to use for Hibernate metadata._@return the ResourceLoader to use (never {@code null})_@since 4.3;public ResourceLoader getResourceLoader() {_		if (this.resourcePatternResolver == null) {_			this.resourcePatternResolver = new PathMatchingResourcePatternResolver()__		}_		return this.resourcePatternResolver__	};determine,the,spring,link,resource,loader,to,use,for,hibernate,metadata,return,the,resource,loader,to,use,never,code,null,since,4,3;public,resource,loader,get,resource,loader,if,this,resource,pattern,resolver,null,this,resource,pattern,resolver,new,path,matching,resource,pattern,resolver,return,this,resource,pattern,resolver
LocalSessionFactoryBean -> public ResourceLoader getResourceLoader();1498780456;Determine the Spring {@link ResourceLoader} to use for Hibernate metadata._@return the ResourceLoader to use (never {@code null})_@since 4.3;public ResourceLoader getResourceLoader() {_		if (this.resourcePatternResolver == null) {_			this.resourcePatternResolver = new PathMatchingResourcePatternResolver()__		}_		return this.resourcePatternResolver__	};determine,the,spring,link,resource,loader,to,use,for,hibernate,metadata,return,the,resource,loader,to,use,never,code,null,since,4,3;public,resource,loader,get,resource,loader,if,this,resource,pattern,resolver,null,this,resource,pattern,resolver,new,path,matching,resource,pattern,resolver,return,this,resource,pattern,resolver
LocalSessionFactoryBean -> public ResourceLoader getResourceLoader();1502974979;Determine the Spring {@link ResourceLoader} to use for Hibernate metadata._@return the ResourceLoader to use (never {@code null})_@since 4.3;public ResourceLoader getResourceLoader() {_		if (this.resourcePatternResolver == null) {_			this.resourcePatternResolver = new PathMatchingResourcePatternResolver()__		}_		return this.resourcePatternResolver__	};determine,the,spring,link,resource,loader,to,use,for,hibernate,metadata,return,the,resource,loader,to,use,never,code,null,since,4,3;public,resource,loader,get,resource,loader,if,this,resource,pattern,resolver,null,this,resource,pattern,resolver,new,path,matching,resource,pattern,resolver,return,this,resource,pattern,resolver
LocalSessionFactoryBean -> public ResourceLoader getResourceLoader();1530174524;Determine the Spring {@link ResourceLoader} to use for Hibernate metadata._@return the ResourceLoader to use (never {@code null})_@since 4.3;public ResourceLoader getResourceLoader() {_		if (this.resourcePatternResolver == null) {_			this.resourcePatternResolver = new PathMatchingResourcePatternResolver()__		}_		return this.resourcePatternResolver__	};determine,the,spring,link,resource,loader,to,use,for,hibernate,metadata,return,the,resource,loader,to,use,never,code,null,since,4,3;public,resource,loader,get,resource,loader,if,this,resource,pattern,resolver,null,this,resource,pattern,resolver,new,path,matching,resource,pattern,resolver,return,this,resource,pattern,resolver
LocalSessionFactoryBean -> public ResourceLoader getResourceLoader();1530188116;Determine the Spring {@link ResourceLoader} to use for Hibernate metadata._@return the ResourceLoader to use (never {@code null})_@since 4.3;public ResourceLoader getResourceLoader() {_		if (this.resourcePatternResolver == null) {_			this.resourcePatternResolver = new PathMatchingResourcePatternResolver()__		}_		return this.resourcePatternResolver__	};determine,the,spring,link,resource,loader,to,use,for,hibernate,metadata,return,the,resource,loader,to,use,never,code,null,since,4,3;public,resource,loader,get,resource,loader,if,this,resource,pattern,resolver,null,this,resource,pattern,resolver,new,path,matching,resource,pattern,resolver,return,this,resource,pattern,resolver
LocalSessionFactoryBean -> public ResourceLoader getResourceLoader();1530724999;Determine the Spring {@link ResourceLoader} to use for Hibernate metadata._@return the ResourceLoader to use (never {@code null})_@since 4.3;public ResourceLoader getResourceLoader() {_		if (this.resourcePatternResolver == null) {_			this.resourcePatternResolver = new PathMatchingResourcePatternResolver()__		}_		return this.resourcePatternResolver__	};determine,the,spring,link,resource,loader,to,use,for,hibernate,metadata,return,the,resource,loader,to,use,never,code,null,since,4,3;public,resource,loader,get,resource,loader,if,this,resource,pattern,resolver,null,this,resource,pattern,resolver,new,path,matching,resource,pattern,resolver,return,this,resource,pattern,resolver
LocalSessionFactoryBean -> public ResourceLoader getResourceLoader();1530802115;Determine the Spring {@link ResourceLoader} to use for Hibernate metadata._@return the ResourceLoader to use (never {@code null})_@since 4.3;public ResourceLoader getResourceLoader() {_		if (this.resourcePatternResolver == null) {_			this.resourcePatternResolver = new PathMatchingResourcePatternResolver()__		}_		return this.resourcePatternResolver__	};determine,the,spring,link,resource,loader,to,use,for,hibernate,metadata,return,the,resource,loader,to,use,never,code,null,since,4,3;public,resource,loader,get,resource,loader,if,this,resource,pattern,resolver,null,this,resource,pattern,resolver,new,path,matching,resource,pattern,resolver,return,this,resource,pattern,resolver
LocalSessionFactoryBean -> public ResourceLoader getResourceLoader();1531739026;Determine the Spring {@link ResourceLoader} to use for Hibernate metadata._@return the ResourceLoader to use (never {@code null})_@since 4.3;public ResourceLoader getResourceLoader() {_		if (this.resourcePatternResolver == null) {_			this.resourcePatternResolver = new PathMatchingResourcePatternResolver()__		}_		return this.resourcePatternResolver__	};determine,the,spring,link,resource,loader,to,use,for,hibernate,metadata,return,the,resource,loader,to,use,never,code,null,since,4,3;public,resource,loader,get,resource,loader,if,this,resource,pattern,resolver,null,this,resource,pattern,resolver,new,path,matching,resource,pattern,resolver,return,this,resource,pattern,resolver
LocalSessionFactoryBean -> public void setEntityInterceptor(Interceptor entityInterceptor);1467668243;Set a Hibernate entity interceptor that allows to inspect and change_property values before writing to and reading from the database._Will get applied to any new Session created by this factory._@see Configuration#setInterceptor;public void setEntityInterceptor(Interceptor entityInterceptor) {_		this.entityInterceptor = entityInterceptor__	};set,a,hibernate,entity,interceptor,that,allows,to,inspect,and,change,property,values,before,writing,to,and,reading,from,the,database,will,get,applied,to,any,new,session,created,by,this,factory,see,configuration,set,interceptor;public,void,set,entity,interceptor,interceptor,entity,interceptor,this,entity,interceptor,entity,interceptor
LocalSessionFactoryBean -> public void setEntityInterceptor(Interceptor entityInterceptor);1477661704;Set a Hibernate entity interceptor that allows to inspect and change_property values before writing to and reading from the database._Will get applied to any new Session created by this factory._@see Configuration#setInterceptor;public void setEntityInterceptor(Interceptor entityInterceptor) {_		this.entityInterceptor = entityInterceptor__	};set,a,hibernate,entity,interceptor,that,allows,to,inspect,and,change,property,values,before,writing,to,and,reading,from,the,database,will,get,applied,to,any,new,session,created,by,this,factory,see,configuration,set,interceptor;public,void,set,entity,interceptor,interceptor,entity,interceptor,this,entity,interceptor,entity,interceptor
LocalSessionFactoryBean -> public void setEntityInterceptor(Interceptor entityInterceptor);1496259743;Set a Hibernate entity interceptor that allows to inspect and change_property values before writing to and reading from the database._Will get applied to any new Session created by this factory._@see Configuration#setInterceptor;public void setEntityInterceptor(Interceptor entityInterceptor) {_		this.entityInterceptor = entityInterceptor__	};set,a,hibernate,entity,interceptor,that,allows,to,inspect,and,change,property,values,before,writing,to,and,reading,from,the,database,will,get,applied,to,any,new,session,created,by,this,factory,see,configuration,set,interceptor;public,void,set,entity,interceptor,interceptor,entity,interceptor,this,entity,interceptor,entity,interceptor
LocalSessionFactoryBean -> public void setEntityInterceptor(Interceptor entityInterceptor);1498780456;Set a Hibernate entity interceptor that allows to inspect and change_property values before writing to and reading from the database._Will get applied to any new Session created by this factory._@see Configuration#setInterceptor;public void setEntityInterceptor(Interceptor entityInterceptor) {_		this.entityInterceptor = entityInterceptor__	};set,a,hibernate,entity,interceptor,that,allows,to,inspect,and,change,property,values,before,writing,to,and,reading,from,the,database,will,get,applied,to,any,new,session,created,by,this,factory,see,configuration,set,interceptor;public,void,set,entity,interceptor,interceptor,entity,interceptor,this,entity,interceptor,entity,interceptor
LocalSessionFactoryBean -> public void setEntityInterceptor(Interceptor entityInterceptor);1502974979;Set a Hibernate entity interceptor that allows to inspect and change_property values before writing to and reading from the database._Will get applied to any new Session created by this factory._@see Configuration#setInterceptor;public void setEntityInterceptor(Interceptor entityInterceptor) {_		this.entityInterceptor = entityInterceptor__	};set,a,hibernate,entity,interceptor,that,allows,to,inspect,and,change,property,values,before,writing,to,and,reading,from,the,database,will,get,applied,to,any,new,session,created,by,this,factory,see,configuration,set,interceptor;public,void,set,entity,interceptor,interceptor,entity,interceptor,this,entity,interceptor,entity,interceptor
LocalSessionFactoryBean -> public void setEntityInterceptor(Interceptor entityInterceptor);1530174524;Set a Hibernate entity interceptor that allows to inspect and change_property values before writing to and reading from the database._Will get applied to any new Session created by this factory._@see Configuration#setInterceptor;public void setEntityInterceptor(Interceptor entityInterceptor) {_		this.entityInterceptor = entityInterceptor__	};set,a,hibernate,entity,interceptor,that,allows,to,inspect,and,change,property,values,before,writing,to,and,reading,from,the,database,will,get,applied,to,any,new,session,created,by,this,factory,see,configuration,set,interceptor;public,void,set,entity,interceptor,interceptor,entity,interceptor,this,entity,interceptor,entity,interceptor
LocalSessionFactoryBean -> public void setEntityInterceptor(Interceptor entityInterceptor);1530188116;Set a Hibernate entity interceptor that allows to inspect and change_property values before writing to and reading from the database._Will get applied to any new Session created by this factory._@see Configuration#setInterceptor;public void setEntityInterceptor(Interceptor entityInterceptor) {_		this.entityInterceptor = entityInterceptor__	};set,a,hibernate,entity,interceptor,that,allows,to,inspect,and,change,property,values,before,writing,to,and,reading,from,the,database,will,get,applied,to,any,new,session,created,by,this,factory,see,configuration,set,interceptor;public,void,set,entity,interceptor,interceptor,entity,interceptor,this,entity,interceptor,entity,interceptor
LocalSessionFactoryBean -> public void setEntityInterceptor(Interceptor entityInterceptor);1530724999;Set a Hibernate entity interceptor that allows to inspect and change_property values before writing to and reading from the database._Will get applied to any new Session created by this factory._@see Configuration#setInterceptor;public void setEntityInterceptor(Interceptor entityInterceptor) {_		this.entityInterceptor = entityInterceptor__	};set,a,hibernate,entity,interceptor,that,allows,to,inspect,and,change,property,values,before,writing,to,and,reading,from,the,database,will,get,applied,to,any,new,session,created,by,this,factory,see,configuration,set,interceptor;public,void,set,entity,interceptor,interceptor,entity,interceptor,this,entity,interceptor,entity,interceptor
LocalSessionFactoryBean -> public void setEntityInterceptor(Interceptor entityInterceptor);1530802115;Set a Hibernate entity interceptor that allows to inspect and change_property values before writing to and reading from the database._Will get applied to any new Session created by this factory._@see Configuration#setInterceptor;public void setEntityInterceptor(Interceptor entityInterceptor) {_		this.entityInterceptor = entityInterceptor__	};set,a,hibernate,entity,interceptor,that,allows,to,inspect,and,change,property,values,before,writing,to,and,reading,from,the,database,will,get,applied,to,any,new,session,created,by,this,factory,see,configuration,set,interceptor;public,void,set,entity,interceptor,interceptor,entity,interceptor,this,entity,interceptor,entity,interceptor
LocalSessionFactoryBean -> public void setEntityInterceptor(Interceptor entityInterceptor);1531739026;Set a Hibernate entity interceptor that allows to inspect and change_property values before writing to and reading from the database._Will get applied to any new Session created by this factory._@see Configuration#setInterceptor;public void setEntityInterceptor(Interceptor entityInterceptor) {_		this.entityInterceptor = entityInterceptor__	};set,a,hibernate,entity,interceptor,that,allows,to,inspect,and,change,property,values,before,writing,to,and,reading,from,the,database,will,get,applied,to,any,new,session,created,by,this,factory,see,configuration,set,interceptor;public,void,set,entity,interceptor,interceptor,entity,interceptor,this,entity,interceptor,entity,interceptor
LocalSessionFactoryBean -> public Properties getHibernateProperties();1467668243;Return the Hibernate properties, if any. Mainly available for_configuration through property paths that specify individual keys.;public Properties getHibernateProperties() {_		if (this.hibernateProperties == null) {_			this.hibernateProperties = new Properties()__		}_		return this.hibernateProperties__	};return,the,hibernate,properties,if,any,mainly,available,for,configuration,through,property,paths,that,specify,individual,keys;public,properties,get,hibernate,properties,if,this,hibernate,properties,null,this,hibernate,properties,new,properties,return,this,hibernate,properties
LocalSessionFactoryBean -> public Properties getHibernateProperties();1477661704;Return the Hibernate properties, if any. Mainly available for_configuration through property paths that specify individual keys.;public Properties getHibernateProperties() {_		if (this.hibernateProperties == null) {_			this.hibernateProperties = new Properties()__		}_		return this.hibernateProperties__	};return,the,hibernate,properties,if,any,mainly,available,for,configuration,through,property,paths,that,specify,individual,keys;public,properties,get,hibernate,properties,if,this,hibernate,properties,null,this,hibernate,properties,new,properties,return,this,hibernate,properties
LocalSessionFactoryBean -> public Properties getHibernateProperties();1496259743;Return the Hibernate properties, if any. Mainly available for_configuration through property paths that specify individual keys.;public Properties getHibernateProperties() {_		if (this.hibernateProperties == null) {_			this.hibernateProperties = new Properties()__		}_		return this.hibernateProperties__	};return,the,hibernate,properties,if,any,mainly,available,for,configuration,through,property,paths,that,specify,individual,keys;public,properties,get,hibernate,properties,if,this,hibernate,properties,null,this,hibernate,properties,new,properties,return,this,hibernate,properties
LocalSessionFactoryBean -> public Properties getHibernateProperties();1498780456;Return the Hibernate properties, if any. Mainly available for_configuration through property paths that specify individual keys.;public Properties getHibernateProperties() {_		if (this.hibernateProperties == null) {_			this.hibernateProperties = new Properties()__		}_		return this.hibernateProperties__	};return,the,hibernate,properties,if,any,mainly,available,for,configuration,through,property,paths,that,specify,individual,keys;public,properties,get,hibernate,properties,if,this,hibernate,properties,null,this,hibernate,properties,new,properties,return,this,hibernate,properties
LocalSessionFactoryBean -> public Properties getHibernateProperties();1502974979;Return the Hibernate properties, if any. Mainly available for_configuration through property paths that specify individual keys.;public Properties getHibernateProperties() {_		if (this.hibernateProperties == null) {_			this.hibernateProperties = new Properties()__		}_		return this.hibernateProperties__	};return,the,hibernate,properties,if,any,mainly,available,for,configuration,through,property,paths,that,specify,individual,keys;public,properties,get,hibernate,properties,if,this,hibernate,properties,null,this,hibernate,properties,new,properties,return,this,hibernate,properties
LocalSessionFactoryBean -> public Properties getHibernateProperties();1530174524;Return the Hibernate properties, if any. Mainly available for_configuration through property paths that specify individual keys.;public Properties getHibernateProperties() {_		if (this.hibernateProperties == null) {_			this.hibernateProperties = new Properties()__		}_		return this.hibernateProperties__	};return,the,hibernate,properties,if,any,mainly,available,for,configuration,through,property,paths,that,specify,individual,keys;public,properties,get,hibernate,properties,if,this,hibernate,properties,null,this,hibernate,properties,new,properties,return,this,hibernate,properties
LocalSessionFactoryBean -> public Properties getHibernateProperties();1530188116;Return the Hibernate properties, if any. Mainly available for_configuration through property paths that specify individual keys.;public Properties getHibernateProperties() {_		if (this.hibernateProperties == null) {_			this.hibernateProperties = new Properties()__		}_		return this.hibernateProperties__	};return,the,hibernate,properties,if,any,mainly,available,for,configuration,through,property,paths,that,specify,individual,keys;public,properties,get,hibernate,properties,if,this,hibernate,properties,null,this,hibernate,properties,new,properties,return,this,hibernate,properties
LocalSessionFactoryBean -> public Properties getHibernateProperties();1530724999;Return the Hibernate properties, if any. Mainly available for_configuration through property paths that specify individual keys.;public Properties getHibernateProperties() {_		if (this.hibernateProperties == null) {_			this.hibernateProperties = new Properties()__		}_		return this.hibernateProperties__	};return,the,hibernate,properties,if,any,mainly,available,for,configuration,through,property,paths,that,specify,individual,keys;public,properties,get,hibernate,properties,if,this,hibernate,properties,null,this,hibernate,properties,new,properties,return,this,hibernate,properties
LocalSessionFactoryBean -> public Properties getHibernateProperties();1530802115;Return the Hibernate properties, if any. Mainly available for_configuration through property paths that specify individual keys.;public Properties getHibernateProperties() {_		if (this.hibernateProperties == null) {_			this.hibernateProperties = new Properties()__		}_		return this.hibernateProperties__	};return,the,hibernate,properties,if,any,mainly,available,for,configuration,through,property,paths,that,specify,individual,keys;public,properties,get,hibernate,properties,if,this,hibernate,properties,null,this,hibernate,properties,new,properties,return,this,hibernate,properties
LocalSessionFactoryBean -> public Properties getHibernateProperties();1531739026;Return the Hibernate properties, if any. Mainly available for_configuration through property paths that specify individual keys.;public Properties getHibernateProperties() {_		if (this.hibernateProperties == null) {_			this.hibernateProperties = new Properties()__		}_		return this.hibernateProperties__	};return,the,hibernate,properties,if,any,mainly,available,for,configuration,through,property,paths,that,specify,individual,keys;public,properties,get,hibernate,properties,if,this,hibernate,properties,null,this,hibernate,properties,new,properties,return,this,hibernate,properties
LocalSessionFactoryBean -> public void setMappingDirectoryLocations(Resource... mappingDirectoryLocations);1467668243;Set locations of directories that contain Hibernate mapping resources,_like "WEB-INF/mappings"._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addDirectory(File);public void setMappingDirectoryLocations(Resource... mappingDirectoryLocations) {_		this.mappingDirectoryLocations = mappingDirectoryLocations__	};set,locations,of,directories,that,contain,hibernate,mapping,resources,like,web,inf,mappings,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,directory,file;public,void,set,mapping,directory,locations,resource,mapping,directory,locations,this,mapping,directory,locations,mapping,directory,locations
LocalSessionFactoryBean -> public void setMappingDirectoryLocations(Resource... mappingDirectoryLocations);1477661704;Set locations of directories that contain Hibernate mapping resources,_like "WEB-INF/mappings"._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addDirectory(File);public void setMappingDirectoryLocations(Resource... mappingDirectoryLocations) {_		this.mappingDirectoryLocations = mappingDirectoryLocations__	};set,locations,of,directories,that,contain,hibernate,mapping,resources,like,web,inf,mappings,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,directory,file;public,void,set,mapping,directory,locations,resource,mapping,directory,locations,this,mapping,directory,locations,mapping,directory,locations
LocalSessionFactoryBean -> public void setMappingDirectoryLocations(Resource... mappingDirectoryLocations);1496259743;Set locations of directories that contain Hibernate mapping resources,_like "WEB-INF/mappings"._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addDirectory(File);public void setMappingDirectoryLocations(Resource... mappingDirectoryLocations) {_		this.mappingDirectoryLocations = mappingDirectoryLocations__	};set,locations,of,directories,that,contain,hibernate,mapping,resources,like,web,inf,mappings,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,directory,file;public,void,set,mapping,directory,locations,resource,mapping,directory,locations,this,mapping,directory,locations,mapping,directory,locations
LocalSessionFactoryBean -> public void setMappingDirectoryLocations(Resource... mappingDirectoryLocations);1498780456;Set locations of directories that contain Hibernate mapping resources,_like "WEB-INF/mappings"._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addDirectory(File);public void setMappingDirectoryLocations(Resource... mappingDirectoryLocations) {_		this.mappingDirectoryLocations = mappingDirectoryLocations__	};set,locations,of,directories,that,contain,hibernate,mapping,resources,like,web,inf,mappings,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,directory,file;public,void,set,mapping,directory,locations,resource,mapping,directory,locations,this,mapping,directory,locations,mapping,directory,locations
LocalSessionFactoryBean -> public void setMappingDirectoryLocations(Resource... mappingDirectoryLocations);1502974979;Set locations of directories that contain Hibernate mapping resources,_like "WEB-INF/mappings"._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addDirectory(File);public void setMappingDirectoryLocations(Resource... mappingDirectoryLocations) {_		this.mappingDirectoryLocations = mappingDirectoryLocations__	};set,locations,of,directories,that,contain,hibernate,mapping,resources,like,web,inf,mappings,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,directory,file;public,void,set,mapping,directory,locations,resource,mapping,directory,locations,this,mapping,directory,locations,mapping,directory,locations
LocalSessionFactoryBean -> public void setMappingDirectoryLocations(Resource... mappingDirectoryLocations);1530174524;Set locations of directories that contain Hibernate mapping resources,_like "WEB-INF/mappings"._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addDirectory(File);public void setMappingDirectoryLocations(Resource... mappingDirectoryLocations) {_		this.mappingDirectoryLocations = mappingDirectoryLocations__	};set,locations,of,directories,that,contain,hibernate,mapping,resources,like,web,inf,mappings,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,directory,file;public,void,set,mapping,directory,locations,resource,mapping,directory,locations,this,mapping,directory,locations,mapping,directory,locations
LocalSessionFactoryBean -> public void setMappingDirectoryLocations(Resource... mappingDirectoryLocations);1530188116;Set locations of directories that contain Hibernate mapping resources,_like "WEB-INF/mappings"._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addDirectory(File);public void setMappingDirectoryLocations(Resource... mappingDirectoryLocations) {_		this.mappingDirectoryLocations = mappingDirectoryLocations__	};set,locations,of,directories,that,contain,hibernate,mapping,resources,like,web,inf,mappings,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,directory,file;public,void,set,mapping,directory,locations,resource,mapping,directory,locations,this,mapping,directory,locations,mapping,directory,locations
LocalSessionFactoryBean -> public void setMappingDirectoryLocations(Resource... mappingDirectoryLocations);1530724999;Set locations of directories that contain Hibernate mapping resources,_like "WEB-INF/mappings"._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addDirectory(File);public void setMappingDirectoryLocations(Resource... mappingDirectoryLocations) {_		this.mappingDirectoryLocations = mappingDirectoryLocations__	};set,locations,of,directories,that,contain,hibernate,mapping,resources,like,web,inf,mappings,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,directory,file;public,void,set,mapping,directory,locations,resource,mapping,directory,locations,this,mapping,directory,locations,mapping,directory,locations
LocalSessionFactoryBean -> public void setMappingDirectoryLocations(Resource... mappingDirectoryLocations);1530802115;Set locations of directories that contain Hibernate mapping resources,_like "WEB-INF/mappings"._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addDirectory(File);public void setMappingDirectoryLocations(Resource... mappingDirectoryLocations) {_		this.mappingDirectoryLocations = mappingDirectoryLocations__	};set,locations,of,directories,that,contain,hibernate,mapping,resources,like,web,inf,mappings,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,directory,file;public,void,set,mapping,directory,locations,resource,mapping,directory,locations,this,mapping,directory,locations,mapping,directory,locations
LocalSessionFactoryBean -> public void setMappingDirectoryLocations(Resource... mappingDirectoryLocations);1531739026;Set locations of directories that contain Hibernate mapping resources,_like "WEB-INF/mappings"._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see Configuration#addDirectory(File);public void setMappingDirectoryLocations(Resource... mappingDirectoryLocations) {_		this.mappingDirectoryLocations = mappingDirectoryLocations__	};set,locations,of,directories,that,contain,hibernate,mapping,resources,like,web,inf,mappings,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,configuration,add,directory,file;public,void,set,mapping,directory,locations,resource,mapping,directory,locations,this,mapping,directory,locations,mapping,directory,locations
LocalSessionFactoryBean -> public void setMappingResources(String... mappingResources);1467668243;Set Hibernate mapping resources to be found in the class path,_like "example.hbm.xml" or "mypackage/example.hbm.xml"._Analogous to mapping entries in a Hibernate XML config file._Alternative to the more generic setMappingLocations method._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see #setMappingLocations_@see Configuration#addResource;public void setMappingResources(String... mappingResources) {_		this.mappingResources = mappingResources__	};set,hibernate,mapping,resources,to,be,found,in,the,class,path,like,example,hbm,xml,or,mypackage,example,hbm,xml,analogous,to,mapping,entries,in,a,hibernate,xml,config,file,alternative,to,the,more,generic,set,mapping,locations,method,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,set,mapping,locations,see,configuration,add,resource;public,void,set,mapping,resources,string,mapping,resources,this,mapping,resources,mapping,resources
LocalSessionFactoryBean -> public void setMappingResources(String... mappingResources);1477661704;Set Hibernate mapping resources to be found in the class path,_like "example.hbm.xml" or "mypackage/example.hbm.xml"._Analogous to mapping entries in a Hibernate XML config file._Alternative to the more generic setMappingLocations method._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see #setMappingLocations_@see Configuration#addResource;public void setMappingResources(String... mappingResources) {_		this.mappingResources = mappingResources__	};set,hibernate,mapping,resources,to,be,found,in,the,class,path,like,example,hbm,xml,or,mypackage,example,hbm,xml,analogous,to,mapping,entries,in,a,hibernate,xml,config,file,alternative,to,the,more,generic,set,mapping,locations,method,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,set,mapping,locations,see,configuration,add,resource;public,void,set,mapping,resources,string,mapping,resources,this,mapping,resources,mapping,resources
LocalSessionFactoryBean -> public void setMappingResources(String... mappingResources);1496259743;Set Hibernate mapping resources to be found in the class path,_like "example.hbm.xml" or "mypackage/example.hbm.xml"._Analogous to mapping entries in a Hibernate XML config file._Alternative to the more generic setMappingLocations method._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see #setMappingLocations_@see Configuration#addResource;public void setMappingResources(String... mappingResources) {_		this.mappingResources = mappingResources__	};set,hibernate,mapping,resources,to,be,found,in,the,class,path,like,example,hbm,xml,or,mypackage,example,hbm,xml,analogous,to,mapping,entries,in,a,hibernate,xml,config,file,alternative,to,the,more,generic,set,mapping,locations,method,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,set,mapping,locations,see,configuration,add,resource;public,void,set,mapping,resources,string,mapping,resources,this,mapping,resources,mapping,resources
LocalSessionFactoryBean -> public void setMappingResources(String... mappingResources);1498780456;Set Hibernate mapping resources to be found in the class path,_like "example.hbm.xml" or "mypackage/example.hbm.xml"._Analogous to mapping entries in a Hibernate XML config file._Alternative to the more generic setMappingLocations method._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see #setMappingLocations_@see Configuration#addResource;public void setMappingResources(String... mappingResources) {_		this.mappingResources = mappingResources__	};set,hibernate,mapping,resources,to,be,found,in,the,class,path,like,example,hbm,xml,or,mypackage,example,hbm,xml,analogous,to,mapping,entries,in,a,hibernate,xml,config,file,alternative,to,the,more,generic,set,mapping,locations,method,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,set,mapping,locations,see,configuration,add,resource;public,void,set,mapping,resources,string,mapping,resources,this,mapping,resources,mapping,resources
LocalSessionFactoryBean -> public void setMappingResources(String... mappingResources);1502974979;Set Hibernate mapping resources to be found in the class path,_like "example.hbm.xml" or "mypackage/example.hbm.xml"._Analogous to mapping entries in a Hibernate XML config file._Alternative to the more generic setMappingLocations method._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see #setMappingLocations_@see Configuration#addResource;public void setMappingResources(String... mappingResources) {_		this.mappingResources = mappingResources__	};set,hibernate,mapping,resources,to,be,found,in,the,class,path,like,example,hbm,xml,or,mypackage,example,hbm,xml,analogous,to,mapping,entries,in,a,hibernate,xml,config,file,alternative,to,the,more,generic,set,mapping,locations,method,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,set,mapping,locations,see,configuration,add,resource;public,void,set,mapping,resources,string,mapping,resources,this,mapping,resources,mapping,resources
LocalSessionFactoryBean -> public void setMappingResources(String... mappingResources);1530174524;Set Hibernate mapping resources to be found in the class path,_like "example.hbm.xml" or "mypackage/example.hbm.xml"._Analogous to mapping entries in a Hibernate XML config file._Alternative to the more generic setMappingLocations method._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see #setMappingLocations_@see Configuration#addResource;public void setMappingResources(String... mappingResources) {_		this.mappingResources = mappingResources__	};set,hibernate,mapping,resources,to,be,found,in,the,class,path,like,example,hbm,xml,or,mypackage,example,hbm,xml,analogous,to,mapping,entries,in,a,hibernate,xml,config,file,alternative,to,the,more,generic,set,mapping,locations,method,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,set,mapping,locations,see,configuration,add,resource;public,void,set,mapping,resources,string,mapping,resources,this,mapping,resources,mapping,resources
LocalSessionFactoryBean -> public void setMappingResources(String... mappingResources);1530188116;Set Hibernate mapping resources to be found in the class path,_like "example.hbm.xml" or "mypackage/example.hbm.xml"._Analogous to mapping entries in a Hibernate XML config file._Alternative to the more generic setMappingLocations method._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see #setMappingLocations_@see Configuration#addResource;public void setMappingResources(String... mappingResources) {_		this.mappingResources = mappingResources__	};set,hibernate,mapping,resources,to,be,found,in,the,class,path,like,example,hbm,xml,or,mypackage,example,hbm,xml,analogous,to,mapping,entries,in,a,hibernate,xml,config,file,alternative,to,the,more,generic,set,mapping,locations,method,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,set,mapping,locations,see,configuration,add,resource;public,void,set,mapping,resources,string,mapping,resources,this,mapping,resources,mapping,resources
LocalSessionFactoryBean -> public void setMappingResources(String... mappingResources);1530724999;Set Hibernate mapping resources to be found in the class path,_like "example.hbm.xml" or "mypackage/example.hbm.xml"._Analogous to mapping entries in a Hibernate XML config file._Alternative to the more generic setMappingLocations method._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see #setMappingLocations_@see Configuration#addResource;public void setMappingResources(String... mappingResources) {_		this.mappingResources = mappingResources__	};set,hibernate,mapping,resources,to,be,found,in,the,class,path,like,example,hbm,xml,or,mypackage,example,hbm,xml,analogous,to,mapping,entries,in,a,hibernate,xml,config,file,alternative,to,the,more,generic,set,mapping,locations,method,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,set,mapping,locations,see,configuration,add,resource;public,void,set,mapping,resources,string,mapping,resources,this,mapping,resources,mapping,resources
LocalSessionFactoryBean -> public void setMappingResources(String... mappingResources);1530802115;Set Hibernate mapping resources to be found in the class path,_like "example.hbm.xml" or "mypackage/example.hbm.xml"._Analogous to mapping entries in a Hibernate XML config file._Alternative to the more generic setMappingLocations method._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see #setMappingLocations_@see Configuration#addResource;public void setMappingResources(String... mappingResources) {_		this.mappingResources = mappingResources__	};set,hibernate,mapping,resources,to,be,found,in,the,class,path,like,example,hbm,xml,or,mypackage,example,hbm,xml,analogous,to,mapping,entries,in,a,hibernate,xml,config,file,alternative,to,the,more,generic,set,mapping,locations,method,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,set,mapping,locations,see,configuration,add,resource;public,void,set,mapping,resources,string,mapping,resources,this,mapping,resources,mapping,resources
LocalSessionFactoryBean -> public void setMappingResources(String... mappingResources);1531739026;Set Hibernate mapping resources to be found in the class path,_like "example.hbm.xml" or "mypackage/example.hbm.xml"._Analogous to mapping entries in a Hibernate XML config file._Alternative to the more generic setMappingLocations method._<p>Can be used to add to mappings from a Hibernate XML config file,_or to specify all mappings locally._@see #setMappingLocations_@see Configuration#addResource;public void setMappingResources(String... mappingResources) {_		this.mappingResources = mappingResources__	};set,hibernate,mapping,resources,to,be,found,in,the,class,path,like,example,hbm,xml,or,mypackage,example,hbm,xml,analogous,to,mapping,entries,in,a,hibernate,xml,config,file,alternative,to,the,more,generic,set,mapping,locations,method,p,can,be,used,to,add,to,mappings,from,a,hibernate,xml,config,file,or,to,specify,all,mappings,locally,see,set,mapping,locations,see,configuration,add,resource;public,void,set,mapping,resources,string,mapping,resources,this,mapping,resources,mapping,resources
