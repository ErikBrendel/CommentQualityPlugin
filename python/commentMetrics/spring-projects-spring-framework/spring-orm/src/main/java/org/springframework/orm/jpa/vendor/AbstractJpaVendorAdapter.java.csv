# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractJpaVendorAdapter -> public void setGenerateDdl(boolean generateDdl);1328020251;Set whether to generate DDL after the EntityManagerFactory has been initialized,_creating/updating all relevant tables._<p>Note that the exact semantics of this flag depend on the underlying_persistence provider. For any more advanced needs, specify the appropriate_vendor-specific settings as "jpaProperties"._@see org.springframework.orm.jpa.AbstractEntityManagerFactoryBean#setJpaProperties;public void setGenerateDdl(boolean generateDdl) {_		this.generateDdl = generateDdl__	};set,whether,to,generate,ddl,after,the,entity,manager,factory,has,been,initialized,creating,updating,all,relevant,tables,p,note,that,the,exact,semantics,of,this,flag,depend,on,the,underlying,persistence,provider,for,any,more,advanced,needs,specify,the,appropriate,vendor,specific,settings,as,jpa,properties,see,org,springframework,orm,jpa,abstract,entity,manager,factory,bean,set,jpa,properties;public,void,set,generate,ddl,boolean,generate,ddl,this,generate,ddl,generate,ddl
AbstractJpaVendorAdapter -> public void setGenerateDdl(boolean generateDdl);1356735495;Set whether to generate DDL after the EntityManagerFactory has been initialized,_creating/updating all relevant tables._<p>Note that the exact semantics of this flag depend on the underlying_persistence provider. For any more advanced needs, specify the appropriate_vendor-specific settings as "jpaProperties"._@see org.springframework.orm.jpa.AbstractEntityManagerFactoryBean#setJpaProperties;public void setGenerateDdl(boolean generateDdl) {_		this.generateDdl = generateDdl__	};set,whether,to,generate,ddl,after,the,entity,manager,factory,has,been,initialized,creating,updating,all,relevant,tables,p,note,that,the,exact,semantics,of,this,flag,depend,on,the,underlying,persistence,provider,for,any,more,advanced,needs,specify,the,appropriate,vendor,specific,settings,as,jpa,properties,see,org,springframework,orm,jpa,abstract,entity,manager,factory,bean,set,jpa,properties;public,void,set,generate,ddl,boolean,generate,ddl,this,generate,ddl,generate,ddl
AbstractJpaVendorAdapter -> public void setGenerateDdl(boolean generateDdl);1357119239;Set whether to generate DDL after the EntityManagerFactory has been initialized,_creating/updating all relevant tables._<p>Note that the exact semantics of this flag depend on the underlying_persistence provider. For any more advanced needs, specify the appropriate_vendor-specific settings as "jpaProperties"._@see org.springframework.orm.jpa.AbstractEntityManagerFactoryBean#setJpaProperties;public void setGenerateDdl(boolean generateDdl) {_		this.generateDdl = generateDdl__	};set,whether,to,generate,ddl,after,the,entity,manager,factory,has,been,initialized,creating,updating,all,relevant,tables,p,note,that,the,exact,semantics,of,this,flag,depend,on,the,underlying,persistence,provider,for,any,more,advanced,needs,specify,the,appropriate,vendor,specific,settings,as,jpa,properties,see,org,springframework,orm,jpa,abstract,entity,manager,factory,bean,set,jpa,properties;public,void,set,generate,ddl,boolean,generate,ddl,this,generate,ddl,generate,ddl
AbstractJpaVendorAdapter -> public void setGenerateDdl(boolean generateDdl);1368482696;Set whether to generate DDL after the EntityManagerFactory has been initialized,_creating/updating all relevant tables._<p>Note that the exact semantics of this flag depend on the underlying_persistence provider. For any more advanced needs, specify the appropriate_vendor-specific settings as "jpaProperties"._@see org.springframework.orm.jpa.AbstractEntityManagerFactoryBean#setJpaProperties;public void setGenerateDdl(boolean generateDdl) {_		this.generateDdl = generateDdl__	};set,whether,to,generate,ddl,after,the,entity,manager,factory,has,been,initialized,creating,updating,all,relevant,tables,p,note,that,the,exact,semantics,of,this,flag,depend,on,the,underlying,persistence,provider,for,any,more,advanced,needs,specify,the,appropriate,vendor,specific,settings,as,jpa,properties,see,org,springframework,orm,jpa,abstract,entity,manager,factory,bean,set,jpa,properties;public,void,set,generate,ddl,boolean,generate,ddl,this,generate,ddl,generate,ddl
AbstractJpaVendorAdapter -> public void setGenerateDdl(boolean generateDdl);1436280273;Set whether to generate DDL after the EntityManagerFactory has been initialized,_creating/updating all relevant tables._<p>Note that the exact semantics of this flag depend on the underlying_persistence provider. For any more advanced needs, specify the appropriate_vendor-specific settings as "jpaProperties"._<p><b>NOTE: Do not set this flag to 'true' while also setting JPA 2.1's_{@code javax.persistence.schema-generation.database.action} property.</b>_These two schema generation mechanisms - standard JPA versus provider-native -_are mutually exclusive, e.g. with Hibernate 5._@see org.springframework.orm.jpa.AbstractEntityManagerFactoryBean#setJpaProperties;public void setGenerateDdl(boolean generateDdl) {_		this.generateDdl = generateDdl__	};set,whether,to,generate,ddl,after,the,entity,manager,factory,has,been,initialized,creating,updating,all,relevant,tables,p,note,that,the,exact,semantics,of,this,flag,depend,on,the,underlying,persistence,provider,for,any,more,advanced,needs,specify,the,appropriate,vendor,specific,settings,as,jpa,properties,p,b,note,do,not,set,this,flag,to,true,while,also,setting,jpa,2,1,s,code,javax,persistence,schema,generation,database,action,property,b,these,two,schema,generation,mechanisms,standard,jpa,versus,provider,native,are,mutually,exclusive,e,g,with,hibernate,5,see,org,springframework,orm,jpa,abstract,entity,manager,factory,bean,set,jpa,properties;public,void,set,generate,ddl,boolean,generate,ddl,this,generate,ddl,generate,ddl
AbstractJpaVendorAdapter -> public void setGenerateDdl(boolean generateDdl);1496837955;Set whether to generate DDL after the EntityManagerFactory has been initialized,_creating/updating all relevant tables._<p>Note that the exact semantics of this flag depend on the underlying_persistence provider. For any more advanced needs, specify the appropriate_vendor-specific settings as "jpaProperties"._<p><b>NOTE: Do not set this flag to 'true' while also setting JPA 2.1's_{@code javax.persistence.schema-generation.database.action} property.</b>_These two schema generation mechanisms - standard JPA versus provider-native -_are mutually exclusive, e.g. with Hibernate 5._@see org.springframework.orm.jpa.AbstractEntityManagerFactoryBean#setJpaProperties;public void setGenerateDdl(boolean generateDdl) {_		this.generateDdl = generateDdl__	};set,whether,to,generate,ddl,after,the,entity,manager,factory,has,been,initialized,creating,updating,all,relevant,tables,p,note,that,the,exact,semantics,of,this,flag,depend,on,the,underlying,persistence,provider,for,any,more,advanced,needs,specify,the,appropriate,vendor,specific,settings,as,jpa,properties,p,b,note,do,not,set,this,flag,to,true,while,also,setting,jpa,2,1,s,code,javax,persistence,schema,generation,database,action,property,b,these,two,schema,generation,mechanisms,standard,jpa,versus,provider,native,are,mutually,exclusive,e,g,with,hibernate,5,see,org,springframework,orm,jpa,abstract,entity,manager,factory,bean,set,jpa,properties;public,void,set,generate,ddl,boolean,generate,ddl,this,generate,ddl,generate,ddl
AbstractJpaVendorAdapter -> public void setGenerateDdl(boolean generateDdl);1500448076;Set whether to generate DDL after the EntityManagerFactory has been initialized,_creating/updating all relevant tables._<p>Note that the exact semantics of this flag depend on the underlying_persistence provider. For any more advanced needs, specify the appropriate_vendor-specific settings as "jpaProperties"._<p><b>NOTE: Do not set this flag to 'true' while also setting JPA 2.1's_{@code javax.persistence.schema-generation.database.action} property.</b>_These two schema generation mechanisms - standard JPA versus provider-native -_are mutually exclusive, e.g. with Hibernate 5._@see org.springframework.orm.jpa.AbstractEntityManagerFactoryBean#setJpaProperties;public void setGenerateDdl(boolean generateDdl) {_		this.generateDdl = generateDdl__	};set,whether,to,generate,ddl,after,the,entity,manager,factory,has,been,initialized,creating,updating,all,relevant,tables,p,note,that,the,exact,semantics,of,this,flag,depend,on,the,underlying,persistence,provider,for,any,more,advanced,needs,specify,the,appropriate,vendor,specific,settings,as,jpa,properties,p,b,note,do,not,set,this,flag,to,true,while,also,setting,jpa,2,1,s,code,javax,persistence,schema,generation,database,action,property,b,these,two,schema,generation,mechanisms,standard,jpa,versus,provider,native,are,mutually,exclusive,e,g,with,hibernate,5,see,org,springframework,orm,jpa,abstract,entity,manager,factory,bean,set,jpa,properties;public,void,set,generate,ddl,boolean,generate,ddl,this,generate,ddl,generate,ddl
AbstractJpaVendorAdapter -> public void setGenerateDdl(boolean generateDdl);1500457438;Set whether to generate DDL after the EntityManagerFactory has been initialized,_creating/updating all relevant tables._<p>Note that the exact semantics of this flag depend on the underlying_persistence provider. For any more advanced needs, specify the appropriate_vendor-specific settings as "jpaProperties"._<p><b>NOTE: Do not set this flag to 'true' while also setting JPA 2.1's_{@code javax.persistence.schema-generation.database.action} property.</b>_These two schema generation mechanisms - standard JPA versus provider-native -_are mutually exclusive, e.g. with Hibernate 5._@see org.springframework.orm.jpa.AbstractEntityManagerFactoryBean#setJpaProperties;public void setGenerateDdl(boolean generateDdl) {_		this.generateDdl = generateDdl__	};set,whether,to,generate,ddl,after,the,entity,manager,factory,has,been,initialized,creating,updating,all,relevant,tables,p,note,that,the,exact,semantics,of,this,flag,depend,on,the,underlying,persistence,provider,for,any,more,advanced,needs,specify,the,appropriate,vendor,specific,settings,as,jpa,properties,p,b,note,do,not,set,this,flag,to,true,while,also,setting,jpa,2,1,s,code,javax,persistence,schema,generation,database,action,property,b,these,two,schema,generation,mechanisms,standard,jpa,versus,provider,native,are,mutually,exclusive,e,g,with,hibernate,5,see,org,springframework,orm,jpa,abstract,entity,manager,factory,bean,set,jpa,properties;public,void,set,generate,ddl,boolean,generate,ddl,this,generate,ddl,generate,ddl
AbstractJpaVendorAdapter -> public void setGenerateDdl(boolean generateDdl);1502974979;Set whether to generate DDL after the EntityManagerFactory has been initialized,_creating/updating all relevant tables._<p>Note that the exact semantics of this flag depend on the underlying_persistence provider. For any more advanced needs, specify the appropriate_vendor-specific settings as "jpaProperties"._<p><b>NOTE: Do not set this flag to 'true' while also setting JPA 2.1's_{@code javax.persistence.schema-generation.database.action} property.</b>_These two schema generation mechanisms - standard JPA versus provider-native -_are mutually exclusive, e.g. with Hibernate 5._@see org.springframework.orm.jpa.AbstractEntityManagerFactoryBean#setJpaProperties;public void setGenerateDdl(boolean generateDdl) {_		this.generateDdl = generateDdl__	};set,whether,to,generate,ddl,after,the,entity,manager,factory,has,been,initialized,creating,updating,all,relevant,tables,p,note,that,the,exact,semantics,of,this,flag,depend,on,the,underlying,persistence,provider,for,any,more,advanced,needs,specify,the,appropriate,vendor,specific,settings,as,jpa,properties,p,b,note,do,not,set,this,flag,to,true,while,also,setting,jpa,2,1,s,code,javax,persistence,schema,generation,database,action,property,b,these,two,schema,generation,mechanisms,standard,jpa,versus,provider,native,are,mutually,exclusive,e,g,with,hibernate,5,see,org,springframework,orm,jpa,abstract,entity,manager,factory,bean,set,jpa,properties;public,void,set,generate,ddl,boolean,generate,ddl,this,generate,ddl,generate,ddl
AbstractJpaVendorAdapter -> public void setGenerateDdl(boolean generateDdl);1510341663;Set whether to generate DDL after the EntityManagerFactory has been initialized,_creating/updating all relevant tables._<p>Note that the exact semantics of this flag depend on the underlying_persistence provider. For any more advanced needs, specify the appropriate_vendor-specific settings as "jpaProperties"._<p><b>NOTE: Do not set this flag to 'true' while also setting JPA 2.1's_{@code javax.persistence.schema-generation.database.action} property.</b>_These two schema generation mechanisms - standard JPA versus provider-native -_are mutually exclusive, e.g. with Hibernate 5._@see org.springframework.orm.jpa.AbstractEntityManagerFactoryBean#setJpaProperties;public void setGenerateDdl(boolean generateDdl) {_		this.generateDdl = generateDdl__	};set,whether,to,generate,ddl,after,the,entity,manager,factory,has,been,initialized,creating,updating,all,relevant,tables,p,note,that,the,exact,semantics,of,this,flag,depend,on,the,underlying,persistence,provider,for,any,more,advanced,needs,specify,the,appropriate,vendor,specific,settings,as,jpa,properties,p,b,note,do,not,set,this,flag,to,true,while,also,setting,jpa,2,1,s,code,javax,persistence,schema,generation,database,action,property,b,these,two,schema,generation,mechanisms,standard,jpa,versus,provider,native,are,mutually,exclusive,e,g,with,hibernate,5,see,org,springframework,orm,jpa,abstract,entity,manager,factory,bean,set,jpa,properties;public,void,set,generate,ddl,boolean,generate,ddl,this,generate,ddl,generate,ddl
AbstractJpaVendorAdapter -> public void setGenerateDdl(boolean generateDdl);1517247618;Set whether to generate DDL after the EntityManagerFactory has been initialized,_creating/updating all relevant tables._<p>Note that the exact semantics of this flag depend on the underlying_persistence provider. For any more advanced needs, specify the appropriate_vendor-specific settings as "jpaProperties"._<p><b>NOTE: Do not set this flag to 'true' while also setting JPA 2.1's_{@code javax.persistence.schema-generation.database.action} property.</b>_These two schema generation mechanisms - standard JPA versus provider-native -_are mutually exclusive, e.g. with Hibernate 5._@see org.springframework.orm.jpa.AbstractEntityManagerFactoryBean#setJpaProperties;public void setGenerateDdl(boolean generateDdl) {_		this.generateDdl = generateDdl__	};set,whether,to,generate,ddl,after,the,entity,manager,factory,has,been,initialized,creating,updating,all,relevant,tables,p,note,that,the,exact,semantics,of,this,flag,depend,on,the,underlying,persistence,provider,for,any,more,advanced,needs,specify,the,appropriate,vendor,specific,settings,as,jpa,properties,p,b,note,do,not,set,this,flag,to,true,while,also,setting,jpa,2,1,s,code,javax,persistence,schema,generation,database,action,property,b,these,two,schema,generation,mechanisms,standard,jpa,versus,provider,native,are,mutually,exclusive,e,g,with,hibernate,5,see,org,springframework,orm,jpa,abstract,entity,manager,factory,bean,set,jpa,properties;public,void,set,generate,ddl,boolean,generate,ddl,this,generate,ddl,generate,ddl
AbstractJpaVendorAdapter -> public void setGenerateDdl(boolean generateDdl);1525545490;Set whether to generate DDL after the EntityManagerFactory has been initialized,_creating/updating all relevant tables._<p>Note that the exact semantics of this flag depend on the underlying_persistence provider. For any more advanced needs, specify the appropriate_vendor-specific settings as "jpaProperties"._<p><b>NOTE: Do not set this flag to 'true' while also setting JPA 2.1's_{@code javax.persistence.schema-generation.database.action} property.</b>_These two schema generation mechanisms - standard JPA versus provider-native -_are mutually exclusive, e.g. with Hibernate 5._@see org.springframework.orm.jpa.AbstractEntityManagerFactoryBean#setJpaProperties;public void setGenerateDdl(boolean generateDdl) {_		this.generateDdl = generateDdl__	};set,whether,to,generate,ddl,after,the,entity,manager,factory,has,been,initialized,creating,updating,all,relevant,tables,p,note,that,the,exact,semantics,of,this,flag,depend,on,the,underlying,persistence,provider,for,any,more,advanced,needs,specify,the,appropriate,vendor,specific,settings,as,jpa,properties,p,b,note,do,not,set,this,flag,to,true,while,also,setting,jpa,2,1,s,code,javax,persistence,schema,generation,database,action,property,b,these,two,schema,generation,mechanisms,standard,jpa,versus,provider,native,are,mutually,exclusive,e,g,with,hibernate,5,see,org,springframework,orm,jpa,abstract,entity,manager,factory,bean,set,jpa,properties;public,void,set,generate,ddl,boolean,generate,ddl,this,generate,ddl,generate,ddl
AbstractJpaVendorAdapter -> protected boolean isGenerateDdl();1328020251;Return whether to generate DDL after the EntityManagerFactory has been initialized_creating/updating all relevant tables.;protected boolean isGenerateDdl() {_		return this.generateDdl__	};return,whether,to,generate,ddl,after,the,entity,manager,factory,has,been,initialized,creating,updating,all,relevant,tables;protected,boolean,is,generate,ddl,return,this,generate,ddl
AbstractJpaVendorAdapter -> protected boolean isGenerateDdl();1356735495;Return whether to generate DDL after the EntityManagerFactory has been initialized_creating/updating all relevant tables.;protected boolean isGenerateDdl() {_		return this.generateDdl__	};return,whether,to,generate,ddl,after,the,entity,manager,factory,has,been,initialized,creating,updating,all,relevant,tables;protected,boolean,is,generate,ddl,return,this,generate,ddl
AbstractJpaVendorAdapter -> protected boolean isGenerateDdl();1357119239;Return whether to generate DDL after the EntityManagerFactory has been initialized_creating/updating all relevant tables.;protected boolean isGenerateDdl() {_		return this.generateDdl__	};return,whether,to,generate,ddl,after,the,entity,manager,factory,has,been,initialized,creating,updating,all,relevant,tables;protected,boolean,is,generate,ddl,return,this,generate,ddl
AbstractJpaVendorAdapter -> protected boolean isGenerateDdl();1368482696;Return whether to generate DDL after the EntityManagerFactory has been initialized_creating/updating all relevant tables.;protected boolean isGenerateDdl() {_		return this.generateDdl__	};return,whether,to,generate,ddl,after,the,entity,manager,factory,has,been,initialized,creating,updating,all,relevant,tables;protected,boolean,is,generate,ddl,return,this,generate,ddl
AbstractJpaVendorAdapter -> protected boolean isGenerateDdl();1436280273;Return whether to generate DDL after the EntityManagerFactory has been initialized_creating/updating all relevant tables.;protected boolean isGenerateDdl() {_		return this.generateDdl__	};return,whether,to,generate,ddl,after,the,entity,manager,factory,has,been,initialized,creating,updating,all,relevant,tables;protected,boolean,is,generate,ddl,return,this,generate,ddl
AbstractJpaVendorAdapter -> protected boolean isGenerateDdl();1496837955;Return whether to generate DDL after the EntityManagerFactory has been initialized_creating/updating all relevant tables.;protected boolean isGenerateDdl() {_		return this.generateDdl__	};return,whether,to,generate,ddl,after,the,entity,manager,factory,has,been,initialized,creating,updating,all,relevant,tables;protected,boolean,is,generate,ddl,return,this,generate,ddl
AbstractJpaVendorAdapter -> protected boolean isGenerateDdl();1500448076;Return whether to generate DDL after the EntityManagerFactory has been initialized_creating/updating all relevant tables.;protected boolean isGenerateDdl() {_		return this.generateDdl__	};return,whether,to,generate,ddl,after,the,entity,manager,factory,has,been,initialized,creating,updating,all,relevant,tables;protected,boolean,is,generate,ddl,return,this,generate,ddl
AbstractJpaVendorAdapter -> protected boolean isGenerateDdl();1500457438;Return whether to generate DDL after the EntityManagerFactory has been initialized_creating/updating all relevant tables.;protected boolean isGenerateDdl() {_		return this.generateDdl__	};return,whether,to,generate,ddl,after,the,entity,manager,factory,has,been,initialized,creating,updating,all,relevant,tables;protected,boolean,is,generate,ddl,return,this,generate,ddl
AbstractJpaVendorAdapter -> protected boolean isGenerateDdl();1502974979;Return whether to generate DDL after the EntityManagerFactory has been initialized_creating/updating all relevant tables.;protected boolean isGenerateDdl() {_		return this.generateDdl__	};return,whether,to,generate,ddl,after,the,entity,manager,factory,has,been,initialized,creating,updating,all,relevant,tables;protected,boolean,is,generate,ddl,return,this,generate,ddl
AbstractJpaVendorAdapter -> protected boolean isGenerateDdl();1510341663;Return whether to generate DDL after the EntityManagerFactory has been initialized_creating/updating all relevant tables.;protected boolean isGenerateDdl() {_		return this.generateDdl__	};return,whether,to,generate,ddl,after,the,entity,manager,factory,has,been,initialized,creating,updating,all,relevant,tables;protected,boolean,is,generate,ddl,return,this,generate,ddl
AbstractJpaVendorAdapter -> protected boolean isGenerateDdl();1517247618;Return whether to generate DDL after the EntityManagerFactory has been initialized_creating/updating all relevant tables.;protected boolean isGenerateDdl() {_		return this.generateDdl__	};return,whether,to,generate,ddl,after,the,entity,manager,factory,has,been,initialized,creating,updating,all,relevant,tables;protected,boolean,is,generate,ddl,return,this,generate,ddl
AbstractJpaVendorAdapter -> protected boolean isGenerateDdl();1525545490;Return whether to generate DDL after the EntityManagerFactory has been initialized_creating/updating all relevant tables.;protected boolean isGenerateDdl() {_		return this.generateDdl__	};return,whether,to,generate,ddl,after,the,entity,manager,factory,has,been,initialized,creating,updating,all,relevant,tables;protected,boolean,is,generate,ddl,return,this,generate,ddl
AbstractJpaVendorAdapter -> public void postProcessEntityManagerFactory(EntityManagerFactory emf);1328020251;Post-process the EntityManagerFactory after it has been initialized._@param emf the EntityManagerFactory to process;public void postProcessEntityManagerFactory(EntityManagerFactory emf) {_	};post,process,the,entity,manager,factory,after,it,has,been,initialized,param,emf,the,entity,manager,factory,to,process;public,void,post,process,entity,manager,factory,entity,manager,factory,emf
AbstractJpaVendorAdapter -> public void postProcessEntityManagerFactory(EntityManagerFactory emf);1357119239;Post-process the EntityManagerFactory after it has been initialized._@param emf the EntityManagerFactory to process;public void postProcessEntityManagerFactory(EntityManagerFactory emf) {_	};post,process,the,entity,manager,factory,after,it,has,been,initialized,param,emf,the,entity,manager,factory,to,process;public,void,post,process,entity,manager,factory,entity,manager,factory,emf
AbstractJpaVendorAdapter -> public void setShowSql(boolean showSql);1328020251;Set whether to show SQL in the log (or in the console)._<p>For more specific logging configuration, specify the appropriate_vendor-specific settings as "jpaProperties"._@see org.springframework.orm.jpa.AbstractEntityManagerFactoryBean#setJpaProperties;public void setShowSql(boolean showSql) {_		this.showSql = showSql__	};set,whether,to,show,sql,in,the,log,or,in,the,console,p,for,more,specific,logging,configuration,specify,the,appropriate,vendor,specific,settings,as,jpa,properties,see,org,springframework,orm,jpa,abstract,entity,manager,factory,bean,set,jpa,properties;public,void,set,show,sql,boolean,show,sql,this,show,sql,show,sql
AbstractJpaVendorAdapter -> public void setShowSql(boolean showSql);1356735495;Set whether to show SQL in the log (or in the console)._<p>For more specific logging configuration, specify the appropriate_vendor-specific settings as "jpaProperties"._@see org.springframework.orm.jpa.AbstractEntityManagerFactoryBean#setJpaProperties;public void setShowSql(boolean showSql) {_		this.showSql = showSql__	};set,whether,to,show,sql,in,the,log,or,in,the,console,p,for,more,specific,logging,configuration,specify,the,appropriate,vendor,specific,settings,as,jpa,properties,see,org,springframework,orm,jpa,abstract,entity,manager,factory,bean,set,jpa,properties;public,void,set,show,sql,boolean,show,sql,this,show,sql,show,sql
AbstractJpaVendorAdapter -> public void setShowSql(boolean showSql);1357119239;Set whether to show SQL in the log (or in the console)._<p>For more specific logging configuration, specify the appropriate_vendor-specific settings as "jpaProperties"._@see org.springframework.orm.jpa.AbstractEntityManagerFactoryBean#setJpaProperties;public void setShowSql(boolean showSql) {_		this.showSql = showSql__	};set,whether,to,show,sql,in,the,log,or,in,the,console,p,for,more,specific,logging,configuration,specify,the,appropriate,vendor,specific,settings,as,jpa,properties,see,org,springframework,orm,jpa,abstract,entity,manager,factory,bean,set,jpa,properties;public,void,set,show,sql,boolean,show,sql,this,show,sql,show,sql
AbstractJpaVendorAdapter -> public void setShowSql(boolean showSql);1368482696;Set whether to show SQL in the log (or in the console)._<p>For more specific logging configuration, specify the appropriate_vendor-specific settings as "jpaProperties"._@see org.springframework.orm.jpa.AbstractEntityManagerFactoryBean#setJpaProperties;public void setShowSql(boolean showSql) {_		this.showSql = showSql__	};set,whether,to,show,sql,in,the,log,or,in,the,console,p,for,more,specific,logging,configuration,specify,the,appropriate,vendor,specific,settings,as,jpa,properties,see,org,springframework,orm,jpa,abstract,entity,manager,factory,bean,set,jpa,properties;public,void,set,show,sql,boolean,show,sql,this,show,sql,show,sql
AbstractJpaVendorAdapter -> public void setShowSql(boolean showSql);1436280273;Set whether to show SQL in the log (or in the console)._<p>For more specific logging configuration, specify the appropriate_vendor-specific settings as "jpaProperties"._@see org.springframework.orm.jpa.AbstractEntityManagerFactoryBean#setJpaProperties;public void setShowSql(boolean showSql) {_		this.showSql = showSql__	};set,whether,to,show,sql,in,the,log,or,in,the,console,p,for,more,specific,logging,configuration,specify,the,appropriate,vendor,specific,settings,as,jpa,properties,see,org,springframework,orm,jpa,abstract,entity,manager,factory,bean,set,jpa,properties;public,void,set,show,sql,boolean,show,sql,this,show,sql,show,sql
AbstractJpaVendorAdapter -> public void setShowSql(boolean showSql);1496837955;Set whether to show SQL in the log (or in the console)._<p>For more specific logging configuration, specify the appropriate_vendor-specific settings as "jpaProperties"._@see org.springframework.orm.jpa.AbstractEntityManagerFactoryBean#setJpaProperties;public void setShowSql(boolean showSql) {_		this.showSql = showSql__	};set,whether,to,show,sql,in,the,log,or,in,the,console,p,for,more,specific,logging,configuration,specify,the,appropriate,vendor,specific,settings,as,jpa,properties,see,org,springframework,orm,jpa,abstract,entity,manager,factory,bean,set,jpa,properties;public,void,set,show,sql,boolean,show,sql,this,show,sql,show,sql
AbstractJpaVendorAdapter -> public void setShowSql(boolean showSql);1500448076;Set whether to show SQL in the log (or in the console)._<p>For more specific logging configuration, specify the appropriate_vendor-specific settings as "jpaProperties"._@see org.springframework.orm.jpa.AbstractEntityManagerFactoryBean#setJpaProperties;public void setShowSql(boolean showSql) {_		this.showSql = showSql__	};set,whether,to,show,sql,in,the,log,or,in,the,console,p,for,more,specific,logging,configuration,specify,the,appropriate,vendor,specific,settings,as,jpa,properties,see,org,springframework,orm,jpa,abstract,entity,manager,factory,bean,set,jpa,properties;public,void,set,show,sql,boolean,show,sql,this,show,sql,show,sql
AbstractJpaVendorAdapter -> public void setShowSql(boolean showSql);1500457438;Set whether to show SQL in the log (or in the console)._<p>For more specific logging configuration, specify the appropriate_vendor-specific settings as "jpaProperties"._@see org.springframework.orm.jpa.AbstractEntityManagerFactoryBean#setJpaProperties;public void setShowSql(boolean showSql) {_		this.showSql = showSql__	};set,whether,to,show,sql,in,the,log,or,in,the,console,p,for,more,specific,logging,configuration,specify,the,appropriate,vendor,specific,settings,as,jpa,properties,see,org,springframework,orm,jpa,abstract,entity,manager,factory,bean,set,jpa,properties;public,void,set,show,sql,boolean,show,sql,this,show,sql,show,sql
AbstractJpaVendorAdapter -> public void setShowSql(boolean showSql);1502974979;Set whether to show SQL in the log (or in the console)._<p>For more specific logging configuration, specify the appropriate_vendor-specific settings as "jpaProperties"._@see org.springframework.orm.jpa.AbstractEntityManagerFactoryBean#setJpaProperties;public void setShowSql(boolean showSql) {_		this.showSql = showSql__	};set,whether,to,show,sql,in,the,log,or,in,the,console,p,for,more,specific,logging,configuration,specify,the,appropriate,vendor,specific,settings,as,jpa,properties,see,org,springframework,orm,jpa,abstract,entity,manager,factory,bean,set,jpa,properties;public,void,set,show,sql,boolean,show,sql,this,show,sql,show,sql
AbstractJpaVendorAdapter -> public void setShowSql(boolean showSql);1510341663;Set whether to show SQL in the log (or in the console)._<p>For more specific logging configuration, specify the appropriate_vendor-specific settings as "jpaProperties"._@see org.springframework.orm.jpa.AbstractEntityManagerFactoryBean#setJpaProperties;public void setShowSql(boolean showSql) {_		this.showSql = showSql__	};set,whether,to,show,sql,in,the,log,or,in,the,console,p,for,more,specific,logging,configuration,specify,the,appropriate,vendor,specific,settings,as,jpa,properties,see,org,springframework,orm,jpa,abstract,entity,manager,factory,bean,set,jpa,properties;public,void,set,show,sql,boolean,show,sql,this,show,sql,show,sql
AbstractJpaVendorAdapter -> public void setShowSql(boolean showSql);1517247618;Set whether to show SQL in the log (or in the console)._<p>For more specific logging configuration, specify the appropriate_vendor-specific settings as "jpaProperties"._@see org.springframework.orm.jpa.AbstractEntityManagerFactoryBean#setJpaProperties;public void setShowSql(boolean showSql) {_		this.showSql = showSql__	};set,whether,to,show,sql,in,the,log,or,in,the,console,p,for,more,specific,logging,configuration,specify,the,appropriate,vendor,specific,settings,as,jpa,properties,see,org,springframework,orm,jpa,abstract,entity,manager,factory,bean,set,jpa,properties;public,void,set,show,sql,boolean,show,sql,this,show,sql,show,sql
AbstractJpaVendorAdapter -> public void setShowSql(boolean showSql);1525545490;Set whether to show SQL in the log (or in the console)._<p>For more specific logging configuration, specify the appropriate_vendor-specific settings as "jpaProperties"._@see org.springframework.orm.jpa.AbstractEntityManagerFactoryBean#setJpaProperties;public void setShowSql(boolean showSql) {_		this.showSql = showSql__	};set,whether,to,show,sql,in,the,log,or,in,the,console,p,for,more,specific,logging,configuration,specify,the,appropriate,vendor,specific,settings,as,jpa,properties,see,org,springframework,orm,jpa,abstract,entity,manager,factory,bean,set,jpa,properties;public,void,set,show,sql,boolean,show,sql,this,show,sql,show,sql
AbstractJpaVendorAdapter -> public void setDatabasePlatform(@Nullable String databasePlatform);1500448076;Specify the name of the target database to operate on._The supported values are vendor-dependent platform identifiers.;public void setDatabasePlatform(@Nullable String databasePlatform) {_		this.databasePlatform = databasePlatform__	};specify,the,name,of,the,target,database,to,operate,on,the,supported,values,are,vendor,dependent,platform,identifiers;public,void,set,database,platform,nullable,string,database,platform,this,database,platform,database,platform
AbstractJpaVendorAdapter -> public void setDatabasePlatform(@Nullable String databasePlatform);1500457438;Specify the name of the target database to operate on._The supported values are vendor-dependent platform identifiers.;public void setDatabasePlatform(@Nullable String databasePlatform) {_		this.databasePlatform = databasePlatform__	};specify,the,name,of,the,target,database,to,operate,on,the,supported,values,are,vendor,dependent,platform,identifiers;public,void,set,database,platform,nullable,string,database,platform,this,database,platform,database,platform
AbstractJpaVendorAdapter -> public void setDatabasePlatform(@Nullable String databasePlatform);1502974979;Specify the name of the target database to operate on._The supported values are vendor-dependent platform identifiers.;public void setDatabasePlatform(@Nullable String databasePlatform) {_		this.databasePlatform = databasePlatform__	};specify,the,name,of,the,target,database,to,operate,on,the,supported,values,are,vendor,dependent,platform,identifiers;public,void,set,database,platform,nullable,string,database,platform,this,database,platform,database,platform
AbstractJpaVendorAdapter -> public void setDatabasePlatform(@Nullable String databasePlatform);1510341663;Specify the name of the target database to operate on._The supported values are vendor-dependent platform identifiers.;public void setDatabasePlatform(@Nullable String databasePlatform) {_		this.databasePlatform = databasePlatform__	};specify,the,name,of,the,target,database,to,operate,on,the,supported,values,are,vendor,dependent,platform,identifiers;public,void,set,database,platform,nullable,string,database,platform,this,database,platform,database,platform
AbstractJpaVendorAdapter -> public void setDatabasePlatform(@Nullable String databasePlatform);1517247618;Specify the name of the target database to operate on._The supported values are vendor-dependent platform identifiers.;public void setDatabasePlatform(@Nullable String databasePlatform) {_		this.databasePlatform = databasePlatform__	};specify,the,name,of,the,target,database,to,operate,on,the,supported,values,are,vendor,dependent,platform,identifiers;public,void,set,database,platform,nullable,string,database,platform,this,database,platform,database,platform
AbstractJpaVendorAdapter -> public void setDatabasePlatform(@Nullable String databasePlatform);1525545490;Specify the name of the target database to operate on._The supported values are vendor-dependent platform identifiers.;public void setDatabasePlatform(@Nullable String databasePlatform) {_		this.databasePlatform = databasePlatform__	};specify,the,name,of,the,target,database,to,operate,on,the,supported,values,are,vendor,dependent,platform,identifiers;public,void,set,database,platform,nullable,string,database,platform,this,database,platform,database,platform
AbstractJpaVendorAdapter -> public void setDatabasePlatform(String databasePlatform);1328020251;Specify the name of the target database to operate on._The supported values are vendor-dependent platform identifiers.;public void setDatabasePlatform(String databasePlatform) {_		this.databasePlatform = databasePlatform__	};specify,the,name,of,the,target,database,to,operate,on,the,supported,values,are,vendor,dependent,platform,identifiers;public,void,set,database,platform,string,database,platform,this,database,platform,database,platform
AbstractJpaVendorAdapter -> public void setDatabasePlatform(String databasePlatform);1356735495;Specify the name of the target database to operate on._The supported values are vendor-dependent platform identifiers.;public void setDatabasePlatform(String databasePlatform) {_		this.databasePlatform = databasePlatform__	};specify,the,name,of,the,target,database,to,operate,on,the,supported,values,are,vendor,dependent,platform,identifiers;public,void,set,database,platform,string,database,platform,this,database,platform,database,platform
AbstractJpaVendorAdapter -> public void setDatabasePlatform(String databasePlatform);1357119239;Specify the name of the target database to operate on._The supported values are vendor-dependent platform identifiers.;public void setDatabasePlatform(String databasePlatform) {_		this.databasePlatform = databasePlatform__	};specify,the,name,of,the,target,database,to,operate,on,the,supported,values,are,vendor,dependent,platform,identifiers;public,void,set,database,platform,string,database,platform,this,database,platform,database,platform
AbstractJpaVendorAdapter -> public void setDatabasePlatform(String databasePlatform);1368482696;Specify the name of the target database to operate on._The supported values are vendor-dependent platform identifiers.;public void setDatabasePlatform(String databasePlatform) {_		this.databasePlatform = databasePlatform__	};specify,the,name,of,the,target,database,to,operate,on,the,supported,values,are,vendor,dependent,platform,identifiers;public,void,set,database,platform,string,database,platform,this,database,platform,database,platform
AbstractJpaVendorAdapter -> public void setDatabasePlatform(String databasePlatform);1436280273;Specify the name of the target database to operate on._The supported values are vendor-dependent platform identifiers.;public void setDatabasePlatform(String databasePlatform) {_		this.databasePlatform = databasePlatform__	};specify,the,name,of,the,target,database,to,operate,on,the,supported,values,are,vendor,dependent,platform,identifiers;public,void,set,database,platform,string,database,platform,this,database,platform,database,platform
AbstractJpaVendorAdapter -> public void setDatabasePlatform(String databasePlatform);1496837955;Specify the name of the target database to operate on._The supported values are vendor-dependent platform identifiers.;public void setDatabasePlatform(String databasePlatform) {_		this.databasePlatform = databasePlatform__	};specify,the,name,of,the,target,database,to,operate,on,the,supported,values,are,vendor,dependent,platform,identifiers;public,void,set,database,platform,string,database,platform,this,database,platform,database,platform
AbstractJpaVendorAdapter -> @Nullable 	protected Database getDatabase();1496837955;Return the target database to operate on.;@Nullable_	protected Database getDatabase() {_		return this.database__	};return,the,target,database,to,operate,on;nullable,protected,database,get,database,return,this,database
AbstractJpaVendorAdapter -> @Nullable 	protected Database getDatabase();1500448076;Return the target database to operate on.;@Nullable_	protected Database getDatabase() {_		return this.database__	};return,the,target,database,to,operate,on;nullable,protected,database,get,database,return,this,database
AbstractJpaVendorAdapter -> protected String getDatabasePlatform();1328020251;Return the name of the target database to operate on.;protected String getDatabasePlatform() {_		return this.databasePlatform__	};return,the,name,of,the,target,database,to,operate,on;protected,string,get,database,platform,return,this,database,platform
AbstractJpaVendorAdapter -> protected String getDatabasePlatform();1356735495;Return the name of the target database to operate on.;protected String getDatabasePlatform() {_		return this.databasePlatform__	};return,the,name,of,the,target,database,to,operate,on;protected,string,get,database,platform,return,this,database,platform
AbstractJpaVendorAdapter -> protected String getDatabasePlatform();1357119239;Return the name of the target database to operate on.;protected String getDatabasePlatform() {_		return this.databasePlatform__	};return,the,name,of,the,target,database,to,operate,on;protected,string,get,database,platform,return,this,database,platform
AbstractJpaVendorAdapter -> protected String getDatabasePlatform();1368482696;Return the name of the target database to operate on.;protected String getDatabasePlatform() {_		return this.databasePlatform__	};return,the,name,of,the,target,database,to,operate,on;protected,string,get,database,platform,return,this,database,platform
AbstractJpaVendorAdapter -> protected String getDatabasePlatform();1436280273;Return the name of the target database to operate on.;protected String getDatabasePlatform() {_		return this.databasePlatform__	};return,the,name,of,the,target,database,to,operate,on;protected,string,get,database,platform,return,this,database,platform
AbstractJpaVendorAdapter -> protected Database getDatabase();1328020251;Return the target database to operate on.;protected Database getDatabase() {_		return this.database__	};return,the,target,database,to,operate,on;protected,database,get,database,return,this,database
AbstractJpaVendorAdapter -> protected Database getDatabase();1356735495;Return the target database to operate on.;protected Database getDatabase() {_		return this.database__	};return,the,target,database,to,operate,on;protected,database,get,database,return,this,database
AbstractJpaVendorAdapter -> protected Database getDatabase();1357119239;Return the target database to operate on.;protected Database getDatabase() {_		return this.database__	};return,the,target,database,to,operate,on;protected,database,get,database,return,this,database
AbstractJpaVendorAdapter -> protected Database getDatabase();1368482696;Return the target database to operate on.;protected Database getDatabase() {_		return this.database__	};return,the,target,database,to,operate,on;protected,database,get,database,return,this,database
AbstractJpaVendorAdapter -> protected Database getDatabase();1436280273;Return the target database to operate on.;protected Database getDatabase() {_		return this.database__	};return,the,target,database,to,operate,on;protected,database,get,database,return,this,database
AbstractJpaVendorAdapter -> protected Database getDatabase();1500457438;Return the target database to operate on.;protected Database getDatabase() {_		return this.database__	};return,the,target,database,to,operate,on;protected,database,get,database,return,this,database
AbstractJpaVendorAdapter -> protected Database getDatabase();1502974979;Return the target database to operate on.;protected Database getDatabase() {_		return this.database__	};return,the,target,database,to,operate,on;protected,database,get,database,return,this,database
AbstractJpaVendorAdapter -> protected Database getDatabase();1510341663;Return the target database to operate on.;protected Database getDatabase() {_		return this.database__	};return,the,target,database,to,operate,on;protected,database,get,database,return,this,database
AbstractJpaVendorAdapter -> protected Database getDatabase();1517247618;Return the target database to operate on.;protected Database getDatabase() {_		return this.database__	};return,the,target,database,to,operate,on;protected,database,get,database,return,this,database
AbstractJpaVendorAdapter -> protected Database getDatabase();1525545490;Return the target database to operate on.;protected Database getDatabase() {_		return this.database__	};return,the,target,database,to,operate,on;protected,database,get,database,return,this,database
AbstractJpaVendorAdapter -> @Nullable 	protected String getDatabasePlatform();1496837955;Return the name of the target database to operate on.;@Nullable_	protected String getDatabasePlatform() {_		return this.databasePlatform__	};return,the,name,of,the,target,database,to,operate,on;nullable,protected,string,get,database,platform,return,this,database,platform
AbstractJpaVendorAdapter -> @Nullable 	protected String getDatabasePlatform();1500448076;Return the name of the target database to operate on.;@Nullable_	protected String getDatabasePlatform() {_		return this.databasePlatform__	};return,the,name,of,the,target,database,to,operate,on;nullable,protected,string,get,database,platform,return,this,database,platform
AbstractJpaVendorAdapter -> @Nullable 	protected String getDatabasePlatform();1500457438;Return the name of the target database to operate on.;@Nullable_	protected String getDatabasePlatform() {_		return this.databasePlatform__	};return,the,name,of,the,target,database,to,operate,on;nullable,protected,string,get,database,platform,return,this,database,platform
AbstractJpaVendorAdapter -> @Nullable 	protected String getDatabasePlatform();1502974979;Return the name of the target database to operate on.;@Nullable_	protected String getDatabasePlatform() {_		return this.databasePlatform__	};return,the,name,of,the,target,database,to,operate,on;nullable,protected,string,get,database,platform,return,this,database,platform
AbstractJpaVendorAdapter -> @Nullable 	protected String getDatabasePlatform();1510341663;Return the name of the target database to operate on.;@Nullable_	protected String getDatabasePlatform() {_		return this.databasePlatform__	};return,the,name,of,the,target,database,to,operate,on;nullable,protected,string,get,database,platform,return,this,database,platform
AbstractJpaVendorAdapter -> @Nullable 	protected String getDatabasePlatform();1517247618;Return the name of the target database to operate on.;@Nullable_	protected String getDatabasePlatform() {_		return this.databasePlatform__	};return,the,name,of,the,target,database,to,operate,on;nullable,protected,string,get,database,platform,return,this,database,platform
AbstractJpaVendorAdapter -> @Nullable 	protected String getDatabasePlatform();1525545490;Return the name of the target database to operate on.;@Nullable_	protected String getDatabasePlatform() {_		return this.databasePlatform__	};return,the,name,of,the,target,database,to,operate,on;nullable,protected,string,get,database,platform,return,this,database,platform
AbstractJpaVendorAdapter -> public void setDatabase(Database database);1328020251;Specify the target database to operate on, as a value of the <code>Database</code> enum:_DB2, DERBY, H2, HSQL, INFORMIX, MYSQL, ORACLE, POSTGRESQL, SQL_SERVER, SYBASE;public void setDatabase(Database database) {_		this.database = database__	};specify,the,target,database,to,operate,on,as,a,value,of,the,code,database,code,enum,db2,derby,h2,hsql,informix,mysql,oracle,postgresql,sybase;public,void,set,database,database,database,this,database,database
AbstractJpaVendorAdapter -> public void setDatabase(Database database);1356735495;Specify the target database to operate on, as a value of the {@code Database} enum:_DB2, DERBY, H2, HSQL, INFORMIX, MYSQL, ORACLE, POSTGRESQL, SQL_SERVER, SYBASE;public void setDatabase(Database database) {_		this.database = database__	};specify,the,target,database,to,operate,on,as,a,value,of,the,code,database,enum,db2,derby,h2,hsql,informix,mysql,oracle,postgresql,sybase;public,void,set,database,database,database,this,database,database
AbstractJpaVendorAdapter -> public void setDatabase(Database database);1357119239;Specify the target database to operate on, as a value of the {@code Database} enum:_DB2, DERBY, H2, HSQL, INFORMIX, MYSQL, ORACLE, POSTGRESQL, SQL_SERVER, SYBASE;public void setDatabase(Database database) {_		this.database = database__	};specify,the,target,database,to,operate,on,as,a,value,of,the,code,database,enum,db2,derby,h2,hsql,informix,mysql,oracle,postgresql,sybase;public,void,set,database,database,database,this,database,database
AbstractJpaVendorAdapter -> public void setDatabase(Database database);1368482696;Specify the target database to operate on, as a value of the {@code Database} enum:_DB2, DERBY, H2, HSQL, INFORMIX, MYSQL, ORACLE, POSTGRESQL, SQL_SERVER, SYBASE;public void setDatabase(Database database) {_		this.database = database__	};specify,the,target,database,to,operate,on,as,a,value,of,the,code,database,enum,db2,derby,h2,hsql,informix,mysql,oracle,postgresql,sybase;public,void,set,database,database,database,this,database,database
AbstractJpaVendorAdapter -> public void setDatabase(Database database);1436280273;Specify the target database to operate on, as a value of the {@code Database} enum:_DB2, DERBY, H2, HSQL, INFORMIX, MYSQL, ORACLE, POSTGRESQL, SQL_SERVER, SYBASE;public void setDatabase(Database database) {_		this.database = database__	};specify,the,target,database,to,operate,on,as,a,value,of,the,code,database,enum,db2,derby,h2,hsql,informix,mysql,oracle,postgresql,sybase;public,void,set,database,database,database,this,database,database
AbstractJpaVendorAdapter -> public void setDatabase(Database database);1496837955;Specify the target database to operate on, as a value of the {@code Database} enum:_DB2, DERBY, H2, HSQL, INFORMIX, MYSQL, ORACLE, POSTGRESQL, SQL_SERVER, SYBASE;public void setDatabase(Database database) {_		this.database = database__	};specify,the,target,database,to,operate,on,as,a,value,of,the,code,database,enum,db2,derby,h2,hsql,informix,mysql,oracle,postgresql,sybase;public,void,set,database,database,database,this,database,database
AbstractJpaVendorAdapter -> public void setDatabase(Database database);1500457438;Specify the target database to operate on, as a value of the {@code Database} enum:_DB2, DERBY, H2, HSQL, INFORMIX, MYSQL, ORACLE, POSTGRESQL, SQL_SERVER, SYBASE;public void setDatabase(Database database) {_		this.database = database__	};specify,the,target,database,to,operate,on,as,a,value,of,the,code,database,enum,db2,derby,h2,hsql,informix,mysql,oracle,postgresql,sybase;public,void,set,database,database,database,this,database,database
AbstractJpaVendorAdapter -> public void setDatabase(Database database);1502974979;Specify the target database to operate on, as a value of the {@code Database} enum:_DB2, DERBY, H2, HSQL, INFORMIX, MYSQL, ORACLE, POSTGRESQL, SQL_SERVER, SYBASE;public void setDatabase(Database database) {_		this.database = database__	};specify,the,target,database,to,operate,on,as,a,value,of,the,code,database,enum,db2,derby,h2,hsql,informix,mysql,oracle,postgresql,sybase;public,void,set,database,database,database,this,database,database
AbstractJpaVendorAdapter -> public void setDatabase(Database database);1510341663;Specify the target database to operate on, as a value of the {@code Database} enum:_DB2, DERBY, H2, HSQL, INFORMIX, MYSQL, ORACLE, POSTGRESQL, SQL_SERVER, SYBASE;public void setDatabase(Database database) {_		this.database = database__	};specify,the,target,database,to,operate,on,as,a,value,of,the,code,database,enum,db2,derby,h2,hsql,informix,mysql,oracle,postgresql,sybase;public,void,set,database,database,database,this,database,database
AbstractJpaVendorAdapter -> public void setDatabase(Database database);1517247618;Specify the target database to operate on, as a value of the {@code Database} enum:_DB2, DERBY, H2, HSQL, INFORMIX, MYSQL, ORACLE, POSTGRESQL, SQL_SERVER, SYBASE_<p><b>NOTE:</b> This setting will override your JPA provider's default algorithm._Custom vendor properties may still fine-tune the database dialect. However,_there may nevertheless be conflicts: For example, specify either this setting_or Hibernate's "hibernate.dialect_resolvers" property, not both.;public void setDatabase(Database database) {_		this.database = database__	};specify,the,target,database,to,operate,on,as,a,value,of,the,code,database,enum,db2,derby,h2,hsql,informix,mysql,oracle,postgresql,sybase,p,b,note,b,this,setting,will,override,your,jpa,provider,s,default,algorithm,custom,vendor,properties,may,still,fine,tune,the,database,dialect,however,there,may,nevertheless,be,conflicts,for,example,specify,either,this,setting,or,hibernate,s,hibernate,property,not,both;public,void,set,database,database,database,this,database,database
AbstractJpaVendorAdapter -> public void setDatabase(Database database);1525545490;Specify the target database to operate on, as a value of the {@code Database} enum:_DB2, DERBY, H2, HANA, HSQL, INFORMIX, MYSQL, ORACLE, POSTGRESQL, SQL_SERVER, SYBASE_<p><b>NOTE:</b> This setting will override your JPA provider's default algorithm._Custom vendor properties may still fine-tune the database dialect. However,_there may nevertheless be conflicts: For example, specify either this setting_or Hibernate's "hibernate.dialect_resolvers" property, not both.;public void setDatabase(Database database) {_		this.database = database__	};specify,the,target,database,to,operate,on,as,a,value,of,the,code,database,enum,db2,derby,h2,hana,hsql,informix,mysql,oracle,postgresql,sybase,p,b,note,b,this,setting,will,override,your,jpa,provider,s,default,algorithm,custom,vendor,properties,may,still,fine,tune,the,database,dialect,however,there,may,nevertheless,be,conflicts,for,example,specify,either,this,setting,or,hibernate,s,hibernate,property,not,both;public,void,set,database,database,database,this,database,database
AbstractJpaVendorAdapter -> @Override 	public void postProcessEntityManagerFactory(EntityManagerFactory emf);1356735495;Post-process the EntityManagerFactory after it has been initialized._@param emf the EntityManagerFactory to process;@Override_	public void postProcessEntityManagerFactory(EntityManagerFactory emf) {_	};post,process,the,entity,manager,factory,after,it,has,been,initialized,param,emf,the,entity,manager,factory,to,process;override,public,void,post,process,entity,manager,factory,entity,manager,factory,emf
AbstractJpaVendorAdapter -> @Override 	public void postProcessEntityManagerFactory(EntityManagerFactory emf);1368482696;Post-process the EntityManagerFactory after it has been initialized._@param emf the EntityManagerFactory to process;@Override_	public void postProcessEntityManagerFactory(EntityManagerFactory emf) {_	};post,process,the,entity,manager,factory,after,it,has,been,initialized,param,emf,the,entity,manager,factory,to,process;override,public,void,post,process,entity,manager,factory,entity,manager,factory,emf
AbstractJpaVendorAdapter -> @Override 	public void postProcessEntityManagerFactory(EntityManagerFactory emf);1436280273;Post-process the EntityManagerFactory after it has been initialized._@param emf the EntityManagerFactory to process;@Override_	public void postProcessEntityManagerFactory(EntityManagerFactory emf) {_	};post,process,the,entity,manager,factory,after,it,has,been,initialized,param,emf,the,entity,manager,factory,to,process;override,public,void,post,process,entity,manager,factory,entity,manager,factory,emf
AbstractJpaVendorAdapter -> @Override 	public void postProcessEntityManagerFactory(EntityManagerFactory emf);1496837955;Post-process the EntityManagerFactory after it has been initialized._@param emf the EntityManagerFactory to process;@Override_	public void postProcessEntityManagerFactory(EntityManagerFactory emf) {_	};post,process,the,entity,manager,factory,after,it,has,been,initialized,param,emf,the,entity,manager,factory,to,process;override,public,void,post,process,entity,manager,factory,entity,manager,factory,emf
AbstractJpaVendorAdapter -> @Override 	public void postProcessEntityManagerFactory(EntityManagerFactory emf);1500448076;Post-process the EntityManagerFactory after it has been initialized._@param emf the EntityManagerFactory to process;@Override_	public void postProcessEntityManagerFactory(EntityManagerFactory emf) {_	};post,process,the,entity,manager,factory,after,it,has,been,initialized,param,emf,the,entity,manager,factory,to,process;override,public,void,post,process,entity,manager,factory,entity,manager,factory,emf
AbstractJpaVendorAdapter -> @Override 	public void postProcessEntityManagerFactory(EntityManagerFactory emf);1500457438;Post-process the EntityManagerFactory after it has been initialized._@param emf the EntityManagerFactory to process;@Override_	public void postProcessEntityManagerFactory(EntityManagerFactory emf) {_	};post,process,the,entity,manager,factory,after,it,has,been,initialized,param,emf,the,entity,manager,factory,to,process;override,public,void,post,process,entity,manager,factory,entity,manager,factory,emf
AbstractJpaVendorAdapter -> @Override 	public void postProcessEntityManagerFactory(EntityManagerFactory emf);1502974979;Post-process the EntityManagerFactory after it has been initialized._@param emf the EntityManagerFactory to process;@Override_	public void postProcessEntityManagerFactory(EntityManagerFactory emf) {_	};post,process,the,entity,manager,factory,after,it,has,been,initialized,param,emf,the,entity,manager,factory,to,process;override,public,void,post,process,entity,manager,factory,entity,manager,factory,emf
AbstractJpaVendorAdapter -> protected boolean isShowSql();1328020251;Return whether to show SQL in the log (or in the console).;protected boolean isShowSql() {_		return this.showSql__	};return,whether,to,show,sql,in,the,log,or,in,the,console;protected,boolean,is,show,sql,return,this,show,sql
AbstractJpaVendorAdapter -> protected boolean isShowSql();1356735495;Return whether to show SQL in the log (or in the console).;protected boolean isShowSql() {_		return this.showSql__	};return,whether,to,show,sql,in,the,log,or,in,the,console;protected,boolean,is,show,sql,return,this,show,sql
AbstractJpaVendorAdapter -> protected boolean isShowSql();1357119239;Return whether to show SQL in the log (or in the console).;protected boolean isShowSql() {_		return this.showSql__	};return,whether,to,show,sql,in,the,log,or,in,the,console;protected,boolean,is,show,sql,return,this,show,sql
AbstractJpaVendorAdapter -> protected boolean isShowSql();1368482696;Return whether to show SQL in the log (or in the console).;protected boolean isShowSql() {_		return this.showSql__	};return,whether,to,show,sql,in,the,log,or,in,the,console;protected,boolean,is,show,sql,return,this,show,sql
AbstractJpaVendorAdapter -> protected boolean isShowSql();1436280273;Return whether to show SQL in the log (or in the console).;protected boolean isShowSql() {_		return this.showSql__	};return,whether,to,show,sql,in,the,log,or,in,the,console;protected,boolean,is,show,sql,return,this,show,sql
AbstractJpaVendorAdapter -> protected boolean isShowSql();1496837955;Return whether to show SQL in the log (or in the console).;protected boolean isShowSql() {_		return this.showSql__	};return,whether,to,show,sql,in,the,log,or,in,the,console;protected,boolean,is,show,sql,return,this,show,sql
AbstractJpaVendorAdapter -> protected boolean isShowSql();1500448076;Return whether to show SQL in the log (or in the console).;protected boolean isShowSql() {_		return this.showSql__	};return,whether,to,show,sql,in,the,log,or,in,the,console;protected,boolean,is,show,sql,return,this,show,sql
AbstractJpaVendorAdapter -> protected boolean isShowSql();1500457438;Return whether to show SQL in the log (or in the console).;protected boolean isShowSql() {_		return this.showSql__	};return,whether,to,show,sql,in,the,log,or,in,the,console;protected,boolean,is,show,sql,return,this,show,sql
AbstractJpaVendorAdapter -> protected boolean isShowSql();1502974979;Return whether to show SQL in the log (or in the console).;protected boolean isShowSql() {_		return this.showSql__	};return,whether,to,show,sql,in,the,log,or,in,the,console;protected,boolean,is,show,sql,return,this,show,sql
AbstractJpaVendorAdapter -> protected boolean isShowSql();1510341663;Return whether to show SQL in the log (or in the console).;protected boolean isShowSql() {_		return this.showSql__	};return,whether,to,show,sql,in,the,log,or,in,the,console;protected,boolean,is,show,sql,return,this,show,sql
AbstractJpaVendorAdapter -> protected boolean isShowSql();1517247618;Return whether to show SQL in the log (or in the console).;protected boolean isShowSql() {_		return this.showSql__	};return,whether,to,show,sql,in,the,log,or,in,the,console;protected,boolean,is,show,sql,return,this,show,sql
AbstractJpaVendorAdapter -> protected boolean isShowSql();1525545490;Return whether to show SQL in the log (or in the console).;protected boolean isShowSql() {_		return this.showSql__	};return,whether,to,show,sql,in,the,log,or,in,the,console;protected,boolean,is,show,sql,return,this,show,sql
