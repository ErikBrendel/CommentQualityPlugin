commented;modifiers;parameterAmount;loc;comment;code
false;public;0;13;;@Override @Nullable public SessionFactory getObject() {     EntityManagerFactory emf = getEntityManagerFactory().     Assert.state(emf != null, "EntityManagerFactory must not be null").     try {         Method getSessionFactory = emf.getClass().getMethod("getSessionFactory").         return (SessionFactory) ReflectionUtils.invokeMethod(getSessionFactory, emf).     } catch (NoSuchMethodException ex) {         throw new IllegalStateException("No compatible Hibernate EntityManagerFactory found: " + ex).     } }
false;public;0;4;;@Override public Class<?> getObjectType() {     return SessionFactory.class. }
false;public;0;4;;@Override public boolean isSingleton() {     return true. }
