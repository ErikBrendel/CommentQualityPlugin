# id;timestamp;commentText;codeText;commentWords;codeWords
OpenSessionInViewFilter -> @Override 	protected boolean shouldNotFilterAsyncDispatch();1467668243;Returns "false" so that the filter may re-bind the opened Hibernate_{@code Session} to each asynchronously dispatched thread and postpone_closing it until the very last asynchronous dispatch.;@Override_	protected boolean shouldNotFilterAsyncDispatch() {_		return false__	};returns,false,so,that,the,filter,may,re,bind,the,opened,hibernate,code,session,to,each,asynchronously,dispatched,thread,and,postpone,closing,it,until,the,very,last,asynchronous,dispatch;override,protected,boolean,should,not,filter,async,dispatch,return,false
OpenSessionInViewFilter -> @Override 	protected boolean shouldNotFilterAsyncDispatch();1496837955;Returns "false" so that the filter may re-bind the opened Hibernate_{@code Session} to each asynchronously dispatched thread and postpone_closing it until the very last asynchronous dispatch.;@Override_	protected boolean shouldNotFilterAsyncDispatch() {_		return false__	};returns,false,so,that,the,filter,may,re,bind,the,opened,hibernate,code,session,to,each,asynchronously,dispatched,thread,and,postpone,closing,it,until,the,very,last,asynchronous,dispatch;override,protected,boolean,should,not,filter,async,dispatch,return,false
OpenSessionInViewFilter -> @Override 	protected boolean shouldNotFilterAsyncDispatch();1530174524;Returns "false" so that the filter may re-bind the opened Hibernate_{@code Session} to each asynchronously dispatched thread and postpone_closing it until the very last asynchronous dispatch.;@Override_	protected boolean shouldNotFilterAsyncDispatch() {_		return false__	};returns,false,so,that,the,filter,may,re,bind,the,opened,hibernate,code,session,to,each,asynchronously,dispatched,thread,and,postpone,closing,it,until,the,very,last,asynchronous,dispatch;override,protected,boolean,should,not,filter,async,dispatch,return,false
OpenSessionInViewFilter -> public void setSessionFactoryBeanName(String sessionFactoryBeanName);1467668243;Set the bean name of the SessionFactory to fetch from Spring's_root application context. Default is "sessionFactory"._@see #DEFAULT_SESSION_FACTORY_BEAN_NAME;public void setSessionFactoryBeanName(String sessionFactoryBeanName) {_		this.sessionFactoryBeanName = sessionFactoryBeanName__	};set,the,bean,name,of,the,session,factory,to,fetch,from,spring,s,root,application,context,default,is,session,factory,see;public,void,set,session,factory,bean,name,string,session,factory,bean,name,this,session,factory,bean,name,session,factory,bean,name
OpenSessionInViewFilter -> public void setSessionFactoryBeanName(String sessionFactoryBeanName);1496837955;Set the bean name of the SessionFactory to fetch from Spring's_root application context. Default is "sessionFactory"._@see #DEFAULT_SESSION_FACTORY_BEAN_NAME;public void setSessionFactoryBeanName(String sessionFactoryBeanName) {_		this.sessionFactoryBeanName = sessionFactoryBeanName__	};set,the,bean,name,of,the,session,factory,to,fetch,from,spring,s,root,application,context,default,is,session,factory,see;public,void,set,session,factory,bean,name,string,session,factory,bean,name,this,session,factory,bean,name,session,factory,bean,name
OpenSessionInViewFilter -> public void setSessionFactoryBeanName(String sessionFactoryBeanName);1530174524;Set the bean name of the SessionFactory to fetch from Spring's_root application context. Default is "sessionFactory"._@see #DEFAULT_SESSION_FACTORY_BEAN_NAME;public void setSessionFactoryBeanName(String sessionFactoryBeanName) {_		this.sessionFactoryBeanName = sessionFactoryBeanName__	};set,the,bean,name,of,the,session,factory,to,fetch,from,spring,s,root,application,context,default,is,session,factory,see;public,void,set,session,factory,bean,name,string,session,factory,bean,name,this,session,factory,bean,name,session,factory,bean,name
OpenSessionInViewFilter -> protected SessionFactory lookupSessionFactory(HttpServletRequest request);1467668243;Look up the SessionFactory that this filter should use,_taking the current HTTP request as argument._<p>The default implementation delegates to the {@link #lookupSessionFactory()}_variant without arguments._@param request the current request_@return the SessionFactory to use;protected SessionFactory lookupSessionFactory(HttpServletRequest request) {_		return lookupSessionFactory()__	};look,up,the,session,factory,that,this,filter,should,use,taking,the,current,http,request,as,argument,p,the,default,implementation,delegates,to,the,link,lookup,session,factory,variant,without,arguments,param,request,the,current,request,return,the,session,factory,to,use;protected,session,factory,lookup,session,factory,http,servlet,request,request,return,lookup,session,factory
OpenSessionInViewFilter -> protected SessionFactory lookupSessionFactory(HttpServletRequest request);1496837955;Look up the SessionFactory that this filter should use,_taking the current HTTP request as argument._<p>The default implementation delegates to the {@link #lookupSessionFactory()}_variant without arguments._@param request the current request_@return the SessionFactory to use;protected SessionFactory lookupSessionFactory(HttpServletRequest request) {_		return lookupSessionFactory()__	};look,up,the,session,factory,that,this,filter,should,use,taking,the,current,http,request,as,argument,p,the,default,implementation,delegates,to,the,link,lookup,session,factory,variant,without,arguments,param,request,the,current,request,return,the,session,factory,to,use;protected,session,factory,lookup,session,factory,http,servlet,request,request,return,lookup,session,factory
OpenSessionInViewFilter -> protected SessionFactory lookupSessionFactory(HttpServletRequest request);1530174524;Look up the SessionFactory that this filter should use,_taking the current HTTP request as argument._<p>The default implementation delegates to the {@link #lookupSessionFactory()}_variant without arguments._@param request the current request_@return the SessionFactory to use;protected SessionFactory lookupSessionFactory(HttpServletRequest request) {_		return lookupSessionFactory()__	};look,up,the,session,factory,that,this,filter,should,use,taking,the,current,http,request,as,argument,p,the,default,implementation,delegates,to,the,link,lookup,session,factory,variant,without,arguments,param,request,the,current,request,return,the,session,factory,to,use;protected,session,factory,lookup,session,factory,http,servlet,request,request,return,lookup,session,factory
OpenSessionInViewFilter -> protected String getSessionFactoryBeanName();1467668243;Return the bean name of the SessionFactory to fetch from Spring's_root application context.;protected String getSessionFactoryBeanName() {_		return this.sessionFactoryBeanName__	};return,the,bean,name,of,the,session,factory,to,fetch,from,spring,s,root,application,context;protected,string,get,session,factory,bean,name,return,this,session,factory,bean,name
OpenSessionInViewFilter -> protected String getSessionFactoryBeanName();1496837955;Return the bean name of the SessionFactory to fetch from Spring's_root application context.;protected String getSessionFactoryBeanName() {_		return this.sessionFactoryBeanName__	};return,the,bean,name,of,the,session,factory,to,fetch,from,spring,s,root,application,context;protected,string,get,session,factory,bean,name,return,this,session,factory,bean,name
OpenSessionInViewFilter -> protected String getSessionFactoryBeanName();1530174524;Return the bean name of the SessionFactory to fetch from Spring's_root application context.;protected String getSessionFactoryBeanName() {_		return this.sessionFactoryBeanName__	};return,the,bean,name,of,the,session,factory,to,fetch,from,spring,s,root,application,context;protected,string,get,session,factory,bean,name,return,this,session,factory,bean,name
OpenSessionInViewFilter -> @SuppressWarnings("deprecation") 	protected Session openSession(SessionFactory sessionFactory) throws DataAccessResourceFailureException;1467668243;Open a Session for the SessionFactory that this filter uses._<p>The default implementation delegates to the {@link SessionFactory#openSession}_method and sets the {@link Session}'s flush mode to "MANUAL"._@param sessionFactory the SessionFactory that this filter uses_@return the Session to use_@throws DataAccessResourceFailureException if the Session could not be created_@see FlushMode#MANUAL;@SuppressWarnings("deprecation")_	protected Session openSession(SessionFactory sessionFactory) throws DataAccessResourceFailureException {_		try {_			Session session = sessionFactory.openSession()__			session.setFlushMode(FlushMode.MANUAL)__			return session__		}_		catch (HibernateException ex) {_			throw new DataAccessResourceFailureException("Could not open Hibernate Session", ex)__		}_	};open,a,session,for,the,session,factory,that,this,filter,uses,p,the,default,implementation,delegates,to,the,link,session,factory,open,session,method,and,sets,the,link,session,s,flush,mode,to,manual,param,session,factory,the,session,factory,that,this,filter,uses,return,the,session,to,use,throws,data,access,resource,failure,exception,if,the,session,could,not,be,created,see,flush,mode,manual;suppress,warnings,deprecation,protected,session,open,session,session,factory,session,factory,throws,data,access,resource,failure,exception,try,session,session,session,factory,open,session,session,set,flush,mode,flush,mode,manual,return,session,catch,hibernate,exception,ex,throw,new,data,access,resource,failure,exception,could,not,open,hibernate,session,ex
OpenSessionInViewFilter -> @SuppressWarnings("deprecation") 	protected Session openSession(SessionFactory sessionFactory) throws DataAccessResourceFailureException;1496837955;Open a Session for the SessionFactory that this filter uses._<p>The default implementation delegates to the {@link SessionFactory#openSession}_method and sets the {@link Session}'s flush mode to "MANUAL"._@param sessionFactory the SessionFactory that this filter uses_@return the Session to use_@throws DataAccessResourceFailureException if the Session could not be created_@see FlushMode#MANUAL;@SuppressWarnings("deprecation")_	protected Session openSession(SessionFactory sessionFactory) throws DataAccessResourceFailureException {_		try {_			Session session = sessionFactory.openSession()__			session.setFlushMode(FlushMode.MANUAL)__			return session__		}_		catch (HibernateException ex) {_			throw new DataAccessResourceFailureException("Could not open Hibernate Session", ex)__		}_	};open,a,session,for,the,session,factory,that,this,filter,uses,p,the,default,implementation,delegates,to,the,link,session,factory,open,session,method,and,sets,the,link,session,s,flush,mode,to,manual,param,session,factory,the,session,factory,that,this,filter,uses,return,the,session,to,use,throws,data,access,resource,failure,exception,if,the,session,could,not,be,created,see,flush,mode,manual;suppress,warnings,deprecation,protected,session,open,session,session,factory,session,factory,throws,data,access,resource,failure,exception,try,session,session,session,factory,open,session,session,set,flush,mode,flush,mode,manual,return,session,catch,hibernate,exception,ex,throw,new,data,access,resource,failure,exception,could,not,open,hibernate,session,ex
OpenSessionInViewFilter -> @SuppressWarnings("deprecation") 	protected Session openSession(SessionFactory sessionFactory) throws DataAccessResourceFailureException;1530174524;Open a Session for the SessionFactory that this filter uses._<p>The default implementation delegates to the {@link SessionFactory#openSession}_method and sets the {@link Session}'s flush mode to "MANUAL"._@param sessionFactory the SessionFactory that this filter uses_@return the Session to use_@throws DataAccessResourceFailureException if the Session could not be created_@see FlushMode#MANUAL;@SuppressWarnings("deprecation")_	protected Session openSession(SessionFactory sessionFactory) throws DataAccessResourceFailureException {_		try {_			Session session = sessionFactory.openSession()__			session.setFlushMode(FlushMode.MANUAL)__			return session__		}_		catch (HibernateException ex) {_			throw new DataAccessResourceFailureException("Could not open Hibernate Session", ex)__		}_	};open,a,session,for,the,session,factory,that,this,filter,uses,p,the,default,implementation,delegates,to,the,link,session,factory,open,session,method,and,sets,the,link,session,s,flush,mode,to,manual,param,session,factory,the,session,factory,that,this,filter,uses,return,the,session,to,use,throws,data,access,resource,failure,exception,if,the,session,could,not,be,created,see,flush,mode,manual;suppress,warnings,deprecation,protected,session,open,session,session,factory,session,factory,throws,data,access,resource,failure,exception,try,session,session,session,factory,open,session,session,set,flush,mode,flush,mode,manual,return,session,catch,hibernate,exception,ex,throw,new,data,access,resource,failure,exception,could,not,open,hibernate,session,ex
OpenSessionInViewFilter -> @Override 	protected boolean shouldNotFilterErrorDispatch();1467668243;Returns "false" so that the filter may provide a Hibernate_{@code Session} to each error dispatches.;@Override_	protected boolean shouldNotFilterErrorDispatch() {_		return false__	};returns,false,so,that,the,filter,may,provide,a,hibernate,code,session,to,each,error,dispatches;override,protected,boolean,should,not,filter,error,dispatch,return,false
OpenSessionInViewFilter -> @Override 	protected boolean shouldNotFilterErrorDispatch();1496837955;Returns "false" so that the filter may provide a Hibernate_{@code Session} to each error dispatches.;@Override_	protected boolean shouldNotFilterErrorDispatch() {_		return false__	};returns,false,so,that,the,filter,may,provide,a,hibernate,code,session,to,each,error,dispatches;override,protected,boolean,should,not,filter,error,dispatch,return,false
OpenSessionInViewFilter -> @Override 	protected boolean shouldNotFilterErrorDispatch();1530174524;Returns "false" so that the filter may provide a Hibernate_{@code Session} to each error dispatches.;@Override_	protected boolean shouldNotFilterErrorDispatch() {_		return false__	};returns,false,so,that,the,filter,may,provide,a,hibernate,code,session,to,each,error,dispatches;override,protected,boolean,should,not,filter,error,dispatch,return,false
OpenSessionInViewFilter -> protected SessionFactory lookupSessionFactory();1467668243;Look up the SessionFactory that this filter should use._<p>The default implementation looks for a bean with the specified name_in Spring's root application context._@return the SessionFactory to use_@see #getSessionFactoryBeanName;protected SessionFactory lookupSessionFactory() {_		if (logger.isDebugEnabled()) {_			logger.debug("Using SessionFactory '" + getSessionFactoryBeanName() + "' for OpenSessionInViewFilter")__		}_		WebApplicationContext wac = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext())__		return wac.getBean(getSessionFactoryBeanName(), SessionFactory.class)__	};look,up,the,session,factory,that,this,filter,should,use,p,the,default,implementation,looks,for,a,bean,with,the,specified,name,in,spring,s,root,application,context,return,the,session,factory,to,use,see,get,session,factory,bean,name;protected,session,factory,lookup,session,factory,if,logger,is,debug,enabled,logger,debug,using,session,factory,get,session,factory,bean,name,for,open,session,in,view,filter,web,application,context,wac,web,application,context,utils,get,required,web,application,context,get,servlet,context,return,wac,get,bean,get,session,factory,bean,name,session,factory,class
OpenSessionInViewFilter -> protected SessionFactory lookupSessionFactory();1496837955;Look up the SessionFactory that this filter should use._<p>The default implementation looks for a bean with the specified name_in Spring's root application context._@return the SessionFactory to use_@see #getSessionFactoryBeanName;protected SessionFactory lookupSessionFactory() {_		if (logger.isDebugEnabled()) {_			logger.debug("Using SessionFactory '" + getSessionFactoryBeanName() + "' for OpenSessionInViewFilter")__		}_		WebApplicationContext wac = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext())__		return wac.getBean(getSessionFactoryBeanName(), SessionFactory.class)__	};look,up,the,session,factory,that,this,filter,should,use,p,the,default,implementation,looks,for,a,bean,with,the,specified,name,in,spring,s,root,application,context,return,the,session,factory,to,use,see,get,session,factory,bean,name;protected,session,factory,lookup,session,factory,if,logger,is,debug,enabled,logger,debug,using,session,factory,get,session,factory,bean,name,for,open,session,in,view,filter,web,application,context,wac,web,application,context,utils,get,required,web,application,context,get,servlet,context,return,wac,get,bean,get,session,factory,bean,name,session,factory,class
OpenSessionInViewFilter -> protected SessionFactory lookupSessionFactory();1530174524;Look up the SessionFactory that this filter should use._<p>The default implementation looks for a bean with the specified name_in Spring's root application context._@return the SessionFactory to use_@see #getSessionFactoryBeanName;protected SessionFactory lookupSessionFactory() {_		if (logger.isDebugEnabled()) {_			logger.debug("Using SessionFactory '" + getSessionFactoryBeanName() + "' for OpenSessionInViewFilter")__		}_		WebApplicationContext wac = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext())__		return wac.getBean(getSessionFactoryBeanName(), SessionFactory.class)__	};look,up,the,session,factory,that,this,filter,should,use,p,the,default,implementation,looks,for,a,bean,with,the,specified,name,in,spring,s,root,application,context,return,the,session,factory,to,use,see,get,session,factory,bean,name;protected,session,factory,lookup,session,factory,if,logger,is,debug,enabled,logger,debug,using,session,factory,get,session,factory,bean,name,for,open,session,in,view,filter,web,application,context,wac,web,application,context,utils,get,required,web,application,context,get,servlet,context,return,wac,get,bean,get,session,factory,bean,name,session,factory,class
