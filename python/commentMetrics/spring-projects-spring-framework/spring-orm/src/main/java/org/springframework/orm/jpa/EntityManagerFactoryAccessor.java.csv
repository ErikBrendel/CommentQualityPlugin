# id;timestamp;commentText;codeText;commentWords;codeWords
EntityManagerFactoryAccessor -> protected final EntityManagerFactory obtainEntityManagerFactory();1496837955;Obtain the EntityManagerFactory for actual use._@return the EntityManagerFactory (never {@code null})_@throws IllegalStateException in case of no EntityManagerFactory set_@since 5.0;protected final EntityManagerFactory obtainEntityManagerFactory() {_		EntityManagerFactory emf = getEntityManagerFactory()__		Assert.state(emf != null, "No EntityManagerFactory set")__		return emf__	};obtain,the,entity,manager,factory,for,actual,use,return,the,entity,manager,factory,never,code,null,throws,illegal,state,exception,in,case,of,no,entity,manager,factory,set,since,5,0;protected,final,entity,manager,factory,obtain,entity,manager,factory,entity,manager,factory,emf,get,entity,manager,factory,assert,state,emf,null,no,entity,manager,factory,set,return,emf
EntityManagerFactoryAccessor -> protected final EntityManagerFactory obtainEntityManagerFactory();1500448076;Obtain the EntityManagerFactory for actual use._@return the EntityManagerFactory (never {@code null})_@throws IllegalStateException in case of no EntityManagerFactory set_@since 5.0;protected final EntityManagerFactory obtainEntityManagerFactory() {_		EntityManagerFactory emf = getEntityManagerFactory()__		Assert.state(emf != null, "No EntityManagerFactory set")__		return emf__	};obtain,the,entity,manager,factory,for,actual,use,return,the,entity,manager,factory,never,code,null,throws,illegal,state,exception,in,case,of,no,entity,manager,factory,set,since,5,0;protected,final,entity,manager,factory,obtain,entity,manager,factory,entity,manager,factory,emf,get,entity,manager,factory,assert,state,emf,null,no,entity,manager,factory,set,return,emf
EntityManagerFactoryAccessor -> protected final EntityManagerFactory obtainEntityManagerFactory();1530174524;Obtain the EntityManagerFactory for actual use._@return the EntityManagerFactory (never {@code null})_@throws IllegalStateException in case of no EntityManagerFactory set_@since 5.0;protected final EntityManagerFactory obtainEntityManagerFactory() {_		EntityManagerFactory emf = getEntityManagerFactory()__		Assert.state(emf != null, "No EntityManagerFactory set")__		return emf__	};obtain,the,entity,manager,factory,for,actual,use,return,the,entity,manager,factory,never,code,null,throws,illegal,state,exception,in,case,of,no,entity,manager,factory,set,since,5,0;protected,final,entity,manager,factory,obtain,entity,manager,factory,entity,manager,factory,emf,get,entity,manager,factory,assert,state,emf,null,no,entity,manager,factory,set,return,emf
EntityManagerFactoryAccessor -> protected EntityManager getTransactionalEntityManager() throws IllegalStateException;1328020251;Obtain the transactional EntityManager for this accessor's EntityManagerFactory, if any._@return the transactional EntityManager, or <code>null</code> if none_@throws IllegalStateException if this accessor is not configured with an EntityManagerFactory_@see EntityManagerFactoryUtils#getTransactionalEntityManager(javax.persistence.EntityManagerFactory)_@see EntityManagerFactoryUtils#getTransactionalEntityManager(javax.persistence.EntityManagerFactory, java.util.Map);protected EntityManager getTransactionalEntityManager() throws IllegalStateException{_		EntityManagerFactory emf = getEntityManagerFactory()__		Assert.state(emf != null, "No EntityManagerFactory specified")__		return EntityManagerFactoryUtils.getTransactionalEntityManager(emf, getJpaPropertyMap())__	};obtain,the,transactional,entity,manager,for,this,accessor,s,entity,manager,factory,if,any,return,the,transactional,entity,manager,or,code,null,code,if,none,throws,illegal,state,exception,if,this,accessor,is,not,configured,with,an,entity,manager,factory,see,entity,manager,factory,utils,get,transactional,entity,manager,javax,persistence,entity,manager,factory,see,entity,manager,factory,utils,get,transactional,entity,manager,javax,persistence,entity,manager,factory,java,util,map;protected,entity,manager,get,transactional,entity,manager,throws,illegal,state,exception,entity,manager,factory,emf,get,entity,manager,factory,assert,state,emf,null,no,entity,manager,factory,specified,return,entity,manager,factory,utils,get,transactional,entity,manager,emf,get,jpa,property,map
EntityManagerFactoryAccessor -> protected EntityManager getTransactionalEntityManager() throws IllegalStateException;1356735495;Obtain the transactional EntityManager for this accessor's EntityManagerFactory, if any._@return the transactional EntityManager, or {@code null} if none_@throws IllegalStateException if this accessor is not configured with an EntityManagerFactory_@see EntityManagerFactoryUtils#getTransactionalEntityManager(javax.persistence.EntityManagerFactory)_@see EntityManagerFactoryUtils#getTransactionalEntityManager(javax.persistence.EntityManagerFactory, java.util.Map);protected EntityManager getTransactionalEntityManager() throws IllegalStateException{_		EntityManagerFactory emf = getEntityManagerFactory()__		Assert.state(emf != null, "No EntityManagerFactory specified")__		return EntityManagerFactoryUtils.getTransactionalEntityManager(emf, getJpaPropertyMap())__	};obtain,the,transactional,entity,manager,for,this,accessor,s,entity,manager,factory,if,any,return,the,transactional,entity,manager,or,code,null,if,none,throws,illegal,state,exception,if,this,accessor,is,not,configured,with,an,entity,manager,factory,see,entity,manager,factory,utils,get,transactional,entity,manager,javax,persistence,entity,manager,factory,see,entity,manager,factory,utils,get,transactional,entity,manager,javax,persistence,entity,manager,factory,java,util,map;protected,entity,manager,get,transactional,entity,manager,throws,illegal,state,exception,entity,manager,factory,emf,get,entity,manager,factory,assert,state,emf,null,no,entity,manager,factory,specified,return,entity,manager,factory,utils,get,transactional,entity,manager,emf,get,jpa,property,map
EntityManagerFactoryAccessor -> protected EntityManager getTransactionalEntityManager() throws IllegalStateException;1357119239;Obtain the transactional EntityManager for this accessor's EntityManagerFactory, if any._@return the transactional EntityManager, or {@code null} if none_@throws IllegalStateException if this accessor is not configured with an EntityManagerFactory_@see EntityManagerFactoryUtils#getTransactionalEntityManager(javax.persistence.EntityManagerFactory)_@see EntityManagerFactoryUtils#getTransactionalEntityManager(javax.persistence.EntityManagerFactory, java.util.Map);protected EntityManager getTransactionalEntityManager() throws IllegalStateException{_		EntityManagerFactory emf = getEntityManagerFactory()__		Assert.state(emf != null, "No EntityManagerFactory specified")__		return EntityManagerFactoryUtils.getTransactionalEntityManager(emf, getJpaPropertyMap())__	};obtain,the,transactional,entity,manager,for,this,accessor,s,entity,manager,factory,if,any,return,the,transactional,entity,manager,or,code,null,if,none,throws,illegal,state,exception,if,this,accessor,is,not,configured,with,an,entity,manager,factory,see,entity,manager,factory,utils,get,transactional,entity,manager,javax,persistence,entity,manager,factory,see,entity,manager,factory,utils,get,transactional,entity,manager,javax,persistence,entity,manager,factory,java,util,map;protected,entity,manager,get,transactional,entity,manager,throws,illegal,state,exception,entity,manager,factory,emf,get,entity,manager,factory,assert,state,emf,null,no,entity,manager,factory,specified,return,entity,manager,factory,utils,get,transactional,entity,manager,emf,get,jpa,property,map
EntityManagerFactoryAccessor -> protected EntityManager getTransactionalEntityManager() throws IllegalStateException;1364559513;Obtain the transactional EntityManager for this accessor's EntityManagerFactory, if any._@return the transactional EntityManager, or {@code null} if none_@throws IllegalStateException if this accessor is not configured with an EntityManagerFactory_@see EntityManagerFactoryUtils#getTransactionalEntityManager(javax.persistence.EntityManagerFactory)_@see EntityManagerFactoryUtils#getTransactionalEntityManager(javax.persistence.EntityManagerFactory, java.util.Map);protected EntityManager getTransactionalEntityManager() throws IllegalStateException{_		EntityManagerFactory emf = getEntityManagerFactory()__		Assert.state(emf != null, "No EntityManagerFactory specified")__		return EntityManagerFactoryUtils.getTransactionalEntityManager(emf, getJpaPropertyMap())__	};obtain,the,transactional,entity,manager,for,this,accessor,s,entity,manager,factory,if,any,return,the,transactional,entity,manager,or,code,null,if,none,throws,illegal,state,exception,if,this,accessor,is,not,configured,with,an,entity,manager,factory,see,entity,manager,factory,utils,get,transactional,entity,manager,javax,persistence,entity,manager,factory,see,entity,manager,factory,utils,get,transactional,entity,manager,javax,persistence,entity,manager,factory,java,util,map;protected,entity,manager,get,transactional,entity,manager,throws,illegal,state,exception,entity,manager,factory,emf,get,entity,manager,factory,assert,state,emf,null,no,entity,manager,factory,specified,return,entity,manager,factory,utils,get,transactional,entity,manager,emf,get,jpa,property,map
EntityManagerFactoryAccessor -> protected EntityManager getTransactionalEntityManager() throws IllegalStateException;1368482696;Obtain the transactional EntityManager for this accessor's EntityManagerFactory, if any._@return the transactional EntityManager, or {@code null} if none_@throws IllegalStateException if this accessor is not configured with an EntityManagerFactory_@see EntityManagerFactoryUtils#getTransactionalEntityManager(javax.persistence.EntityManagerFactory)_@see EntityManagerFactoryUtils#getTransactionalEntityManager(javax.persistence.EntityManagerFactory, java.util.Map);protected EntityManager getTransactionalEntityManager() throws IllegalStateException{_		EntityManagerFactory emf = getEntityManagerFactory()__		Assert.state(emf != null, "No EntityManagerFactory specified")__		return EntityManagerFactoryUtils.getTransactionalEntityManager(emf, getJpaPropertyMap())__	};obtain,the,transactional,entity,manager,for,this,accessor,s,entity,manager,factory,if,any,return,the,transactional,entity,manager,or,code,null,if,none,throws,illegal,state,exception,if,this,accessor,is,not,configured,with,an,entity,manager,factory,see,entity,manager,factory,utils,get,transactional,entity,manager,javax,persistence,entity,manager,factory,see,entity,manager,factory,utils,get,transactional,entity,manager,javax,persistence,entity,manager,factory,java,util,map;protected,entity,manager,get,transactional,entity,manager,throws,illegal,state,exception,entity,manager,factory,emf,get,entity,manager,factory,assert,state,emf,null,no,entity,manager,factory,specified,return,entity,manager,factory,utils,get,transactional,entity,manager,emf,get,jpa,property,map
EntityManagerFactoryAccessor -> protected EntityManager getTransactionalEntityManager() throws IllegalStateException;1414678671;Obtain the transactional EntityManager for this accessor's EntityManagerFactory, if any._@return the transactional EntityManager, or {@code null} if none_@throws IllegalStateException if this accessor is not configured with an EntityManagerFactory_@see EntityManagerFactoryUtils#getTransactionalEntityManager(javax.persistence.EntityManagerFactory)_@see EntityManagerFactoryUtils#getTransactionalEntityManager(javax.persistence.EntityManagerFactory, java.util.Map);protected EntityManager getTransactionalEntityManager() throws IllegalStateException{_		EntityManagerFactory emf = getEntityManagerFactory()__		Assert.state(emf != null, "No EntityManagerFactory specified")__		return EntityManagerFactoryUtils.getTransactionalEntityManager(emf, getJpaPropertyMap())__	};obtain,the,transactional,entity,manager,for,this,accessor,s,entity,manager,factory,if,any,return,the,transactional,entity,manager,or,code,null,if,none,throws,illegal,state,exception,if,this,accessor,is,not,configured,with,an,entity,manager,factory,see,entity,manager,factory,utils,get,transactional,entity,manager,javax,persistence,entity,manager,factory,see,entity,manager,factory,utils,get,transactional,entity,manager,javax,persistence,entity,manager,factory,java,util,map;protected,entity,manager,get,transactional,entity,manager,throws,illegal,state,exception,entity,manager,factory,emf,get,entity,manager,factory,assert,state,emf,null,no,entity,manager,factory,specified,return,entity,manager,factory,utils,get,transactional,entity,manager,emf,get,jpa,property,map
EntityManagerFactoryAccessor -> protected EntityManager getTransactionalEntityManager() throws IllegalStateException;1467730834;Obtain the transactional EntityManager for this accessor's EntityManagerFactory, if any._@return the transactional EntityManager, or {@code null} if none_@throws IllegalStateException if this accessor is not configured with an EntityManagerFactory_@see EntityManagerFactoryUtils#getTransactionalEntityManager(javax.persistence.EntityManagerFactory)_@see EntityManagerFactoryUtils#getTransactionalEntityManager(javax.persistence.EntityManagerFactory, java.util.Map);protected EntityManager getTransactionalEntityManager() throws IllegalStateException{_		EntityManagerFactory emf = getEntityManagerFactory()__		Assert.state(emf != null, "No EntityManagerFactory specified")__		return EntityManagerFactoryUtils.getTransactionalEntityManager(emf, getJpaPropertyMap())__	};obtain,the,transactional,entity,manager,for,this,accessor,s,entity,manager,factory,if,any,return,the,transactional,entity,manager,or,code,null,if,none,throws,illegal,state,exception,if,this,accessor,is,not,configured,with,an,entity,manager,factory,see,entity,manager,factory,utils,get,transactional,entity,manager,javax,persistence,entity,manager,factory,see,entity,manager,factory,utils,get,transactional,entity,manager,javax,persistence,entity,manager,factory,java,util,map;protected,entity,manager,get,transactional,entity,manager,throws,illegal,state,exception,entity,manager,factory,emf,get,entity,manager,factory,assert,state,emf,null,no,entity,manager,factory,specified,return,entity,manager,factory,utils,get,transactional,entity,manager,emf,get,jpa,property,map
EntityManagerFactoryAccessor -> public void setJpaPropertyMap(Map<String, Object> jpaProperties);1328020251;Specify JPA properties as a Map, to be passed into_<code>EntityManagerFactory.createEntityManager(Map)</code> (if any)._<p>Can be populated with a "map" or "props" element in XML bean definitions._@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setJpaPropertyMap(Map<String, Object> jpaProperties) {_		if (jpaProperties != null) {_			this.jpaPropertyMap.putAll(jpaProperties)__		}_	};specify,jpa,properties,as,a,map,to,be,passed,into,code,entity,manager,factory,create,entity,manager,map,code,if,any,p,can,be,populated,with,a,map,or,props,element,in,xml,bean,definitions,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,jpa,property,map,map,string,object,jpa,properties,if,jpa,properties,null,this,jpa,property,map,put,all,jpa,properties
EntityManagerFactoryAccessor -> public void setJpaPropertyMap(Map<String, Object> jpaProperties);1356735495;Specify JPA properties as a Map, to be passed into_{@code EntityManagerFactory.createEntityManager(Map)} (if any)._<p>Can be populated with a "map" or "props" element in XML bean definitions._@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setJpaPropertyMap(Map<String, Object> jpaProperties) {_		if (jpaProperties != null) {_			this.jpaPropertyMap.putAll(jpaProperties)__		}_	};specify,jpa,properties,as,a,map,to,be,passed,into,code,entity,manager,factory,create,entity,manager,map,if,any,p,can,be,populated,with,a,map,or,props,element,in,xml,bean,definitions,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,jpa,property,map,map,string,object,jpa,properties,if,jpa,properties,null,this,jpa,property,map,put,all,jpa,properties
EntityManagerFactoryAccessor -> public void setJpaPropertyMap(Map<String, Object> jpaProperties);1357119239;Specify JPA properties as a Map, to be passed into_{@code EntityManagerFactory.createEntityManager(Map)} (if any)._<p>Can be populated with a "map" or "props" element in XML bean definitions._@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setJpaPropertyMap(Map<String, Object> jpaProperties) {_		if (jpaProperties != null) {_			this.jpaPropertyMap.putAll(jpaProperties)__		}_	};specify,jpa,properties,as,a,map,to,be,passed,into,code,entity,manager,factory,create,entity,manager,map,if,any,p,can,be,populated,with,a,map,or,props,element,in,xml,bean,definitions,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,jpa,property,map,map,string,object,jpa,properties,if,jpa,properties,null,this,jpa,property,map,put,all,jpa,properties
EntityManagerFactoryAccessor -> public void setJpaPropertyMap(Map<String, Object> jpaProperties);1364559513;Specify JPA properties as a Map, to be passed into_{@code EntityManagerFactory.createEntityManager(Map)} (if any)._<p>Can be populated with a "map" or "props" element in XML bean definitions._@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setJpaPropertyMap(Map<String, Object> jpaProperties) {_		if (jpaProperties != null) {_			this.jpaPropertyMap.putAll(jpaProperties)__		}_	};specify,jpa,properties,as,a,map,to,be,passed,into,code,entity,manager,factory,create,entity,manager,map,if,any,p,can,be,populated,with,a,map,or,props,element,in,xml,bean,definitions,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,jpa,property,map,map,string,object,jpa,properties,if,jpa,properties,null,this,jpa,property,map,put,all,jpa,properties
EntityManagerFactoryAccessor -> public void setJpaPropertyMap(Map<String, Object> jpaProperties);1368482696;Specify JPA properties as a Map, to be passed into_{@code EntityManagerFactory.createEntityManager(Map)} (if any)._<p>Can be populated with a "map" or "props" element in XML bean definitions._@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setJpaPropertyMap(Map<String, Object> jpaProperties) {_		if (jpaProperties != null) {_			this.jpaPropertyMap.putAll(jpaProperties)__		}_	};specify,jpa,properties,as,a,map,to,be,passed,into,code,entity,manager,factory,create,entity,manager,map,if,any,p,can,be,populated,with,a,map,or,props,element,in,xml,bean,definitions,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,jpa,property,map,map,string,object,jpa,properties,if,jpa,properties,null,this,jpa,property,map,put,all,jpa,properties
EntityManagerFactoryAccessor -> public void setJpaPropertyMap(Map<String, Object> jpaProperties);1414678671;Specify JPA properties as a Map, to be passed into_{@code EntityManagerFactory.createEntityManager(Map)} (if any)._<p>Can be populated with a "map" or "props" element in XML bean definitions._@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setJpaPropertyMap(Map<String, Object> jpaProperties) {_		if (jpaProperties != null) {_			this.jpaPropertyMap.putAll(jpaProperties)__		}_	};specify,jpa,properties,as,a,map,to,be,passed,into,code,entity,manager,factory,create,entity,manager,map,if,any,p,can,be,populated,with,a,map,or,props,element,in,xml,bean,definitions,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,jpa,property,map,map,string,object,jpa,properties,if,jpa,properties,null,this,jpa,property,map,put,all,jpa,properties
EntityManagerFactoryAccessor -> public void setJpaPropertyMap(Map<String, Object> jpaProperties);1467730834;Specify JPA properties as a Map, to be passed into_{@code EntityManagerFactory.createEntityManager(Map)} (if any)._<p>Can be populated with a "map" or "props" element in XML bean definitions._@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setJpaPropertyMap(Map<String, Object> jpaProperties) {_		if (jpaProperties != null) {_			this.jpaPropertyMap.putAll(jpaProperties)__		}_	};specify,jpa,properties,as,a,map,to,be,passed,into,code,entity,manager,factory,create,entity,manager,map,if,any,p,can,be,populated,with,a,map,or,props,element,in,xml,bean,definitions,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,jpa,property,map,map,string,object,jpa,properties,if,jpa,properties,null,this,jpa,property,map,put,all,jpa,properties
EntityManagerFactoryAccessor -> public void setBeanFactory(BeanFactory beanFactory) throws BeansException;1328020251;Retrieves an EntityManagerFactory by persistence unit name, if none set explicitly._Falls back to a default EntityManagerFactory bean if no persistence unit specified._@see #setPersistenceUnitName;public void setBeanFactory(BeanFactory beanFactory) throws BeansException {_		if (getEntityManagerFactory() == null) {_			if (!(beanFactory instanceof ListableBeanFactory)) {_				throw new IllegalStateException("Cannot retrieve EntityManagerFactory by persistence unit name " +_						"in a non-listable BeanFactory: " + beanFactory)__			}_			ListableBeanFactory lbf = (ListableBeanFactory) beanFactory__			setEntityManagerFactory(EntityManagerFactoryUtils.findEntityManagerFactory(lbf, getPersistenceUnitName()))__		}_	};retrieves,an,entity,manager,factory,by,persistence,unit,name,if,none,set,explicitly,falls,back,to,a,default,entity,manager,factory,bean,if,no,persistence,unit,specified,see,set,persistence,unit,name;public,void,set,bean,factory,bean,factory,bean,factory,throws,beans,exception,if,get,entity,manager,factory,null,if,bean,factory,instanceof,listable,bean,factory,throw,new,illegal,state,exception,cannot,retrieve,entity,manager,factory,by,persistence,unit,name,in,a,non,listable,bean,factory,bean,factory,listable,bean,factory,lbf,listable,bean,factory,bean,factory,set,entity,manager,factory,entity,manager,factory,utils,find,entity,manager,factory,lbf,get,persistence,unit,name
EntityManagerFactoryAccessor -> public void setBeanFactory(BeanFactory beanFactory) throws BeansException;1357119239;Retrieves an EntityManagerFactory by persistence unit name, if none set explicitly._Falls back to a default EntityManagerFactory bean if no persistence unit specified._@see #setPersistenceUnitName;public void setBeanFactory(BeanFactory beanFactory) throws BeansException {_		if (getEntityManagerFactory() == null) {_			if (!(beanFactory instanceof ListableBeanFactory)) {_				throw new IllegalStateException("Cannot retrieve EntityManagerFactory by persistence unit name " +_						"in a non-listable BeanFactory: " + beanFactory)__			}_			ListableBeanFactory lbf = (ListableBeanFactory) beanFactory__			setEntityManagerFactory(EntityManagerFactoryUtils.findEntityManagerFactory(lbf, getPersistenceUnitName()))__		}_	};retrieves,an,entity,manager,factory,by,persistence,unit,name,if,none,set,explicitly,falls,back,to,a,default,entity,manager,factory,bean,if,no,persistence,unit,specified,see,set,persistence,unit,name;public,void,set,bean,factory,bean,factory,bean,factory,throws,beans,exception,if,get,entity,manager,factory,null,if,bean,factory,instanceof,listable,bean,factory,throw,new,illegal,state,exception,cannot,retrieve,entity,manager,factory,by,persistence,unit,name,in,a,non,listable,bean,factory,bean,factory,listable,bean,factory,lbf,listable,bean,factory,bean,factory,set,entity,manager,factory,entity,manager,factory,utils,find,entity,manager,factory,lbf,get,persistence,unit,name
EntityManagerFactoryAccessor -> public void setBeanFactory(BeanFactory beanFactory) throws BeansException;1364559513;Retrieves an EntityManagerFactory by persistence unit name, if none set explicitly._Falls back to a default EntityManagerFactory bean if no persistence unit specified._@see #setPersistenceUnitName;public void setBeanFactory(BeanFactory beanFactory) throws BeansException {_		if (getEntityManagerFactory() == null) {_			if (!(beanFactory instanceof ListableBeanFactory)) {_				throw new IllegalStateException("Cannot retrieve EntityManagerFactory by persistence unit name " +_						"in a non-listable BeanFactory: " + beanFactory)__			}_			ListableBeanFactory lbf = (ListableBeanFactory) beanFactory__			setEntityManagerFactory(EntityManagerFactoryUtils.findEntityManagerFactory(lbf, getPersistenceUnitName()))__		}_	};retrieves,an,entity,manager,factory,by,persistence,unit,name,if,none,set,explicitly,falls,back,to,a,default,entity,manager,factory,bean,if,no,persistence,unit,specified,see,set,persistence,unit,name;public,void,set,bean,factory,bean,factory,bean,factory,throws,beans,exception,if,get,entity,manager,factory,null,if,bean,factory,instanceof,listable,bean,factory,throw,new,illegal,state,exception,cannot,retrieve,entity,manager,factory,by,persistence,unit,name,in,a,non,listable,bean,factory,bean,factory,listable,bean,factory,lbf,listable,bean,factory,bean,factory,set,entity,manager,factory,entity,manager,factory,utils,find,entity,manager,factory,lbf,get,persistence,unit,name
EntityManagerFactoryAccessor -> @Nullable 	public String getPersistenceUnitName();1495868221;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;@Nullable_	public String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;nullable,public,string,get,persistence,unit,name,return,this,persistence,unit,name
EntityManagerFactoryAccessor -> @Nullable 	public String getPersistenceUnitName();1496837955;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;@Nullable_	public String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;nullable,public,string,get,persistence,unit,name,return,this,persistence,unit,name
EntityManagerFactoryAccessor -> @Nullable 	public String getPersistenceUnitName();1500448076;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;@Nullable_	public String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;nullable,public,string,get,persistence,unit,name,return,this,persistence,unit,name
EntityManagerFactoryAccessor -> @Nullable 	public String getPersistenceUnitName();1530174524;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;@Nullable_	public String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;nullable,public,string,get,persistence,unit,name,return,this,persistence,unit,name
EntityManagerFactoryAccessor -> @Nullable 	protected EntityManager getTransactionalEntityManager() throws IllegalStateException;1495868221;Obtain the transactional EntityManager for this accessor's EntityManagerFactory, if any._@return the transactional EntityManager, or {@code null} if none_@throws IllegalStateException if this accessor is not configured with an EntityManagerFactory_@see EntityManagerFactoryUtils#getTransactionalEntityManager(javax.persistence.EntityManagerFactory)_@see EntityManagerFactoryUtils#getTransactionalEntityManager(javax.persistence.EntityManagerFactory, java.util.Map);@Nullable_	protected EntityManager getTransactionalEntityManager() throws IllegalStateException{_		EntityManagerFactory emf = getEntityManagerFactory()__		Assert.state(emf != null, "No EntityManagerFactory specified")__		return EntityManagerFactoryUtils.getTransactionalEntityManager(emf, getJpaPropertyMap())__	};obtain,the,transactional,entity,manager,for,this,accessor,s,entity,manager,factory,if,any,return,the,transactional,entity,manager,or,code,null,if,none,throws,illegal,state,exception,if,this,accessor,is,not,configured,with,an,entity,manager,factory,see,entity,manager,factory,utils,get,transactional,entity,manager,javax,persistence,entity,manager,factory,see,entity,manager,factory,utils,get,transactional,entity,manager,javax,persistence,entity,manager,factory,java,util,map;nullable,protected,entity,manager,get,transactional,entity,manager,throws,illegal,state,exception,entity,manager,factory,emf,get,entity,manager,factory,assert,state,emf,null,no,entity,manager,factory,specified,return,entity,manager,factory,utils,get,transactional,entity,manager,emf,get,jpa,property,map
EntityManagerFactoryAccessor -> @Nullable 	protected EntityManager getTransactionalEntityManager() throws IllegalStateException;1496837955;Obtain the transactional EntityManager for this accessor's EntityManagerFactory, if any._@return the transactional EntityManager, or {@code null} if none_@throws IllegalStateException if this accessor is not configured with an EntityManagerFactory_@see EntityManagerFactoryUtils#getTransactionalEntityManager(javax.persistence.EntityManagerFactory)_@see EntityManagerFactoryUtils#getTransactionalEntityManager(javax.persistence.EntityManagerFactory, java.util.Map);@Nullable_	protected EntityManager getTransactionalEntityManager() throws IllegalStateException{_		EntityManagerFactory emf = obtainEntityManagerFactory()__		return EntityManagerFactoryUtils.getTransactionalEntityManager(emf, getJpaPropertyMap())__	};obtain,the,transactional,entity,manager,for,this,accessor,s,entity,manager,factory,if,any,return,the,transactional,entity,manager,or,code,null,if,none,throws,illegal,state,exception,if,this,accessor,is,not,configured,with,an,entity,manager,factory,see,entity,manager,factory,utils,get,transactional,entity,manager,javax,persistence,entity,manager,factory,see,entity,manager,factory,utils,get,transactional,entity,manager,javax,persistence,entity,manager,factory,java,util,map;nullable,protected,entity,manager,get,transactional,entity,manager,throws,illegal,state,exception,entity,manager,factory,emf,obtain,entity,manager,factory,return,entity,manager,factory,utils,get,transactional,entity,manager,emf,get,jpa,property,map
EntityManagerFactoryAccessor -> @Nullable 	protected EntityManager getTransactionalEntityManager() throws IllegalStateException;1500448076;Obtain the transactional EntityManager for this accessor's EntityManagerFactory, if any._@return the transactional EntityManager, or {@code null} if none_@throws IllegalStateException if this accessor is not configured with an EntityManagerFactory_@see EntityManagerFactoryUtils#getTransactionalEntityManager(javax.persistence.EntityManagerFactory)_@see EntityManagerFactoryUtils#getTransactionalEntityManager(javax.persistence.EntityManagerFactory, java.util.Map);@Nullable_	protected EntityManager getTransactionalEntityManager() throws IllegalStateException{_		EntityManagerFactory emf = obtainEntityManagerFactory()__		return EntityManagerFactoryUtils.getTransactionalEntityManager(emf, getJpaPropertyMap())__	};obtain,the,transactional,entity,manager,for,this,accessor,s,entity,manager,factory,if,any,return,the,transactional,entity,manager,or,code,null,if,none,throws,illegal,state,exception,if,this,accessor,is,not,configured,with,an,entity,manager,factory,see,entity,manager,factory,utils,get,transactional,entity,manager,javax,persistence,entity,manager,factory,see,entity,manager,factory,utils,get,transactional,entity,manager,javax,persistence,entity,manager,factory,java,util,map;nullable,protected,entity,manager,get,transactional,entity,manager,throws,illegal,state,exception,entity,manager,factory,emf,obtain,entity,manager,factory,return,entity,manager,factory,utils,get,transactional,entity,manager,emf,get,jpa,property,map
EntityManagerFactoryAccessor -> @Nullable 	protected EntityManager getTransactionalEntityManager() throws IllegalStateException;1530174524;Obtain the transactional EntityManager for this accessor's EntityManagerFactory, if any._@return the transactional EntityManager, or {@code null} if none_@throws IllegalStateException if this accessor is not configured with an EntityManagerFactory_@see EntityManagerFactoryUtils#getTransactionalEntityManager(javax.persistence.EntityManagerFactory)_@see EntityManagerFactoryUtils#getTransactionalEntityManager(javax.persistence.EntityManagerFactory, java.util.Map);@Nullable_	protected EntityManager getTransactionalEntityManager() throws IllegalStateException{_		EntityManagerFactory emf = obtainEntityManagerFactory()__		return EntityManagerFactoryUtils.getTransactionalEntityManager(emf, getJpaPropertyMap())__	};obtain,the,transactional,entity,manager,for,this,accessor,s,entity,manager,factory,if,any,return,the,transactional,entity,manager,or,code,null,if,none,throws,illegal,state,exception,if,this,accessor,is,not,configured,with,an,entity,manager,factory,see,entity,manager,factory,utils,get,transactional,entity,manager,javax,persistence,entity,manager,factory,see,entity,manager,factory,utils,get,transactional,entity,manager,javax,persistence,entity,manager,factory,java,util,map;nullable,protected,entity,manager,get,transactional,entity,manager,throws,illegal,state,exception,entity,manager,factory,emf,obtain,entity,manager,factory,return,entity,manager,factory,utils,get,transactional,entity,manager,emf,get,jpa,property,map
EntityManagerFactoryAccessor -> @Nullable 	public EntityManagerFactory getEntityManagerFactory();1496837955;Return the JPA EntityManagerFactory that should be used to create_EntityManagers.;@Nullable_	public EntityManagerFactory getEntityManagerFactory() {_		return this.entityManagerFactory__	};return,the,jpa,entity,manager,factory,that,should,be,used,to,create,entity,managers;nullable,public,entity,manager,factory,get,entity,manager,factory,return,this,entity,manager,factory
EntityManagerFactoryAccessor -> @Nullable 	public EntityManagerFactory getEntityManagerFactory();1500448076;Return the JPA EntityManagerFactory that should be used to create_EntityManagers.;@Nullable_	public EntityManagerFactory getEntityManagerFactory() {_		return this.entityManagerFactory__	};return,the,jpa,entity,manager,factory,that,should,be,used,to,create,entity,managers;nullable,public,entity,manager,factory,get,entity,manager,factory,return,this,entity,manager,factory
EntityManagerFactoryAccessor -> @Nullable 	public EntityManagerFactory getEntityManagerFactory();1530174524;Return the JPA EntityManagerFactory that should be used to create_EntityManagers.;@Nullable_	public EntityManagerFactory getEntityManagerFactory() {_		return this.entityManagerFactory__	};return,the,jpa,entity,manager,factory,that,should,be,used,to,create,entity,managers;nullable,public,entity,manager,factory,get,entity,manager,factory,return,this,entity,manager,factory
EntityManagerFactoryAccessor -> public EntityManagerFactory getEntityManagerFactory();1328020251;Return the JPA EntityManagerFactory that should be used to create_EntityManagers.;public EntityManagerFactory getEntityManagerFactory() {_		return this.entityManagerFactory__	};return,the,jpa,entity,manager,factory,that,should,be,used,to,create,entity,managers;public,entity,manager,factory,get,entity,manager,factory,return,this,entity,manager,factory
EntityManagerFactoryAccessor -> public EntityManagerFactory getEntityManagerFactory();1356735495;Return the JPA EntityManagerFactory that should be used to create_EntityManagers.;public EntityManagerFactory getEntityManagerFactory() {_		return this.entityManagerFactory__	};return,the,jpa,entity,manager,factory,that,should,be,used,to,create,entity,managers;public,entity,manager,factory,get,entity,manager,factory,return,this,entity,manager,factory
EntityManagerFactoryAccessor -> public EntityManagerFactory getEntityManagerFactory();1357119239;Return the JPA EntityManagerFactory that should be used to create_EntityManagers.;public EntityManagerFactory getEntityManagerFactory() {_		return this.entityManagerFactory__	};return,the,jpa,entity,manager,factory,that,should,be,used,to,create,entity,managers;public,entity,manager,factory,get,entity,manager,factory,return,this,entity,manager,factory
EntityManagerFactoryAccessor -> public EntityManagerFactory getEntityManagerFactory();1364559513;Return the JPA EntityManagerFactory that should be used to create_EntityManagers.;public EntityManagerFactory getEntityManagerFactory() {_		return this.entityManagerFactory__	};return,the,jpa,entity,manager,factory,that,should,be,used,to,create,entity,managers;public,entity,manager,factory,get,entity,manager,factory,return,this,entity,manager,factory
EntityManagerFactoryAccessor -> public EntityManagerFactory getEntityManagerFactory();1368482696;Return the JPA EntityManagerFactory that should be used to create_EntityManagers.;public EntityManagerFactory getEntityManagerFactory() {_		return this.entityManagerFactory__	};return,the,jpa,entity,manager,factory,that,should,be,used,to,create,entity,managers;public,entity,manager,factory,get,entity,manager,factory,return,this,entity,manager,factory
EntityManagerFactoryAccessor -> public EntityManagerFactory getEntityManagerFactory();1414678671;Return the JPA EntityManagerFactory that should be used to create_EntityManagers.;public EntityManagerFactory getEntityManagerFactory() {_		return this.entityManagerFactory__	};return,the,jpa,entity,manager,factory,that,should,be,used,to,create,entity,managers;public,entity,manager,factory,get,entity,manager,factory,return,this,entity,manager,factory
EntityManagerFactoryAccessor -> public EntityManagerFactory getEntityManagerFactory();1467730834;Return the JPA EntityManagerFactory that should be used to create_EntityManagers.;public EntityManagerFactory getEntityManagerFactory() {_		return this.entityManagerFactory__	};return,the,jpa,entity,manager,factory,that,should,be,used,to,create,entity,managers;public,entity,manager,factory,get,entity,manager,factory,return,this,entity,manager,factory
EntityManagerFactoryAccessor -> public EntityManagerFactory getEntityManagerFactory();1495868221;Return the JPA EntityManagerFactory that should be used to create_EntityManagers.;public EntityManagerFactory getEntityManagerFactory() {_		return this.entityManagerFactory__	};return,the,jpa,entity,manager,factory,that,should,be,used,to,create,entity,managers;public,entity,manager,factory,get,entity,manager,factory,return,this,entity,manager,factory
EntityManagerFactoryAccessor -> protected EntityManager createEntityManager() throws IllegalStateException;1328020251;Obtain a new EntityManager from this accessor's EntityManagerFactory._<p>Can be overridden in subclasses to create specific EntityManager variants._@return a new EntityManager_@throws IllegalStateException if this accessor is not configured with an EntityManagerFactory_@see javax.persistence.EntityManagerFactory#createEntityManager()_@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);protected EntityManager createEntityManager() throws IllegalStateException {_		EntityManagerFactory emf = getEntityManagerFactory()__		Assert.state(emf != null, "No EntityManagerFactory specified")__		Map<String, Object> properties = getJpaPropertyMap()__		return (!CollectionUtils.isEmpty(properties) ? emf.createEntityManager(properties) : emf.createEntityManager())__	};obtain,a,new,entity,manager,from,this,accessor,s,entity,manager,factory,p,can,be,overridden,in,subclasses,to,create,specific,entity,manager,variants,return,a,new,entity,manager,throws,illegal,state,exception,if,this,accessor,is,not,configured,with,an,entity,manager,factory,see,javax,persistence,entity,manager,factory,create,entity,manager,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;protected,entity,manager,create,entity,manager,throws,illegal,state,exception,entity,manager,factory,emf,get,entity,manager,factory,assert,state,emf,null,no,entity,manager,factory,specified,map,string,object,properties,get,jpa,property,map,return,collection,utils,is,empty,properties,emf,create,entity,manager,properties,emf,create,entity,manager
EntityManagerFactoryAccessor -> protected EntityManager createEntityManager() throws IllegalStateException;1356735495;Obtain a new EntityManager from this accessor's EntityManagerFactory._<p>Can be overridden in subclasses to create specific EntityManager variants._@return a new EntityManager_@throws IllegalStateException if this accessor is not configured with an EntityManagerFactory_@see javax.persistence.EntityManagerFactory#createEntityManager()_@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);protected EntityManager createEntityManager() throws IllegalStateException {_		EntityManagerFactory emf = getEntityManagerFactory()__		Assert.state(emf != null, "No EntityManagerFactory specified")__		Map<String, Object> properties = getJpaPropertyMap()__		return (!CollectionUtils.isEmpty(properties) ? emf.createEntityManager(properties) : emf.createEntityManager())__	};obtain,a,new,entity,manager,from,this,accessor,s,entity,manager,factory,p,can,be,overridden,in,subclasses,to,create,specific,entity,manager,variants,return,a,new,entity,manager,throws,illegal,state,exception,if,this,accessor,is,not,configured,with,an,entity,manager,factory,see,javax,persistence,entity,manager,factory,create,entity,manager,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;protected,entity,manager,create,entity,manager,throws,illegal,state,exception,entity,manager,factory,emf,get,entity,manager,factory,assert,state,emf,null,no,entity,manager,factory,specified,map,string,object,properties,get,jpa,property,map,return,collection,utils,is,empty,properties,emf,create,entity,manager,properties,emf,create,entity,manager
EntityManagerFactoryAccessor -> protected EntityManager createEntityManager() throws IllegalStateException;1357119239;Obtain a new EntityManager from this accessor's EntityManagerFactory._<p>Can be overridden in subclasses to create specific EntityManager variants._@return a new EntityManager_@throws IllegalStateException if this accessor is not configured with an EntityManagerFactory_@see javax.persistence.EntityManagerFactory#createEntityManager()_@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);protected EntityManager createEntityManager() throws IllegalStateException {_		EntityManagerFactory emf = getEntityManagerFactory()__		Assert.state(emf != null, "No EntityManagerFactory specified")__		Map<String, Object> properties = getJpaPropertyMap()__		return (!CollectionUtils.isEmpty(properties) ? emf.createEntityManager(properties) : emf.createEntityManager())__	};obtain,a,new,entity,manager,from,this,accessor,s,entity,manager,factory,p,can,be,overridden,in,subclasses,to,create,specific,entity,manager,variants,return,a,new,entity,manager,throws,illegal,state,exception,if,this,accessor,is,not,configured,with,an,entity,manager,factory,see,javax,persistence,entity,manager,factory,create,entity,manager,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;protected,entity,manager,create,entity,manager,throws,illegal,state,exception,entity,manager,factory,emf,get,entity,manager,factory,assert,state,emf,null,no,entity,manager,factory,specified,map,string,object,properties,get,jpa,property,map,return,collection,utils,is,empty,properties,emf,create,entity,manager,properties,emf,create,entity,manager
EntityManagerFactoryAccessor -> protected EntityManager createEntityManager() throws IllegalStateException;1364559513;Obtain a new EntityManager from this accessor's EntityManagerFactory._<p>Can be overridden in subclasses to create specific EntityManager variants._@return a new EntityManager_@throws IllegalStateException if this accessor is not configured with an EntityManagerFactory_@see javax.persistence.EntityManagerFactory#createEntityManager()_@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);protected EntityManager createEntityManager() throws IllegalStateException {_		EntityManagerFactory emf = getEntityManagerFactory()__		Assert.state(emf != null, "No EntityManagerFactory specified")__		Map<String, Object> properties = getJpaPropertyMap()__		return (!CollectionUtils.isEmpty(properties) ? emf.createEntityManager(properties) : emf.createEntityManager())__	};obtain,a,new,entity,manager,from,this,accessor,s,entity,manager,factory,p,can,be,overridden,in,subclasses,to,create,specific,entity,manager,variants,return,a,new,entity,manager,throws,illegal,state,exception,if,this,accessor,is,not,configured,with,an,entity,manager,factory,see,javax,persistence,entity,manager,factory,create,entity,manager,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;protected,entity,manager,create,entity,manager,throws,illegal,state,exception,entity,manager,factory,emf,get,entity,manager,factory,assert,state,emf,null,no,entity,manager,factory,specified,map,string,object,properties,get,jpa,property,map,return,collection,utils,is,empty,properties,emf,create,entity,manager,properties,emf,create,entity,manager
EntityManagerFactoryAccessor -> protected EntityManager createEntityManager() throws IllegalStateException;1368482696;Obtain a new EntityManager from this accessor's EntityManagerFactory._<p>Can be overridden in subclasses to create specific EntityManager variants._@return a new EntityManager_@throws IllegalStateException if this accessor is not configured with an EntityManagerFactory_@see javax.persistence.EntityManagerFactory#createEntityManager()_@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);protected EntityManager createEntityManager() throws IllegalStateException {_		EntityManagerFactory emf = getEntityManagerFactory()__		Assert.state(emf != null, "No EntityManagerFactory specified")__		Map<String, Object> properties = getJpaPropertyMap()__		return (!CollectionUtils.isEmpty(properties) ? emf.createEntityManager(properties) : emf.createEntityManager())__	};obtain,a,new,entity,manager,from,this,accessor,s,entity,manager,factory,p,can,be,overridden,in,subclasses,to,create,specific,entity,manager,variants,return,a,new,entity,manager,throws,illegal,state,exception,if,this,accessor,is,not,configured,with,an,entity,manager,factory,see,javax,persistence,entity,manager,factory,create,entity,manager,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;protected,entity,manager,create,entity,manager,throws,illegal,state,exception,entity,manager,factory,emf,get,entity,manager,factory,assert,state,emf,null,no,entity,manager,factory,specified,map,string,object,properties,get,jpa,property,map,return,collection,utils,is,empty,properties,emf,create,entity,manager,properties,emf,create,entity,manager
EntityManagerFactoryAccessor -> protected EntityManager createEntityManager() throws IllegalStateException;1414678671;Obtain a new EntityManager from this accessor's EntityManagerFactory._<p>Can be overridden in subclasses to create specific EntityManager variants._@return a new EntityManager_@throws IllegalStateException if this accessor is not configured with an EntityManagerFactory_@see javax.persistence.EntityManagerFactory#createEntityManager()_@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);protected EntityManager createEntityManager() throws IllegalStateException {_		EntityManagerFactory emf = getEntityManagerFactory()__		Assert.state(emf != null, "No EntityManagerFactory specified")__		Map<String, Object> properties = getJpaPropertyMap()__		return (!CollectionUtils.isEmpty(properties) ? emf.createEntityManager(properties) : emf.createEntityManager())__	};obtain,a,new,entity,manager,from,this,accessor,s,entity,manager,factory,p,can,be,overridden,in,subclasses,to,create,specific,entity,manager,variants,return,a,new,entity,manager,throws,illegal,state,exception,if,this,accessor,is,not,configured,with,an,entity,manager,factory,see,javax,persistence,entity,manager,factory,create,entity,manager,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;protected,entity,manager,create,entity,manager,throws,illegal,state,exception,entity,manager,factory,emf,get,entity,manager,factory,assert,state,emf,null,no,entity,manager,factory,specified,map,string,object,properties,get,jpa,property,map,return,collection,utils,is,empty,properties,emf,create,entity,manager,properties,emf,create,entity,manager
EntityManagerFactoryAccessor -> protected EntityManager createEntityManager() throws IllegalStateException;1467730834;Obtain a new EntityManager from this accessor's EntityManagerFactory._<p>Can be overridden in subclasses to create specific EntityManager variants._@return a new EntityManager_@throws IllegalStateException if this accessor is not configured with an EntityManagerFactory_@see javax.persistence.EntityManagerFactory#createEntityManager()_@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);protected EntityManager createEntityManager() throws IllegalStateException {_		EntityManagerFactory emf = getEntityManagerFactory()__		Assert.state(emf != null, "No EntityManagerFactory specified")__		Map<String, Object> properties = getJpaPropertyMap()__		return (!CollectionUtils.isEmpty(properties) ? emf.createEntityManager(properties) : emf.createEntityManager())__	};obtain,a,new,entity,manager,from,this,accessor,s,entity,manager,factory,p,can,be,overridden,in,subclasses,to,create,specific,entity,manager,variants,return,a,new,entity,manager,throws,illegal,state,exception,if,this,accessor,is,not,configured,with,an,entity,manager,factory,see,javax,persistence,entity,manager,factory,create,entity,manager,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;protected,entity,manager,create,entity,manager,throws,illegal,state,exception,entity,manager,factory,emf,get,entity,manager,factory,assert,state,emf,null,no,entity,manager,factory,specified,map,string,object,properties,get,jpa,property,map,return,collection,utils,is,empty,properties,emf,create,entity,manager,properties,emf,create,entity,manager
EntityManagerFactoryAccessor -> protected EntityManager createEntityManager() throws IllegalStateException;1495868221;Obtain a new EntityManager from this accessor's EntityManagerFactory._<p>Can be overridden in subclasses to create specific EntityManager variants._@return a new EntityManager_@throws IllegalStateException if this accessor is not configured with an EntityManagerFactory_@see javax.persistence.EntityManagerFactory#createEntityManager()_@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);protected EntityManager createEntityManager() throws IllegalStateException {_		EntityManagerFactory emf = getEntityManagerFactory()__		Assert.state(emf != null, "No EntityManagerFactory specified")__		Map<String, Object> properties = getJpaPropertyMap()__		return (!CollectionUtils.isEmpty(properties) ? emf.createEntityManager(properties) : emf.createEntityManager())__	};obtain,a,new,entity,manager,from,this,accessor,s,entity,manager,factory,p,can,be,overridden,in,subclasses,to,create,specific,entity,manager,variants,return,a,new,entity,manager,throws,illegal,state,exception,if,this,accessor,is,not,configured,with,an,entity,manager,factory,see,javax,persistence,entity,manager,factory,create,entity,manager,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;protected,entity,manager,create,entity,manager,throws,illegal,state,exception,entity,manager,factory,emf,get,entity,manager,factory,assert,state,emf,null,no,entity,manager,factory,specified,map,string,object,properties,get,jpa,property,map,return,collection,utils,is,empty,properties,emf,create,entity,manager,properties,emf,create,entity,manager
EntityManagerFactoryAccessor -> protected EntityManager createEntityManager() throws IllegalStateException;1496837955;Obtain a new EntityManager from this accessor's EntityManagerFactory._<p>Can be overridden in subclasses to create specific EntityManager variants._@return a new EntityManager_@throws IllegalStateException if this accessor is not configured with an EntityManagerFactory_@see javax.persistence.EntityManagerFactory#createEntityManager()_@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);protected EntityManager createEntityManager() throws IllegalStateException {_		EntityManagerFactory emf = obtainEntityManagerFactory()__		Map<String, Object> properties = getJpaPropertyMap()__		return (!CollectionUtils.isEmpty(properties) ? emf.createEntityManager(properties) : emf.createEntityManager())__	};obtain,a,new,entity,manager,from,this,accessor,s,entity,manager,factory,p,can,be,overridden,in,subclasses,to,create,specific,entity,manager,variants,return,a,new,entity,manager,throws,illegal,state,exception,if,this,accessor,is,not,configured,with,an,entity,manager,factory,see,javax,persistence,entity,manager,factory,create,entity,manager,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;protected,entity,manager,create,entity,manager,throws,illegal,state,exception,entity,manager,factory,emf,obtain,entity,manager,factory,map,string,object,properties,get,jpa,property,map,return,collection,utils,is,empty,properties,emf,create,entity,manager,properties,emf,create,entity,manager
EntityManagerFactoryAccessor -> protected EntityManager createEntityManager() throws IllegalStateException;1500448076;Obtain a new EntityManager from this accessor's EntityManagerFactory._<p>Can be overridden in subclasses to create specific EntityManager variants._@return a new EntityManager_@throws IllegalStateException if this accessor is not configured with an EntityManagerFactory_@see javax.persistence.EntityManagerFactory#createEntityManager()_@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);protected EntityManager createEntityManager() throws IllegalStateException {_		EntityManagerFactory emf = obtainEntityManagerFactory()__		Map<String, Object> properties = getJpaPropertyMap()__		return (!CollectionUtils.isEmpty(properties) ? emf.createEntityManager(properties) : emf.createEntityManager())__	};obtain,a,new,entity,manager,from,this,accessor,s,entity,manager,factory,p,can,be,overridden,in,subclasses,to,create,specific,entity,manager,variants,return,a,new,entity,manager,throws,illegal,state,exception,if,this,accessor,is,not,configured,with,an,entity,manager,factory,see,javax,persistence,entity,manager,factory,create,entity,manager,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;protected,entity,manager,create,entity,manager,throws,illegal,state,exception,entity,manager,factory,emf,obtain,entity,manager,factory,map,string,object,properties,get,jpa,property,map,return,collection,utils,is,empty,properties,emf,create,entity,manager,properties,emf,create,entity,manager
EntityManagerFactoryAccessor -> protected EntityManager createEntityManager() throws IllegalStateException;1530174524;Obtain a new EntityManager from this accessor's EntityManagerFactory._<p>Can be overridden in subclasses to create specific EntityManager variants._@return a new EntityManager_@throws IllegalStateException if this accessor is not configured with an EntityManagerFactory_@see javax.persistence.EntityManagerFactory#createEntityManager()_@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);protected EntityManager createEntityManager() throws IllegalStateException {_		EntityManagerFactory emf = obtainEntityManagerFactory()__		Map<String, Object> properties = getJpaPropertyMap()__		return (!CollectionUtils.isEmpty(properties) ? emf.createEntityManager(properties) : emf.createEntityManager())__	};obtain,a,new,entity,manager,from,this,accessor,s,entity,manager,factory,p,can,be,overridden,in,subclasses,to,create,specific,entity,manager,variants,return,a,new,entity,manager,throws,illegal,state,exception,if,this,accessor,is,not,configured,with,an,entity,manager,factory,see,javax,persistence,entity,manager,factory,create,entity,manager,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;protected,entity,manager,create,entity,manager,throws,illegal,state,exception,entity,manager,factory,emf,obtain,entity,manager,factory,map,string,object,properties,get,jpa,property,map,return,collection,utils,is,empty,properties,emf,create,entity,manager,properties,emf,create,entity,manager
EntityManagerFactoryAccessor -> @Override 	public void setBeanFactory(BeanFactory beanFactory) throws BeansException;1356735495;Retrieves an EntityManagerFactory by persistence unit name, if none set explicitly._Falls back to a default EntityManagerFactory bean if no persistence unit specified._@see #setPersistenceUnitName;@Override_	public void setBeanFactory(BeanFactory beanFactory) throws BeansException {_		if (getEntityManagerFactory() == null) {_			if (!(beanFactory instanceof ListableBeanFactory)) {_				throw new IllegalStateException("Cannot retrieve EntityManagerFactory by persistence unit name " +_						"in a non-listable BeanFactory: " + beanFactory)__			}_			ListableBeanFactory lbf = (ListableBeanFactory) beanFactory__			setEntityManagerFactory(EntityManagerFactoryUtils.findEntityManagerFactory(lbf, getPersistenceUnitName()))__		}_	};retrieves,an,entity,manager,factory,by,persistence,unit,name,if,none,set,explicitly,falls,back,to,a,default,entity,manager,factory,bean,if,no,persistence,unit,specified,see,set,persistence,unit,name;override,public,void,set,bean,factory,bean,factory,bean,factory,throws,beans,exception,if,get,entity,manager,factory,null,if,bean,factory,instanceof,listable,bean,factory,throw,new,illegal,state,exception,cannot,retrieve,entity,manager,factory,by,persistence,unit,name,in,a,non,listable,bean,factory,bean,factory,listable,bean,factory,lbf,listable,bean,factory,bean,factory,set,entity,manager,factory,entity,manager,factory,utils,find,entity,manager,factory,lbf,get,persistence,unit,name
EntityManagerFactoryAccessor -> @Override 	public void setBeanFactory(BeanFactory beanFactory) throws BeansException;1368482696;Retrieves an EntityManagerFactory by persistence unit name, if none set explicitly._Falls back to a default EntityManagerFactory bean if no persistence unit specified._@see #setPersistenceUnitName;@Override_	public void setBeanFactory(BeanFactory beanFactory) throws BeansException {_		if (getEntityManagerFactory() == null) {_			if (!(beanFactory instanceof ListableBeanFactory)) {_				throw new IllegalStateException("Cannot retrieve EntityManagerFactory by persistence unit name " +_						"in a non-listable BeanFactory: " + beanFactory)__			}_			ListableBeanFactory lbf = (ListableBeanFactory) beanFactory__			setEntityManagerFactory(EntityManagerFactoryUtils.findEntityManagerFactory(lbf, getPersistenceUnitName()))__		}_	};retrieves,an,entity,manager,factory,by,persistence,unit,name,if,none,set,explicitly,falls,back,to,a,default,entity,manager,factory,bean,if,no,persistence,unit,specified,see,set,persistence,unit,name;override,public,void,set,bean,factory,bean,factory,bean,factory,throws,beans,exception,if,get,entity,manager,factory,null,if,bean,factory,instanceof,listable,bean,factory,throw,new,illegal,state,exception,cannot,retrieve,entity,manager,factory,by,persistence,unit,name,in,a,non,listable,bean,factory,bean,factory,listable,bean,factory,lbf,listable,bean,factory,bean,factory,set,entity,manager,factory,entity,manager,factory,utils,find,entity,manager,factory,lbf,get,persistence,unit,name
EntityManagerFactoryAccessor -> @Override 	public void setBeanFactory(BeanFactory beanFactory) throws BeansException;1414678671;Retrieves an EntityManagerFactory by persistence unit name, if none set explicitly._Falls back to a default EntityManagerFactory bean if no persistence unit specified._@see #setPersistenceUnitName;@Override_	public void setBeanFactory(BeanFactory beanFactory) throws BeansException {_		if (getEntityManagerFactory() == null) {_			if (!(beanFactory instanceof ListableBeanFactory)) {_				throw new IllegalStateException("Cannot retrieve EntityManagerFactory by persistence unit name " +_						"in a non-listable BeanFactory: " + beanFactory)__			}_			ListableBeanFactory lbf = (ListableBeanFactory) beanFactory__			setEntityManagerFactory(EntityManagerFactoryUtils.findEntityManagerFactory(lbf, getPersistenceUnitName()))__		}_	};retrieves,an,entity,manager,factory,by,persistence,unit,name,if,none,set,explicitly,falls,back,to,a,default,entity,manager,factory,bean,if,no,persistence,unit,specified,see,set,persistence,unit,name;override,public,void,set,bean,factory,bean,factory,bean,factory,throws,beans,exception,if,get,entity,manager,factory,null,if,bean,factory,instanceof,listable,bean,factory,throw,new,illegal,state,exception,cannot,retrieve,entity,manager,factory,by,persistence,unit,name,in,a,non,listable,bean,factory,bean,factory,listable,bean,factory,lbf,listable,bean,factory,bean,factory,set,entity,manager,factory,entity,manager,factory,utils,find,entity,manager,factory,lbf,get,persistence,unit,name
EntityManagerFactoryAccessor -> @Override 	public void setBeanFactory(BeanFactory beanFactory) throws BeansException;1467730834;Retrieves an EntityManagerFactory by persistence unit name, if none set explicitly._Falls back to a default EntityManagerFactory bean if no persistence unit specified._@see #setPersistenceUnitName;@Override_	public void setBeanFactory(BeanFactory beanFactory) throws BeansException {_		if (getEntityManagerFactory() == null) {_			if (!(beanFactory instanceof ListableBeanFactory)) {_				throw new IllegalStateException("Cannot retrieve EntityManagerFactory by persistence unit name " +_						"in a non-listable BeanFactory: " + beanFactory)__			}_			ListableBeanFactory lbf = (ListableBeanFactory) beanFactory__			setEntityManagerFactory(EntityManagerFactoryUtils.findEntityManagerFactory(lbf, getPersistenceUnitName()))__		}_	};retrieves,an,entity,manager,factory,by,persistence,unit,name,if,none,set,explicitly,falls,back,to,a,default,entity,manager,factory,bean,if,no,persistence,unit,specified,see,set,persistence,unit,name;override,public,void,set,bean,factory,bean,factory,bean,factory,throws,beans,exception,if,get,entity,manager,factory,null,if,bean,factory,instanceof,listable,bean,factory,throw,new,illegal,state,exception,cannot,retrieve,entity,manager,factory,by,persistence,unit,name,in,a,non,listable,bean,factory,bean,factory,listable,bean,factory,lbf,listable,bean,factory,bean,factory,set,entity,manager,factory,entity,manager,factory,utils,find,entity,manager,factory,lbf,get,persistence,unit,name
EntityManagerFactoryAccessor -> @Override 	public void setBeanFactory(BeanFactory beanFactory) throws BeansException;1495868221;Retrieves an EntityManagerFactory by persistence unit name, if none set explicitly._Falls back to a default EntityManagerFactory bean if no persistence unit specified._@see #setPersistenceUnitName;@Override_	public void setBeanFactory(BeanFactory beanFactory) throws BeansException {_		if (getEntityManagerFactory() == null) {_			if (!(beanFactory instanceof ListableBeanFactory)) {_				throw new IllegalStateException("Cannot retrieve EntityManagerFactory by persistence unit name " +_						"in a non-listable BeanFactory: " + beanFactory)__			}_			ListableBeanFactory lbf = (ListableBeanFactory) beanFactory__			setEntityManagerFactory(EntityManagerFactoryUtils.findEntityManagerFactory(lbf, getPersistenceUnitName()))__		}_	};retrieves,an,entity,manager,factory,by,persistence,unit,name,if,none,set,explicitly,falls,back,to,a,default,entity,manager,factory,bean,if,no,persistence,unit,specified,see,set,persistence,unit,name;override,public,void,set,bean,factory,bean,factory,bean,factory,throws,beans,exception,if,get,entity,manager,factory,null,if,bean,factory,instanceof,listable,bean,factory,throw,new,illegal,state,exception,cannot,retrieve,entity,manager,factory,by,persistence,unit,name,in,a,non,listable,bean,factory,bean,factory,listable,bean,factory,lbf,listable,bean,factory,bean,factory,set,entity,manager,factory,entity,manager,factory,utils,find,entity,manager,factory,lbf,get,persistence,unit,name
EntityManagerFactoryAccessor -> @Override 	public void setBeanFactory(BeanFactory beanFactory) throws BeansException;1496837955;Retrieves an EntityManagerFactory by persistence unit name, if none set explicitly._Falls back to a default EntityManagerFactory bean if no persistence unit specified._@see #setPersistenceUnitName;@Override_	public void setBeanFactory(BeanFactory beanFactory) throws BeansException {_		if (getEntityManagerFactory() == null) {_			if (!(beanFactory instanceof ListableBeanFactory)) {_				throw new IllegalStateException("Cannot retrieve EntityManagerFactory by persistence unit name " +_						"in a non-listable BeanFactory: " + beanFactory)__			}_			ListableBeanFactory lbf = (ListableBeanFactory) beanFactory__			setEntityManagerFactory(EntityManagerFactoryUtils.findEntityManagerFactory(lbf, getPersistenceUnitName()))__		}_	};retrieves,an,entity,manager,factory,by,persistence,unit,name,if,none,set,explicitly,falls,back,to,a,default,entity,manager,factory,bean,if,no,persistence,unit,specified,see,set,persistence,unit,name;override,public,void,set,bean,factory,bean,factory,bean,factory,throws,beans,exception,if,get,entity,manager,factory,null,if,bean,factory,instanceof,listable,bean,factory,throw,new,illegal,state,exception,cannot,retrieve,entity,manager,factory,by,persistence,unit,name,in,a,non,listable,bean,factory,bean,factory,listable,bean,factory,lbf,listable,bean,factory,bean,factory,set,entity,manager,factory,entity,manager,factory,utils,find,entity,manager,factory,lbf,get,persistence,unit,name
EntityManagerFactoryAccessor -> @Override 	public void setBeanFactory(BeanFactory beanFactory) throws BeansException;1500448076;Retrieves an EntityManagerFactory by persistence unit name, if none set explicitly._Falls back to a default EntityManagerFactory bean if no persistence unit specified._@see #setPersistenceUnitName;@Override_	public void setBeanFactory(BeanFactory beanFactory) throws BeansException {_		if (getEntityManagerFactory() == null) {_			if (!(beanFactory instanceof ListableBeanFactory)) {_				throw new IllegalStateException("Cannot retrieve EntityManagerFactory by persistence unit name " +_						"in a non-listable BeanFactory: " + beanFactory)__			}_			ListableBeanFactory lbf = (ListableBeanFactory) beanFactory__			setEntityManagerFactory(EntityManagerFactoryUtils.findEntityManagerFactory(lbf, getPersistenceUnitName()))__		}_	};retrieves,an,entity,manager,factory,by,persistence,unit,name,if,none,set,explicitly,falls,back,to,a,default,entity,manager,factory,bean,if,no,persistence,unit,specified,see,set,persistence,unit,name;override,public,void,set,bean,factory,bean,factory,bean,factory,throws,beans,exception,if,get,entity,manager,factory,null,if,bean,factory,instanceof,listable,bean,factory,throw,new,illegal,state,exception,cannot,retrieve,entity,manager,factory,by,persistence,unit,name,in,a,non,listable,bean,factory,bean,factory,listable,bean,factory,lbf,listable,bean,factory,bean,factory,set,entity,manager,factory,entity,manager,factory,utils,find,entity,manager,factory,lbf,get,persistence,unit,name
EntityManagerFactoryAccessor -> @Override 	public void setBeanFactory(BeanFactory beanFactory) throws BeansException;1530174524;Retrieves an EntityManagerFactory by persistence unit name, if none set explicitly._Falls back to a default EntityManagerFactory bean if no persistence unit specified._@see #setPersistenceUnitName;@Override_	public void setBeanFactory(BeanFactory beanFactory) throws BeansException {_		if (getEntityManagerFactory() == null) {_			if (!(beanFactory instanceof ListableBeanFactory)) {_				throw new IllegalStateException("Cannot retrieve EntityManagerFactory by persistence unit name " +_						"in a non-listable BeanFactory: " + beanFactory)__			}_			ListableBeanFactory lbf = (ListableBeanFactory) beanFactory__			setEntityManagerFactory(EntityManagerFactoryUtils.findEntityManagerFactory(lbf, getPersistenceUnitName()))__		}_	};retrieves,an,entity,manager,factory,by,persistence,unit,name,if,none,set,explicitly,falls,back,to,a,default,entity,manager,factory,bean,if,no,persistence,unit,specified,see,set,persistence,unit,name;override,public,void,set,bean,factory,bean,factory,bean,factory,throws,beans,exception,if,get,entity,manager,factory,null,if,bean,factory,instanceof,listable,bean,factory,throw,new,illegal,state,exception,cannot,retrieve,entity,manager,factory,by,persistence,unit,name,in,a,non,listable,bean,factory,bean,factory,listable,bean,factory,lbf,listable,bean,factory,bean,factory,set,entity,manager,factory,entity,manager,factory,utils,find,entity,manager,factory,lbf,get,persistence,unit,name
EntityManagerFactoryAccessor -> public String getPersistenceUnitName();1328020251;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;public String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;public,string,get,persistence,unit,name,return,this,persistence,unit,name
EntityManagerFactoryAccessor -> public String getPersistenceUnitName();1356735495;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;public String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;public,string,get,persistence,unit,name,return,this,persistence,unit,name
EntityManagerFactoryAccessor -> public String getPersistenceUnitName();1357119239;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;public String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;public,string,get,persistence,unit,name,return,this,persistence,unit,name
EntityManagerFactoryAccessor -> public String getPersistenceUnitName();1364559513;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;public String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;public,string,get,persistence,unit,name,return,this,persistence,unit,name
EntityManagerFactoryAccessor -> public String getPersistenceUnitName();1368482696;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;public String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;public,string,get,persistence,unit,name,return,this,persistence,unit,name
EntityManagerFactoryAccessor -> public String getPersistenceUnitName();1414678671;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;public String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;public,string,get,persistence,unit,name,return,this,persistence,unit,name
EntityManagerFactoryAccessor -> public String getPersistenceUnitName();1467730834;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;public String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;public,string,get,persistence,unit,name,return,this,persistence,unit,name
EntityManagerFactoryAccessor -> public void setJpaProperties(Properties jpaProperties);1328020251;Specify JPA properties, to be passed into_<code>EntityManagerFactory.createEntityManager(Map)</code> (if any)._<p>Can be populated with a String "value" (parsed via PropertiesEditor)_or a "props" element in XML bean definitions._@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setJpaProperties(Properties jpaProperties) {_		CollectionUtils.mergePropertiesIntoMap(jpaProperties, this.jpaPropertyMap)__	};specify,jpa,properties,to,be,passed,into,code,entity,manager,factory,create,entity,manager,map,code,if,any,p,can,be,populated,with,a,string,value,parsed,via,properties,editor,or,a,props,element,in,xml,bean,definitions,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,jpa,properties,properties,jpa,properties,collection,utils,merge,properties,into,map,jpa,properties,this,jpa,property,map
EntityManagerFactoryAccessor -> public void setJpaProperties(Properties jpaProperties);1356735495;Specify JPA properties, to be passed into_{@code EntityManagerFactory.createEntityManager(Map)} (if any)._<p>Can be populated with a String "value" (parsed via PropertiesEditor)_or a "props" element in XML bean definitions._@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setJpaProperties(Properties jpaProperties) {_		CollectionUtils.mergePropertiesIntoMap(jpaProperties, this.jpaPropertyMap)__	};specify,jpa,properties,to,be,passed,into,code,entity,manager,factory,create,entity,manager,map,if,any,p,can,be,populated,with,a,string,value,parsed,via,properties,editor,or,a,props,element,in,xml,bean,definitions,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,jpa,properties,properties,jpa,properties,collection,utils,merge,properties,into,map,jpa,properties,this,jpa,property,map
EntityManagerFactoryAccessor -> public void setJpaProperties(Properties jpaProperties);1357119239;Specify JPA properties, to be passed into_{@code EntityManagerFactory.createEntityManager(Map)} (if any)._<p>Can be populated with a String "value" (parsed via PropertiesEditor)_or a "props" element in XML bean definitions._@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setJpaProperties(Properties jpaProperties) {_		CollectionUtils.mergePropertiesIntoMap(jpaProperties, this.jpaPropertyMap)__	};specify,jpa,properties,to,be,passed,into,code,entity,manager,factory,create,entity,manager,map,if,any,p,can,be,populated,with,a,string,value,parsed,via,properties,editor,or,a,props,element,in,xml,bean,definitions,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,jpa,properties,properties,jpa,properties,collection,utils,merge,properties,into,map,jpa,properties,this,jpa,property,map
EntityManagerFactoryAccessor -> public void setJpaProperties(Properties jpaProperties);1364559513;Specify JPA properties, to be passed into_{@code EntityManagerFactory.createEntityManager(Map)} (if any)._<p>Can be populated with a String "value" (parsed via PropertiesEditor)_or a "props" element in XML bean definitions._@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setJpaProperties(Properties jpaProperties) {_		CollectionUtils.mergePropertiesIntoMap(jpaProperties, this.jpaPropertyMap)__	};specify,jpa,properties,to,be,passed,into,code,entity,manager,factory,create,entity,manager,map,if,any,p,can,be,populated,with,a,string,value,parsed,via,properties,editor,or,a,props,element,in,xml,bean,definitions,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,jpa,properties,properties,jpa,properties,collection,utils,merge,properties,into,map,jpa,properties,this,jpa,property,map
EntityManagerFactoryAccessor -> public void setJpaProperties(Properties jpaProperties);1368482696;Specify JPA properties, to be passed into_{@code EntityManagerFactory.createEntityManager(Map)} (if any)._<p>Can be populated with a String "value" (parsed via PropertiesEditor)_or a "props" element in XML bean definitions._@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setJpaProperties(Properties jpaProperties) {_		CollectionUtils.mergePropertiesIntoMap(jpaProperties, this.jpaPropertyMap)__	};specify,jpa,properties,to,be,passed,into,code,entity,manager,factory,create,entity,manager,map,if,any,p,can,be,populated,with,a,string,value,parsed,via,properties,editor,or,a,props,element,in,xml,bean,definitions,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,jpa,properties,properties,jpa,properties,collection,utils,merge,properties,into,map,jpa,properties,this,jpa,property,map
EntityManagerFactoryAccessor -> public void setJpaProperties(Properties jpaProperties);1414678671;Specify JPA properties, to be passed into_{@code EntityManagerFactory.createEntityManager(Map)} (if any)._<p>Can be populated with a String "value" (parsed via PropertiesEditor)_or a "props" element in XML bean definitions._@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setJpaProperties(Properties jpaProperties) {_		CollectionUtils.mergePropertiesIntoMap(jpaProperties, this.jpaPropertyMap)__	};specify,jpa,properties,to,be,passed,into,code,entity,manager,factory,create,entity,manager,map,if,any,p,can,be,populated,with,a,string,value,parsed,via,properties,editor,or,a,props,element,in,xml,bean,definitions,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,jpa,properties,properties,jpa,properties,collection,utils,merge,properties,into,map,jpa,properties,this,jpa,property,map
EntityManagerFactoryAccessor -> public void setJpaProperties(Properties jpaProperties);1467730834;Specify JPA properties, to be passed into_{@code EntityManagerFactory.createEntityManager(Map)} (if any)._<p>Can be populated with a String "value" (parsed via PropertiesEditor)_or a "props" element in XML bean definitions._@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setJpaProperties(Properties jpaProperties) {_		CollectionUtils.mergePropertiesIntoMap(jpaProperties, this.jpaPropertyMap)__	};specify,jpa,properties,to,be,passed,into,code,entity,manager,factory,create,entity,manager,map,if,any,p,can,be,populated,with,a,string,value,parsed,via,properties,editor,or,a,props,element,in,xml,bean,definitions,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,jpa,properties,properties,jpa,properties,collection,utils,merge,properties,into,map,jpa,properties,this,jpa,property,map
EntityManagerFactoryAccessor -> public void setJpaProperties(Properties jpaProperties);1495868221;Specify JPA properties, to be passed into_{@code EntityManagerFactory.createEntityManager(Map)} (if any)._<p>Can be populated with a String "value" (parsed via PropertiesEditor)_or a "props" element in XML bean definitions._@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setJpaProperties(Properties jpaProperties) {_		CollectionUtils.mergePropertiesIntoMap(jpaProperties, this.jpaPropertyMap)__	};specify,jpa,properties,to,be,passed,into,code,entity,manager,factory,create,entity,manager,map,if,any,p,can,be,populated,with,a,string,value,parsed,via,properties,editor,or,a,props,element,in,xml,bean,definitions,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,jpa,properties,properties,jpa,properties,collection,utils,merge,properties,into,map,jpa,properties,this,jpa,property,map
EntityManagerFactoryAccessor -> public void setJpaProperties(Properties jpaProperties);1496837955;Specify JPA properties, to be passed into_{@code EntityManagerFactory.createEntityManager(Map)} (if any)._<p>Can be populated with a String "value" (parsed via PropertiesEditor)_or a "props" element in XML bean definitions._@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setJpaProperties(Properties jpaProperties) {_		CollectionUtils.mergePropertiesIntoMap(jpaProperties, this.jpaPropertyMap)__	};specify,jpa,properties,to,be,passed,into,code,entity,manager,factory,create,entity,manager,map,if,any,p,can,be,populated,with,a,string,value,parsed,via,properties,editor,or,a,props,element,in,xml,bean,definitions,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,jpa,properties,properties,jpa,properties,collection,utils,merge,properties,into,map,jpa,properties,this,jpa,property,map
EntityManagerFactoryAccessor -> public void setJpaProperties(Properties jpaProperties);1500448076;Specify JPA properties, to be passed into_{@code EntityManagerFactory.createEntityManager(Map)} (if any)._<p>Can be populated with a String "value" (parsed via PropertiesEditor)_or a "props" element in XML bean definitions._@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setJpaProperties(Properties jpaProperties) {_		CollectionUtils.mergePropertiesIntoMap(jpaProperties, this.jpaPropertyMap)__	};specify,jpa,properties,to,be,passed,into,code,entity,manager,factory,create,entity,manager,map,if,any,p,can,be,populated,with,a,string,value,parsed,via,properties,editor,or,a,props,element,in,xml,bean,definitions,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,jpa,properties,properties,jpa,properties,collection,utils,merge,properties,into,map,jpa,properties,this,jpa,property,map
EntityManagerFactoryAccessor -> public void setJpaProperties(Properties jpaProperties);1530174524;Specify JPA properties, to be passed into_{@code EntityManagerFactory.createEntityManager(Map)} (if any)._<p>Can be populated with a String "value" (parsed via PropertiesEditor)_or a "props" element in XML bean definitions._@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setJpaProperties(Properties jpaProperties) {_		CollectionUtils.mergePropertiesIntoMap(jpaProperties, this.jpaPropertyMap)__	};specify,jpa,properties,to,be,passed,into,code,entity,manager,factory,create,entity,manager,map,if,any,p,can,be,populated,with,a,string,value,parsed,via,properties,editor,or,a,props,element,in,xml,bean,definitions,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,jpa,properties,properties,jpa,properties,collection,utils,merge,properties,into,map,jpa,properties,this,jpa,property,map
EntityManagerFactoryAccessor -> public void setPersistenceUnitName(@Nullable String persistenceUnitName);1500448076;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by direct reference,_resolving it by its persistence unit name instead. If no EntityManagerFactory and_no persistence unit name have been specified, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactory;public void setPersistenceUnitName(@Nullable String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,direct,reference,resolving,it,by,its,persistence,unit,name,instead,if,no,entity,manager,factory,and,no,persistence,unit,name,have,been,specified,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory;public,void,set,persistence,unit,name,nullable,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
EntityManagerFactoryAccessor -> public void setPersistenceUnitName(@Nullable String persistenceUnitName);1530174524;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by direct reference,_resolving it by its persistence unit name instead. If no EntityManagerFactory and_no persistence unit name have been specified, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactory;public void setPersistenceUnitName(@Nullable String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,direct,reference,resolving,it,by,its,persistence,unit,name,instead,if,no,entity,manager,factory,and,no,persistence,unit,name,have,been,specified,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory;public,void,set,persistence,unit,name,nullable,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
EntityManagerFactoryAccessor -> public void setJpaPropertyMap(@Nullable Map<String, Object> jpaProperties);1495868221;Specify JPA properties as a Map, to be passed into_{@code EntityManagerFactory.createEntityManager(Map)} (if any)._<p>Can be populated with a "map" or "props" element in XML bean definitions._@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setJpaPropertyMap(@Nullable Map<String, Object> jpaProperties) {_		if (jpaProperties != null) {_			this.jpaPropertyMap.putAll(jpaProperties)__		}_	};specify,jpa,properties,as,a,map,to,be,passed,into,code,entity,manager,factory,create,entity,manager,map,if,any,p,can,be,populated,with,a,map,or,props,element,in,xml,bean,definitions,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,jpa,property,map,nullable,map,string,object,jpa,properties,if,jpa,properties,null,this,jpa,property,map,put,all,jpa,properties
EntityManagerFactoryAccessor -> public void setJpaPropertyMap(@Nullable Map<String, Object> jpaProperties);1496837955;Specify JPA properties as a Map, to be passed into_{@code EntityManagerFactory.createEntityManager(Map)} (if any)._<p>Can be populated with a "map" or "props" element in XML bean definitions._@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setJpaPropertyMap(@Nullable Map<String, Object> jpaProperties) {_		if (jpaProperties != null) {_			this.jpaPropertyMap.putAll(jpaProperties)__		}_	};specify,jpa,properties,as,a,map,to,be,passed,into,code,entity,manager,factory,create,entity,manager,map,if,any,p,can,be,populated,with,a,map,or,props,element,in,xml,bean,definitions,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,jpa,property,map,nullable,map,string,object,jpa,properties,if,jpa,properties,null,this,jpa,property,map,put,all,jpa,properties
EntityManagerFactoryAccessor -> public void setJpaPropertyMap(@Nullable Map<String, Object> jpaProperties);1500448076;Specify JPA properties as a Map, to be passed into_{@code EntityManagerFactory.createEntityManager(Map)} (if any)._<p>Can be populated with a "map" or "props" element in XML bean definitions._@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setJpaPropertyMap(@Nullable Map<String, Object> jpaProperties) {_		if (jpaProperties != null) {_			this.jpaPropertyMap.putAll(jpaProperties)__		}_	};specify,jpa,properties,as,a,map,to,be,passed,into,code,entity,manager,factory,create,entity,manager,map,if,any,p,can,be,populated,with,a,map,or,props,element,in,xml,bean,definitions,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,jpa,property,map,nullable,map,string,object,jpa,properties,if,jpa,properties,null,this,jpa,property,map,put,all,jpa,properties
EntityManagerFactoryAccessor -> public void setJpaPropertyMap(@Nullable Map<String, Object> jpaProperties);1530174524;Specify JPA properties as a Map, to be passed into_{@code EntityManagerFactory.createEntityManager(Map)} (if any)._<p>Can be populated with a "map" or "props" element in XML bean definitions._@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setJpaPropertyMap(@Nullable Map<String, Object> jpaProperties) {_		if (jpaProperties != null) {_			this.jpaPropertyMap.putAll(jpaProperties)__		}_	};specify,jpa,properties,as,a,map,to,be,passed,into,code,entity,manager,factory,create,entity,manager,map,if,any,p,can,be,populated,with,a,map,or,props,element,in,xml,bean,definitions,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,jpa,property,map,nullable,map,string,object,jpa,properties,if,jpa,properties,null,this,jpa,property,map,put,all,jpa,properties
EntityManagerFactoryAccessor -> public void setEntityManagerFactory(@Nullable EntityManagerFactory emf);1500448076;Set the JPA EntityManagerFactory that should be used to create_EntityManagers._@see javax.persistence.EntityManagerFactory#createEntityManager()_@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setEntityManagerFactory(@Nullable EntityManagerFactory emf) {_		this.entityManagerFactory = emf__	};set,the,jpa,entity,manager,factory,that,should,be,used,to,create,entity,managers,see,javax,persistence,entity,manager,factory,create,entity,manager,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,entity,manager,factory,nullable,entity,manager,factory,emf,this,entity,manager,factory,emf
EntityManagerFactoryAccessor -> public void setEntityManagerFactory(@Nullable EntityManagerFactory emf);1530174524;Set the JPA EntityManagerFactory that should be used to create_EntityManagers._@see javax.persistence.EntityManagerFactory#createEntityManager()_@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setEntityManagerFactory(@Nullable EntityManagerFactory emf) {_		this.entityManagerFactory = emf__	};set,the,jpa,entity,manager,factory,that,should,be,used,to,create,entity,managers,see,javax,persistence,entity,manager,factory,create,entity,manager,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,entity,manager,factory,nullable,entity,manager,factory,emf,this,entity,manager,factory,emf
EntityManagerFactoryAccessor -> public Map<String, Object> getJpaPropertyMap();1328020251;Allow Map access to the JPA properties to be passed to the persistence_provider, with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via "jpaPropertyMap[myKey]".;public Map<String, Object> getJpaPropertyMap() {_		return this.jpaPropertyMap__	};allow,map,access,to,the,jpa,properties,to,be,passed,to,the,persistence,provider,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,jpa,property,map,my,key;public,map,string,object,get,jpa,property,map,return,this,jpa,property,map
EntityManagerFactoryAccessor -> public Map<String, Object> getJpaPropertyMap();1356735495;Allow Map access to the JPA properties to be passed to the persistence_provider, with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via "jpaPropertyMap[myKey]".;public Map<String, Object> getJpaPropertyMap() {_		return this.jpaPropertyMap__	};allow,map,access,to,the,jpa,properties,to,be,passed,to,the,persistence,provider,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,jpa,property,map,my,key;public,map,string,object,get,jpa,property,map,return,this,jpa,property,map
EntityManagerFactoryAccessor -> public Map<String, Object> getJpaPropertyMap();1357119239;Allow Map access to the JPA properties to be passed to the persistence_provider, with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via "jpaPropertyMap[myKey]".;public Map<String, Object> getJpaPropertyMap() {_		return this.jpaPropertyMap__	};allow,map,access,to,the,jpa,properties,to,be,passed,to,the,persistence,provider,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,jpa,property,map,my,key;public,map,string,object,get,jpa,property,map,return,this,jpa,property,map
EntityManagerFactoryAccessor -> public Map<String, Object> getJpaPropertyMap();1364559513;Allow Map access to the JPA properties to be passed to the persistence_provider, with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via "jpaPropertyMap[myKey]".;public Map<String, Object> getJpaPropertyMap() {_		return this.jpaPropertyMap__	};allow,map,access,to,the,jpa,properties,to,be,passed,to,the,persistence,provider,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,jpa,property,map,my,key;public,map,string,object,get,jpa,property,map,return,this,jpa,property,map
EntityManagerFactoryAccessor -> public Map<String, Object> getJpaPropertyMap();1368482696;Allow Map access to the JPA properties to be passed to the persistence_provider, with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via "jpaPropertyMap[myKey]".;public Map<String, Object> getJpaPropertyMap() {_		return this.jpaPropertyMap__	};allow,map,access,to,the,jpa,properties,to,be,passed,to,the,persistence,provider,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,jpa,property,map,my,key;public,map,string,object,get,jpa,property,map,return,this,jpa,property,map
EntityManagerFactoryAccessor -> public Map<String, Object> getJpaPropertyMap();1414678671;Allow Map access to the JPA properties to be passed to the persistence_provider, with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via "jpaPropertyMap[myKey]".;public Map<String, Object> getJpaPropertyMap() {_		return this.jpaPropertyMap__	};allow,map,access,to,the,jpa,properties,to,be,passed,to,the,persistence,provider,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,jpa,property,map,my,key;public,map,string,object,get,jpa,property,map,return,this,jpa,property,map
EntityManagerFactoryAccessor -> public Map<String, Object> getJpaPropertyMap();1467730834;Allow Map access to the JPA properties to be passed to the persistence_provider, with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via "jpaPropertyMap[myKey]".;public Map<String, Object> getJpaPropertyMap() {_		return this.jpaPropertyMap__	};allow,map,access,to,the,jpa,properties,to,be,passed,to,the,persistence,provider,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,jpa,property,map,my,key;public,map,string,object,get,jpa,property,map,return,this,jpa,property,map
EntityManagerFactoryAccessor -> public Map<String, Object> getJpaPropertyMap();1495868221;Allow Map access to the JPA properties to be passed to the persistence_provider, with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via "jpaPropertyMap[myKey]".;public Map<String, Object> getJpaPropertyMap() {_		return this.jpaPropertyMap__	};allow,map,access,to,the,jpa,properties,to,be,passed,to,the,persistence,provider,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,jpa,property,map,my,key;public,map,string,object,get,jpa,property,map,return,this,jpa,property,map
EntityManagerFactoryAccessor -> public Map<String, Object> getJpaPropertyMap();1496837955;Allow Map access to the JPA properties to be passed to the persistence_provider, with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via "jpaPropertyMap[myKey]".;public Map<String, Object> getJpaPropertyMap() {_		return this.jpaPropertyMap__	};allow,map,access,to,the,jpa,properties,to,be,passed,to,the,persistence,provider,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,jpa,property,map,my,key;public,map,string,object,get,jpa,property,map,return,this,jpa,property,map
EntityManagerFactoryAccessor -> public Map<String, Object> getJpaPropertyMap();1500448076;Allow Map access to the JPA properties to be passed to the persistence_provider, with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via "jpaPropertyMap[myKey]".;public Map<String, Object> getJpaPropertyMap() {_		return this.jpaPropertyMap__	};allow,map,access,to,the,jpa,properties,to,be,passed,to,the,persistence,provider,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,jpa,property,map,my,key;public,map,string,object,get,jpa,property,map,return,this,jpa,property,map
EntityManagerFactoryAccessor -> public Map<String, Object> getJpaPropertyMap();1530174524;Allow Map access to the JPA properties to be passed to the persistence_provider, with the option to add or override specific entries._<p>Useful for specifying entries directly, for example via "jpaPropertyMap[myKey]".;public Map<String, Object> getJpaPropertyMap() {_		return this.jpaPropertyMap__	};allow,map,access,to,the,jpa,properties,to,be,passed,to,the,persistence,provider,with,the,option,to,add,or,override,specific,entries,p,useful,for,specifying,entries,directly,for,example,via,jpa,property,map,my,key;public,map,string,object,get,jpa,property,map,return,this,jpa,property,map
EntityManagerFactoryAccessor -> public void setEntityManagerFactory(EntityManagerFactory emf);1328020251;Set the JPA EntityManagerFactory that should be used to create_EntityManagers._@see javax.persistence.EntityManagerFactory#createEntityManager()_@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setEntityManagerFactory(EntityManagerFactory emf) {_		this.entityManagerFactory = emf__	};set,the,jpa,entity,manager,factory,that,should,be,used,to,create,entity,managers,see,javax,persistence,entity,manager,factory,create,entity,manager,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,entity,manager,factory,entity,manager,factory,emf,this,entity,manager,factory,emf
EntityManagerFactoryAccessor -> public void setEntityManagerFactory(EntityManagerFactory emf);1356735495;Set the JPA EntityManagerFactory that should be used to create_EntityManagers._@see javax.persistence.EntityManagerFactory#createEntityManager()_@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setEntityManagerFactory(EntityManagerFactory emf) {_		this.entityManagerFactory = emf__	};set,the,jpa,entity,manager,factory,that,should,be,used,to,create,entity,managers,see,javax,persistence,entity,manager,factory,create,entity,manager,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,entity,manager,factory,entity,manager,factory,emf,this,entity,manager,factory,emf
EntityManagerFactoryAccessor -> public void setEntityManagerFactory(EntityManagerFactory emf);1357119239;Set the JPA EntityManagerFactory that should be used to create_EntityManagers._@see javax.persistence.EntityManagerFactory#createEntityManager()_@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setEntityManagerFactory(EntityManagerFactory emf) {_		this.entityManagerFactory = emf__	};set,the,jpa,entity,manager,factory,that,should,be,used,to,create,entity,managers,see,javax,persistence,entity,manager,factory,create,entity,manager,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,entity,manager,factory,entity,manager,factory,emf,this,entity,manager,factory,emf
EntityManagerFactoryAccessor -> public void setEntityManagerFactory(EntityManagerFactory emf);1364559513;Set the JPA EntityManagerFactory that should be used to create_EntityManagers._@see javax.persistence.EntityManagerFactory#createEntityManager()_@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setEntityManagerFactory(EntityManagerFactory emf) {_		this.entityManagerFactory = emf__	};set,the,jpa,entity,manager,factory,that,should,be,used,to,create,entity,managers,see,javax,persistence,entity,manager,factory,create,entity,manager,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,entity,manager,factory,entity,manager,factory,emf,this,entity,manager,factory,emf
EntityManagerFactoryAccessor -> public void setEntityManagerFactory(EntityManagerFactory emf);1368482696;Set the JPA EntityManagerFactory that should be used to create_EntityManagers._@see javax.persistence.EntityManagerFactory#createEntityManager()_@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setEntityManagerFactory(EntityManagerFactory emf) {_		this.entityManagerFactory = emf__	};set,the,jpa,entity,manager,factory,that,should,be,used,to,create,entity,managers,see,javax,persistence,entity,manager,factory,create,entity,manager,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,entity,manager,factory,entity,manager,factory,emf,this,entity,manager,factory,emf
EntityManagerFactoryAccessor -> public void setEntityManagerFactory(EntityManagerFactory emf);1414678671;Set the JPA EntityManagerFactory that should be used to create_EntityManagers._@see javax.persistence.EntityManagerFactory#createEntityManager()_@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setEntityManagerFactory(EntityManagerFactory emf) {_		this.entityManagerFactory = emf__	};set,the,jpa,entity,manager,factory,that,should,be,used,to,create,entity,managers,see,javax,persistence,entity,manager,factory,create,entity,manager,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,entity,manager,factory,entity,manager,factory,emf,this,entity,manager,factory,emf
EntityManagerFactoryAccessor -> public void setEntityManagerFactory(EntityManagerFactory emf);1467730834;Set the JPA EntityManagerFactory that should be used to create_EntityManagers._@see javax.persistence.EntityManagerFactory#createEntityManager()_@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setEntityManagerFactory(EntityManagerFactory emf) {_		this.entityManagerFactory = emf__	};set,the,jpa,entity,manager,factory,that,should,be,used,to,create,entity,managers,see,javax,persistence,entity,manager,factory,create,entity,manager,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,entity,manager,factory,entity,manager,factory,emf,this,entity,manager,factory,emf
EntityManagerFactoryAccessor -> public void setEntityManagerFactory(EntityManagerFactory emf);1495868221;Set the JPA EntityManagerFactory that should be used to create_EntityManagers._@see javax.persistence.EntityManagerFactory#createEntityManager()_@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setEntityManagerFactory(EntityManagerFactory emf) {_		this.entityManagerFactory = emf__	};set,the,jpa,entity,manager,factory,that,should,be,used,to,create,entity,managers,see,javax,persistence,entity,manager,factory,create,entity,manager,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,entity,manager,factory,entity,manager,factory,emf,this,entity,manager,factory,emf
EntityManagerFactoryAccessor -> public void setEntityManagerFactory(EntityManagerFactory emf);1496837955;Set the JPA EntityManagerFactory that should be used to create_EntityManagers._@see javax.persistence.EntityManagerFactory#createEntityManager()_@see javax.persistence.EntityManagerFactory#createEntityManager(java.util.Map);public void setEntityManagerFactory(EntityManagerFactory emf) {_		this.entityManagerFactory = emf__	};set,the,jpa,entity,manager,factory,that,should,be,used,to,create,entity,managers,see,javax,persistence,entity,manager,factory,create,entity,manager,see,javax,persistence,entity,manager,factory,create,entity,manager,java,util,map;public,void,set,entity,manager,factory,entity,manager,factory,emf,this,entity,manager,factory,emf
EntityManagerFactoryAccessor -> public void setPersistenceUnitName(String persistenceUnitName);1328020251;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by direct reference,_resolving it by its persistence unit name instead. If no EntityManagerFactory and_no persistence unit name have been specified, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactory;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,direct,reference,resolving,it,by,its,persistence,unit,name,instead,if,no,entity,manager,factory,and,no,persistence,unit,name,have,been,specified,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
EntityManagerFactoryAccessor -> public void setPersistenceUnitName(String persistenceUnitName);1356735495;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by direct reference,_resolving it by its persistence unit name instead. If no EntityManagerFactory and_no persistence unit name have been specified, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactory;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,direct,reference,resolving,it,by,its,persistence,unit,name,instead,if,no,entity,manager,factory,and,no,persistence,unit,name,have,been,specified,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
EntityManagerFactoryAccessor -> public void setPersistenceUnitName(String persistenceUnitName);1357119239;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by direct reference,_resolving it by its persistence unit name instead. If no EntityManagerFactory and_no persistence unit name have been specified, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactory;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,direct,reference,resolving,it,by,its,persistence,unit,name,instead,if,no,entity,manager,factory,and,no,persistence,unit,name,have,been,specified,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
EntityManagerFactoryAccessor -> public void setPersistenceUnitName(String persistenceUnitName);1364559513;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by direct reference,_resolving it by its persistence unit name instead. If no EntityManagerFactory and_no persistence unit name have been specified, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactory;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,direct,reference,resolving,it,by,its,persistence,unit,name,instead,if,no,entity,manager,factory,and,no,persistence,unit,name,have,been,specified,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
EntityManagerFactoryAccessor -> public void setPersistenceUnitName(String persistenceUnitName);1368482696;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by direct reference,_resolving it by its persistence unit name instead. If no EntityManagerFactory and_no persistence unit name have been specified, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactory;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,direct,reference,resolving,it,by,its,persistence,unit,name,instead,if,no,entity,manager,factory,and,no,persistence,unit,name,have,been,specified,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
EntityManagerFactoryAccessor -> public void setPersistenceUnitName(String persistenceUnitName);1414678671;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by direct reference,_resolving it by its persistence unit name instead. If no EntityManagerFactory and_no persistence unit name have been specified, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactory;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,direct,reference,resolving,it,by,its,persistence,unit,name,instead,if,no,entity,manager,factory,and,no,persistence,unit,name,have,been,specified,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
EntityManagerFactoryAccessor -> public void setPersistenceUnitName(String persistenceUnitName);1467730834;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by direct reference,_resolving it by its persistence unit name instead. If no EntityManagerFactory and_no persistence unit name have been specified, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactory;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,direct,reference,resolving,it,by,its,persistence,unit,name,instead,if,no,entity,manager,factory,and,no,persistence,unit,name,have,been,specified,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
EntityManagerFactoryAccessor -> public void setPersistenceUnitName(String persistenceUnitName);1495868221;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by direct reference,_resolving it by its persistence unit name instead. If no EntityManagerFactory and_no persistence unit name have been specified, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactory;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,direct,reference,resolving,it,by,its,persistence,unit,name,instead,if,no,entity,manager,factory,and,no,persistence,unit,name,have,been,specified,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
EntityManagerFactoryAccessor -> public void setPersistenceUnitName(String persistenceUnitName);1496837955;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by direct reference,_resolving it by its persistence unit name instead. If no EntityManagerFactory and_no persistence unit name have been specified, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactory;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,direct,reference,resolving,it,by,its,persistence,unit,name,instead,if,no,entity,manager,factory,and,no,persistence,unit,name,have,been,specified,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
