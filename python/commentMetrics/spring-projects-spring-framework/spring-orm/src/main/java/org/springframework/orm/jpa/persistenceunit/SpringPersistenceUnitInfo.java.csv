# id;timestamp;commentText;codeText;commentWords;codeWords
SpringPersistenceUnitInfo -> public void init(ClassLoader classLoader);1328020251;Initialize this PersistenceUnitInfo with the current class loader_(instead of with a LoadTimeWeaver).;public void init(ClassLoader classLoader) {_		Assert.notNull(classLoader, "ClassLoader must not be null")__		this.classLoader = classLoader__	};initialize,this,persistence,unit,info,with,the,current,class,loader,instead,of,with,a,load,time,weaver;public,void,init,class,loader,class,loader,assert,not,null,class,loader,class,loader,must,not,be,null,this,class,loader,class,loader
SpringPersistenceUnitInfo -> public void init(ClassLoader classLoader);1363714444;Initialize this PersistenceUnitInfo with the current class loader_(instead of with a LoadTimeWeaver).;public void init(ClassLoader classLoader) {_		Assert.notNull(classLoader, "ClassLoader must not be null")__		this.classLoader = classLoader__	};initialize,this,persistence,unit,info,with,the,current,class,loader,instead,of,with,a,load,time,weaver;public,void,init,class,loader,class,loader,assert,not,null,class,loader,class,loader,must,not,be,null,this,class,loader,class,loader
SpringPersistenceUnitInfo -> public void init(LoadTimeWeaver loadTimeWeaver);1328020251;Initialize this PersistenceUnitInfo with the LoadTimeWeaver SPI interface_used by Spring to add instrumentation to the current class loader.;public void init(LoadTimeWeaver loadTimeWeaver) {_		Assert.notNull(loadTimeWeaver, "LoadTimeWeaver must not be null")__		this.loadTimeWeaver = loadTimeWeaver__		this.classLoader = loadTimeWeaver.getInstrumentableClassLoader()__	};initialize,this,persistence,unit,info,with,the,load,time,weaver,spi,interface,used,by,spring,to,add,instrumentation,to,the,current,class,loader;public,void,init,load,time,weaver,load,time,weaver,assert,not,null,load,time,weaver,load,time,weaver,must,not,be,null,this,load,time,weaver,load,time,weaver,this,class,loader,load,time,weaver,get,instrumentable,class,loader
SpringPersistenceUnitInfo -> public void init(LoadTimeWeaver loadTimeWeaver);1363714444;Initialize this PersistenceUnitInfo with the LoadTimeWeaver SPI interface_used by Spring to add instrumentation to the current class loader.;public void init(LoadTimeWeaver loadTimeWeaver) {_		Assert.notNull(loadTimeWeaver, "LoadTimeWeaver must not be null")__		this.loadTimeWeaver = loadTimeWeaver__		this.classLoader = loadTimeWeaver.getInstrumentableClassLoader()__	};initialize,this,persistence,unit,info,with,the,load,time,weaver,spi,interface,used,by,spring,to,add,instrumentation,to,the,current,class,loader;public,void,init,load,time,weaver,load,time,weaver,assert,not,null,load,time,weaver,load,time,weaver,must,not,be,null,this,load,time,weaver,load,time,weaver,this,class,loader,load,time,weaver,get,instrumentable,class,loader
SpringPersistenceUnitInfo -> public void init(LoadTimeWeaver loadTimeWeaver);1496837955;Initialize this PersistenceUnitInfo with the LoadTimeWeaver SPI interface_used by Spring to add instrumentation to the current class loader.;public void init(LoadTimeWeaver loadTimeWeaver) {_		Assert.notNull(loadTimeWeaver, "LoadTimeWeaver must not be null")__		this.loadTimeWeaver = loadTimeWeaver__		this.classLoader = loadTimeWeaver.getInstrumentableClassLoader()__	};initialize,this,persistence,unit,info,with,the,load,time,weaver,spi,interface,used,by,spring,to,add,instrumentation,to,the,current,class,loader;public,void,init,load,time,weaver,load,time,weaver,assert,not,null,load,time,weaver,load,time,weaver,must,not,be,null,this,load,time,weaver,load,time,weaver,this,class,loader,load,time,weaver,get,instrumentable,class,loader
SpringPersistenceUnitInfo -> public void init(LoadTimeWeaver loadTimeWeaver);1498780456;Initialize this PersistenceUnitInfo with the LoadTimeWeaver SPI interface_used by Spring to add instrumentation to the current class loader.;public void init(LoadTimeWeaver loadTimeWeaver) {_		Assert.notNull(loadTimeWeaver, "LoadTimeWeaver must not be null")__		this.loadTimeWeaver = loadTimeWeaver__		this.classLoader = loadTimeWeaver.getInstrumentableClassLoader()__	};initialize,this,persistence,unit,info,with,the,load,time,weaver,spi,interface,used,by,spring,to,add,instrumentation,to,the,current,class,loader;public,void,init,load,time,weaver,load,time,weaver,assert,not,null,load,time,weaver,load,time,weaver,must,not,be,null,this,load,time,weaver,load,time,weaver,this,class,loader,load,time,weaver,get,instrumentable,class,loader
SpringPersistenceUnitInfo -> public void init(LoadTimeWeaver loadTimeWeaver);1500495740;Initialize this PersistenceUnitInfo with the LoadTimeWeaver SPI interface_used by Spring to add instrumentation to the current class loader.;public void init(LoadTimeWeaver loadTimeWeaver) {_		Assert.notNull(loadTimeWeaver, "LoadTimeWeaver must not be null")__		this.loadTimeWeaver = loadTimeWeaver__		this.classLoader = loadTimeWeaver.getInstrumentableClassLoader()__	};initialize,this,persistence,unit,info,with,the,load,time,weaver,spi,interface,used,by,spring,to,add,instrumentation,to,the,current,class,loader;public,void,init,load,time,weaver,load,time,weaver,assert,not,null,load,time,weaver,load,time,weaver,must,not,be,null,this,load,time,weaver,load,time,weaver,this,class,loader,load,time,weaver,get,instrumentable,class,loader
SpringPersistenceUnitInfo -> @Override 	public void addTransformer(ClassTransformer classTransformer);1328020251;This implementation delegates to the LoadTimeWeaver, if specified.;@Override_	public void addTransformer(ClassTransformer classTransformer) {_		if (this.loadTimeWeaver == null) {_			throw new IllegalStateException("Cannot apply class transformer without LoadTimeWeaver specified")__		}_		this.loadTimeWeaver.addTransformer(new ClassFileTransformerAdapter(classTransformer))__	};this,implementation,delegates,to,the,load,time,weaver,if,specified;override,public,void,add,transformer,class,transformer,class,transformer,if,this,load,time,weaver,null,throw,new,illegal,state,exception,cannot,apply,class,transformer,without,load,time,weaver,specified,this,load,time,weaver,add,transformer,new,class,file,transformer,adapter,class,transformer
SpringPersistenceUnitInfo -> @Override 	public void addTransformer(ClassTransformer classTransformer);1363714444;This implementation delegates to the LoadTimeWeaver, if specified.;@Override_	public void addTransformer(ClassTransformer classTransformer) {_		if (this.loadTimeWeaver == null) {_			throw new IllegalStateException("Cannot apply class transformer without LoadTimeWeaver specified")__		}_		this.loadTimeWeaver.addTransformer(new ClassFileTransformerAdapter(classTransformer))__	};this,implementation,delegates,to,the,load,time,weaver,if,specified;override,public,void,add,transformer,class,transformer,class,transformer,if,this,load,time,weaver,null,throw,new,illegal,state,exception,cannot,apply,class,transformer,without,load,time,weaver,specified,this,load,time,weaver,add,transformer,new,class,file,transformer,adapter,class,transformer
SpringPersistenceUnitInfo -> @Override 	public void addTransformer(ClassTransformer classTransformer);1496837955;This implementation delegates to the LoadTimeWeaver, if specified.;@Override_	public void addTransformer(ClassTransformer classTransformer) {_		if (this.loadTimeWeaver == null) {_			throw new IllegalStateException("Cannot apply class transformer without LoadTimeWeaver specified")__		}_		this.loadTimeWeaver.addTransformer(new ClassFileTransformerAdapter(classTransformer))__	};this,implementation,delegates,to,the,load,time,weaver,if,specified;override,public,void,add,transformer,class,transformer,class,transformer,if,this,load,time,weaver,null,throw,new,illegal,state,exception,cannot,apply,class,transformer,without,load,time,weaver,specified,this,load,time,weaver,add,transformer,new,class,file,transformer,adapter,class,transformer
SpringPersistenceUnitInfo -> @Override 	public void addTransformer(ClassTransformer classTransformer);1498780456;This implementation delegates to the LoadTimeWeaver, if specified.;@Override_	public void addTransformer(ClassTransformer classTransformer) {_		if (this.loadTimeWeaver == null) {_			throw new IllegalStateException("Cannot apply class transformer without LoadTimeWeaver specified")__		}_		this.loadTimeWeaver.addTransformer(new ClassFileTransformerAdapter(classTransformer))__	};this,implementation,delegates,to,the,load,time,weaver,if,specified;override,public,void,add,transformer,class,transformer,class,transformer,if,this,load,time,weaver,null,throw,new,illegal,state,exception,cannot,apply,class,transformer,without,load,time,weaver,specified,this,load,time,weaver,add,transformer,new,class,file,transformer,adapter,class,transformer
SpringPersistenceUnitInfo -> @Override 	public void addTransformer(ClassTransformer classTransformer);1500495740;This implementation delegates to the LoadTimeWeaver, if specified.;@Override_	public void addTransformer(ClassTransformer classTransformer) {_		if (this.loadTimeWeaver == null) {_			throw new IllegalStateException("Cannot apply class transformer without LoadTimeWeaver specified")__		}_		this.loadTimeWeaver.addTransformer(new ClassFileTransformerAdapter(classTransformer))__	};this,implementation,delegates,to,the,load,time,weaver,if,specified;override,public,void,add,transformer,class,transformer,class,transformer,if,this,load,time,weaver,null,throw,new,illegal,state,exception,cannot,apply,class,transformer,without,load,time,weaver,specified,this,load,time,weaver,add,transformer,new,class,file,transformer,adapter,class,transformer
SpringPersistenceUnitInfo -> public void init(@Nullable ClassLoader classLoader);1496837955;Initialize this PersistenceUnitInfo with the current class loader_(instead of with a LoadTimeWeaver).;public void init(@Nullable ClassLoader classLoader) {_		this.classLoader = classLoader__	};initialize,this,persistence,unit,info,with,the,current,class,loader,instead,of,with,a,load,time,weaver;public,void,init,nullable,class,loader,class,loader,this,class,loader,class,loader
SpringPersistenceUnitInfo -> public void init(@Nullable ClassLoader classLoader);1498780456;Initialize this PersistenceUnitInfo with the current class loader_(instead of with a LoadTimeWeaver).;public void init(@Nullable ClassLoader classLoader) {_		this.classLoader = classLoader__	};initialize,this,persistence,unit,info,with,the,current,class,loader,instead,of,with,a,load,time,weaver;public,void,init,nullable,class,loader,class,loader,this,class,loader,class,loader
SpringPersistenceUnitInfo -> public void init(@Nullable ClassLoader classLoader);1500495740;Initialize this PersistenceUnitInfo with the current class loader_(instead of with a LoadTimeWeaver).;public void init(@Nullable ClassLoader classLoader) {_		this.classLoader = classLoader__	};initialize,this,persistence,unit,info,with,the,current,class,loader,instead,of,with,a,load,time,weaver;public,void,init,nullable,class,loader,class,loader,this,class,loader,class,loader
SpringPersistenceUnitInfo -> @Override 	public ClassLoader getClassLoader();1328020251;This implementation returns the LoadTimeWeaver's instrumentable ClassLoader,_if specified.;@Override_	public ClassLoader getClassLoader() {_		return this.classLoader__	};this,implementation,returns,the,load,time,weaver,s,instrumentable,class,loader,if,specified;override,public,class,loader,get,class,loader,return,this,class,loader
SpringPersistenceUnitInfo -> @Override 	public ClassLoader getClassLoader();1363714444;This implementation returns the LoadTimeWeaver's instrumentable ClassLoader,_if specified.;@Override_	public ClassLoader getClassLoader() {_		return this.classLoader__	};this,implementation,returns,the,load,time,weaver,s,instrumentable,class,loader,if,specified;override,public,class,loader,get,class,loader,return,this,class,loader
SpringPersistenceUnitInfo -> @Override 	public ClassLoader getClassLoader();1496837955;This implementation returns the LoadTimeWeaver's instrumentable ClassLoader,_if specified.;@Override_	public ClassLoader getClassLoader() {_		return this.classLoader__	};this,implementation,returns,the,load,time,weaver,s,instrumentable,class,loader,if,specified;override,public,class,loader,get,class,loader,return,this,class,loader
SpringPersistenceUnitInfo -> @Override 	public ClassLoader getClassLoader();1498780456;This implementation returns the LoadTimeWeaver's instrumentable ClassLoader,_if specified.;@Override_	public ClassLoader getClassLoader() {_		return this.classLoader__	};this,implementation,returns,the,load,time,weaver,s,instrumentable,class,loader,if,specified;override,public,class,loader,get,class,loader,return,this,class,loader
SpringPersistenceUnitInfo -> @Override 	public ClassLoader getNewTempClassLoader();1328020251;This implementation delegates to the LoadTimeWeaver, if specified.;@Override_	public ClassLoader getNewTempClassLoader() {_		ClassLoader tcl = (this.loadTimeWeaver != null ? this.loadTimeWeaver.getThrowawayClassLoader() :_				new SimpleThrowawayClassLoader(this.classLoader))__		String packageToExclude = getPersistenceProviderPackageName()__		if (packageToExclude != null && tcl instanceof DecoratingClassLoader) {_			((DecoratingClassLoader) tcl).excludePackage(packageToExclude)__		}_		return tcl__	};this,implementation,delegates,to,the,load,time,weaver,if,specified;override,public,class,loader,get,new,temp,class,loader,class,loader,tcl,this,load,time,weaver,null,this,load,time,weaver,get,throwaway,class,loader,new,simple,throwaway,class,loader,this,class,loader,string,package,to,exclude,get,persistence,provider,package,name,if,package,to,exclude,null,tcl,instanceof,decorating,class,loader,decorating,class,loader,tcl,exclude,package,package,to,exclude,return,tcl
SpringPersistenceUnitInfo -> @Override 	public ClassLoader getNewTempClassLoader();1363714444;This implementation delegates to the LoadTimeWeaver, if specified.;@Override_	public ClassLoader getNewTempClassLoader() {_		ClassLoader tcl = (this.loadTimeWeaver != null ? this.loadTimeWeaver.getThrowawayClassLoader() :_				new SimpleThrowawayClassLoader(this.classLoader))__		String packageToExclude = getPersistenceProviderPackageName()__		if (packageToExclude != null && tcl instanceof DecoratingClassLoader) {_			((DecoratingClassLoader) tcl).excludePackage(packageToExclude)__		}_		return tcl__	};this,implementation,delegates,to,the,load,time,weaver,if,specified;override,public,class,loader,get,new,temp,class,loader,class,loader,tcl,this,load,time,weaver,null,this,load,time,weaver,get,throwaway,class,loader,new,simple,throwaway,class,loader,this,class,loader,string,package,to,exclude,get,persistence,provider,package,name,if,package,to,exclude,null,tcl,instanceof,decorating,class,loader,decorating,class,loader,tcl,exclude,package,package,to,exclude,return,tcl
SpringPersistenceUnitInfo -> @Override 	public ClassLoader getNewTempClassLoader();1496837955;This implementation delegates to the LoadTimeWeaver, if specified.;@Override_	public ClassLoader getNewTempClassLoader() {_		ClassLoader tcl = (this.loadTimeWeaver != null ? this.loadTimeWeaver.getThrowawayClassLoader() :_				new SimpleThrowawayClassLoader(this.classLoader))__		String packageToExclude = getPersistenceProviderPackageName()__		if (packageToExclude != null && tcl instanceof DecoratingClassLoader) {_			((DecoratingClassLoader) tcl).excludePackage(packageToExclude)__		}_		return tcl__	};this,implementation,delegates,to,the,load,time,weaver,if,specified;override,public,class,loader,get,new,temp,class,loader,class,loader,tcl,this,load,time,weaver,null,this,load,time,weaver,get,throwaway,class,loader,new,simple,throwaway,class,loader,this,class,loader,string,package,to,exclude,get,persistence,provider,package,name,if,package,to,exclude,null,tcl,instanceof,decorating,class,loader,decorating,class,loader,tcl,exclude,package,package,to,exclude,return,tcl
SpringPersistenceUnitInfo -> @Override 	public ClassLoader getNewTempClassLoader();1498780456;This implementation delegates to the LoadTimeWeaver, if specified.;@Override_	public ClassLoader getNewTempClassLoader() {_		ClassLoader tcl = (this.loadTimeWeaver != null ? this.loadTimeWeaver.getThrowawayClassLoader() :_				new SimpleThrowawayClassLoader(this.classLoader))__		String packageToExclude = getPersistenceProviderPackageName()__		if (packageToExclude != null && tcl instanceof DecoratingClassLoader) {_			((DecoratingClassLoader) tcl).excludePackage(packageToExclude)__		}_		return tcl__	};this,implementation,delegates,to,the,load,time,weaver,if,specified;override,public,class,loader,get,new,temp,class,loader,class,loader,tcl,this,load,time,weaver,null,this,load,time,weaver,get,throwaway,class,loader,new,simple,throwaway,class,loader,this,class,loader,string,package,to,exclude,get,persistence,provider,package,name,if,package,to,exclude,null,tcl,instanceof,decorating,class,loader,decorating,class,loader,tcl,exclude,package,package,to,exclude,return,tcl
SpringPersistenceUnitInfo -> @Override 	public ClassLoader getNewTempClassLoader();1500495740;This implementation delegates to the LoadTimeWeaver, if specified.;@Override_	public ClassLoader getNewTempClassLoader() {_		ClassLoader tcl = (this.loadTimeWeaver != null ? this.loadTimeWeaver.getThrowawayClassLoader() :_				new SimpleThrowawayClassLoader(this.classLoader))__		String packageToExclude = getPersistenceProviderPackageName()__		if (packageToExclude != null && tcl instanceof DecoratingClassLoader) {_			((DecoratingClassLoader) tcl).excludePackage(packageToExclude)__		}_		return tcl__	};this,implementation,delegates,to,the,load,time,weaver,if,specified;override,public,class,loader,get,new,temp,class,loader,class,loader,tcl,this,load,time,weaver,null,this,load,time,weaver,get,throwaway,class,loader,new,simple,throwaway,class,loader,this,class,loader,string,package,to,exclude,get,persistence,provider,package,name,if,package,to,exclude,null,tcl,instanceof,decorating,class,loader,decorating,class,loader,tcl,exclude,package,package,to,exclude,return,tcl
