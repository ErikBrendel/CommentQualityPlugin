# id;timestamp;commentText;codeText;commentWords;codeWords
HibernateExceptionTranslator -> protected DataAccessException convertHibernateAccessException(HibernateException ex);1467668243;Convert the given HibernateException to an appropriate exception from the_{@code org.springframework.dao} hierarchy._@param ex HibernateException that occured_@return a corresponding DataAccessException_@see SessionFactoryUtils#convertHibernateAccessException;protected DataAccessException convertHibernateAccessException(HibernateException ex) {_		return SessionFactoryUtils.convertHibernateAccessException(ex)__	};convert,the,given,hibernate,exception,to,an,appropriate,exception,from,the,code,org,springframework,dao,hierarchy,param,ex,hibernate,exception,that,occured,return,a,corresponding,data,access,exception,see,session,factory,utils,convert,hibernate,access,exception;protected,data,access,exception,convert,hibernate,access,exception,hibernate,exception,ex,return,session,factory,utils,convert,hibernate,access,exception,ex
HibernateExceptionTranslator -> protected DataAccessException convertHibernateAccessException(HibernateException ex);1467983536;Convert the given HibernateException to an appropriate exception from the_{@code org.springframework.dao} hierarchy._@param ex HibernateException that occurred_@return a corresponding DataAccessException_@see SessionFactoryUtils#convertHibernateAccessException;protected DataAccessException convertHibernateAccessException(HibernateException ex) {_		return SessionFactoryUtils.convertHibernateAccessException(ex)__	};convert,the,given,hibernate,exception,to,an,appropriate,exception,from,the,code,org,springframework,dao,hierarchy,param,ex,hibernate,exception,that,occurred,return,a,corresponding,data,access,exception,see,session,factory,utils,convert,hibernate,access,exception;protected,data,access,exception,convert,hibernate,access,exception,hibernate,exception,ex,return,session,factory,utils,convert,hibernate,access,exception,ex
HibernateExceptionTranslator -> protected DataAccessException convertHibernateAccessException(HibernateException ex);1468441478;Convert the given HibernateException to an appropriate exception from the_{@code org.springframework.dao} hierarchy._@param ex HibernateException that occurred_@return a corresponding DataAccessException_@see SessionFactoryUtils#convertHibernateAccessException;protected DataAccessException convertHibernateAccessException(HibernateException ex) {_		return SessionFactoryUtils.convertHibernateAccessException(ex)__	};convert,the,given,hibernate,exception,to,an,appropriate,exception,from,the,code,org,springframework,dao,hierarchy,param,ex,hibernate,exception,that,occurred,return,a,corresponding,data,access,exception,see,session,factory,utils,convert,hibernate,access,exception;protected,data,access,exception,convert,hibernate,access,exception,hibernate,exception,ex,return,session,factory,utils,convert,hibernate,access,exception,ex
HibernateExceptionTranslator -> protected DataAccessException convertHibernateAccessException(HibernateException ex);1473795962;Convert the given HibernateException to an appropriate exception from the_{@code org.springframework.dao} hierarchy._@param ex HibernateException that occurred_@return a corresponding DataAccessException_@see SessionFactoryUtils#convertHibernateAccessException;protected DataAccessException convertHibernateAccessException(HibernateException ex) {_		return SessionFactoryUtils.convertHibernateAccessException(ex)__	};convert,the,given,hibernate,exception,to,an,appropriate,exception,from,the,code,org,springframework,dao,hierarchy,param,ex,hibernate,exception,that,occurred,return,a,corresponding,data,access,exception,see,session,factory,utils,convert,hibernate,access,exception;protected,data,access,exception,convert,hibernate,access,exception,hibernate,exception,ex,return,session,factory,utils,convert,hibernate,access,exception,ex
HibernateExceptionTranslator -> protected DataAccessException convertHibernateAccessException(HibernateException ex);1502974979;Convert the given HibernateException to an appropriate exception from the_{@code org.springframework.dao} hierarchy._@param ex HibernateException that occurred_@return a corresponding DataAccessException_@see SessionFactoryUtils#convertHibernateAccessException;protected DataAccessException convertHibernateAccessException(HibernateException ex) {_		return SessionFactoryUtils.convertHibernateAccessException(ex)__	};convert,the,given,hibernate,exception,to,an,appropriate,exception,from,the,code,org,springframework,dao,hierarchy,param,ex,hibernate,exception,that,occurred,return,a,corresponding,data,access,exception,see,session,factory,utils,convert,hibernate,access,exception;protected,data,access,exception,convert,hibernate,access,exception,hibernate,exception,ex,return,session,factory,utils,convert,hibernate,access,exception,ex
HibernateExceptionTranslator -> protected DataAccessException convertHibernateAccessException(HibernateException ex);1530174524;Convert the given HibernateException to an appropriate exception from the_{@code org.springframework.dao} hierarchy._@param ex the HibernateException that occurred_@return a corresponding DataAccessException_@see SessionFactoryUtils#convertHibernateAccessException;protected DataAccessException convertHibernateAccessException(HibernateException ex) {_		return SessionFactoryUtils.convertHibernateAccessException(ex)__	};convert,the,given,hibernate,exception,to,an,appropriate,exception,from,the,code,org,springframework,dao,hierarchy,param,ex,the,hibernate,exception,that,occurred,return,a,corresponding,data,access,exception,see,session,factory,utils,convert,hibernate,access,exception;protected,data,access,exception,convert,hibernate,access,exception,hibernate,exception,ex,return,session,factory,utils,convert,hibernate,access,exception,ex
HibernateExceptionTranslator -> protected DataAccessException convertHibernateAccessException(HibernateException ex);1531144356;Convert the given HibernateException to an appropriate exception from the_{@code org.springframework.dao} hierarchy._<p>Will automatically apply a specified SQLExceptionTranslator to a_Hibernate JDBCException, otherwise rely on Hibernate's default translation._@param ex the HibernateException that occurred_@return a corresponding DataAccessException_@see SessionFactoryUtils#convertHibernateAccessException;protected DataAccessException convertHibernateAccessException(HibernateException ex) {_		if (this.jdbcExceptionTranslator != null && ex instanceof JDBCException) {_			JDBCException jdbcEx = (JDBCException) ex__			DataAccessException dae = this.jdbcExceptionTranslator.translate(_					"Hibernate operation: " + jdbcEx.getMessage(), jdbcEx.getSQL(), jdbcEx.getSQLException())__			if (dae != null) {_				throw dae__			}_		}_		return SessionFactoryUtils.convertHibernateAccessException(ex)__	};convert,the,given,hibernate,exception,to,an,appropriate,exception,from,the,code,org,springframework,dao,hierarchy,p,will,automatically,apply,a,specified,sqlexception,translator,to,a,hibernate,jdbcexception,otherwise,rely,on,hibernate,s,default,translation,param,ex,the,hibernate,exception,that,occurred,return,a,corresponding,data,access,exception,see,session,factory,utils,convert,hibernate,access,exception;protected,data,access,exception,convert,hibernate,access,exception,hibernate,exception,ex,if,this,jdbc,exception,translator,null,ex,instanceof,jdbcexception,jdbcexception,jdbc,ex,jdbcexception,ex,data,access,exception,dae,this,jdbc,exception,translator,translate,hibernate,operation,jdbc,ex,get,message,jdbc,ex,get,sql,jdbc,ex,get,sqlexception,if,dae,null,throw,dae,return,session,factory,utils,convert,hibernate,access,exception,ex
