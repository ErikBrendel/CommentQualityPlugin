# id;timestamp;commentText;codeText;commentWords;codeWords
OpenEntityManagerInViewFilter -> public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName);1328020251;Set the bean name of the EntityManagerFactory to fetch from Spring's_root application context._<p>Default is "entityManagerFactory". Note that this default only applies_when no "persistenceUnitName" param has been specified._@see #setPersistenceUnitName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName) {_		this.entityManagerFactoryBeanName = entityManagerFactoryBeanName__	};set,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context,p,default,is,entity,manager,factory,note,that,this,default,only,applies,when,no,persistence,unit,name,param,has,been,specified,see,set,persistence,unit,name,see;public,void,set,entity,manager,factory,bean,name,string,entity,manager,factory,bean,name,this,entity,manager,factory,bean,name,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName);1345223392;Set the bean name of the EntityManagerFactory to fetch from Spring's_root application context._<p>Default is "entityManagerFactory". Note that this default only applies_when no "persistenceUnitName" param has been specified._@see #setPersistenceUnitName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName) {_		this.entityManagerFactoryBeanName = entityManagerFactoryBeanName__	};set,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context,p,default,is,entity,manager,factory,note,that,this,default,only,applies,when,no,persistence,unit,name,param,has,been,specified,see,set,persistence,unit,name,see;public,void,set,entity,manager,factory,bean,name,string,entity,manager,factory,bean,name,this,entity,manager,factory,bean,name,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName);1347908336;Set the bean name of the EntityManagerFactory to fetch from Spring's_root application context._<p>Default is "entityManagerFactory". Note that this default only applies_when no "persistenceUnitName" param has been specified._@see #setPersistenceUnitName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName) {_		this.entityManagerFactoryBeanName = entityManagerFactoryBeanName__	};set,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context,p,default,is,entity,manager,factory,note,that,this,default,only,applies,when,no,persistence,unit,name,param,has,been,specified,see,set,persistence,unit,name,see;public,void,set,entity,manager,factory,bean,name,string,entity,manager,factory,bean,name,this,entity,manager,factory,bean,name,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName);1348061150;Set the bean name of the EntityManagerFactory to fetch from Spring's_root application context._<p>Default is "entityManagerFactory". Note that this default only applies_when no "persistenceUnitName" param has been specified._@see #setPersistenceUnitName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName) {_		this.entityManagerFactoryBeanName = entityManagerFactoryBeanName__	};set,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context,p,default,is,entity,manager,factory,note,that,this,default,only,applies,when,no,persistence,unit,name,param,has,been,specified,see,set,persistence,unit,name,see;public,void,set,entity,manager,factory,bean,name,string,entity,manager,factory,bean,name,this,entity,manager,factory,bean,name,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName);1351289067;Set the bean name of the EntityManagerFactory to fetch from Spring's_root application context._<p>Default is "entityManagerFactory". Note that this default only applies_when no "persistenceUnitName" param has been specified._@see #setPersistenceUnitName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName) {_		this.entityManagerFactoryBeanName = entityManagerFactoryBeanName__	};set,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context,p,default,is,entity,manager,factory,note,that,this,default,only,applies,when,no,persistence,unit,name,param,has,been,specified,see,set,persistence,unit,name,see;public,void,set,entity,manager,factory,bean,name,string,entity,manager,factory,bean,name,this,entity,manager,factory,bean,name,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName);1351440638;Set the bean name of the EntityManagerFactory to fetch from Spring's_root application context._<p>Default is "entityManagerFactory". Note that this default only applies_when no "persistenceUnitName" param has been specified._@see #setPersistenceUnitName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName) {_		this.entityManagerFactoryBeanName = entityManagerFactoryBeanName__	};set,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context,p,default,is,entity,manager,factory,note,that,this,default,only,applies,when,no,persistence,unit,name,param,has,been,specified,see,set,persistence,unit,name,see;public,void,set,entity,manager,factory,bean,name,string,entity,manager,factory,bean,name,this,entity,manager,factory,bean,name,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName);1351442820;Set the bean name of the EntityManagerFactory to fetch from Spring's_root application context._<p>Default is "entityManagerFactory". Note that this default only applies_when no "persistenceUnitName" param has been specified._@see #setPersistenceUnitName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName) {_		this.entityManagerFactoryBeanName = entityManagerFactoryBeanName__	};set,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context,p,default,is,entity,manager,factory,note,that,this,default,only,applies,when,no,persistence,unit,name,param,has,been,specified,see,set,persistence,unit,name,see;public,void,set,entity,manager,factory,bean,name,string,entity,manager,factory,bean,name,this,entity,manager,factory,bean,name,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName);1356735495;Set the bean name of the EntityManagerFactory to fetch from Spring's_root application context._<p>Default is "entityManagerFactory". Note that this default only applies_when no "persistenceUnitName" param has been specified._@see #setPersistenceUnitName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName) {_		this.entityManagerFactoryBeanName = entityManagerFactoryBeanName__	};set,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context,p,default,is,entity,manager,factory,note,that,this,default,only,applies,when,no,persistence,unit,name,param,has,been,specified,see,set,persistence,unit,name,see;public,void,set,entity,manager,factory,bean,name,string,entity,manager,factory,bean,name,this,entity,manager,factory,bean,name,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName);1364559513;Set the bean name of the EntityManagerFactory to fetch from Spring's_root application context._<p>Default is "entityManagerFactory". Note that this default only applies_when no "persistenceUnitName" param has been specified._@see #setPersistenceUnitName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName) {_		this.entityManagerFactoryBeanName = entityManagerFactoryBeanName__	};set,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context,p,default,is,entity,manager,factory,note,that,this,default,only,applies,when,no,persistence,unit,name,param,has,been,specified,see,set,persistence,unit,name,see;public,void,set,entity,manager,factory,bean,name,string,entity,manager,factory,bean,name,this,entity,manager,factory,bean,name,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName);1383188061;Set the bean name of the EntityManagerFactory to fetch from Spring's_root application context._<p>Default is "entityManagerFactory". Note that this default only applies_when no "persistenceUnitName" param has been specified._@see #setPersistenceUnitName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName) {_		this.entityManagerFactoryBeanName = entityManagerFactoryBeanName__	};set,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context,p,default,is,entity,manager,factory,note,that,this,default,only,applies,when,no,persistence,unit,name,param,has,been,specified,see,set,persistence,unit,name,see;public,void,set,entity,manager,factory,bean,name,string,entity,manager,factory,bean,name,this,entity,manager,factory,bean,name,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName);1385412762;Set the bean name of the EntityManagerFactory to fetch from Spring's_root application context._<p>Default is "entityManagerFactory". Note that this default only applies_when no "persistenceUnitName" param has been specified._@see #setPersistenceUnitName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName) {_		this.entityManagerFactoryBeanName = entityManagerFactoryBeanName__	};set,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context,p,default,is,entity,manager,factory,note,that,this,default,only,applies,when,no,persistence,unit,name,param,has,been,specified,see,set,persistence,unit,name,see;public,void,set,entity,manager,factory,bean,name,string,entity,manager,factory,bean,name,this,entity,manager,factory,bean,name,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName);1413848647;Set the bean name of the EntityManagerFactory to fetch from Spring's_root application context._<p>Default is "entityManagerFactory". Note that this default only applies_when no "persistenceUnitName" param has been specified._@see #setPersistenceUnitName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName) {_		this.entityManagerFactoryBeanName = entityManagerFactoryBeanName__	};set,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context,p,default,is,entity,manager,factory,note,that,this,default,only,applies,when,no,persistence,unit,name,param,has,been,specified,see,set,persistence,unit,name,see;public,void,set,entity,manager,factory,bean,name,string,entity,manager,factory,bean,name,this,entity,manager,factory,bean,name,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName);1427221234;Set the bean name of the EntityManagerFactory to fetch from Spring's_root application context._<p>Default is "entityManagerFactory". Note that this default only applies_when no "persistenceUnitName" param has been specified._@see #setPersistenceUnitName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName) {_		this.entityManagerFactoryBeanName = entityManagerFactoryBeanName__	};set,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context,p,default,is,entity,manager,factory,note,that,this,default,only,applies,when,no,persistence,unit,name,param,has,been,specified,see,set,persistence,unit,name,see;public,void,set,entity,manager,factory,bean,name,string,entity,manager,factory,bean,name,this,entity,manager,factory,bean,name,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName);1427228652;Set the bean name of the EntityManagerFactory to fetch from Spring's_root application context._<p>Default is "entityManagerFactory". Note that this default only applies_when no "persistenceUnitName" param has been specified._@see #setPersistenceUnitName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName) {_		this.entityManagerFactoryBeanName = entityManagerFactoryBeanName__	};set,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context,p,default,is,entity,manager,factory,note,that,this,default,only,applies,when,no,persistence,unit,name,param,has,been,specified,see,set,persistence,unit,name,see;public,void,set,entity,manager,factory,bean,name,string,entity,manager,factory,bean,name,this,entity,manager,factory,bean,name,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName);1495868221;Set the bean name of the EntityManagerFactory to fetch from Spring's_root application context._<p>Default is "entityManagerFactory". Note that this default only applies_when no "persistenceUnitName" param has been specified._@see #setPersistenceUnitName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName) {_		this.entityManagerFactoryBeanName = entityManagerFactoryBeanName__	};set,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context,p,default,is,entity,manager,factory,note,that,this,default,only,applies,when,no,persistence,unit,name,param,has,been,specified,see,set,persistence,unit,name,see;public,void,set,entity,manager,factory,bean,name,string,entity,manager,factory,bean,name,this,entity,manager,factory,bean,name,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName);1496837955;Set the bean name of the EntityManagerFactory to fetch from Spring's_root application context._<p>Default is "entityManagerFactory". Note that this default only applies_when no "persistenceUnitName" param has been specified._@see #setPersistenceUnitName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName) {_		this.entityManagerFactoryBeanName = entityManagerFactoryBeanName__	};set,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context,p,default,is,entity,manager,factory,note,that,this,default,only,applies,when,no,persistence,unit,name,param,has,been,specified,see,set,persistence,unit,name,see;public,void,set,entity,manager,factory,bean,name,string,entity,manager,factory,bean,name,this,entity,manager,factory,bean,name,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName);1498780456;Set the bean name of the EntityManagerFactory to fetch from Spring's_root application context._<p>Default is "entityManagerFactory". Note that this default only applies_when no "persistenceUnitName" param has been specified._@see #setPersistenceUnitName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setEntityManagerFactoryBeanName(String entityManagerFactoryBeanName) {_		this.entityManagerFactoryBeanName = entityManagerFactoryBeanName__	};set,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context,p,default,is,entity,manager,factory,note,that,this,default,only,applies,when,no,persistence,unit,name,param,has,been,specified,see,set,persistence,unit,name,see;public,void,set,entity,manager,factory,bean,name,string,entity,manager,factory,bean,name,this,entity,manager,factory,bean,name,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> protected EntityManager createEntityManager(EntityManagerFactory emf);1328020251;Create a JPA EntityManager to be bound to a request._<p>Can be overridden in subclasses._@param emf the EntityManagerFactory to use_@see javax.persistence.EntityManagerFactory#createEntityManager();protected EntityManager createEntityManager(EntityManagerFactory emf) {_		return emf.createEntityManager()__	};create,a,jpa,entity,manager,to,be,bound,to,a,request,p,can,be,overridden,in,subclasses,param,emf,the,entity,manager,factory,to,use,see,javax,persistence,entity,manager,factory,create,entity,manager;protected,entity,manager,create,entity,manager,entity,manager,factory,emf,return,emf,create,entity,manager
OpenEntityManagerInViewFilter -> protected EntityManager createEntityManager(EntityManagerFactory emf);1345223392;Create a JPA EntityManager to be bound to a request._<p>Can be overridden in subclasses._@param emf the EntityManagerFactory to use_@see javax.persistence.EntityManagerFactory#createEntityManager();protected EntityManager createEntityManager(EntityManagerFactory emf) {_		return emf.createEntityManager()__	};create,a,jpa,entity,manager,to,be,bound,to,a,request,p,can,be,overridden,in,subclasses,param,emf,the,entity,manager,factory,to,use,see,javax,persistence,entity,manager,factory,create,entity,manager;protected,entity,manager,create,entity,manager,entity,manager,factory,emf,return,emf,create,entity,manager
OpenEntityManagerInViewFilter -> protected EntityManager createEntityManager(EntityManagerFactory emf);1347908336;Create a JPA EntityManager to be bound to a request._<p>Can be overridden in subclasses._@param emf the EntityManagerFactory to use_@see javax.persistence.EntityManagerFactory#createEntityManager();protected EntityManager createEntityManager(EntityManagerFactory emf) {_		return emf.createEntityManager()__	};create,a,jpa,entity,manager,to,be,bound,to,a,request,p,can,be,overridden,in,subclasses,param,emf,the,entity,manager,factory,to,use,see,javax,persistence,entity,manager,factory,create,entity,manager;protected,entity,manager,create,entity,manager,entity,manager,factory,emf,return,emf,create,entity,manager
OpenEntityManagerInViewFilter -> protected EntityManager createEntityManager(EntityManagerFactory emf);1348061150;Create a JPA EntityManager to be bound to a request._<p>Can be overridden in subclasses._@param emf the EntityManagerFactory to use_@see javax.persistence.EntityManagerFactory#createEntityManager();protected EntityManager createEntityManager(EntityManagerFactory emf) {_		return emf.createEntityManager()__	};create,a,jpa,entity,manager,to,be,bound,to,a,request,p,can,be,overridden,in,subclasses,param,emf,the,entity,manager,factory,to,use,see,javax,persistence,entity,manager,factory,create,entity,manager;protected,entity,manager,create,entity,manager,entity,manager,factory,emf,return,emf,create,entity,manager
OpenEntityManagerInViewFilter -> protected EntityManager createEntityManager(EntityManagerFactory emf);1351289067;Create a JPA EntityManager to be bound to a request._<p>Can be overridden in subclasses._@param emf the EntityManagerFactory to use_@see javax.persistence.EntityManagerFactory#createEntityManager();protected EntityManager createEntityManager(EntityManagerFactory emf) {_		return emf.createEntityManager()__	};create,a,jpa,entity,manager,to,be,bound,to,a,request,p,can,be,overridden,in,subclasses,param,emf,the,entity,manager,factory,to,use,see,javax,persistence,entity,manager,factory,create,entity,manager;protected,entity,manager,create,entity,manager,entity,manager,factory,emf,return,emf,create,entity,manager
OpenEntityManagerInViewFilter -> protected EntityManager createEntityManager(EntityManagerFactory emf);1351440638;Create a JPA EntityManager to be bound to a request._<p>Can be overridden in subclasses._@param emf the EntityManagerFactory to use_@see javax.persistence.EntityManagerFactory#createEntityManager();protected EntityManager createEntityManager(EntityManagerFactory emf) {_		return emf.createEntityManager()__	};create,a,jpa,entity,manager,to,be,bound,to,a,request,p,can,be,overridden,in,subclasses,param,emf,the,entity,manager,factory,to,use,see,javax,persistence,entity,manager,factory,create,entity,manager;protected,entity,manager,create,entity,manager,entity,manager,factory,emf,return,emf,create,entity,manager
OpenEntityManagerInViewFilter -> protected EntityManager createEntityManager(EntityManagerFactory emf);1351442820;Create a JPA EntityManager to be bound to a request._<p>Can be overridden in subclasses._@param emf the EntityManagerFactory to use_@see javax.persistence.EntityManagerFactory#createEntityManager();protected EntityManager createEntityManager(EntityManagerFactory emf) {_		return emf.createEntityManager()__	};create,a,jpa,entity,manager,to,be,bound,to,a,request,p,can,be,overridden,in,subclasses,param,emf,the,entity,manager,factory,to,use,see,javax,persistence,entity,manager,factory,create,entity,manager;protected,entity,manager,create,entity,manager,entity,manager,factory,emf,return,emf,create,entity,manager
OpenEntityManagerInViewFilter -> protected EntityManager createEntityManager(EntityManagerFactory emf);1356735495;Create a JPA EntityManager to be bound to a request._<p>Can be overridden in subclasses._@param emf the EntityManagerFactory to use_@see javax.persistence.EntityManagerFactory#createEntityManager();protected EntityManager createEntityManager(EntityManagerFactory emf) {_		return emf.createEntityManager()__	};create,a,jpa,entity,manager,to,be,bound,to,a,request,p,can,be,overridden,in,subclasses,param,emf,the,entity,manager,factory,to,use,see,javax,persistence,entity,manager,factory,create,entity,manager;protected,entity,manager,create,entity,manager,entity,manager,factory,emf,return,emf,create,entity,manager
OpenEntityManagerInViewFilter -> protected EntityManager createEntityManager(EntityManagerFactory emf);1364559513;Create a JPA EntityManager to be bound to a request._<p>Can be overridden in subclasses._@param emf the EntityManagerFactory to use_@see javax.persistence.EntityManagerFactory#createEntityManager();protected EntityManager createEntityManager(EntityManagerFactory emf) {_		return emf.createEntityManager()__	};create,a,jpa,entity,manager,to,be,bound,to,a,request,p,can,be,overridden,in,subclasses,param,emf,the,entity,manager,factory,to,use,see,javax,persistence,entity,manager,factory,create,entity,manager;protected,entity,manager,create,entity,manager,entity,manager,factory,emf,return,emf,create,entity,manager
OpenEntityManagerInViewFilter -> protected EntityManager createEntityManager(EntityManagerFactory emf);1383188061;Create a JPA EntityManager to be bound to a request._<p>Can be overridden in subclasses._@param emf the EntityManagerFactory to use_@see javax.persistence.EntityManagerFactory#createEntityManager();protected EntityManager createEntityManager(EntityManagerFactory emf) {_		return emf.createEntityManager()__	};create,a,jpa,entity,manager,to,be,bound,to,a,request,p,can,be,overridden,in,subclasses,param,emf,the,entity,manager,factory,to,use,see,javax,persistence,entity,manager,factory,create,entity,manager;protected,entity,manager,create,entity,manager,entity,manager,factory,emf,return,emf,create,entity,manager
OpenEntityManagerInViewFilter -> protected EntityManager createEntityManager(EntityManagerFactory emf);1385412762;Create a JPA EntityManager to be bound to a request._<p>Can be overridden in subclasses._@param emf the EntityManagerFactory to use_@see javax.persistence.EntityManagerFactory#createEntityManager();protected EntityManager createEntityManager(EntityManagerFactory emf) {_		return emf.createEntityManager()__	};create,a,jpa,entity,manager,to,be,bound,to,a,request,p,can,be,overridden,in,subclasses,param,emf,the,entity,manager,factory,to,use,see,javax,persistence,entity,manager,factory,create,entity,manager;protected,entity,manager,create,entity,manager,entity,manager,factory,emf,return,emf,create,entity,manager
OpenEntityManagerInViewFilter -> protected EntityManager createEntityManager(EntityManagerFactory emf);1413848647;Create a JPA EntityManager to be bound to a request._<p>Can be overridden in subclasses._@param emf the EntityManagerFactory to use_@see javax.persistence.EntityManagerFactory#createEntityManager();protected EntityManager createEntityManager(EntityManagerFactory emf) {_		return emf.createEntityManager()__	};create,a,jpa,entity,manager,to,be,bound,to,a,request,p,can,be,overridden,in,subclasses,param,emf,the,entity,manager,factory,to,use,see,javax,persistence,entity,manager,factory,create,entity,manager;protected,entity,manager,create,entity,manager,entity,manager,factory,emf,return,emf,create,entity,manager
OpenEntityManagerInViewFilter -> protected EntityManager createEntityManager(EntityManagerFactory emf);1427221234;Create a JPA EntityManager to be bound to a request._<p>Can be overridden in subclasses._@param emf the EntityManagerFactory to use_@see javax.persistence.EntityManagerFactory#createEntityManager();protected EntityManager createEntityManager(EntityManagerFactory emf) {_		return emf.createEntityManager()__	};create,a,jpa,entity,manager,to,be,bound,to,a,request,p,can,be,overridden,in,subclasses,param,emf,the,entity,manager,factory,to,use,see,javax,persistence,entity,manager,factory,create,entity,manager;protected,entity,manager,create,entity,manager,entity,manager,factory,emf,return,emf,create,entity,manager
OpenEntityManagerInViewFilter -> protected EntityManager createEntityManager(EntityManagerFactory emf);1427228652;Create a JPA EntityManager to be bound to a request._<p>Can be overridden in subclasses._@param emf the EntityManagerFactory to use_@see javax.persistence.EntityManagerFactory#createEntityManager();protected EntityManager createEntityManager(EntityManagerFactory emf) {_		return emf.createEntityManager()__	};create,a,jpa,entity,manager,to,be,bound,to,a,request,p,can,be,overridden,in,subclasses,param,emf,the,entity,manager,factory,to,use,see,javax,persistence,entity,manager,factory,create,entity,manager;protected,entity,manager,create,entity,manager,entity,manager,factory,emf,return,emf,create,entity,manager
OpenEntityManagerInViewFilter -> protected EntityManager createEntityManager(EntityManagerFactory emf);1495868221;Create a JPA EntityManager to be bound to a request._<p>Can be overridden in subclasses._@param emf the EntityManagerFactory to use_@see javax.persistence.EntityManagerFactory#createEntityManager();protected EntityManager createEntityManager(EntityManagerFactory emf) {_		return emf.createEntityManager()__	};create,a,jpa,entity,manager,to,be,bound,to,a,request,p,can,be,overridden,in,subclasses,param,emf,the,entity,manager,factory,to,use,see,javax,persistence,entity,manager,factory,create,entity,manager;protected,entity,manager,create,entity,manager,entity,manager,factory,emf,return,emf,create,entity,manager
OpenEntityManagerInViewFilter -> protected EntityManager createEntityManager(EntityManagerFactory emf);1496837955;Create a JPA EntityManager to be bound to a request._<p>Can be overridden in subclasses._@param emf the EntityManagerFactory to use_@see javax.persistence.EntityManagerFactory#createEntityManager();protected EntityManager createEntityManager(EntityManagerFactory emf) {_		return emf.createEntityManager()__	};create,a,jpa,entity,manager,to,be,bound,to,a,request,p,can,be,overridden,in,subclasses,param,emf,the,entity,manager,factory,to,use,see,javax,persistence,entity,manager,factory,create,entity,manager;protected,entity,manager,create,entity,manager,entity,manager,factory,emf,return,emf,create,entity,manager
OpenEntityManagerInViewFilter -> protected EntityManager createEntityManager(EntityManagerFactory emf);1498780456;Create a JPA EntityManager to be bound to a request._<p>Can be overridden in subclasses._@param emf the EntityManagerFactory to use_@see javax.persistence.EntityManagerFactory#createEntityManager();protected EntityManager createEntityManager(EntityManagerFactory emf) {_		return emf.createEntityManager()__	};create,a,jpa,entity,manager,to,be,bound,to,a,request,p,can,be,overridden,in,subclasses,param,emf,the,entity,manager,factory,to,use,see,javax,persistence,entity,manager,factory,create,entity,manager;protected,entity,manager,create,entity,manager,entity,manager,factory,emf,return,emf,create,entity,manager
OpenEntityManagerInViewFilter -> protected EntityManager createEntityManager(EntityManagerFactory emf);1500448076;Create a JPA EntityManager to be bound to a request._<p>Can be overridden in subclasses._@param emf the EntityManagerFactory to use_@see javax.persistence.EntityManagerFactory#createEntityManager();protected EntityManager createEntityManager(EntityManagerFactory emf) {_		return emf.createEntityManager()__	};create,a,jpa,entity,manager,to,be,bound,to,a,request,p,can,be,overridden,in,subclasses,param,emf,the,entity,manager,factory,to,use,see,javax,persistence,entity,manager,factory,create,entity,manager;protected,entity,manager,create,entity,manager,entity,manager,factory,emf,return,emf,create,entity,manager
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldNotFilterErrorDispatch();1351442820;Returns "false" so that the filter may provide an {@code EntityManager}_to each error dispatches.;@Override_	protected boolean shouldNotFilterErrorDispatch() {_		return false__	};returns,false,so,that,the,filter,may,provide,an,code,entity,manager,to,each,error,dispatches;override,protected,boolean,should,not,filter,error,dispatch,return,false
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldNotFilterErrorDispatch();1356735495;Returns "false" so that the filter may provide an {@code EntityManager}_to each error dispatches.;@Override_	protected boolean shouldNotFilterErrorDispatch() {_		return false__	};returns,false,so,that,the,filter,may,provide,an,code,entity,manager,to,each,error,dispatches;override,protected,boolean,should,not,filter,error,dispatch,return,false
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldNotFilterErrorDispatch();1364559513;Returns "false" so that the filter may provide an {@code EntityManager}_to each error dispatches.;@Override_	protected boolean shouldNotFilterErrorDispatch() {_		return false__	};returns,false,so,that,the,filter,may,provide,an,code,entity,manager,to,each,error,dispatches;override,protected,boolean,should,not,filter,error,dispatch,return,false
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldNotFilterErrorDispatch();1383188061;Returns "false" so that the filter may provide an {@code EntityManager}_to each error dispatches.;@Override_	protected boolean shouldNotFilterErrorDispatch() {_		return false__	};returns,false,so,that,the,filter,may,provide,an,code,entity,manager,to,each,error,dispatches;override,protected,boolean,should,not,filter,error,dispatch,return,false
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldNotFilterErrorDispatch();1385412762;Returns "false" so that the filter may provide an {@code EntityManager}_to each error dispatches.;@Override_	protected boolean shouldNotFilterErrorDispatch() {_		return false__	};returns,false,so,that,the,filter,may,provide,an,code,entity,manager,to,each,error,dispatches;override,protected,boolean,should,not,filter,error,dispatch,return,false
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldNotFilterErrorDispatch();1413848647;Returns "false" so that the filter may provide an {@code EntityManager}_to each error dispatches.;@Override_	protected boolean shouldNotFilterErrorDispatch() {_		return false__	};returns,false,so,that,the,filter,may,provide,an,code,entity,manager,to,each,error,dispatches;override,protected,boolean,should,not,filter,error,dispatch,return,false
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldNotFilterErrorDispatch();1427221234;Returns "false" so that the filter may provide an {@code EntityManager}_to each error dispatches.;@Override_	protected boolean shouldNotFilterErrorDispatch() {_		return false__	};returns,false,so,that,the,filter,may,provide,an,code,entity,manager,to,each,error,dispatches;override,protected,boolean,should,not,filter,error,dispatch,return,false
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldNotFilterErrorDispatch();1427228652;Returns "false" so that the filter may provide an {@code EntityManager}_to each error dispatches.;@Override_	protected boolean shouldNotFilterErrorDispatch() {_		return false__	};returns,false,so,that,the,filter,may,provide,an,code,entity,manager,to,each,error,dispatches;override,protected,boolean,should,not,filter,error,dispatch,return,false
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldNotFilterErrorDispatch();1495868221;Returns "false" so that the filter may provide an {@code EntityManager}_to each error dispatches.;@Override_	protected boolean shouldNotFilterErrorDispatch() {_		return false__	};returns,false,so,that,the,filter,may,provide,an,code,entity,manager,to,each,error,dispatches;override,protected,boolean,should,not,filter,error,dispatch,return,false
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldNotFilterErrorDispatch();1496837955;Returns "false" so that the filter may provide an {@code EntityManager}_to each error dispatches.;@Override_	protected boolean shouldNotFilterErrorDispatch() {_		return false__	};returns,false,so,that,the,filter,may,provide,an,code,entity,manager,to,each,error,dispatches;override,protected,boolean,should,not,filter,error,dispatch,return,false
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldNotFilterErrorDispatch();1498780456;Returns "false" so that the filter may provide an {@code EntityManager}_to each error dispatches.;@Override_	protected boolean shouldNotFilterErrorDispatch() {_		return false__	};returns,false,so,that,the,filter,may,provide,an,code,entity,manager,to,each,error,dispatches;override,protected,boolean,should,not,filter,error,dispatch,return,false
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldNotFilterErrorDispatch();1500448076;Returns "false" so that the filter may provide an {@code EntityManager}_to each error dispatches.;@Override_	protected boolean shouldNotFilterErrorDispatch() {_		return false__	};returns,false,so,that,the,filter,may,provide,an,code,entity,manager,to,each,error,dispatches;override,protected,boolean,should,not,filter,error,dispatch,return,false
OpenEntityManagerInViewFilter -> protected String getPersistenceUnitName();1328020251;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;protected String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;protected,string,get,persistence,unit,name,return,this,persistence,unit,name
OpenEntityManagerInViewFilter -> protected String getPersistenceUnitName();1345223392;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;protected String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;protected,string,get,persistence,unit,name,return,this,persistence,unit,name
OpenEntityManagerInViewFilter -> protected String getPersistenceUnitName();1347908336;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;protected String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;protected,string,get,persistence,unit,name,return,this,persistence,unit,name
OpenEntityManagerInViewFilter -> protected String getPersistenceUnitName();1348061150;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;protected String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;protected,string,get,persistence,unit,name,return,this,persistence,unit,name
OpenEntityManagerInViewFilter -> protected String getPersistenceUnitName();1351289067;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;protected String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;protected,string,get,persistence,unit,name,return,this,persistence,unit,name
OpenEntityManagerInViewFilter -> protected String getPersistenceUnitName();1351440638;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;protected String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;protected,string,get,persistence,unit,name,return,this,persistence,unit,name
OpenEntityManagerInViewFilter -> protected String getPersistenceUnitName();1351442820;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;protected String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;protected,string,get,persistence,unit,name,return,this,persistence,unit,name
OpenEntityManagerInViewFilter -> protected String getPersistenceUnitName();1356735495;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;protected String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;protected,string,get,persistence,unit,name,return,this,persistence,unit,name
OpenEntityManagerInViewFilter -> protected String getPersistenceUnitName();1364559513;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;protected String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;protected,string,get,persistence,unit,name,return,this,persistence,unit,name
OpenEntityManagerInViewFilter -> protected String getPersistenceUnitName();1383188061;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;protected String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;protected,string,get,persistence,unit,name,return,this,persistence,unit,name
OpenEntityManagerInViewFilter -> protected String getPersistenceUnitName();1385412762;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;protected String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;protected,string,get,persistence,unit,name,return,this,persistence,unit,name
OpenEntityManagerInViewFilter -> protected String getPersistenceUnitName();1413848647;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;protected String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;protected,string,get,persistence,unit,name,return,this,persistence,unit,name
OpenEntityManagerInViewFilter -> protected String getPersistenceUnitName();1427221234;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;protected String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;protected,string,get,persistence,unit,name,return,this,persistence,unit,name
OpenEntityManagerInViewFilter -> protected String getPersistenceUnitName();1427228652;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;protected String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;protected,string,get,persistence,unit,name,return,this,persistence,unit,name
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldNotFilterAsyncDispatch();1351440638;The default value is "false" so that the filter may re-bind the opened_{@code EntityManager} to each asynchronously dispatched thread and postpone_closing it until the very last asynchronous dispatch.;@Override_	protected boolean shouldNotFilterAsyncDispatch() {_		return false__	};the,default,value,is,false,so,that,the,filter,may,re,bind,the,opened,code,entity,manager,to,each,asynchronously,dispatched,thread,and,postpone,closing,it,until,the,very,last,asynchronous,dispatch;override,protected,boolean,should,not,filter,async,dispatch,return,false
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldNotFilterAsyncDispatch();1351442820;Returns "false" so that the filter may re-bind the opened_{@code EntityManager} to each asynchronously dispatched thread and postpone_closing it until the very last asynchronous dispatch.;@Override_	protected boolean shouldNotFilterAsyncDispatch() {_		return false__	};returns,false,so,that,the,filter,may,re,bind,the,opened,code,entity,manager,to,each,asynchronously,dispatched,thread,and,postpone,closing,it,until,the,very,last,asynchronous,dispatch;override,protected,boolean,should,not,filter,async,dispatch,return,false
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldNotFilterAsyncDispatch();1356735495;Returns "false" so that the filter may re-bind the opened_{@code EntityManager} to each asynchronously dispatched thread and postpone_closing it until the very last asynchronous dispatch.;@Override_	protected boolean shouldNotFilterAsyncDispatch() {_		return false__	};returns,false,so,that,the,filter,may,re,bind,the,opened,code,entity,manager,to,each,asynchronously,dispatched,thread,and,postpone,closing,it,until,the,very,last,asynchronous,dispatch;override,protected,boolean,should,not,filter,async,dispatch,return,false
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldNotFilterAsyncDispatch();1364559513;Returns "false" so that the filter may re-bind the opened_{@code EntityManager} to each asynchronously dispatched thread and postpone_closing it until the very last asynchronous dispatch.;@Override_	protected boolean shouldNotFilterAsyncDispatch() {_		return false__	};returns,false,so,that,the,filter,may,re,bind,the,opened,code,entity,manager,to,each,asynchronously,dispatched,thread,and,postpone,closing,it,until,the,very,last,asynchronous,dispatch;override,protected,boolean,should,not,filter,async,dispatch,return,false
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldNotFilterAsyncDispatch();1383188061;Returns "false" so that the filter may re-bind the opened_{@code EntityManager} to each asynchronously dispatched thread and postpone_closing it until the very last asynchronous dispatch.;@Override_	protected boolean shouldNotFilterAsyncDispatch() {_		return false__	};returns,false,so,that,the,filter,may,re,bind,the,opened,code,entity,manager,to,each,asynchronously,dispatched,thread,and,postpone,closing,it,until,the,very,last,asynchronous,dispatch;override,protected,boolean,should,not,filter,async,dispatch,return,false
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldNotFilterAsyncDispatch();1385412762;Returns "false" so that the filter may re-bind the opened_{@code EntityManager} to each asynchronously dispatched thread and postpone_closing it until the very last asynchronous dispatch.;@Override_	protected boolean shouldNotFilterAsyncDispatch() {_		return false__	};returns,false,so,that,the,filter,may,re,bind,the,opened,code,entity,manager,to,each,asynchronously,dispatched,thread,and,postpone,closing,it,until,the,very,last,asynchronous,dispatch;override,protected,boolean,should,not,filter,async,dispatch,return,false
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldNotFilterAsyncDispatch();1413848647;Returns "false" so that the filter may re-bind the opened_{@code EntityManager} to each asynchronously dispatched thread and postpone_closing it until the very last asynchronous dispatch.;@Override_	protected boolean shouldNotFilterAsyncDispatch() {_		return false__	};returns,false,so,that,the,filter,may,re,bind,the,opened,code,entity,manager,to,each,asynchronously,dispatched,thread,and,postpone,closing,it,until,the,very,last,asynchronous,dispatch;override,protected,boolean,should,not,filter,async,dispatch,return,false
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldNotFilterAsyncDispatch();1427221234;Returns "false" so that the filter may re-bind the opened_{@code EntityManager} to each asynchronously dispatched thread and postpone_closing it until the very last asynchronous dispatch.;@Override_	protected boolean shouldNotFilterAsyncDispatch() {_		return false__	};returns,false,so,that,the,filter,may,re,bind,the,opened,code,entity,manager,to,each,asynchronously,dispatched,thread,and,postpone,closing,it,until,the,very,last,asynchronous,dispatch;override,protected,boolean,should,not,filter,async,dispatch,return,false
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldNotFilterAsyncDispatch();1427228652;Returns "false" so that the filter may re-bind the opened {@code EntityManager}_to each asynchronously dispatched thread and postpone closing it until the very_last asynchronous dispatch.;@Override_	protected boolean shouldNotFilterAsyncDispatch() {_		return false__	};returns,false,so,that,the,filter,may,re,bind,the,opened,code,entity,manager,to,each,asynchronously,dispatched,thread,and,postpone,closing,it,until,the,very,last,asynchronous,dispatch;override,protected,boolean,should,not,filter,async,dispatch,return,false
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldNotFilterAsyncDispatch();1495868221;Returns "false" so that the filter may re-bind the opened {@code EntityManager}_to each asynchronously dispatched thread and postpone closing it until the very_last asynchronous dispatch.;@Override_	protected boolean shouldNotFilterAsyncDispatch() {_		return false__	};returns,false,so,that,the,filter,may,re,bind,the,opened,code,entity,manager,to,each,asynchronously,dispatched,thread,and,postpone,closing,it,until,the,very,last,asynchronous,dispatch;override,protected,boolean,should,not,filter,async,dispatch,return,false
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldNotFilterAsyncDispatch();1496837955;Returns "false" so that the filter may re-bind the opened {@code EntityManager}_to each asynchronously dispatched thread and postpone closing it until the very_last asynchronous dispatch.;@Override_	protected boolean shouldNotFilterAsyncDispatch() {_		return false__	};returns,false,so,that,the,filter,may,re,bind,the,opened,code,entity,manager,to,each,asynchronously,dispatched,thread,and,postpone,closing,it,until,the,very,last,asynchronous,dispatch;override,protected,boolean,should,not,filter,async,dispatch,return,false
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldNotFilterAsyncDispatch();1498780456;Returns "false" so that the filter may re-bind the opened {@code EntityManager}_to each asynchronously dispatched thread and postpone closing it until the very_last asynchronous dispatch.;@Override_	protected boolean shouldNotFilterAsyncDispatch() {_		return false__	};returns,false,so,that,the,filter,may,re,bind,the,opened,code,entity,manager,to,each,asynchronously,dispatched,thread,and,postpone,closing,it,until,the,very,last,asynchronous,dispatch;override,protected,boolean,should,not,filter,async,dispatch,return,false
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldNotFilterAsyncDispatch();1500448076;Returns "false" so that the filter may re-bind the opened {@code EntityManager}_to each asynchronously dispatched thread and postpone closing it until the very_last asynchronous dispatch.;@Override_	protected boolean shouldNotFilterAsyncDispatch() {_		return false__	};returns,false,so,that,the,filter,may,re,bind,the,opened,code,entity,manager,to,each,asynchronously,dispatched,thread,and,postpone,closing,it,until,the,very,last,asynchronous,dispatch;override,protected,boolean,should,not,filter,async,dispatch,return,false
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory();1328020251;Look up the EntityManagerFactory that this filter should use._<p>The default implementation looks for a bean with the specified name_in Spring's root application context._@return the EntityManagerFactory to use_@see #getEntityManagerFactoryBeanName;protected EntityManagerFactory lookupEntityManagerFactory() {_		WebApplicationContext wac = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext())__		String emfBeanName = getEntityManagerFactoryBeanName()__		String puName = getPersistenceUnitName()__		if (StringUtils.hasLength(emfBeanName)) {_			return wac.getBean(emfBeanName, EntityManagerFactory.class)__		}_		else if (!StringUtils.hasLength(puName) && wac.containsBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME)) {_			return wac.getBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME, EntityManagerFactory.class)__		}_		else {_			_			return EntityManagerFactoryUtils.findEntityManagerFactory(wac, puName)__		}_	};look,up,the,entity,manager,factory,that,this,filter,should,use,p,the,default,implementation,looks,for,a,bean,with,the,specified,name,in,spring,s,root,application,context,return,the,entity,manager,factory,to,use,see,get,entity,manager,factory,bean,name;protected,entity,manager,factory,lookup,entity,manager,factory,web,application,context,wac,web,application,context,utils,get,required,web,application,context,get,servlet,context,string,emf,bean,name,get,entity,manager,factory,bean,name,string,pu,name,get,persistence,unit,name,if,string,utils,has,length,emf,bean,name,return,wac,get,bean,emf,bean,name,entity,manager,factory,class,else,if,string,utils,has,length,pu,name,wac,contains,bean,return,wac,get,bean,entity,manager,factory,class,else,return,entity,manager,factory,utils,find,entity,manager,factory,wac,pu,name
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory();1345223392;Look up the EntityManagerFactory that this filter should use._<p>The default implementation looks for a bean with the specified name_in Spring's root application context._@return the EntityManagerFactory to use_@see #getEntityManagerFactoryBeanName;protected EntityManagerFactory lookupEntityManagerFactory() {_		WebApplicationContext wac = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext())__		String emfBeanName = getEntityManagerFactoryBeanName()__		String puName = getPersistenceUnitName()__		if (StringUtils.hasLength(emfBeanName)) {_			return wac.getBean(emfBeanName, EntityManagerFactory.class)__		}_		else if (!StringUtils.hasLength(puName) && wac.containsBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME)) {_			return wac.getBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME, EntityManagerFactory.class)__		}_		else {_			_			return EntityManagerFactoryUtils.findEntityManagerFactory(wac, puName)__		}_	};look,up,the,entity,manager,factory,that,this,filter,should,use,p,the,default,implementation,looks,for,a,bean,with,the,specified,name,in,spring,s,root,application,context,return,the,entity,manager,factory,to,use,see,get,entity,manager,factory,bean,name;protected,entity,manager,factory,lookup,entity,manager,factory,web,application,context,wac,web,application,context,utils,get,required,web,application,context,get,servlet,context,string,emf,bean,name,get,entity,manager,factory,bean,name,string,pu,name,get,persistence,unit,name,if,string,utils,has,length,emf,bean,name,return,wac,get,bean,emf,bean,name,entity,manager,factory,class,else,if,string,utils,has,length,pu,name,wac,contains,bean,return,wac,get,bean,entity,manager,factory,class,else,return,entity,manager,factory,utils,find,entity,manager,factory,wac,pu,name
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory();1347908336;Look up the EntityManagerFactory that this filter should use._<p>The default implementation looks for a bean with the specified name_in Spring's root application context._@return the EntityManagerFactory to use_@see #getEntityManagerFactoryBeanName;protected EntityManagerFactory lookupEntityManagerFactory() {_		WebApplicationContext wac = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext())__		String emfBeanName = getEntityManagerFactoryBeanName()__		String puName = getPersistenceUnitName()__		if (StringUtils.hasLength(emfBeanName)) {_			return wac.getBean(emfBeanName, EntityManagerFactory.class)__		}_		else if (!StringUtils.hasLength(puName) && wac.containsBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME)) {_			return wac.getBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME, EntityManagerFactory.class)__		}_		else {_			_			return EntityManagerFactoryUtils.findEntityManagerFactory(wac, puName)__		}_	};look,up,the,entity,manager,factory,that,this,filter,should,use,p,the,default,implementation,looks,for,a,bean,with,the,specified,name,in,spring,s,root,application,context,return,the,entity,manager,factory,to,use,see,get,entity,manager,factory,bean,name;protected,entity,manager,factory,lookup,entity,manager,factory,web,application,context,wac,web,application,context,utils,get,required,web,application,context,get,servlet,context,string,emf,bean,name,get,entity,manager,factory,bean,name,string,pu,name,get,persistence,unit,name,if,string,utils,has,length,emf,bean,name,return,wac,get,bean,emf,bean,name,entity,manager,factory,class,else,if,string,utils,has,length,pu,name,wac,contains,bean,return,wac,get,bean,entity,manager,factory,class,else,return,entity,manager,factory,utils,find,entity,manager,factory,wac,pu,name
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory();1348061150;Look up the EntityManagerFactory that this filter should use._<p>The default implementation looks for a bean with the specified name_in Spring's root application context._@return the EntityManagerFactory to use_@see #getEntityManagerFactoryBeanName;protected EntityManagerFactory lookupEntityManagerFactory() {_		WebApplicationContext wac = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext())__		String emfBeanName = getEntityManagerFactoryBeanName()__		String puName = getPersistenceUnitName()__		if (StringUtils.hasLength(emfBeanName)) {_			return wac.getBean(emfBeanName, EntityManagerFactory.class)__		}_		else if (!StringUtils.hasLength(puName) && wac.containsBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME)) {_			return wac.getBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME, EntityManagerFactory.class)__		}_		else {_			_			return EntityManagerFactoryUtils.findEntityManagerFactory(wac, puName)__		}_	};look,up,the,entity,manager,factory,that,this,filter,should,use,p,the,default,implementation,looks,for,a,bean,with,the,specified,name,in,spring,s,root,application,context,return,the,entity,manager,factory,to,use,see,get,entity,manager,factory,bean,name;protected,entity,manager,factory,lookup,entity,manager,factory,web,application,context,wac,web,application,context,utils,get,required,web,application,context,get,servlet,context,string,emf,bean,name,get,entity,manager,factory,bean,name,string,pu,name,get,persistence,unit,name,if,string,utils,has,length,emf,bean,name,return,wac,get,bean,emf,bean,name,entity,manager,factory,class,else,if,string,utils,has,length,pu,name,wac,contains,bean,return,wac,get,bean,entity,manager,factory,class,else,return,entity,manager,factory,utils,find,entity,manager,factory,wac,pu,name
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory();1351289067;Look up the EntityManagerFactory that this filter should use._<p>The default implementation looks for a bean with the specified name_in Spring's root application context._@return the EntityManagerFactory to use_@see #getEntityManagerFactoryBeanName;protected EntityManagerFactory lookupEntityManagerFactory() {_		WebApplicationContext wac = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext())__		String emfBeanName = getEntityManagerFactoryBeanName()__		String puName = getPersistenceUnitName()__		if (StringUtils.hasLength(emfBeanName)) {_			return wac.getBean(emfBeanName, EntityManagerFactory.class)__		}_		else if (!StringUtils.hasLength(puName) && wac.containsBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME)) {_			return wac.getBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME, EntityManagerFactory.class)__		}_		else {_			_			return EntityManagerFactoryUtils.findEntityManagerFactory(wac, puName)__		}_	};look,up,the,entity,manager,factory,that,this,filter,should,use,p,the,default,implementation,looks,for,a,bean,with,the,specified,name,in,spring,s,root,application,context,return,the,entity,manager,factory,to,use,see,get,entity,manager,factory,bean,name;protected,entity,manager,factory,lookup,entity,manager,factory,web,application,context,wac,web,application,context,utils,get,required,web,application,context,get,servlet,context,string,emf,bean,name,get,entity,manager,factory,bean,name,string,pu,name,get,persistence,unit,name,if,string,utils,has,length,emf,bean,name,return,wac,get,bean,emf,bean,name,entity,manager,factory,class,else,if,string,utils,has,length,pu,name,wac,contains,bean,return,wac,get,bean,entity,manager,factory,class,else,return,entity,manager,factory,utils,find,entity,manager,factory,wac,pu,name
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory();1351440638;Look up the EntityManagerFactory that this filter should use._<p>The default implementation looks for a bean with the specified name_in Spring's root application context._@return the EntityManagerFactory to use_@see #getEntityManagerFactoryBeanName;protected EntityManagerFactory lookupEntityManagerFactory() {_		WebApplicationContext wac = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext())__		String emfBeanName = getEntityManagerFactoryBeanName()__		String puName = getPersistenceUnitName()__		if (StringUtils.hasLength(emfBeanName)) {_			return wac.getBean(emfBeanName, EntityManagerFactory.class)__		}_		else if (!StringUtils.hasLength(puName) && wac.containsBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME)) {_			return wac.getBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME, EntityManagerFactory.class)__		}_		else {_			_			return EntityManagerFactoryUtils.findEntityManagerFactory(wac, puName)__		}_	};look,up,the,entity,manager,factory,that,this,filter,should,use,p,the,default,implementation,looks,for,a,bean,with,the,specified,name,in,spring,s,root,application,context,return,the,entity,manager,factory,to,use,see,get,entity,manager,factory,bean,name;protected,entity,manager,factory,lookup,entity,manager,factory,web,application,context,wac,web,application,context,utils,get,required,web,application,context,get,servlet,context,string,emf,bean,name,get,entity,manager,factory,bean,name,string,pu,name,get,persistence,unit,name,if,string,utils,has,length,emf,bean,name,return,wac,get,bean,emf,bean,name,entity,manager,factory,class,else,if,string,utils,has,length,pu,name,wac,contains,bean,return,wac,get,bean,entity,manager,factory,class,else,return,entity,manager,factory,utils,find,entity,manager,factory,wac,pu,name
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory();1351442820;Look up the EntityManagerFactory that this filter should use._<p>The default implementation looks for a bean with the specified name_in Spring's root application context._@return the EntityManagerFactory to use_@see #getEntityManagerFactoryBeanName;protected EntityManagerFactory lookupEntityManagerFactory() {_		WebApplicationContext wac = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext())__		String emfBeanName = getEntityManagerFactoryBeanName()__		String puName = getPersistenceUnitName()__		if (StringUtils.hasLength(emfBeanName)) {_			return wac.getBean(emfBeanName, EntityManagerFactory.class)__		}_		else if (!StringUtils.hasLength(puName) && wac.containsBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME)) {_			return wac.getBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME, EntityManagerFactory.class)__		}_		else {_			_			return EntityManagerFactoryUtils.findEntityManagerFactory(wac, puName)__		}_	};look,up,the,entity,manager,factory,that,this,filter,should,use,p,the,default,implementation,looks,for,a,bean,with,the,specified,name,in,spring,s,root,application,context,return,the,entity,manager,factory,to,use,see,get,entity,manager,factory,bean,name;protected,entity,manager,factory,lookup,entity,manager,factory,web,application,context,wac,web,application,context,utils,get,required,web,application,context,get,servlet,context,string,emf,bean,name,get,entity,manager,factory,bean,name,string,pu,name,get,persistence,unit,name,if,string,utils,has,length,emf,bean,name,return,wac,get,bean,emf,bean,name,entity,manager,factory,class,else,if,string,utils,has,length,pu,name,wac,contains,bean,return,wac,get,bean,entity,manager,factory,class,else,return,entity,manager,factory,utils,find,entity,manager,factory,wac,pu,name
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory();1356735495;Look up the EntityManagerFactory that this filter should use._<p>The default implementation looks for a bean with the specified name_in Spring's root application context._@return the EntityManagerFactory to use_@see #getEntityManagerFactoryBeanName;protected EntityManagerFactory lookupEntityManagerFactory() {_		WebApplicationContext wac = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext())__		String emfBeanName = getEntityManagerFactoryBeanName()__		String puName = getPersistenceUnitName()__		if (StringUtils.hasLength(emfBeanName)) {_			return wac.getBean(emfBeanName, EntityManagerFactory.class)__		}_		else if (!StringUtils.hasLength(puName) && wac.containsBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME)) {_			return wac.getBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME, EntityManagerFactory.class)__		}_		else {_			_			return EntityManagerFactoryUtils.findEntityManagerFactory(wac, puName)__		}_	};look,up,the,entity,manager,factory,that,this,filter,should,use,p,the,default,implementation,looks,for,a,bean,with,the,specified,name,in,spring,s,root,application,context,return,the,entity,manager,factory,to,use,see,get,entity,manager,factory,bean,name;protected,entity,manager,factory,lookup,entity,manager,factory,web,application,context,wac,web,application,context,utils,get,required,web,application,context,get,servlet,context,string,emf,bean,name,get,entity,manager,factory,bean,name,string,pu,name,get,persistence,unit,name,if,string,utils,has,length,emf,bean,name,return,wac,get,bean,emf,bean,name,entity,manager,factory,class,else,if,string,utils,has,length,pu,name,wac,contains,bean,return,wac,get,bean,entity,manager,factory,class,else,return,entity,manager,factory,utils,find,entity,manager,factory,wac,pu,name
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory();1364559513;Look up the EntityManagerFactory that this filter should use._<p>The default implementation looks for a bean with the specified name_in Spring's root application context._@return the EntityManagerFactory to use_@see #getEntityManagerFactoryBeanName;protected EntityManagerFactory lookupEntityManagerFactory() {_		WebApplicationContext wac = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext())__		String emfBeanName = getEntityManagerFactoryBeanName()__		String puName = getPersistenceUnitName()__		if (StringUtils.hasLength(emfBeanName)) {_			return wac.getBean(emfBeanName, EntityManagerFactory.class)__		}_		else if (!StringUtils.hasLength(puName) && wac.containsBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME)) {_			return wac.getBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME, EntityManagerFactory.class)__		}_		else {_			_			return EntityManagerFactoryUtils.findEntityManagerFactory(wac, puName)__		}_	};look,up,the,entity,manager,factory,that,this,filter,should,use,p,the,default,implementation,looks,for,a,bean,with,the,specified,name,in,spring,s,root,application,context,return,the,entity,manager,factory,to,use,see,get,entity,manager,factory,bean,name;protected,entity,manager,factory,lookup,entity,manager,factory,web,application,context,wac,web,application,context,utils,get,required,web,application,context,get,servlet,context,string,emf,bean,name,get,entity,manager,factory,bean,name,string,pu,name,get,persistence,unit,name,if,string,utils,has,length,emf,bean,name,return,wac,get,bean,emf,bean,name,entity,manager,factory,class,else,if,string,utils,has,length,pu,name,wac,contains,bean,return,wac,get,bean,entity,manager,factory,class,else,return,entity,manager,factory,utils,find,entity,manager,factory,wac,pu,name
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory();1383188061;Look up the EntityManagerFactory that this filter should use._<p>The default implementation looks for a bean with the specified name_in Spring's root application context._@return the EntityManagerFactory to use_@see #getEntityManagerFactoryBeanName;protected EntityManagerFactory lookupEntityManagerFactory() {_		WebApplicationContext wac = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext())__		String emfBeanName = getEntityManagerFactoryBeanName()__		String puName = getPersistenceUnitName()__		if (StringUtils.hasLength(emfBeanName)) {_			return wac.getBean(emfBeanName, EntityManagerFactory.class)__		}_		else if (!StringUtils.hasLength(puName) && wac.containsBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME)) {_			return wac.getBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME, EntityManagerFactory.class)__		}_		else {_			_			return EntityManagerFactoryUtils.findEntityManagerFactory(wac, puName)__		}_	};look,up,the,entity,manager,factory,that,this,filter,should,use,p,the,default,implementation,looks,for,a,bean,with,the,specified,name,in,spring,s,root,application,context,return,the,entity,manager,factory,to,use,see,get,entity,manager,factory,bean,name;protected,entity,manager,factory,lookup,entity,manager,factory,web,application,context,wac,web,application,context,utils,get,required,web,application,context,get,servlet,context,string,emf,bean,name,get,entity,manager,factory,bean,name,string,pu,name,get,persistence,unit,name,if,string,utils,has,length,emf,bean,name,return,wac,get,bean,emf,bean,name,entity,manager,factory,class,else,if,string,utils,has,length,pu,name,wac,contains,bean,return,wac,get,bean,entity,manager,factory,class,else,return,entity,manager,factory,utils,find,entity,manager,factory,wac,pu,name
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory();1385412762;Look up the EntityManagerFactory that this filter should use._<p>The default implementation looks for a bean with the specified name_in Spring's root application context._@return the EntityManagerFactory to use_@see #getEntityManagerFactoryBeanName;protected EntityManagerFactory lookupEntityManagerFactory() {_		WebApplicationContext wac = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext())__		String emfBeanName = getEntityManagerFactoryBeanName()__		String puName = getPersistenceUnitName()__		if (StringUtils.hasLength(emfBeanName)) {_			return wac.getBean(emfBeanName, EntityManagerFactory.class)__		}_		else if (!StringUtils.hasLength(puName) && wac.containsBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME)) {_			return wac.getBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME, EntityManagerFactory.class)__		}_		else {_			_			return EntityManagerFactoryUtils.findEntityManagerFactory(wac, puName)__		}_	};look,up,the,entity,manager,factory,that,this,filter,should,use,p,the,default,implementation,looks,for,a,bean,with,the,specified,name,in,spring,s,root,application,context,return,the,entity,manager,factory,to,use,see,get,entity,manager,factory,bean,name;protected,entity,manager,factory,lookup,entity,manager,factory,web,application,context,wac,web,application,context,utils,get,required,web,application,context,get,servlet,context,string,emf,bean,name,get,entity,manager,factory,bean,name,string,pu,name,get,persistence,unit,name,if,string,utils,has,length,emf,bean,name,return,wac,get,bean,emf,bean,name,entity,manager,factory,class,else,if,string,utils,has,length,pu,name,wac,contains,bean,return,wac,get,bean,entity,manager,factory,class,else,return,entity,manager,factory,utils,find,entity,manager,factory,wac,pu,name
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory();1413848647;Look up the EntityManagerFactory that this filter should use._<p>The default implementation looks for a bean with the specified name_in Spring's root application context._@return the EntityManagerFactory to use_@see #getEntityManagerFactoryBeanName;protected EntityManagerFactory lookupEntityManagerFactory() {_		WebApplicationContext wac = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext())__		String emfBeanName = getEntityManagerFactoryBeanName()__		String puName = getPersistenceUnitName()__		if (StringUtils.hasLength(emfBeanName)) {_			return wac.getBean(emfBeanName, EntityManagerFactory.class)__		}_		else if (!StringUtils.hasLength(puName) && wac.containsBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME)) {_			return wac.getBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME, EntityManagerFactory.class)__		}_		else {_			_			return EntityManagerFactoryUtils.findEntityManagerFactory(wac, puName)__		}_	};look,up,the,entity,manager,factory,that,this,filter,should,use,p,the,default,implementation,looks,for,a,bean,with,the,specified,name,in,spring,s,root,application,context,return,the,entity,manager,factory,to,use,see,get,entity,manager,factory,bean,name;protected,entity,manager,factory,lookup,entity,manager,factory,web,application,context,wac,web,application,context,utils,get,required,web,application,context,get,servlet,context,string,emf,bean,name,get,entity,manager,factory,bean,name,string,pu,name,get,persistence,unit,name,if,string,utils,has,length,emf,bean,name,return,wac,get,bean,emf,bean,name,entity,manager,factory,class,else,if,string,utils,has,length,pu,name,wac,contains,bean,return,wac,get,bean,entity,manager,factory,class,else,return,entity,manager,factory,utils,find,entity,manager,factory,wac,pu,name
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory();1427221234;Look up the EntityManagerFactory that this filter should use._<p>The default implementation looks for a bean with the specified name_in Spring's root application context._@return the EntityManagerFactory to use_@see #getEntityManagerFactoryBeanName;protected EntityManagerFactory lookupEntityManagerFactory() {_		WebApplicationContext wac = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext())__		String emfBeanName = getEntityManagerFactoryBeanName()__		String puName = getPersistenceUnitName()__		if (StringUtils.hasLength(emfBeanName)) {_			return wac.getBean(emfBeanName, EntityManagerFactory.class)__		}_		else if (!StringUtils.hasLength(puName) && wac.containsBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME)) {_			return wac.getBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME, EntityManagerFactory.class)__		}_		else {_			_			return EntityManagerFactoryUtils.findEntityManagerFactory(wac, puName)__		}_	};look,up,the,entity,manager,factory,that,this,filter,should,use,p,the,default,implementation,looks,for,a,bean,with,the,specified,name,in,spring,s,root,application,context,return,the,entity,manager,factory,to,use,see,get,entity,manager,factory,bean,name;protected,entity,manager,factory,lookup,entity,manager,factory,web,application,context,wac,web,application,context,utils,get,required,web,application,context,get,servlet,context,string,emf,bean,name,get,entity,manager,factory,bean,name,string,pu,name,get,persistence,unit,name,if,string,utils,has,length,emf,bean,name,return,wac,get,bean,emf,bean,name,entity,manager,factory,class,else,if,string,utils,has,length,pu,name,wac,contains,bean,return,wac,get,bean,entity,manager,factory,class,else,return,entity,manager,factory,utils,find,entity,manager,factory,wac,pu,name
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory();1427228652;Look up the EntityManagerFactory that this filter should use._<p>The default implementation looks for a bean with the specified name_in Spring's root application context._@return the EntityManagerFactory to use_@see #getEntityManagerFactoryBeanName;protected EntityManagerFactory lookupEntityManagerFactory() {_		WebApplicationContext wac = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext())__		String emfBeanName = getEntityManagerFactoryBeanName()__		String puName = getPersistenceUnitName()__		if (StringUtils.hasLength(emfBeanName)) {_			return wac.getBean(emfBeanName, EntityManagerFactory.class)__		}_		else if (!StringUtils.hasLength(puName) && wac.containsBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME)) {_			return wac.getBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME, EntityManagerFactory.class)__		}_		else {_			_			return EntityManagerFactoryUtils.findEntityManagerFactory(wac, puName)__		}_	};look,up,the,entity,manager,factory,that,this,filter,should,use,p,the,default,implementation,looks,for,a,bean,with,the,specified,name,in,spring,s,root,application,context,return,the,entity,manager,factory,to,use,see,get,entity,manager,factory,bean,name;protected,entity,manager,factory,lookup,entity,manager,factory,web,application,context,wac,web,application,context,utils,get,required,web,application,context,get,servlet,context,string,emf,bean,name,get,entity,manager,factory,bean,name,string,pu,name,get,persistence,unit,name,if,string,utils,has,length,emf,bean,name,return,wac,get,bean,emf,bean,name,entity,manager,factory,class,else,if,string,utils,has,length,pu,name,wac,contains,bean,return,wac,get,bean,entity,manager,factory,class,else,return,entity,manager,factory,utils,find,entity,manager,factory,wac,pu,name
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory();1495868221;Look up the EntityManagerFactory that this filter should use._<p>The default implementation looks for a bean with the specified name_in Spring's root application context._@return the EntityManagerFactory to use_@see #getEntityManagerFactoryBeanName;protected EntityManagerFactory lookupEntityManagerFactory() {_		WebApplicationContext wac = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext())__		String emfBeanName = getEntityManagerFactoryBeanName()__		String puName = getPersistenceUnitName()__		if (StringUtils.hasLength(emfBeanName)) {_			return wac.getBean(emfBeanName, EntityManagerFactory.class)__		}_		else if (!StringUtils.hasLength(puName) && wac.containsBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME)) {_			return wac.getBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME, EntityManagerFactory.class)__		}_		else {_			_			return EntityManagerFactoryUtils.findEntityManagerFactory(wac, puName)__		}_	};look,up,the,entity,manager,factory,that,this,filter,should,use,p,the,default,implementation,looks,for,a,bean,with,the,specified,name,in,spring,s,root,application,context,return,the,entity,manager,factory,to,use,see,get,entity,manager,factory,bean,name;protected,entity,manager,factory,lookup,entity,manager,factory,web,application,context,wac,web,application,context,utils,get,required,web,application,context,get,servlet,context,string,emf,bean,name,get,entity,manager,factory,bean,name,string,pu,name,get,persistence,unit,name,if,string,utils,has,length,emf,bean,name,return,wac,get,bean,emf,bean,name,entity,manager,factory,class,else,if,string,utils,has,length,pu,name,wac,contains,bean,return,wac,get,bean,entity,manager,factory,class,else,return,entity,manager,factory,utils,find,entity,manager,factory,wac,pu,name
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory();1496837955;Look up the EntityManagerFactory that this filter should use._<p>The default implementation looks for a bean with the specified name_in Spring's root application context._@return the EntityManagerFactory to use_@see #getEntityManagerFactoryBeanName;protected EntityManagerFactory lookupEntityManagerFactory() {_		WebApplicationContext wac = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext())__		String emfBeanName = getEntityManagerFactoryBeanName()__		String puName = getPersistenceUnitName()__		if (StringUtils.hasLength(emfBeanName)) {_			return wac.getBean(emfBeanName, EntityManagerFactory.class)__		}_		else if (!StringUtils.hasLength(puName) && wac.containsBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME)) {_			return wac.getBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME, EntityManagerFactory.class)__		}_		else {_			_			return EntityManagerFactoryUtils.findEntityManagerFactory(wac, puName)__		}_	};look,up,the,entity,manager,factory,that,this,filter,should,use,p,the,default,implementation,looks,for,a,bean,with,the,specified,name,in,spring,s,root,application,context,return,the,entity,manager,factory,to,use,see,get,entity,manager,factory,bean,name;protected,entity,manager,factory,lookup,entity,manager,factory,web,application,context,wac,web,application,context,utils,get,required,web,application,context,get,servlet,context,string,emf,bean,name,get,entity,manager,factory,bean,name,string,pu,name,get,persistence,unit,name,if,string,utils,has,length,emf,bean,name,return,wac,get,bean,emf,bean,name,entity,manager,factory,class,else,if,string,utils,has,length,pu,name,wac,contains,bean,return,wac,get,bean,entity,manager,factory,class,else,return,entity,manager,factory,utils,find,entity,manager,factory,wac,pu,name
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory();1498780456;Look up the EntityManagerFactory that this filter should use._<p>The default implementation looks for a bean with the specified name_in Spring's root application context._@return the EntityManagerFactory to use_@see #getEntityManagerFactoryBeanName;protected EntityManagerFactory lookupEntityManagerFactory() {_		WebApplicationContext wac = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext())__		String emfBeanName = getEntityManagerFactoryBeanName()__		String puName = getPersistenceUnitName()__		if (StringUtils.hasLength(emfBeanName)) {_			return wac.getBean(emfBeanName, EntityManagerFactory.class)__		}_		else if (!StringUtils.hasLength(puName) && wac.containsBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME)) {_			return wac.getBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME, EntityManagerFactory.class)__		}_		else {_			_			return EntityManagerFactoryUtils.findEntityManagerFactory(wac, puName)__		}_	};look,up,the,entity,manager,factory,that,this,filter,should,use,p,the,default,implementation,looks,for,a,bean,with,the,specified,name,in,spring,s,root,application,context,return,the,entity,manager,factory,to,use,see,get,entity,manager,factory,bean,name;protected,entity,manager,factory,lookup,entity,manager,factory,web,application,context,wac,web,application,context,utils,get,required,web,application,context,get,servlet,context,string,emf,bean,name,get,entity,manager,factory,bean,name,string,pu,name,get,persistence,unit,name,if,string,utils,has,length,emf,bean,name,return,wac,get,bean,emf,bean,name,entity,manager,factory,class,else,if,string,utils,has,length,pu,name,wac,contains,bean,return,wac,get,bean,entity,manager,factory,class,else,return,entity,manager,factory,utils,find,entity,manager,factory,wac,pu,name
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory();1500448076;Look up the EntityManagerFactory that this filter should use._<p>The default implementation looks for a bean with the specified name_in Spring's root application context._@return the EntityManagerFactory to use_@see #getEntityManagerFactoryBeanName;protected EntityManagerFactory lookupEntityManagerFactory() {_		WebApplicationContext wac = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext())__		String emfBeanName = getEntityManagerFactoryBeanName()__		String puName = getPersistenceUnitName()__		if (StringUtils.hasLength(emfBeanName)) {_			return wac.getBean(emfBeanName, EntityManagerFactory.class)__		}_		else if (!StringUtils.hasLength(puName) && wac.containsBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME)) {_			return wac.getBean(DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME, EntityManagerFactory.class)__		}_		else {_			_			return EntityManagerFactoryUtils.findEntityManagerFactory(wac, puName)__		}_	};look,up,the,entity,manager,factory,that,this,filter,should,use,p,the,default,implementation,looks,for,a,bean,with,the,specified,name,in,spring,s,root,application,context,return,the,entity,manager,factory,to,use,see,get,entity,manager,factory,bean,name;protected,entity,manager,factory,lookup,entity,manager,factory,web,application,context,wac,web,application,context,utils,get,required,web,application,context,get,servlet,context,string,emf,bean,name,get,entity,manager,factory,bean,name,string,pu,name,get,persistence,unit,name,if,string,utils,has,length,emf,bean,name,return,wac,get,bean,emf,bean,name,entity,manager,factory,class,else,if,string,utils,has,length,pu,name,wac,contains,bean,return,wac,get,bean,entity,manager,factory,class,else,return,entity,manager,factory,utils,find,entity,manager,factory,wac,pu,name
OpenEntityManagerInViewFilter -> public void setPersistenceUnitName(String persistenceUnitName);1328020251;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by bean name,_resolving it by its persistence unit name instead. If no bean name and no persistence_unit name have been specified, we'll check whether a bean exists for the default_bean name "entityManagerFactory"_ if not, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactoryBeanName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,bean,name,resolving,it,by,its,persistence,unit,name,instead,if,no,bean,name,and,no,persistence,unit,name,have,been,specified,we,ll,check,whether,a,bean,exists,for,the,default,bean,name,entity,manager,factory,if,not,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory,bean,name,see;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
OpenEntityManagerInViewFilter -> public void setPersistenceUnitName(String persistenceUnitName);1345223392;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by bean name,_resolving it by its persistence unit name instead. If no bean name and no persistence_unit name have been specified, we'll check whether a bean exists for the default_bean name "entityManagerFactory"_ if not, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactoryBeanName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,bean,name,resolving,it,by,its,persistence,unit,name,instead,if,no,bean,name,and,no,persistence,unit,name,have,been,specified,we,ll,check,whether,a,bean,exists,for,the,default,bean,name,entity,manager,factory,if,not,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory,bean,name,see;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
OpenEntityManagerInViewFilter -> public void setPersistenceUnitName(String persistenceUnitName);1347908336;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by bean name,_resolving it by its persistence unit name instead. If no bean name and no persistence_unit name have been specified, we'll check whether a bean exists for the default_bean name "entityManagerFactory"_ if not, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactoryBeanName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,bean,name,resolving,it,by,its,persistence,unit,name,instead,if,no,bean,name,and,no,persistence,unit,name,have,been,specified,we,ll,check,whether,a,bean,exists,for,the,default,bean,name,entity,manager,factory,if,not,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory,bean,name,see;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
OpenEntityManagerInViewFilter -> public void setPersistenceUnitName(String persistenceUnitName);1348061150;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by bean name,_resolving it by its persistence unit name instead. If no bean name and no persistence_unit name have been specified, we'll check whether a bean exists for the default_bean name "entityManagerFactory"_ if not, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactoryBeanName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,bean,name,resolving,it,by,its,persistence,unit,name,instead,if,no,bean,name,and,no,persistence,unit,name,have,been,specified,we,ll,check,whether,a,bean,exists,for,the,default,bean,name,entity,manager,factory,if,not,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory,bean,name,see;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
OpenEntityManagerInViewFilter -> public void setPersistenceUnitName(String persistenceUnitName);1351289067;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by bean name,_resolving it by its persistence unit name instead. If no bean name and no persistence_unit name have been specified, we'll check whether a bean exists for the default_bean name "entityManagerFactory"_ if not, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactoryBeanName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,bean,name,resolving,it,by,its,persistence,unit,name,instead,if,no,bean,name,and,no,persistence,unit,name,have,been,specified,we,ll,check,whether,a,bean,exists,for,the,default,bean,name,entity,manager,factory,if,not,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory,bean,name,see;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
OpenEntityManagerInViewFilter -> public void setPersistenceUnitName(String persistenceUnitName);1351440638;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by bean name,_resolving it by its persistence unit name instead. If no bean name and no persistence_unit name have been specified, we'll check whether a bean exists for the default_bean name "entityManagerFactory"_ if not, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactoryBeanName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,bean,name,resolving,it,by,its,persistence,unit,name,instead,if,no,bean,name,and,no,persistence,unit,name,have,been,specified,we,ll,check,whether,a,bean,exists,for,the,default,bean,name,entity,manager,factory,if,not,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory,bean,name,see;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
OpenEntityManagerInViewFilter -> public void setPersistenceUnitName(String persistenceUnitName);1351442820;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by bean name,_resolving it by its persistence unit name instead. If no bean name and no persistence_unit name have been specified, we'll check whether a bean exists for the default_bean name "entityManagerFactory"_ if not, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactoryBeanName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,bean,name,resolving,it,by,its,persistence,unit,name,instead,if,no,bean,name,and,no,persistence,unit,name,have,been,specified,we,ll,check,whether,a,bean,exists,for,the,default,bean,name,entity,manager,factory,if,not,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory,bean,name,see;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
OpenEntityManagerInViewFilter -> public void setPersistenceUnitName(String persistenceUnitName);1356735495;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by bean name,_resolving it by its persistence unit name instead. If no bean name and no persistence_unit name have been specified, we'll check whether a bean exists for the default_bean name "entityManagerFactory"_ if not, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactoryBeanName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,bean,name,resolving,it,by,its,persistence,unit,name,instead,if,no,bean,name,and,no,persistence,unit,name,have,been,specified,we,ll,check,whether,a,bean,exists,for,the,default,bean,name,entity,manager,factory,if,not,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory,bean,name,see;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
OpenEntityManagerInViewFilter -> public void setPersistenceUnitName(String persistenceUnitName);1364559513;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by bean name,_resolving it by its persistence unit name instead. If no bean name and no persistence_unit name have been specified, we'll check whether a bean exists for the default_bean name "entityManagerFactory"_ if not, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactoryBeanName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,bean,name,resolving,it,by,its,persistence,unit,name,instead,if,no,bean,name,and,no,persistence,unit,name,have,been,specified,we,ll,check,whether,a,bean,exists,for,the,default,bean,name,entity,manager,factory,if,not,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory,bean,name,see;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
OpenEntityManagerInViewFilter -> public void setPersistenceUnitName(String persistenceUnitName);1383188061;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by bean name,_resolving it by its persistence unit name instead. If no bean name and no persistence_unit name have been specified, we'll check whether a bean exists for the default_bean name "entityManagerFactory"_ if not, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactoryBeanName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,bean,name,resolving,it,by,its,persistence,unit,name,instead,if,no,bean,name,and,no,persistence,unit,name,have,been,specified,we,ll,check,whether,a,bean,exists,for,the,default,bean,name,entity,manager,factory,if,not,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory,bean,name,see;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
OpenEntityManagerInViewFilter -> public void setPersistenceUnitName(String persistenceUnitName);1385412762;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by bean name,_resolving it by its persistence unit name instead. If no bean name and no persistence_unit name have been specified, we'll check whether a bean exists for the default_bean name "entityManagerFactory"_ if not, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactoryBeanName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,bean,name,resolving,it,by,its,persistence,unit,name,instead,if,no,bean,name,and,no,persistence,unit,name,have,been,specified,we,ll,check,whether,a,bean,exists,for,the,default,bean,name,entity,manager,factory,if,not,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory,bean,name,see;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
OpenEntityManagerInViewFilter -> public void setPersistenceUnitName(String persistenceUnitName);1413848647;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by bean name,_resolving it by its persistence unit name instead. If no bean name and no persistence_unit name have been specified, we'll check whether a bean exists for the default_bean name "entityManagerFactory"_ if not, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactoryBeanName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,bean,name,resolving,it,by,its,persistence,unit,name,instead,if,no,bean,name,and,no,persistence,unit,name,have,been,specified,we,ll,check,whether,a,bean,exists,for,the,default,bean,name,entity,manager,factory,if,not,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory,bean,name,see;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
OpenEntityManagerInViewFilter -> public void setPersistenceUnitName(String persistenceUnitName);1427221234;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by bean name,_resolving it by its persistence unit name instead. If no bean name and no persistence_unit name have been specified, we'll check whether a bean exists for the default_bean name "entityManagerFactory"_ if not, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactoryBeanName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,bean,name,resolving,it,by,its,persistence,unit,name,instead,if,no,bean,name,and,no,persistence,unit,name,have,been,specified,we,ll,check,whether,a,bean,exists,for,the,default,bean,name,entity,manager,factory,if,not,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory,bean,name,see;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
OpenEntityManagerInViewFilter -> public void setPersistenceUnitName(String persistenceUnitName);1427228652;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by bean name,_resolving it by its persistence unit name instead. If no bean name and no persistence_unit name have been specified, we'll check whether a bean exists for the default_bean name "entityManagerFactory"_ if not, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactoryBeanName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,bean,name,resolving,it,by,its,persistence,unit,name,instead,if,no,bean,name,and,no,persistence,unit,name,have,been,specified,we,ll,check,whether,a,bean,exists,for,the,default,bean,name,entity,manager,factory,if,not,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory,bean,name,see;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
OpenEntityManagerInViewFilter -> public void setPersistenceUnitName(String persistenceUnitName);1495868221;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by bean name,_resolving it by its persistence unit name instead. If no bean name and no persistence_unit name have been specified, we'll check whether a bean exists for the default_bean name "entityManagerFactory"_ if not, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactoryBeanName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,bean,name,resolving,it,by,its,persistence,unit,name,instead,if,no,bean,name,and,no,persistence,unit,name,have,been,specified,we,ll,check,whether,a,bean,exists,for,the,default,bean,name,entity,manager,factory,if,not,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory,bean,name,see;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
OpenEntityManagerInViewFilter -> public void setPersistenceUnitName(String persistenceUnitName);1496837955;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by bean name,_resolving it by its persistence unit name instead. If no bean name and no persistence_unit name have been specified, we'll check whether a bean exists for the default_bean name "entityManagerFactory"_ if not, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactoryBeanName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,bean,name,resolving,it,by,its,persistence,unit,name,instead,if,no,bean,name,and,no,persistence,unit,name,have,been,specified,we,ll,check,whether,a,bean,exists,for,the,default,bean,name,entity,manager,factory,if,not,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory,bean,name,see;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
OpenEntityManagerInViewFilter -> public void setPersistenceUnitName(String persistenceUnitName);1498780456;Set the name of the persistence unit to access the EntityManagerFactory for._<p>This is an alternative to specifying the EntityManagerFactory by bean name,_resolving it by its persistence unit name instead. If no bean name and no persistence_unit name have been specified, we'll check whether a bean exists for the default_bean name "entityManagerFactory"_ if not, a default EntityManagerFactory will_be retrieved through finding a single unique bean of type EntityManagerFactory._@see #setEntityManagerFactoryBeanName_@see #DEFAULT_ENTITY_MANAGER_FACTORY_BEAN_NAME;public void setPersistenceUnitName(String persistenceUnitName) {_		this.persistenceUnitName = persistenceUnitName__	};set,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,p,this,is,an,alternative,to,specifying,the,entity,manager,factory,by,bean,name,resolving,it,by,its,persistence,unit,name,instead,if,no,bean,name,and,no,persistence,unit,name,have,been,specified,we,ll,check,whether,a,bean,exists,for,the,default,bean,name,entity,manager,factory,if,not,a,default,entity,manager,factory,will,be,retrieved,through,finding,a,single,unique,bean,of,type,entity,manager,factory,see,set,entity,manager,factory,bean,name,see;public,void,set,persistence,unit,name,string,persistence,unit,name,this,persistence,unit,name,persistence,unit,name
OpenEntityManagerInViewFilter -> protected String getEntityManagerFactoryBeanName();1328020251;Return the bean name of the EntityManagerFactory to fetch from Spring's_root application context.;protected String getEntityManagerFactoryBeanName() {_		return this.entityManagerFactoryBeanName__	};return,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context;protected,string,get,entity,manager,factory,bean,name,return,this,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> protected String getEntityManagerFactoryBeanName();1345223392;Return the bean name of the EntityManagerFactory to fetch from Spring's_root application context.;protected String getEntityManagerFactoryBeanName() {_		return this.entityManagerFactoryBeanName__	};return,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context;protected,string,get,entity,manager,factory,bean,name,return,this,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> protected String getEntityManagerFactoryBeanName();1347908336;Return the bean name of the EntityManagerFactory to fetch from Spring's_root application context.;protected String getEntityManagerFactoryBeanName() {_		return this.entityManagerFactoryBeanName__	};return,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context;protected,string,get,entity,manager,factory,bean,name,return,this,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> protected String getEntityManagerFactoryBeanName();1348061150;Return the bean name of the EntityManagerFactory to fetch from Spring's_root application context.;protected String getEntityManagerFactoryBeanName() {_		return this.entityManagerFactoryBeanName__	};return,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context;protected,string,get,entity,manager,factory,bean,name,return,this,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> protected String getEntityManagerFactoryBeanName();1351289067;Return the bean name of the EntityManagerFactory to fetch from Spring's_root application context.;protected String getEntityManagerFactoryBeanName() {_		return this.entityManagerFactoryBeanName__	};return,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context;protected,string,get,entity,manager,factory,bean,name,return,this,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> protected String getEntityManagerFactoryBeanName();1351440638;Return the bean name of the EntityManagerFactory to fetch from Spring's_root application context.;protected String getEntityManagerFactoryBeanName() {_		return this.entityManagerFactoryBeanName__	};return,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context;protected,string,get,entity,manager,factory,bean,name,return,this,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> protected String getEntityManagerFactoryBeanName();1351442820;Return the bean name of the EntityManagerFactory to fetch from Spring's_root application context.;protected String getEntityManagerFactoryBeanName() {_		return this.entityManagerFactoryBeanName__	};return,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context;protected,string,get,entity,manager,factory,bean,name,return,this,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> protected String getEntityManagerFactoryBeanName();1356735495;Return the bean name of the EntityManagerFactory to fetch from Spring's_root application context.;protected String getEntityManagerFactoryBeanName() {_		return this.entityManagerFactoryBeanName__	};return,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context;protected,string,get,entity,manager,factory,bean,name,return,this,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> protected String getEntityManagerFactoryBeanName();1364559513;Return the bean name of the EntityManagerFactory to fetch from Spring's_root application context.;protected String getEntityManagerFactoryBeanName() {_		return this.entityManagerFactoryBeanName__	};return,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context;protected,string,get,entity,manager,factory,bean,name,return,this,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> protected String getEntityManagerFactoryBeanName();1383188061;Return the bean name of the EntityManagerFactory to fetch from Spring's_root application context.;protected String getEntityManagerFactoryBeanName() {_		return this.entityManagerFactoryBeanName__	};return,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context;protected,string,get,entity,manager,factory,bean,name,return,this,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> protected String getEntityManagerFactoryBeanName();1385412762;Return the bean name of the EntityManagerFactory to fetch from Spring's_root application context.;protected String getEntityManagerFactoryBeanName() {_		return this.entityManagerFactoryBeanName__	};return,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context;protected,string,get,entity,manager,factory,bean,name,return,this,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> protected String getEntityManagerFactoryBeanName();1413848647;Return the bean name of the EntityManagerFactory to fetch from Spring's_root application context.;protected String getEntityManagerFactoryBeanName() {_		return this.entityManagerFactoryBeanName__	};return,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context;protected,string,get,entity,manager,factory,bean,name,return,this,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> protected String getEntityManagerFactoryBeanName();1427221234;Return the bean name of the EntityManagerFactory to fetch from Spring's_root application context.;protected String getEntityManagerFactoryBeanName() {_		return this.entityManagerFactoryBeanName__	};return,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context;protected,string,get,entity,manager,factory,bean,name,return,this,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> protected String getEntityManagerFactoryBeanName();1427228652;Return the bean name of the EntityManagerFactory to fetch from Spring's_root application context.;protected String getEntityManagerFactoryBeanName() {_		return this.entityManagerFactoryBeanName__	};return,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context;protected,string,get,entity,manager,factory,bean,name,return,this,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> protected String getEntityManagerFactoryBeanName();1495868221;Return the bean name of the EntityManagerFactory to fetch from Spring's_root application context.;protected String getEntityManagerFactoryBeanName() {_		return this.entityManagerFactoryBeanName__	};return,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context;protected,string,get,entity,manager,factory,bean,name,return,this,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> protected String getEntityManagerFactoryBeanName();1496837955;Return the bean name of the EntityManagerFactory to fetch from Spring's_root application context.;protected String getEntityManagerFactoryBeanName() {_		return this.entityManagerFactoryBeanName__	};return,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context;protected,string,get,entity,manager,factory,bean,name,return,this,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request);1328020251;Look up the EntityManagerFactory that this filter should use,_taking the current HTTP request as argument._<p>The default implementation delegates to the <code>lookupEntityManagerFactory</code>_without arguments, caching the EntityManagerFactory reference once obtained._@return the EntityManagerFactory to use_@see #lookupEntityManagerFactory();protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request) {_		if (this.entityManagerFactory == null) {_			this.entityManagerFactory = lookupEntityManagerFactory()__		}_		return this.entityManagerFactory__	};look,up,the,entity,manager,factory,that,this,filter,should,use,taking,the,current,http,request,as,argument,p,the,default,implementation,delegates,to,the,code,lookup,entity,manager,factory,code,without,arguments,caching,the,entity,manager,factory,reference,once,obtained,return,the,entity,manager,factory,to,use,see,lookup,entity,manager,factory;protected,entity,manager,factory,lookup,entity,manager,factory,http,servlet,request,request,if,this,entity,manager,factory,null,this,entity,manager,factory,lookup,entity,manager,factory,return,this,entity,manager,factory
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request);1345223392;Look up the EntityManagerFactory that this filter should use,_taking the current HTTP request as argument._<p>The default implementation delegates to the <code>lookupEntityManagerFactory</code>_without arguments, caching the EntityManagerFactory reference once obtained._@return the EntityManagerFactory to use_@see #lookupEntityManagerFactory();protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request) {_		if (this.entityManagerFactory == null) {_			this.entityManagerFactory = lookupEntityManagerFactory()__		}_		return this.entityManagerFactory__	};look,up,the,entity,manager,factory,that,this,filter,should,use,taking,the,current,http,request,as,argument,p,the,default,implementation,delegates,to,the,code,lookup,entity,manager,factory,code,without,arguments,caching,the,entity,manager,factory,reference,once,obtained,return,the,entity,manager,factory,to,use,see,lookup,entity,manager,factory;protected,entity,manager,factory,lookup,entity,manager,factory,http,servlet,request,request,if,this,entity,manager,factory,null,this,entity,manager,factory,lookup,entity,manager,factory,return,this,entity,manager,factory
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request);1347908336;Look up the EntityManagerFactory that this filter should use,_taking the current HTTP request as argument._<p>The default implementation delegates to the <code>lookupEntityManagerFactory</code>_without arguments, caching the EntityManagerFactory reference once obtained._@return the EntityManagerFactory to use_@see #lookupEntityManagerFactory();protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request) {_		if (this.entityManagerFactory == null) {_			this.entityManagerFactory = lookupEntityManagerFactory()__		}_		return this.entityManagerFactory__	};look,up,the,entity,manager,factory,that,this,filter,should,use,taking,the,current,http,request,as,argument,p,the,default,implementation,delegates,to,the,code,lookup,entity,manager,factory,code,without,arguments,caching,the,entity,manager,factory,reference,once,obtained,return,the,entity,manager,factory,to,use,see,lookup,entity,manager,factory;protected,entity,manager,factory,lookup,entity,manager,factory,http,servlet,request,request,if,this,entity,manager,factory,null,this,entity,manager,factory,lookup,entity,manager,factory,return,this,entity,manager,factory
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request);1348061150;Look up the EntityManagerFactory that this filter should use,_taking the current HTTP request as argument._<p>The default implementation delegates to the <code>lookupEntityManagerFactory</code>_without arguments, caching the EntityManagerFactory reference once obtained._@return the EntityManagerFactory to use_@see #lookupEntityManagerFactory();protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request) {_		if (this.entityManagerFactory == null) {_			this.entityManagerFactory = lookupEntityManagerFactory()__		}_		return this.entityManagerFactory__	};look,up,the,entity,manager,factory,that,this,filter,should,use,taking,the,current,http,request,as,argument,p,the,default,implementation,delegates,to,the,code,lookup,entity,manager,factory,code,without,arguments,caching,the,entity,manager,factory,reference,once,obtained,return,the,entity,manager,factory,to,use,see,lookup,entity,manager,factory;protected,entity,manager,factory,lookup,entity,manager,factory,http,servlet,request,request,if,this,entity,manager,factory,null,this,entity,manager,factory,lookup,entity,manager,factory,return,this,entity,manager,factory
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request);1351289067;Look up the EntityManagerFactory that this filter should use,_taking the current HTTP request as argument._<p>The default implementation delegates to the <code>lookupEntityManagerFactory</code>_without arguments, caching the EntityManagerFactory reference once obtained._@return the EntityManagerFactory to use_@see #lookupEntityManagerFactory();protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request) {_		if (this.entityManagerFactory == null) {_			this.entityManagerFactory = lookupEntityManagerFactory()__		}_		return this.entityManagerFactory__	};look,up,the,entity,manager,factory,that,this,filter,should,use,taking,the,current,http,request,as,argument,p,the,default,implementation,delegates,to,the,code,lookup,entity,manager,factory,code,without,arguments,caching,the,entity,manager,factory,reference,once,obtained,return,the,entity,manager,factory,to,use,see,lookup,entity,manager,factory;protected,entity,manager,factory,lookup,entity,manager,factory,http,servlet,request,request,if,this,entity,manager,factory,null,this,entity,manager,factory,lookup,entity,manager,factory,return,this,entity,manager,factory
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request);1351440638;Look up the EntityManagerFactory that this filter should use,_taking the current HTTP request as argument._<p>The default implementation delegates to the <code>lookupEntityManagerFactory</code>_without arguments, caching the EntityManagerFactory reference once obtained._@return the EntityManagerFactory to use_@see #lookupEntityManagerFactory();protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request) {_		if (this.entityManagerFactory == null) {_			this.entityManagerFactory = lookupEntityManagerFactory()__		}_		return this.entityManagerFactory__	};look,up,the,entity,manager,factory,that,this,filter,should,use,taking,the,current,http,request,as,argument,p,the,default,implementation,delegates,to,the,code,lookup,entity,manager,factory,code,without,arguments,caching,the,entity,manager,factory,reference,once,obtained,return,the,entity,manager,factory,to,use,see,lookup,entity,manager,factory;protected,entity,manager,factory,lookup,entity,manager,factory,http,servlet,request,request,if,this,entity,manager,factory,null,this,entity,manager,factory,lookup,entity,manager,factory,return,this,entity,manager,factory
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request);1351442820;Look up the EntityManagerFactory that this filter should use,_taking the current HTTP request as argument._<p>The default implementation delegates to the <code>lookupEntityManagerFactory</code>_without arguments, caching the EntityManagerFactory reference once obtained._@return the EntityManagerFactory to use_@see #lookupEntityManagerFactory();protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request) {_		if (this.entityManagerFactory == null) {_			this.entityManagerFactory = lookupEntityManagerFactory()__		}_		return this.entityManagerFactory__	};look,up,the,entity,manager,factory,that,this,filter,should,use,taking,the,current,http,request,as,argument,p,the,default,implementation,delegates,to,the,code,lookup,entity,manager,factory,code,without,arguments,caching,the,entity,manager,factory,reference,once,obtained,return,the,entity,manager,factory,to,use,see,lookup,entity,manager,factory;protected,entity,manager,factory,lookup,entity,manager,factory,http,servlet,request,request,if,this,entity,manager,factory,null,this,entity,manager,factory,lookup,entity,manager,factory,return,this,entity,manager,factory
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request);1356735495;Look up the EntityManagerFactory that this filter should use,_taking the current HTTP request as argument._<p>The default implementation delegates to the {@code lookupEntityManagerFactory}_without arguments, caching the EntityManagerFactory reference once obtained._@return the EntityManagerFactory to use_@see #lookupEntityManagerFactory();protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request) {_		if (this.entityManagerFactory == null) {_			this.entityManagerFactory = lookupEntityManagerFactory()__		}_		return this.entityManagerFactory__	};look,up,the,entity,manager,factory,that,this,filter,should,use,taking,the,current,http,request,as,argument,p,the,default,implementation,delegates,to,the,code,lookup,entity,manager,factory,without,arguments,caching,the,entity,manager,factory,reference,once,obtained,return,the,entity,manager,factory,to,use,see,lookup,entity,manager,factory;protected,entity,manager,factory,lookup,entity,manager,factory,http,servlet,request,request,if,this,entity,manager,factory,null,this,entity,manager,factory,lookup,entity,manager,factory,return,this,entity,manager,factory
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request);1364559513;Look up the EntityManagerFactory that this filter should use,_taking the current HTTP request as argument._<p>The default implementation delegates to the {@code lookupEntityManagerFactory}_without arguments, caching the EntityManagerFactory reference once obtained._@return the EntityManagerFactory to use_@see #lookupEntityManagerFactory();protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request) {_		if (this.entityManagerFactory == null) {_			this.entityManagerFactory = lookupEntityManagerFactory()__		}_		return this.entityManagerFactory__	};look,up,the,entity,manager,factory,that,this,filter,should,use,taking,the,current,http,request,as,argument,p,the,default,implementation,delegates,to,the,code,lookup,entity,manager,factory,without,arguments,caching,the,entity,manager,factory,reference,once,obtained,return,the,entity,manager,factory,to,use,see,lookup,entity,manager,factory;protected,entity,manager,factory,lookup,entity,manager,factory,http,servlet,request,request,if,this,entity,manager,factory,null,this,entity,manager,factory,lookup,entity,manager,factory,return,this,entity,manager,factory
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request);1383188061;Look up the EntityManagerFactory that this filter should use,_taking the current HTTP request as argument._<p>The default implementation delegates to the {@code lookupEntityManagerFactory}_without arguments, caching the EntityManagerFactory reference once obtained._@return the EntityManagerFactory to use_@see #lookupEntityManagerFactory();protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request) {_		if (this.entityManagerFactory == null) {_			this.entityManagerFactory = lookupEntityManagerFactory()__		}_		return this.entityManagerFactory__	};look,up,the,entity,manager,factory,that,this,filter,should,use,taking,the,current,http,request,as,argument,p,the,default,implementation,delegates,to,the,code,lookup,entity,manager,factory,without,arguments,caching,the,entity,manager,factory,reference,once,obtained,return,the,entity,manager,factory,to,use,see,lookup,entity,manager,factory;protected,entity,manager,factory,lookup,entity,manager,factory,http,servlet,request,request,if,this,entity,manager,factory,null,this,entity,manager,factory,lookup,entity,manager,factory,return,this,entity,manager,factory
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request);1385412762;Look up the EntityManagerFactory that this filter should use,_taking the current HTTP request as argument._<p>The default implementation delegates to the {@code lookupEntityManagerFactory}_without arguments, caching the EntityManagerFactory reference once obtained._@return the EntityManagerFactory to use_@see #lookupEntityManagerFactory();protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request) {_		if (this.entityManagerFactory == null) {_			this.entityManagerFactory = lookupEntityManagerFactory()__		}_		return this.entityManagerFactory__	};look,up,the,entity,manager,factory,that,this,filter,should,use,taking,the,current,http,request,as,argument,p,the,default,implementation,delegates,to,the,code,lookup,entity,manager,factory,without,arguments,caching,the,entity,manager,factory,reference,once,obtained,return,the,entity,manager,factory,to,use,see,lookup,entity,manager,factory;protected,entity,manager,factory,lookup,entity,manager,factory,http,servlet,request,request,if,this,entity,manager,factory,null,this,entity,manager,factory,lookup,entity,manager,factory,return,this,entity,manager,factory
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request);1413848647;Look up the EntityManagerFactory that this filter should use,_taking the current HTTP request as argument._<p>The default implementation delegates to the {@code lookupEntityManagerFactory}_without arguments, caching the EntityManagerFactory reference once obtained._@return the EntityManagerFactory to use_@see #lookupEntityManagerFactory();protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request) {_		if (this.entityManagerFactory == null) {_			this.entityManagerFactory = lookupEntityManagerFactory()__		}_		return this.entityManagerFactory__	};look,up,the,entity,manager,factory,that,this,filter,should,use,taking,the,current,http,request,as,argument,p,the,default,implementation,delegates,to,the,code,lookup,entity,manager,factory,without,arguments,caching,the,entity,manager,factory,reference,once,obtained,return,the,entity,manager,factory,to,use,see,lookup,entity,manager,factory;protected,entity,manager,factory,lookup,entity,manager,factory,http,servlet,request,request,if,this,entity,manager,factory,null,this,entity,manager,factory,lookup,entity,manager,factory,return,this,entity,manager,factory
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request);1427221234;Look up the EntityManagerFactory that this filter should use,_taking the current HTTP request as argument._<p>The default implementation delegates to the {@code lookupEntityManagerFactory}_without arguments, caching the EntityManagerFactory reference once obtained._@return the EntityManagerFactory to use_@see #lookupEntityManagerFactory();protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request) {_		if (this.entityManagerFactory == null) {_			this.entityManagerFactory = lookupEntityManagerFactory()__		}_		return this.entityManagerFactory__	};look,up,the,entity,manager,factory,that,this,filter,should,use,taking,the,current,http,request,as,argument,p,the,default,implementation,delegates,to,the,code,lookup,entity,manager,factory,without,arguments,caching,the,entity,manager,factory,reference,once,obtained,return,the,entity,manager,factory,to,use,see,lookup,entity,manager,factory;protected,entity,manager,factory,lookup,entity,manager,factory,http,servlet,request,request,if,this,entity,manager,factory,null,this,entity,manager,factory,lookup,entity,manager,factory,return,this,entity,manager,factory
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request);1427228652;Look up the EntityManagerFactory that this filter should use,_taking the current HTTP request as argument._<p>The default implementation delegates to the {@code lookupEntityManagerFactory}_without arguments, caching the EntityManagerFactory reference once obtained._@return the EntityManagerFactory to use_@see #lookupEntityManagerFactory();protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request) {_		if (this.entityManagerFactory == null) {_			this.entityManagerFactory = lookupEntityManagerFactory()__		}_		return this.entityManagerFactory__	};look,up,the,entity,manager,factory,that,this,filter,should,use,taking,the,current,http,request,as,argument,p,the,default,implementation,delegates,to,the,code,lookup,entity,manager,factory,without,arguments,caching,the,entity,manager,factory,reference,once,obtained,return,the,entity,manager,factory,to,use,see,lookup,entity,manager,factory;protected,entity,manager,factory,lookup,entity,manager,factory,http,servlet,request,request,if,this,entity,manager,factory,null,this,entity,manager,factory,lookup,entity,manager,factory,return,this,entity,manager,factory
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request);1495868221;Look up the EntityManagerFactory that this filter should use,_taking the current HTTP request as argument._<p>The default implementation delegates to the {@code lookupEntityManagerFactory}_without arguments, caching the EntityManagerFactory reference once obtained._@return the EntityManagerFactory to use_@see #lookupEntityManagerFactory();protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request) {_		if (this.entityManagerFactory == null) {_			this.entityManagerFactory = lookupEntityManagerFactory()__		}_		return this.entityManagerFactory__	};look,up,the,entity,manager,factory,that,this,filter,should,use,taking,the,current,http,request,as,argument,p,the,default,implementation,delegates,to,the,code,lookup,entity,manager,factory,without,arguments,caching,the,entity,manager,factory,reference,once,obtained,return,the,entity,manager,factory,to,use,see,lookup,entity,manager,factory;protected,entity,manager,factory,lookup,entity,manager,factory,http,servlet,request,request,if,this,entity,manager,factory,null,this,entity,manager,factory,lookup,entity,manager,factory,return,this,entity,manager,factory
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request);1496837955;Look up the EntityManagerFactory that this filter should use,_taking the current HTTP request as argument._<p>The default implementation delegates to the {@code lookupEntityManagerFactory}_without arguments, caching the EntityManagerFactory reference once obtained._@return the EntityManagerFactory to use_@see #lookupEntityManagerFactory();protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request) {_		if (this.entityManagerFactory == null) {_			this.entityManagerFactory = lookupEntityManagerFactory()__		}_		return this.entityManagerFactory__	};look,up,the,entity,manager,factory,that,this,filter,should,use,taking,the,current,http,request,as,argument,p,the,default,implementation,delegates,to,the,code,lookup,entity,manager,factory,without,arguments,caching,the,entity,manager,factory,reference,once,obtained,return,the,entity,manager,factory,to,use,see,lookup,entity,manager,factory;protected,entity,manager,factory,lookup,entity,manager,factory,http,servlet,request,request,if,this,entity,manager,factory,null,this,entity,manager,factory,lookup,entity,manager,factory,return,this,entity,manager,factory
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request);1498780456;Look up the EntityManagerFactory that this filter should use,_taking the current HTTP request as argument._<p>The default implementation delegates to the {@code lookupEntityManagerFactory}_without arguments, caching the EntityManagerFactory reference once obtained._@return the EntityManagerFactory to use_@see #lookupEntityManagerFactory();protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request) {_		EntityManagerFactory emf = this.entityManagerFactory__		if (emf == null) {_			emf = lookupEntityManagerFactory()__			this.entityManagerFactory = emf__		}_		return emf__	};look,up,the,entity,manager,factory,that,this,filter,should,use,taking,the,current,http,request,as,argument,p,the,default,implementation,delegates,to,the,code,lookup,entity,manager,factory,without,arguments,caching,the,entity,manager,factory,reference,once,obtained,return,the,entity,manager,factory,to,use,see,lookup,entity,manager,factory;protected,entity,manager,factory,lookup,entity,manager,factory,http,servlet,request,request,entity,manager,factory,emf,this,entity,manager,factory,if,emf,null,emf,lookup,entity,manager,factory,this,entity,manager,factory,emf,return,emf
OpenEntityManagerInViewFilter -> protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request);1500448076;Look up the EntityManagerFactory that this filter should use,_taking the current HTTP request as argument._<p>The default implementation delegates to the {@code lookupEntityManagerFactory}_without arguments, caching the EntityManagerFactory reference once obtained._@return the EntityManagerFactory to use_@see #lookupEntityManagerFactory();protected EntityManagerFactory lookupEntityManagerFactory(HttpServletRequest request) {_		EntityManagerFactory emf = this.entityManagerFactory__		if (emf == null) {_			emf = lookupEntityManagerFactory()__			this.entityManagerFactory = emf__		}_		return emf__	};look,up,the,entity,manager,factory,that,this,filter,should,use,taking,the,current,http,request,as,argument,p,the,default,implementation,delegates,to,the,code,lookup,entity,manager,factory,without,arguments,caching,the,entity,manager,factory,reference,once,obtained,return,the,entity,manager,factory,to,use,see,lookup,entity,manager,factory;protected,entity,manager,factory,lookup,entity,manager,factory,http,servlet,request,request,entity,manager,factory,emf,this,entity,manager,factory,if,emf,null,emf,lookup,entity,manager,factory,this,entity,manager,factory,emf,return,emf
OpenEntityManagerInViewFilter -> @Nullable 	protected String getPersistenceUnitName();1495868221;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;@Nullable_	protected String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;nullable,protected,string,get,persistence,unit,name,return,this,persistence,unit,name
OpenEntityManagerInViewFilter -> @Nullable 	protected String getPersistenceUnitName();1496837955;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;@Nullable_	protected String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;nullable,protected,string,get,persistence,unit,name,return,this,persistence,unit,name
OpenEntityManagerInViewFilter -> @Nullable 	protected String getPersistenceUnitName();1498780456;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;@Nullable_	protected String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;nullable,protected,string,get,persistence,unit,name,return,this,persistence,unit,name
OpenEntityManagerInViewFilter -> @Nullable 	protected String getPersistenceUnitName();1500448076;Return the name of the persistence unit to access the EntityManagerFactory for, if any.;@Nullable_	protected String getPersistenceUnitName() {_		return this.persistenceUnitName__	};return,the,name,of,the,persistence,unit,to,access,the,entity,manager,factory,for,if,any;nullable,protected,string,get,persistence,unit,name,return,this,persistence,unit,name
OpenEntityManagerInViewFilter -> @Nullable 	protected String getEntityManagerFactoryBeanName();1498780456;Return the bean name of the EntityManagerFactory to fetch from Spring's_root application context.;@Nullable_	protected String getEntityManagerFactoryBeanName() {_		return this.entityManagerFactoryBeanName__	};return,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context;nullable,protected,string,get,entity,manager,factory,bean,name,return,this,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> @Nullable 	protected String getEntityManagerFactoryBeanName();1500448076;Return the bean name of the EntityManagerFactory to fetch from Spring's_root application context.;@Nullable_	protected String getEntityManagerFactoryBeanName() {_		return this.entityManagerFactoryBeanName__	};return,the,bean,name,of,the,entity,manager,factory,to,fetch,from,spring,s,root,application,context;nullable,protected,string,get,entity,manager,factory,bean,name,return,this,entity,manager,factory,bean,name
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldFilterAsyncDispatches();1345223392;The default value is "true" so that the filter may re-bind the opened_{@code EntityManager} to each asynchronously dispatched thread and postpone_closing it until the very last asynchronous dispatch.;@Override_	protected boolean shouldFilterAsyncDispatches() {_		return true__	};the,default,value,is,true,so,that,the,filter,may,re,bind,the,opened,code,entity,manager,to,each,asynchronously,dispatched,thread,and,postpone,closing,it,until,the,very,last,asynchronous,dispatch;override,protected,boolean,should,filter,async,dispatches,return,true
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldFilterAsyncDispatches();1347908336;The default value is "true" so that the filter may re-bind the opened_{@code EntityManager} to each asynchronously dispatched thread and postpone_closing it until the very last asynchronous dispatch.;@Override_	protected boolean shouldFilterAsyncDispatches() {_		return true__	};the,default,value,is,true,so,that,the,filter,may,re,bind,the,opened,code,entity,manager,to,each,asynchronously,dispatched,thread,and,postpone,closing,it,until,the,very,last,asynchronous,dispatch;override,protected,boolean,should,filter,async,dispatches,return,true
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldFilterAsyncDispatches();1348061150;The default value is "true" so that the filter may re-bind the opened_{@code EntityManager} to each asynchronously dispatched thread and postpone_closing it until the very last asynchronous dispatch.;@Override_	protected boolean shouldFilterAsyncDispatches() {_		return true__	};the,default,value,is,true,so,that,the,filter,may,re,bind,the,opened,code,entity,manager,to,each,asynchronously,dispatched,thread,and,postpone,closing,it,until,the,very,last,asynchronous,dispatch;override,protected,boolean,should,filter,async,dispatches,return,true
OpenEntityManagerInViewFilter -> @Override 	protected boolean shouldFilterAsyncDispatches();1351289067;The default value is "true" so that the filter may re-bind the opened_{@code EntityManager} to each asynchronously dispatched thread and postpone_closing it until the very last asynchronous dispatch.;@Override_	protected boolean shouldFilterAsyncDispatches() {_		return true__	};the,default,value,is,true,so,that,the,filter,may,re,bind,the,opened,code,entity,manager,to,each,asynchronously,dispatched,thread,and,postpone,closing,it,until,the,very,last,asynchronous,dispatch;override,protected,boolean,should,filter,async,dispatches,return,true
