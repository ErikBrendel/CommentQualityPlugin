commented;modifiers;parameterAmount;loc;comment;code
true;;0;1;/**  * Return the underlying EntityManager that this proxy will delegate to.  * <p>In case of an extended EntityManager, this will be the associated  * raw EntityManager.  * <p>In case of a shared ("transactional") EntityManager, this will be  * the raw EntityManager that is currently associated with the transaction.  * Outside of a transaction, an IllegalStateException will be thrown.  * @return the underlying raw EntityManager (never {@code null})  * @throws IllegalStateException if no underlying EntityManager is available  */ ;/**  * Return the underlying EntityManager that this proxy will delegate to.  * <p>In case of an extended EntityManager, this will be the associated  * raw EntityManager.  * <p>In case of a shared ("transactional") EntityManager, this will be  * the raw EntityManager that is currently associated with the transaction.  * Outside of a transaction, an IllegalStateException will be thrown.  * @return the underlying raw EntityManager (never {@code null})  * @throws IllegalStateException if no underlying EntityManager is available  */ EntityManager getTargetEntityManager() throws IllegalStateException.
