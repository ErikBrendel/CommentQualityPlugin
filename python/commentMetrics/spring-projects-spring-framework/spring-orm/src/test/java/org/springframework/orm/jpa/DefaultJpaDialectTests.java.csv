commented;modifiers;parameterAmount;loc;comment;code
false;public;0;13;;@Test public void testDefaultTransactionDefinition() throws Exception {     DefaultTransactionDefinition definition = new DefaultTransactionDefinition().     definition.setIsolationLevel(TransactionDefinition.ISOLATION_REPEATABLE_READ).     try {         dialect.beginTransaction(null, definition).         fail("expected exception").     } catch (TransactionException e) {     // ok     } }
false;public;0;10;;@Test public void testDefaultBeginTransaction() throws Exception {     TransactionDefinition definition = new DefaultTransactionDefinition().     EntityManager entityManager = mock(EntityManager.class).     EntityTransaction entityTx = mock(EntityTransaction.class).     given(entityManager.getTransaction()).willReturn(entityTx).     dialect.beginTransaction(entityManager, definition). }
false;public;0;7;;@Test public void testTranslateException() {     OptimisticLockException ex = new OptimisticLockException().     assertEquals(EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(ex).getCause(), dialect.translateExceptionIfPossible(ex).getCause()). }
