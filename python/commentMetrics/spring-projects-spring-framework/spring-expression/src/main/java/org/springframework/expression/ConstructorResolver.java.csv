# id;timestamp;commentText;codeText;commentWords;codeWords
ConstructorResolver -> ConstructorExecutor resolve(EvaluationContext context, String typeName, List<TypeDescriptor> argumentTypes) 			throws AccessException_;1328020251;Within the supplied context determine a suitable constructor on the supplied type that can handle the_specified arguments. Return a ConstructorExecutor that can be used to invoke that constructor_(or <code>null</code> if no constructor could be found)._@param context the current evaluation context_@param typeName the type upon which to look for the constructor_@param argumentTypes the arguments that the constructor must be able to handle_@return a ConstructorExecutor that can invoke the constructor, or null if non found;ConstructorExecutor resolve(EvaluationContext context, String typeName, List<TypeDescriptor> argumentTypes)_			throws AccessException_;within,the,supplied,context,determine,a,suitable,constructor,on,the,supplied,type,that,can,handle,the,specified,arguments,return,a,constructor,executor,that,can,be,used,to,invoke,that,constructor,or,code,null,code,if,no,constructor,could,be,found,param,context,the,current,evaluation,context,param,type,name,the,type,upon,which,to,look,for,the,constructor,param,argument,types,the,arguments,that,the,constructor,must,be,able,to,handle,return,a,constructor,executor,that,can,invoke,the,constructor,or,null,if,non,found;constructor,executor,resolve,evaluation,context,context,string,type,name,list,type,descriptor,argument,types,throws,access,exception
ConstructorResolver -> ConstructorExecutor resolve(EvaluationContext context, String typeName, List<TypeDescriptor> argumentTypes) 			throws AccessException_;1356735495;Within the supplied context determine a suitable constructor on the supplied type that can handle the_specified arguments. Return a ConstructorExecutor that can be used to invoke that constructor_(or {@code null} if no constructor could be found)._@param context the current evaluation context_@param typeName the type upon which to look for the constructor_@param argumentTypes the arguments that the constructor must be able to handle_@return a ConstructorExecutor that can invoke the constructor, or null if non found;ConstructorExecutor resolve(EvaluationContext context, String typeName, List<TypeDescriptor> argumentTypes)_			throws AccessException_;within,the,supplied,context,determine,a,suitable,constructor,on,the,supplied,type,that,can,handle,the,specified,arguments,return,a,constructor,executor,that,can,be,used,to,invoke,that,constructor,or,code,null,if,no,constructor,could,be,found,param,context,the,current,evaluation,context,param,type,name,the,type,upon,which,to,look,for,the,constructor,param,argument,types,the,arguments,that,the,constructor,must,be,able,to,handle,return,a,constructor,executor,that,can,invoke,the,constructor,or,null,if,non,found;constructor,executor,resolve,evaluation,context,context,string,type,name,list,type,descriptor,argument,types,throws,access,exception
ConstructorResolver -> ConstructorExecutor resolve(EvaluationContext context, String typeName, List<TypeDescriptor> argumentTypes) 			throws AccessException_;1372363092;Within the supplied context determine a suitable constructor on the supplied type_that can handle the specified arguments. Return a ConstructorExecutor that can be_used to invoke that constructor (or {@code null} if no constructor could be found)._@param context the current evaluation context_@param typeName the type upon which to look for the constructor_@param argumentTypes the arguments that the constructor must be able to handle_@return a ConstructorExecutor that can invoke the constructor, or null if non found;ConstructorExecutor resolve(EvaluationContext context, String typeName, List<TypeDescriptor> argumentTypes)_			throws AccessException_;within,the,supplied,context,determine,a,suitable,constructor,on,the,supplied,type,that,can,handle,the,specified,arguments,return,a,constructor,executor,that,can,be,used,to,invoke,that,constructor,or,code,null,if,no,constructor,could,be,found,param,context,the,current,evaluation,context,param,type,name,the,type,upon,which,to,look,for,the,constructor,param,argument,types,the,arguments,that,the,constructor,must,be,able,to,handle,return,a,constructor,executor,that,can,invoke,the,constructor,or,null,if,non,found;constructor,executor,resolve,evaluation,context,context,string,type,name,list,type,descriptor,argument,types,throws,access,exception
ConstructorResolver -> ConstructorExecutor resolve(EvaluationContext context, String typeName, List<TypeDescriptor> argumentTypes) 			throws AccessException_;1391877039;Within the supplied context determine a suitable constructor on the supplied type_that can handle the specified arguments. Return a ConstructorExecutor that can be_used to invoke that constructor (or {@code null} if no constructor could be found)._@param context the current evaluation context_@param typeName the type upon which to look for the constructor_@param argumentTypes the arguments that the constructor must be able to handle_@return a ConstructorExecutor that can invoke the constructor, or null if non found;ConstructorExecutor resolve(EvaluationContext context, String typeName, List<TypeDescriptor> argumentTypes)_			throws AccessException_;within,the,supplied,context,determine,a,suitable,constructor,on,the,supplied,type,that,can,handle,the,specified,arguments,return,a,constructor,executor,that,can,be,used,to,invoke,that,constructor,or,code,null,if,no,constructor,could,be,found,param,context,the,current,evaluation,context,param,type,name,the,type,upon,which,to,look,for,the,constructor,param,argument,types,the,arguments,that,the,constructor,must,be,able,to,handle,return,a,constructor,executor,that,can,invoke,the,constructor,or,null,if,non,found;constructor,executor,resolve,evaluation,context,context,string,type,name,list,type,descriptor,argument,types,throws,access,exception
ConstructorResolver -> ConstructorExecutor resolve(EvaluationContext context, String typeName, List<TypeDescriptor> argumentTypes) 			throws AccessException_;1467808333;Within the supplied context determine a suitable constructor on the supplied type_that can handle the specified arguments. Return a ConstructorExecutor that can be_used to invoke that constructor (or {@code null} if no constructor could be found)._@param context the current evaluation context_@param typeName the type upon which to look for the constructor_@param argumentTypes the arguments that the constructor must be able to handle_@return a ConstructorExecutor that can invoke the constructor, or null if non found;ConstructorExecutor resolve(EvaluationContext context, String typeName, List<TypeDescriptor> argumentTypes)_			throws AccessException_;within,the,supplied,context,determine,a,suitable,constructor,on,the,supplied,type,that,can,handle,the,specified,arguments,return,a,constructor,executor,that,can,be,used,to,invoke,that,constructor,or,code,null,if,no,constructor,could,be,found,param,context,the,current,evaluation,context,param,type,name,the,type,upon,which,to,look,for,the,constructor,param,argument,types,the,arguments,that,the,constructor,must,be,able,to,handle,return,a,constructor,executor,that,can,invoke,the,constructor,or,null,if,non,found;constructor,executor,resolve,evaluation,context,context,string,type,name,list,type,descriptor,argument,types,throws,access,exception
