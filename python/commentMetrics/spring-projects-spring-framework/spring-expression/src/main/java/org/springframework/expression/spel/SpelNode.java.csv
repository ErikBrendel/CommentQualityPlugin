# id;timestamp;commentText;codeText;commentWords;codeWords
SpelNode -> SpelNode getChild(int index)_;1328020251;Helper method that returns a SpelNode rather than an Antlr Tree node._@return the child node cast to a SpelNode;SpelNode getChild(int index)_;helper,method,that,returns,a,spel,node,rather,than,an,antlr,tree,node,return,the,child,node,cast,to,a,spel,node;spel,node,get,child,int,index
SpelNode -> SpelNode getChild(int index)_;1335774711;Helper method that returns a SpelNode rather than an Antlr Tree node._@return the child node cast to a SpelNode;SpelNode getChild(int index)_;helper,method,that,returns,a,spel,node,rather,than,an,antlr,tree,node,return,the,child,node,cast,to,a,spel,node;spel,node,get,child,int,index
SpelNode -> SpelNode getChild(int index)_;1372363092;Helper method that returns a SpelNode rather than an Antlr Tree node._@return the child node cast to a SpelNode;SpelNode getChild(int index)_;helper,method,that,returns,a,spel,node,rather,than,an,antlr,tree,node,return,the,child,node,cast,to,a,spel,node;spel,node,get,child,int,index
SpelNode -> SpelNode getChild(int index)_;1412630983;Helper method that returns a SpelNode rather than an Antlr Tree node._@return the child node cast to a SpelNode;SpelNode getChild(int index)_;helper,method,that,returns,a,spel,node,rather,than,an,antlr,tree,node,return,the,child,node,cast,to,a,spel,node;spel,node,get,child,int,index
SpelNode -> SpelNode getChild(int index)_;1495868221;Helper method that returns a SpelNode rather than an Antlr Tree node._@return the child node cast to a SpelNode;SpelNode getChild(int index)_;helper,method,that,returns,a,spel,node,rather,than,an,antlr,tree,node,return,the,child,node,cast,to,a,spel,node;spel,node,get,child,int,index
SpelNode -> SpelNode getChild(int index)_;1496837955;Helper method that returns a SpelNode rather than an Antlr Tree node._@return the child node cast to a SpelNode;SpelNode getChild(int index)_;helper,method,that,returns,a,spel,node,rather,than,an,antlr,tree,node,return,the,child,node,cast,to,a,spel,node;spel,node,get,child,int,index
SpelNode -> SpelNode getChild(int index)_;1530174524;Helper method that returns a SpelNode rather than an Antlr Tree node._@return the child node cast to a SpelNode;SpelNode getChild(int index)_;helper,method,that,returns,a,spel,node,rather,than,an,antlr,tree,node,return,the,child,node,cast,to,a,spel,node;spel,node,get,child,int,index
SpelNode -> @Nullable 	Object getValue(ExpressionState expressionState) throws EvaluationException_;1496837955;Evaluate the expression node in the context of the supplied expression state_and return the value._@param expressionState the current expression state (includes the context)_@return the value of this node evaluated against the specified state;@Nullable_	Object getValue(ExpressionState expressionState) throws EvaluationException_;evaluate,the,expression,node,in,the,context,of,the,supplied,expression,state,and,return,the,value,param,expression,state,the,current,expression,state,includes,the,context,return,the,value,of,this,node,evaluated,against,the,specified,state;nullable,object,get,value,expression,state,expression,state,throws,evaluation,exception
SpelNode -> @Nullable 	Object getValue(ExpressionState expressionState) throws EvaluationException_;1530174524;Evaluate the expression node in the context of the supplied expression state_and return the value._@param expressionState the current expression state (includes the context)_@return the value of this node evaluated against the specified state;@Nullable_	Object getValue(ExpressionState expressionState) throws EvaluationException_;evaluate,the,expression,node,in,the,context,of,the,supplied,expression,state,and,return,the,value,param,expression,state,the,current,expression,state,includes,the,context,return,the,value,of,this,node,evaluated,against,the,specified,state;nullable,object,get,value,expression,state,expression,state,throws,evaluation,exception
SpelNode -> int getEndPosition()_;1328020251;@return the end position of this Ast node in the expression string;int getEndPosition()_;return,the,end,position,of,this,ast,node,in,the,expression,string;int,get,end,position
SpelNode -> int getEndPosition()_;1335774711;@return the end position of this Ast node in the expression string;int getEndPosition()_;return,the,end,position,of,this,ast,node,in,the,expression,string;int,get,end,position
SpelNode -> int getEndPosition()_;1372363092;@return the end position of this Ast node in the expression string;int getEndPosition()_;return,the,end,position,of,this,ast,node,in,the,expression,string;int,get,end,position
SpelNode -> int getEndPosition()_;1412630983;@return the end position of this Ast node in the expression string;int getEndPosition()_;return,the,end,position,of,this,ast,node,in,the,expression,string;int,get,end,position
SpelNode -> int getEndPosition()_;1495868221;@return the end position of this Ast node in the expression string;int getEndPosition()_;return,the,end,position,of,this,ast,node,in,the,expression,string;int,get,end,position
SpelNode -> int getEndPosition()_;1496837955;@return the end position of this Ast node in the expression string;int getEndPosition()_;return,the,end,position,of,this,ast,node,in,the,expression,string;int,get,end,position
SpelNode -> int getEndPosition()_;1530174524;Return the end position of this AST node in the expression string._@return the end position;int getEndPosition()_;return,the,end,position,of,this,ast,node,in,the,expression,string,return,the,end,position;int,get,end,position
SpelNode -> String toStringAST()_;1328020251;@return the string form of this AST node;String toStringAST()_;return,the,string,form,of,this,ast,node;string,to,string,ast
SpelNode -> String toStringAST()_;1335774711;@return the string form of this AST node;String toStringAST()_;return,the,string,form,of,this,ast,node;string,to,string,ast
SpelNode -> String toStringAST()_;1372363092;@return the string form of this AST node;String toStringAST()_;return,the,string,form,of,this,ast,node;string,to,string,ast
SpelNode -> String toStringAST()_;1412630983;@return the string form of this AST node;String toStringAST()_;return,the,string,form,of,this,ast,node;string,to,string,ast
SpelNode -> String toStringAST()_;1495868221;@return the string form of this AST node;String toStringAST()_;return,the,string,form,of,this,ast,node;string,to,string,ast
SpelNode -> String toStringAST()_;1496837955;@return the string form of this AST node;String toStringAST()_;return,the,string,form,of,this,ast,node;string,to,string,ast
SpelNode -> String toStringAST()_;1530174524;Return the string form the this AST node._@return the string form;String toStringAST()_;return,the,string,form,the,this,ast,node,return,the,string,form;string,to,string,ast
SpelNode -> TypedValue getTypedValue(ExpressionState expressionState) throws EvaluationException_;1328020251;Evaluate the expression node in the context of the supplied expression state and return the typed value._@param expressionState the current expression state (includes the context)_@return the type value of this node evaluated against the specified state;TypedValue getTypedValue(ExpressionState expressionState) throws EvaluationException_;evaluate,the,expression,node,in,the,context,of,the,supplied,expression,state,and,return,the,typed,value,param,expression,state,the,current,expression,state,includes,the,context,return,the,type,value,of,this,node,evaluated,against,the,specified,state;typed,value,get,typed,value,expression,state,expression,state,throws,evaluation,exception
SpelNode -> TypedValue getTypedValue(ExpressionState expressionState) throws EvaluationException_;1335774711;Evaluate the expression node in the context of the supplied expression state and return the typed value._@param expressionState the current expression state (includes the context)_@return the type value of this node evaluated against the specified state;TypedValue getTypedValue(ExpressionState expressionState) throws EvaluationException_;evaluate,the,expression,node,in,the,context,of,the,supplied,expression,state,and,return,the,typed,value,param,expression,state,the,current,expression,state,includes,the,context,return,the,type,value,of,this,node,evaluated,against,the,specified,state;typed,value,get,typed,value,expression,state,expression,state,throws,evaluation,exception
SpelNode -> TypedValue getTypedValue(ExpressionState expressionState) throws EvaluationException_;1372363092;Evaluate the expression node in the context of the supplied expression state and_return the typed value._@param expressionState the current expression state (includes the context)_@return the type value of this node evaluated against the specified state;TypedValue getTypedValue(ExpressionState expressionState) throws EvaluationException_;evaluate,the,expression,node,in,the,context,of,the,supplied,expression,state,and,return,the,typed,value,param,expression,state,the,current,expression,state,includes,the,context,return,the,type,value,of,this,node,evaluated,against,the,specified,state;typed,value,get,typed,value,expression,state,expression,state,throws,evaluation,exception
SpelNode -> TypedValue getTypedValue(ExpressionState expressionState) throws EvaluationException_;1412630983;Evaluate the expression node in the context of the supplied expression state_and return the typed value._@param expressionState the current expression state (includes the context)_@return the type value of this node evaluated against the specified state;TypedValue getTypedValue(ExpressionState expressionState) throws EvaluationException_;evaluate,the,expression,node,in,the,context,of,the,supplied,expression,state,and,return,the,typed,value,param,expression,state,the,current,expression,state,includes,the,context,return,the,type,value,of,this,node,evaluated,against,the,specified,state;typed,value,get,typed,value,expression,state,expression,state,throws,evaluation,exception
SpelNode -> TypedValue getTypedValue(ExpressionState expressionState) throws EvaluationException_;1495868221;Evaluate the expression node in the context of the supplied expression state_and return the typed value._@param expressionState the current expression state (includes the context)_@return the type value of this node evaluated against the specified state;TypedValue getTypedValue(ExpressionState expressionState) throws EvaluationException_;evaluate,the,expression,node,in,the,context,of,the,supplied,expression,state,and,return,the,typed,value,param,expression,state,the,current,expression,state,includes,the,context,return,the,type,value,of,this,node,evaluated,against,the,specified,state;typed,value,get,typed,value,expression,state,expression,state,throws,evaluation,exception
SpelNode -> TypedValue getTypedValue(ExpressionState expressionState) throws EvaluationException_;1496837955;Evaluate the expression node in the context of the supplied expression state_and return the typed value._@param expressionState the current expression state (includes the context)_@return the type value of this node evaluated against the specified state;TypedValue getTypedValue(ExpressionState expressionState) throws EvaluationException_;evaluate,the,expression,node,in,the,context,of,the,supplied,expression,state,and,return,the,typed,value,param,expression,state,the,current,expression,state,includes,the,context,return,the,type,value,of,this,node,evaluated,against,the,specified,state;typed,value,get,typed,value,expression,state,expression,state,throws,evaluation,exception
SpelNode -> TypedValue getTypedValue(ExpressionState expressionState) throws EvaluationException_;1530174524;Evaluate the expression node in the context of the supplied expression state_and return the typed value._@param expressionState the current expression state (includes the context)_@return the type value of this node evaluated against the specified state;TypedValue getTypedValue(ExpressionState expressionState) throws EvaluationException_;evaluate,the,expression,node,in,the,context,of,the,supplied,expression,state,and,return,the,typed,value,param,expression,state,the,current,expression,state,includes,the,context,return,the,type,value,of,this,node,evaluated,against,the,specified,state;typed,value,get,typed,value,expression,state,expression,state,throws,evaluation,exception
SpelNode -> Object getValue(ExpressionState expressionState) throws EvaluationException_;1328020251;Evaluate the expression node in the context of the supplied expression state and return the value._@param expressionState the current expression state (includes the context)_@return the value of this node evaluated against the specified state;Object getValue(ExpressionState expressionState) throws EvaluationException_;evaluate,the,expression,node,in,the,context,of,the,supplied,expression,state,and,return,the,value,param,expression,state,the,current,expression,state,includes,the,context,return,the,value,of,this,node,evaluated,against,the,specified,state;object,get,value,expression,state,expression,state,throws,evaluation,exception
SpelNode -> Object getValue(ExpressionState expressionState) throws EvaluationException_;1335774711;Evaluate the expression node in the context of the supplied expression state and return the value._@param expressionState the current expression state (includes the context)_@return the value of this node evaluated against the specified state;Object getValue(ExpressionState expressionState) throws EvaluationException_;evaluate,the,expression,node,in,the,context,of,the,supplied,expression,state,and,return,the,value,param,expression,state,the,current,expression,state,includes,the,context,return,the,value,of,this,node,evaluated,against,the,specified,state;object,get,value,expression,state,expression,state,throws,evaluation,exception
SpelNode -> Object getValue(ExpressionState expressionState) throws EvaluationException_;1372363092;Evaluate the expression node in the context of the supplied expression state and_return the value._@param expressionState the current expression state (includes the context)_@return the value of this node evaluated against the specified state;Object getValue(ExpressionState expressionState) throws EvaluationException_;evaluate,the,expression,node,in,the,context,of,the,supplied,expression,state,and,return,the,value,param,expression,state,the,current,expression,state,includes,the,context,return,the,value,of,this,node,evaluated,against,the,specified,state;object,get,value,expression,state,expression,state,throws,evaluation,exception
SpelNode -> Object getValue(ExpressionState expressionState) throws EvaluationException_;1412630983;Evaluate the expression node in the context of the supplied expression state_and return the value._@param expressionState the current expression state (includes the context)_@return the value of this node evaluated against the specified state;Object getValue(ExpressionState expressionState) throws EvaluationException_;evaluate,the,expression,node,in,the,context,of,the,supplied,expression,state,and,return,the,value,param,expression,state,the,current,expression,state,includes,the,context,return,the,value,of,this,node,evaluated,against,the,specified,state;object,get,value,expression,state,expression,state,throws,evaluation,exception
SpelNode -> Object getValue(ExpressionState expressionState) throws EvaluationException_;1495868221;Evaluate the expression node in the context of the supplied expression state_and return the value._@param expressionState the current expression state (includes the context)_@return the value of this node evaluated against the specified state;Object getValue(ExpressionState expressionState) throws EvaluationException_;evaluate,the,expression,node,in,the,context,of,the,supplied,expression,state,and,return,the,value,param,expression,state,the,current,expression,state,includes,the,context,return,the,value,of,this,node,evaluated,against,the,specified,state;object,get,value,expression,state,expression,state,throws,evaluation,exception
SpelNode -> int getStartPosition()_;1328020251;@return the start position of this Ast node in the expression string;int getStartPosition()_;return,the,start,position,of,this,ast,node,in,the,expression,string;int,get,start,position
SpelNode -> int getStartPosition()_;1335774711;@return the start position of this Ast node in the expression string;int getStartPosition()_;return,the,start,position,of,this,ast,node,in,the,expression,string;int,get,start,position
SpelNode -> int getStartPosition()_;1372363092;@return the start position of this Ast node in the expression string;int getStartPosition()_;return,the,start,position,of,this,ast,node,in,the,expression,string;int,get,start,position
SpelNode -> int getStartPosition()_;1412630983;@return the start position of this Ast node in the expression string;int getStartPosition()_;return,the,start,position,of,this,ast,node,in,the,expression,string;int,get,start,position
SpelNode -> int getStartPosition()_;1495868221;@return the start position of this Ast node in the expression string;int getStartPosition()_;return,the,start,position,of,this,ast,node,in,the,expression,string;int,get,start,position
SpelNode -> int getStartPosition()_;1496837955;@return the start position of this Ast node in the expression string;int getStartPosition()_;return,the,start,position,of,this,ast,node,in,the,expression,string;int,get,start,position
SpelNode -> int getStartPosition()_;1530174524;Return the start position of this AST node in the expression string._@return the start position;int getStartPosition()_;return,the,start,position,of,this,ast,node,in,the,expression,string,return,the,start,position;int,get,start,position
SpelNode -> int getChildCount()_;1328020251;@return the number of children under this node;int getChildCount()_;return,the,number,of,children,under,this,node;int,get,child,count
SpelNode -> int getChildCount()_;1335774711;@return the number of children under this node;int getChildCount()_;return,the,number,of,children,under,this,node;int,get,child,count
SpelNode -> int getChildCount()_;1372363092;@return the number of children under this node;int getChildCount()_;return,the,number,of,children,under,this,node;int,get,child,count
SpelNode -> int getChildCount()_;1412630983;@return the number of children under this node;int getChildCount()_;return,the,number,of,children,under,this,node;int,get,child,count
SpelNode -> int getChildCount()_;1495868221;@return the number of children under this node;int getChildCount()_;return,the,number,of,children,under,this,node;int,get,child,count
SpelNode -> int getChildCount()_;1496837955;@return the number of children under this node;int getChildCount()_;return,the,number,of,children,under,this,node;int,get,child,count
SpelNode -> int getChildCount()_;1530174524;Return the number of children under this node._@return the child count;int getChildCount()_;return,the,number,of,children,under,this,node,return,the,child,count;int,get,child,count
SpelNode -> @Nullable 	Class<?> getObjectClass(@Nullable Object obj)_;1496837955;Determine the class of the object passed in, unless it is already a class object._@param obj the object that the caller wants the class of_@return the class of the object if it is not already a class object,_or {@code null} if the object is {@code null};@Nullable_	Class<?> getObjectClass(@Nullable Object obj)_;determine,the,class,of,the,object,passed,in,unless,it,is,already,a,class,object,param,obj,the,object,that,the,caller,wants,the,class,of,return,the,class,of,the,object,if,it,is,not,already,a,class,object,or,code,null,if,the,object,is,code,null;nullable,class,get,object,class,nullable,object,obj
SpelNode -> @Nullable 	Class<?> getObjectClass(@Nullable Object obj)_;1530174524;Determine the class of the object passed in, unless it is already a class object._@param obj the object that the caller wants the class of_@return the class of the object if it is not already a class object,_or {@code null} if the object is {@code null};@Nullable_	Class<?> getObjectClass(@Nullable Object obj)_;determine,the,class,of,the,object,passed,in,unless,it,is,already,a,class,object,param,obj,the,object,that,the,caller,wants,the,class,of,return,the,class,of,the,object,if,it,is,not,already,a,class,object,or,code,null,if,the,object,is,code,null;nullable,class,get,object,class,nullable,object,obj
SpelNode -> void setValue(ExpressionState expressionState, Object newValue) throws EvaluationException_;1328020251;Evaluate the expression to a node and then set the new value on that node. For example, if the expression_evaluates to a property reference then the property will be set to the new value._@param expressionState the current expression state (includes the context)_@param newValue the new value_@throws EvaluationException if any problem occurs evaluating the expression or setting the new value;void setValue(ExpressionState expressionState, Object newValue) throws EvaluationException_;evaluate,the,expression,to,a,node,and,then,set,the,new,value,on,that,node,for,example,if,the,expression,evaluates,to,a,property,reference,then,the,property,will,be,set,to,the,new,value,param,expression,state,the,current,expression,state,includes,the,context,param,new,value,the,new,value,throws,evaluation,exception,if,any,problem,occurs,evaluating,the,expression,or,setting,the,new,value;void,set,value,expression,state,expression,state,object,new,value,throws,evaluation,exception
SpelNode -> void setValue(ExpressionState expressionState, Object newValue) throws EvaluationException_;1335774711;Evaluate the expression to a node and then set the new value on that node. For example, if the expression_evaluates to a property reference then the property will be set to the new value._@param expressionState the current expression state (includes the context)_@param newValue the new value_@throws EvaluationException if any problem occurs evaluating the expression or setting the new value;void setValue(ExpressionState expressionState, Object newValue) throws EvaluationException_;evaluate,the,expression,to,a,node,and,then,set,the,new,value,on,that,node,for,example,if,the,expression,evaluates,to,a,property,reference,then,the,property,will,be,set,to,the,new,value,param,expression,state,the,current,expression,state,includes,the,context,param,new,value,the,new,value,throws,evaluation,exception,if,any,problem,occurs,evaluating,the,expression,or,setting,the,new,value;void,set,value,expression,state,expression,state,object,new,value,throws,evaluation,exception
SpelNode -> void setValue(ExpressionState expressionState, Object newValue) throws EvaluationException_;1372363092;Evaluate the expression to a node and then set the new value on that node. For_example, if the expression evaluates to a property reference then the property will_be set to the new value._@param expressionState the current expression state (includes the context)_@param newValue the new value_@throws EvaluationException if any problem occurs evaluating the expression or_setting the new value;void setValue(ExpressionState expressionState, Object newValue) throws EvaluationException_;evaluate,the,expression,to,a,node,and,then,set,the,new,value,on,that,node,for,example,if,the,expression,evaluates,to,a,property,reference,then,the,property,will,be,set,to,the,new,value,param,expression,state,the,current,expression,state,includes,the,context,param,new,value,the,new,value,throws,evaluation,exception,if,any,problem,occurs,evaluating,the,expression,or,setting,the,new,value;void,set,value,expression,state,expression,state,object,new,value,throws,evaluation,exception
SpelNode -> void setValue(ExpressionState expressionState, Object newValue) throws EvaluationException_;1412630983;Evaluate the expression to a node and then set the new value on that node._For example, if the expression evaluates to a property reference, then the_property will be set to the new value._@param expressionState the current expression state (includes the context)_@param newValue the new value_@throws EvaluationException if any problem occurs evaluating the expression or_setting the new value;void setValue(ExpressionState expressionState, Object newValue) throws EvaluationException_;evaluate,the,expression,to,a,node,and,then,set,the,new,value,on,that,node,for,example,if,the,expression,evaluates,to,a,property,reference,then,the,property,will,be,set,to,the,new,value,param,expression,state,the,current,expression,state,includes,the,context,param,new,value,the,new,value,throws,evaluation,exception,if,any,problem,occurs,evaluating,the,expression,or,setting,the,new,value;void,set,value,expression,state,expression,state,object,new,value,throws,evaluation,exception
SpelNode -> void setValue(ExpressionState expressionState, Object newValue) throws EvaluationException_;1495868221;Evaluate the expression to a node and then set the new value on that node._For example, if the expression evaluates to a property reference, then the_property will be set to the new value._@param expressionState the current expression state (includes the context)_@param newValue the new value_@throws EvaluationException if any problem occurs evaluating the expression or_setting the new value;void setValue(ExpressionState expressionState, Object newValue) throws EvaluationException_;evaluate,the,expression,to,a,node,and,then,set,the,new,value,on,that,node,for,example,if,the,expression,evaluates,to,a,property,reference,then,the,property,will,be,set,to,the,new,value,param,expression,state,the,current,expression,state,includes,the,context,param,new,value,the,new,value,throws,evaluation,exception,if,any,problem,occurs,evaluating,the,expression,or,setting,the,new,value;void,set,value,expression,state,expression,state,object,new,value,throws,evaluation,exception
SpelNode -> void setValue(ExpressionState expressionState, @Nullable Object newValue) throws EvaluationException_;1496837955;Evaluate the expression to a node and then set the new value on that node._For example, if the expression evaluates to a property reference, then the_property will be set to the new value._@param expressionState the current expression state (includes the context)_@param newValue the new value_@throws EvaluationException if any problem occurs evaluating the expression or_setting the new value;void setValue(ExpressionState expressionState, @Nullable Object newValue) throws EvaluationException_;evaluate,the,expression,to,a,node,and,then,set,the,new,value,on,that,node,for,example,if,the,expression,evaluates,to,a,property,reference,then,the,property,will,be,set,to,the,new,value,param,expression,state,the,current,expression,state,includes,the,context,param,new,value,the,new,value,throws,evaluation,exception,if,any,problem,occurs,evaluating,the,expression,or,setting,the,new,value;void,set,value,expression,state,expression,state,nullable,object,new,value,throws,evaluation,exception
SpelNode -> void setValue(ExpressionState expressionState, @Nullable Object newValue) throws EvaluationException_;1530174524;Evaluate the expression to a node and then set the new value on that node._For example, if the expression evaluates to a property reference, then the_property will be set to the new value._@param expressionState the current expression state (includes the context)_@param newValue the new value_@throws EvaluationException if any problem occurs evaluating the expression or_setting the new value;void setValue(ExpressionState expressionState, @Nullable Object newValue) throws EvaluationException_;evaluate,the,expression,to,a,node,and,then,set,the,new,value,on,that,node,for,example,if,the,expression,evaluates,to,a,property,reference,then,the,property,will,be,set,to,the,new,value,param,expression,state,the,current,expression,state,includes,the,context,param,new,value,the,new,value,throws,evaluation,exception,if,any,problem,occurs,evaluating,the,expression,or,setting,the,new,value;void,set,value,expression,state,expression,state,nullable,object,new,value,throws,evaluation,exception
SpelNode -> boolean isWritable(ExpressionState expressionState) throws EvaluationException_;1328020251;Determine if this expression node will support a setValue() call.__@param expressionState the current expression state (includes the context)_@return true if the expression node will allow setValue()_@throws EvaluationException if something went wrong trying to determine if the node supports writing;boolean isWritable(ExpressionState expressionState) throws EvaluationException_;determine,if,this,expression,node,will,support,a,set,value,call,param,expression,state,the,current,expression,state,includes,the,context,return,true,if,the,expression,node,will,allow,set,value,throws,evaluation,exception,if,something,went,wrong,trying,to,determine,if,the,node,supports,writing;boolean,is,writable,expression,state,expression,state,throws,evaluation,exception
SpelNode -> boolean isWritable(ExpressionState expressionState) throws EvaluationException_;1335774711;Determine if this expression node will support a setValue() call.__@param expressionState the current expression state (includes the context)_@return true if the expression node will allow setValue()_@throws EvaluationException if something went wrong trying to determine if the node supports writing;boolean isWritable(ExpressionState expressionState) throws EvaluationException_;determine,if,this,expression,node,will,support,a,set,value,call,param,expression,state,the,current,expression,state,includes,the,context,return,true,if,the,expression,node,will,allow,set,value,throws,evaluation,exception,if,something,went,wrong,trying,to,determine,if,the,node,supports,writing;boolean,is,writable,expression,state,expression,state,throws,evaluation,exception
SpelNode -> boolean isWritable(ExpressionState expressionState) throws EvaluationException_;1372363092;Determine if this expression node will support a setValue() call.__@param expressionState the current expression state (includes the context)_@return true if the expression node will allow setValue()_@throws EvaluationException if something went wrong trying to determine if the node supports writing;boolean isWritable(ExpressionState expressionState) throws EvaluationException_;determine,if,this,expression,node,will,support,a,set,value,call,param,expression,state,the,current,expression,state,includes,the,context,return,true,if,the,expression,node,will,allow,set,value,throws,evaluation,exception,if,something,went,wrong,trying,to,determine,if,the,node,supports,writing;boolean,is,writable,expression,state,expression,state,throws,evaluation,exception
SpelNode -> boolean isWritable(ExpressionState expressionState) throws EvaluationException_;1412630983;Determine if this expression node will support a setValue() call._@param expressionState the current expression state (includes the context)_@return true if the expression node will allow setValue()_@throws EvaluationException if something went wrong trying to determine_if the node supports writing;boolean isWritable(ExpressionState expressionState) throws EvaluationException_;determine,if,this,expression,node,will,support,a,set,value,call,param,expression,state,the,current,expression,state,includes,the,context,return,true,if,the,expression,node,will,allow,set,value,throws,evaluation,exception,if,something,went,wrong,trying,to,determine,if,the,node,supports,writing;boolean,is,writable,expression,state,expression,state,throws,evaluation,exception
SpelNode -> boolean isWritable(ExpressionState expressionState) throws EvaluationException_;1495868221;Determine if this expression node will support a setValue() call._@param expressionState the current expression state (includes the context)_@return true if the expression node will allow setValue()_@throws EvaluationException if something went wrong trying to determine_if the node supports writing;boolean isWritable(ExpressionState expressionState) throws EvaluationException_;determine,if,this,expression,node,will,support,a,set,value,call,param,expression,state,the,current,expression,state,includes,the,context,return,true,if,the,expression,node,will,allow,set,value,throws,evaluation,exception,if,something,went,wrong,trying,to,determine,if,the,node,supports,writing;boolean,is,writable,expression,state,expression,state,throws,evaluation,exception
SpelNode -> boolean isWritable(ExpressionState expressionState) throws EvaluationException_;1496837955;Determine if this expression node will support a setValue() call._@param expressionState the current expression state (includes the context)_@return true if the expression node will allow setValue()_@throws EvaluationException if something went wrong trying to determine_if the node supports writing;boolean isWritable(ExpressionState expressionState) throws EvaluationException_;determine,if,this,expression,node,will,support,a,set,value,call,param,expression,state,the,current,expression,state,includes,the,context,return,true,if,the,expression,node,will,allow,set,value,throws,evaluation,exception,if,something,went,wrong,trying,to,determine,if,the,node,supports,writing;boolean,is,writable,expression,state,expression,state,throws,evaluation,exception
SpelNode -> boolean isWritable(ExpressionState expressionState) throws EvaluationException_;1530174524;Determine if this expression node will support a setValue() call._@param expressionState the current expression state (includes the context)_@return true if the expression node will allow setValue()_@throws EvaluationException if something went wrong trying to determine_if the node supports writing;boolean isWritable(ExpressionState expressionState) throws EvaluationException_;determine,if,this,expression,node,will,support,a,set,value,call,param,expression,state,the,current,expression,state,includes,the,context,return,true,if,the,expression,node,will,allow,set,value,throws,evaluation,exception,if,something,went,wrong,trying,to,determine,if,the,node,supports,writing;boolean,is,writable,expression,state,expression,state,throws,evaluation,exception
SpelNode -> Class<?> getObjectClass(Object obj)_;1328020251;Determine the class of the object passed in, unless it is already a class object._@param o the object that the caller wants the class of_@return the class of the object if it is not already a class object, or null if the object is null;Class<?> getObjectClass(Object obj)_;determine,the,class,of,the,object,passed,in,unless,it,is,already,a,class,object,param,o,the,object,that,the,caller,wants,the,class,of,return,the,class,of,the,object,if,it,is,not,already,a,class,object,or,null,if,the,object,is,null;class,get,object,class,object,obj
SpelNode -> Class<?> getObjectClass(Object obj)_;1335774711;Determine the class of the object passed in, unless it is already a class object._@param obj the object that the caller wants the class of_@return the class of the object if it is not already a class object, or null if the object is null;Class<?> getObjectClass(Object obj)_;determine,the,class,of,the,object,passed,in,unless,it,is,already,a,class,object,param,obj,the,object,that,the,caller,wants,the,class,of,return,the,class,of,the,object,if,it,is,not,already,a,class,object,or,null,if,the,object,is,null;class,get,object,class,object,obj
SpelNode -> Class<?> getObjectClass(Object obj)_;1372363092;Determine the class of the object passed in, unless it is already a class object._@param obj the object that the caller wants the class of_@return the class of the object if it is not already a class object, or null if the_object is null;Class<?> getObjectClass(Object obj)_;determine,the,class,of,the,object,passed,in,unless,it,is,already,a,class,object,param,obj,the,object,that,the,caller,wants,the,class,of,return,the,class,of,the,object,if,it,is,not,already,a,class,object,or,null,if,the,object,is,null;class,get,object,class,object,obj
SpelNode -> Class<?> getObjectClass(Object obj)_;1412630983;Determine the class of the object passed in, unless it is already a class object._@param obj the object that the caller wants the class of_@return the class of the object if it is not already a class object,_or {@code null} if the object is {@code null};Class<?> getObjectClass(Object obj)_;determine,the,class,of,the,object,passed,in,unless,it,is,already,a,class,object,param,obj,the,object,that,the,caller,wants,the,class,of,return,the,class,of,the,object,if,it,is,not,already,a,class,object,or,code,null,if,the,object,is,code,null;class,get,object,class,object,obj
