# id;timestamp;commentText;codeText;commentWords;codeWords
ReflectiveMethodExecutor -> public Class<?> getPublicDeclaringClass();1413486529;Find the first public class in the methods declaring class hierarchy that declares this method._Sometimes the reflective method discovery logic finds a suitable method that can easily be_called via reflection but cannot be called from generated code when compiling the expression_because of visibility restrictions. For example if a non public class overrides toString(), this_helper method will walk up the type hierarchy to find the first public type that declares the_method (if there is one!). For toString() it may walk as far as Object.;public Class<?> getPublicDeclaringClass() {_		if (!computedPublicDeclaringClass) {_			this.publicDeclaringClass = discoverPublicClass(method, method.getDeclaringClass())__			this.computedPublicDeclaringClass = true__		}_		return this.publicDeclaringClass__	};find,the,first,public,class,in,the,methods,declaring,class,hierarchy,that,declares,this,method,sometimes,the,reflective,method,discovery,logic,finds,a,suitable,method,that,can,easily,be,called,via,reflection,but,cannot,be,called,from,generated,code,when,compiling,the,expression,because,of,visibility,restrictions,for,example,if,a,non,public,class,overrides,to,string,this,helper,method,will,walk,up,the,type,hierarchy,to,find,the,first,public,type,that,declares,the,method,if,there,is,one,for,to,string,it,may,walk,as,far,as,object;public,class,get,public,declaring,class,if,computed,public,declaring,class,this,public,declaring,class,discover,public,class,method,method,get,declaring,class,this,computed,public,declaring,class,true,return,this,public,declaring,class
ReflectiveMethodExecutor -> public Class<?> getPublicDeclaringClass();1425759378;Find the first public class in the methods declaring class hierarchy that declares this method._Sometimes the reflective method discovery logic finds a suitable method that can easily be_called via reflection but cannot be called from generated code when compiling the expression_because of visibility restrictions. For example if a non public class overrides toString(), this_helper method will walk up the type hierarchy to find the first public type that declares the_method (if there is one!). For toString() it may walk as far as Object.;public Class<?> getPublicDeclaringClass() {_		if (!computedPublicDeclaringClass) {_			this.publicDeclaringClass = discoverPublicClass(method, method.getDeclaringClass())__			this.computedPublicDeclaringClass = true__		}_		return this.publicDeclaringClass__	};find,the,first,public,class,in,the,methods,declaring,class,hierarchy,that,declares,this,method,sometimes,the,reflective,method,discovery,logic,finds,a,suitable,method,that,can,easily,be,called,via,reflection,but,cannot,be,called,from,generated,code,when,compiling,the,expression,because,of,visibility,restrictions,for,example,if,a,non,public,class,overrides,to,string,this,helper,method,will,walk,up,the,type,hierarchy,to,find,the,first,public,type,that,declares,the,method,if,there,is,one,for,to,string,it,may,walk,as,far,as,object;public,class,get,public,declaring,class,if,computed,public,declaring,class,this,public,declaring,class,discover,public,class,method,method,get,declaring,class,this,computed,public,declaring,class,true,return,this,public,declaring,class
ReflectiveMethodExecutor -> public Class<?> getPublicDeclaringClass();1430935722;Find the first public class in the methods declaring class hierarchy that declares this method._Sometimes the reflective method discovery logic finds a suitable method that can easily be_called via reflection but cannot be called from generated code when compiling the expression_because of visibility restrictions. For example if a non public class overrides toString(), this_helper method will walk up the type hierarchy to find the first public type that declares the_method (if there is one!). For toString() it may walk as far as Object.;public Class<?> getPublicDeclaringClass() {_		if (!computedPublicDeclaringClass) {_			this.publicDeclaringClass = discoverPublicClass(method, method.getDeclaringClass())__			this.computedPublicDeclaringClass = true__		}_		return this.publicDeclaringClass__	};find,the,first,public,class,in,the,methods,declaring,class,hierarchy,that,declares,this,method,sometimes,the,reflective,method,discovery,logic,finds,a,suitable,method,that,can,easily,be,called,via,reflection,but,cannot,be,called,from,generated,code,when,compiling,the,expression,because,of,visibility,restrictions,for,example,if,a,non,public,class,overrides,to,string,this,helper,method,will,walk,up,the,type,hierarchy,to,find,the,first,public,type,that,declares,the,method,if,there,is,one,for,to,string,it,may,walk,as,far,as,object;public,class,get,public,declaring,class,if,computed,public,declaring,class,this,public,declaring,class,discover,public,class,method,method,get,declaring,class,this,computed,public,declaring,class,true,return,this,public,declaring,class
ReflectiveMethodExecutor -> public Class<?> getPublicDeclaringClass();1432857824;Find the first public class in the methods declaring class hierarchy that declares this method._Sometimes the reflective method discovery logic finds a suitable method that can easily be_called via reflection but cannot be called from generated code when compiling the expression_because of visibility restrictions. For example if a non public class overrides toString(), this_helper method will walk up the type hierarchy to find the first public type that declares the_method (if there is one!). For toString() it may walk as far as Object.;public Class<?> getPublicDeclaringClass() {_		if (!computedPublicDeclaringClass) {_			this.publicDeclaringClass = discoverPublicClass(method, method.getDeclaringClass())__			this.computedPublicDeclaringClass = true__		}_		return this.publicDeclaringClass__	};find,the,first,public,class,in,the,methods,declaring,class,hierarchy,that,declares,this,method,sometimes,the,reflective,method,discovery,logic,finds,a,suitable,method,that,can,easily,be,called,via,reflection,but,cannot,be,called,from,generated,code,when,compiling,the,expression,because,of,visibility,restrictions,for,example,if,a,non,public,class,overrides,to,string,this,helper,method,will,walk,up,the,type,hierarchy,to,find,the,first,public,type,that,declares,the,method,if,there,is,one,for,to,string,it,may,walk,as,far,as,object;public,class,get,public,declaring,class,if,computed,public,declaring,class,this,public,declaring,class,discover,public,class,method,method,get,declaring,class,this,computed,public,declaring,class,true,return,this,public,declaring,class
ReflectiveMethodExecutor -> public Class<?> getPublicDeclaringClass();1441370327;Find the first public class in the methods declaring class hierarchy that declares this method._Sometimes the reflective method discovery logic finds a suitable method that can easily be_called via reflection but cannot be called from generated code when compiling the expression_because of visibility restrictions. For example if a non public class overrides toString(), this_helper method will walk up the type hierarchy to find the first public type that declares the_method (if there is one!). For toString() it may walk as far as Object.;public Class<?> getPublicDeclaringClass() {_		if (!computedPublicDeclaringClass) {_			this.publicDeclaringClass = discoverPublicClass(method, method.getDeclaringClass())__			this.computedPublicDeclaringClass = true__		}_		return this.publicDeclaringClass__	};find,the,first,public,class,in,the,methods,declaring,class,hierarchy,that,declares,this,method,sometimes,the,reflective,method,discovery,logic,finds,a,suitable,method,that,can,easily,be,called,via,reflection,but,cannot,be,called,from,generated,code,when,compiling,the,expression,because,of,visibility,restrictions,for,example,if,a,non,public,class,overrides,to,string,this,helper,method,will,walk,up,the,type,hierarchy,to,find,the,first,public,type,that,declares,the,method,if,there,is,one,for,to,string,it,may,walk,as,far,as,object;public,class,get,public,declaring,class,if,computed,public,declaring,class,this,public,declaring,class,discover,public,class,method,method,get,declaring,class,this,computed,public,declaring,class,true,return,this,public,declaring,class
ReflectiveMethodExecutor -> public Class<?> getPublicDeclaringClass();1495868221;Find the first public class in the methods declaring class hierarchy that declares this method._Sometimes the reflective method discovery logic finds a suitable method that can easily be_called via reflection but cannot be called from generated code when compiling the expression_because of visibility restrictions. For example if a non public class overrides toString(), this_helper method will walk up the type hierarchy to find the first public type that declares the_method (if there is one!). For toString() it may walk as far as Object.;public Class<?> getPublicDeclaringClass() {_		if (!computedPublicDeclaringClass) {_			this.publicDeclaringClass = discoverPublicClass(method, method.getDeclaringClass())__			this.computedPublicDeclaringClass = true__		}_		return this.publicDeclaringClass__	};find,the,first,public,class,in,the,methods,declaring,class,hierarchy,that,declares,this,method,sometimes,the,reflective,method,discovery,logic,finds,a,suitable,method,that,can,easily,be,called,via,reflection,but,cannot,be,called,from,generated,code,when,compiling,the,expression,because,of,visibility,restrictions,for,example,if,a,non,public,class,overrides,to,string,this,helper,method,will,walk,up,the,type,hierarchy,to,find,the,first,public,type,that,declares,the,method,if,there,is,one,for,to,string,it,may,walk,as,far,as,object;public,class,get,public,declaring,class,if,computed,public,declaring,class,this,public,declaring,class,discover,public,class,method,method,get,declaring,class,this,computed,public,declaring,class,true,return,this,public,declaring,class
ReflectiveMethodExecutor -> @Nullable 	public Class<?> getPublicDeclaringClass();1496837955;Find the first public class in the methods declaring class hierarchy that declares this method._Sometimes the reflective method discovery logic finds a suitable method that can easily be_called via reflection but cannot be called from generated code when compiling the expression_because of visibility restrictions. For example if a non public class overrides toString(), this_helper method will walk up the type hierarchy to find the first public type that declares the_method (if there is one!). For toString() it may walk as far as Object.;@Nullable_	public Class<?> getPublicDeclaringClass() {_		if (!this.computedPublicDeclaringClass) {_			this.publicDeclaringClass = discoverPublicClass(this.method, this.method.getDeclaringClass())__			this.computedPublicDeclaringClass = true__		}_		return this.publicDeclaringClass__	};find,the,first,public,class,in,the,methods,declaring,class,hierarchy,that,declares,this,method,sometimes,the,reflective,method,discovery,logic,finds,a,suitable,method,that,can,easily,be,called,via,reflection,but,cannot,be,called,from,generated,code,when,compiling,the,expression,because,of,visibility,restrictions,for,example,if,a,non,public,class,overrides,to,string,this,helper,method,will,walk,up,the,type,hierarchy,to,find,the,first,public,type,that,declares,the,method,if,there,is,one,for,to,string,it,may,walk,as,far,as,object;nullable,public,class,get,public,declaring,class,if,this,computed,public,declaring,class,this,public,declaring,class,discover,public,class,this,method,this,method,get,declaring,class,this,computed,public,declaring,class,true,return,this,public,declaring,class
ReflectiveMethodExecutor -> @Nullable 	public Class<?> getPublicDeclaringClass();1498780456;Find the first public class in the methods declaring class hierarchy that declares this method._Sometimes the reflective method discovery logic finds a suitable method that can easily be_called via reflection but cannot be called from generated code when compiling the expression_because of visibility restrictions. For example if a non public class overrides toString(), this_helper method will walk up the type hierarchy to find the first public type that declares the_method (if there is one!). For toString() it may walk as far as Object.;@Nullable_	public Class<?> getPublicDeclaringClass() {_		if (!this.computedPublicDeclaringClass) {_			this.publicDeclaringClass = discoverPublicClass(this.method, this.method.getDeclaringClass())__			this.computedPublicDeclaringClass = true__		}_		return this.publicDeclaringClass__	};find,the,first,public,class,in,the,methods,declaring,class,hierarchy,that,declares,this,method,sometimes,the,reflective,method,discovery,logic,finds,a,suitable,method,that,can,easily,be,called,via,reflection,but,cannot,be,called,from,generated,code,when,compiling,the,expression,because,of,visibility,restrictions,for,example,if,a,non,public,class,overrides,to,string,this,helper,method,will,walk,up,the,type,hierarchy,to,find,the,first,public,type,that,declares,the,method,if,there,is,one,for,to,string,it,may,walk,as,far,as,object;nullable,public,class,get,public,declaring,class,if,this,computed,public,declaring,class,this,public,declaring,class,discover,public,class,this,method,this,method,get,declaring,class,this,computed,public,declaring,class,true,return,this,public,declaring,class
ReflectiveMethodExecutor -> @Nullable 	public Class<?> getPublicDeclaringClass();1506468851;Find the first public class in the methods declaring class hierarchy that declares this method._Sometimes the reflective method discovery logic finds a suitable method that can easily be_called via reflection but cannot be called from generated code when compiling the expression_because of visibility restrictions. For example if a non public class overrides toString(), this_helper method will walk up the type hierarchy to find the first public type that declares the_method (if there is one!). For toString() it may walk as far as Object.;@Nullable_	public Class<?> getPublicDeclaringClass() {_		if (!this.computedPublicDeclaringClass) {_			this.publicDeclaringClass = discoverPublicClass(this.method, this.method.getDeclaringClass())__			this.computedPublicDeclaringClass = true__		}_		return this.publicDeclaringClass__	};find,the,first,public,class,in,the,methods,declaring,class,hierarchy,that,declares,this,method,sometimes,the,reflective,method,discovery,logic,finds,a,suitable,method,that,can,easily,be,called,via,reflection,but,cannot,be,called,from,generated,code,when,compiling,the,expression,because,of,visibility,restrictions,for,example,if,a,non,public,class,overrides,to,string,this,helper,method,will,walk,up,the,type,hierarchy,to,find,the,first,public,type,that,declares,the,method,if,there,is,one,for,to,string,it,may,walk,as,far,as,object;nullable,public,class,get,public,declaring,class,if,this,computed,public,declaring,class,this,public,declaring,class,discover,public,class,this,method,this,method,get,declaring,class,this,computed,public,declaring,class,true,return,this,public,declaring,class
ReflectiveMethodExecutor -> @Nullable 	public Class<?> getPublicDeclaringClass();1530174524;Find the first public class in the methods declaring class hierarchy that declares this method._Sometimes the reflective method discovery logic finds a suitable method that can easily be_called via reflection but cannot be called from generated code when compiling the expression_because of visibility restrictions. For example if a non public class overrides toString(), this_helper method will walk up the type hierarchy to find the first public type that declares the_method (if there is one!). For toString() it may walk as far as Object.;@Nullable_	public Class<?> getPublicDeclaringClass() {_		if (!this.computedPublicDeclaringClass) {_			this.publicDeclaringClass = discoverPublicClass(this.method, this.method.getDeclaringClass())__			this.computedPublicDeclaringClass = true__		}_		return this.publicDeclaringClass__	};find,the,first,public,class,in,the,methods,declaring,class,hierarchy,that,declares,this,method,sometimes,the,reflective,method,discovery,logic,finds,a,suitable,method,that,can,easily,be,called,via,reflection,but,cannot,be,called,from,generated,code,when,compiling,the,expression,because,of,visibility,restrictions,for,example,if,a,non,public,class,overrides,to,string,this,helper,method,will,walk,up,the,type,hierarchy,to,find,the,first,public,type,that,declares,the,method,if,there,is,one,for,to,string,it,may,walk,as,far,as,object;nullable,public,class,get,public,declaring,class,if,this,computed,public,declaring,class,this,public,declaring,class,discover,public,class,this,method,this,method,get,declaring,class,this,computed,public,declaring,class,true,return,this,public,declaring,class
ReflectiveMethodExecutor -> @Nullable 	public Class<?> getPublicDeclaringClass();1532010959;Find the first public class in the methods declaring class hierarchy that declares this method._Sometimes the reflective method discovery logic finds a suitable method that can easily be_called via reflection but cannot be called from generated code when compiling the expression_because of visibility restrictions. For example if a non-public class overrides toString(),_this helper method will walk up the type hierarchy to find the first public type that declares_the method (if there is one!). For toString() it may walk as far as Object.;@Nullable_	public Class<?> getPublicDeclaringClass() {_		if (!this.computedPublicDeclaringClass) {_			this.publicDeclaringClass =_					discoverPublicDeclaringClass(this.originalMethod, this.originalMethod.getDeclaringClass())__			this.computedPublicDeclaringClass = true__		}_		return this.publicDeclaringClass__	};find,the,first,public,class,in,the,methods,declaring,class,hierarchy,that,declares,this,method,sometimes,the,reflective,method,discovery,logic,finds,a,suitable,method,that,can,easily,be,called,via,reflection,but,cannot,be,called,from,generated,code,when,compiling,the,expression,because,of,visibility,restrictions,for,example,if,a,non,public,class,overrides,to,string,this,helper,method,will,walk,up,the,type,hierarchy,to,find,the,first,public,type,that,declares,the,method,if,there,is,one,for,to,string,it,may,walk,as,far,as,object;nullable,public,class,get,public,declaring,class,if,this,computed,public,declaring,class,this,public,declaring,class,discover,public,declaring,class,this,original,method,this,original,method,get,declaring,class,this,computed,public,declaring,class,true,return,this,public,declaring,class
