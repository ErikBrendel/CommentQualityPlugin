# id;timestamp;commentText;codeText;commentWords;codeWords
Indexer -> private void growCollection(TypeDescriptor targetType, int index, Collection<Object> collection);1351041784;Attempt to grow the specified collection so that the specified index is_valid.__@param elementType the type of the elements in the collection_@param index the index into the collection that needs to be valid_@param collection the collection to grow with elements;private void growCollection(TypeDescriptor targetType, int index, Collection<Object> collection) {_		if (targetType.getElementTypeDescriptor() == null) {_			throw new SpelEvaluationException(_					getStartPosition(),_					SpelMessage.UNABLE_TO_GROW_COLLECTION_UNKNOWN_ELEMENT_TYPE)__		}_		TypeDescriptor elementType = targetType.getElementTypeDescriptor()__		Object newCollectionElement = null__		try {_			int newElements = index - collection.size()__			while (newElements > 0) {_				collection.add(elementType.getType().newInstance())__				newElements--__			}_			newCollectionElement = elementType.getType().newInstance()__		} catch (Exception ex) {_			throw new SpelEvaluationException(getStartPosition(), ex,_					SpelMessage.UNABLE_TO_GROW_COLLECTION)__		}_		collection.add(newCollectionElement)__	};attempt,to,grow,the,specified,collection,so,that,the,specified,index,is,valid,param,element,type,the,type,of,the,elements,in,the,collection,param,index,the,index,into,the,collection,that,needs,to,be,valid,param,collection,the,collection,to,grow,with,elements;private,void,grow,collection,type,descriptor,target,type,int,index,collection,object,collection,if,target,type,get,element,type,descriptor,null,throw,new,spel,evaluation,exception,get,start,position,spel,message,type,descriptor,element,type,target,type,get,element,type,descriptor,object,new,collection,element,null,try,int,new,elements,index,collection,size,while,new,elements,0,collection,add,element,type,get,type,new,instance,new,elements,new,collection,element,element,type,get,type,new,instance,catch,exception,ex,throw,new,spel,evaluation,exception,get,start,position,ex,spel,message,collection,add,new,collection,element
Indexer -> private void growCollection(TypeDescriptor targetType, int index, Collection<Object> collection);1355355380;Attempt to grow the specified collection so that the specified index is valid._@param targetType the type of the elements in the collection_@param index the index into the collection that needs to be valid_@param collection the collection to grow with elements;private void growCollection(TypeDescriptor targetType, int index, Collection<Object> collection) {_		if (targetType.getElementTypeDescriptor() == null) {_			throw new SpelEvaluationException(getStartPosition(), SpelMessage.UNABLE_TO_GROW_COLLECTION_UNKNOWN_ELEMENT_TYPE)__		}_		TypeDescriptor elementType = targetType.getElementTypeDescriptor()__		Object newCollectionElement__		try {_			int newElements = index - collection.size()__			while (newElements > 0) {_				collection.add(elementType.getType().newInstance())__				newElements--__			}_			newCollectionElement = elementType.getType().newInstance()__		}_		catch (Exception ex) {_			throw new SpelEvaluationException(getStartPosition(), ex, SpelMessage.UNABLE_TO_GROW_COLLECTION)__		}_		collection.add(newCollectionElement)__	};attempt,to,grow,the,specified,collection,so,that,the,specified,index,is,valid,param,target,type,the,type,of,the,elements,in,the,collection,param,index,the,index,into,the,collection,that,needs,to,be,valid,param,collection,the,collection,to,grow,with,elements;private,void,grow,collection,type,descriptor,target,type,int,index,collection,object,collection,if,target,type,get,element,type,descriptor,null,throw,new,spel,evaluation,exception,get,start,position,spel,message,type,descriptor,element,type,target,type,get,element,type,descriptor,object,new,collection,element,try,int,new,elements,index,collection,size,while,new,elements,0,collection,add,element,type,get,type,new,instance,new,elements,new,collection,element,element,type,get,type,new,instance,catch,exception,ex,throw,new,spel,evaluation,exception,get,start,position,ex,spel,message,collection,add,new,collection,element
Indexer -> private void growCollection(TypeDescriptor targetType, int index, Collection<Object> collection);1356735495;Attempt to grow the specified collection so that the specified index is valid._@param targetType the type of the elements in the collection_@param index the index into the collection that needs to be valid_@param collection the collection to grow with elements;private void growCollection(TypeDescriptor targetType, int index, Collection<Object> collection) {_		if (targetType.getElementTypeDescriptor() == null) {_			throw new SpelEvaluationException(getStartPosition(), SpelMessage.UNABLE_TO_GROW_COLLECTION_UNKNOWN_ELEMENT_TYPE)__		}_		TypeDescriptor elementType = targetType.getElementTypeDescriptor()__		Object newCollectionElement__		try {_			int newElements = index - collection.size()__			while (newElements > 0) {_				collection.add(elementType.getType().newInstance())__				newElements--__			}_			newCollectionElement = elementType.getType().newInstance()__		}_		catch (Exception ex) {_			throw new SpelEvaluationException(getStartPosition(), ex, SpelMessage.UNABLE_TO_GROW_COLLECTION)__		}_		collection.add(newCollectionElement)__	};attempt,to,grow,the,specified,collection,so,that,the,specified,index,is,valid,param,target,type,the,type,of,the,elements,in,the,collection,param,index,the,index,into,the,collection,that,needs,to,be,valid,param,collection,the,collection,to,grow,with,elements;private,void,grow,collection,type,descriptor,target,type,int,index,collection,object,collection,if,target,type,get,element,type,descriptor,null,throw,new,spel,evaluation,exception,get,start,position,spel,message,type,descriptor,element,type,target,type,get,element,type,descriptor,object,new,collection,element,try,int,new,elements,index,collection,size,while,new,elements,0,collection,add,element,type,get,type,new,instance,new,elements,new,collection,element,element,type,get,type,new,instance,catch,exception,ex,throw,new,spel,evaluation,exception,get,start,position,ex,spel,message,collection,add,new,collection,element
Indexer -> private void growCollection(TypeDescriptor targetType, int index, Collection<Object> collection);1357119239;Attempt to grow the specified collection so that the specified index is valid._@param targetType the type of the elements in the collection_@param index the index into the collection that needs to be valid_@param collection the collection to grow with elements;private void growCollection(TypeDescriptor targetType, int index, Collection<Object> collection) {_		if (targetType.getElementTypeDescriptor() == null) {_			throw new SpelEvaluationException(getStartPosition(), SpelMessage.UNABLE_TO_GROW_COLLECTION_UNKNOWN_ELEMENT_TYPE)__		}_		TypeDescriptor elementType = targetType.getElementTypeDescriptor()__		Object newCollectionElement__		try {_			int newElements = index - collection.size()__			while (newElements > 0) {_				collection.add(elementType.getType().newInstance())__				newElements--__			}_			newCollectionElement = elementType.getType().newInstance()__		}_		catch (Exception ex) {_			throw new SpelEvaluationException(getStartPosition(), ex, SpelMessage.UNABLE_TO_GROW_COLLECTION)__		}_		collection.add(newCollectionElement)__	};attempt,to,grow,the,specified,collection,so,that,the,specified,index,is,valid,param,target,type,the,type,of,the,elements,in,the,collection,param,index,the,index,into,the,collection,that,needs,to,be,valid,param,collection,the,collection,to,grow,with,elements;private,void,grow,collection,type,descriptor,target,type,int,index,collection,object,collection,if,target,type,get,element,type,descriptor,null,throw,new,spel,evaluation,exception,get,start,position,spel,message,type,descriptor,element,type,target,type,get,element,type,descriptor,object,new,collection,element,try,int,new,elements,index,collection,size,while,new,elements,0,collection,add,element,type,get,type,new,instance,new,elements,new,collection,element,element,type,get,type,new,instance,catch,exception,ex,throw,new,spel,evaluation,exception,get,start,position,ex,spel,message,collection,add,new,collection,element
