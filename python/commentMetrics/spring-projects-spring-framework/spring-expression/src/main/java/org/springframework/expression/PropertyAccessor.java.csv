# id;timestamp;commentText;codeText;commentWords;codeWords
PropertyAccessor -> Class<?>[] getSpecificTargetClasses()_;1385412762;Return an array of classes for which this resolver should be called. Returning null_indicates this is a general resolver that can be called in an attempt to resolve a_property on any type._@return an array of classes that this resolver is suitable for (or null if a_general resolver);Class<?>[] getSpecificTargetClasses()_;return,an,array,of,classes,for,which,this,resolver,should,be,called,returning,null,indicates,this,is,a,general,resolver,that,can,be,called,in,an,attempt,to,resolve,a,property,on,any,type,return,an,array,of,classes,that,this,resolver,is,suitable,for,or,null,if,a,general,resolver;class,get,specific,target,classes
PropertyAccessor -> Class<?>[] getSpecificTargetClasses()_;1394572186;Return an array of classes for which this resolver should be called._<p>>Returning {@code null} indicates this is a general resolver that_can be called in an attempt to resolve a property on any type._@return an array of classes that this resolver is suitable for_(or {@code null} if a general resolver);Class<?>[] getSpecificTargetClasses()_;return,an,array,of,classes,for,which,this,resolver,should,be,called,p,returning,code,null,indicates,this,is,a,general,resolver,that,can,be,called,in,an,attempt,to,resolve,a,property,on,any,type,return,an,array,of,classes,that,this,resolver,is,suitable,for,or,code,null,if,a,general,resolver;class,get,specific,target,classes
PropertyAccessor -> Class[] getSpecificTargetClasses()_;1328020251;Return an array of classes for which this resolver should be called. Returning null indicates this is a general_resolver that can be called in an attempt to resolve a property on any type._@return an array of classes that this resolver is suitable for (or null if a general resolver);Class[] getSpecificTargetClasses()_;return,an,array,of,classes,for,which,this,resolver,should,be,called,returning,null,indicates,this,is,a,general,resolver,that,can,be,called,in,an,attempt,to,resolve,a,property,on,any,type,return,an,array,of,classes,that,this,resolver,is,suitable,for,or,null,if,a,general,resolver;class,get,specific,target,classes
PropertyAccessor -> Class[] getSpecificTargetClasses()_;1356735495;Return an array of classes for which this resolver should be called. Returning null indicates this is a general_resolver that can be called in an attempt to resolve a property on any type._@return an array of classes that this resolver is suitable for (or null if a general resolver);Class[] getSpecificTargetClasses()_;return,an,array,of,classes,for,which,this,resolver,should,be,called,returning,null,indicates,this,is,a,general,resolver,that,can,be,called,in,an,attempt,to,resolve,a,property,on,any,type,return,an,array,of,classes,that,this,resolver,is,suitable,for,or,null,if,a,general,resolver;class,get,specific,target,classes
PropertyAccessor -> Class[] getSpecificTargetClasses()_;1372363092;Return an array of classes for which this resolver should be called. Returning null_indicates this is a general resolver that can be called in an attempt to resolve a_property on any type._@return an array of classes that this resolver is suitable for (or null if a_general resolver);Class[] getSpecificTargetClasses()_;return,an,array,of,classes,for,which,this,resolver,should,be,called,returning,null,indicates,this,is,a,general,resolver,that,can,be,called,in,an,attempt,to,resolve,a,property,on,any,type,return,an,array,of,classes,that,this,resolver,is,suitable,for,or,null,if,a,general,resolver;class,get,specific,target,classes
PropertyAccessor -> @Nullable 	Class<?>[] getSpecificTargetClasses()_;1495868221;Return an array of classes for which this resolver should be called._<p>>Returning {@code null} indicates this is a general resolver that_can be called in an attempt to resolve a property on any type._@return an array of classes that this resolver is suitable for_(or {@code null} if a general resolver);@Nullable_	Class<?>[] getSpecificTargetClasses()_;return,an,array,of,classes,for,which,this,resolver,should,be,called,p,returning,code,null,indicates,this,is,a,general,resolver,that,can,be,called,in,an,attempt,to,resolve,a,property,on,any,type,return,an,array,of,classes,that,this,resolver,is,suitable,for,or,code,null,if,a,general,resolver;nullable,class,get,specific,target,classes
PropertyAccessor -> @Nullable 	Class<?>[] getSpecificTargetClasses()_;1496837955;Return an array of classes for which this resolver should be called._<p>>Returning {@code null} indicates this is a general resolver that_can be called in an attempt to resolve a property on any type._@return an array of classes that this resolver is suitable for_(or {@code null} if a general resolver);@Nullable_	Class<?>[] getSpecificTargetClasses()_;return,an,array,of,classes,for,which,this,resolver,should,be,called,p,returning,code,null,indicates,this,is,a,general,resolver,that,can,be,called,in,an,attempt,to,resolve,a,property,on,any,type,return,an,array,of,classes,that,this,resolver,is,suitable,for,or,code,null,if,a,general,resolver;nullable,class,get,specific,target,classes
PropertyAccessor -> TypedValue read(EvaluationContext context, Object target, String name) throws AccessException_;1328020251;Called to read a property from a specified target object_@param context the evaluation context in which the access is being attempted_@param target the target object upon which the property is being accessed_@param name the name of the property being accessed_@return a TypedValue object wrapping the property value read and a type descriptor for it_@throws AccessException if there is any problem accessing the property value;TypedValue read(EvaluationContext context, Object target, String name) throws AccessException_;called,to,read,a,property,from,a,specified,target,object,param,context,the,evaluation,context,in,which,the,access,is,being,attempted,param,target,the,target,object,upon,which,the,property,is,being,accessed,param,name,the,name,of,the,property,being,accessed,return,a,typed,value,object,wrapping,the,property,value,read,and,a,type,descriptor,for,it,throws,access,exception,if,there,is,any,problem,accessing,the,property,value;typed,value,read,evaluation,context,context,object,target,string,name,throws,access,exception
PropertyAccessor -> TypedValue read(EvaluationContext context, Object target, String name) throws AccessException_;1356735495;Called to read a property from a specified target object_@param context the evaluation context in which the access is being attempted_@param target the target object upon which the property is being accessed_@param name the name of the property being accessed_@return a TypedValue object wrapping the property value read and a type descriptor for it_@throws AccessException if there is any problem accessing the property value;TypedValue read(EvaluationContext context, Object target, String name) throws AccessException_;called,to,read,a,property,from,a,specified,target,object,param,context,the,evaluation,context,in,which,the,access,is,being,attempted,param,target,the,target,object,upon,which,the,property,is,being,accessed,param,name,the,name,of,the,property,being,accessed,return,a,typed,value,object,wrapping,the,property,value,read,and,a,type,descriptor,for,it,throws,access,exception,if,there,is,any,problem,accessing,the,property,value;typed,value,read,evaluation,context,context,object,target,string,name,throws,access,exception
PropertyAccessor -> TypedValue read(EvaluationContext context, Object target, String name) throws AccessException_;1372363092;Called to read a property from a specified target object_@param context the evaluation context in which the access is being attempted_@param target the target object upon which the property is being accessed_@param name the name of the property being accessed_@return a TypedValue object wrapping the property value read and a type descriptor for it_@throws AccessException if there is any problem accessing the property value;TypedValue read(EvaluationContext context, Object target, String name) throws AccessException_;called,to,read,a,property,from,a,specified,target,object,param,context,the,evaluation,context,in,which,the,access,is,being,attempted,param,target,the,target,object,upon,which,the,property,is,being,accessed,param,name,the,name,of,the,property,being,accessed,return,a,typed,value,object,wrapping,the,property,value,read,and,a,type,descriptor,for,it,throws,access,exception,if,there,is,any,problem,accessing,the,property,value;typed,value,read,evaluation,context,context,object,target,string,name,throws,access,exception
PropertyAccessor -> TypedValue read(EvaluationContext context, Object target, String name) throws AccessException_;1385412762;Called to read a property from a specified target object_@param context the evaluation context in which the access is being attempted_@param target the target object upon which the property is being accessed_@param name the name of the property being accessed_@return a TypedValue object wrapping the property value read and a type descriptor for it_@throws AccessException if there is any problem accessing the property value;TypedValue read(EvaluationContext context, Object target, String name) throws AccessException_;called,to,read,a,property,from,a,specified,target,object,param,context,the,evaluation,context,in,which,the,access,is,being,attempted,param,target,the,target,object,upon,which,the,property,is,being,accessed,param,name,the,name,of,the,property,being,accessed,return,a,typed,value,object,wrapping,the,property,value,read,and,a,type,descriptor,for,it,throws,access,exception,if,there,is,any,problem,accessing,the,property,value;typed,value,read,evaluation,context,context,object,target,string,name,throws,access,exception
PropertyAccessor -> TypedValue read(EvaluationContext context, Object target, String name) throws AccessException_;1394572186;Called to read a property from a specified target object._Should only succeed if {@link #canRead} also returns {@code true}._@param context the evaluation context in which the access is being attempted_@param target the target object upon which the property is being accessed_@param name the name of the property being accessed_@return a TypedValue object wrapping the property value read and a type descriptor for it_@throws AccessException if there is any problem accessing the property value;TypedValue read(EvaluationContext context, Object target, String name) throws AccessException_;called,to,read,a,property,from,a,specified,target,object,should,only,succeed,if,link,can,read,also,returns,code,true,param,context,the,evaluation,context,in,which,the,access,is,being,attempted,param,target,the,target,object,upon,which,the,property,is,being,accessed,param,name,the,name,of,the,property,being,accessed,return,a,typed,value,object,wrapping,the,property,value,read,and,a,type,descriptor,for,it,throws,access,exception,if,there,is,any,problem,accessing,the,property,value;typed,value,read,evaluation,context,context,object,target,string,name,throws,access,exception
PropertyAccessor -> TypedValue read(EvaluationContext context, Object target, String name) throws AccessException_;1495868221;Called to read a property from a specified target object._Should only succeed if {@link #canRead} also returns {@code true}._@param context the evaluation context in which the access is being attempted_@param target the target object upon which the property is being accessed_@param name the name of the property being accessed_@return a TypedValue object wrapping the property value read and a type descriptor for it_@throws AccessException if there is any problem accessing the property value;TypedValue read(EvaluationContext context, Object target, String name) throws AccessException_;called,to,read,a,property,from,a,specified,target,object,should,only,succeed,if,link,can,read,also,returns,code,true,param,context,the,evaluation,context,in,which,the,access,is,being,attempted,param,target,the,target,object,upon,which,the,property,is,being,accessed,param,name,the,name,of,the,property,being,accessed,return,a,typed,value,object,wrapping,the,property,value,read,and,a,type,descriptor,for,it,throws,access,exception,if,there,is,any,problem,accessing,the,property,value;typed,value,read,evaluation,context,context,object,target,string,name,throws,access,exception
PropertyAccessor -> boolean canRead(EvaluationContext context, Object target, String name) throws AccessException_;1328020251;Called to determine if a resolver instance is able to access a specified property on a specified target object._@param context the evaluation context in which the access is being attempted_@param target the target object upon which the property is being accessed_@param name the name of the property being accessed_@return true if this resolver is able to read the property_@throws AccessException if there is any problem determining whether the property can be read;boolean canRead(EvaluationContext context, Object target, String name) throws AccessException_;called,to,determine,if,a,resolver,instance,is,able,to,access,a,specified,property,on,a,specified,target,object,param,context,the,evaluation,context,in,which,the,access,is,being,attempted,param,target,the,target,object,upon,which,the,property,is,being,accessed,param,name,the,name,of,the,property,being,accessed,return,true,if,this,resolver,is,able,to,read,the,property,throws,access,exception,if,there,is,any,problem,determining,whether,the,property,can,be,read;boolean,can,read,evaluation,context,context,object,target,string,name,throws,access,exception
PropertyAccessor -> boolean canRead(EvaluationContext context, Object target, String name) throws AccessException_;1356735495;Called to determine if a resolver instance is able to access a specified property on a specified target object._@param context the evaluation context in which the access is being attempted_@param target the target object upon which the property is being accessed_@param name the name of the property being accessed_@return true if this resolver is able to read the property_@throws AccessException if there is any problem determining whether the property can be read;boolean canRead(EvaluationContext context, Object target, String name) throws AccessException_;called,to,determine,if,a,resolver,instance,is,able,to,access,a,specified,property,on,a,specified,target,object,param,context,the,evaluation,context,in,which,the,access,is,being,attempted,param,target,the,target,object,upon,which,the,property,is,being,accessed,param,name,the,name,of,the,property,being,accessed,return,true,if,this,resolver,is,able,to,read,the,property,throws,access,exception,if,there,is,any,problem,determining,whether,the,property,can,be,read;boolean,can,read,evaluation,context,context,object,target,string,name,throws,access,exception
PropertyAccessor -> boolean canRead(EvaluationContext context, Object target, String name) throws AccessException_;1372363092;Called to determine if a resolver instance is able to access a specified property_on a specified target object._@param context the evaluation context in which the access is being attempted_@param target the target object upon which the property is being accessed_@param name the name of the property being accessed_@return true if this resolver is able to read the property_@throws AccessException if there is any problem determining whether the property_can be read;boolean canRead(EvaluationContext context, Object target, String name) throws AccessException_;called,to,determine,if,a,resolver,instance,is,able,to,access,a,specified,property,on,a,specified,target,object,param,context,the,evaluation,context,in,which,the,access,is,being,attempted,param,target,the,target,object,upon,which,the,property,is,being,accessed,param,name,the,name,of,the,property,being,accessed,return,true,if,this,resolver,is,able,to,read,the,property,throws,access,exception,if,there,is,any,problem,determining,whether,the,property,can,be,read;boolean,can,read,evaluation,context,context,object,target,string,name,throws,access,exception
PropertyAccessor -> boolean canRead(EvaluationContext context, Object target, String name) throws AccessException_;1385412762;Called to determine if a resolver instance is able to access a specified property_on a specified target object._@param context the evaluation context in which the access is being attempted_@param target the target object upon which the property is being accessed_@param name the name of the property being accessed_@return true if this resolver is able to read the property_@throws AccessException if there is any problem determining whether the property_can be read;boolean canRead(EvaluationContext context, Object target, String name) throws AccessException_;called,to,determine,if,a,resolver,instance,is,able,to,access,a,specified,property,on,a,specified,target,object,param,context,the,evaluation,context,in,which,the,access,is,being,attempted,param,target,the,target,object,upon,which,the,property,is,being,accessed,param,name,the,name,of,the,property,being,accessed,return,true,if,this,resolver,is,able,to,read,the,property,throws,access,exception,if,there,is,any,problem,determining,whether,the,property,can,be,read;boolean,can,read,evaluation,context,context,object,target,string,name,throws,access,exception
PropertyAccessor -> boolean canRead(EvaluationContext context, Object target, String name) throws AccessException_;1394572186;Called to determine if a resolver instance is able to access a specified property_on a specified target object._@param context the evaluation context in which the access is being attempted_@param target the target object upon which the property is being accessed_@param name the name of the property being accessed_@return true if this resolver is able to read the property_@throws AccessException if there is any problem determining whether the property can be read;boolean canRead(EvaluationContext context, Object target, String name) throws AccessException_;called,to,determine,if,a,resolver,instance,is,able,to,access,a,specified,property,on,a,specified,target,object,param,context,the,evaluation,context,in,which,the,access,is,being,attempted,param,target,the,target,object,upon,which,the,property,is,being,accessed,param,name,the,name,of,the,property,being,accessed,return,true,if,this,resolver,is,able,to,read,the,property,throws,access,exception,if,there,is,any,problem,determining,whether,the,property,can,be,read;boolean,can,read,evaluation,context,context,object,target,string,name,throws,access,exception
PropertyAccessor -> boolean canRead(EvaluationContext context, Object target, String name) throws AccessException_;1495868221;Called to determine if a resolver instance is able to access a specified property_on a specified target object._@param context the evaluation context in which the access is being attempted_@param target the target object upon which the property is being accessed_@param name the name of the property being accessed_@return true if this resolver is able to read the property_@throws AccessException if there is any problem determining whether the property can be read;boolean canRead(EvaluationContext context, Object target, String name) throws AccessException_;called,to,determine,if,a,resolver,instance,is,able,to,access,a,specified,property,on,a,specified,target,object,param,context,the,evaluation,context,in,which,the,access,is,being,attempted,param,target,the,target,object,upon,which,the,property,is,being,accessed,param,name,the,name,of,the,property,being,accessed,return,true,if,this,resolver,is,able,to,read,the,property,throws,access,exception,if,there,is,any,problem,determining,whether,the,property,can,be,read;boolean,can,read,evaluation,context,context,object,target,string,name,throws,access,exception
PropertyAccessor -> boolean canWrite(EvaluationContext context, Object target, String name) throws AccessException_;1328020251;Called to determine if a resolver instance is able to write to a specified property on a specified target object._@param context the evaluation context in which the access is being attempted_@param target the target object upon which the property is being accessed_@param name the name of the property being accessed_@return true if this resolver is able to write to the property_@throws AccessException if there is any problem determining whether the property can be written to;boolean canWrite(EvaluationContext context, Object target, String name) throws AccessException_;called,to,determine,if,a,resolver,instance,is,able,to,write,to,a,specified,property,on,a,specified,target,object,param,context,the,evaluation,context,in,which,the,access,is,being,attempted,param,target,the,target,object,upon,which,the,property,is,being,accessed,param,name,the,name,of,the,property,being,accessed,return,true,if,this,resolver,is,able,to,write,to,the,property,throws,access,exception,if,there,is,any,problem,determining,whether,the,property,can,be,written,to;boolean,can,write,evaluation,context,context,object,target,string,name,throws,access,exception
PropertyAccessor -> boolean canWrite(EvaluationContext context, Object target, String name) throws AccessException_;1356735495;Called to determine if a resolver instance is able to write to a specified property on a specified target object._@param context the evaluation context in which the access is being attempted_@param target the target object upon which the property is being accessed_@param name the name of the property being accessed_@return true if this resolver is able to write to the property_@throws AccessException if there is any problem determining whether the property can be written to;boolean canWrite(EvaluationContext context, Object target, String name) throws AccessException_;called,to,determine,if,a,resolver,instance,is,able,to,write,to,a,specified,property,on,a,specified,target,object,param,context,the,evaluation,context,in,which,the,access,is,being,attempted,param,target,the,target,object,upon,which,the,property,is,being,accessed,param,name,the,name,of,the,property,being,accessed,return,true,if,this,resolver,is,able,to,write,to,the,property,throws,access,exception,if,there,is,any,problem,determining,whether,the,property,can,be,written,to;boolean,can,write,evaluation,context,context,object,target,string,name,throws,access,exception
PropertyAccessor -> boolean canWrite(EvaluationContext context, Object target, String name) throws AccessException_;1372363092;Called to determine if a resolver instance is able to write to a specified property_on a specified target object._@param context the evaluation context in which the access is being attempted_@param target the target object upon which the property is being accessed_@param name the name of the property being accessed_@return true if this resolver is able to write to the property_@throws AccessException if there is any problem determining whether the property_can be written to;boolean canWrite(EvaluationContext context, Object target, String name) throws AccessException_;called,to,determine,if,a,resolver,instance,is,able,to,write,to,a,specified,property,on,a,specified,target,object,param,context,the,evaluation,context,in,which,the,access,is,being,attempted,param,target,the,target,object,upon,which,the,property,is,being,accessed,param,name,the,name,of,the,property,being,accessed,return,true,if,this,resolver,is,able,to,write,to,the,property,throws,access,exception,if,there,is,any,problem,determining,whether,the,property,can,be,written,to;boolean,can,write,evaluation,context,context,object,target,string,name,throws,access,exception
PropertyAccessor -> boolean canWrite(EvaluationContext context, Object target, String name) throws AccessException_;1385412762;Called to determine if a resolver instance is able to write to a specified property_on a specified target object._@param context the evaluation context in which the access is being attempted_@param target the target object upon which the property is being accessed_@param name the name of the property being accessed_@return true if this resolver is able to write to the property_@throws AccessException if there is any problem determining whether the property_can be written to;boolean canWrite(EvaluationContext context, Object target, String name) throws AccessException_;called,to,determine,if,a,resolver,instance,is,able,to,write,to,a,specified,property,on,a,specified,target,object,param,context,the,evaluation,context,in,which,the,access,is,being,attempted,param,target,the,target,object,upon,which,the,property,is,being,accessed,param,name,the,name,of,the,property,being,accessed,return,true,if,this,resolver,is,able,to,write,to,the,property,throws,access,exception,if,there,is,any,problem,determining,whether,the,property,can,be,written,to;boolean,can,write,evaluation,context,context,object,target,string,name,throws,access,exception
PropertyAccessor -> boolean canWrite(EvaluationContext context, Object target, String name) throws AccessException_;1394572186;Called to determine if a resolver instance is able to write to a specified_property on a specified target object._@param context the evaluation context in which the access is being attempted_@param target the target object upon which the property is being accessed_@param name the name of the property being accessed_@return true if this resolver is able to write to the property_@throws AccessException if there is any problem determining whether the_property can be written to;boolean canWrite(EvaluationContext context, Object target, String name) throws AccessException_;called,to,determine,if,a,resolver,instance,is,able,to,write,to,a,specified,property,on,a,specified,target,object,param,context,the,evaluation,context,in,which,the,access,is,being,attempted,param,target,the,target,object,upon,which,the,property,is,being,accessed,param,name,the,name,of,the,property,being,accessed,return,true,if,this,resolver,is,able,to,write,to,the,property,throws,access,exception,if,there,is,any,problem,determining,whether,the,property,can,be,written,to;boolean,can,write,evaluation,context,context,object,target,string,name,throws,access,exception
PropertyAccessor -> boolean canWrite(EvaluationContext context, Object target, String name) throws AccessException_;1495868221;Called to determine if a resolver instance is able to write to a specified_property on a specified target object._@param context the evaluation context in which the access is being attempted_@param target the target object upon which the property is being accessed_@param name the name of the property being accessed_@return true if this resolver is able to write to the property_@throws AccessException if there is any problem determining whether the_property can be written to;boolean canWrite(EvaluationContext context, Object target, String name) throws AccessException_;called,to,determine,if,a,resolver,instance,is,able,to,write,to,a,specified,property,on,a,specified,target,object,param,context,the,evaluation,context,in,which,the,access,is,being,attempted,param,target,the,target,object,upon,which,the,property,is,being,accessed,param,name,the,name,of,the,property,being,accessed,return,true,if,this,resolver,is,able,to,write,to,the,property,throws,access,exception,if,there,is,any,problem,determining,whether,the,property,can,be,written,to;boolean,can,write,evaluation,context,context,object,target,string,name,throws,access,exception
PropertyAccessor -> void write(EvaluationContext context, Object target, String name, Object newValue) throws AccessException_;1328020251;Called to write to a property on a specified target object. Should only succeed if canWrite() also returns true._@param context the evaluation context in which the access is being attempted_@param target the target object upon which the property is being accessed_@param name the name of the property being accessed_@param newValue the new value for the property_@throws AccessException if there is any problem writing to the property value;void write(EvaluationContext context, Object target, String name, Object newValue) throws AccessException_;called,to,write,to,a,property,on,a,specified,target,object,should,only,succeed,if,can,write,also,returns,true,param,context,the,evaluation,context,in,which,the,access,is,being,attempted,param,target,the,target,object,upon,which,the,property,is,being,accessed,param,name,the,name,of,the,property,being,accessed,param,new,value,the,new,value,for,the,property,throws,access,exception,if,there,is,any,problem,writing,to,the,property,value;void,write,evaluation,context,context,object,target,string,name,object,new,value,throws,access,exception
PropertyAccessor -> void write(EvaluationContext context, Object target, String name, Object newValue) throws AccessException_;1356735495;Called to write to a property on a specified target object. Should only succeed if canWrite() also returns true._@param context the evaluation context in which the access is being attempted_@param target the target object upon which the property is being accessed_@param name the name of the property being accessed_@param newValue the new value for the property_@throws AccessException if there is any problem writing to the property value;void write(EvaluationContext context, Object target, String name, Object newValue) throws AccessException_;called,to,write,to,a,property,on,a,specified,target,object,should,only,succeed,if,can,write,also,returns,true,param,context,the,evaluation,context,in,which,the,access,is,being,attempted,param,target,the,target,object,upon,which,the,property,is,being,accessed,param,name,the,name,of,the,property,being,accessed,param,new,value,the,new,value,for,the,property,throws,access,exception,if,there,is,any,problem,writing,to,the,property,value;void,write,evaluation,context,context,object,target,string,name,object,new,value,throws,access,exception
PropertyAccessor -> void write(EvaluationContext context, Object target, String name, Object newValue) throws AccessException_;1372363092;Called to write to a property on a specified target object. Should only succeed if_canWrite() also returns true._@param context the evaluation context in which the access is being attempted_@param target the target object upon which the property is being accessed_@param name the name of the property being accessed_@param newValue the new value for the property_@throws AccessException if there is any problem writing to the property value;void write(EvaluationContext context, Object target, String name, Object newValue) throws AccessException_;called,to,write,to,a,property,on,a,specified,target,object,should,only,succeed,if,can,write,also,returns,true,param,context,the,evaluation,context,in,which,the,access,is,being,attempted,param,target,the,target,object,upon,which,the,property,is,being,accessed,param,name,the,name,of,the,property,being,accessed,param,new,value,the,new,value,for,the,property,throws,access,exception,if,there,is,any,problem,writing,to,the,property,value;void,write,evaluation,context,context,object,target,string,name,object,new,value,throws,access,exception
PropertyAccessor -> void write(EvaluationContext context, Object target, String name, Object newValue) throws AccessException_;1385412762;Called to write to a property on a specified target object. Should only succeed if_canWrite() also returns true._@param context the evaluation context in which the access is being attempted_@param target the target object upon which the property is being accessed_@param name the name of the property being accessed_@param newValue the new value for the property_@throws AccessException if there is any problem writing to the property value;void write(EvaluationContext context, Object target, String name, Object newValue) throws AccessException_;called,to,write,to,a,property,on,a,specified,target,object,should,only,succeed,if,can,write,also,returns,true,param,context,the,evaluation,context,in,which,the,access,is,being,attempted,param,target,the,target,object,upon,which,the,property,is,being,accessed,param,name,the,name,of,the,property,being,accessed,param,new,value,the,new,value,for,the,property,throws,access,exception,if,there,is,any,problem,writing,to,the,property,value;void,write,evaluation,context,context,object,target,string,name,object,new,value,throws,access,exception
PropertyAccessor -> void write(EvaluationContext context, Object target, String name, Object newValue) throws AccessException_;1394572186;Called to write to a property on a specified target object._Should only succeed if {@link #canWrite} also returns {@code true}._@param context the evaluation context in which the access is being attempted_@param target the target object upon which the property is being accessed_@param name the name of the property being accessed_@param newValue the new value for the property_@throws AccessException if there is any problem writing to the property value;void write(EvaluationContext context, Object target, String name, Object newValue) throws AccessException_;called,to,write,to,a,property,on,a,specified,target,object,should,only,succeed,if,link,can,write,also,returns,code,true,param,context,the,evaluation,context,in,which,the,access,is,being,attempted,param,target,the,target,object,upon,which,the,property,is,being,accessed,param,name,the,name,of,the,property,being,accessed,param,new,value,the,new,value,for,the,property,throws,access,exception,if,there,is,any,problem,writing,to,the,property,value;void,write,evaluation,context,context,object,target,string,name,object,new,value,throws,access,exception
PropertyAccessor -> void write(EvaluationContext context, Object target, String name, Object newValue) throws AccessException_;1495868221;Called to write to a property on a specified target object._Should only succeed if {@link #canWrite} also returns {@code true}._@param context the evaluation context in which the access is being attempted_@param target the target object upon which the property is being accessed_@param name the name of the property being accessed_@param newValue the new value for the property_@throws AccessException if there is any problem writing to the property value;void write(EvaluationContext context, Object target, String name, Object newValue) throws AccessException_;called,to,write,to,a,property,on,a,specified,target,object,should,only,succeed,if,link,can,write,also,returns,code,true,param,context,the,evaluation,context,in,which,the,access,is,being,attempted,param,target,the,target,object,upon,which,the,property,is,being,accessed,param,name,the,name,of,the,property,being,accessed,param,new,value,the,new,value,for,the,property,throws,access,exception,if,there,is,any,problem,writing,to,the,property,value;void,write,evaluation,context,context,object,target,string,name,object,new,value,throws,access,exception
