# id;timestamp;commentText;codeText;commentWords;codeWords
TypeComparator -> int compare(Object firstObject, Object secondObject) throws EvaluationException_;1328020251;Compare two objects._@param firstObject the first object_@param secondObject the second object_@return 0 if they are equal, <0 if the first is smaller than the second, or >0 if the first is larger than the_second_@throws EvaluationException if a problem occurs during comparison (or they are not comparable);int compare(Object firstObject, Object secondObject) throws EvaluationException_;compare,two,objects,param,first,object,the,first,object,param,second,object,the,second,object,return,0,if,they,are,equal,0,if,the,first,is,smaller,than,the,second,or,0,if,the,first,is,larger,than,the,second,throws,evaluation,exception,if,a,problem,occurs,during,comparison,or,they,are,not,comparable;int,compare,object,first,object,object,second,object,throws,evaluation,exception
TypeComparator -> int compare(Object firstObject, Object secondObject) throws EvaluationException_;1356735495;Compare two objects._@param firstObject the first object_@param secondObject the second object_@return 0 if they are equal, <0 if the first is smaller than the second, or >0 if the first is larger than the_second_@throws EvaluationException if a problem occurs during comparison (or they are not comparable);int compare(Object firstObject, Object secondObject) throws EvaluationException_;compare,two,objects,param,first,object,the,first,object,param,second,object,the,second,object,return,0,if,they,are,equal,0,if,the,first,is,smaller,than,the,second,or,0,if,the,first,is,larger,than,the,second,throws,evaluation,exception,if,a,problem,occurs,during,comparison,or,they,are,not,comparable;int,compare,object,first,object,object,second,object,throws,evaluation,exception
TypeComparator -> int compare(Object firstObject, Object secondObject) throws EvaluationException_;1372363092;Compare two objects._@param firstObject the first object_@param secondObject the second object_@return 0 if they are equal, <0 if the first is smaller than the second, or >0 if_the first is larger than the second_@throws EvaluationException if a problem occurs during comparison (or they are not_comparable);int compare(Object firstObject, Object secondObject) throws EvaluationException_;compare,two,objects,param,first,object,the,first,object,param,second,object,the,second,object,return,0,if,they,are,equal,0,if,the,first,is,smaller,than,the,second,or,0,if,the,first,is,larger,than,the,second,throws,evaluation,exception,if,a,problem,occurs,during,comparison,or,they,are,not,comparable;int,compare,object,first,object,object,second,object,throws,evaluation,exception
TypeComparator -> int compare(Object firstObject, Object secondObject) throws EvaluationException_;1389887689;Compare two given objects._@param firstObject the first object_@param secondObject the second object_@return 0 if they are equal, <0 if the first is smaller than the second,_or >0 if the first is larger than the second_@throws EvaluationException if a problem occurs during comparison_(or if they are not comparable in the first place);int compare(Object firstObject, Object secondObject) throws EvaluationException_;compare,two,given,objects,param,first,object,the,first,object,param,second,object,the,second,object,return,0,if,they,are,equal,0,if,the,first,is,smaller,than,the,second,or,0,if,the,first,is,larger,than,the,second,throws,evaluation,exception,if,a,problem,occurs,during,comparison,or,if,they,are,not,comparable,in,the,first,place;int,compare,object,first,object,object,second,object,throws,evaluation,exception
TypeComparator -> boolean canCompare(Object firstObject, Object secondObject)_;1328020251;Return true if the comparator can compare these two objects_@param firstObject the first object_@param secondObject the second object_@return true if the comparator can compare these objects;boolean canCompare(Object firstObject, Object secondObject)_;return,true,if,the,comparator,can,compare,these,two,objects,param,first,object,the,first,object,param,second,object,the,second,object,return,true,if,the,comparator,can,compare,these,objects;boolean,can,compare,object,first,object,object,second,object
TypeComparator -> boolean canCompare(Object firstObject, Object secondObject)_;1356735495;Return true if the comparator can compare these two objects_@param firstObject the first object_@param secondObject the second object_@return true if the comparator can compare these objects;boolean canCompare(Object firstObject, Object secondObject)_;return,true,if,the,comparator,can,compare,these,two,objects,param,first,object,the,first,object,param,second,object,the,second,object,return,true,if,the,comparator,can,compare,these,objects;boolean,can,compare,object,first,object,object,second,object
TypeComparator -> boolean canCompare(Object firstObject, Object secondObject)_;1372363092;Return true if the comparator can compare these two objects_@param firstObject the first object_@param secondObject the second object_@return true if the comparator can compare these objects;boolean canCompare(Object firstObject, Object secondObject)_;return,true,if,the,comparator,can,compare,these,two,objects,param,first,object,the,first,object,param,second,object,the,second,object,return,true,if,the,comparator,can,compare,these,objects;boolean,can,compare,object,first,object,object,second,object
TypeComparator -> boolean canCompare(Object firstObject, Object secondObject)_;1389887689;Return {@code true} if the comparator can compare these two objects._@param firstObject the first object_@param secondObject the second object_@return {@code true} if the comparator can compare these objects;boolean canCompare(Object firstObject, Object secondObject)_;return,code,true,if,the,comparator,can,compare,these,two,objects,param,first,object,the,first,object,param,second,object,the,second,object,return,code,true,if,the,comparator,can,compare,these,objects;boolean,can,compare,object,first,object,object,second,object
