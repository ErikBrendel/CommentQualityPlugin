# id;timestamp;commentText;codeText;commentWords;codeWords
Expression -> TypeDescriptor getValueTypeDescriptor() throws EvaluationException_;1328020251;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method using the default context._@return a type descriptor for the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;TypeDescriptor getValueTypeDescriptor() throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,using,the,default,context,return,a,type,descriptor,for,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;type,descriptor,get,value,type,descriptor,throws,evaluation,exception
Expression -> TypeDescriptor getValueTypeDescriptor() throws EvaluationException_;1356735495;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method using the default context._@return a type descriptor for the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;TypeDescriptor getValueTypeDescriptor() throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,using,the,default,context,return,a,type,descriptor,for,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;type,descriptor,get,value,type,descriptor,throws,evaluation,exception
Expression -> TypeDescriptor getValueTypeDescriptor() throws EvaluationException_;1372363092;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method using the default context._@return a type descriptor for the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;TypeDescriptor getValueTypeDescriptor() throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,using,the,default,context,return,a,type,descriptor,for,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;type,descriptor,get,value,type,descriptor,throws,evaluation,exception
Expression -> TypeDescriptor getValueTypeDescriptor() throws EvaluationException_;1385412762;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method using the default context._@return a type descriptor for the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;TypeDescriptor getValueTypeDescriptor() throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,using,the,default,context,return,a,type,descriptor,for,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;type,descriptor,get,value,type,descriptor,throws,evaluation,exception
Expression -> @Nullable 	TypeDescriptor getValueTypeDescriptor(EvaluationContext context) throws EvaluationException_;1496837955;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method for the given context._@param context the context in which to evaluate the expression_@return a type descriptor for the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;@Nullable_	TypeDescriptor getValueTypeDescriptor(EvaluationContext context) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,for,the,given,context,param,context,the,context,in,which,to,evaluate,the,expression,return,a,type,descriptor,for,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;nullable,type,descriptor,get,value,type,descriptor,evaluation,context,context,throws,evaluation,exception
Expression -> @Nullable 	TypeDescriptor getValueTypeDescriptor(EvaluationContext context) throws EvaluationException_;1499973642;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method for the given context._@param context the context in which to evaluate the expression_@return a type descriptor for the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;@Nullable_	TypeDescriptor getValueTypeDescriptor(EvaluationContext context) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,for,the,given,context,param,context,the,context,in,which,to,evaluate,the,expression,return,a,type,descriptor,for,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;nullable,type,descriptor,get,value,type,descriptor,evaluation,context,context,throws,evaluation,exception
Expression -> @Nullable 	TypeDescriptor getValueTypeDescriptor(EvaluationContext context) throws EvaluationException_;1500043582;Return the most general type that can be passed to the_{@link #setValue(EvaluationContext, Object)} method for the given context._@param context the context in which to evaluate the expression_@return a type descriptor for values that can be set on this context_@throws EvaluationException if there is a problem determining the type;@Nullable_	TypeDescriptor getValueTypeDescriptor(EvaluationContext context) throws EvaluationException_;return,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,for,the,given,context,param,context,the,context,in,which,to,evaluate,the,expression,return,a,type,descriptor,for,values,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;nullable,type,descriptor,get,value,type,descriptor,evaluation,context,context,throws,evaluation,exception
Expression -> @Nullable 	<T> T getValue(Object rootObject, @Nullable Class<T> desiredResultType) throws EvaluationException_;1496837955;Evaluate the expression in the default context against the specified root object. If the_result of the evaluation does not match (and cannot be converted to) the expected result type_then an exception will be returned._@param rootObject the root object against which properties/etc will be resolved_@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;@Nullable_	<T> T getValue(Object rootObject, @Nullable Class<T> desiredResultType) throws EvaluationException_;evaluate,the,expression,in,the,default,context,against,the,specified,root,object,if,the,result,of,the,evaluation,does,not,match,and,cannot,be,converted,to,the,expected,result,type,then,an,exception,will,be,returned,param,root,object,the,root,object,against,which,properties,etc,will,be,resolved,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;nullable,t,t,get,value,object,root,object,nullable,class,t,desired,result,type,throws,evaluation,exception
Expression -> @Nullable 	<T> T getValue(Object rootObject, @Nullable Class<T> desiredResultType) throws EvaluationException_;1499973642;Evaluate the expression in the default context against the specified root object. If the_result of the evaluation does not match (and cannot be converted to) the expected result type_then an exception will be returned._@param rootObject the root object against which properties/etc will be resolved_@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;@Nullable_	<T> T getValue(Object rootObject, @Nullable Class<T> desiredResultType) throws EvaluationException_;evaluate,the,expression,in,the,default,context,against,the,specified,root,object,if,the,result,of,the,evaluation,does,not,match,and,cannot,be,converted,to,the,expected,result,type,then,an,exception,will,be,returned,param,root,object,the,root,object,against,which,properties,etc,will,be,resolved,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;nullable,t,t,get,value,object,root,object,nullable,class,t,desired,result,type,throws,evaluation,exception
Expression -> @Nullable 	<T> T getValue(Object rootObject, @Nullable Class<T> desiredResultType) throws EvaluationException_;1500043582;Evaluate the expression in the default context against the specified root_object. If the result of the evaluation does not match (and cannot be_converted to) the expected result type then an exception will be returned._@param rootObject the root object against which to evaluate the expression_@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;@Nullable_	<T> T getValue(Object rootObject, @Nullable Class<T> desiredResultType) throws EvaluationException_;evaluate,the,expression,in,the,default,context,against,the,specified,root,object,if,the,result,of,the,evaluation,does,not,match,and,cannot,be,converted,to,the,expected,result,type,then,an,exception,will,be,returned,param,root,object,the,root,object,against,which,to,evaluate,the,expression,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;nullable,t,t,get,value,object,root,object,nullable,class,t,desired,result,type,throws,evaluation,exception
Expression -> @Nullable 	Object getValue(EvaluationContext context) throws EvaluationException_;1496837955;Evaluate this expression in the provided context and return the result of evaluation._@param context the context in which to evaluate the expression_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;@Nullable_	Object getValue(EvaluationContext context) throws EvaluationException_;evaluate,this,expression,in,the,provided,context,and,return,the,result,of,evaluation,param,context,the,context,in,which,to,evaluate,the,expression,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;nullable,object,get,value,evaluation,context,context,throws,evaluation,exception
Expression -> @Nullable 	Object getValue(EvaluationContext context) throws EvaluationException_;1499973642;Evaluate this expression in the provided context and return the result of evaluation._@param context the context in which to evaluate the expression_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;@Nullable_	Object getValue(EvaluationContext context) throws EvaluationException_;evaluate,this,expression,in,the,provided,context,and,return,the,result,of,evaluation,param,context,the,context,in,which,to,evaluate,the,expression,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;nullable,object,get,value,evaluation,context,context,throws,evaluation,exception
Expression -> @Nullable 	Object getValue(EvaluationContext context) throws EvaluationException_;1500043582;Evaluate this expression in the provided context and return the result_of evaluation._@param context the context in which to evaluate the expression_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;@Nullable_	Object getValue(EvaluationContext context) throws EvaluationException_;evaluate,this,expression,in,the,provided,context,and,return,the,result,of,evaluation,param,context,the,context,in,which,to,evaluate,the,expression,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;nullable,object,get,value,evaluation,context,context,throws,evaluation,exception
Expression -> Class getValueType(EvaluationContext context) throws EvaluationException_;1328020251;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method for the given context._@param context the context in which to evaluate the expression_@return the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;Class getValueType(EvaluationContext context) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,for,the,given,context,param,context,the,context,in,which,to,evaluate,the,expression,return,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;class,get,value,type,evaluation,context,context,throws,evaluation,exception
Expression -> Class getValueType(EvaluationContext context) throws EvaluationException_;1356735495;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method for the given context._@param context the context in which to evaluate the expression_@return the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;Class getValueType(EvaluationContext context) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,for,the,given,context,param,context,the,context,in,which,to,evaluate,the,expression,return,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;class,get,value,type,evaluation,context,context,throws,evaluation,exception
Expression -> Class getValueType(EvaluationContext context) throws EvaluationException_;1372363092;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method for the given context._@param context the context in which to evaluate the expression_@return the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;Class getValueType(EvaluationContext context) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,for,the,given,context,param,context,the,context,in,which,to,evaluate,the,expression,return,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;class,get,value,type,evaluation,context,context,throws,evaluation,exception
Expression -> void setValue(EvaluationContext context, Object value) throws EvaluationException_;1328020251;Set this expression in the provided context to the value provided.__@param context the context in which to set the value of the expression_@param value the new value_@throws EvaluationException if there is a problem during evaluation;void setValue(EvaluationContext context, Object value) throws EvaluationException_;set,this,expression,in,the,provided,context,to,the,value,provided,param,context,the,context,in,which,to,set,the,value,of,the,expression,param,value,the,new,value,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;void,set,value,evaluation,context,context,object,value,throws,evaluation,exception
Expression -> void setValue(EvaluationContext context, Object value) throws EvaluationException_;1356735495;Set this expression in the provided context to the value provided.__@param context the context in which to set the value of the expression_@param value the new value_@throws EvaluationException if there is a problem during evaluation;void setValue(EvaluationContext context, Object value) throws EvaluationException_;set,this,expression,in,the,provided,context,to,the,value,provided,param,context,the,context,in,which,to,set,the,value,of,the,expression,param,value,the,new,value,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;void,set,value,evaluation,context,context,object,value,throws,evaluation,exception
Expression -> void setValue(EvaluationContext context, Object value) throws EvaluationException_;1372363092;Set this expression in the provided context to the value provided.__@param context the context in which to set the value of the expression_@param value the new value_@throws EvaluationException if there is a problem during evaluation;void setValue(EvaluationContext context, Object value) throws EvaluationException_;set,this,expression,in,the,provided,context,to,the,value,provided,param,context,the,context,in,which,to,set,the,value,of,the,expression,param,value,the,new,value,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;void,set,value,evaluation,context,context,object,value,throws,evaluation,exception
Expression -> void setValue(EvaluationContext context, Object value) throws EvaluationException_;1385412762;Set this expression in the provided context to the value provided.__@param context the context in which to set the value of the expression_@param value the new value_@throws EvaluationException if there is a problem during evaluation;void setValue(EvaluationContext context, Object value) throws EvaluationException_;set,this,expression,in,the,provided,context,to,the,value,provided,param,context,the,context,in,which,to,set,the,value,of,the,expression,param,value,the,new,value,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;void,set,value,evaluation,context,context,object,value,throws,evaluation,exception
Expression -> void setValue(EvaluationContext context, Object value) throws EvaluationException_;1496837955;Set this expression in the provided context to the value provided.__@param context the context in which to set the value of the expression_@param value the new value_@throws EvaluationException if there is a problem during evaluation;void setValue(EvaluationContext context, Object value) throws EvaluationException_;set,this,expression,in,the,provided,context,to,the,value,provided,param,context,the,context,in,which,to,set,the,value,of,the,expression,param,value,the,new,value,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;void,set,value,evaluation,context,context,object,value,throws,evaluation,exception
Expression -> boolean isWritable(Object rootObject) throws EvaluationException_;1328020251;Determine if an expression can be written to, i.e. setValue() can be called._@param rootObject the root object against which to evaluate the expression_@return true if the expression is writable_@throws EvaluationException if there is a problem determining if it is writable;boolean isWritable(Object rootObject) throws EvaluationException_;determine,if,an,expression,can,be,written,to,i,e,set,value,can,be,called,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,true,if,the,expression,is,writable,throws,evaluation,exception,if,there,is,a,problem,determining,if,it,is,writable;boolean,is,writable,object,root,object,throws,evaluation,exception
Expression -> boolean isWritable(Object rootObject) throws EvaluationException_;1356735495;Determine if an expression can be written to, i.e. setValue() can be called._@param rootObject the root object against which to evaluate the expression_@return true if the expression is writable_@throws EvaluationException if there is a problem determining if it is writable;boolean isWritable(Object rootObject) throws EvaluationException_;determine,if,an,expression,can,be,written,to,i,e,set,value,can,be,called,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,true,if,the,expression,is,writable,throws,evaluation,exception,if,there,is,a,problem,determining,if,it,is,writable;boolean,is,writable,object,root,object,throws,evaluation,exception
Expression -> boolean isWritable(Object rootObject) throws EvaluationException_;1372363092;Determine if an expression can be written to, i.e. setValue() can be called._@param rootObject the root object against which to evaluate the expression_@return true if the expression is writable_@throws EvaluationException if there is a problem determining if it is writable;boolean isWritable(Object rootObject) throws EvaluationException_;determine,if,an,expression,can,be,written,to,i,e,set,value,can,be,called,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,true,if,the,expression,is,writable,throws,evaluation,exception,if,there,is,a,problem,determining,if,it,is,writable;boolean,is,writable,object,root,object,throws,evaluation,exception
Expression -> boolean isWritable(Object rootObject) throws EvaluationException_;1385412762;Determine if an expression can be written to, i.e. setValue() can be called._@param rootObject the root object against which to evaluate the expression_@return true if the expression is writable_@throws EvaluationException if there is a problem determining if it is writable;boolean isWritable(Object rootObject) throws EvaluationException_;determine,if,an,expression,can,be,written,to,i,e,set,value,can,be,called,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,true,if,the,expression,is,writable,throws,evaluation,exception,if,there,is,a,problem,determining,if,it,is,writable;boolean,is,writable,object,root,object,throws,evaluation,exception
Expression -> boolean isWritable(Object rootObject) throws EvaluationException_;1496837955;Determine if an expression can be written to, i.e. setValue() can be called._@param rootObject the root object against which to evaluate the expression_@return true if the expression is writable_@throws EvaluationException if there is a problem determining if it is writable;boolean isWritable(Object rootObject) throws EvaluationException_;determine,if,an,expression,can,be,written,to,i,e,set,value,can,be,called,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,true,if,the,expression,is,writable,throws,evaluation,exception,if,there,is,a,problem,determining,if,it,is,writable;boolean,is,writable,object,root,object,throws,evaluation,exception
Expression -> boolean isWritable(Object rootObject) throws EvaluationException_;1499973642;Determine if an expression can be written to, i.e. setValue() can be called._@param rootObject the root object against which to evaluate the expression_@return true if the expression is writable_@throws EvaluationException if there is a problem determining if it is writable;boolean isWritable(Object rootObject) throws EvaluationException_;determine,if,an,expression,can,be,written,to,i,e,set,value,can,be,called,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,true,if,the,expression,is,writable,throws,evaluation,exception,if,there,is,a,problem,determining,if,it,is,writable;boolean,is,writable,object,root,object,throws,evaluation,exception
Expression -> boolean isWritable(Object rootObject) throws EvaluationException_;1500043582;Determine if an expression can be written to, i.e. setValue() can be called._@param rootObject the root object against which to evaluate the expression_@return {@code true} if the expression is writable_ {@code false} otherwise_@throws EvaluationException if there is a problem determining if it is writable;boolean isWritable(Object rootObject) throws EvaluationException_;determine,if,an,expression,can,be,written,to,i,e,set,value,can,be,called,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,code,true,if,the,expression,is,writable,code,false,otherwise,throws,evaluation,exception,if,there,is,a,problem,determining,if,it,is,writable;boolean,is,writable,object,root,object,throws,evaluation,exception
Expression -> <T> T getValue(EvaluationContext context, Class<T> desiredResultType) throws EvaluationException_;1328020251;Evaluate the expression in a specified context which can resolve references to properties, methods, types, etc -_the type of the evaluation result is expected to be of a particular class and an exception will be thrown if it_is not and cannot be converted to that type._@param context the context in which to evaluate the expression_@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;<T> T getValue(EvaluationContext context, Class<T> desiredResultType) throws EvaluationException_;evaluate,the,expression,in,a,specified,context,which,can,resolve,references,to,properties,methods,types,etc,the,type,of,the,evaluation,result,is,expected,to,be,of,a,particular,class,and,an,exception,will,be,thrown,if,it,is,not,and,cannot,be,converted,to,that,type,param,context,the,context,in,which,to,evaluate,the,expression,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;t,t,get,value,evaluation,context,context,class,t,desired,result,type,throws,evaluation,exception
Expression -> <T> T getValue(EvaluationContext context, Class<T> desiredResultType) throws EvaluationException_;1356735495;Evaluate the expression in a specified context which can resolve references to properties, methods, types, etc -_the type of the evaluation result is expected to be of a particular class and an exception will be thrown if it_is not and cannot be converted to that type._@param context the context in which to evaluate the expression_@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;<T> T getValue(EvaluationContext context, Class<T> desiredResultType) throws EvaluationException_;evaluate,the,expression,in,a,specified,context,which,can,resolve,references,to,properties,methods,types,etc,the,type,of,the,evaluation,result,is,expected,to,be,of,a,particular,class,and,an,exception,will,be,thrown,if,it,is,not,and,cannot,be,converted,to,that,type,param,context,the,context,in,which,to,evaluate,the,expression,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;t,t,get,value,evaluation,context,context,class,t,desired,result,type,throws,evaluation,exception
Expression -> <T> T getValue(EvaluationContext context, Class<T> desiredResultType) throws EvaluationException_;1372363092;Evaluate the expression in a specified context which can resolve references to properties, methods, types, etc -_the type of the evaluation result is expected to be of a particular class and an exception will be thrown if it_is not and cannot be converted to that type._@param context the context in which to evaluate the expression_@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;<T> T getValue(EvaluationContext context, Class<T> desiredResultType) throws EvaluationException_;evaluate,the,expression,in,a,specified,context,which,can,resolve,references,to,properties,methods,types,etc,the,type,of,the,evaluation,result,is,expected,to,be,of,a,particular,class,and,an,exception,will,be,thrown,if,it,is,not,and,cannot,be,converted,to,that,type,param,context,the,context,in,which,to,evaluate,the,expression,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;t,t,get,value,evaluation,context,context,class,t,desired,result,type,throws,evaluation,exception
Expression -> <T> T getValue(EvaluationContext context, Class<T> desiredResultType) throws EvaluationException_;1385412762;Evaluate the expression in a specified context which can resolve references to properties, methods, types, etc -_the type of the evaluation result is expected to be of a particular class and an exception will be thrown if it_is not and cannot be converted to that type._@param context the context in which to evaluate the expression_@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;<T> T getValue(EvaluationContext context, Class<T> desiredResultType) throws EvaluationException_;evaluate,the,expression,in,a,specified,context,which,can,resolve,references,to,properties,methods,types,etc,the,type,of,the,evaluation,result,is,expected,to,be,of,a,particular,class,and,an,exception,will,be,thrown,if,it,is,not,and,cannot,be,converted,to,that,type,param,context,the,context,in,which,to,evaluate,the,expression,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;t,t,get,value,evaluation,context,context,class,t,desired,result,type,throws,evaluation,exception
Expression -> TypeDescriptor getValueTypeDescriptor(Object rootObject) throws EvaluationException_;1328020251;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method using the default context._@param rootObject the root object against which to evaluate the expression_@return a type descriptor for the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;TypeDescriptor getValueTypeDescriptor(Object rootObject) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,using,the,default,context,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,a,type,descriptor,for,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;type,descriptor,get,value,type,descriptor,object,root,object,throws,evaluation,exception
Expression -> TypeDescriptor getValueTypeDescriptor(Object rootObject) throws EvaluationException_;1356735495;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method using the default context._@param rootObject the root object against which to evaluate the expression_@return a type descriptor for the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;TypeDescriptor getValueTypeDescriptor(Object rootObject) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,using,the,default,context,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,a,type,descriptor,for,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;type,descriptor,get,value,type,descriptor,object,root,object,throws,evaluation,exception
Expression -> TypeDescriptor getValueTypeDescriptor(Object rootObject) throws EvaluationException_;1372363092;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method using the default context._@param rootObject the root object against which to evaluate the expression_@return a type descriptor for the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;TypeDescriptor getValueTypeDescriptor(Object rootObject) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,using,the,default,context,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,a,type,descriptor,for,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;type,descriptor,get,value,type,descriptor,object,root,object,throws,evaluation,exception
Expression -> TypeDescriptor getValueTypeDescriptor(Object rootObject) throws EvaluationException_;1385412762;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method using the default context._@param rootObject the root object against which to evaluate the expression_@return a type descriptor for the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;TypeDescriptor getValueTypeDescriptor(Object rootObject) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,using,the,default,context,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,a,type,descriptor,for,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;type,descriptor,get,value,type,descriptor,object,root,object,throws,evaluation,exception
Expression -> @Nullable 	Class<?> getValueType(Object rootObject) throws EvaluationException_;1496837955;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method using the default context._@param rootObject the root object against which to evaluate the expression_@return the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;@Nullable_	Class<?> getValueType(Object rootObject) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,using,the,default,context,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;nullable,class,get,value,type,object,root,object,throws,evaluation,exception
Expression -> @Nullable 	Class<?> getValueType(Object rootObject) throws EvaluationException_;1499973642;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method using the default context._@param rootObject the root object against which to evaluate the expression_@return the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;@Nullable_	Class<?> getValueType(Object rootObject) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,using,the,default,context,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;nullable,class,get,value,type,object,root,object,throws,evaluation,exception
Expression -> @Nullable 	Class<?> getValueType(Object rootObject) throws EvaluationException_;1500043582;Return the most general type that can be passed to the_{@link #setValue(Object, Object)} method using the default context._@param rootObject the root object against which to evaluate the expression_@return the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;@Nullable_	Class<?> getValueType(Object rootObject) throws EvaluationException_;return,the,most,general,type,that,can,be,passed,to,the,link,set,value,object,object,method,using,the,default,context,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;nullable,class,get,value,type,object,root,object,throws,evaluation,exception
Expression -> Class getValueType() throws EvaluationException_;1328020251;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method using the default context._@return the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;Class getValueType() throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,using,the,default,context,return,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;class,get,value,type,throws,evaluation,exception
Expression -> Class getValueType() throws EvaluationException_;1356735495;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method using the default context._@return the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;Class getValueType() throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,using,the,default,context,return,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;class,get,value,type,throws,evaluation,exception
Expression -> Class getValueType() throws EvaluationException_;1372363092;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method using the default context._@return the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;Class getValueType() throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,using,the,default,context,return,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;class,get,value,type,throws,evaluation,exception
Expression -> void setValue(EvaluationContext context, Object rootObject, @Nullable Object value) throws EvaluationException_;1499973642;Set this expression in the provided context to the value provided._The supplied root object overrides any specified in the context._@param context the context in which to set the value of the expression_@param rootObject the root object against which to evaluate the expression_@param value the new value_@throws EvaluationException if there is a problem during evaluation;void setValue(EvaluationContext context, Object rootObject, @Nullable Object value) throws EvaluationException_;set,this,expression,in,the,provided,context,to,the,value,provided,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,to,set,the,value,of,the,expression,param,root,object,the,root,object,against,which,to,evaluate,the,expression,param,value,the,new,value,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;void,set,value,evaluation,context,context,object,root,object,nullable,object,value,throws,evaluation,exception
Expression -> void setValue(EvaluationContext context, Object rootObject, @Nullable Object value) throws EvaluationException_;1500043582;Set this expression in the provided context to the value provided._The supplied root object overrides any specified in the context._@param context the context in which to set the value of the expression_@param rootObject the root object against which to evaluate the expression_@param value the new value_@throws EvaluationException if there is a problem during evaluation;void setValue(EvaluationContext context, Object rootObject, @Nullable Object value) throws EvaluationException_;set,this,expression,in,the,provided,context,to,the,value,provided,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,to,set,the,value,of,the,expression,param,root,object,the,root,object,against,which,to,evaluate,the,expression,param,value,the,new,value,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;void,set,value,evaluation,context,context,object,root,object,nullable,object,value,throws,evaluation,exception
Expression -> @Nullable 	Object getValue(Object rootObject) throws EvaluationException_;1496837955;Evaluate this expression against the specified root object_@param rootObject the root object against which properties/etc will be resolved_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;@Nullable_	Object getValue(Object rootObject) throws EvaluationException_;evaluate,this,expression,against,the,specified,root,object,param,root,object,the,root,object,against,which,properties,etc,will,be,resolved,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;nullable,object,get,value,object,root,object,throws,evaluation,exception
Expression -> @Nullable 	Object getValue(Object rootObject) throws EvaluationException_;1499973642;Evaluate this expression against the specified root object_@param rootObject the root object against which properties/etc will be resolved_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;@Nullable_	Object getValue(Object rootObject) throws EvaluationException_;evaluate,this,expression,against,the,specified,root,object,param,root,object,the,root,object,against,which,properties,etc,will,be,resolved,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;nullable,object,get,value,object,root,object,throws,evaluation,exception
Expression -> @Nullable 	Object getValue(Object rootObject) throws EvaluationException_;1500043582;Evaluate this expression against the specified root object._@param rootObject the root object against which to evaluate the expression_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;@Nullable_	Object getValue(Object rootObject) throws EvaluationException_;evaluate,this,expression,against,the,specified,root,object,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;nullable,object,get,value,object,root,object,throws,evaluation,exception
Expression -> @Nullable 	Class<?> getValueType(EvaluationContext context) throws EvaluationException_;1496837955;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method for the given context._@param context the context in which to evaluate the expression_@return the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;@Nullable_	Class<?> getValueType(EvaluationContext context) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,for,the,given,context,param,context,the,context,in,which,to,evaluate,the,expression,return,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;nullable,class,get,value,type,evaluation,context,context,throws,evaluation,exception
Expression -> @Nullable 	Class<?> getValueType(EvaluationContext context) throws EvaluationException_;1499973642;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method for the given context._@param context the context in which to evaluate the expression_@return the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;@Nullable_	Class<?> getValueType(EvaluationContext context) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,for,the,given,context,param,context,the,context,in,which,to,evaluate,the,expression,return,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;nullable,class,get,value,type,evaluation,context,context,throws,evaluation,exception
Expression -> @Nullable 	Class<?> getValueType(EvaluationContext context) throws EvaluationException_;1500043582;Return the most general type that can be passed to the_{@link #setValue(EvaluationContext, Object)} method for the given context._@param context the context in which to evaluate the expression_@return the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;@Nullable_	Class<?> getValueType(EvaluationContext context) throws EvaluationException_;return,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,for,the,given,context,param,context,the,context,in,which,to,evaluate,the,expression,return,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;nullable,class,get,value,type,evaluation,context,context,throws,evaluation,exception
Expression -> Class getValueType(Object rootObject) throws EvaluationException_;1328020251;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method using the default context._@param rootObject the root object against which to evaluate the expression_@return the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;Class getValueType(Object rootObject) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,using,the,default,context,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;class,get,value,type,object,root,object,throws,evaluation,exception
Expression -> Class getValueType(Object rootObject) throws EvaluationException_;1356735495;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method using the default context._@param rootObject the root object against which to evaluate the expression_@return the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;Class getValueType(Object rootObject) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,using,the,default,context,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;class,get,value,type,object,root,object,throws,evaluation,exception
Expression -> Class getValueType(Object rootObject) throws EvaluationException_;1372363092;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method using the default context._@param rootObject the root object against which to evaluate the expression_@return the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;Class getValueType(Object rootObject) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,using,the,default,context,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;class,get,value,type,object,root,object,throws,evaluation,exception
Expression -> void setValue(Object rootObject, @Nullable Object value) throws EvaluationException_;1499973642;Set this expression in the provided context to the value provided._@param rootObject the root object against which to evaluate the expression_@param value the new value_@throws EvaluationException if there is a problem during evaluation;void setValue(Object rootObject, @Nullable Object value) throws EvaluationException_;set,this,expression,in,the,provided,context,to,the,value,provided,param,root,object,the,root,object,against,which,to,evaluate,the,expression,param,value,the,new,value,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;void,set,value,object,root,object,nullable,object,value,throws,evaluation,exception
Expression -> void setValue(Object rootObject, @Nullable Object value) throws EvaluationException_;1500043582;Set this expression in the provided context to the value provided._@param rootObject the root object against which to evaluate the expression_@param value the new value_@throws EvaluationException if there is a problem during evaluation;void setValue(Object rootObject, @Nullable Object value) throws EvaluationException_;set,this,expression,in,the,provided,context,to,the,value,provided,param,root,object,the,root,object,against,which,to,evaluate,the,expression,param,value,the,new,value,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;void,set,value,object,root,object,nullable,object,value,throws,evaluation,exception
Expression -> @Nullable 	Object getValue() throws EvaluationException_;1496837955;Evaluate this expression in the default standard context._@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;@Nullable_	Object getValue() throws EvaluationException_;evaluate,this,expression,in,the,default,standard,context,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;nullable,object,get,value,throws,evaluation,exception
Expression -> @Nullable 	Object getValue() throws EvaluationException_;1499973642;Evaluate this expression in the default standard context._@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;@Nullable_	Object getValue() throws EvaluationException_;evaluate,this,expression,in,the,default,standard,context,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;nullable,object,get,value,throws,evaluation,exception
Expression -> @Nullable 	Object getValue() throws EvaluationException_;1500043582;Evaluate this expression in the default standard context._@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;@Nullable_	Object getValue() throws EvaluationException_;evaluate,this,expression,in,the,default,standard,context,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;nullable,object,get,value,throws,evaluation,exception
Expression -> Object getValue(EvaluationContext context, Object rootObject) throws EvaluationException_;1328020251;Evaluate this expression in the provided context and return the result of evaluation, but use_the supplied root context as an override for any default root object specified in the context._@param context the context in which to evaluate the expression_@param rootObject the root object against which properties/etc will be resolved_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;Object getValue(EvaluationContext context, Object rootObject) throws EvaluationException_;evaluate,this,expression,in,the,provided,context,and,return,the,result,of,evaluation,but,use,the,supplied,root,context,as,an,override,for,any,default,root,object,specified,in,the,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,properties,etc,will,be,resolved,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;object,get,value,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> Object getValue(EvaluationContext context, Object rootObject) throws EvaluationException_;1356735495;Evaluate this expression in the provided context and return the result of evaluation, but use_the supplied root context as an override for any default root object specified in the context._@param context the context in which to evaluate the expression_@param rootObject the root object against which properties/etc will be resolved_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;Object getValue(EvaluationContext context, Object rootObject) throws EvaluationException_;evaluate,this,expression,in,the,provided,context,and,return,the,result,of,evaluation,but,use,the,supplied,root,context,as,an,override,for,any,default,root,object,specified,in,the,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,properties,etc,will,be,resolved,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;object,get,value,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> Object getValue(EvaluationContext context, Object rootObject) throws EvaluationException_;1372363092;Evaluate this expression in the provided context and return the result of evaluation, but use_the supplied root context as an override for any default root object specified in the context._@param context the context in which to evaluate the expression_@param rootObject the root object against which properties/etc will be resolved_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;Object getValue(EvaluationContext context, Object rootObject) throws EvaluationException_;evaluate,this,expression,in,the,provided,context,and,return,the,result,of,evaluation,but,use,the,supplied,root,context,as,an,override,for,any,default,root,object,specified,in,the,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,properties,etc,will,be,resolved,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;object,get,value,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> Object getValue(EvaluationContext context, Object rootObject) throws EvaluationException_;1385412762;Evaluate this expression in the provided context and return the result of evaluation, but use_the supplied root context as an override for any default root object specified in the context._@param context the context in which to evaluate the expression_@param rootObject the root object against which properties/etc will be resolved_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;Object getValue(EvaluationContext context, Object rootObject) throws EvaluationException_;evaluate,this,expression,in,the,provided,context,and,return,the,result,of,evaluation,but,use,the,supplied,root,context,as,an,override,for,any,default,root,object,specified,in,the,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,properties,etc,will,be,resolved,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;object,get,value,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> Object getValue(Object rootObject) throws EvaluationException_;1328020251;Evaluate this expression against the specified root object_@param rootObject the root object against which properties/etc will be resolved_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;Object getValue(Object rootObject) throws EvaluationException_;evaluate,this,expression,against,the,specified,root,object,param,root,object,the,root,object,against,which,properties,etc,will,be,resolved,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;object,get,value,object,root,object,throws,evaluation,exception
Expression -> Object getValue(Object rootObject) throws EvaluationException_;1356735495;Evaluate this expression against the specified root object_@param rootObject the root object against which properties/etc will be resolved_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;Object getValue(Object rootObject) throws EvaluationException_;evaluate,this,expression,against,the,specified,root,object,param,root,object,the,root,object,against,which,properties,etc,will,be,resolved,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;object,get,value,object,root,object,throws,evaluation,exception
Expression -> Object getValue(Object rootObject) throws EvaluationException_;1372363092;Evaluate this expression against the specified root object_@param rootObject the root object against which properties/etc will be resolved_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;Object getValue(Object rootObject) throws EvaluationException_;evaluate,this,expression,against,the,specified,root,object,param,root,object,the,root,object,against,which,properties,etc,will,be,resolved,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;object,get,value,object,root,object,throws,evaluation,exception
Expression -> Object getValue(Object rootObject) throws EvaluationException_;1385412762;Evaluate this expression against the specified root object_@param rootObject the root object against which properties/etc will be resolved_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;Object getValue(Object rootObject) throws EvaluationException_;evaluate,this,expression,against,the,specified,root,object,param,root,object,the,root,object,against,which,properties,etc,will,be,resolved,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;object,get,value,object,root,object,throws,evaluation,exception
Expression -> TypeDescriptor getValueTypeDescriptor(EvaluationContext context) throws EvaluationException_;1328020251;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method for the given context._@param context the context in which to evaluate the expression_@return a type descriptor for the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;TypeDescriptor getValueTypeDescriptor(EvaluationContext context) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,for,the,given,context,param,context,the,context,in,which,to,evaluate,the,expression,return,a,type,descriptor,for,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;type,descriptor,get,value,type,descriptor,evaluation,context,context,throws,evaluation,exception
Expression -> TypeDescriptor getValueTypeDescriptor(EvaluationContext context) throws EvaluationException_;1356735495;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method for the given context._@param context the context in which to evaluate the expression_@return a type descriptor for the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;TypeDescriptor getValueTypeDescriptor(EvaluationContext context) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,for,the,given,context,param,context,the,context,in,which,to,evaluate,the,expression,return,a,type,descriptor,for,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;type,descriptor,get,value,type,descriptor,evaluation,context,context,throws,evaluation,exception
Expression -> TypeDescriptor getValueTypeDescriptor(EvaluationContext context) throws EvaluationException_;1372363092;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method for the given context._@param context the context in which to evaluate the expression_@return a type descriptor for the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;TypeDescriptor getValueTypeDescriptor(EvaluationContext context) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,for,the,given,context,param,context,the,context,in,which,to,evaluate,the,expression,return,a,type,descriptor,for,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;type,descriptor,get,value,type,descriptor,evaluation,context,context,throws,evaluation,exception
Expression -> TypeDescriptor getValueTypeDescriptor(EvaluationContext context) throws EvaluationException_;1385412762;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method for the given context._@param context the context in which to evaluate the expression_@return a type descriptor for the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;TypeDescriptor getValueTypeDescriptor(EvaluationContext context) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,for,the,given,context,param,context,the,context,in,which,to,evaluate,the,expression,return,a,type,descriptor,for,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;type,descriptor,get,value,type,descriptor,evaluation,context,context,throws,evaluation,exception
Expression -> boolean isWritable(EvaluationContext context) throws EvaluationException_;1328020251;Determine if an expression can be written to, i.e. setValue() can be called._@param context the context in which the expression should be checked_@return true if the expression is writable_@throws EvaluationException if there is a problem determining if it is writable;boolean isWritable(EvaluationContext context) throws EvaluationException_;determine,if,an,expression,can,be,written,to,i,e,set,value,can,be,called,param,context,the,context,in,which,the,expression,should,be,checked,return,true,if,the,expression,is,writable,throws,evaluation,exception,if,there,is,a,problem,determining,if,it,is,writable;boolean,is,writable,evaluation,context,context,throws,evaluation,exception
Expression -> boolean isWritable(EvaluationContext context) throws EvaluationException_;1356735495;Determine if an expression can be written to, i.e. setValue() can be called._@param context the context in which the expression should be checked_@return true if the expression is writable_@throws EvaluationException if there is a problem determining if it is writable;boolean isWritable(EvaluationContext context) throws EvaluationException_;determine,if,an,expression,can,be,written,to,i,e,set,value,can,be,called,param,context,the,context,in,which,the,expression,should,be,checked,return,true,if,the,expression,is,writable,throws,evaluation,exception,if,there,is,a,problem,determining,if,it,is,writable;boolean,is,writable,evaluation,context,context,throws,evaluation,exception
Expression -> boolean isWritable(EvaluationContext context) throws EvaluationException_;1372363092;Determine if an expression can be written to, i.e. setValue() can be called._@param context the context in which the expression should be checked_@return true if the expression is writable_@throws EvaluationException if there is a problem determining if it is writable;boolean isWritable(EvaluationContext context) throws EvaluationException_;determine,if,an,expression,can,be,written,to,i,e,set,value,can,be,called,param,context,the,context,in,which,the,expression,should,be,checked,return,true,if,the,expression,is,writable,throws,evaluation,exception,if,there,is,a,problem,determining,if,it,is,writable;boolean,is,writable,evaluation,context,context,throws,evaluation,exception
Expression -> boolean isWritable(EvaluationContext context) throws EvaluationException_;1385412762;Determine if an expression can be written to, i.e. setValue() can be called._@param context the context in which the expression should be checked_@return true if the expression is writable_@throws EvaluationException if there is a problem determining if it is writable;boolean isWritable(EvaluationContext context) throws EvaluationException_;determine,if,an,expression,can,be,written,to,i,e,set,value,can,be,called,param,context,the,context,in,which,the,expression,should,be,checked,return,true,if,the,expression,is,writable,throws,evaluation,exception,if,there,is,a,problem,determining,if,it,is,writable;boolean,is,writable,evaluation,context,context,throws,evaluation,exception
Expression -> boolean isWritable(EvaluationContext context) throws EvaluationException_;1496837955;Determine if an expression can be written to, i.e. setValue() can be called._@param context the context in which the expression should be checked_@return true if the expression is writable_@throws EvaluationException if there is a problem determining if it is writable;boolean isWritable(EvaluationContext context) throws EvaluationException_;determine,if,an,expression,can,be,written,to,i,e,set,value,can,be,called,param,context,the,context,in,which,the,expression,should,be,checked,return,true,if,the,expression,is,writable,throws,evaluation,exception,if,there,is,a,problem,determining,if,it,is,writable;boolean,is,writable,evaluation,context,context,throws,evaluation,exception
Expression -> boolean isWritable(EvaluationContext context) throws EvaluationException_;1499973642;Determine if an expression can be written to, i.e. setValue() can be called._@param context the context in which the expression should be checked_@return true if the expression is writable_@throws EvaluationException if there is a problem determining if it is writable;boolean isWritable(EvaluationContext context) throws EvaluationException_;determine,if,an,expression,can,be,written,to,i,e,set,value,can,be,called,param,context,the,context,in,which,the,expression,should,be,checked,return,true,if,the,expression,is,writable,throws,evaluation,exception,if,there,is,a,problem,determining,if,it,is,writable;boolean,is,writable,evaluation,context,context,throws,evaluation,exception
Expression -> boolean isWritable(EvaluationContext context) throws EvaluationException_;1500043582;Determine if an expression can be written to, i.e. setValue() can be called._@param context the context in which the expression should be checked_@return {@code true} if the expression is writable_ {@code false} otherwise_@throws EvaluationException if there is a problem determining if it is writable;boolean isWritable(EvaluationContext context) throws EvaluationException_;determine,if,an,expression,can,be,written,to,i,e,set,value,can,be,called,param,context,the,context,in,which,the,expression,should,be,checked,return,code,true,if,the,expression,is,writable,code,false,otherwise,throws,evaluation,exception,if,there,is,a,problem,determining,if,it,is,writable;boolean,is,writable,evaluation,context,context,throws,evaluation,exception
Expression -> @Nullable 	Class<?> getValueType() throws EvaluationException_;1496837955;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method using the default context._@return the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;@Nullable_	Class<?> getValueType() throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,using,the,default,context,return,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;nullable,class,get,value,type,throws,evaluation,exception
Expression -> @Nullable 	Class<?> getValueType() throws EvaluationException_;1499973642;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method using the default context._@return the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;@Nullable_	Class<?> getValueType() throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,using,the,default,context,return,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;nullable,class,get,value,type,throws,evaluation,exception
Expression -> @Nullable 	Class<?> getValueType() throws EvaluationException_;1500043582;Return the most general type that can be passed to a {@link #setValue}_method using the default context._@return the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;@Nullable_	Class<?> getValueType() throws EvaluationException_;return,the,most,general,type,that,can,be,passed,to,a,link,set,value,method,using,the,default,context,return,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;nullable,class,get,value,type,throws,evaluation,exception
Expression -> void setValue(EvaluationContext context, @Nullable Object value) throws EvaluationException_;1499973642;Set this expression in the provided context to the value provided._@param context the context in which to set the value of the expression_@param value the new value_@throws EvaluationException if there is a problem during evaluation;void setValue(EvaluationContext context, @Nullable Object value) throws EvaluationException_;set,this,expression,in,the,provided,context,to,the,value,provided,param,context,the,context,in,which,to,set,the,value,of,the,expression,param,value,the,new,value,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;void,set,value,evaluation,context,context,nullable,object,value,throws,evaluation,exception
Expression -> void setValue(EvaluationContext context, @Nullable Object value) throws EvaluationException_;1500043582;Set this expression in the provided context to the value provided._@param context the context in which to set the value of the expression_@param value the new value_@throws EvaluationException if there is a problem during evaluation;void setValue(EvaluationContext context, @Nullable Object value) throws EvaluationException_;set,this,expression,in,the,provided,context,to,the,value,provided,param,context,the,context,in,which,to,set,the,value,of,the,expression,param,value,the,new,value,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;void,set,value,evaluation,context,context,nullable,object,value,throws,evaluation,exception
Expression -> String getExpressionString()_;1328020251;Returns the original string used to create this expression, unmodified._@return the original expression string;String getExpressionString()_;returns,the,original,string,used,to,create,this,expression,unmodified,return,the,original,expression,string;string,get,expression,string
Expression -> String getExpressionString()_;1356735495;Returns the original string used to create this expression, unmodified._@return the original expression string;String getExpressionString()_;returns,the,original,string,used,to,create,this,expression,unmodified,return,the,original,expression,string;string,get,expression,string
Expression -> String getExpressionString()_;1372363092;Returns the original string used to create this expression, unmodified._@return the original expression string;String getExpressionString()_;returns,the,original,string,used,to,create,this,expression,unmodified,return,the,original,expression,string;string,get,expression,string
Expression -> String getExpressionString()_;1385412762;Returns the original string used to create this expression, unmodified._@return the original expression string;String getExpressionString()_;returns,the,original,string,used,to,create,this,expression,unmodified,return,the,original,expression,string;string,get,expression,string
Expression -> String getExpressionString()_;1496837955;Returns the original string used to create this expression, unmodified._@return the original expression string;String getExpressionString()_;returns,the,original,string,used,to,create,this,expression,unmodified,return,the,original,expression,string;string,get,expression,string
Expression -> String getExpressionString()_;1499973642;Return the original string used to create this expression, unmodified._@return the original expression string;String getExpressionString()_;return,the,original,string,used,to,create,this,expression,unmodified,return,the,original,expression,string;string,get,expression,string
Expression -> String getExpressionString()_;1500043582;Return the original string used to create this expression (unmodified)._@return the original expression string;String getExpressionString()_;return,the,original,string,used,to,create,this,expression,unmodified,return,the,original,expression,string;string,get,expression,string
Expression -> <T> T getValue(Class<T> desiredResultType) throws EvaluationException_;1328020251;Evaluate the expression in the default context. If the result of the evaluation does not match (and_cannot be converted to) the expected result type then an exception will be returned._@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;<T> T getValue(Class<T> desiredResultType) throws EvaluationException_;evaluate,the,expression,in,the,default,context,if,the,result,of,the,evaluation,does,not,match,and,cannot,be,converted,to,the,expected,result,type,then,an,exception,will,be,returned,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;t,t,get,value,class,t,desired,result,type,throws,evaluation,exception
Expression -> <T> T getValue(Class<T> desiredResultType) throws EvaluationException_;1356735495;Evaluate the expression in the default context. If the result of the evaluation does not match (and_cannot be converted to) the expected result type then an exception will be returned._@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;<T> T getValue(Class<T> desiredResultType) throws EvaluationException_;evaluate,the,expression,in,the,default,context,if,the,result,of,the,evaluation,does,not,match,and,cannot,be,converted,to,the,expected,result,type,then,an,exception,will,be,returned,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;t,t,get,value,class,t,desired,result,type,throws,evaluation,exception
Expression -> <T> T getValue(Class<T> desiredResultType) throws EvaluationException_;1372363092;Evaluate the expression in the default context. If the result of the evaluation does not match (and_cannot be converted to) the expected result type then an exception will be returned._@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;<T> T getValue(Class<T> desiredResultType) throws EvaluationException_;evaluate,the,expression,in,the,default,context,if,the,result,of,the,evaluation,does,not,match,and,cannot,be,converted,to,the,expected,result,type,then,an,exception,will,be,returned,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;t,t,get,value,class,t,desired,result,type,throws,evaluation,exception
Expression -> <T> T getValue(Class<T> desiredResultType) throws EvaluationException_;1385412762;Evaluate the expression in the default context. If the result of the evaluation does not match (and_cannot be converted to) the expected result type then an exception will be returned._@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;<T> T getValue(Class<T> desiredResultType) throws EvaluationException_;evaluate,the,expression,in,the,default,context,if,the,result,of,the,evaluation,does,not,match,and,cannot,be,converted,to,the,expected,result,type,then,an,exception,will,be,returned,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;t,t,get,value,class,t,desired,result,type,throws,evaluation,exception
Expression -> @Nullable 	TypeDescriptor getValueTypeDescriptor(EvaluationContext context, Object rootObject) throws EvaluationException_;1496837955;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method for the given context. The supplied root object overrides any specified in the context._@param context the context in which to evaluate the expression_@param rootObject the root object against which to evaluate the expression_@return a type descriptor for the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;@Nullable_	TypeDescriptor getValueTypeDescriptor(EvaluationContext context, Object rootObject) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,for,the,given,context,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,a,type,descriptor,for,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;nullable,type,descriptor,get,value,type,descriptor,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> @Nullable 	TypeDescriptor getValueTypeDescriptor(EvaluationContext context, Object rootObject) throws EvaluationException_;1499973642;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method for the given context. The supplied root object overrides any specified in the context._@param context the context in which to evaluate the expression_@param rootObject the root object against which to evaluate the expression_@return a type descriptor for the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;@Nullable_	TypeDescriptor getValueTypeDescriptor(EvaluationContext context, Object rootObject) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,for,the,given,context,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,a,type,descriptor,for,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;nullable,type,descriptor,get,value,type,descriptor,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> @Nullable 	TypeDescriptor getValueTypeDescriptor(EvaluationContext context, Object rootObject) throws EvaluationException_;1500043582;Return the most general type that can be passed to the_{@link #setValue(EvaluationContext, Object, Object)} method for the given_context. The supplied root object overrides any specified in the context._@param context the context in which to evaluate the expression_@param rootObject the root object against which to evaluate the expression_@return a type descriptor for values that can be set on this context_@throws EvaluationException if there is a problem determining the type;@Nullable_	TypeDescriptor getValueTypeDescriptor(EvaluationContext context, Object rootObject) throws EvaluationException_;return,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,object,method,for,the,given,context,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,a,type,descriptor,for,values,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;nullable,type,descriptor,get,value,type,descriptor,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> void setValue(EvaluationContext context, Object rootObject, Object value) throws EvaluationException_;1328020251;Set this expression in the provided context to the value provided._The supplied root object overrides any specified in the context._@param context the context in which to set the value of the expression_@param rootObject the root object against which to evaluate the expression_@param value the new value_@throws EvaluationException if there is a problem during evaluation;void setValue(EvaluationContext context, Object rootObject, Object value) throws EvaluationException_;set,this,expression,in,the,provided,context,to,the,value,provided,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,to,set,the,value,of,the,expression,param,root,object,the,root,object,against,which,to,evaluate,the,expression,param,value,the,new,value,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;void,set,value,evaluation,context,context,object,root,object,object,value,throws,evaluation,exception
Expression -> void setValue(EvaluationContext context, Object rootObject, Object value) throws EvaluationException_;1356735495;Set this expression in the provided context to the value provided._The supplied root object overrides any specified in the context._@param context the context in which to set the value of the expression_@param rootObject the root object against which to evaluate the expression_@param value the new value_@throws EvaluationException if there is a problem during evaluation;void setValue(EvaluationContext context, Object rootObject, Object value) throws EvaluationException_;set,this,expression,in,the,provided,context,to,the,value,provided,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,to,set,the,value,of,the,expression,param,root,object,the,root,object,against,which,to,evaluate,the,expression,param,value,the,new,value,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;void,set,value,evaluation,context,context,object,root,object,object,value,throws,evaluation,exception
Expression -> void setValue(EvaluationContext context, Object rootObject, Object value) throws EvaluationException_;1372363092;Set this expression in the provided context to the value provided._The supplied root object overrides any specified in the context._@param context the context in which to set the value of the expression_@param rootObject the root object against which to evaluate the expression_@param value the new value_@throws EvaluationException if there is a problem during evaluation;void setValue(EvaluationContext context, Object rootObject, Object value) throws EvaluationException_;set,this,expression,in,the,provided,context,to,the,value,provided,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,to,set,the,value,of,the,expression,param,root,object,the,root,object,against,which,to,evaluate,the,expression,param,value,the,new,value,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;void,set,value,evaluation,context,context,object,root,object,object,value,throws,evaluation,exception
Expression -> void setValue(EvaluationContext context, Object rootObject, Object value) throws EvaluationException_;1385412762;Set this expression in the provided context to the value provided._The supplied root object overrides any specified in the context._@param context the context in which to set the value of the expression_@param rootObject the root object against which to evaluate the expression_@param value the new value_@throws EvaluationException if there is a problem during evaluation;void setValue(EvaluationContext context, Object rootObject, Object value) throws EvaluationException_;set,this,expression,in,the,provided,context,to,the,value,provided,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,to,set,the,value,of,the,expression,param,root,object,the,root,object,against,which,to,evaluate,the,expression,param,value,the,new,value,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;void,set,value,evaluation,context,context,object,root,object,object,value,throws,evaluation,exception
Expression -> void setValue(EvaluationContext context, Object rootObject, Object value) throws EvaluationException_;1496837955;Set this expression in the provided context to the value provided._The supplied root object overrides any specified in the context._@param context the context in which to set the value of the expression_@param rootObject the root object against which to evaluate the expression_@param value the new value_@throws EvaluationException if there is a problem during evaluation;void setValue(EvaluationContext context, Object rootObject, Object value) throws EvaluationException_;set,this,expression,in,the,provided,context,to,the,value,provided,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,to,set,the,value,of,the,expression,param,root,object,the,root,object,against,which,to,evaluate,the,expression,param,value,the,new,value,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;void,set,value,evaluation,context,context,object,root,object,object,value,throws,evaluation,exception
Expression -> @Nullable 	<T> T getValue(EvaluationContext context, Object rootObject, @Nullable Class<T> desiredResultType) 			throws EvaluationException_;1496837955;Evaluate the expression in a specified context which can resolve references to properties, methods, types, etc -_the type of the evaluation result is expected to be of a particular class and an exception will be thrown if it_is not and cannot be converted to that type.  The supplied root object overrides any default specified on the_supplied context._@param context the context in which to evaluate the expression_@param rootObject the root object against which properties/etc will be resolved_@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;@Nullable_	<T> T getValue(EvaluationContext context, Object rootObject, @Nullable Class<T> desiredResultType)_			throws EvaluationException_;evaluate,the,expression,in,a,specified,context,which,can,resolve,references,to,properties,methods,types,etc,the,type,of,the,evaluation,result,is,expected,to,be,of,a,particular,class,and,an,exception,will,be,thrown,if,it,is,not,and,cannot,be,converted,to,that,type,the,supplied,root,object,overrides,any,default,specified,on,the,supplied,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,properties,etc,will,be,resolved,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;nullable,t,t,get,value,evaluation,context,context,object,root,object,nullable,class,t,desired,result,type,throws,evaluation,exception
Expression -> @Nullable 	<T> T getValue(EvaluationContext context, Object rootObject, @Nullable Class<T> desiredResultType) 			throws EvaluationException_;1499973642;Evaluate the expression in a specified context which can resolve references to properties, methods, types, etc -_the type of the evaluation result is expected to be of a particular class and an exception will be thrown if it_is not and cannot be converted to that type.  The supplied root object overrides any default specified on the_supplied context._@param context the context in which to evaluate the expression_@param rootObject the root object against which properties/etc will be resolved_@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;@Nullable_	<T> T getValue(EvaluationContext context, Object rootObject, @Nullable Class<T> desiredResultType)_			throws EvaluationException_;evaluate,the,expression,in,a,specified,context,which,can,resolve,references,to,properties,methods,types,etc,the,type,of,the,evaluation,result,is,expected,to,be,of,a,particular,class,and,an,exception,will,be,thrown,if,it,is,not,and,cannot,be,converted,to,that,type,the,supplied,root,object,overrides,any,default,specified,on,the,supplied,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,properties,etc,will,be,resolved,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;nullable,t,t,get,value,evaluation,context,context,object,root,object,nullable,class,t,desired,result,type,throws,evaluation,exception
Expression -> @Nullable 	<T> T getValue(EvaluationContext context, Object rootObject, @Nullable Class<T> desiredResultType) 			throws EvaluationException_;1500043582;Evaluate the expression in a specified context which can resolve references_to properties, methods, types, etc. The type of the evaluation result is_expected to be of a particular class and an exception will be thrown if it_is not and cannot be converted to that type. The supplied root object_overrides any default specified on the supplied context._@param context the context in which to evaluate the expression_@param rootObject the root object against which to evaluate the expression_@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;@Nullable_	<T> T getValue(EvaluationContext context, Object rootObject, @Nullable Class<T> desiredResultType)_			throws EvaluationException_;evaluate,the,expression,in,a,specified,context,which,can,resolve,references,to,properties,methods,types,etc,the,type,of,the,evaluation,result,is,expected,to,be,of,a,particular,class,and,an,exception,will,be,thrown,if,it,is,not,and,cannot,be,converted,to,that,type,the,supplied,root,object,overrides,any,default,specified,on,the,supplied,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,to,evaluate,the,expression,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;nullable,t,t,get,value,evaluation,context,context,object,root,object,nullable,class,t,desired,result,type,throws,evaluation,exception
Expression -> TypeDescriptor getValueTypeDescriptor(EvaluationContext context, Object rootObject) throws EvaluationException_;1328020251;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)} method for_the given context. The supplied root object overrides any specified in the context._@param context the context in which to evaluate the expression_@param rootObject the root object against which to evaluate the expression_@return a type descriptor for the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;TypeDescriptor getValueTypeDescriptor(EvaluationContext context, Object rootObject) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,for,the,given,context,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,a,type,descriptor,for,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;type,descriptor,get,value,type,descriptor,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> TypeDescriptor getValueTypeDescriptor(EvaluationContext context, Object rootObject) throws EvaluationException_;1356735495;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)} method for_the given context. The supplied root object overrides any specified in the context._@param context the context in which to evaluate the expression_@param rootObject the root object against which to evaluate the expression_@return a type descriptor for the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;TypeDescriptor getValueTypeDescriptor(EvaluationContext context, Object rootObject) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,for,the,given,context,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,a,type,descriptor,for,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;type,descriptor,get,value,type,descriptor,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> TypeDescriptor getValueTypeDescriptor(EvaluationContext context, Object rootObject) throws EvaluationException_;1372363092;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)} method for_the given context. The supplied root object overrides any specified in the context._@param context the context in which to evaluate the expression_@param rootObject the root object against which to evaluate the expression_@return a type descriptor for the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;TypeDescriptor getValueTypeDescriptor(EvaluationContext context, Object rootObject) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,for,the,given,context,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,a,type,descriptor,for,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;type,descriptor,get,value,type,descriptor,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> TypeDescriptor getValueTypeDescriptor(EvaluationContext context, Object rootObject) throws EvaluationException_;1385412762;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)} method for_the given context. The supplied root object overrides any specified in the context._@param context the context in which to evaluate the expression_@param rootObject the root object against which to evaluate the expression_@return a type descriptor for the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;TypeDescriptor getValueTypeDescriptor(EvaluationContext context, Object rootObject) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,for,the,given,context,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,a,type,descriptor,for,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;type,descriptor,get,value,type,descriptor,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> @Nullable 	<T> T getValue(EvaluationContext context, @Nullable Class<T> desiredResultType) throws EvaluationException_;1496837955;Evaluate the expression in a specified context which can resolve references to properties, methods, types, etc -_the type of the evaluation result is expected to be of a particular class and an exception will be thrown if it_is not and cannot be converted to that type._@param context the context in which to evaluate the expression_@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;@Nullable_	<T> T getValue(EvaluationContext context, @Nullable Class<T> desiredResultType) throws EvaluationException_;evaluate,the,expression,in,a,specified,context,which,can,resolve,references,to,properties,methods,types,etc,the,type,of,the,evaluation,result,is,expected,to,be,of,a,particular,class,and,an,exception,will,be,thrown,if,it,is,not,and,cannot,be,converted,to,that,type,param,context,the,context,in,which,to,evaluate,the,expression,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;nullable,t,t,get,value,evaluation,context,context,nullable,class,t,desired,result,type,throws,evaluation,exception
Expression -> @Nullable 	<T> T getValue(EvaluationContext context, @Nullable Class<T> desiredResultType) throws EvaluationException_;1499973642;Evaluate the expression in a specified context which can resolve references to properties, methods, types, etc -_the type of the evaluation result is expected to be of a particular class and an exception will be thrown if it_is not and cannot be converted to that type._@param context the context in which to evaluate the expression_@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;@Nullable_	<T> T getValue(EvaluationContext context, @Nullable Class<T> desiredResultType) throws EvaluationException_;evaluate,the,expression,in,a,specified,context,which,can,resolve,references,to,properties,methods,types,etc,the,type,of,the,evaluation,result,is,expected,to,be,of,a,particular,class,and,an,exception,will,be,thrown,if,it,is,not,and,cannot,be,converted,to,that,type,param,context,the,context,in,which,to,evaluate,the,expression,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;nullable,t,t,get,value,evaluation,context,context,nullable,class,t,desired,result,type,throws,evaluation,exception
Expression -> @Nullable 	<T> T getValue(EvaluationContext context, @Nullable Class<T> desiredResultType) throws EvaluationException_;1500043582;Evaluate the expression in a specified context which can resolve references_to properties, methods, types, etc. The type of the evaluation result is_expected to be of a particular class and an exception will be thrown if it_is not and cannot be converted to that type._@param context the context in which to evaluate the expression_@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;@Nullable_	<T> T getValue(EvaluationContext context, @Nullable Class<T> desiredResultType) throws EvaluationException_;evaluate,the,expression,in,a,specified,context,which,can,resolve,references,to,properties,methods,types,etc,the,type,of,the,evaluation,result,is,expected,to,be,of,a,particular,class,and,an,exception,will,be,thrown,if,it,is,not,and,cannot,be,converted,to,that,type,param,context,the,context,in,which,to,evaluate,the,expression,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;nullable,t,t,get,value,evaluation,context,context,nullable,class,t,desired,result,type,throws,evaluation,exception
Expression -> @Nullable 	Class<?> getValueType(EvaluationContext context, Object rootObject) throws EvaluationException_;1496837955;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method for the given context. The supplied root object overrides any specified in the context._@param context the context in which to evaluate the expression_@param rootObject the root object against which to evaluate the expression_@return the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;@Nullable_	Class<?> getValueType(EvaluationContext context, Object rootObject) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,for,the,given,context,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;nullable,class,get,value,type,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> @Nullable 	Class<?> getValueType(EvaluationContext context, Object rootObject) throws EvaluationException_;1499973642;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method for the given context. The supplied root object overrides any specified in the context._@param context the context in which to evaluate the expression_@param rootObject the root object against which to evaluate the expression_@return the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;@Nullable_	Class<?> getValueType(EvaluationContext context, Object rootObject) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,for,the,given,context,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;nullable,class,get,value,type,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> @Nullable 	Class<?> getValueType(EvaluationContext context, Object rootObject) throws EvaluationException_;1500043582;Return the most general type that can be passed to the_{@link #setValue(EvaluationContext, Object, Object)} method for the given_context. The supplied root object overrides any specified in the context._@param context the context in which to evaluate the expression_@param rootObject the root object against which to evaluate the expression_@return the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;@Nullable_	Class<?> getValueType(EvaluationContext context, Object rootObject) throws EvaluationException_;return,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,object,method,for,the,given,context,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;nullable,class,get,value,type,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> Object getValue(EvaluationContext context) throws EvaluationException_;1328020251;Evaluate this expression in the provided context and return the result of evaluation._@param context the context in which to evaluate the expression_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;Object getValue(EvaluationContext context) throws EvaluationException_;evaluate,this,expression,in,the,provided,context,and,return,the,result,of,evaluation,param,context,the,context,in,which,to,evaluate,the,expression,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;object,get,value,evaluation,context,context,throws,evaluation,exception
Expression -> Object getValue(EvaluationContext context) throws EvaluationException_;1356735495;Evaluate this expression in the provided context and return the result of evaluation._@param context the context in which to evaluate the expression_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;Object getValue(EvaluationContext context) throws EvaluationException_;evaluate,this,expression,in,the,provided,context,and,return,the,result,of,evaluation,param,context,the,context,in,which,to,evaluate,the,expression,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;object,get,value,evaluation,context,context,throws,evaluation,exception
Expression -> Object getValue(EvaluationContext context) throws EvaluationException_;1372363092;Evaluate this expression in the provided context and return the result of evaluation._@param context the context in which to evaluate the expression_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;Object getValue(EvaluationContext context) throws EvaluationException_;evaluate,this,expression,in,the,provided,context,and,return,the,result,of,evaluation,param,context,the,context,in,which,to,evaluate,the,expression,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;object,get,value,evaluation,context,context,throws,evaluation,exception
Expression -> Object getValue(EvaluationContext context) throws EvaluationException_;1385412762;Evaluate this expression in the provided context and return the result of evaluation._@param context the context in which to evaluate the expression_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;Object getValue(EvaluationContext context) throws EvaluationException_;evaluate,this,expression,in,the,provided,context,and,return,the,result,of,evaluation,param,context,the,context,in,which,to,evaluate,the,expression,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;object,get,value,evaluation,context,context,throws,evaluation,exception
Expression -> @Nullable 	Object getValue(EvaluationContext context, Object rootObject) throws EvaluationException_;1496837955;Evaluate this expression in the provided context and return the result of evaluation, but use_the supplied root context as an override for any default root object specified in the context._@param context the context in which to evaluate the expression_@param rootObject the root object against which properties/etc will be resolved_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;@Nullable_	Object getValue(EvaluationContext context, Object rootObject) throws EvaluationException_;evaluate,this,expression,in,the,provided,context,and,return,the,result,of,evaluation,but,use,the,supplied,root,context,as,an,override,for,any,default,root,object,specified,in,the,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,properties,etc,will,be,resolved,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;nullable,object,get,value,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> @Nullable 	Object getValue(EvaluationContext context, Object rootObject) throws EvaluationException_;1499973642;Evaluate this expression in the provided context and return the result of evaluation, but use_the supplied root context as an override for any default root object specified in the context._@param context the context in which to evaluate the expression_@param rootObject the root object against which properties/etc will be resolved_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;@Nullable_	Object getValue(EvaluationContext context, Object rootObject) throws EvaluationException_;evaluate,this,expression,in,the,provided,context,and,return,the,result,of,evaluation,but,use,the,supplied,root,context,as,an,override,for,any,default,root,object,specified,in,the,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,properties,etc,will,be,resolved,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;nullable,object,get,value,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> @Nullable 	Object getValue(EvaluationContext context, Object rootObject) throws EvaluationException_;1500043582;Evaluate this expression in the provided context and return the result_of evaluation, but use the supplied root context as an override for any_default root object specified in the context._@param context the context in which to evaluate the expression_@param rootObject the root object against which to evaluate the expression_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;@Nullable_	Object getValue(EvaluationContext context, Object rootObject) throws EvaluationException_;evaluate,this,expression,in,the,provided,context,and,return,the,result,of,evaluation,but,use,the,supplied,root,context,as,an,override,for,any,default,root,object,specified,in,the,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;nullable,object,get,value,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> @Nullable 	TypeDescriptor getValueTypeDescriptor() throws EvaluationException_;1496837955;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method using the default context._@return a type descriptor for the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;@Nullable_	TypeDescriptor getValueTypeDescriptor() throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,using,the,default,context,return,a,type,descriptor,for,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;nullable,type,descriptor,get,value,type,descriptor,throws,evaluation,exception
Expression -> @Nullable 	TypeDescriptor getValueTypeDescriptor() throws EvaluationException_;1499973642;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method using the default context._@return a type descriptor for the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;@Nullable_	TypeDescriptor getValueTypeDescriptor() throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,using,the,default,context,return,a,type,descriptor,for,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;nullable,type,descriptor,get,value,type,descriptor,throws,evaluation,exception
Expression -> @Nullable 	TypeDescriptor getValueTypeDescriptor() throws EvaluationException_;1500043582;Return the most general type that can be passed to a {@link #setValue}_method using the default context._@return a type descriptor for values that can be set on this context_@throws EvaluationException if there is a problem determining the type;@Nullable_	TypeDescriptor getValueTypeDescriptor() throws EvaluationException_;return,the,most,general,type,that,can,be,passed,to,a,link,set,value,method,using,the,default,context,return,a,type,descriptor,for,values,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;nullable,type,descriptor,get,value,type,descriptor,throws,evaluation,exception
Expression -> Object getValue() throws EvaluationException_;1328020251;Evaluate this expression in the default standard context._@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;Object getValue() throws EvaluationException_;evaluate,this,expression,in,the,default,standard,context,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;object,get,value,throws,evaluation,exception
Expression -> Object getValue() throws EvaluationException_;1356735495;Evaluate this expression in the default standard context._@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;Object getValue() throws EvaluationException_;evaluate,this,expression,in,the,default,standard,context,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;object,get,value,throws,evaluation,exception
Expression -> Object getValue() throws EvaluationException_;1372363092;Evaluate this expression in the default standard context._@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;Object getValue() throws EvaluationException_;evaluate,this,expression,in,the,default,standard,context,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;object,get,value,throws,evaluation,exception
Expression -> Object getValue() throws EvaluationException_;1385412762;Evaluate this expression in the default standard context._@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;Object getValue() throws EvaluationException_;evaluate,this,expression,in,the,default,standard,context,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;object,get,value,throws,evaluation,exception
Expression -> @Nullable 	<T> T getValue(@Nullable Class<T> desiredResultType) throws EvaluationException_;1496837955;Evaluate the expression in the default context. If the result of the evaluation does not match (and_cannot be converted to) the expected result type then an exception will be returned._@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;@Nullable_	<T> T getValue(@Nullable Class<T> desiredResultType) throws EvaluationException_;evaluate,the,expression,in,the,default,context,if,the,result,of,the,evaluation,does,not,match,and,cannot,be,converted,to,the,expected,result,type,then,an,exception,will,be,returned,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;nullable,t,t,get,value,nullable,class,t,desired,result,type,throws,evaluation,exception
Expression -> @Nullable 	<T> T getValue(@Nullable Class<T> desiredResultType) throws EvaluationException_;1499973642;Evaluate the expression in the default context. If the result of the evaluation does not match (and_cannot be converted to) the expected result type then an exception will be returned._@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;@Nullable_	<T> T getValue(@Nullable Class<T> desiredResultType) throws EvaluationException_;evaluate,the,expression,in,the,default,context,if,the,result,of,the,evaluation,does,not,match,and,cannot,be,converted,to,the,expected,result,type,then,an,exception,will,be,returned,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;nullable,t,t,get,value,nullable,class,t,desired,result,type,throws,evaluation,exception
Expression -> @Nullable 	<T> T getValue(@Nullable Class<T> desiredResultType) throws EvaluationException_;1500043582;Evaluate the expression in the default context. If the result_of the evaluation does not match (and cannot be converted to)_the expected result type then an exception will be returned._@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;@Nullable_	<T> T getValue(@Nullable Class<T> desiredResultType) throws EvaluationException_;evaluate,the,expression,in,the,default,context,if,the,result,of,the,evaluation,does,not,match,and,cannot,be,converted,to,the,expected,result,type,then,an,exception,will,be,returned,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;nullable,t,t,get,value,nullable,class,t,desired,result,type,throws,evaluation,exception
Expression -> boolean isWritable(EvaluationContext context, Object rootObject) throws EvaluationException_;1328020251;Determine if an expression can be written to, i.e. setValue() can be called._The supplied root object overrides any specified in the context._@param context the context in which the expression should be checked_@param rootObject the root object against which to evaluate the expression_@return true if the expression is writable_@throws EvaluationException if there is a problem determining if it is writable;boolean isWritable(EvaluationContext context, Object rootObject) throws EvaluationException_;determine,if,an,expression,can,be,written,to,i,e,set,value,can,be,called,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,the,expression,should,be,checked,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,true,if,the,expression,is,writable,throws,evaluation,exception,if,there,is,a,problem,determining,if,it,is,writable;boolean,is,writable,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> boolean isWritable(EvaluationContext context, Object rootObject) throws EvaluationException_;1356735495;Determine if an expression can be written to, i.e. setValue() can be called._The supplied root object overrides any specified in the context._@param context the context in which the expression should be checked_@param rootObject the root object against which to evaluate the expression_@return true if the expression is writable_@throws EvaluationException if there is a problem determining if it is writable;boolean isWritable(EvaluationContext context, Object rootObject) throws EvaluationException_;determine,if,an,expression,can,be,written,to,i,e,set,value,can,be,called,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,the,expression,should,be,checked,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,true,if,the,expression,is,writable,throws,evaluation,exception,if,there,is,a,problem,determining,if,it,is,writable;boolean,is,writable,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> boolean isWritable(EvaluationContext context, Object rootObject) throws EvaluationException_;1372363092;Determine if an expression can be written to, i.e. setValue() can be called._The supplied root object overrides any specified in the context._@param context the context in which the expression should be checked_@param rootObject the root object against which to evaluate the expression_@return true if the expression is writable_@throws EvaluationException if there is a problem determining if it is writable;boolean isWritable(EvaluationContext context, Object rootObject) throws EvaluationException_;determine,if,an,expression,can,be,written,to,i,e,set,value,can,be,called,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,the,expression,should,be,checked,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,true,if,the,expression,is,writable,throws,evaluation,exception,if,there,is,a,problem,determining,if,it,is,writable;boolean,is,writable,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> boolean isWritable(EvaluationContext context, Object rootObject) throws EvaluationException_;1385412762;Determine if an expression can be written to, i.e. setValue() can be called._The supplied root object overrides any specified in the context._@param context the context in which the expression should be checked_@param rootObject the root object against which to evaluate the expression_@return true if the expression is writable_@throws EvaluationException if there is a problem determining if it is writable;boolean isWritable(EvaluationContext context, Object rootObject) throws EvaluationException_;determine,if,an,expression,can,be,written,to,i,e,set,value,can,be,called,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,the,expression,should,be,checked,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,true,if,the,expression,is,writable,throws,evaluation,exception,if,there,is,a,problem,determining,if,it,is,writable;boolean,is,writable,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> boolean isWritable(EvaluationContext context, Object rootObject) throws EvaluationException_;1496837955;Determine if an expression can be written to, i.e. setValue() can be called._The supplied root object overrides any specified in the context._@param context the context in which the expression should be checked_@param rootObject the root object against which to evaluate the expression_@return true if the expression is writable_@throws EvaluationException if there is a problem determining if it is writable;boolean isWritable(EvaluationContext context, Object rootObject) throws EvaluationException_;determine,if,an,expression,can,be,written,to,i,e,set,value,can,be,called,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,the,expression,should,be,checked,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,true,if,the,expression,is,writable,throws,evaluation,exception,if,there,is,a,problem,determining,if,it,is,writable;boolean,is,writable,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> boolean isWritable(EvaluationContext context, Object rootObject) throws EvaluationException_;1499973642;Determine if an expression can be written to, i.e. setValue() can be called._The supplied root object overrides any specified in the context._@param context the context in which the expression should be checked_@param rootObject the root object against which to evaluate the expression_@return true if the expression is writable_@throws EvaluationException if there is a problem determining if it is writable;boolean isWritable(EvaluationContext context, Object rootObject) throws EvaluationException_;determine,if,an,expression,can,be,written,to,i,e,set,value,can,be,called,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,the,expression,should,be,checked,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,true,if,the,expression,is,writable,throws,evaluation,exception,if,there,is,a,problem,determining,if,it,is,writable;boolean,is,writable,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> boolean isWritable(EvaluationContext context, Object rootObject) throws EvaluationException_;1500043582;Determine if an expression can be written to, i.e. setValue() can be called._The supplied root object overrides any specified in the context._@param context the context in which the expression should be checked_@param rootObject the root object against which to evaluate the expression_@return {@code true} if the expression is writable_ {@code false} otherwise_@throws EvaluationException if there is a problem determining if it is writable;boolean isWritable(EvaluationContext context, Object rootObject) throws EvaluationException_;determine,if,an,expression,can,be,written,to,i,e,set,value,can,be,called,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,the,expression,should,be,checked,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,code,true,if,the,expression,is,writable,code,false,otherwise,throws,evaluation,exception,if,there,is,a,problem,determining,if,it,is,writable;boolean,is,writable,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> <T> T getValue(EvaluationContext context, Object rootObject, Class<T> desiredResultType) throws EvaluationException_;1328020251;Evaluate the expression in a specified context which can resolve references to properties, methods, types, etc -_the type of the evaluation result is expected to be of a particular class and an exception will be thrown if it_is not and cannot be converted to that type.  The supplied root object overrides any default specified on the_supplied context._@param context the context in which to evaluate the expression_@param rootObject the root object against which properties/etc will be resolved_@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;<T> T getValue(EvaluationContext context, Object rootObject, Class<T> desiredResultType) throws EvaluationException_;evaluate,the,expression,in,a,specified,context,which,can,resolve,references,to,properties,methods,types,etc,the,type,of,the,evaluation,result,is,expected,to,be,of,a,particular,class,and,an,exception,will,be,thrown,if,it,is,not,and,cannot,be,converted,to,that,type,the,supplied,root,object,overrides,any,default,specified,on,the,supplied,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,properties,etc,will,be,resolved,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;t,t,get,value,evaluation,context,context,object,root,object,class,t,desired,result,type,throws,evaluation,exception
Expression -> <T> T getValue(EvaluationContext context, Object rootObject, Class<T> desiredResultType) throws EvaluationException_;1356735495;Evaluate the expression in a specified context which can resolve references to properties, methods, types, etc -_the type of the evaluation result is expected to be of a particular class and an exception will be thrown if it_is not and cannot be converted to that type.  The supplied root object overrides any default specified on the_supplied context._@param context the context in which to evaluate the expression_@param rootObject the root object against which properties/etc will be resolved_@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;<T> T getValue(EvaluationContext context, Object rootObject, Class<T> desiredResultType) throws EvaluationException_;evaluate,the,expression,in,a,specified,context,which,can,resolve,references,to,properties,methods,types,etc,the,type,of,the,evaluation,result,is,expected,to,be,of,a,particular,class,and,an,exception,will,be,thrown,if,it,is,not,and,cannot,be,converted,to,that,type,the,supplied,root,object,overrides,any,default,specified,on,the,supplied,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,properties,etc,will,be,resolved,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;t,t,get,value,evaluation,context,context,object,root,object,class,t,desired,result,type,throws,evaluation,exception
Expression -> <T> T getValue(EvaluationContext context, Object rootObject, Class<T> desiredResultType) throws EvaluationException_;1372363092;Evaluate the expression in a specified context which can resolve references to properties, methods, types, etc -_the type of the evaluation result is expected to be of a particular class and an exception will be thrown if it_is not and cannot be converted to that type.  The supplied root object overrides any default specified on the_supplied context._@param context the context in which to evaluate the expression_@param rootObject the root object against which properties/etc will be resolved_@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;<T> T getValue(EvaluationContext context, Object rootObject, Class<T> desiredResultType) throws EvaluationException_;evaluate,the,expression,in,a,specified,context,which,can,resolve,references,to,properties,methods,types,etc,the,type,of,the,evaluation,result,is,expected,to,be,of,a,particular,class,and,an,exception,will,be,thrown,if,it,is,not,and,cannot,be,converted,to,that,type,the,supplied,root,object,overrides,any,default,specified,on,the,supplied,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,properties,etc,will,be,resolved,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;t,t,get,value,evaluation,context,context,object,root,object,class,t,desired,result,type,throws,evaluation,exception
Expression -> <T> T getValue(EvaluationContext context, Object rootObject, Class<T> desiredResultType) throws EvaluationException_;1385412762;Evaluate the expression in a specified context which can resolve references to properties, methods, types, etc -_the type of the evaluation result is expected to be of a particular class and an exception will be thrown if it_is not and cannot be converted to that type.  The supplied root object overrides any default specified on the_supplied context._@param context the context in which to evaluate the expression_@param rootObject the root object against which properties/etc will be resolved_@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;<T> T getValue(EvaluationContext context, Object rootObject, Class<T> desiredResultType) throws EvaluationException_;evaluate,the,expression,in,a,specified,context,which,can,resolve,references,to,properties,methods,types,etc,the,type,of,the,evaluation,result,is,expected,to,be,of,a,particular,class,and,an,exception,will,be,thrown,if,it,is,not,and,cannot,be,converted,to,that,type,the,supplied,root,object,overrides,any,default,specified,on,the,supplied,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,properties,etc,will,be,resolved,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;t,t,get,value,evaluation,context,context,object,root,object,class,t,desired,result,type,throws,evaluation,exception
Expression -> void setValue(Object rootObject, Object value) throws EvaluationException_;1328020251;Set this expression in the provided context to the value provided._@param rootObject the root object against which to evaluate the expression_@param value the new value_@throws EvaluationException if there is a problem during evaluation;void setValue(Object rootObject, Object value) throws EvaluationException_;set,this,expression,in,the,provided,context,to,the,value,provided,param,root,object,the,root,object,against,which,to,evaluate,the,expression,param,value,the,new,value,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;void,set,value,object,root,object,object,value,throws,evaluation,exception
Expression -> void setValue(Object rootObject, Object value) throws EvaluationException_;1356735495;Set this expression in the provided context to the value provided._@param rootObject the root object against which to evaluate the expression_@param value the new value_@throws EvaluationException if there is a problem during evaluation;void setValue(Object rootObject, Object value) throws EvaluationException_;set,this,expression,in,the,provided,context,to,the,value,provided,param,root,object,the,root,object,against,which,to,evaluate,the,expression,param,value,the,new,value,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;void,set,value,object,root,object,object,value,throws,evaluation,exception
Expression -> void setValue(Object rootObject, Object value) throws EvaluationException_;1372363092;Set this expression in the provided context to the value provided._@param rootObject the root object against which to evaluate the expression_@param value the new value_@throws EvaluationException if there is a problem during evaluation;void setValue(Object rootObject, Object value) throws EvaluationException_;set,this,expression,in,the,provided,context,to,the,value,provided,param,root,object,the,root,object,against,which,to,evaluate,the,expression,param,value,the,new,value,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;void,set,value,object,root,object,object,value,throws,evaluation,exception
Expression -> void setValue(Object rootObject, Object value) throws EvaluationException_;1385412762;Set this expression in the provided context to the value provided._@param rootObject the root object against which to evaluate the expression_@param value the new value_@throws EvaluationException if there is a problem during evaluation;void setValue(Object rootObject, Object value) throws EvaluationException_;set,this,expression,in,the,provided,context,to,the,value,provided,param,root,object,the,root,object,against,which,to,evaluate,the,expression,param,value,the,new,value,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;void,set,value,object,root,object,object,value,throws,evaluation,exception
Expression -> void setValue(Object rootObject, Object value) throws EvaluationException_;1496837955;Set this expression in the provided context to the value provided._@param rootObject the root object against which to evaluate the expression_@param value the new value_@throws EvaluationException if there is a problem during evaluation;void setValue(Object rootObject, Object value) throws EvaluationException_;set,this,expression,in,the,provided,context,to,the,value,provided,param,root,object,the,root,object,against,which,to,evaluate,the,expression,param,value,the,new,value,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;void,set,value,object,root,object,object,value,throws,evaluation,exception
Expression -> @Nullable 	TypeDescriptor getValueTypeDescriptor(Object rootObject) throws EvaluationException_;1496837955;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method using the default context._@param rootObject the root object against which to evaluate the expression_@return a type descriptor for the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;@Nullable_	TypeDescriptor getValueTypeDescriptor(Object rootObject) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,using,the,default,context,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,a,type,descriptor,for,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;nullable,type,descriptor,get,value,type,descriptor,object,root,object,throws,evaluation,exception
Expression -> @Nullable 	TypeDescriptor getValueTypeDescriptor(Object rootObject) throws EvaluationException_;1499973642;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method using the default context._@param rootObject the root object against which to evaluate the expression_@return a type descriptor for the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;@Nullable_	TypeDescriptor getValueTypeDescriptor(Object rootObject) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,using,the,default,context,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,a,type,descriptor,for,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;nullable,type,descriptor,get,value,type,descriptor,object,root,object,throws,evaluation,exception
Expression -> @Nullable 	TypeDescriptor getValueTypeDescriptor(Object rootObject) throws EvaluationException_;1500043582;Return the most general type that can be passed to the_{@link #setValue(Object, Object)} method using the default context._@param rootObject the root object against which to evaluate the expression_@return a type descriptor for values that can be set on this context_@throws EvaluationException if there is a problem determining the type;@Nullable_	TypeDescriptor getValueTypeDescriptor(Object rootObject) throws EvaluationException_;return,the,most,general,type,that,can,be,passed,to,the,link,set,value,object,object,method,using,the,default,context,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,a,type,descriptor,for,values,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;nullable,type,descriptor,get,value,type,descriptor,object,root,object,throws,evaluation,exception
Expression -> Class getValueType(EvaluationContext context, Object rootObject) throws EvaluationException_;1328020251;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method for the given context. The supplied root object overrides any specified in the context._@param context the context in which to evaluate the expression_@param rootObject the root object against which to evaluate the expression_@return the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;Class getValueType(EvaluationContext context, Object rootObject) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,for,the,given,context,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;class,get,value,type,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> Class getValueType(EvaluationContext context, Object rootObject) throws EvaluationException_;1356735495;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method for the given context. The supplied root object overrides any specified in the context._@param context the context in which to evaluate the expression_@param rootObject the root object against which to evaluate the expression_@return the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;Class getValueType(EvaluationContext context, Object rootObject) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,for,the,given,context,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;class,get,value,type,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> Class getValueType(EvaluationContext context, Object rootObject) throws EvaluationException_;1372363092;Returns the most general type that can be passed to the {@link #setValue(EvaluationContext, Object)}_method for the given context. The supplied root object overrides any specified in the context._@param context the context in which to evaluate the expression_@param rootObject the root object against which to evaluate the expression_@return the most general type of value that can be set on this context_@throws EvaluationException if there is a problem determining the type;Class getValueType(EvaluationContext context, Object rootObject) throws EvaluationException_;returns,the,most,general,type,that,can,be,passed,to,the,link,set,value,evaluation,context,object,method,for,the,given,context,the,supplied,root,object,overrides,any,specified,in,the,context,param,context,the,context,in,which,to,evaluate,the,expression,param,root,object,the,root,object,against,which,to,evaluate,the,expression,return,the,most,general,type,of,value,that,can,be,set,on,this,context,throws,evaluation,exception,if,there,is,a,problem,determining,the,type;class,get,value,type,evaluation,context,context,object,root,object,throws,evaluation,exception
Expression -> <T> T getValue(Object rootObject, Class<T> desiredResultType) throws EvaluationException_;1328020251;Evaluate the expression in the default context against the specified root object. If the_result of the evaluation does not match (and cannot be converted to) the expected result type_then an exception will be returned._@param rootObject the root object against which properties/etc will be resolved_@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;<T> T getValue(Object rootObject, Class<T> desiredResultType) throws EvaluationException_;evaluate,the,expression,in,the,default,context,against,the,specified,root,object,if,the,result,of,the,evaluation,does,not,match,and,cannot,be,converted,to,the,expected,result,type,then,an,exception,will,be,returned,param,root,object,the,root,object,against,which,properties,etc,will,be,resolved,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;t,t,get,value,object,root,object,class,t,desired,result,type,throws,evaluation,exception
Expression -> <T> T getValue(Object rootObject, Class<T> desiredResultType) throws EvaluationException_;1356735495;Evaluate the expression in the default context against the specified root object. If the_result of the evaluation does not match (and cannot be converted to) the expected result type_then an exception will be returned._@param rootObject the root object against which properties/etc will be resolved_@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;<T> T getValue(Object rootObject, Class<T> desiredResultType) throws EvaluationException_;evaluate,the,expression,in,the,default,context,against,the,specified,root,object,if,the,result,of,the,evaluation,does,not,match,and,cannot,be,converted,to,the,expected,result,type,then,an,exception,will,be,returned,param,root,object,the,root,object,against,which,properties,etc,will,be,resolved,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;t,t,get,value,object,root,object,class,t,desired,result,type,throws,evaluation,exception
Expression -> <T> T getValue(Object rootObject, Class<T> desiredResultType) throws EvaluationException_;1372363092;Evaluate the expression in the default context against the specified root object. If the_result of the evaluation does not match (and cannot be converted to) the expected result type_then an exception will be returned._@param rootObject the root object against which properties/etc will be resolved_@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;<T> T getValue(Object rootObject, Class<T> desiredResultType) throws EvaluationException_;evaluate,the,expression,in,the,default,context,against,the,specified,root,object,if,the,result,of,the,evaluation,does,not,match,and,cannot,be,converted,to,the,expected,result,type,then,an,exception,will,be,returned,param,root,object,the,root,object,against,which,properties,etc,will,be,resolved,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;t,t,get,value,object,root,object,class,t,desired,result,type,throws,evaluation,exception
Expression -> <T> T getValue(Object rootObject, Class<T> desiredResultType) throws EvaluationException_;1385412762;Evaluate the expression in the default context against the specified root object. If the_result of the evaluation does not match (and cannot be converted to) the expected result type_then an exception will be returned._@param rootObject the root object against which properties/etc will be resolved_@param desiredResultType the class the caller would like the result to be_@return the evaluation result_@throws EvaluationException if there is a problem during evaluation;<T> T getValue(Object rootObject, Class<T> desiredResultType) throws EvaluationException_;evaluate,the,expression,in,the,default,context,against,the,specified,root,object,if,the,result,of,the,evaluation,does,not,match,and,cannot,be,converted,to,the,expected,result,type,then,an,exception,will,be,returned,param,root,object,the,root,object,against,which,properties,etc,will,be,resolved,param,desired,result,type,the,class,the,caller,would,like,the,result,to,be,return,the,evaluation,result,throws,evaluation,exception,if,there,is,a,problem,during,evaluation;t,t,get,value,object,root,object,class,t,desired,result,type,throws,evaluation,exception
