# id;timestamp;commentText;codeText;commentWords;codeWords
MethodResolver -> MethodExecutor resolve(EvaluationContext context, Object targetObject, String name, 			List<TypeDescriptor> argumentTypes) throws AccessException_;1328020251;Within the supplied context determine a suitable method on the supplied object that can handle the_specified arguments. Return a MethodExecutor that can be used to invoke that method_(or <code>null</code> if no method could be found)._@param context the current evaluation context_@param targetObject the object upon which the method is being called_@param argumentTypes the arguments that the constructor must be able to handle_@return a MethodExecutor that can invoke the method, or null if the method cannot be found;MethodExecutor resolve(EvaluationContext context, Object targetObject, String name,_			List<TypeDescriptor> argumentTypes) throws AccessException_;within,the,supplied,context,determine,a,suitable,method,on,the,supplied,object,that,can,handle,the,specified,arguments,return,a,method,executor,that,can,be,used,to,invoke,that,method,or,code,null,code,if,no,method,could,be,found,param,context,the,current,evaluation,context,param,target,object,the,object,upon,which,the,method,is,being,called,param,argument,types,the,arguments,that,the,constructor,must,be,able,to,handle,return,a,method,executor,that,can,invoke,the,method,or,null,if,the,method,cannot,be,found;method,executor,resolve,evaluation,context,context,object,target,object,string,name,list,type,descriptor,argument,types,throws,access,exception
MethodResolver -> MethodExecutor resolve(EvaluationContext context, Object targetObject, String name, 			List<TypeDescriptor> argumentTypes) throws AccessException_;1356735495;Within the supplied context determine a suitable method on the supplied object that can handle the_specified arguments. Return a MethodExecutor that can be used to invoke that method_(or {@code null} if no method could be found)._@param context the current evaluation context_@param targetObject the object upon which the method is being called_@param argumentTypes the arguments that the constructor must be able to handle_@return a MethodExecutor that can invoke the method, or null if the method cannot be found;MethodExecutor resolve(EvaluationContext context, Object targetObject, String name,_			List<TypeDescriptor> argumentTypes) throws AccessException_;within,the,supplied,context,determine,a,suitable,method,on,the,supplied,object,that,can,handle,the,specified,arguments,return,a,method,executor,that,can,be,used,to,invoke,that,method,or,code,null,if,no,method,could,be,found,param,context,the,current,evaluation,context,param,target,object,the,object,upon,which,the,method,is,being,called,param,argument,types,the,arguments,that,the,constructor,must,be,able,to,handle,return,a,method,executor,that,can,invoke,the,method,or,null,if,the,method,cannot,be,found;method,executor,resolve,evaluation,context,context,object,target,object,string,name,list,type,descriptor,argument,types,throws,access,exception
MethodResolver -> MethodExecutor resolve(EvaluationContext context, Object targetObject, String name, 			List<TypeDescriptor> argumentTypes) throws AccessException_;1372363092;Within the supplied context determine a suitable method on the supplied object that_can handle the specified arguments. Return a MethodExecutor that can be used to_invoke that method (or {@code null} if no method could be found)._@param context the current evaluation context_@param targetObject the object upon which the method is being called_@param argumentTypes the arguments that the constructor must be able to handle_@return a MethodExecutor that can invoke the method, or null if the method cannot_be found;MethodExecutor resolve(EvaluationContext context, Object targetObject, String name,_			List<TypeDescriptor> argumentTypes) throws AccessException_;within,the,supplied,context,determine,a,suitable,method,on,the,supplied,object,that,can,handle,the,specified,arguments,return,a,method,executor,that,can,be,used,to,invoke,that,method,or,code,null,if,no,method,could,be,found,param,context,the,current,evaluation,context,param,target,object,the,object,upon,which,the,method,is,being,called,param,argument,types,the,arguments,that,the,constructor,must,be,able,to,handle,return,a,method,executor,that,can,invoke,the,method,or,null,if,the,method,cannot,be,found;method,executor,resolve,evaluation,context,context,object,target,object,string,name,list,type,descriptor,argument,types,throws,access,exception
MethodResolver -> MethodExecutor resolve(EvaluationContext context, Object targetObject, String name, 			List<TypeDescriptor> argumentTypes) throws AccessException_;1378305847;Within the supplied context determine a suitable method on the supplied object that_can handle the specified arguments. Return a {@link MethodExecutor} that can be used_to invoke that method, or {@code null} if no method could be found._@param context the current evaluation context_@param targetObject the object upon which the method is being called_@param argumentTypes the arguments that the constructor must be able to handle_@return a MethodExecutor that can invoke the method, or null if the method cannot be found;MethodExecutor resolve(EvaluationContext context, Object targetObject, String name,_			List<TypeDescriptor> argumentTypes) throws AccessException_;within,the,supplied,context,determine,a,suitable,method,on,the,supplied,object,that,can,handle,the,specified,arguments,return,a,link,method,executor,that,can,be,used,to,invoke,that,method,or,code,null,if,no,method,could,be,found,param,context,the,current,evaluation,context,param,target,object,the,object,upon,which,the,method,is,being,called,param,argument,types,the,arguments,that,the,constructor,must,be,able,to,handle,return,a,method,executor,that,can,invoke,the,method,or,null,if,the,method,cannot,be,found;method,executor,resolve,evaluation,context,context,object,target,object,string,name,list,type,descriptor,argument,types,throws,access,exception
