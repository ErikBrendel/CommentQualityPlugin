commented;modifiers;parameterAmount;loc;comment;code
false;public;2;4;;@Override public boolean canConvert(@Nullable TypeDescriptor sourceType, TypeDescriptor targetType) {     return this.conversionService.canConvert(sourceType, targetType). }
false;public;3;12;;@Override @Nullable public Object convertValue(@Nullable Object value, @Nullable TypeDescriptor sourceType, TypeDescriptor targetType) {     try {         return this.conversionService.convert(value, sourceType, targetType).     } catch (ConversionException ex) {         throw new SpelEvaluationException(ex, SpelMessage.TYPE_CONVERSION_ERROR, (sourceType != null ? sourceType.toString() : (value != null ? value.getClass().getName() : "null")), targetType.toString()).     } }
