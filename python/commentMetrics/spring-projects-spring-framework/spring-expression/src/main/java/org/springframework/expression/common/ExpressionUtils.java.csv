# id;timestamp;commentText;codeText;commentWords;codeWords
ExpressionUtils -> @SuppressWarnings("unchecked") 	public static <T> T convertTypedValue(EvaluationContext context, TypedValue typedValue, Class<T> targetType);1328020251;Determines if there is a type converter available in the specified context and attempts to use it to convert the_supplied value to the specified type. Throws an exception if conversion is not possible._@param context the evaluation context that may define a type converter_@param typedValue the value to convert and a type descriptor describing it_@param targetType the type to attempt conversion to_@return the converted value_@throws EvaluationException if there is a problem during conversion or conversion of the value to the specified_type is not supported;@SuppressWarnings("unchecked")_	public static <T> T convertTypedValue(EvaluationContext context, TypedValue typedValue, Class<T> targetType) {_		Object value = typedValue.getValue()__		if (targetType == null || ClassUtils.isAssignableValue(targetType, value)) {_			return (T) value__		}_		if (context != null) {_			return (T) context.getTypeConverter().convertValue(value, typedValue.getTypeDescriptor(), TypeDescriptor.valueOf(targetType))__		}_		throw new EvaluationException("Cannot convert value '" + value + "' to type '" + targetType.getName() + "'")__	};determines,if,there,is,a,type,converter,available,in,the,specified,context,and,attempts,to,use,it,to,convert,the,supplied,value,to,the,specified,type,throws,an,exception,if,conversion,is,not,possible,param,context,the,evaluation,context,that,may,define,a,type,converter,param,typed,value,the,value,to,convert,and,a,type,descriptor,describing,it,param,target,type,the,type,to,attempt,conversion,to,return,the,converted,value,throws,evaluation,exception,if,there,is,a,problem,during,conversion,or,conversion,of,the,value,to,the,specified,type,is,not,supported;suppress,warnings,unchecked,public,static,t,t,convert,typed,value,evaluation,context,context,typed,value,typed,value,class,t,target,type,object,value,typed,value,get,value,if,target,type,null,class,utils,is,assignable,value,target,type,value,return,t,value,if,context,null,return,t,context,get,type,converter,convert,value,value,typed,value,get,type,descriptor,type,descriptor,value,of,target,type,throw,new,evaluation,exception,cannot,convert,value,value,to,type,target,type,get,name
ExpressionUtils -> @SuppressWarnings("unchecked") 	public static <T> T convertTypedValue(EvaluationContext context, TypedValue typedValue, Class<T> targetType);1353568585;Determines if there is a type converter available in the specified context and attempts to use it to convert the_supplied value to the specified type. Throws an exception if conversion is not possible._@param context the evaluation context that may define a type converter_@param typedValue the value to convert and a type descriptor describing it_@param targetType the type to attempt conversion to_@return the converted value_@throws EvaluationException if there is a problem during conversion or conversion of the value to the specified_type is not supported;@SuppressWarnings("unchecked")_	public static <T> T convertTypedValue(EvaluationContext context, TypedValue typedValue, Class<T> targetType) {_		Object value = typedValue.getValue()__		if ((targetType == null) || (value != null && ClassUtils.isAssignableValue(targetType, value))) {_			return (T) value__		}_		if (context != null) {_			return (T) context.getTypeConverter().convertValue(value, typedValue.getTypeDescriptor(), TypeDescriptor.valueOf(targetType))__		}_		throw new EvaluationException("Cannot convert value '" + value + "' to type '" + targetType.getName() + "'")__	};determines,if,there,is,a,type,converter,available,in,the,specified,context,and,attempts,to,use,it,to,convert,the,supplied,value,to,the,specified,type,throws,an,exception,if,conversion,is,not,possible,param,context,the,evaluation,context,that,may,define,a,type,converter,param,typed,value,the,value,to,convert,and,a,type,descriptor,describing,it,param,target,type,the,type,to,attempt,conversion,to,return,the,converted,value,throws,evaluation,exception,if,there,is,a,problem,during,conversion,or,conversion,of,the,value,to,the,specified,type,is,not,supported;suppress,warnings,unchecked,public,static,t,t,convert,typed,value,evaluation,context,context,typed,value,typed,value,class,t,target,type,object,value,typed,value,get,value,if,target,type,null,value,null,class,utils,is,assignable,value,target,type,value,return,t,value,if,context,null,return,t,context,get,type,converter,convert,value,value,typed,value,get,type,descriptor,type,descriptor,value,of,target,type,throw,new,evaluation,exception,cannot,convert,value,value,to,type,target,type,get,name
ExpressionUtils -> @SuppressWarnings("unchecked") 	public static <T> T convertTypedValue(EvaluationContext context, TypedValue typedValue, Class<T> targetType);1372363092;Determines if there is a type converter available in the specified context and_attempts to use it to convert the supplied value to the specified type. Throws an_exception if conversion is not possible._@param context the evaluation context that may define a type converter_@param typedValue the value to convert and a type descriptor describing it_@param targetType the type to attempt conversion to_@return the converted value_@throws EvaluationException if there is a problem during conversion or conversion_of the value to the specified type is not supported;@SuppressWarnings("unchecked")_	public static <T> T convertTypedValue(EvaluationContext context, TypedValue typedValue, Class<T> targetType) {_		Object value = typedValue.getValue()__		if ((targetType == null) || (value != null && ClassUtils.isAssignableValue(targetType, value))) {_			return (T) value__		}_		if (context != null) {_			return (T) context.getTypeConverter().convertValue(value, typedValue.getTypeDescriptor(), TypeDescriptor.valueOf(targetType))__		}_		throw new EvaluationException("Cannot convert value '" + value + "' to type '" + targetType.getName() + "'")__	};determines,if,there,is,a,type,converter,available,in,the,specified,context,and,attempts,to,use,it,to,convert,the,supplied,value,to,the,specified,type,throws,an,exception,if,conversion,is,not,possible,param,context,the,evaluation,context,that,may,define,a,type,converter,param,typed,value,the,value,to,convert,and,a,type,descriptor,describing,it,param,target,type,the,type,to,attempt,conversion,to,return,the,converted,value,throws,evaluation,exception,if,there,is,a,problem,during,conversion,or,conversion,of,the,value,to,the,specified,type,is,not,supported;suppress,warnings,unchecked,public,static,t,t,convert,typed,value,evaluation,context,context,typed,value,typed,value,class,t,target,type,object,value,typed,value,get,value,if,target,type,null,value,null,class,utils,is,assignable,value,target,type,value,return,t,value,if,context,null,return,t,context,get,type,converter,convert,value,value,typed,value,get,type,descriptor,type,descriptor,value,of,target,type,throw,new,evaluation,exception,cannot,convert,value,value,to,type,target,type,get,name
ExpressionUtils -> @SuppressWarnings("unchecked") 	public static <T> T convertTypedValue(EvaluationContext context, TypedValue typedValue, Class<T> targetType);1387312514;Determines if there is a type converter available in the specified context and_attempts to use it to convert the supplied value to the specified type. Throws an_exception if conversion is not possible._@param context the evaluation context that may define a type converter_@param typedValue the value to convert and a type descriptor describing it_@param targetType the type to attempt conversion to_@return the converted value_@throws EvaluationException if there is a problem during conversion or conversion_of the value to the specified type is not supported;@SuppressWarnings("unchecked")_	public static <T> T convertTypedValue(EvaluationContext context, TypedValue typedValue, Class<T> targetType) {_		Object value = typedValue.getValue()__		if (targetType == null) {_			return (T) value__		}_		if (context != null) {_			return (T) context.getTypeConverter().convertValue(_					value, typedValue.getTypeDescriptor(), TypeDescriptor.valueOf(targetType))__		}_		if (ClassUtils.isAssignableValue(targetType, value)) {_			return (T) value__		}_		throw new EvaluationException("Cannot convert value '" + value + "' to type '" + targetType.getName() + "'")__	};determines,if,there,is,a,type,converter,available,in,the,specified,context,and,attempts,to,use,it,to,convert,the,supplied,value,to,the,specified,type,throws,an,exception,if,conversion,is,not,possible,param,context,the,evaluation,context,that,may,define,a,type,converter,param,typed,value,the,value,to,convert,and,a,type,descriptor,describing,it,param,target,type,the,type,to,attempt,conversion,to,return,the,converted,value,throws,evaluation,exception,if,there,is,a,problem,during,conversion,or,conversion,of,the,value,to,the,specified,type,is,not,supported;suppress,warnings,unchecked,public,static,t,t,convert,typed,value,evaluation,context,context,typed,value,typed,value,class,t,target,type,object,value,typed,value,get,value,if,target,type,null,return,t,value,if,context,null,return,t,context,get,type,converter,convert,value,value,typed,value,get,type,descriptor,type,descriptor,value,of,target,type,if,class,utils,is,assignable,value,target,type,value,return,t,value,throw,new,evaluation,exception,cannot,convert,value,value,to,type,target,type,get,name
ExpressionUtils -> @SuppressWarnings("unchecked") 	public static <T> T convertTypedValue(EvaluationContext context, TypedValue typedValue, Class<T> targetType);1419966315;Determines if there is a type converter available in the specified context and_attempts to use it to convert the supplied value to the specified type. Throws an_exception if conversion is not possible._@param context the evaluation context that may define a type converter_@param typedValue the value to convert and a type descriptor describing it_@param targetType the type to attempt conversion to_@return the converted value_@throws EvaluationException if there is a problem during conversion or conversion_of the value to the specified type is not supported;@SuppressWarnings("unchecked")_	public static <T> T convertTypedValue(EvaluationContext context, TypedValue typedValue, Class<T> targetType) {_		Object value = typedValue.getValue()__		if (targetType == null) {_			return (T) value__		}_		if (context != null) {_			return (T) context.getTypeConverter().convertValue(_					value, typedValue.getTypeDescriptor(), TypeDescriptor.valueOf(targetType))__		}_		if (ClassUtils.isAssignableValue(targetType, value)) {_			return (T) value__		}_		throw new EvaluationException("Cannot convert value '" + value + "' to type '" + targetType.getName() + "'")__	};determines,if,there,is,a,type,converter,available,in,the,specified,context,and,attempts,to,use,it,to,convert,the,supplied,value,to,the,specified,type,throws,an,exception,if,conversion,is,not,possible,param,context,the,evaluation,context,that,may,define,a,type,converter,param,typed,value,the,value,to,convert,and,a,type,descriptor,describing,it,param,target,type,the,type,to,attempt,conversion,to,return,the,converted,value,throws,evaluation,exception,if,there,is,a,problem,during,conversion,or,conversion,of,the,value,to,the,specified,type,is,not,supported;suppress,warnings,unchecked,public,static,t,t,convert,typed,value,evaluation,context,context,typed,value,typed,value,class,t,target,type,object,value,typed,value,get,value,if,target,type,null,return,t,value,if,context,null,return,t,context,get,type,converter,convert,value,value,typed,value,get,type,descriptor,type,descriptor,value,of,target,type,if,class,utils,is,assignable,value,target,type,value,return,t,value,throw,new,evaluation,exception,cannot,convert,value,value,to,type,target,type,get,name
ExpressionUtils -> public static float toFloat(TypeConverter typeConverter, TypedValue typedValue);1328020251;Attempt to convert a typed value to a float using the supplied type converter.;public static float toFloat(TypeConverter typeConverter, TypedValue typedValue) {_		return (Float) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(), TypeDescriptor_				.valueOf(Float.class))__	};attempt,to,convert,a,typed,value,to,a,float,using,the,supplied,type,converter;public,static,float,to,float,type,converter,type,converter,typed,value,typed,value,return,float,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,float,class
ExpressionUtils -> public static float toFloat(TypeConverter typeConverter, TypedValue typedValue);1353568585;Attempt to convert a typed value to a float using the supplied type converter.;public static float toFloat(TypeConverter typeConverter, TypedValue typedValue) {_		return (Float) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(), TypeDescriptor_				.valueOf(Float.class))__	};attempt,to,convert,a,typed,value,to,a,float,using,the,supplied,type,converter;public,static,float,to,float,type,converter,type,converter,typed,value,typed,value,return,float,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,float,class
ExpressionUtils -> public static float toFloat(TypeConverter typeConverter, TypedValue typedValue);1372363092;Attempt to convert a typed value to a float using the supplied type converter.;public static float toFloat(TypeConverter typeConverter, TypedValue typedValue) {_		return (Float) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(), TypeDescriptor_				.valueOf(Float.class))__	};attempt,to,convert,a,typed,value,to,a,float,using,the,supplied,type,converter;public,static,float,to,float,type,converter,type,converter,typed,value,typed,value,return,float,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,float,class
ExpressionUtils -> public static float toFloat(TypeConverter typeConverter, TypedValue typedValue);1387312514;Attempt to convert a typed value to a float using the supplied type converter.;public static float toFloat(TypeConverter typeConverter, TypedValue typedValue) {_		return (Float) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Float.class))__	};attempt,to,convert,a,typed,value,to,a,float,using,the,supplied,type,converter;public,static,float,to,float,type,converter,type,converter,typed,value,typed,value,return,float,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,float,class
ExpressionUtils -> public static float toFloat(TypeConverter typeConverter, TypedValue typedValue);1419966315;Attempt to convert a typed value to a float using the supplied type converter.;public static float toFloat(TypeConverter typeConverter, TypedValue typedValue) {_		return (Float) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Float.class))__	};attempt,to,convert,a,typed,value,to,a,float,using,the,supplied,type,converter;public,static,float,to,float,type,converter,type,converter,typed,value,typed,value,return,float,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,float,class
ExpressionUtils -> public static float toFloat(TypeConverter typeConverter, TypedValue typedValue);1496259743;Attempt to convert a typed value to a float using the supplied type converter.;public static float toFloat(TypeConverter typeConverter, TypedValue typedValue) {_		return (Float) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Float.class))__	};attempt,to,convert,a,typed,value,to,a,float,using,the,supplied,type,converter;public,static,float,to,float,type,converter,type,converter,typed,value,typed,value,return,float,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,float,class
ExpressionUtils -> public static float toFloat(TypeConverter typeConverter, TypedValue typedValue);1496837955;Attempt to convert a typed value to a float using the supplied type converter.;public static float toFloat(TypeConverter typeConverter, TypedValue typedValue) {_		return convertValue(typeConverter, typedValue, Float.class)__	};attempt,to,convert,a,typed,value,to,a,float,using,the,supplied,type,converter;public,static,float,to,float,type,converter,type,converter,typed,value,typed,value,return,convert,value,type,converter,typed,value,float,class
ExpressionUtils -> @Deprecated 	public static <T> T convert(EvaluationContext context, Object value, Class<T> targetType) throws EvaluationException;1372363092;Determines if there is a type converter available in the specified context and_attempts to use it to convert the supplied value to the specified type. Throws an_exception if conversion is not possible._@param context the evaluation context that may define a type converter_@param value the value to convert (may be null)_@param targetType the type to attempt conversion to_@return the converted value_@throws EvaluationException if there is a problem during conversion or conversion_of the value to the specified type is not supported_@deprecated use {@link #convertTypedValue(EvaluationContext, TypedValue, Class)};@Deprecated_	public static <T> T convert(EvaluationContext context, Object value, Class<T> targetType) throws EvaluationException {_		return convertTypedValue(context, new TypedValue(value), targetType)__	};determines,if,there,is,a,type,converter,available,in,the,specified,context,and,attempts,to,use,it,to,convert,the,supplied,value,to,the,specified,type,throws,an,exception,if,conversion,is,not,possible,param,context,the,evaluation,context,that,may,define,a,type,converter,param,value,the,value,to,convert,may,be,null,param,target,type,the,type,to,attempt,conversion,to,return,the,converted,value,throws,evaluation,exception,if,there,is,a,problem,during,conversion,or,conversion,of,the,value,to,the,specified,type,is,not,supported,deprecated,use,link,convert,typed,value,evaluation,context,typed,value,class;deprecated,public,static,t,t,convert,evaluation,context,context,object,value,class,t,target,type,throws,evaluation,exception,return,convert,typed,value,context,new,typed,value,value,target,type
ExpressionUtils -> @Deprecated 	public static <T> T convert(EvaluationContext context, Object value, Class<T> targetType) throws EvaluationException;1387312514;Determines if there is a type converter available in the specified context and_attempts to use it to convert the supplied value to the specified type. Throws an_exception if conversion is not possible._@param context the evaluation context that may define a type converter_@param value the value to convert (may be null)_@param targetType the type to attempt conversion to_@return the converted value_@throws EvaluationException if there is a problem during conversion or conversion_of the value to the specified type is not supported_@deprecated use {@link #convertTypedValue(EvaluationContext, TypedValue, Class)};@Deprecated_	public static <T> T convert(EvaluationContext context, Object value, Class<T> targetType) throws EvaluationException {_		return convertTypedValue(context, new TypedValue(value), targetType)__	};determines,if,there,is,a,type,converter,available,in,the,specified,context,and,attempts,to,use,it,to,convert,the,supplied,value,to,the,specified,type,throws,an,exception,if,conversion,is,not,possible,param,context,the,evaluation,context,that,may,define,a,type,converter,param,value,the,value,to,convert,may,be,null,param,target,type,the,type,to,attempt,conversion,to,return,the,converted,value,throws,evaluation,exception,if,there,is,a,problem,during,conversion,or,conversion,of,the,value,to,the,specified,type,is,not,supported,deprecated,use,link,convert,typed,value,evaluation,context,typed,value,class;deprecated,public,static,t,t,convert,evaluation,context,context,object,value,class,t,target,type,throws,evaluation,exception,return,convert,typed,value,context,new,typed,value,value,target,type
ExpressionUtils -> public static <T> T convert(EvaluationContext context, Object value, Class<T> targetType) throws EvaluationException;1328020251;Determines if there is a type converter available in the specified context and attempts to use it to convert the_supplied value to the specified type. Throws an exception if conversion is not possible._@param context the evaluation context that may define a type converter_@param value the value to convert (may be null)_@param targetType the type to attempt conversion to_@return the converted value_@throws EvaluationException if there is a problem during conversion or conversion of the value to the specified_type is not supported;public static <T> T convert(EvaluationContext context, Object value, Class<T> targetType) throws EvaluationException {_		_		return convertTypedValue(context,new TypedValue(value),targetType)__	};determines,if,there,is,a,type,converter,available,in,the,specified,context,and,attempts,to,use,it,to,convert,the,supplied,value,to,the,specified,type,throws,an,exception,if,conversion,is,not,possible,param,context,the,evaluation,context,that,may,define,a,type,converter,param,value,the,value,to,convert,may,be,null,param,target,type,the,type,to,attempt,conversion,to,return,the,converted,value,throws,evaluation,exception,if,there,is,a,problem,during,conversion,or,conversion,of,the,value,to,the,specified,type,is,not,supported;public,static,t,t,convert,evaluation,context,context,object,value,class,t,target,type,throws,evaluation,exception,return,convert,typed,value,context,new,typed,value,value,target,type
ExpressionUtils -> public static <T> T convert(EvaluationContext context, Object value, Class<T> targetType) throws EvaluationException;1353568585;Determines if there is a type converter available in the specified context and attempts to use it to convert the_supplied value to the specified type. Throws an exception if conversion is not possible._@param context the evaluation context that may define a type converter_@param value the value to convert (may be null)_@param targetType the type to attempt conversion to_@return the converted value_@throws EvaluationException if there is a problem during conversion or conversion of the value to the specified_type is not supported;public static <T> T convert(EvaluationContext context, Object value, Class<T> targetType) throws EvaluationException {_		_		return convertTypedValue(context,new TypedValue(value),targetType)__	};determines,if,there,is,a,type,converter,available,in,the,specified,context,and,attempts,to,use,it,to,convert,the,supplied,value,to,the,specified,type,throws,an,exception,if,conversion,is,not,possible,param,context,the,evaluation,context,that,may,define,a,type,converter,param,value,the,value,to,convert,may,be,null,param,target,type,the,type,to,attempt,conversion,to,return,the,converted,value,throws,evaluation,exception,if,there,is,a,problem,during,conversion,or,conversion,of,the,value,to,the,specified,type,is,not,supported;public,static,t,t,convert,evaluation,context,context,object,value,class,t,target,type,throws,evaluation,exception,return,convert,typed,value,context,new,typed,value,value,target,type
ExpressionUtils -> public static short toShort(TypeConverter typeConverter, TypedValue typedValue);1328020251;Attempt to convert a typed value to a short using the supplied type converter.;public static short toShort(TypeConverter typeConverter, TypedValue typedValue) {_		return (Short) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(), TypeDescriptor_				.valueOf(Short.class))__	};attempt,to,convert,a,typed,value,to,a,short,using,the,supplied,type,converter;public,static,short,to,short,type,converter,type,converter,typed,value,typed,value,return,short,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,short,class
ExpressionUtils -> public static short toShort(TypeConverter typeConverter, TypedValue typedValue);1353568585;Attempt to convert a typed value to a short using the supplied type converter.;public static short toShort(TypeConverter typeConverter, TypedValue typedValue) {_		return (Short) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(), TypeDescriptor_				.valueOf(Short.class))__	};attempt,to,convert,a,typed,value,to,a,short,using,the,supplied,type,converter;public,static,short,to,short,type,converter,type,converter,typed,value,typed,value,return,short,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,short,class
ExpressionUtils -> public static short toShort(TypeConverter typeConverter, TypedValue typedValue);1372363092;Attempt to convert a typed value to a short using the supplied type converter.;public static short toShort(TypeConverter typeConverter, TypedValue typedValue) {_		return (Short) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(), TypeDescriptor_				.valueOf(Short.class))__	};attempt,to,convert,a,typed,value,to,a,short,using,the,supplied,type,converter;public,static,short,to,short,type,converter,type,converter,typed,value,typed,value,return,short,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,short,class
ExpressionUtils -> public static short toShort(TypeConverter typeConverter, TypedValue typedValue);1387312514;Attempt to convert a typed value to a short using the supplied type converter.;public static short toShort(TypeConverter typeConverter, TypedValue typedValue) {_		return (Short) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Short.class))__	};attempt,to,convert,a,typed,value,to,a,short,using,the,supplied,type,converter;public,static,short,to,short,type,converter,type,converter,typed,value,typed,value,return,short,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,short,class
ExpressionUtils -> public static short toShort(TypeConverter typeConverter, TypedValue typedValue);1419966315;Attempt to convert a typed value to a short using the supplied type converter.;public static short toShort(TypeConverter typeConverter, TypedValue typedValue) {_		return (Short) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Short.class))__	};attempt,to,convert,a,typed,value,to,a,short,using,the,supplied,type,converter;public,static,short,to,short,type,converter,type,converter,typed,value,typed,value,return,short,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,short,class
ExpressionUtils -> public static short toShort(TypeConverter typeConverter, TypedValue typedValue);1496259743;Attempt to convert a typed value to a short using the supplied type converter.;public static short toShort(TypeConverter typeConverter, TypedValue typedValue) {_		return (Short) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Short.class))__	};attempt,to,convert,a,typed,value,to,a,short,using,the,supplied,type,converter;public,static,short,to,short,type,converter,type,converter,typed,value,typed,value,return,short,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,short,class
ExpressionUtils -> public static short toShort(TypeConverter typeConverter, TypedValue typedValue);1496837955;Attempt to convert a typed value to a short using the supplied type converter.;public static short toShort(TypeConverter typeConverter, TypedValue typedValue) {_		return convertValue(typeConverter, typedValue, Short.class)__	};attempt,to,convert,a,typed,value,to,a,short,using,the,supplied,type,converter;public,static,short,to,short,type,converter,type,converter,typed,value,typed,value,return,convert,value,type,converter,typed,value,short,class
ExpressionUtils -> public static double toDouble(TypeConverter typeConverter, TypedValue typedValue);1328020251;Attempt to convert a typed value to a double using the supplied type converter.;public static double toDouble(TypeConverter typeConverter, TypedValue typedValue) {_		return (Double) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Double.class))__	};attempt,to,convert,a,typed,value,to,a,double,using,the,supplied,type,converter;public,static,double,to,double,type,converter,type,converter,typed,value,typed,value,return,double,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,double,class
ExpressionUtils -> public static double toDouble(TypeConverter typeConverter, TypedValue typedValue);1353568585;Attempt to convert a typed value to a double using the supplied type converter.;public static double toDouble(TypeConverter typeConverter, TypedValue typedValue) {_		return (Double) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Double.class))__	};attempt,to,convert,a,typed,value,to,a,double,using,the,supplied,type,converter;public,static,double,to,double,type,converter,type,converter,typed,value,typed,value,return,double,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,double,class
ExpressionUtils -> public static double toDouble(TypeConverter typeConverter, TypedValue typedValue);1372363092;Attempt to convert a typed value to a double using the supplied type converter.;public static double toDouble(TypeConverter typeConverter, TypedValue typedValue) {_		return (Double) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Double.class))__	};attempt,to,convert,a,typed,value,to,a,double,using,the,supplied,type,converter;public,static,double,to,double,type,converter,type,converter,typed,value,typed,value,return,double,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,double,class
ExpressionUtils -> public static double toDouble(TypeConverter typeConverter, TypedValue typedValue);1387312514;Attempt to convert a typed value to a double using the supplied type converter.;public static double toDouble(TypeConverter typeConverter, TypedValue typedValue) {_		return (Double) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Double.class))__	};attempt,to,convert,a,typed,value,to,a,double,using,the,supplied,type,converter;public,static,double,to,double,type,converter,type,converter,typed,value,typed,value,return,double,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,double,class
ExpressionUtils -> public static double toDouble(TypeConverter typeConverter, TypedValue typedValue);1419966315;Attempt to convert a typed value to a double using the supplied type converter.;public static double toDouble(TypeConverter typeConverter, TypedValue typedValue) {_		return (Double) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Double.class))__	};attempt,to,convert,a,typed,value,to,a,double,using,the,supplied,type,converter;public,static,double,to,double,type,converter,type,converter,typed,value,typed,value,return,double,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,double,class
ExpressionUtils -> public static double toDouble(TypeConverter typeConverter, TypedValue typedValue);1496259743;Attempt to convert a typed value to a double using the supplied type converter.;public static double toDouble(TypeConverter typeConverter, TypedValue typedValue) {_		return (Double) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Double.class))__	};attempt,to,convert,a,typed,value,to,a,double,using,the,supplied,type,converter;public,static,double,to,double,type,converter,type,converter,typed,value,typed,value,return,double,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,double,class
ExpressionUtils -> public static double toDouble(TypeConverter typeConverter, TypedValue typedValue);1496837955;Attempt to convert a typed value to a double using the supplied type converter.;public static double toDouble(TypeConverter typeConverter, TypedValue typedValue) {_		return convertValue(typeConverter, typedValue, Double.class)__	};attempt,to,convert,a,typed,value,to,a,double,using,the,supplied,type,converter;public,static,double,to,double,type,converter,type,converter,typed,value,typed,value,return,convert,value,type,converter,typed,value,double,class
ExpressionUtils -> public static long toLong(TypeConverter typeConverter, TypedValue typedValue);1328020251;Attempt to convert a typed value to a long using the supplied type converter.;public static long toLong(TypeConverter typeConverter, TypedValue typedValue) {_		return (Long) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(), TypeDescriptor_				.valueOf(Long.class))__	};attempt,to,convert,a,typed,value,to,a,long,using,the,supplied,type,converter;public,static,long,to,long,type,converter,type,converter,typed,value,typed,value,return,long,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,long,class
ExpressionUtils -> public static long toLong(TypeConverter typeConverter, TypedValue typedValue);1353568585;Attempt to convert a typed value to a long using the supplied type converter.;public static long toLong(TypeConverter typeConverter, TypedValue typedValue) {_		return (Long) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(), TypeDescriptor_				.valueOf(Long.class))__	};attempt,to,convert,a,typed,value,to,a,long,using,the,supplied,type,converter;public,static,long,to,long,type,converter,type,converter,typed,value,typed,value,return,long,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,long,class
ExpressionUtils -> public static long toLong(TypeConverter typeConverter, TypedValue typedValue);1372363092;Attempt to convert a typed value to a long using the supplied type converter.;public static long toLong(TypeConverter typeConverter, TypedValue typedValue) {_		return (Long) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(), TypeDescriptor_				.valueOf(Long.class))__	};attempt,to,convert,a,typed,value,to,a,long,using,the,supplied,type,converter;public,static,long,to,long,type,converter,type,converter,typed,value,typed,value,return,long,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,long,class
ExpressionUtils -> public static long toLong(TypeConverter typeConverter, TypedValue typedValue);1387312514;Attempt to convert a typed value to a long using the supplied type converter.;public static long toLong(TypeConverter typeConverter, TypedValue typedValue) {_		return (Long) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Long.class))__	};attempt,to,convert,a,typed,value,to,a,long,using,the,supplied,type,converter;public,static,long,to,long,type,converter,type,converter,typed,value,typed,value,return,long,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,long,class
ExpressionUtils -> public static long toLong(TypeConverter typeConverter, TypedValue typedValue);1419966315;Attempt to convert a typed value to a long using the supplied type converter.;public static long toLong(TypeConverter typeConverter, TypedValue typedValue) {_		return (Long) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Long.class))__	};attempt,to,convert,a,typed,value,to,a,long,using,the,supplied,type,converter;public,static,long,to,long,type,converter,type,converter,typed,value,typed,value,return,long,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,long,class
ExpressionUtils -> public static long toLong(TypeConverter typeConverter, TypedValue typedValue);1496259743;Attempt to convert a typed value to a long using the supplied type converter.;public static long toLong(TypeConverter typeConverter, TypedValue typedValue) {_		return (Long) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Long.class))__	};attempt,to,convert,a,typed,value,to,a,long,using,the,supplied,type,converter;public,static,long,to,long,type,converter,type,converter,typed,value,typed,value,return,long,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,long,class
ExpressionUtils -> public static long toLong(TypeConverter typeConverter, TypedValue typedValue);1496837955;Attempt to convert a typed value to a long using the supplied type converter.;public static long toLong(TypeConverter typeConverter, TypedValue typedValue) {_		return convertValue(typeConverter, typedValue, Long.class)__	};attempt,to,convert,a,typed,value,to,a,long,using,the,supplied,type,converter;public,static,long,to,long,type,converter,type,converter,typed,value,typed,value,return,convert,value,type,converter,typed,value,long,class
ExpressionUtils -> public static int toInt(TypeConverter typeConverter, TypedValue typedValue);1328020251;Attempt to convert a typed value to an int using the supplied type converter.;public static int toInt(TypeConverter typeConverter, TypedValue typedValue) {_		return (Integer) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Integer.class))__	};attempt,to,convert,a,typed,value,to,an,int,using,the,supplied,type,converter;public,static,int,to,int,type,converter,type,converter,typed,value,typed,value,return,integer,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,integer,class
ExpressionUtils -> public static int toInt(TypeConverter typeConverter, TypedValue typedValue);1353568585;Attempt to convert a typed value to an int using the supplied type converter.;public static int toInt(TypeConverter typeConverter, TypedValue typedValue) {_		return (Integer) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Integer.class))__	};attempt,to,convert,a,typed,value,to,an,int,using,the,supplied,type,converter;public,static,int,to,int,type,converter,type,converter,typed,value,typed,value,return,integer,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,integer,class
ExpressionUtils -> public static int toInt(TypeConverter typeConverter, TypedValue typedValue);1372363092;Attempt to convert a typed value to an int using the supplied type converter.;public static int toInt(TypeConverter typeConverter, TypedValue typedValue) {_		return (Integer) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Integer.class))__	};attempt,to,convert,a,typed,value,to,an,int,using,the,supplied,type,converter;public,static,int,to,int,type,converter,type,converter,typed,value,typed,value,return,integer,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,integer,class
ExpressionUtils -> public static int toInt(TypeConverter typeConverter, TypedValue typedValue);1387312514;Attempt to convert a typed value to an int using the supplied type converter.;public static int toInt(TypeConverter typeConverter, TypedValue typedValue) {_		return (Integer) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Integer.class))__	};attempt,to,convert,a,typed,value,to,an,int,using,the,supplied,type,converter;public,static,int,to,int,type,converter,type,converter,typed,value,typed,value,return,integer,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,integer,class
ExpressionUtils -> public static int toInt(TypeConverter typeConverter, TypedValue typedValue);1419966315;Attempt to convert a typed value to an int using the supplied type converter.;public static int toInt(TypeConverter typeConverter, TypedValue typedValue) {_		return (Integer) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Integer.class))__	};attempt,to,convert,a,typed,value,to,an,int,using,the,supplied,type,converter;public,static,int,to,int,type,converter,type,converter,typed,value,typed,value,return,integer,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,integer,class
ExpressionUtils -> public static int toInt(TypeConverter typeConverter, TypedValue typedValue);1496259743;Attempt to convert a typed value to an int using the supplied type converter.;public static int toInt(TypeConverter typeConverter, TypedValue typedValue) {_		return (Integer) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Integer.class))__	};attempt,to,convert,a,typed,value,to,an,int,using,the,supplied,type,converter;public,static,int,to,int,type,converter,type,converter,typed,value,typed,value,return,integer,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,integer,class
ExpressionUtils -> public static int toInt(TypeConverter typeConverter, TypedValue typedValue);1496837955;Attempt to convert a typed value to an int using the supplied type converter.;public static int toInt(TypeConverter typeConverter, TypedValue typedValue) {_		return convertValue(typeConverter, typedValue, Integer.class)__	};attempt,to,convert,a,typed,value,to,an,int,using,the,supplied,type,converter;public,static,int,to,int,type,converter,type,converter,typed,value,typed,value,return,convert,value,type,converter,typed,value,integer,class
ExpressionUtils -> public static char toChar(TypeConverter typeConverter, TypedValue typedValue);1328020251;Attempt to convert a typed value to a char using the supplied type converter.;public static char toChar(TypeConverter typeConverter, TypedValue typedValue) {_		return (Character) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Character.class))__	};attempt,to,convert,a,typed,value,to,a,char,using,the,supplied,type,converter;public,static,char,to,char,type,converter,type,converter,typed,value,typed,value,return,character,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,character,class
ExpressionUtils -> public static char toChar(TypeConverter typeConverter, TypedValue typedValue);1353568585;Attempt to convert a typed value to a char using the supplied type converter.;public static char toChar(TypeConverter typeConverter, TypedValue typedValue) {_		return (Character) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Character.class))__	};attempt,to,convert,a,typed,value,to,a,char,using,the,supplied,type,converter;public,static,char,to,char,type,converter,type,converter,typed,value,typed,value,return,character,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,character,class
ExpressionUtils -> public static char toChar(TypeConverter typeConverter, TypedValue typedValue);1372363092;Attempt to convert a typed value to a char using the supplied type converter.;public static char toChar(TypeConverter typeConverter, TypedValue typedValue) {_		return (Character) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Character.class))__	};attempt,to,convert,a,typed,value,to,a,char,using,the,supplied,type,converter;public,static,char,to,char,type,converter,type,converter,typed,value,typed,value,return,character,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,character,class
ExpressionUtils -> public static char toChar(TypeConverter typeConverter, TypedValue typedValue);1387312514;Attempt to convert a typed value to a char using the supplied type converter.;public static char toChar(TypeConverter typeConverter, TypedValue typedValue) {_		return (Character) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Character.class))__	};attempt,to,convert,a,typed,value,to,a,char,using,the,supplied,type,converter;public,static,char,to,char,type,converter,type,converter,typed,value,typed,value,return,character,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,character,class
ExpressionUtils -> public static char toChar(TypeConverter typeConverter, TypedValue typedValue);1419966315;Attempt to convert a typed value to a char using the supplied type converter.;public static char toChar(TypeConverter typeConverter, TypedValue typedValue) {_		return (Character) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Character.class))__	};attempt,to,convert,a,typed,value,to,a,char,using,the,supplied,type,converter;public,static,char,to,char,type,converter,type,converter,typed,value,typed,value,return,character,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,character,class
ExpressionUtils -> public static char toChar(TypeConverter typeConverter, TypedValue typedValue);1496259743;Attempt to convert a typed value to a char using the supplied type converter.;public static char toChar(TypeConverter typeConverter, TypedValue typedValue) {_		return (Character) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Character.class))__	};attempt,to,convert,a,typed,value,to,a,char,using,the,supplied,type,converter;public,static,char,to,char,type,converter,type,converter,typed,value,typed,value,return,character,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,character,class
ExpressionUtils -> public static char toChar(TypeConverter typeConverter, TypedValue typedValue);1496837955;Attempt to convert a typed value to a char using the supplied type converter.;public static char toChar(TypeConverter typeConverter, TypedValue typedValue) {_		return convertValue(typeConverter, typedValue, Character.class)__	};attempt,to,convert,a,typed,value,to,a,char,using,the,supplied,type,converter;public,static,char,to,char,type,converter,type,converter,typed,value,typed,value,return,convert,value,type,converter,typed,value,character,class
ExpressionUtils -> public static byte toByte(TypeConverter typeConverter, TypedValue typedValue);1328020251;Attempt to convert a typed value to a byte using the supplied type converter.;public static byte toByte(TypeConverter typeConverter, TypedValue typedValue) {_		return (Byte) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(), TypeDescriptor_				.valueOf(Byte.class))__	};attempt,to,convert,a,typed,value,to,a,byte,using,the,supplied,type,converter;public,static,byte,to,byte,type,converter,type,converter,typed,value,typed,value,return,byte,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,byte,class
ExpressionUtils -> public static byte toByte(TypeConverter typeConverter, TypedValue typedValue);1353568585;Attempt to convert a typed value to a byte using the supplied type converter.;public static byte toByte(TypeConverter typeConverter, TypedValue typedValue) {_		return (Byte) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(), TypeDescriptor_				.valueOf(Byte.class))__	};attempt,to,convert,a,typed,value,to,a,byte,using,the,supplied,type,converter;public,static,byte,to,byte,type,converter,type,converter,typed,value,typed,value,return,byte,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,byte,class
ExpressionUtils -> public static byte toByte(TypeConverter typeConverter, TypedValue typedValue);1372363092;Attempt to convert a typed value to a byte using the supplied type converter.;public static byte toByte(TypeConverter typeConverter, TypedValue typedValue) {_		return (Byte) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(), TypeDescriptor_				.valueOf(Byte.class))__	};attempt,to,convert,a,typed,value,to,a,byte,using,the,supplied,type,converter;public,static,byte,to,byte,type,converter,type,converter,typed,value,typed,value,return,byte,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,byte,class
ExpressionUtils -> public static byte toByte(TypeConverter typeConverter, TypedValue typedValue);1387312514;Attempt to convert a typed value to a byte using the supplied type converter.;public static byte toByte(TypeConverter typeConverter, TypedValue typedValue) {_		return (Byte) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Byte.class))__	};attempt,to,convert,a,typed,value,to,a,byte,using,the,supplied,type,converter;public,static,byte,to,byte,type,converter,type,converter,typed,value,typed,value,return,byte,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,byte,class
ExpressionUtils -> public static byte toByte(TypeConverter typeConverter, TypedValue typedValue);1419966315;Attempt to convert a typed value to a byte using the supplied type converter.;public static byte toByte(TypeConverter typeConverter, TypedValue typedValue) {_		return (Byte) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Byte.class))__	};attempt,to,convert,a,typed,value,to,a,byte,using,the,supplied,type,converter;public,static,byte,to,byte,type,converter,type,converter,typed,value,typed,value,return,byte,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,byte,class
ExpressionUtils -> public static byte toByte(TypeConverter typeConverter, TypedValue typedValue);1496259743;Attempt to convert a typed value to a byte using the supplied type converter.;public static byte toByte(TypeConverter typeConverter, TypedValue typedValue) {_		return (Byte) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Byte.class))__	};attempt,to,convert,a,typed,value,to,a,byte,using,the,supplied,type,converter;public,static,byte,to,byte,type,converter,type,converter,typed,value,typed,value,return,byte,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,byte,class
ExpressionUtils -> public static byte toByte(TypeConverter typeConverter, TypedValue typedValue);1496837955;Attempt to convert a typed value to a byte using the supplied type converter.;public static byte toByte(TypeConverter typeConverter, TypedValue typedValue) {_		return convertValue(typeConverter, typedValue, Byte.class)__	};attempt,to,convert,a,typed,value,to,a,byte,using,the,supplied,type,converter;public,static,byte,to,byte,type,converter,type,converter,typed,value,typed,value,return,convert,value,type,converter,typed,value,byte,class
ExpressionUtils -> public static boolean toBoolean(TypeConverter typeConverter, TypedValue typedValue);1328020251;Attempt to convert a typed value to a boolean using the supplied type converter.;public static boolean toBoolean(TypeConverter typeConverter, TypedValue typedValue) {_		return (Boolean) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Boolean.class))__	};attempt,to,convert,a,typed,value,to,a,boolean,using,the,supplied,type,converter;public,static,boolean,to,boolean,type,converter,type,converter,typed,value,typed,value,return,boolean,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,boolean,class
ExpressionUtils -> public static boolean toBoolean(TypeConverter typeConverter, TypedValue typedValue);1353568585;Attempt to convert a typed value to a boolean using the supplied type converter.;public static boolean toBoolean(TypeConverter typeConverter, TypedValue typedValue) {_		return (Boolean) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Boolean.class))__	};attempt,to,convert,a,typed,value,to,a,boolean,using,the,supplied,type,converter;public,static,boolean,to,boolean,type,converter,type,converter,typed,value,typed,value,return,boolean,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,boolean,class
ExpressionUtils -> public static boolean toBoolean(TypeConverter typeConverter, TypedValue typedValue);1372363092;Attempt to convert a typed value to a boolean using the supplied type converter.;public static boolean toBoolean(TypeConverter typeConverter, TypedValue typedValue) {_		return (Boolean) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Boolean.class))__	};attempt,to,convert,a,typed,value,to,a,boolean,using,the,supplied,type,converter;public,static,boolean,to,boolean,type,converter,type,converter,typed,value,typed,value,return,boolean,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,boolean,class
ExpressionUtils -> public static boolean toBoolean(TypeConverter typeConverter, TypedValue typedValue);1387312514;Attempt to convert a typed value to a boolean using the supplied type converter.;public static boolean toBoolean(TypeConverter typeConverter, TypedValue typedValue) {_		return (Boolean) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Boolean.class))__	};attempt,to,convert,a,typed,value,to,a,boolean,using,the,supplied,type,converter;public,static,boolean,to,boolean,type,converter,type,converter,typed,value,typed,value,return,boolean,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,boolean,class
ExpressionUtils -> public static boolean toBoolean(TypeConverter typeConverter, TypedValue typedValue);1419966315;Attempt to convert a typed value to a boolean using the supplied type converter.;public static boolean toBoolean(TypeConverter typeConverter, TypedValue typedValue) {_		return (Boolean) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Boolean.class))__	};attempt,to,convert,a,typed,value,to,a,boolean,using,the,supplied,type,converter;public,static,boolean,to,boolean,type,converter,type,converter,typed,value,typed,value,return,boolean,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,boolean,class
ExpressionUtils -> public static boolean toBoolean(TypeConverter typeConverter, TypedValue typedValue);1496259743;Attempt to convert a typed value to a boolean using the supplied type converter.;public static boolean toBoolean(TypeConverter typeConverter, TypedValue typedValue) {_		return (Boolean) typeConverter.convertValue(typedValue.getValue(), typedValue.getTypeDescriptor(),_				TypeDescriptor.valueOf(Boolean.class))__	};attempt,to,convert,a,typed,value,to,a,boolean,using,the,supplied,type,converter;public,static,boolean,to,boolean,type,converter,type,converter,typed,value,typed,value,return,boolean,type,converter,convert,value,typed,value,get,value,typed,value,get,type,descriptor,type,descriptor,value,of,boolean,class
ExpressionUtils -> public static boolean toBoolean(TypeConverter typeConverter, TypedValue typedValue);1496837955;Attempt to convert a typed value to a boolean using the supplied type converter.;public static boolean toBoolean(TypeConverter typeConverter, TypedValue typedValue) {_		return convertValue(typeConverter, typedValue, Boolean.class)__	};attempt,to,convert,a,typed,value,to,a,boolean,using,the,supplied,type,converter;public,static,boolean,to,boolean,type,converter,type,converter,typed,value,typed,value,return,convert,value,type,converter,typed,value,boolean,class
