# id;timestamp;commentText;codeText;commentWords;codeWords
InlineMap -> public boolean isConstant();1407348911;@return whether this list is a constant value;public boolean isConstant() {_		return this.constant != null__	};return,whether,this,list,is,a,constant,value;public,boolean,is,constant,return,this,constant,null
InlineMap -> public boolean isConstant();1412630983;@return whether this list is a constant value;public boolean isConstant() {_		return this.constant != null__	};return,whether,this,list,is,a,constant,value;public,boolean,is,constant,return,this,constant,null
InlineMap -> public boolean isConstant();1467730834;@return whether this list is a constant value;public boolean isConstant() {_		return this.constant != null__	};return,whether,this,list,is,a,constant,value;public,boolean,is,constant,return,this,constant,null
InlineMap -> public boolean isConstant();1496837955;@return whether this list is a constant value;public boolean isConstant() {_		return this.constant != null__	};return,whether,this,list,is,a,constant,value;public,boolean,is,constant,return,this,constant,null
InlineMap -> public boolean isConstant();1498780456;Return whether this list is a constant value.;public boolean isConstant() {_		return this.constant != null__	};return,whether,this,list,is,a,constant,value;public,boolean,is,constant,return,this,constant,null
InlineMap -> public boolean isConstant();1530174524;Return whether this list is a constant value.;public boolean isConstant() {_		return this.constant != null__	};return,whether,this,list,is,a,constant,value;public,boolean,is,constant,return,this,constant,null
InlineMap -> public boolean isConstant();1548712256;Return whether this list is a constant value.;public boolean isConstant() {_		return this.constant != null__	};return,whether,this,list,is,a,constant,value;public,boolean,is,constant,return,this,constant,null
InlineMap -> private void checkIfConstant();1407348911;If all the components of the list are constants, or lists/maps that themselves contain constants, then a constant list_can be built to represent this node. This will speed up later getValue calls and reduce the amount of garbage_created.;private void checkIfConstant() {_		boolean isConstant = true__		for (int c = 0, max = getChildCount()_ c < max_ c++) {_			SpelNode child = getChild(c)__			if (!(child instanceof Literal)) {_				if (child instanceof InlineList) {_					InlineList inlineList = (InlineList) child__					if (!inlineList.isConstant()) {_						isConstant = false__						break__					}_				}_				else if (child instanceof InlineMap) {_					InlineMap inlineMap = (InlineMap) child__					if (!inlineMap.isConstant()) {_						isConstant = false__						break__					}_				}_				else if (!((c%2)==0 && (child instanceof PropertyOrFieldReference))) {					_					isConstant = false__					break__				}_			}_		}_		if (isConstant) {_			Map<Object,Object> constantMap = new LinkedHashMap<Object,Object>()_			_			int childcount = getChildCount()__			for (int c = 0_ c < childcount_ c++) {_				SpelNode keyChild = getChild(c++)__				SpelNode valueChild = getChild(c)__				Object key = null__				Object value = null__				if ((keyChild instanceof Literal)) {_					key = ((Literal) keyChild).getLiteralValue().getValue()__				}_				else if (keyChild instanceof PropertyOrFieldReference) {_					key = ((PropertyOrFieldReference) keyChild).getName()__				}_				else {_					return__				}_				if (valueChild instanceof Literal) {_					value = ((Literal) valueChild).getLiteralValue().getValue()__				}_				else if (valueChild instanceof InlineList) {_					value = ((InlineList) valueChild).getConstantValue()__				}_				else if (valueChild instanceof InlineMap) {_					value = ((InlineMap) valueChild).getConstantValue()__				}_				constantMap.put(key, value)__			}_			this.constant = new TypedValue(Collections.unmodifiableMap(constantMap))__		}_	};if,all,the,components,of,the,list,are,constants,or,lists,maps,that,themselves,contain,constants,then,a,constant,list,can,be,built,to,represent,this,node,this,will,speed,up,later,get,value,calls,and,reduce,the,amount,of,garbage,created;private,void,check,if,constant,boolean,is,constant,true,for,int,c,0,max,get,child,count,c,max,c,spel,node,child,get,child,c,if,child,instanceof,literal,if,child,instanceof,inline,list,inline,list,inline,list,inline,list,child,if,inline,list,is,constant,is,constant,false,break,else,if,child,instanceof,inline,map,inline,map,inline,map,inline,map,child,if,inline,map,is,constant,is,constant,false,break,else,if,c,2,0,child,instanceof,property,or,field,reference,is,constant,false,break,if,is,constant,map,object,object,constant,map,new,linked,hash,map,object,object,int,childcount,get,child,count,for,int,c,0,c,childcount,c,spel,node,key,child,get,child,c,spel,node,value,child,get,child,c,object,key,null,object,value,null,if,key,child,instanceof,literal,key,literal,key,child,get,literal,value,get,value,else,if,key,child,instanceof,property,or,field,reference,key,property,or,field,reference,key,child,get,name,else,return,if,value,child,instanceof,literal,value,literal,value,child,get,literal,value,get,value,else,if,value,child,instanceof,inline,list,value,inline,list,value,child,get,constant,value,else,if,value,child,instanceof,inline,map,value,inline,map,value,child,get,constant,value,constant,map,put,key,value,this,constant,new,typed,value,collections,unmodifiable,map,constant,map
InlineMap -> private void checkIfConstant();1412630983;If all the components of the list are constants, or lists/maps that themselves_contain constants, then a constant list can be built to represent this node._This will speed up later getValue calls and reduce the amount of garbage created.;private void checkIfConstant() {_		boolean isConstant = true__		for (int c = 0, max = getChildCount()_ c < max_ c++) {_			SpelNode child = getChild(c)__			if (!(child instanceof Literal)) {_				if (child instanceof InlineList) {_					InlineList inlineList = (InlineList) child__					if (!inlineList.isConstant()) {_						isConstant = false__						break__					}_				}_				else if (child instanceof InlineMap) {_					InlineMap inlineMap = (InlineMap) child__					if (!inlineMap.isConstant()) {_						isConstant = false__						break__					}_				}_				else if (!((c%2)==0 && (child instanceof PropertyOrFieldReference))) {					_					isConstant = false__					break__				}_			}_		}_		if (isConstant) {_			Map<Object,Object> constantMap = new LinkedHashMap<Object,Object>()_			_			int childCount = getChildCount()__			for (int c = 0_ c < childCount_ c++) {_				SpelNode keyChild = getChild(c++)__				SpelNode valueChild = getChild(c)__				Object key = null__				Object value = null__				if (keyChild instanceof Literal) {_					key = ((Literal) keyChild).getLiteralValue().getValue()__				}_				else if (keyChild instanceof PropertyOrFieldReference) {_					key = ((PropertyOrFieldReference) keyChild).getName()__				}_				else {_					return__				}_				if (valueChild instanceof Literal) {_					value = ((Literal) valueChild).getLiteralValue().getValue()__				}_				else if (valueChild instanceof InlineList) {_					value = ((InlineList) valueChild).getConstantValue()__				}_				else if (valueChild instanceof InlineMap) {_					value = ((InlineMap) valueChild).getConstantValue()__				}_				constantMap.put(key, value)__			}_			this.constant = new TypedValue(Collections.unmodifiableMap(constantMap))__		}_	};if,all,the,components,of,the,list,are,constants,or,lists,maps,that,themselves,contain,constants,then,a,constant,list,can,be,built,to,represent,this,node,this,will,speed,up,later,get,value,calls,and,reduce,the,amount,of,garbage,created;private,void,check,if,constant,boolean,is,constant,true,for,int,c,0,max,get,child,count,c,max,c,spel,node,child,get,child,c,if,child,instanceof,literal,if,child,instanceof,inline,list,inline,list,inline,list,inline,list,child,if,inline,list,is,constant,is,constant,false,break,else,if,child,instanceof,inline,map,inline,map,inline,map,inline,map,child,if,inline,map,is,constant,is,constant,false,break,else,if,c,2,0,child,instanceof,property,or,field,reference,is,constant,false,break,if,is,constant,map,object,object,constant,map,new,linked,hash,map,object,object,int,child,count,get,child,count,for,int,c,0,c,child,count,c,spel,node,key,child,get,child,c,spel,node,value,child,get,child,c,object,key,null,object,value,null,if,key,child,instanceof,literal,key,literal,key,child,get,literal,value,get,value,else,if,key,child,instanceof,property,or,field,reference,key,property,or,field,reference,key,child,get,name,else,return,if,value,child,instanceof,literal,value,literal,value,child,get,literal,value,get,value,else,if,value,child,instanceof,inline,list,value,inline,list,value,child,get,constant,value,else,if,value,child,instanceof,inline,map,value,inline,map,value,child,get,constant,value,constant,map,put,key,value,this,constant,new,typed,value,collections,unmodifiable,map,constant,map
InlineMap -> private void checkIfConstant();1467730834;If all the components of the list are constants, or lists/maps that themselves_contain constants, then a constant list can be built to represent this node._This will speed up later getValue calls and reduce the amount of garbage created.;private void checkIfConstant() {_		boolean isConstant = true__		for (int c = 0, max = getChildCount()_ c < max_ c++) {_			SpelNode child = getChild(c)__			if (!(child instanceof Literal)) {_				if (child instanceof InlineList) {_					InlineList inlineList = (InlineList) child__					if (!inlineList.isConstant()) {_						isConstant = false__						break__					}_				}_				else if (child instanceof InlineMap) {_					InlineMap inlineMap = (InlineMap) child__					if (!inlineMap.isConstant()) {_						isConstant = false__						break__					}_				}_				else if (!((c%2)==0 && (child instanceof PropertyOrFieldReference))) {					_					isConstant = false__					break__				}_			}_		}_		if (isConstant) {_			Map<Object,Object> constantMap = new LinkedHashMap<>()__			int childCount = getChildCount()__			for (int c = 0_ c < childCount_ c++) {_				SpelNode keyChild = getChild(c++)__				SpelNode valueChild = getChild(c)__				Object key = null__				Object value = null__				if (keyChild instanceof Literal) {_					key = ((Literal) keyChild).getLiteralValue().getValue()__				}_				else if (keyChild instanceof PropertyOrFieldReference) {_					key = ((PropertyOrFieldReference) keyChild).getName()__				}_				else {_					return__				}_				if (valueChild instanceof Literal) {_					value = ((Literal) valueChild).getLiteralValue().getValue()__				}_				else if (valueChild instanceof InlineList) {_					value = ((InlineList) valueChild).getConstantValue()__				}_				else if (valueChild instanceof InlineMap) {_					value = ((InlineMap) valueChild).getConstantValue()__				}_				constantMap.put(key, value)__			}_			this.constant = new TypedValue(Collections.unmodifiableMap(constantMap))__		}_	};if,all,the,components,of,the,list,are,constants,or,lists,maps,that,themselves,contain,constants,then,a,constant,list,can,be,built,to,represent,this,node,this,will,speed,up,later,get,value,calls,and,reduce,the,amount,of,garbage,created;private,void,check,if,constant,boolean,is,constant,true,for,int,c,0,max,get,child,count,c,max,c,spel,node,child,get,child,c,if,child,instanceof,literal,if,child,instanceof,inline,list,inline,list,inline,list,inline,list,child,if,inline,list,is,constant,is,constant,false,break,else,if,child,instanceof,inline,map,inline,map,inline,map,inline,map,child,if,inline,map,is,constant,is,constant,false,break,else,if,c,2,0,child,instanceof,property,or,field,reference,is,constant,false,break,if,is,constant,map,object,object,constant,map,new,linked,hash,map,int,child,count,get,child,count,for,int,c,0,c,child,count,c,spel,node,key,child,get,child,c,spel,node,value,child,get,child,c,object,key,null,object,value,null,if,key,child,instanceof,literal,key,literal,key,child,get,literal,value,get,value,else,if,key,child,instanceof,property,or,field,reference,key,property,or,field,reference,key,child,get,name,else,return,if,value,child,instanceof,literal,value,literal,value,child,get,literal,value,get,value,else,if,value,child,instanceof,inline,list,value,inline,list,value,child,get,constant,value,else,if,value,child,instanceof,inline,map,value,inline,map,value,child,get,constant,value,constant,map,put,key,value,this,constant,new,typed,value,collections,unmodifiable,map,constant,map
InlineMap -> private void checkIfConstant();1496837955;If all the components of the list are constants, or lists/maps that themselves_contain constants, then a constant list can be built to represent this node._This will speed up later getValue calls and reduce the amount of garbage created.;private void checkIfConstant() {_		boolean isConstant = true__		for (int c = 0, max = getChildCount()_ c < max_ c++) {_			SpelNode child = getChild(c)__			if (!(child instanceof Literal)) {_				if (child instanceof InlineList) {_					InlineList inlineList = (InlineList) child__					if (!inlineList.isConstant()) {_						isConstant = false__						break__					}_				}_				else if (child instanceof InlineMap) {_					InlineMap inlineMap = (InlineMap) child__					if (!inlineMap.isConstant()) {_						isConstant = false__						break__					}_				}_				else if (!((c%2)==0 && (child instanceof PropertyOrFieldReference))) {					_					isConstant = false__					break__				}_			}_		}_		if (isConstant) {_			Map<Object,Object> constantMap = new LinkedHashMap<>()__			int childCount = getChildCount()__			for (int c = 0_ c < childCount_ c++) {_				SpelNode keyChild = getChild(c++)__				SpelNode valueChild = getChild(c)__				Object key = null__				Object value = null__				if (keyChild instanceof Literal) {_					key = ((Literal) keyChild).getLiteralValue().getValue()__				}_				else if (keyChild instanceof PropertyOrFieldReference) {_					key = ((PropertyOrFieldReference) keyChild).getName()__				}_				else {_					return__				}_				if (valueChild instanceof Literal) {_					value = ((Literal) valueChild).getLiteralValue().getValue()__				}_				else if (valueChild instanceof InlineList) {_					value = ((InlineList) valueChild).getConstantValue()__				}_				else if (valueChild instanceof InlineMap) {_					value = ((InlineMap) valueChild).getConstantValue()__				}_				constantMap.put(key, value)__			}_			this.constant = new TypedValue(Collections.unmodifiableMap(constantMap))__		}_	};if,all,the,components,of,the,list,are,constants,or,lists,maps,that,themselves,contain,constants,then,a,constant,list,can,be,built,to,represent,this,node,this,will,speed,up,later,get,value,calls,and,reduce,the,amount,of,garbage,created;private,void,check,if,constant,boolean,is,constant,true,for,int,c,0,max,get,child,count,c,max,c,spel,node,child,get,child,c,if,child,instanceof,literal,if,child,instanceof,inline,list,inline,list,inline,list,inline,list,child,if,inline,list,is,constant,is,constant,false,break,else,if,child,instanceof,inline,map,inline,map,inline,map,inline,map,child,if,inline,map,is,constant,is,constant,false,break,else,if,c,2,0,child,instanceof,property,or,field,reference,is,constant,false,break,if,is,constant,map,object,object,constant,map,new,linked,hash,map,int,child,count,get,child,count,for,int,c,0,c,child,count,c,spel,node,key,child,get,child,c,spel,node,value,child,get,child,c,object,key,null,object,value,null,if,key,child,instanceof,literal,key,literal,key,child,get,literal,value,get,value,else,if,key,child,instanceof,property,or,field,reference,key,property,or,field,reference,key,child,get,name,else,return,if,value,child,instanceof,literal,value,literal,value,child,get,literal,value,get,value,else,if,value,child,instanceof,inline,list,value,inline,list,value,child,get,constant,value,else,if,value,child,instanceof,inline,map,value,inline,map,value,child,get,constant,value,constant,map,put,key,value,this,constant,new,typed,value,collections,unmodifiable,map,constant,map
InlineMap -> private void checkIfConstant();1498780456;If all the components of the list are constants, or lists/maps that themselves_contain constants, then a constant list can be built to represent this node._This will speed up later getValue calls and reduce the amount of garbage created.;private void checkIfConstant() {_		boolean isConstant = true__		for (int c = 0, max = getChildCount()_ c < max_ c++) {_			SpelNode child = getChild(c)__			if (!(child instanceof Literal)) {_				if (child instanceof InlineList) {_					InlineList inlineList = (InlineList) child__					if (!inlineList.isConstant()) {_						isConstant = false__						break__					}_				}_				else if (child instanceof InlineMap) {_					InlineMap inlineMap = (InlineMap) child__					if (!inlineMap.isConstant()) {_						isConstant = false__						break__					}_				}_				else if (!((c%2)==0 && (child instanceof PropertyOrFieldReference))) {					_					isConstant = false__					break__				}_			}_		}_		if (isConstant) {_			Map<Object,Object> constantMap = new LinkedHashMap<>()__			int childCount = getChildCount()__			for (int c = 0_ c < childCount_ c++) {_				SpelNode keyChild = getChild(c++)__				SpelNode valueChild = getChild(c)__				Object key = null__				Object value = null__				if (keyChild instanceof Literal) {_					key = ((Literal) keyChild).getLiteralValue().getValue()__				}_				else if (keyChild instanceof PropertyOrFieldReference) {_					key = ((PropertyOrFieldReference) keyChild).getName()__				}_				else {_					return__				}_				if (valueChild instanceof Literal) {_					value = ((Literal) valueChild).getLiteralValue().getValue()__				}_				else if (valueChild instanceof InlineList) {_					value = ((InlineList) valueChild).getConstantValue()__				}_				else if (valueChild instanceof InlineMap) {_					value = ((InlineMap) valueChild).getConstantValue()__				}_				constantMap.put(key, value)__			}_			this.constant = new TypedValue(Collections.unmodifiableMap(constantMap))__		}_	};if,all,the,components,of,the,list,are,constants,or,lists,maps,that,themselves,contain,constants,then,a,constant,list,can,be,built,to,represent,this,node,this,will,speed,up,later,get,value,calls,and,reduce,the,amount,of,garbage,created;private,void,check,if,constant,boolean,is,constant,true,for,int,c,0,max,get,child,count,c,max,c,spel,node,child,get,child,c,if,child,instanceof,literal,if,child,instanceof,inline,list,inline,list,inline,list,inline,list,child,if,inline,list,is,constant,is,constant,false,break,else,if,child,instanceof,inline,map,inline,map,inline,map,inline,map,child,if,inline,map,is,constant,is,constant,false,break,else,if,c,2,0,child,instanceof,property,or,field,reference,is,constant,false,break,if,is,constant,map,object,object,constant,map,new,linked,hash,map,int,child,count,get,child,count,for,int,c,0,c,child,count,c,spel,node,key,child,get,child,c,spel,node,value,child,get,child,c,object,key,null,object,value,null,if,key,child,instanceof,literal,key,literal,key,child,get,literal,value,get,value,else,if,key,child,instanceof,property,or,field,reference,key,property,or,field,reference,key,child,get,name,else,return,if,value,child,instanceof,literal,value,literal,value,child,get,literal,value,get,value,else,if,value,child,instanceof,inline,list,value,inline,list,value,child,get,constant,value,else,if,value,child,instanceof,inline,map,value,inline,map,value,child,get,constant,value,constant,map,put,key,value,this,constant,new,typed,value,collections,unmodifiable,map,constant,map
InlineMap -> private void checkIfConstant();1530174524;If all the components of the list are constants, or lists/maps that themselves_contain constants, then a constant list can be built to represent this node._This will speed up later getValue calls and reduce the amount of garbage created.;private void checkIfConstant() {_		boolean isConstant = true__		for (int c = 0, max = getChildCount()_ c < max_ c++) {_			SpelNode child = getChild(c)__			if (!(child instanceof Literal)) {_				if (child instanceof InlineList) {_					InlineList inlineList = (InlineList) child__					if (!inlineList.isConstant()) {_						isConstant = false__						break__					}_				}_				else if (child instanceof InlineMap) {_					InlineMap inlineMap = (InlineMap) child__					if (!inlineMap.isConstant()) {_						isConstant = false__						break__					}_				}_				else if (!((c%2)==0 && (child instanceof PropertyOrFieldReference))) {_					isConstant = false__					break__				}_			}_		}_		if (isConstant) {_			Map<Object,Object> constantMap = new LinkedHashMap<>()__			int childCount = getChildCount()__			for (int c = 0_ c < childCount_ c++) {_				SpelNode keyChild = getChild(c++)__				SpelNode valueChild = getChild(c)__				Object key = null__				Object value = null__				if (keyChild instanceof Literal) {_					key = ((Literal) keyChild).getLiteralValue().getValue()__				}_				else if (keyChild instanceof PropertyOrFieldReference) {_					key = ((PropertyOrFieldReference) keyChild).getName()__				}_				else {_					return__				}_				if (valueChild instanceof Literal) {_					value = ((Literal) valueChild).getLiteralValue().getValue()__				}_				else if (valueChild instanceof InlineList) {_					value = ((InlineList) valueChild).getConstantValue()__				}_				else if (valueChild instanceof InlineMap) {_					value = ((InlineMap) valueChild).getConstantValue()__				}_				constantMap.put(key, value)__			}_			this.constant = new TypedValue(Collections.unmodifiableMap(constantMap))__		}_	};if,all,the,components,of,the,list,are,constants,or,lists,maps,that,themselves,contain,constants,then,a,constant,list,can,be,built,to,represent,this,node,this,will,speed,up,later,get,value,calls,and,reduce,the,amount,of,garbage,created;private,void,check,if,constant,boolean,is,constant,true,for,int,c,0,max,get,child,count,c,max,c,spel,node,child,get,child,c,if,child,instanceof,literal,if,child,instanceof,inline,list,inline,list,inline,list,inline,list,child,if,inline,list,is,constant,is,constant,false,break,else,if,child,instanceof,inline,map,inline,map,inline,map,inline,map,child,if,inline,map,is,constant,is,constant,false,break,else,if,c,2,0,child,instanceof,property,or,field,reference,is,constant,false,break,if,is,constant,map,object,object,constant,map,new,linked,hash,map,int,child,count,get,child,count,for,int,c,0,c,child,count,c,spel,node,key,child,get,child,c,spel,node,value,child,get,child,c,object,key,null,object,value,null,if,key,child,instanceof,literal,key,literal,key,child,get,literal,value,get,value,else,if,key,child,instanceof,property,or,field,reference,key,property,or,field,reference,key,child,get,name,else,return,if,value,child,instanceof,literal,value,literal,value,child,get,literal,value,get,value,else,if,value,child,instanceof,inline,list,value,inline,list,value,child,get,constant,value,else,if,value,child,instanceof,inline,map,value,inline,map,value,child,get,constant,value,constant,map,put,key,value,this,constant,new,typed,value,collections,unmodifiable,map,constant,map
InlineMap -> private void checkIfConstant();1548712256;If all the components of the map are constants, or lists/maps that themselves_contain constants, then a constant list can be built to represent this node._This will speed up later getValue calls and reduce the amount of garbage created.;private void checkIfConstant() {_		boolean isConstant = true__		for (int c = 0, max = getChildCount()_ c < max_ c++) {_			SpelNode child = getChild(c)__			if (!(child instanceof Literal)) {_				if (child instanceof InlineList) {_					InlineList inlineList = (InlineList) child__					if (!inlineList.isConstant()) {_						isConstant = false__						break__					}_				}_				else if (child instanceof InlineMap) {_					InlineMap inlineMap = (InlineMap) child__					if (!inlineMap.isConstant()) {_						isConstant = false__						break__					}_				}_				else if (!(c % 2 == 0 && child instanceof PropertyOrFieldReference)) {_					isConstant = false__					break__				}_			}_		}_		if (isConstant) {_			Map<Object, Object> constantMap = new LinkedHashMap<>()__			int childCount = getChildCount()__			for (int c = 0_ c < childCount_ c++) {_				SpelNode keyChild = getChild(c++)__				SpelNode valueChild = getChild(c)__				Object key = null__				Object value = null__				if (keyChild instanceof Literal) {_					key = ((Literal) keyChild).getLiteralValue().getValue()__				}_				else if (keyChild instanceof PropertyOrFieldReference) {_					key = ((PropertyOrFieldReference) keyChild).getName()__				}_				else {_					return__				}_				if (valueChild instanceof Literal) {_					value = ((Literal) valueChild).getLiteralValue().getValue()__				}_				else if (valueChild instanceof InlineList) {_					value = ((InlineList) valueChild).getConstantValue()__				}_				else if (valueChild instanceof InlineMap) {_					value = ((InlineMap) valueChild).getConstantValue()__				}_				constantMap.put(key, value)__			}_			this.constant = new TypedValue(Collections.unmodifiableMap(constantMap))__		}_	};if,all,the,components,of,the,map,are,constants,or,lists,maps,that,themselves,contain,constants,then,a,constant,list,can,be,built,to,represent,this,node,this,will,speed,up,later,get,value,calls,and,reduce,the,amount,of,garbage,created;private,void,check,if,constant,boolean,is,constant,true,for,int,c,0,max,get,child,count,c,max,c,spel,node,child,get,child,c,if,child,instanceof,literal,if,child,instanceof,inline,list,inline,list,inline,list,inline,list,child,if,inline,list,is,constant,is,constant,false,break,else,if,child,instanceof,inline,map,inline,map,inline,map,inline,map,child,if,inline,map,is,constant,is,constant,false,break,else,if,c,2,0,child,instanceof,property,or,field,reference,is,constant,false,break,if,is,constant,map,object,object,constant,map,new,linked,hash,map,int,child,count,get,child,count,for,int,c,0,c,child,count,c,spel,node,key,child,get,child,c,spel,node,value,child,get,child,c,object,key,null,object,value,null,if,key,child,instanceof,literal,key,literal,key,child,get,literal,value,get,value,else,if,key,child,instanceof,property,or,field,reference,key,property,or,field,reference,key,child,get,name,else,return,if,value,child,instanceof,literal,value,literal,value,child,get,literal,value,get,value,else,if,value,child,instanceof,inline,list,value,inline,list,value,child,get,constant,value,else,if,value,child,instanceof,inline,map,value,inline,map,value,child,get,constant,value,constant,map,put,key,value,this,constant,new,typed,value,collections,unmodifiable,map,constant,map
