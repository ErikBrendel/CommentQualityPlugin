# id;timestamp;commentText;codeText;commentWords;codeWords
ParsingTests -> public void parseCheck(String expression);1328020251;Parse the supplied expression and then create a string representation of the resultant AST, it should be the same_as the original expression.__@param expression the expression to parse *and* the expected value of the string form of the resultant AST;public void parseCheck(String expression) {_		parseCheck(expression, expression)__	};parse,the,supplied,expression,and,then,create,a,string,representation,of,the,resultant,ast,it,should,be,the,same,as,the,original,expression,param,expression,the,expression,to,parse,and,the,expected,value,of,the,string,form,of,the,resultant,ast;public,void,parse,check,string,expression,parse,check,expression,expression
ParsingTests -> public void parseCheck(String expression);1356735495;Parse the supplied expression and then create a string representation of the resultant AST, it should be the same_as the original expression.__@param expression the expression to parse *and* the expected value of the string form of the resultant AST;public void parseCheck(String expression) {_		parseCheck(expression, expression)__	};parse,the,supplied,expression,and,then,create,a,string,representation,of,the,resultant,ast,it,should,be,the,same,as,the,original,expression,param,expression,the,expression,to,parse,and,the,expected,value,of,the,string,form,of,the,resultant,ast;public,void,parse,check,string,expression,parse,check,expression,expression
ParsingTests -> public void parseCheck(String expression);1357119417;Parse the supplied expression and then create a string representation of the resultant AST, it should be the same_as the original expression.__@param expression the expression to parse *and* the expected value of the string form of the resultant AST;public void parseCheck(String expression) {_		parseCheck(expression, expression)__	};parse,the,supplied,expression,and,then,create,a,string,representation,of,the,resultant,ast,it,should,be,the,same,as,the,original,expression,param,expression,the,expression,to,parse,and,the,expected,value,of,the,string,form,of,the,resultant,ast;public,void,parse,check,string,expression,parse,check,expression,expression
ParsingTests -> public void parseCheck(String expression);1407348911;Parse the supplied expression and then create a string representation of the resultant AST, it should be the same_as the original expression.__@param expression the expression to parse *and* the expected value of the string form of the resultant AST;public void parseCheck(String expression) {_		parseCheck(expression, expression)__	};parse,the,supplied,expression,and,then,create,a,string,representation,of,the,resultant,ast,it,should,be,the,same,as,the,original,expression,param,expression,the,expression,to,parse,and,the,expected,value,of,the,string,form,of,the,resultant,ast;public,void,parse,check,string,expression,parse,check,expression,expression
ParsingTests -> public void parseCheck(String expression);1413848647;Parse the supplied expression and then create a string representation of the resultant AST, it should be the same_as the original expression.__@param expression the expression to parse *and* the expected value of the string form of the resultant AST;public void parseCheck(String expression) {_		parseCheck(expression, expression)__	};parse,the,supplied,expression,and,then,create,a,string,representation,of,the,resultant,ast,it,should,be,the,same,as,the,original,expression,param,expression,the,expression,to,parse,and,the,expected,value,of,the,string,form,of,the,resultant,ast;public,void,parse,check,string,expression,parse,check,expression,expression
ParsingTests -> public void parseCheck(String expression);1458843770;Parse the supplied expression and then create a string representation of the resultant AST, it should be the same_as the original expression.__@param expression the expression to parse *and* the expected value of the string form of the resultant AST;public void parseCheck(String expression) {_		parseCheck(expression, expression)__	};parse,the,supplied,expression,and,then,create,a,string,representation,of,the,resultant,ast,it,should,be,the,same,as,the,original,expression,param,expression,the,expression,to,parse,and,the,expected,value,of,the,string,form,of,the,resultant,ast;public,void,parse,check,string,expression,parse,check,expression,expression
ParsingTests -> public void parseCheck(String expression, String expectedStringFormOfAST);1328020251;Parse the supplied expression and then create a string representation of the resultant AST, it should be the_expected value.__@param expression the expression to parse_@param expectedStringFormOfAST the expected string form of the AST;public void parseCheck(String expression, String expectedStringFormOfAST) {_		try {_			SpelExpression e = (SpelExpression) parser.parseRaw(expression)__			if (e != null && !e.toStringAST().equals(expectedStringFormOfAST)) {_				SpelUtilities.printAbstractSyntaxTree(System.err, e)__			}_			if (e == null) {_				Assert.fail("Parsed exception was null")__			}_			Assert.assertEquals("String form of AST does not match expected output", expectedStringFormOfAST, e.toStringAST())__		} catch (ParseException ee) {_			ee.printStackTrace()__			Assert.fail("Unexpected Exception: " + ee.getMessage())__		}_	};parse,the,supplied,expression,and,then,create,a,string,representation,of,the,resultant,ast,it,should,be,the,expected,value,param,expression,the,expression,to,parse,param,expected,string,form,of,ast,the,expected,string,form,of,the,ast;public,void,parse,check,string,expression,string,expected,string,form,of,ast,try,spel,expression,e,spel,expression,parser,parse,raw,expression,if,e,null,e,to,string,ast,equals,expected,string,form,of,ast,spel,utilities,print,abstract,syntax,tree,system,err,e,if,e,null,assert,fail,parsed,exception,was,null,assert,assert,equals,string,form,of,ast,does,not,match,expected,output,expected,string,form,of,ast,e,to,string,ast,catch,parse,exception,ee,ee,print,stack,trace,assert,fail,unexpected,exception,ee,get,message
ParsingTests -> public void parseCheck(String expression, String expectedStringFormOfAST);1356735495;Parse the supplied expression and then create a string representation of the resultant AST, it should be the_expected value.__@param expression the expression to parse_@param expectedStringFormOfAST the expected string form of the AST;public void parseCheck(String expression, String expectedStringFormOfAST) {_		try {_			SpelExpression e = parser.parseRaw(expression)__			if (e != null && !e.toStringAST().equals(expectedStringFormOfAST)) {_				SpelUtilities.printAbstractSyntaxTree(System.err, e)__			}_			if (e == null) {_				Assert.fail("Parsed exception was null")__			}_			Assert.assertEquals("String form of AST does not match expected output", expectedStringFormOfAST, e.toStringAST())__		} catch (ParseException ee) {_			ee.printStackTrace()__			Assert.fail("Unexpected Exception: " + ee.getMessage())__		}_	};parse,the,supplied,expression,and,then,create,a,string,representation,of,the,resultant,ast,it,should,be,the,expected,value,param,expression,the,expression,to,parse,param,expected,string,form,of,ast,the,expected,string,form,of,the,ast;public,void,parse,check,string,expression,string,expected,string,form,of,ast,try,spel,expression,e,parser,parse,raw,expression,if,e,null,e,to,string,ast,equals,expected,string,form,of,ast,spel,utilities,print,abstract,syntax,tree,system,err,e,if,e,null,assert,fail,parsed,exception,was,null,assert,assert,equals,string,form,of,ast,does,not,match,expected,output,expected,string,form,of,ast,e,to,string,ast,catch,parse,exception,ee,ee,print,stack,trace,assert,fail,unexpected,exception,ee,get,message
ParsingTests -> public void parseCheck(String expression, String expectedStringFormOfAST);1357119417;Parse the supplied expression and then create a string representation of the resultant AST, it should be the_expected value.__@param expression the expression to parse_@param expectedStringFormOfAST the expected string form of the AST;public void parseCheck(String expression, String expectedStringFormOfAST) {_		try {_			SpelExpression e = parser.parseRaw(expression)__			if (e != null && !e.toStringAST().equals(expectedStringFormOfAST)) {_				SpelUtilities.printAbstractSyntaxTree(System.err, e)__			}_			if (e == null) {_				fail("Parsed exception was null")__			}_			assertEquals("String form of AST does not match expected output", expectedStringFormOfAST, e.toStringAST())__		} catch (ParseException ee) {_			ee.printStackTrace()__			fail("Unexpected Exception: " + ee.getMessage())__		}_	};parse,the,supplied,expression,and,then,create,a,string,representation,of,the,resultant,ast,it,should,be,the,expected,value,param,expression,the,expression,to,parse,param,expected,string,form,of,ast,the,expected,string,form,of,the,ast;public,void,parse,check,string,expression,string,expected,string,form,of,ast,try,spel,expression,e,parser,parse,raw,expression,if,e,null,e,to,string,ast,equals,expected,string,form,of,ast,spel,utilities,print,abstract,syntax,tree,system,err,e,if,e,null,fail,parsed,exception,was,null,assert,equals,string,form,of,ast,does,not,match,expected,output,expected,string,form,of,ast,e,to,string,ast,catch,parse,exception,ee,ee,print,stack,trace,fail,unexpected,exception,ee,get,message
ParsingTests -> public void parseCheck(String expression, String expectedStringFormOfAST);1407348911;Parse the supplied expression and then create a string representation of the resultant AST, it should be the_expected value.__@param expression the expression to parse_@param expectedStringFormOfAST the expected string form of the AST;public void parseCheck(String expression, String expectedStringFormOfAST) {_		try {_			SpelExpression e = parser.parseRaw(expression)__			if (e != null && !e.toStringAST().equals(expectedStringFormOfAST)) {_				SpelUtilities.printAbstractSyntaxTree(System.err, e)__			}_			if (e == null) {_				fail("Parsed exception was null")__			}_			assertEquals("String form of AST does not match expected output", expectedStringFormOfAST, e.toStringAST())__		} catch (ParseException ee) {_			ee.printStackTrace()__			fail("Unexpected Exception: " + ee.getMessage())__		}_	};parse,the,supplied,expression,and,then,create,a,string,representation,of,the,resultant,ast,it,should,be,the,expected,value,param,expression,the,expression,to,parse,param,expected,string,form,of,ast,the,expected,string,form,of,the,ast;public,void,parse,check,string,expression,string,expected,string,form,of,ast,try,spel,expression,e,parser,parse,raw,expression,if,e,null,e,to,string,ast,equals,expected,string,form,of,ast,spel,utilities,print,abstract,syntax,tree,system,err,e,if,e,null,fail,parsed,exception,was,null,assert,equals,string,form,of,ast,does,not,match,expected,output,expected,string,form,of,ast,e,to,string,ast,catch,parse,exception,ee,ee,print,stack,trace,fail,unexpected,exception,ee,get,message
ParsingTests -> public void parseCheck(String expression, String expectedStringFormOfAST);1413848647;Parse the supplied expression and then create a string representation of the resultant AST, it should be the_expected value.__@param expression the expression to parse_@param expectedStringFormOfAST the expected string form of the AST;public void parseCheck(String expression, String expectedStringFormOfAST) {_		try {_			SpelExpression e = parser.parseRaw(expression)__			if (e != null && !e.toStringAST().equals(expectedStringFormOfAST)) {_				SpelUtilities.printAbstractSyntaxTree(System.err, e)__			}_			if (e == null) {_				fail("Parsed exception was null")__			}_			assertEquals("String form of AST does not match expected output", expectedStringFormOfAST, e.toStringAST())__		} catch (ParseException ee) {_			ee.printStackTrace()__			fail("Unexpected Exception: " + ee.getMessage())__		}_	};parse,the,supplied,expression,and,then,create,a,string,representation,of,the,resultant,ast,it,should,be,the,expected,value,param,expression,the,expression,to,parse,param,expected,string,form,of,ast,the,expected,string,form,of,the,ast;public,void,parse,check,string,expression,string,expected,string,form,of,ast,try,spel,expression,e,parser,parse,raw,expression,if,e,null,e,to,string,ast,equals,expected,string,form,of,ast,spel,utilities,print,abstract,syntax,tree,system,err,e,if,e,null,fail,parsed,exception,was,null,assert,equals,string,form,of,ast,does,not,match,expected,output,expected,string,form,of,ast,e,to,string,ast,catch,parse,exception,ee,ee,print,stack,trace,fail,unexpected,exception,ee,get,message
ParsingTests -> public void parseCheck(String expression, String expectedStringFormOfAST);1458843770;Parse the supplied expression and then create a string representation of the resultant AST, it should be the_expected value.__@param expression the expression to parse_@param expectedStringFormOfAST the expected string form of the AST;public void parseCheck(String expression, String expectedStringFormOfAST) {_		try {_			SpelExpression e = parser.parseRaw(expression)__			if (e != null && !e.toStringAST().equals(expectedStringFormOfAST)) {_				SpelUtilities.printAbstractSyntaxTree(System.err, e)__			}_			if (e == null) {_				fail("Parsed exception was null")__			}_			assertEquals("String form of AST does not match expected output", expectedStringFormOfAST, e.toStringAST())__		}_		catch (ParseException ee) {_			ee.printStackTrace()__			fail("Unexpected Exception: " + ee.getMessage())__		}_	};parse,the,supplied,expression,and,then,create,a,string,representation,of,the,resultant,ast,it,should,be,the,expected,value,param,expression,the,expression,to,parse,param,expected,string,form,of,ast,the,expected,string,form,of,the,ast;public,void,parse,check,string,expression,string,expected,string,form,of,ast,try,spel,expression,e,parser,parse,raw,expression,if,e,null,e,to,string,ast,equals,expected,string,form,of,ast,spel,utilities,print,abstract,syntax,tree,system,err,e,if,e,null,fail,parsed,exception,was,null,assert,equals,string,form,of,ast,does,not,match,expected,output,expected,string,form,of,ast,e,to,string,ast,catch,parse,exception,ee,ee,print,stack,trace,fail,unexpected,exception,ee,get,message
