# id;timestamp;commentText;codeText;commentWords;codeWords
PropertyAccessTests -> @Test 	public void testAccessingOnNullObject();1521630400;The standard reflection resolver cannot find properties on null objects but some_supplied resolver might be able to - so null shouldn't crash the reflection resolver.;@Test_	public void testAccessingOnNullObject() {_		SpelExpression expr = (SpelExpression)parser.parseExpression("madeup")__		EvaluationContext context = new StandardEvaluationContext(null)__		try {_			expr.getValue(context)__			fail("Should have failed - default property resolver cannot resolve on null")__		}_		catch (Exception ex) {_			checkException(ex, SpelMessage.PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL)__		}_		assertFalse(expr.isWritable(context))__		try {_			expr.setValue(context,"abc")__			fail("Should have failed - default property resolver cannot resolve on null")__		}_		catch (Exception ex) {_			checkException(ex, SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL)__		}_	};the,standard,reflection,resolver,cannot,find,properties,on,null,objects,but,some,supplied,resolver,might,be,able,to,so,null,shouldn,t,crash,the,reflection,resolver;test,public,void,test,accessing,on,null,object,spel,expression,expr,spel,expression,parser,parse,expression,madeup,evaluation,context,context,new,standard,evaluation,context,null,try,expr,get,value,context,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,ex,check,exception,ex,spel,message,assert,false,expr,is,writable,context,try,expr,set,value,context,abc,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,ex,check,exception,ex,spel,message
PropertyAccessTests -> @Test 	public void testAccessingOnNullObject();1521673386;The standard reflection resolver cannot find properties on null objects but some_supplied resolver might be able to - so null shouldn't crash the reflection resolver.;@Test_	public void testAccessingOnNullObject() {_		SpelExpression expr = (SpelExpression)parser.parseExpression("madeup")__		EvaluationContext context = new StandardEvaluationContext(null)__		try {_			expr.getValue(context)__			fail("Should have failed - default property resolver cannot resolve on null")__		}_		catch (Exception ex) {_			checkException(ex, SpelMessage.PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL)__		}_		assertFalse(expr.isWritable(context))__		try {_			expr.setValue(context,"abc")__			fail("Should have failed - default property resolver cannot resolve on null")__		}_		catch (Exception ex) {_			checkException(ex, SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL)__		}_	};the,standard,reflection,resolver,cannot,find,properties,on,null,objects,but,some,supplied,resolver,might,be,able,to,so,null,shouldn,t,crash,the,reflection,resolver;test,public,void,test,accessing,on,null,object,spel,expression,expr,spel,expression,parser,parse,expression,madeup,evaluation,context,context,new,standard,evaluation,context,null,try,expr,get,value,context,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,ex,check,exception,ex,spel,message,assert,false,expr,is,writable,context,try,expr,set,value,context,abc,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,ex,check,exception,ex,spel,message
PropertyAccessTests -> @Test 	public void testAccessingOnNullObject();1521738567;The standard reflection resolver cannot find properties on null objects but some_supplied resolver might be able to - so null shouldn't crash the reflection resolver.;@Test_	public void testAccessingOnNullObject() {_		SpelExpression expr = (SpelExpression)parser.parseExpression("madeup")__		EvaluationContext context = new StandardEvaluationContext(null)__		try {_			expr.getValue(context)__			fail("Should have failed - default property resolver cannot resolve on null")__		}_		catch (Exception ex) {_			checkException(ex, SpelMessage.PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL)__		}_		assertFalse(expr.isWritable(context))__		try {_			expr.setValue(context, "abc")__			fail("Should have failed - default property resolver cannot resolve on null")__		}_		catch (Exception ex) {_			checkException(ex, SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL)__		}_	};the,standard,reflection,resolver,cannot,find,properties,on,null,objects,but,some,supplied,resolver,might,be,able,to,so,null,shouldn,t,crash,the,reflection,resolver;test,public,void,test,accessing,on,null,object,spel,expression,expr,spel,expression,parser,parse,expression,madeup,evaluation,context,context,new,standard,evaluation,context,null,try,expr,get,value,context,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,ex,check,exception,ex,spel,message,assert,false,expr,is,writable,context,try,expr,set,value,context,abc,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,ex,check,exception,ex,spel,message
PropertyAccessTests -> @Test 	public void testAccessingOnNullObject();1521905437;The standard reflection resolver cannot find properties on null objects but some_supplied resolver might be able to - so null shouldn't crash the reflection resolver.;@Test_	public void testAccessingOnNullObject() {_		SpelExpression expr = (SpelExpression)parser.parseExpression("madeup")__		EvaluationContext context = new StandardEvaluationContext(null)__		try {_			expr.getValue(context)__			fail("Should have failed - default property resolver cannot resolve on null")__		}_		catch (Exception ex) {_			checkException(ex, SpelMessage.PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL)__		}_		assertFalse(expr.isWritable(context))__		try {_			expr.setValue(context, "abc")__			fail("Should have failed - default property resolver cannot resolve on null")__		}_		catch (Exception ex) {_			checkException(ex, SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL)__		}_	};the,standard,reflection,resolver,cannot,find,properties,on,null,objects,but,some,supplied,resolver,might,be,able,to,so,null,shouldn,t,crash,the,reflection,resolver;test,public,void,test,accessing,on,null,object,spel,expression,expr,spel,expression,parser,parse,expression,madeup,evaluation,context,context,new,standard,evaluation,context,null,try,expr,get,value,context,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,ex,check,exception,ex,spel,message,assert,false,expr,is,writable,context,try,expr,set,value,context,abc,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,ex,check,exception,ex,spel,message
PropertyAccessTests -> @Test 	public void testAccessingOnNullObject();1522102974;The standard reflection resolver cannot find properties on null objects but some_supplied resolver might be able to - so null shouldn't crash the reflection resolver.;@Test_	public void testAccessingOnNullObject() {_		SpelExpression expr = (SpelExpression)parser.parseExpression("madeup")__		EvaluationContext context = new StandardEvaluationContext(null)__		try {_			expr.getValue(context)__			fail("Should have failed - default property resolver cannot resolve on null")__		}_		catch (Exception ex) {_			checkException(ex, SpelMessage.PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL)__		}_		assertFalse(expr.isWritable(context))__		try {_			expr.setValue(context, "abc")__			fail("Should have failed - default property resolver cannot resolve on null")__		}_		catch (Exception ex) {_			checkException(ex, SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL)__		}_	};the,standard,reflection,resolver,cannot,find,properties,on,null,objects,but,some,supplied,resolver,might,be,able,to,so,null,shouldn,t,crash,the,reflection,resolver;test,public,void,test,accessing,on,null,object,spel,expression,expr,spel,expression,parser,parse,expression,madeup,evaluation,context,context,new,standard,evaluation,context,null,try,expr,get,value,context,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,ex,check,exception,ex,spel,message,assert,false,expr,is,writable,context,try,expr,set,value,context,abc,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,ex,check,exception,ex,spel,message
PropertyAccessTests -> @Test 	public void testAccessingOnNullObject() throws Exception;1328020251;The standard reflection resolver cannot find properties on null objects but some_supplied resolver might be able to - so null shouldn't crash the reflection resolver.;@Test_	public void testAccessingOnNullObject() throws Exception {_		SpelExpression expr = (SpelExpression)parser.parseExpression("madeup")__		EvaluationContext context = new StandardEvaluationContext(null)__		try {_			expr.getValue(context)__			Assert.fail("Should have failed - default property resolver cannot resolve on null")__		} catch (Exception e) {_			checkException(e,SpelMessage.PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL)__		}_		Assert.assertFalse(expr.isWritable(context))__		try {_			expr.setValue(context,"abc")__			Assert.fail("Should have failed - default property resolver cannot resolve on null")__		} catch (Exception e) {_			checkException(e,SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL)__		}_	};the,standard,reflection,resolver,cannot,find,properties,on,null,objects,but,some,supplied,resolver,might,be,able,to,so,null,shouldn,t,crash,the,reflection,resolver;test,public,void,test,accessing,on,null,object,throws,exception,spel,expression,expr,spel,expression,parser,parse,expression,madeup,evaluation,context,context,new,standard,evaluation,context,null,try,expr,get,value,context,assert,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,e,check,exception,e,spel,message,assert,assert,false,expr,is,writable,context,try,expr,set,value,context,abc,assert,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,e,check,exception,e,spel,message
PropertyAccessTests -> @Test 	public void testAccessingOnNullObject() throws Exception;1350072056;The standard reflection resolver cannot find properties on null objects but some_supplied resolver might be able to - so null shouldn't crash the reflection resolver.;@Test_	public void testAccessingOnNullObject() throws Exception {_		SpelExpression expr = (SpelExpression)parser.parseExpression("madeup")__		EvaluationContext context = new StandardEvaluationContext(null)__		try {_			expr.getValue(context)__			Assert.fail("Should have failed - default property resolver cannot resolve on null")__		} catch (Exception e) {_			checkException(e,SpelMessage.PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL)__		}_		Assert.assertFalse(expr.isWritable(context))__		try {_			expr.setValue(context,"abc")__			Assert.fail("Should have failed - default property resolver cannot resolve on null")__		} catch (Exception e) {_			checkException(e,SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL)__		}_	};the,standard,reflection,resolver,cannot,find,properties,on,null,objects,but,some,supplied,resolver,might,be,able,to,so,null,shouldn,t,crash,the,reflection,resolver;test,public,void,test,accessing,on,null,object,throws,exception,spel,expression,expr,spel,expression,parser,parse,expression,madeup,evaluation,context,context,new,standard,evaluation,context,null,try,expr,get,value,context,assert,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,e,check,exception,e,spel,message,assert,assert,false,expr,is,writable,context,try,expr,set,value,context,abc,assert,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,e,check,exception,e,spel,message
PropertyAccessTests -> @Test 	public void testAccessingOnNullObject() throws Exception;1356735495;The standard reflection resolver cannot find properties on null objects but some_supplied resolver might be able to - so null shouldn't crash the reflection resolver.;@Test_	public void testAccessingOnNullObject() throws Exception {_		SpelExpression expr = (SpelExpression)parser.parseExpression("madeup")__		EvaluationContext context = new StandardEvaluationContext(null)__		try {_			expr.getValue(context)__			Assert.fail("Should have failed - default property resolver cannot resolve on null")__		} catch (Exception e) {_			checkException(e,SpelMessage.PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL)__		}_		Assert.assertFalse(expr.isWritable(context))__		try {_			expr.setValue(context,"abc")__			Assert.fail("Should have failed - default property resolver cannot resolve on null")__		} catch (Exception e) {_			checkException(e,SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL)__		}_	};the,standard,reflection,resolver,cannot,find,properties,on,null,objects,but,some,supplied,resolver,might,be,able,to,so,null,shouldn,t,crash,the,reflection,resolver;test,public,void,test,accessing,on,null,object,throws,exception,spel,expression,expr,spel,expression,parser,parse,expression,madeup,evaluation,context,context,new,standard,evaluation,context,null,try,expr,get,value,context,assert,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,e,check,exception,e,spel,message,assert,assert,false,expr,is,writable,context,try,expr,set,value,context,abc,assert,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,e,check,exception,e,spel,message
PropertyAccessTests -> @Test 	public void testAccessingOnNullObject() throws Exception;1357119417;The standard reflection resolver cannot find properties on null objects but some_supplied resolver might be able to - so null shouldn't crash the reflection resolver.;@Test_	public void testAccessingOnNullObject() throws Exception {_		SpelExpression expr = (SpelExpression)parser.parseExpression("madeup")__		EvaluationContext context = new StandardEvaluationContext(null)__		try {_			expr.getValue(context)__			fail("Should have failed - default property resolver cannot resolve on null")__		} catch (Exception e) {_			checkException(e,SpelMessage.PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL)__		}_		assertFalse(expr.isWritable(context))__		try {_			expr.setValue(context,"abc")__			fail("Should have failed - default property resolver cannot resolve on null")__		} catch (Exception e) {_			checkException(e,SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL)__		}_	};the,standard,reflection,resolver,cannot,find,properties,on,null,objects,but,some,supplied,resolver,might,be,able,to,so,null,shouldn,t,crash,the,reflection,resolver;test,public,void,test,accessing,on,null,object,throws,exception,spel,expression,expr,spel,expression,parser,parse,expression,madeup,evaluation,context,context,new,standard,evaluation,context,null,try,expr,get,value,context,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,e,check,exception,e,spel,message,assert,false,expr,is,writable,context,try,expr,set,value,context,abc,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,e,check,exception,e,spel,message
PropertyAccessTests -> @Test 	public void testAccessingOnNullObject() throws Exception;1391876651;The standard reflection resolver cannot find properties on null objects but some_supplied resolver might be able to - so null shouldn't crash the reflection resolver.;@Test_	public void testAccessingOnNullObject() throws Exception {_		SpelExpression expr = (SpelExpression)parser.parseExpression("madeup")__		EvaluationContext context = new StandardEvaluationContext(null)__		try {_			expr.getValue(context)__			fail("Should have failed - default property resolver cannot resolve on null")__		} catch (Exception e) {_			checkException(e,SpelMessage.PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL)__		}_		assertFalse(expr.isWritable(context))__		try {_			expr.setValue(context,"abc")__			fail("Should have failed - default property resolver cannot resolve on null")__		} catch (Exception e) {_			checkException(e,SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL)__		}_	};the,standard,reflection,resolver,cannot,find,properties,on,null,objects,but,some,supplied,resolver,might,be,able,to,so,null,shouldn,t,crash,the,reflection,resolver;test,public,void,test,accessing,on,null,object,throws,exception,spel,expression,expr,spel,expression,parser,parse,expression,madeup,evaluation,context,context,new,standard,evaluation,context,null,try,expr,get,value,context,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,e,check,exception,e,spel,message,assert,false,expr,is,writable,context,try,expr,set,value,context,abc,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,e,check,exception,e,spel,message
PropertyAccessTests -> @Test 	public void testAccessingOnNullObject() throws Exception;1413848647;The standard reflection resolver cannot find properties on null objects but some_supplied resolver might be able to - so null shouldn't crash the reflection resolver.;@Test_	public void testAccessingOnNullObject() throws Exception {_		SpelExpression expr = (SpelExpression)parser.parseExpression("madeup")__		EvaluationContext context = new StandardEvaluationContext(null)__		try {_			expr.getValue(context)__			fail("Should have failed - default property resolver cannot resolve on null")__		} catch (Exception e) {_			checkException(e,SpelMessage.PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL)__		}_		assertFalse(expr.isWritable(context))__		try {_			expr.setValue(context,"abc")__			fail("Should have failed - default property resolver cannot resolve on null")__		} catch (Exception e) {_			checkException(e,SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL)__		}_	};the,standard,reflection,resolver,cannot,find,properties,on,null,objects,but,some,supplied,resolver,might,be,able,to,so,null,shouldn,t,crash,the,reflection,resolver;test,public,void,test,accessing,on,null,object,throws,exception,spel,expression,expr,spel,expression,parser,parse,expression,madeup,evaluation,context,context,new,standard,evaluation,context,null,try,expr,get,value,context,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,e,check,exception,e,spel,message,assert,false,expr,is,writable,context,try,expr,set,value,context,abc,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,e,check,exception,e,spel,message
PropertyAccessTests -> @Test 	public void testAccessingOnNullObject() throws Exception;1458843770;The standard reflection resolver cannot find properties on null objects but some_supplied resolver might be able to - so null shouldn't crash the reflection resolver.;@Test_	public void testAccessingOnNullObject() throws Exception {_		SpelExpression expr = (SpelExpression)parser.parseExpression("madeup")__		EvaluationContext context = new StandardEvaluationContext(null)__		try {_			expr.getValue(context)__			fail("Should have failed - default property resolver cannot resolve on null")__		}_		catch (Exception ex) {_			checkException(ex, SpelMessage.PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL)__		}_		assertFalse(expr.isWritable(context))__		try {_			expr.setValue(context,"abc")__			fail("Should have failed - default property resolver cannot resolve on null")__		}_		catch (Exception ex) {_			checkException(ex, SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL)__		}_	};the,standard,reflection,resolver,cannot,find,properties,on,null,objects,but,some,supplied,resolver,might,be,able,to,so,null,shouldn,t,crash,the,reflection,resolver;test,public,void,test,accessing,on,null,object,throws,exception,spel,expression,expr,spel,expression,parser,parse,expression,madeup,evaluation,context,context,new,standard,evaluation,context,null,try,expr,get,value,context,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,ex,check,exception,ex,spel,message,assert,false,expr,is,writable,context,try,expr,set,value,context,abc,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,ex,check,exception,ex,spel,message
PropertyAccessTests -> @Test 	public void testAccessingOnNullObject() throws Exception;1467730834;The standard reflection resolver cannot find properties on null objects but some_supplied resolver might be able to - so null shouldn't crash the reflection resolver.;@Test_	public void testAccessingOnNullObject() throws Exception {_		SpelExpression expr = (SpelExpression)parser.parseExpression("madeup")__		EvaluationContext context = new StandardEvaluationContext(null)__		try {_			expr.getValue(context)__			fail("Should have failed - default property resolver cannot resolve on null")__		}_		catch (Exception ex) {_			checkException(ex, SpelMessage.PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL)__		}_		assertFalse(expr.isWritable(context))__		try {_			expr.setValue(context,"abc")__			fail("Should have failed - default property resolver cannot resolve on null")__		}_		catch (Exception ex) {_			checkException(ex, SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL)__		}_	};the,standard,reflection,resolver,cannot,find,properties,on,null,objects,but,some,supplied,resolver,might,be,able,to,so,null,shouldn,t,crash,the,reflection,resolver;test,public,void,test,accessing,on,null,object,throws,exception,spel,expression,expr,spel,expression,parser,parse,expression,madeup,evaluation,context,context,new,standard,evaluation,context,null,try,expr,get,value,context,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,ex,check,exception,ex,spel,message,assert,false,expr,is,writable,context,try,expr,set,value,context,abc,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,ex,check,exception,ex,spel,message
PropertyAccessTests -> @Test 	public void testAccessingOnNullObject() throws Exception;1500038285;The standard reflection resolver cannot find properties on null objects but some_supplied resolver might be able to - so null shouldn't crash the reflection resolver.;@Test_	public void testAccessingOnNullObject() throws Exception {_		SpelExpression expr = (SpelExpression)parser.parseExpression("madeup")__		EvaluationContext context = new StandardEvaluationContext(null)__		try {_			expr.getValue(context)__			fail("Should have failed - default property resolver cannot resolve on null")__		}_		catch (Exception ex) {_			checkException(ex, SpelMessage.PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL)__		}_		assertFalse(expr.isWritable(context))__		try {_			expr.setValue(context,"abc")__			fail("Should have failed - default property resolver cannot resolve on null")__		}_		catch (Exception ex) {_			checkException(ex, SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL)__		}_	};the,standard,reflection,resolver,cannot,find,properties,on,null,objects,but,some,supplied,resolver,might,be,able,to,so,null,shouldn,t,crash,the,reflection,resolver;test,public,void,test,accessing,on,null,object,throws,exception,spel,expression,expr,spel,expression,parser,parse,expression,madeup,evaluation,context,context,new,standard,evaluation,context,null,try,expr,get,value,context,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,ex,check,exception,ex,spel,message,assert,false,expr,is,writable,context,try,expr,set,value,context,abc,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,ex,check,exception,ex,spel,message
PropertyAccessTests -> @Test 	public void testAccessingOnNullObject() throws Exception;1518279448;The standard reflection resolver cannot find properties on null objects but some_supplied resolver might be able to - so null shouldn't crash the reflection resolver.;@Test_	public void testAccessingOnNullObject() throws Exception {_		SpelExpression expr = (SpelExpression)parser.parseExpression("madeup")__		EvaluationContext context = new StandardEvaluationContext(null)__		try {_			expr.getValue(context)__			fail("Should have failed - default property resolver cannot resolve on null")__		}_		catch (Exception ex) {_			checkException(ex, SpelMessage.PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL)__		}_		assertFalse(expr.isWritable(context))__		try {_			expr.setValue(context,"abc")__			fail("Should have failed - default property resolver cannot resolve on null")__		}_		catch (Exception ex) {_			checkException(ex, SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL)__		}_	};the,standard,reflection,resolver,cannot,find,properties,on,null,objects,but,some,supplied,resolver,might,be,able,to,so,null,shouldn,t,crash,the,reflection,resolver;test,public,void,test,accessing,on,null,object,throws,exception,spel,expression,expr,spel,expression,parser,parse,expression,madeup,evaluation,context,context,new,standard,evaluation,context,null,try,expr,get,value,context,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,ex,check,exception,ex,spel,message,assert,false,expr,is,writable,context,try,expr,set,value,context,abc,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,ex,check,exception,ex,spel,message
PropertyAccessTests -> @Test 	public void testAccessingOnNullObject() throws Exception;1518615840;The standard reflection resolver cannot find properties on null objects but some_supplied resolver might be able to - so null shouldn't crash the reflection resolver.;@Test_	public void testAccessingOnNullObject() throws Exception {_		SpelExpression expr = (SpelExpression)parser.parseExpression("madeup")__		EvaluationContext context = new StandardEvaluationContext(null)__		try {_			expr.getValue(context)__			fail("Should have failed - default property resolver cannot resolve on null")__		}_		catch (Exception ex) {_			checkException(ex, SpelMessage.PROPERTY_OR_FIELD_NOT_READABLE_ON_NULL)__		}_		assertFalse(expr.isWritable(context))__		try {_			expr.setValue(context,"abc")__			fail("Should have failed - default property resolver cannot resolve on null")__		}_		catch (Exception ex) {_			checkException(ex, SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL)__		}_	};the,standard,reflection,resolver,cannot,find,properties,on,null,objects,but,some,supplied,resolver,might,be,able,to,so,null,shouldn,t,crash,the,reflection,resolver;test,public,void,test,accessing,on,null,object,throws,exception,spel,expression,expr,spel,expression,parser,parse,expression,madeup,evaluation,context,context,new,standard,evaluation,context,null,try,expr,get,value,context,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,ex,check,exception,ex,spel,message,assert,false,expr,is,writable,context,try,expr,set,value,context,abc,fail,should,have,failed,default,property,resolver,cannot,resolve,on,null,catch,exception,ex,check,exception,ex,spel,message
