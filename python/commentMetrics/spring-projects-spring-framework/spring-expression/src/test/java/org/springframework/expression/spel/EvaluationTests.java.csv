# id;timestamp;commentText;codeText;commentWords;codeWords
EvaluationTests -> @Test 	public void customMethodFilter() throws Exception;1344546350;Verifies behavior requested in SPR-9621.;@Test_	public void customMethodFilter() throws Exception {_		StandardEvaluationContext context = new StandardEvaluationContext()___		_		List<MethodResolver> customResolvers = new ArrayList<MethodResolver>()__		customResolvers.add(new CustomMethodResolver())__		context.setMethodResolvers(customResolvers)___		_		__		_		MethodFilter filter = new CustomMethodFilter()__		try {_			context.registerMethodFilter(String.class, filter)__			fail("should have failed")__		} catch (IllegalStateException ise) {_			assertEquals(_					"Method filter cannot be set as the reflective method resolver is not in use",_					ise.getMessage())__		}_	};verifies,behavior,requested,in,spr,9621;test,public,void,custom,method,filter,throws,exception,standard,evaluation,context,context,new,standard,evaluation,context,list,method,resolver,custom,resolvers,new,array,list,method,resolver,custom,resolvers,add,new,custom,method,resolver,context,set,method,resolvers,custom,resolvers,method,filter,filter,new,custom,method,filter,try,context,register,method,filter,string,class,filter,fail,should,have,failed,catch,illegal,state,exception,ise,assert,equals,method,filter,cannot,be,set,as,the,reflective,method,resolver,is,not,in,use,ise,get,message
EvaluationTests -> @Test 	public void customMethodFilter() throws Exception;1351041784;Verifies behavior requested in SPR-9621.;@Test_	public void customMethodFilter() throws Exception {_		StandardEvaluationContext context = new StandardEvaluationContext()___		_		List<MethodResolver> customResolvers = new ArrayList<MethodResolver>()__		customResolvers.add(new CustomMethodResolver())__		context.setMethodResolvers(customResolvers)___		_		__		_		MethodFilter filter = new CustomMethodFilter()__		try {_			context.registerMethodFilter(String.class, filter)__			fail("should have failed")__		} catch (IllegalStateException ise) {_			assertEquals(_					"Method filter cannot be set as the reflective method resolver is not in use",_					ise.getMessage())__		}_	};verifies,behavior,requested,in,spr,9621;test,public,void,custom,method,filter,throws,exception,standard,evaluation,context,context,new,standard,evaluation,context,list,method,resolver,custom,resolvers,new,array,list,method,resolver,custom,resolvers,add,new,custom,method,resolver,context,set,method,resolvers,custom,resolvers,method,filter,filter,new,custom,method,filter,try,context,register,method,filter,string,class,filter,fail,should,have,failed,catch,illegal,state,exception,ise,assert,equals,method,filter,cannot,be,set,as,the,reflective,method,resolver,is,not,in,use,ise,get,message
EvaluationTests -> @Test 	public void customMethodFilter() throws Exception;1356735495;Verifies behavior requested in SPR-9621.;@Test_	public void customMethodFilter() throws Exception {_		StandardEvaluationContext context = new StandardEvaluationContext()___		_		List<MethodResolver> customResolvers = new ArrayList<MethodResolver>()__		customResolvers.add(new CustomMethodResolver())__		context.setMethodResolvers(customResolvers)___		_		__		_		MethodFilter filter = new CustomMethodFilter()__		try {_			context.registerMethodFilter(String.class, filter)__			fail("should have failed")__		} catch (IllegalStateException ise) {_			assertEquals(_					"Method filter cannot be set as the reflective method resolver is not in use",_					ise.getMessage())__		}_	};verifies,behavior,requested,in,spr,9621;test,public,void,custom,method,filter,throws,exception,standard,evaluation,context,context,new,standard,evaluation,context,list,method,resolver,custom,resolvers,new,array,list,method,resolver,custom,resolvers,add,new,custom,method,resolver,context,set,method,resolvers,custom,resolvers,method,filter,filter,new,custom,method,filter,try,context,register,method,filter,string,class,filter,fail,should,have,failed,catch,illegal,state,exception,ise,assert,equals,method,filter,cannot,be,set,as,the,reflective,method,resolver,is,not,in,use,ise,get,message
EvaluationTests -> @Test 	public void customMethodFilter() throws Exception;1362408075;Verifies behavior requested in SPR-9621.;@Test_	public void customMethodFilter() throws Exception {_		StandardEvaluationContext context = new StandardEvaluationContext()___		_		List<MethodResolver> customResolvers = new ArrayList<MethodResolver>()__		customResolvers.add(new CustomMethodResolver())__		context.setMethodResolvers(customResolvers)___		_		__		_		MethodFilter filter = new CustomMethodFilter()__		try {_			context.registerMethodFilter(String.class, filter)__			fail("should have failed")__		} catch (IllegalStateException ise) {_			assertEquals(_					"Method filter cannot be set as the reflective method resolver is not in use",_					ise.getMessage())__		}_	};verifies,behavior,requested,in,spr,9621;test,public,void,custom,method,filter,throws,exception,standard,evaluation,context,context,new,standard,evaluation,context,list,method,resolver,custom,resolvers,new,array,list,method,resolver,custom,resolvers,add,new,custom,method,resolver,context,set,method,resolvers,custom,resolvers,method,filter,filter,new,custom,method,filter,try,context,register,method,filter,string,class,filter,fail,should,have,failed,catch,illegal,state,exception,ise,assert,equals,method,filter,cannot,be,set,as,the,reflective,method,resolver,is,not,in,use,ise,get,message
EvaluationTests -> @Test 	public void customMethodFilter() throws Exception;1385073193;Verifies behavior requested in SPR-9621.;@Test_	public void customMethodFilter() throws Exception {_		StandardEvaluationContext context = new StandardEvaluationContext()___		_		List<MethodResolver> customResolvers = new ArrayList<MethodResolver>()__		customResolvers.add(new CustomMethodResolver())__		context.setMethodResolvers(customResolvers)___		_		__		_		MethodFilter filter = new CustomMethodFilter()__		try {_			context.registerMethodFilter(String.class, filter)__			fail("should have failed")__		} catch (IllegalStateException ise) {_			assertEquals(_					"Method filter cannot be set as the reflective method resolver is not in use",_					ise.getMessage())__		}_	};verifies,behavior,requested,in,spr,9621;test,public,void,custom,method,filter,throws,exception,standard,evaluation,context,context,new,standard,evaluation,context,list,method,resolver,custom,resolvers,new,array,list,method,resolver,custom,resolvers,add,new,custom,method,resolver,context,set,method,resolvers,custom,resolvers,method,filter,filter,new,custom,method,filter,try,context,register,method,filter,string,class,filter,fail,should,have,failed,catch,illegal,state,exception,ise,assert,equals,method,filter,cannot,be,set,as,the,reflective,method,resolver,is,not,in,use,ise,get,message
EvaluationTests -> @Test 	public void customMethodFilter() throws Exception;1391876651;Verifies behavior requested in SPR-9621.;@Test_	public void customMethodFilter() throws Exception {_		StandardEvaluationContext context = new StandardEvaluationContext()___		_		List<MethodResolver> customResolvers = new ArrayList<MethodResolver>()__		customResolvers.add(new CustomMethodResolver())__		context.setMethodResolvers(customResolvers)___		_		__		_		MethodFilter filter = new CustomMethodFilter()__		try {_			context.registerMethodFilter(String.class, filter)__			fail("should have failed")__		} catch (IllegalStateException ise) {_			assertEquals(_					"Method filter cannot be set as the reflective method resolver is not in use",_					ise.getMessage())__		}_	};verifies,behavior,requested,in,spr,9621;test,public,void,custom,method,filter,throws,exception,standard,evaluation,context,context,new,standard,evaluation,context,list,method,resolver,custom,resolvers,new,array,list,method,resolver,custom,resolvers,add,new,custom,method,resolver,context,set,method,resolvers,custom,resolvers,method,filter,filter,new,custom,method,filter,try,context,register,method,filter,string,class,filter,fail,should,have,failed,catch,illegal,state,exception,ise,assert,equals,method,filter,cannot,be,set,as,the,reflective,method,resolver,is,not,in,use,ise,get,message
EvaluationTests -> @Test 	public void customMethodFilter() throws Exception;1407348911;Verifies behavior requested in SPR-9621.;@Test_	public void customMethodFilter() throws Exception {_		StandardEvaluationContext context = new StandardEvaluationContext()___		_		List<MethodResolver> customResolvers = new ArrayList<MethodResolver>()__		customResolvers.add(new CustomMethodResolver())__		context.setMethodResolvers(customResolvers)___		_		__		_		MethodFilter filter = new CustomMethodFilter()__		try {_			context.registerMethodFilter(String.class, filter)__			fail("should have failed")__		} catch (IllegalStateException ise) {_			assertEquals(_					"Method filter cannot be set as the reflective method resolver is not in use",_					ise.getMessage())__		}_	};verifies,behavior,requested,in,spr,9621;test,public,void,custom,method,filter,throws,exception,standard,evaluation,context,context,new,standard,evaluation,context,list,method,resolver,custom,resolvers,new,array,list,method,resolver,custom,resolvers,add,new,custom,method,resolver,context,set,method,resolvers,custom,resolvers,method,filter,filter,new,custom,method,filter,try,context,register,method,filter,string,class,filter,fail,should,have,failed,catch,illegal,state,exception,ise,assert,equals,method,filter,cannot,be,set,as,the,reflective,method,resolver,is,not,in,use,ise,get,message
EvaluationTests -> @Test 	public void customMethodFilter() throws Exception;1413848647;Verifies behavior requested in SPR-9621.;@Test_	public void customMethodFilter() throws Exception {_		StandardEvaluationContext context = new StandardEvaluationContext()___		_		List<MethodResolver> customResolvers = new ArrayList<MethodResolver>()__		customResolvers.add(new CustomMethodResolver())__		context.setMethodResolvers(customResolvers)___		_		__		_		MethodFilter filter = new CustomMethodFilter()__		try {_			context.registerMethodFilter(String.class, filter)__			fail("should have failed")__		} catch (IllegalStateException ise) {_			assertEquals(_					"Method filter cannot be set as the reflective method resolver is not in use",_					ise.getMessage())__		}_	};verifies,behavior,requested,in,spr,9621;test,public,void,custom,method,filter,throws,exception,standard,evaluation,context,context,new,standard,evaluation,context,list,method,resolver,custom,resolvers,new,array,list,method,resolver,custom,resolvers,add,new,custom,method,resolver,context,set,method,resolvers,custom,resolvers,method,filter,filter,new,custom,method,filter,try,context,register,method,filter,string,class,filter,fail,should,have,failed,catch,illegal,state,exception,ise,assert,equals,method,filter,cannot,be,set,as,the,reflective,method,resolver,is,not,in,use,ise,get,message
EvaluationTests -> @Test 	public void customMethodFilter() throws Exception;1413907042;Verifies behavior requested in SPR-9621.;@Test_	public void customMethodFilter() throws Exception {_		StandardEvaluationContext context = new StandardEvaluationContext()___		_		List<MethodResolver> customResolvers = new ArrayList<MethodResolver>()__		customResolvers.add(new CustomMethodResolver())__		context.setMethodResolvers(customResolvers)___		_		__		_		MethodFilter filter = new CustomMethodFilter()__		try {_			context.registerMethodFilter(String.class, filter)__			fail("should have failed")__		} catch (IllegalStateException ise) {_			assertEquals(_					"Method filter cannot be set as the reflective method resolver is not in use",_					ise.getMessage())__		}_	};verifies,behavior,requested,in,spr,9621;test,public,void,custom,method,filter,throws,exception,standard,evaluation,context,context,new,standard,evaluation,context,list,method,resolver,custom,resolvers,new,array,list,method,resolver,custom,resolvers,add,new,custom,method,resolver,context,set,method,resolvers,custom,resolvers,method,filter,filter,new,custom,method,filter,try,context,register,method,filter,string,class,filter,fail,should,have,failed,catch,illegal,state,exception,ise,assert,equals,method,filter,cannot,be,set,as,the,reflective,method,resolver,is,not,in,use,ise,get,message
EvaluationTests -> @Test 	public void customMethodFilter() throws Exception;1425759378;Verifies behavior requested in SPR-9621.;@Test_	public void customMethodFilter() throws Exception {_		StandardEvaluationContext context = new StandardEvaluationContext()___		_		List<MethodResolver> customResolvers = new ArrayList<MethodResolver>()__		customResolvers.add(new CustomMethodResolver())__		context.setMethodResolvers(customResolvers)___		_		__		_		MethodFilter filter = new CustomMethodFilter()__		try {_			context.registerMethodFilter(String.class, filter)__			fail("should have failed")__		} catch (IllegalStateException ise) {_			assertEquals(_					"Method filter cannot be set as the reflective method resolver is not in use",_					ise.getMessage())__		}_	};verifies,behavior,requested,in,spr,9621;test,public,void,custom,method,filter,throws,exception,standard,evaluation,context,context,new,standard,evaluation,context,list,method,resolver,custom,resolvers,new,array,list,method,resolver,custom,resolvers,add,new,custom,method,resolver,context,set,method,resolvers,custom,resolvers,method,filter,filter,new,custom,method,filter,try,context,register,method,filter,string,class,filter,fail,should,have,failed,catch,illegal,state,exception,ise,assert,equals,method,filter,cannot,be,set,as,the,reflective,method,resolver,is,not,in,use,ise,get,message
EvaluationTests -> @Test 	public void customMethodFilter() throws Exception;1458843770;Verifies behavior requested in SPR-9621.;@Test_	public void customMethodFilter() throws Exception {_		StandardEvaluationContext context = new StandardEvaluationContext()___		_		List<MethodResolver> customResolvers = new ArrayList<MethodResolver>()__		customResolvers.add(new CustomMethodResolver())__		context.setMethodResolvers(customResolvers)___		_		__		_		MethodFilter filter = new CustomMethodFilter()__		try {_			context.registerMethodFilter(String.class, filter)__			fail("should have failed")__		}_		catch (IllegalStateException ise) {_			assertEquals(_					"Method filter cannot be set as the reflective method resolver is not in use",_					ise.getMessage())__		}_	};verifies,behavior,requested,in,spr,9621;test,public,void,custom,method,filter,throws,exception,standard,evaluation,context,context,new,standard,evaluation,context,list,method,resolver,custom,resolvers,new,array,list,method,resolver,custom,resolvers,add,new,custom,method,resolver,context,set,method,resolvers,custom,resolvers,method,filter,filter,new,custom,method,filter,try,context,register,method,filter,string,class,filter,fail,should,have,failed,catch,illegal,state,exception,ise,assert,equals,method,filter,cannot,be,set,as,the,reflective,method,resolver,is,not,in,use,ise,get,message
EvaluationTests -> @Test 	public void customMethodFilter() throws Exception;1467730834;Verifies behavior requested in SPR-9621.;@Test_	public void customMethodFilter() throws Exception {_		StandardEvaluationContext context = new StandardEvaluationContext()___		_		List<MethodResolver> customResolvers = new ArrayList<>()__		customResolvers.add(new CustomMethodResolver())__		context.setMethodResolvers(customResolvers)___		_		__		_		MethodFilter filter = new CustomMethodFilter()__		try {_			context.registerMethodFilter(String.class, filter)__			fail("should have failed")__		}_		catch (IllegalStateException ise) {_			assertEquals(_					"Method filter cannot be set as the reflective method resolver is not in use",_					ise.getMessage())__		}_	};verifies,behavior,requested,in,spr,9621;test,public,void,custom,method,filter,throws,exception,standard,evaluation,context,context,new,standard,evaluation,context,list,method,resolver,custom,resolvers,new,array,list,custom,resolvers,add,new,custom,method,resolver,context,set,method,resolvers,custom,resolvers,method,filter,filter,new,custom,method,filter,try,context,register,method,filter,string,class,filter,fail,should,have,failed,catch,illegal,state,exception,ise,assert,equals,method,filter,cannot,be,set,as,the,reflective,method,resolver,is,not,in,use,ise,get,message
EvaluationTests -> @Test 	public void customMethodFilter() throws Exception;1496837955;Verifies behavior requested in SPR-9621.;@Test_	public void customMethodFilter() throws Exception {_		StandardEvaluationContext context = new StandardEvaluationContext()___		_		List<MethodResolver> customResolvers = new ArrayList<>()__		customResolvers.add(new CustomMethodResolver())__		context.setMethodResolvers(customResolvers)___		_		__		_		MethodFilter filter = new CustomMethodFilter()__		try {_			context.registerMethodFilter(String.class, filter)__			fail("should have failed")__		}_		catch (IllegalStateException ise) {_			assertEquals(_					"Method filter cannot be set as the reflective method resolver is not in use",_					ise.getMessage())__		}_	};verifies,behavior,requested,in,spr,9621;test,public,void,custom,method,filter,throws,exception,standard,evaluation,context,context,new,standard,evaluation,context,list,method,resolver,custom,resolvers,new,array,list,custom,resolvers,add,new,custom,method,resolver,context,set,method,resolvers,custom,resolvers,method,filter,filter,new,custom,method,filter,try,context,register,method,filter,string,class,filter,fail,should,have,failed,catch,illegal,state,exception,ise,assert,equals,method,filter,cannot,be,set,as,the,reflective,method,resolver,is,not,in,use,ise,get,message
EvaluationTests -> @Test 	public void customMethodFilter() throws Exception;1518279448;Verifies behavior requested in SPR-9621.;@Test_	public void customMethodFilter() throws Exception {_		StandardEvaluationContext context = new StandardEvaluationContext()___		_		List<MethodResolver> customResolvers = new ArrayList<>()__		customResolvers.add(new CustomMethodResolver())__		context.setMethodResolvers(customResolvers)___		_		__		_		MethodFilter filter = new CustomMethodFilter()__		try {_			context.registerMethodFilter(String.class, filter)__			fail("should have failed")__		}_		catch (IllegalStateException ise) {_			assertEquals(_					"Method filter cannot be set as the reflective method resolver is not in use",_					ise.getMessage())__		}_	};verifies,behavior,requested,in,spr,9621;test,public,void,custom,method,filter,throws,exception,standard,evaluation,context,context,new,standard,evaluation,context,list,method,resolver,custom,resolvers,new,array,list,custom,resolvers,add,new,custom,method,resolver,context,set,method,resolvers,custom,resolvers,method,filter,filter,new,custom,method,filter,try,context,register,method,filter,string,class,filter,fail,should,have,failed,catch,illegal,state,exception,ise,assert,equals,method,filter,cannot,be,set,as,the,reflective,method,resolver,is,not,in,use,ise,get,message
EvaluationTests -> @Test 	public void customMethodFilter() throws Exception;1518283060;Verifies behavior requested in SPR-9621.;@Test_	public void customMethodFilter() throws Exception {_		StandardEvaluationContext context = new StandardEvaluationContext()___		_		List<MethodResolver> customResolvers = new ArrayList<>()__		customResolvers.add(new CustomMethodResolver())__		context.setMethodResolvers(customResolvers)___		_		__		_		MethodFilter filter = new CustomMethodFilter()__		try {_			context.registerMethodFilter(String.class, filter)__			fail("should have failed")__		}_		catch (IllegalStateException ise) {_			assertEquals(_					"Method filter cannot be set as the reflective method resolver is not in use",_					ise.getMessage())__		}_	};verifies,behavior,requested,in,spr,9621;test,public,void,custom,method,filter,throws,exception,standard,evaluation,context,context,new,standard,evaluation,context,list,method,resolver,custom,resolvers,new,array,list,custom,resolvers,add,new,custom,method,resolver,context,set,method,resolvers,custom,resolvers,method,filter,filter,new,custom,method,filter,try,context,register,method,filter,string,class,filter,fail,should,have,failed,catch,illegal,state,exception,ise,assert,equals,method,filter,cannot,be,set,as,the,reflective,method,resolver,is,not,in,use,ise,get,message
EvaluationTests -> @Test 	public void customMethodFilter() throws Exception;1520090085;Verifies behavior requested in SPR-9621.;@Test_	public void customMethodFilter() throws Exception {_		StandardEvaluationContext context = new StandardEvaluationContext()___		_		List<MethodResolver> customResolvers = new ArrayList<>()__		customResolvers.add(new CustomMethodResolver())__		context.setMethodResolvers(customResolvers)___		_		__		_		MethodFilter filter = new CustomMethodFilter()__		try {_			context.registerMethodFilter(String.class, filter)__			fail("should have failed")__		}_		catch (IllegalStateException ise) {_			assertEquals(_					"Method filter cannot be set as the reflective method resolver is not in use",_					ise.getMessage())__		}_	};verifies,behavior,requested,in,spr,9621;test,public,void,custom,method,filter,throws,exception,standard,evaluation,context,context,new,standard,evaluation,context,list,method,resolver,custom,resolvers,new,array,list,custom,resolvers,add,new,custom,method,resolver,context,set,method,resolvers,custom,resolvers,method,filter,filter,new,custom,method,filter,try,context,register,method,filter,string,class,filter,fail,should,have,failed,catch,illegal,state,exception,ise,assert,equals,method,filter,cannot,be,set,as,the,reflective,method,resolver,is,not,in,use,ise,get,message
EvaluationTests -> @Test 	public void caseInsensitiveNullLiterals();1344037836;Verifies behavior requested in SPR-9613.;@Test_	public void caseInsensitiveNullLiterals() {_		ExpressionParser parser = new SpelExpressionParser()__		Expression exp___		exp = parser.parseExpression("null")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NULL")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NuLl")__		assertNull(exp.getValue())__	};verifies,behavior,requested,in,spr,9613;test,public,void,case,insensitive,null,literals,expression,parser,parser,new,spel,expression,parser,expression,exp,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,nu,ll,assert,null,exp,get,value
EvaluationTests -> @Test 	public void caseInsensitiveNullLiterals();1344546350;Verifies behavior requested in SPR-9613.;@Test_	public void caseInsensitiveNullLiterals() {_		ExpressionParser parser = new SpelExpressionParser()__		Expression exp___		exp = parser.parseExpression("null")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NULL")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NuLl")__		assertNull(exp.getValue())__	};verifies,behavior,requested,in,spr,9613;test,public,void,case,insensitive,null,literals,expression,parser,parser,new,spel,expression,parser,expression,exp,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,nu,ll,assert,null,exp,get,value
EvaluationTests -> @Test 	public void caseInsensitiveNullLiterals();1351041784;Verifies behavior requested in SPR-9613.;@Test_	public void caseInsensitiveNullLiterals() {_		ExpressionParser parser = new SpelExpressionParser()__		Expression exp___		exp = parser.parseExpression("null")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NULL")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NuLl")__		assertNull(exp.getValue())__	};verifies,behavior,requested,in,spr,9613;test,public,void,case,insensitive,null,literals,expression,parser,parser,new,spel,expression,parser,expression,exp,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,nu,ll,assert,null,exp,get,value
EvaluationTests -> @Test 	public void caseInsensitiveNullLiterals();1356735495;Verifies behavior requested in SPR-9613.;@Test_	public void caseInsensitiveNullLiterals() {_		ExpressionParser parser = new SpelExpressionParser()__		Expression exp___		exp = parser.parseExpression("null")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NULL")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NuLl")__		assertNull(exp.getValue())__	};verifies,behavior,requested,in,spr,9613;test,public,void,case,insensitive,null,literals,expression,parser,parser,new,spel,expression,parser,expression,exp,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,nu,ll,assert,null,exp,get,value
EvaluationTests -> @Test 	public void caseInsensitiveNullLiterals();1362408075;Verifies behavior requested in SPR-9613.;@Test_	public void caseInsensitiveNullLiterals() {_		ExpressionParser parser = new SpelExpressionParser()__		Expression exp___		exp = parser.parseExpression("null")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NULL")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NuLl")__		assertNull(exp.getValue())__	};verifies,behavior,requested,in,spr,9613;test,public,void,case,insensitive,null,literals,expression,parser,parser,new,spel,expression,parser,expression,exp,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,nu,ll,assert,null,exp,get,value
EvaluationTests -> @Test 	public void caseInsensitiveNullLiterals();1385073193;Verifies behavior requested in SPR-9613.;@Test_	public void caseInsensitiveNullLiterals() {_		ExpressionParser parser = new SpelExpressionParser()__		Expression exp___		exp = parser.parseExpression("null")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NULL")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NuLl")__		assertNull(exp.getValue())__	};verifies,behavior,requested,in,spr,9613;test,public,void,case,insensitive,null,literals,expression,parser,parser,new,spel,expression,parser,expression,exp,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,nu,ll,assert,null,exp,get,value
EvaluationTests -> @Test 	public void caseInsensitiveNullLiterals();1391876651;Verifies behavior requested in SPR-9613.;@Test_	public void caseInsensitiveNullLiterals() {_		ExpressionParser parser = new SpelExpressionParser()__		Expression exp___		exp = parser.parseExpression("null")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NULL")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NuLl")__		assertNull(exp.getValue())__	};verifies,behavior,requested,in,spr,9613;test,public,void,case,insensitive,null,literals,expression,parser,parser,new,spel,expression,parser,expression,exp,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,nu,ll,assert,null,exp,get,value
EvaluationTests -> @Test 	public void caseInsensitiveNullLiterals();1407348911;Verifies behavior requested in SPR-9613.;@Test_	public void caseInsensitiveNullLiterals() {_		ExpressionParser parser = new SpelExpressionParser()__		Expression exp___		exp = parser.parseExpression("null")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NULL")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NuLl")__		assertNull(exp.getValue())__	};verifies,behavior,requested,in,spr,9613;test,public,void,case,insensitive,null,literals,expression,parser,parser,new,spel,expression,parser,expression,exp,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,nu,ll,assert,null,exp,get,value
EvaluationTests -> @Test 	public void caseInsensitiveNullLiterals();1413848647;Verifies behavior requested in SPR-9613.;@Test_	public void caseInsensitiveNullLiterals() {_		ExpressionParser parser = new SpelExpressionParser()__		Expression exp___		exp = parser.parseExpression("null")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NULL")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NuLl")__		assertNull(exp.getValue())__	};verifies,behavior,requested,in,spr,9613;test,public,void,case,insensitive,null,literals,expression,parser,parser,new,spel,expression,parser,expression,exp,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,nu,ll,assert,null,exp,get,value
EvaluationTests -> @Test 	public void caseInsensitiveNullLiterals();1413907042;Verifies behavior requested in SPR-9613.;@Test_	public void caseInsensitiveNullLiterals() {_		ExpressionParser parser = new SpelExpressionParser()__		Expression exp___		exp = parser.parseExpression("null")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NULL")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NuLl")__		assertNull(exp.getValue())__	};verifies,behavior,requested,in,spr,9613;test,public,void,case,insensitive,null,literals,expression,parser,parser,new,spel,expression,parser,expression,exp,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,nu,ll,assert,null,exp,get,value
EvaluationTests -> @Test 	public void caseInsensitiveNullLiterals();1425759378;Verifies behavior requested in SPR-9613.;@Test_	public void caseInsensitiveNullLiterals() {_		ExpressionParser parser = new SpelExpressionParser()__		Expression exp___		exp = parser.parseExpression("null")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NULL")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NuLl")__		assertNull(exp.getValue())__	};verifies,behavior,requested,in,spr,9613;test,public,void,case,insensitive,null,literals,expression,parser,parser,new,spel,expression,parser,expression,exp,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,nu,ll,assert,null,exp,get,value
EvaluationTests -> @Test 	public void caseInsensitiveNullLiterals();1458843770;Verifies behavior requested in SPR-9613.;@Test_	public void caseInsensitiveNullLiterals() {_		ExpressionParser parser = new SpelExpressionParser()__		Expression exp___		exp = parser.parseExpression("null")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NULL")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NuLl")__		assertNull(exp.getValue())__	};verifies,behavior,requested,in,spr,9613;test,public,void,case,insensitive,null,literals,expression,parser,parser,new,spel,expression,parser,expression,exp,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,nu,ll,assert,null,exp,get,value
EvaluationTests -> @Test 	public void caseInsensitiveNullLiterals();1467730834;Verifies behavior requested in SPR-9613.;@Test_	public void caseInsensitiveNullLiterals() {_		ExpressionParser parser = new SpelExpressionParser()__		Expression exp___		exp = parser.parseExpression("null")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NULL")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NuLl")__		assertNull(exp.getValue())__	};verifies,behavior,requested,in,spr,9613;test,public,void,case,insensitive,null,literals,expression,parser,parser,new,spel,expression,parser,expression,exp,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,nu,ll,assert,null,exp,get,value
EvaluationTests -> @Test 	public void caseInsensitiveNullLiterals();1496837955;Verifies behavior requested in SPR-9613.;@Test_	public void caseInsensitiveNullLiterals() {_		ExpressionParser parser = new SpelExpressionParser()__		Expression exp___		exp = parser.parseExpression("null")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NULL")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NuLl")__		assertNull(exp.getValue())__	};verifies,behavior,requested,in,spr,9613;test,public,void,case,insensitive,null,literals,expression,parser,parser,new,spel,expression,parser,expression,exp,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,nu,ll,assert,null,exp,get,value
EvaluationTests -> @Test 	public void caseInsensitiveNullLiterals();1518279448;Verifies behavior requested in SPR-9613.;@Test_	public void caseInsensitiveNullLiterals() {_		ExpressionParser parser = new SpelExpressionParser()__		Expression exp___		exp = parser.parseExpression("null")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NULL")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NuLl")__		assertNull(exp.getValue())__	};verifies,behavior,requested,in,spr,9613;test,public,void,case,insensitive,null,literals,expression,parser,parser,new,spel,expression,parser,expression,exp,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,nu,ll,assert,null,exp,get,value
EvaluationTests -> @Test 	public void caseInsensitiveNullLiterals();1518283060;Verifies behavior requested in SPR-9613.;@Test_	public void caseInsensitiveNullLiterals() {_		ExpressionParser parser = new SpelExpressionParser()__		Expression exp___		exp = parser.parseExpression("null")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NULL")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NuLl")__		assertNull(exp.getValue())__	};verifies,behavior,requested,in,spr,9613;test,public,void,case,insensitive,null,literals,expression,parser,parser,new,spel,expression,parser,expression,exp,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,nu,ll,assert,null,exp,get,value
EvaluationTests -> @Test 	public void caseInsensitiveNullLiterals();1520090085;Verifies behavior requested in SPR-9613.;@Test_	public void caseInsensitiveNullLiterals() {_		ExpressionParser parser = new SpelExpressionParser()__		Expression exp___		exp = parser.parseExpression("null")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NULL")__		assertNull(exp.getValue())___		exp = parser.parseExpression("NuLl")__		assertNull(exp.getValue())__	};verifies,behavior,requested,in,spr,9613;test,public,void,case,insensitive,null,literals,expression,parser,parser,new,spel,expression,parser,expression,exp,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,null,assert,null,exp,get,value,exp,parser,parse,expression,nu,ll,assert,null,exp,get,value
EvaluationTests -> @Test 	public void caseInsensitiveNullLiterals();1520094828;Verifies behavior requested in SPR-9613.;@Test_	public void caseInsensitiveNullLiterals() {_		ExpressionParser parser = new SpelExpressionParser()___		Expression e = parser.parseExpression("null")__		assertNull(e.getValue())___		e = parser.parseExpression("NULL")__		assertNull(e.getValue())___		e = parser.parseExpression("NuLl")__		assertNull(e.getValue())__	};verifies,behavior,requested,in,spr,9613;test,public,void,case,insensitive,null,literals,expression,parser,parser,new,spel,expression,parser,expression,e,parser,parse,expression,null,assert,null,e,get,value,e,parser,parse,expression,null,assert,null,e,get,value,e,parser,parse,expression,nu,ll,assert,null,e,get,value
EvaluationTests -> @Test 	public void caseInsensitiveNullLiterals();1521632355;Verifies behavior requested in SPR-9613.;@Test_	public void caseInsensitiveNullLiterals() {_		ExpressionParser parser = new SpelExpressionParser()___		Expression e = parser.parseExpression("null")__		assertNull(e.getValue())___		e = parser.parseExpression("NULL")__		assertNull(e.getValue())___		e = parser.parseExpression("NuLl")__		assertNull(e.getValue())__	};verifies,behavior,requested,in,spr,9613;test,public,void,case,insensitive,null,literals,expression,parser,parser,new,spel,expression,parser,expression,e,parser,parse,expression,null,assert,null,e,get,value,e,parser,parse,expression,null,assert,null,e,get,value,e,parser,parse,expression,nu,ll,assert,null,e,get,value
EvaluationTests -> @Test 	public void caseInsensitiveNullLiterals();1523956215;Verifies behavior requested in SPR-9613.;@Test_	public void caseInsensitiveNullLiterals() {_		ExpressionParser parser = new SpelExpressionParser()___		Expression e = parser.parseExpression("null")__		assertNull(e.getValue())___		e = parser.parseExpression("NULL")__		assertNull(e.getValue())___		e = parser.parseExpression("NuLl")__		assertNull(e.getValue())__	};verifies,behavior,requested,in,spr,9613;test,public,void,case,insensitive,null,literals,expression,parser,parser,new,spel,expression,parser,expression,e,parser,parse,expression,null,assert,null,e,get,value,e,parser,parse,expression,null,assert,null,e,get,value,e,parser,parse,expression,nu,ll,assert,null,e,get,value
EvaluationTests -> @Test 	public void initializingCollectionElementsOnWrite();1520094828;SPR-6984: attempting to index a collection on write using an index that_doesn't currently exist in the collection (address.crossStreets[0] below);@Test_	public void initializingCollectionElementsOnWrite() {_		TestPerson person = new TestPerson()__		EvaluationContext context = new StandardEvaluationContext(person)__		SpelParserConfiguration config = new SpelParserConfiguration(true, true)__		ExpressionParser parser = new SpelExpressionParser(config)__		Expression e = parser.parseExpression("name")__		e.setValue(context, "Oleg")__		assertEquals("Oleg", person.getName())___		e = parser.parseExpression("address.street")__		e.setValue(context, "123 High St")__		assertEquals("123 High St", person.getAddress().getStreet())___		e = parser.parseExpression("address.crossStreets[0]")__		e.setValue(context, "Blah")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))___		e = parser.parseExpression("address.crossStreets[3]")__		e.setValue(context, "Wibble")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))__		assertEquals("Wibble", person.getAddress().getCrossStreets().get(3))__	};spr,6984,attempting,to,index,a,collection,on,write,using,an,index,that,doesn,t,currently,exist,in,the,collection,address,cross,streets,0,below;test,public,void,initializing,collection,elements,on,write,test,person,person,new,test,person,evaluation,context,context,new,standard,evaluation,context,person,spel,parser,configuration,config,new,spel,parser,configuration,true,true,expression,parser,parser,new,spel,expression,parser,config,expression,e,parser,parse,expression,name,e,set,value,context,oleg,assert,equals,oleg,person,get,name,e,parser,parse,expression,address,street,e,set,value,context,123,high,st,assert,equals,123,high,st,person,get,address,get,street,e,parser,parse,expression,address,cross,streets,0,e,set,value,context,blah,assert,equals,blah,person,get,address,get,cross,streets,get,0,e,parser,parse,expression,address,cross,streets,3,e,set,value,context,wibble,assert,equals,blah,person,get,address,get,cross,streets,get,0,assert,equals,wibble,person,get,address,get,cross,streets,get,3
EvaluationTests -> @Test 	public void initializingCollectionElementsOnWrite();1521632355;SPR-6984: attempting to index a collection on write using an index that_doesn't currently exist in the collection (address.crossStreets[0] below);@Test_	public void initializingCollectionElementsOnWrite() {_		TestPerson person = new TestPerson()__		EvaluationContext context = new StandardEvaluationContext(person)__		SpelParserConfiguration config = new SpelParserConfiguration(true, true)__		ExpressionParser parser = new SpelExpressionParser(config)__		Expression e = parser.parseExpression("name")__		e.setValue(context, "Oleg")__		assertEquals("Oleg", person.getName())___		e = parser.parseExpression("address.street")__		e.setValue(context, "123 High St")__		assertEquals("123 High St", person.getAddress().getStreet())___		e = parser.parseExpression("address.crossStreets[0]")__		e.setValue(context, "Blah")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))___		e = parser.parseExpression("address.crossStreets[3]")__		e.setValue(context, "Wibble")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))__		assertEquals("Wibble", person.getAddress().getCrossStreets().get(3))__	};spr,6984,attempting,to,index,a,collection,on,write,using,an,index,that,doesn,t,currently,exist,in,the,collection,address,cross,streets,0,below;test,public,void,initializing,collection,elements,on,write,test,person,person,new,test,person,evaluation,context,context,new,standard,evaluation,context,person,spel,parser,configuration,config,new,spel,parser,configuration,true,true,expression,parser,parser,new,spel,expression,parser,config,expression,e,parser,parse,expression,name,e,set,value,context,oleg,assert,equals,oleg,person,get,name,e,parser,parse,expression,address,street,e,set,value,context,123,high,st,assert,equals,123,high,st,person,get,address,get,street,e,parser,parse,expression,address,cross,streets,0,e,set,value,context,blah,assert,equals,blah,person,get,address,get,cross,streets,get,0,e,parser,parse,expression,address,cross,streets,3,e,set,value,context,wibble,assert,equals,blah,person,get,address,get,cross,streets,get,0,assert,equals,wibble,person,get,address,get,cross,streets,get,3
EvaluationTests -> @Test 	public void initializingCollectionElementsOnWrite();1523956215;SPR-6984: attempting to index a collection on write using an index that_doesn't currently exist in the collection (address.crossStreets[0] below);@Test_	public void initializingCollectionElementsOnWrite() {_		TestPerson person = new TestPerson()__		EvaluationContext context = new StandardEvaluationContext(person)__		SpelParserConfiguration config = new SpelParserConfiguration(true, true)__		ExpressionParser parser = new SpelExpressionParser(config)__		Expression e = parser.parseExpression("name")__		e.setValue(context, "Oleg")__		assertEquals("Oleg", person.getName())___		e = parser.parseExpression("address.street")__		e.setValue(context, "123 High St")__		assertEquals("123 High St", person.getAddress().getStreet())___		e = parser.parseExpression("address.crossStreets[0]")__		e.setValue(context, "Blah")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))___		e = parser.parseExpression("address.crossStreets[3]")__		e.setValue(context, "Wibble")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))__		assertEquals("Wibble", person.getAddress().getCrossStreets().get(3))__	};spr,6984,attempting,to,index,a,collection,on,write,using,an,index,that,doesn,t,currently,exist,in,the,collection,address,cross,streets,0,below;test,public,void,initializing,collection,elements,on,write,test,person,person,new,test,person,evaluation,context,context,new,standard,evaluation,context,person,spel,parser,configuration,config,new,spel,parser,configuration,true,true,expression,parser,parser,new,spel,expression,parser,config,expression,e,parser,parse,expression,name,e,set,value,context,oleg,assert,equals,oleg,person,get,name,e,parser,parse,expression,address,street,e,set,value,context,123,high,st,assert,equals,123,high,st,person,get,address,get,street,e,parser,parse,expression,address,cross,streets,0,e,set,value,context,blah,assert,equals,blah,person,get,address,get,cross,streets,get,0,e,parser,parse,expression,address,cross,streets,3,e,set,value,context,wibble,assert,equals,blah,person,get,address,get,cross,streets,get,0,assert,equals,wibble,person,get,address,get,cross,streets,get,3
EvaluationTests -> @Test 	public void initializingCollectionElementsOnWrite() throws Exception;1328020251;SPR-6984: attempting to index a collection on write using an index that doesn't currently exist in the collection (address.crossStreets[0] below);@Test_	public void initializingCollectionElementsOnWrite() throws Exception {_		TestPerson person = new TestPerson()__		EvaluationContext context = new StandardEvaluationContext(person)__		SpelParserConfiguration config = new SpelParserConfiguration(true, true)__		ExpressionParser parser = new SpelExpressionParser(config)__		Expression expression = parser.parseExpression("name")__		expression.setValue(context, "Oleg")__		Assert.assertEquals("Oleg",person.getName())___		expression = parser.parseExpression("address.street")__		expression.setValue(context, "123 High St")__		Assert.assertEquals("123 High St",person.getAddress().getStreet())__		_		expression = parser.parseExpression("address.crossStreets[0]")__		expression.setValue(context, "Blah")__		Assert.assertEquals("Blah",person.getAddress().getCrossStreets().get(0))__		_		expression = parser.parseExpression("address.crossStreets[3]")__		expression.setValue(context, "Wibble")__		Assert.assertEquals("Blah",person.getAddress().getCrossStreets().get(0))__		Assert.assertEquals("Wibble",person.getAddress().getCrossStreets().get(3))__	};spr,6984,attempting,to,index,a,collection,on,write,using,an,index,that,doesn,t,currently,exist,in,the,collection,address,cross,streets,0,below;test,public,void,initializing,collection,elements,on,write,throws,exception,test,person,person,new,test,person,evaluation,context,context,new,standard,evaluation,context,person,spel,parser,configuration,config,new,spel,parser,configuration,true,true,expression,parser,parser,new,spel,expression,parser,config,expression,expression,parser,parse,expression,name,expression,set,value,context,oleg,assert,assert,equals,oleg,person,get,name,expression,parser,parse,expression,address,street,expression,set,value,context,123,high,st,assert,assert,equals,123,high,st,person,get,address,get,street,expression,parser,parse,expression,address,cross,streets,0,expression,set,value,context,blah,assert,assert,equals,blah,person,get,address,get,cross,streets,get,0,expression,parser,parse,expression,address,cross,streets,3,expression,set,value,context,wibble,assert,assert,equals,blah,person,get,address,get,cross,streets,get,0,assert,assert,equals,wibble,person,get,address,get,cross,streets,get,3
EvaluationTests -> @Test 	public void initializingCollectionElementsOnWrite() throws Exception;1344037836;SPR-6984: attempting to index a collection on write using an index that_doesn't currently exist in the collection (address.crossStreets[0] below);@Test_	public void initializingCollectionElementsOnWrite() throws Exception {_		TestPerson person = new TestPerson()__		EvaluationContext context = new StandardEvaluationContext(person)__		SpelParserConfiguration config = new SpelParserConfiguration(true, true)__		ExpressionParser parser = new SpelExpressionParser(config)__		Expression expression = parser.parseExpression("name")__		expression.setValue(context, "Oleg")__		assertEquals("Oleg", person.getName())___		expression = parser.parseExpression("address.street")__		expression.setValue(context, "123 High St")__		assertEquals("123 High St", person.getAddress().getStreet())___		expression = parser.parseExpression("address.crossStreets[0]")__		expression.setValue(context, "Blah")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))___		expression = parser.parseExpression("address.crossStreets[3]")__		expression.setValue(context, "Wibble")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))__		assertEquals("Wibble", person.getAddress().getCrossStreets().get(3))__	};spr,6984,attempting,to,index,a,collection,on,write,using,an,index,that,doesn,t,currently,exist,in,the,collection,address,cross,streets,0,below;test,public,void,initializing,collection,elements,on,write,throws,exception,test,person,person,new,test,person,evaluation,context,context,new,standard,evaluation,context,person,spel,parser,configuration,config,new,spel,parser,configuration,true,true,expression,parser,parser,new,spel,expression,parser,config,expression,expression,parser,parse,expression,name,expression,set,value,context,oleg,assert,equals,oleg,person,get,name,expression,parser,parse,expression,address,street,expression,set,value,context,123,high,st,assert,equals,123,high,st,person,get,address,get,street,expression,parser,parse,expression,address,cross,streets,0,expression,set,value,context,blah,assert,equals,blah,person,get,address,get,cross,streets,get,0,expression,parser,parse,expression,address,cross,streets,3,expression,set,value,context,wibble,assert,equals,blah,person,get,address,get,cross,streets,get,0,assert,equals,wibble,person,get,address,get,cross,streets,get,3
EvaluationTests -> @Test 	public void initializingCollectionElementsOnWrite() throws Exception;1344546350;SPR-6984: attempting to index a collection on write using an index that_doesn't currently exist in the collection (address.crossStreets[0] below);@Test_	public void initializingCollectionElementsOnWrite() throws Exception {_		TestPerson person = new TestPerson()__		EvaluationContext context = new StandardEvaluationContext(person)__		SpelParserConfiguration config = new SpelParserConfiguration(true, true)__		ExpressionParser parser = new SpelExpressionParser(config)__		Expression expression = parser.parseExpression("name")__		expression.setValue(context, "Oleg")__		assertEquals("Oleg", person.getName())___		expression = parser.parseExpression("address.street")__		expression.setValue(context, "123 High St")__		assertEquals("123 High St", person.getAddress().getStreet())___		expression = parser.parseExpression("address.crossStreets[0]")__		expression.setValue(context, "Blah")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))___		expression = parser.parseExpression("address.crossStreets[3]")__		expression.setValue(context, "Wibble")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))__		assertEquals("Wibble", person.getAddress().getCrossStreets().get(3))__	};spr,6984,attempting,to,index,a,collection,on,write,using,an,index,that,doesn,t,currently,exist,in,the,collection,address,cross,streets,0,below;test,public,void,initializing,collection,elements,on,write,throws,exception,test,person,person,new,test,person,evaluation,context,context,new,standard,evaluation,context,person,spel,parser,configuration,config,new,spel,parser,configuration,true,true,expression,parser,parser,new,spel,expression,parser,config,expression,expression,parser,parse,expression,name,expression,set,value,context,oleg,assert,equals,oleg,person,get,name,expression,parser,parse,expression,address,street,expression,set,value,context,123,high,st,assert,equals,123,high,st,person,get,address,get,street,expression,parser,parse,expression,address,cross,streets,0,expression,set,value,context,blah,assert,equals,blah,person,get,address,get,cross,streets,get,0,expression,parser,parse,expression,address,cross,streets,3,expression,set,value,context,wibble,assert,equals,blah,person,get,address,get,cross,streets,get,0,assert,equals,wibble,person,get,address,get,cross,streets,get,3
EvaluationTests -> @Test 	public void initializingCollectionElementsOnWrite() throws Exception;1351041784;SPR-6984: attempting to index a collection on write using an index that_doesn't currently exist in the collection (address.crossStreets[0] below);@Test_	public void initializingCollectionElementsOnWrite() throws Exception {_		TestPerson person = new TestPerson()__		EvaluationContext context = new StandardEvaluationContext(person)__		SpelParserConfiguration config = new SpelParserConfiguration(true, true)__		ExpressionParser parser = new SpelExpressionParser(config)__		Expression expression = parser.parseExpression("name")__		expression.setValue(context, "Oleg")__		assertEquals("Oleg", person.getName())___		expression = parser.parseExpression("address.street")__		expression.setValue(context, "123 High St")__		assertEquals("123 High St", person.getAddress().getStreet())___		expression = parser.parseExpression("address.crossStreets[0]")__		expression.setValue(context, "Blah")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))___		expression = parser.parseExpression("address.crossStreets[3]")__		expression.setValue(context, "Wibble")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))__		assertEquals("Wibble", person.getAddress().getCrossStreets().get(3))__	};spr,6984,attempting,to,index,a,collection,on,write,using,an,index,that,doesn,t,currently,exist,in,the,collection,address,cross,streets,0,below;test,public,void,initializing,collection,elements,on,write,throws,exception,test,person,person,new,test,person,evaluation,context,context,new,standard,evaluation,context,person,spel,parser,configuration,config,new,spel,parser,configuration,true,true,expression,parser,parser,new,spel,expression,parser,config,expression,expression,parser,parse,expression,name,expression,set,value,context,oleg,assert,equals,oleg,person,get,name,expression,parser,parse,expression,address,street,expression,set,value,context,123,high,st,assert,equals,123,high,st,person,get,address,get,street,expression,parser,parse,expression,address,cross,streets,0,expression,set,value,context,blah,assert,equals,blah,person,get,address,get,cross,streets,get,0,expression,parser,parse,expression,address,cross,streets,3,expression,set,value,context,wibble,assert,equals,blah,person,get,address,get,cross,streets,get,0,assert,equals,wibble,person,get,address,get,cross,streets,get,3
EvaluationTests -> @Test 	public void initializingCollectionElementsOnWrite() throws Exception;1356735495;SPR-6984: attempting to index a collection on write using an index that_doesn't currently exist in the collection (address.crossStreets[0] below);@Test_	public void initializingCollectionElementsOnWrite() throws Exception {_		TestPerson person = new TestPerson()__		EvaluationContext context = new StandardEvaluationContext(person)__		SpelParserConfiguration config = new SpelParserConfiguration(true, true)__		ExpressionParser parser = new SpelExpressionParser(config)__		Expression expression = parser.parseExpression("name")__		expression.setValue(context, "Oleg")__		assertEquals("Oleg", person.getName())___		expression = parser.parseExpression("address.street")__		expression.setValue(context, "123 High St")__		assertEquals("123 High St", person.getAddress().getStreet())___		expression = parser.parseExpression("address.crossStreets[0]")__		expression.setValue(context, "Blah")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))___		expression = parser.parseExpression("address.crossStreets[3]")__		expression.setValue(context, "Wibble")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))__		assertEquals("Wibble", person.getAddress().getCrossStreets().get(3))__	};spr,6984,attempting,to,index,a,collection,on,write,using,an,index,that,doesn,t,currently,exist,in,the,collection,address,cross,streets,0,below;test,public,void,initializing,collection,elements,on,write,throws,exception,test,person,person,new,test,person,evaluation,context,context,new,standard,evaluation,context,person,spel,parser,configuration,config,new,spel,parser,configuration,true,true,expression,parser,parser,new,spel,expression,parser,config,expression,expression,parser,parse,expression,name,expression,set,value,context,oleg,assert,equals,oleg,person,get,name,expression,parser,parse,expression,address,street,expression,set,value,context,123,high,st,assert,equals,123,high,st,person,get,address,get,street,expression,parser,parse,expression,address,cross,streets,0,expression,set,value,context,blah,assert,equals,blah,person,get,address,get,cross,streets,get,0,expression,parser,parse,expression,address,cross,streets,3,expression,set,value,context,wibble,assert,equals,blah,person,get,address,get,cross,streets,get,0,assert,equals,wibble,person,get,address,get,cross,streets,get,3
EvaluationTests -> @Test 	public void initializingCollectionElementsOnWrite() throws Exception;1362408075;SPR-6984: attempting to index a collection on write using an index that_doesn't currently exist in the collection (address.crossStreets[0] below);@Test_	public void initializingCollectionElementsOnWrite() throws Exception {_		TestPerson person = new TestPerson()__		EvaluationContext context = new StandardEvaluationContext(person)__		SpelParserConfiguration config = new SpelParserConfiguration(true, true)__		ExpressionParser parser = new SpelExpressionParser(config)__		Expression expression = parser.parseExpression("name")__		expression.setValue(context, "Oleg")__		assertEquals("Oleg", person.getName())___		expression = parser.parseExpression("address.street")__		expression.setValue(context, "123 High St")__		assertEquals("123 High St", person.getAddress().getStreet())___		expression = parser.parseExpression("address.crossStreets[0]")__		expression.setValue(context, "Blah")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))___		expression = parser.parseExpression("address.crossStreets[3]")__		expression.setValue(context, "Wibble")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))__		assertEquals("Wibble", person.getAddress().getCrossStreets().get(3))__	};spr,6984,attempting,to,index,a,collection,on,write,using,an,index,that,doesn,t,currently,exist,in,the,collection,address,cross,streets,0,below;test,public,void,initializing,collection,elements,on,write,throws,exception,test,person,person,new,test,person,evaluation,context,context,new,standard,evaluation,context,person,spel,parser,configuration,config,new,spel,parser,configuration,true,true,expression,parser,parser,new,spel,expression,parser,config,expression,expression,parser,parse,expression,name,expression,set,value,context,oleg,assert,equals,oleg,person,get,name,expression,parser,parse,expression,address,street,expression,set,value,context,123,high,st,assert,equals,123,high,st,person,get,address,get,street,expression,parser,parse,expression,address,cross,streets,0,expression,set,value,context,blah,assert,equals,blah,person,get,address,get,cross,streets,get,0,expression,parser,parse,expression,address,cross,streets,3,expression,set,value,context,wibble,assert,equals,blah,person,get,address,get,cross,streets,get,0,assert,equals,wibble,person,get,address,get,cross,streets,get,3
EvaluationTests -> @Test 	public void initializingCollectionElementsOnWrite() throws Exception;1385073193;SPR-6984: attempting to index a collection on write using an index that_doesn't currently exist in the collection (address.crossStreets[0] below);@Test_	public void initializingCollectionElementsOnWrite() throws Exception {_		TestPerson person = new TestPerson()__		EvaluationContext context = new StandardEvaluationContext(person)__		SpelParserConfiguration config = new SpelParserConfiguration(true, true)__		ExpressionParser parser = new SpelExpressionParser(config)__		Expression expression = parser.parseExpression("name")__		expression.setValue(context, "Oleg")__		assertEquals("Oleg", person.getName())___		expression = parser.parseExpression("address.street")__		expression.setValue(context, "123 High St")__		assertEquals("123 High St", person.getAddress().getStreet())___		expression = parser.parseExpression("address.crossStreets[0]")__		expression.setValue(context, "Blah")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))___		expression = parser.parseExpression("address.crossStreets[3]")__		expression.setValue(context, "Wibble")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))__		assertEquals("Wibble", person.getAddress().getCrossStreets().get(3))__	};spr,6984,attempting,to,index,a,collection,on,write,using,an,index,that,doesn,t,currently,exist,in,the,collection,address,cross,streets,0,below;test,public,void,initializing,collection,elements,on,write,throws,exception,test,person,person,new,test,person,evaluation,context,context,new,standard,evaluation,context,person,spel,parser,configuration,config,new,spel,parser,configuration,true,true,expression,parser,parser,new,spel,expression,parser,config,expression,expression,parser,parse,expression,name,expression,set,value,context,oleg,assert,equals,oleg,person,get,name,expression,parser,parse,expression,address,street,expression,set,value,context,123,high,st,assert,equals,123,high,st,person,get,address,get,street,expression,parser,parse,expression,address,cross,streets,0,expression,set,value,context,blah,assert,equals,blah,person,get,address,get,cross,streets,get,0,expression,parser,parse,expression,address,cross,streets,3,expression,set,value,context,wibble,assert,equals,blah,person,get,address,get,cross,streets,get,0,assert,equals,wibble,person,get,address,get,cross,streets,get,3
EvaluationTests -> @Test 	public void initializingCollectionElementsOnWrite() throws Exception;1391876651;SPR-6984: attempting to index a collection on write using an index that_doesn't currently exist in the collection (address.crossStreets[0] below);@Test_	public void initializingCollectionElementsOnWrite() throws Exception {_		TestPerson person = new TestPerson()__		EvaluationContext context = new StandardEvaluationContext(person)__		SpelParserConfiguration config = new SpelParserConfiguration(true, true)__		ExpressionParser parser = new SpelExpressionParser(config)__		Expression expression = parser.parseExpression("name")__		expression.setValue(context, "Oleg")__		assertEquals("Oleg", person.getName())___		expression = parser.parseExpression("address.street")__		expression.setValue(context, "123 High St")__		assertEquals("123 High St", person.getAddress().getStreet())___		expression = parser.parseExpression("address.crossStreets[0]")__		expression.setValue(context, "Blah")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))___		expression = parser.parseExpression("address.crossStreets[3]")__		expression.setValue(context, "Wibble")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))__		assertEquals("Wibble", person.getAddress().getCrossStreets().get(3))__	};spr,6984,attempting,to,index,a,collection,on,write,using,an,index,that,doesn,t,currently,exist,in,the,collection,address,cross,streets,0,below;test,public,void,initializing,collection,elements,on,write,throws,exception,test,person,person,new,test,person,evaluation,context,context,new,standard,evaluation,context,person,spel,parser,configuration,config,new,spel,parser,configuration,true,true,expression,parser,parser,new,spel,expression,parser,config,expression,expression,parser,parse,expression,name,expression,set,value,context,oleg,assert,equals,oleg,person,get,name,expression,parser,parse,expression,address,street,expression,set,value,context,123,high,st,assert,equals,123,high,st,person,get,address,get,street,expression,parser,parse,expression,address,cross,streets,0,expression,set,value,context,blah,assert,equals,blah,person,get,address,get,cross,streets,get,0,expression,parser,parse,expression,address,cross,streets,3,expression,set,value,context,wibble,assert,equals,blah,person,get,address,get,cross,streets,get,0,assert,equals,wibble,person,get,address,get,cross,streets,get,3
EvaluationTests -> @Test 	public void initializingCollectionElementsOnWrite() throws Exception;1407348911;SPR-6984: attempting to index a collection on write using an index that_doesn't currently exist in the collection (address.crossStreets[0] below);@Test_	public void initializingCollectionElementsOnWrite() throws Exception {_		TestPerson person = new TestPerson()__		EvaluationContext context = new StandardEvaluationContext(person)__		SpelParserConfiguration config = new SpelParserConfiguration(true, true)__		ExpressionParser parser = new SpelExpressionParser(config)__		Expression expression = parser.parseExpression("name")__		expression.setValue(context, "Oleg")__		assertEquals("Oleg", person.getName())___		expression = parser.parseExpression("address.street")__		expression.setValue(context, "123 High St")__		assertEquals("123 High St", person.getAddress().getStreet())___		expression = parser.parseExpression("address.crossStreets[0]")__		expression.setValue(context, "Blah")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))___		expression = parser.parseExpression("address.crossStreets[3]")__		expression.setValue(context, "Wibble")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))__		assertEquals("Wibble", person.getAddress().getCrossStreets().get(3))__	};spr,6984,attempting,to,index,a,collection,on,write,using,an,index,that,doesn,t,currently,exist,in,the,collection,address,cross,streets,0,below;test,public,void,initializing,collection,elements,on,write,throws,exception,test,person,person,new,test,person,evaluation,context,context,new,standard,evaluation,context,person,spel,parser,configuration,config,new,spel,parser,configuration,true,true,expression,parser,parser,new,spel,expression,parser,config,expression,expression,parser,parse,expression,name,expression,set,value,context,oleg,assert,equals,oleg,person,get,name,expression,parser,parse,expression,address,street,expression,set,value,context,123,high,st,assert,equals,123,high,st,person,get,address,get,street,expression,parser,parse,expression,address,cross,streets,0,expression,set,value,context,blah,assert,equals,blah,person,get,address,get,cross,streets,get,0,expression,parser,parse,expression,address,cross,streets,3,expression,set,value,context,wibble,assert,equals,blah,person,get,address,get,cross,streets,get,0,assert,equals,wibble,person,get,address,get,cross,streets,get,3
EvaluationTests -> @Test 	public void initializingCollectionElementsOnWrite() throws Exception;1413848647;SPR-6984: attempting to index a collection on write using an index that_doesn't currently exist in the collection (address.crossStreets[0] below);@Test_	public void initializingCollectionElementsOnWrite() throws Exception {_		TestPerson person = new TestPerson()__		EvaluationContext context = new StandardEvaluationContext(person)__		SpelParserConfiguration config = new SpelParserConfiguration(true, true)__		ExpressionParser parser = new SpelExpressionParser(config)__		Expression expression = parser.parseExpression("name")__		expression.setValue(context, "Oleg")__		assertEquals("Oleg", person.getName())___		expression = parser.parseExpression("address.street")__		expression.setValue(context, "123 High St")__		assertEquals("123 High St", person.getAddress().getStreet())___		expression = parser.parseExpression("address.crossStreets[0]")__		expression.setValue(context, "Blah")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))___		expression = parser.parseExpression("address.crossStreets[3]")__		expression.setValue(context, "Wibble")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))__		assertEquals("Wibble", person.getAddress().getCrossStreets().get(3))__	};spr,6984,attempting,to,index,a,collection,on,write,using,an,index,that,doesn,t,currently,exist,in,the,collection,address,cross,streets,0,below;test,public,void,initializing,collection,elements,on,write,throws,exception,test,person,person,new,test,person,evaluation,context,context,new,standard,evaluation,context,person,spel,parser,configuration,config,new,spel,parser,configuration,true,true,expression,parser,parser,new,spel,expression,parser,config,expression,expression,parser,parse,expression,name,expression,set,value,context,oleg,assert,equals,oleg,person,get,name,expression,parser,parse,expression,address,street,expression,set,value,context,123,high,st,assert,equals,123,high,st,person,get,address,get,street,expression,parser,parse,expression,address,cross,streets,0,expression,set,value,context,blah,assert,equals,blah,person,get,address,get,cross,streets,get,0,expression,parser,parse,expression,address,cross,streets,3,expression,set,value,context,wibble,assert,equals,blah,person,get,address,get,cross,streets,get,0,assert,equals,wibble,person,get,address,get,cross,streets,get,3
EvaluationTests -> @Test 	public void initializingCollectionElementsOnWrite() throws Exception;1413907042;SPR-6984: attempting to index a collection on write using an index that_doesn't currently exist in the collection (address.crossStreets[0] below);@Test_	public void initializingCollectionElementsOnWrite() throws Exception {_		TestPerson person = new TestPerson()__		EvaluationContext context = new StandardEvaluationContext(person)__		SpelParserConfiguration config = new SpelParserConfiguration(true, true)__		ExpressionParser parser = new SpelExpressionParser(config)__		Expression expression = parser.parseExpression("name")__		expression.setValue(context, "Oleg")__		assertEquals("Oleg", person.getName())___		expression = parser.parseExpression("address.street")__		expression.setValue(context, "123 High St")__		assertEquals("123 High St", person.getAddress().getStreet())___		expression = parser.parseExpression("address.crossStreets[0]")__		expression.setValue(context, "Blah")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))___		expression = parser.parseExpression("address.crossStreets[3]")__		expression.setValue(context, "Wibble")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))__		assertEquals("Wibble", person.getAddress().getCrossStreets().get(3))__	};spr,6984,attempting,to,index,a,collection,on,write,using,an,index,that,doesn,t,currently,exist,in,the,collection,address,cross,streets,0,below;test,public,void,initializing,collection,elements,on,write,throws,exception,test,person,person,new,test,person,evaluation,context,context,new,standard,evaluation,context,person,spel,parser,configuration,config,new,spel,parser,configuration,true,true,expression,parser,parser,new,spel,expression,parser,config,expression,expression,parser,parse,expression,name,expression,set,value,context,oleg,assert,equals,oleg,person,get,name,expression,parser,parse,expression,address,street,expression,set,value,context,123,high,st,assert,equals,123,high,st,person,get,address,get,street,expression,parser,parse,expression,address,cross,streets,0,expression,set,value,context,blah,assert,equals,blah,person,get,address,get,cross,streets,get,0,expression,parser,parse,expression,address,cross,streets,3,expression,set,value,context,wibble,assert,equals,blah,person,get,address,get,cross,streets,get,0,assert,equals,wibble,person,get,address,get,cross,streets,get,3
EvaluationTests -> @Test 	public void initializingCollectionElementsOnWrite() throws Exception;1425759378;SPR-6984: attempting to index a collection on write using an index that_doesn't currently exist in the collection (address.crossStreets[0] below);@Test_	public void initializingCollectionElementsOnWrite() throws Exception {_		TestPerson person = new TestPerson()__		EvaluationContext context = new StandardEvaluationContext(person)__		SpelParserConfiguration config = new SpelParserConfiguration(true, true)__		ExpressionParser parser = new SpelExpressionParser(config)__		Expression expression = parser.parseExpression("name")__		expression.setValue(context, "Oleg")__		assertEquals("Oleg", person.getName())___		expression = parser.parseExpression("address.street")__		expression.setValue(context, "123 High St")__		assertEquals("123 High St", person.getAddress().getStreet())___		expression = parser.parseExpression("address.crossStreets[0]")__		expression.setValue(context, "Blah")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))___		expression = parser.parseExpression("address.crossStreets[3]")__		expression.setValue(context, "Wibble")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))__		assertEquals("Wibble", person.getAddress().getCrossStreets().get(3))__	};spr,6984,attempting,to,index,a,collection,on,write,using,an,index,that,doesn,t,currently,exist,in,the,collection,address,cross,streets,0,below;test,public,void,initializing,collection,elements,on,write,throws,exception,test,person,person,new,test,person,evaluation,context,context,new,standard,evaluation,context,person,spel,parser,configuration,config,new,spel,parser,configuration,true,true,expression,parser,parser,new,spel,expression,parser,config,expression,expression,parser,parse,expression,name,expression,set,value,context,oleg,assert,equals,oleg,person,get,name,expression,parser,parse,expression,address,street,expression,set,value,context,123,high,st,assert,equals,123,high,st,person,get,address,get,street,expression,parser,parse,expression,address,cross,streets,0,expression,set,value,context,blah,assert,equals,blah,person,get,address,get,cross,streets,get,0,expression,parser,parse,expression,address,cross,streets,3,expression,set,value,context,wibble,assert,equals,blah,person,get,address,get,cross,streets,get,0,assert,equals,wibble,person,get,address,get,cross,streets,get,3
EvaluationTests -> @Test 	public void initializingCollectionElementsOnWrite() throws Exception;1458843770;SPR-6984: attempting to index a collection on write using an index that_doesn't currently exist in the collection (address.crossStreets[0] below);@Test_	public void initializingCollectionElementsOnWrite() throws Exception {_		TestPerson person = new TestPerson()__		EvaluationContext context = new StandardEvaluationContext(person)__		SpelParserConfiguration config = new SpelParserConfiguration(true, true)__		ExpressionParser parser = new SpelExpressionParser(config)__		Expression expression = parser.parseExpression("name")__		expression.setValue(context, "Oleg")__		assertEquals("Oleg", person.getName())___		expression = parser.parseExpression("address.street")__		expression.setValue(context, "123 High St")__		assertEquals("123 High St", person.getAddress().getStreet())___		expression = parser.parseExpression("address.crossStreets[0]")__		expression.setValue(context, "Blah")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))___		expression = parser.parseExpression("address.crossStreets[3]")__		expression.setValue(context, "Wibble")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))__		assertEquals("Wibble", person.getAddress().getCrossStreets().get(3))__	};spr,6984,attempting,to,index,a,collection,on,write,using,an,index,that,doesn,t,currently,exist,in,the,collection,address,cross,streets,0,below;test,public,void,initializing,collection,elements,on,write,throws,exception,test,person,person,new,test,person,evaluation,context,context,new,standard,evaluation,context,person,spel,parser,configuration,config,new,spel,parser,configuration,true,true,expression,parser,parser,new,spel,expression,parser,config,expression,expression,parser,parse,expression,name,expression,set,value,context,oleg,assert,equals,oleg,person,get,name,expression,parser,parse,expression,address,street,expression,set,value,context,123,high,st,assert,equals,123,high,st,person,get,address,get,street,expression,parser,parse,expression,address,cross,streets,0,expression,set,value,context,blah,assert,equals,blah,person,get,address,get,cross,streets,get,0,expression,parser,parse,expression,address,cross,streets,3,expression,set,value,context,wibble,assert,equals,blah,person,get,address,get,cross,streets,get,0,assert,equals,wibble,person,get,address,get,cross,streets,get,3
EvaluationTests -> @Test 	public void initializingCollectionElementsOnWrite() throws Exception;1467730834;SPR-6984: attempting to index a collection on write using an index that_doesn't currently exist in the collection (address.crossStreets[0] below);@Test_	public void initializingCollectionElementsOnWrite() throws Exception {_		TestPerson person = new TestPerson()__		EvaluationContext context = new StandardEvaluationContext(person)__		SpelParserConfiguration config = new SpelParserConfiguration(true, true)__		ExpressionParser parser = new SpelExpressionParser(config)__		Expression expression = parser.parseExpression("name")__		expression.setValue(context, "Oleg")__		assertEquals("Oleg", person.getName())___		expression = parser.parseExpression("address.street")__		expression.setValue(context, "123 High St")__		assertEquals("123 High St", person.getAddress().getStreet())___		expression = parser.parseExpression("address.crossStreets[0]")__		expression.setValue(context, "Blah")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))___		expression = parser.parseExpression("address.crossStreets[3]")__		expression.setValue(context, "Wibble")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))__		assertEquals("Wibble", person.getAddress().getCrossStreets().get(3))__	};spr,6984,attempting,to,index,a,collection,on,write,using,an,index,that,doesn,t,currently,exist,in,the,collection,address,cross,streets,0,below;test,public,void,initializing,collection,elements,on,write,throws,exception,test,person,person,new,test,person,evaluation,context,context,new,standard,evaluation,context,person,spel,parser,configuration,config,new,spel,parser,configuration,true,true,expression,parser,parser,new,spel,expression,parser,config,expression,expression,parser,parse,expression,name,expression,set,value,context,oleg,assert,equals,oleg,person,get,name,expression,parser,parse,expression,address,street,expression,set,value,context,123,high,st,assert,equals,123,high,st,person,get,address,get,street,expression,parser,parse,expression,address,cross,streets,0,expression,set,value,context,blah,assert,equals,blah,person,get,address,get,cross,streets,get,0,expression,parser,parse,expression,address,cross,streets,3,expression,set,value,context,wibble,assert,equals,blah,person,get,address,get,cross,streets,get,0,assert,equals,wibble,person,get,address,get,cross,streets,get,3
EvaluationTests -> @Test 	public void initializingCollectionElementsOnWrite() throws Exception;1496837955;SPR-6984: attempting to index a collection on write using an index that_doesn't currently exist in the collection (address.crossStreets[0] below);@Test_	public void initializingCollectionElementsOnWrite() throws Exception {_		TestPerson person = new TestPerson()__		EvaluationContext context = new StandardEvaluationContext(person)__		SpelParserConfiguration config = new SpelParserConfiguration(true, true)__		ExpressionParser parser = new SpelExpressionParser(config)__		Expression expression = parser.parseExpression("name")__		expression.setValue(context, "Oleg")__		assertEquals("Oleg", person.getName())___		expression = parser.parseExpression("address.street")__		expression.setValue(context, "123 High St")__		assertEquals("123 High St", person.getAddress().getStreet())___		expression = parser.parseExpression("address.crossStreets[0]")__		expression.setValue(context, "Blah")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))___		expression = parser.parseExpression("address.crossStreets[3]")__		expression.setValue(context, "Wibble")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))__		assertEquals("Wibble", person.getAddress().getCrossStreets().get(3))__	};spr,6984,attempting,to,index,a,collection,on,write,using,an,index,that,doesn,t,currently,exist,in,the,collection,address,cross,streets,0,below;test,public,void,initializing,collection,elements,on,write,throws,exception,test,person,person,new,test,person,evaluation,context,context,new,standard,evaluation,context,person,spel,parser,configuration,config,new,spel,parser,configuration,true,true,expression,parser,parser,new,spel,expression,parser,config,expression,expression,parser,parse,expression,name,expression,set,value,context,oleg,assert,equals,oleg,person,get,name,expression,parser,parse,expression,address,street,expression,set,value,context,123,high,st,assert,equals,123,high,st,person,get,address,get,street,expression,parser,parse,expression,address,cross,streets,0,expression,set,value,context,blah,assert,equals,blah,person,get,address,get,cross,streets,get,0,expression,parser,parse,expression,address,cross,streets,3,expression,set,value,context,wibble,assert,equals,blah,person,get,address,get,cross,streets,get,0,assert,equals,wibble,person,get,address,get,cross,streets,get,3
EvaluationTests -> @Test 	public void initializingCollectionElementsOnWrite() throws Exception;1518279448;SPR-6984: attempting to index a collection on write using an index that_doesn't currently exist in the collection (address.crossStreets[0] below);@Test_	public void initializingCollectionElementsOnWrite() throws Exception {_		TestPerson person = new TestPerson()__		EvaluationContext context = new StandardEvaluationContext(person)__		SpelParserConfiguration config = new SpelParserConfiguration(true, true)__		ExpressionParser parser = new SpelExpressionParser(config)__		Expression expression = parser.parseExpression("name")__		expression.setValue(context, "Oleg")__		assertEquals("Oleg", person.getName())___		expression = parser.parseExpression("address.street")__		expression.setValue(context, "123 High St")__		assertEquals("123 High St", person.getAddress().getStreet())___		expression = parser.parseExpression("address.crossStreets[0]")__		expression.setValue(context, "Blah")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))___		expression = parser.parseExpression("address.crossStreets[3]")__		expression.setValue(context, "Wibble")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))__		assertEquals("Wibble", person.getAddress().getCrossStreets().get(3))__	};spr,6984,attempting,to,index,a,collection,on,write,using,an,index,that,doesn,t,currently,exist,in,the,collection,address,cross,streets,0,below;test,public,void,initializing,collection,elements,on,write,throws,exception,test,person,person,new,test,person,evaluation,context,context,new,standard,evaluation,context,person,spel,parser,configuration,config,new,spel,parser,configuration,true,true,expression,parser,parser,new,spel,expression,parser,config,expression,expression,parser,parse,expression,name,expression,set,value,context,oleg,assert,equals,oleg,person,get,name,expression,parser,parse,expression,address,street,expression,set,value,context,123,high,st,assert,equals,123,high,st,person,get,address,get,street,expression,parser,parse,expression,address,cross,streets,0,expression,set,value,context,blah,assert,equals,blah,person,get,address,get,cross,streets,get,0,expression,parser,parse,expression,address,cross,streets,3,expression,set,value,context,wibble,assert,equals,blah,person,get,address,get,cross,streets,get,0,assert,equals,wibble,person,get,address,get,cross,streets,get,3
EvaluationTests -> @Test 	public void initializingCollectionElementsOnWrite() throws Exception;1518283060;SPR-6984: attempting to index a collection on write using an index that_doesn't currently exist in the collection (address.crossStreets[0] below);@Test_	public void initializingCollectionElementsOnWrite() throws Exception {_		TestPerson person = new TestPerson()__		EvaluationContext context = new StandardEvaluationContext(person)__		SpelParserConfiguration config = new SpelParserConfiguration(true, true)__		ExpressionParser parser = new SpelExpressionParser(config)__		Expression expression = parser.parseExpression("name")__		expression.setValue(context, "Oleg")__		assertEquals("Oleg", person.getName())___		expression = parser.parseExpression("address.street")__		expression.setValue(context, "123 High St")__		assertEquals("123 High St", person.getAddress().getStreet())___		expression = parser.parseExpression("address.crossStreets[0]")__		expression.setValue(context, "Blah")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))___		expression = parser.parseExpression("address.crossStreets[3]")__		expression.setValue(context, "Wibble")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))__		assertEquals("Wibble", person.getAddress().getCrossStreets().get(3))__	};spr,6984,attempting,to,index,a,collection,on,write,using,an,index,that,doesn,t,currently,exist,in,the,collection,address,cross,streets,0,below;test,public,void,initializing,collection,elements,on,write,throws,exception,test,person,person,new,test,person,evaluation,context,context,new,standard,evaluation,context,person,spel,parser,configuration,config,new,spel,parser,configuration,true,true,expression,parser,parser,new,spel,expression,parser,config,expression,expression,parser,parse,expression,name,expression,set,value,context,oleg,assert,equals,oleg,person,get,name,expression,parser,parse,expression,address,street,expression,set,value,context,123,high,st,assert,equals,123,high,st,person,get,address,get,street,expression,parser,parse,expression,address,cross,streets,0,expression,set,value,context,blah,assert,equals,blah,person,get,address,get,cross,streets,get,0,expression,parser,parse,expression,address,cross,streets,3,expression,set,value,context,wibble,assert,equals,blah,person,get,address,get,cross,streets,get,0,assert,equals,wibble,person,get,address,get,cross,streets,get,3
EvaluationTests -> @Test 	public void initializingCollectionElementsOnWrite() throws Exception;1520090085;SPR-6984: attempting to index a collection on write using an index that_doesn't currently exist in the collection (address.crossStreets[0] below);@Test_	public void initializingCollectionElementsOnWrite() throws Exception {_		TestPerson person = new TestPerson()__		EvaluationContext context = new StandardEvaluationContext(person)__		SpelParserConfiguration config = new SpelParserConfiguration(true, true)__		ExpressionParser parser = new SpelExpressionParser(config)__		Expression expression = parser.parseExpression("name")__		expression.setValue(context, "Oleg")__		assertEquals("Oleg", person.getName())___		expression = parser.parseExpression("address.street")__		expression.setValue(context, "123 High St")__		assertEquals("123 High St", person.getAddress().getStreet())___		expression = parser.parseExpression("address.crossStreets[0]")__		expression.setValue(context, "Blah")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))___		expression = parser.parseExpression("address.crossStreets[3]")__		expression.setValue(context, "Wibble")__		assertEquals("Blah", person.getAddress().getCrossStreets().get(0))__		assertEquals("Wibble", person.getAddress().getCrossStreets().get(3))__	};spr,6984,attempting,to,index,a,collection,on,write,using,an,index,that,doesn,t,currently,exist,in,the,collection,address,cross,streets,0,below;test,public,void,initializing,collection,elements,on,write,throws,exception,test,person,person,new,test,person,evaluation,context,context,new,standard,evaluation,context,person,spel,parser,configuration,config,new,spel,parser,configuration,true,true,expression,parser,parser,new,spel,expression,parser,config,expression,expression,parser,parse,expression,name,expression,set,value,context,oleg,assert,equals,oleg,person,get,name,expression,parser,parse,expression,address,street,expression,set,value,context,123,high,st,assert,equals,123,high,st,person,get,address,get,street,expression,parser,parse,expression,address,cross,streets,0,expression,set,value,context,blah,assert,equals,blah,person,get,address,get,cross,streets,get,0,expression,parser,parse,expression,address,cross,streets,3,expression,set,value,context,wibble,assert,equals,blah,person,get,address,get,cross,streets,get,0,assert,equals,wibble,person,get,address,get,cross,streets,get,3
EvaluationTests -> @Test 	public void collectionGrowingViaIndexer();1351041784;This test is checking that with the changes for 9751 that the refactoring in Indexer is_coping correctly for references beyond collection boundaries.;@Test_	public void collectionGrowingViaIndexer() {_		Spr9751 instance = new Spr9751()___		_		StandardEvaluationContext ctx = new StandardEvaluationContext(instance)__		ExpressionParser parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		Expression e =  parser.parseExpression("listOfStrings[++index3]='def'")__		e.getValue(ctx)__		assertEquals(2,instance.listOfStrings.size())__		assertEquals("def",instance.listOfStrings.get(1))___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		e =  parser.parseExpression("listOfStrings[0]")__		String value = e.getValue(ctx,String.class)__		assertEquals("abc",value)__		e =  parser.parseExpression("listOfStrings[1]")__		value = e.getValue(ctx,String.class)__		assertEquals("def",value)__		e =  parser.parseExpression("listOfStrings[2]")__		value = e.getValue(ctx,String.class)__		assertEquals("",value)___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(false, false))__		e =  parser.parseExpression("listOfStrings[3]")__		try {_			e.getValue(ctx,String.class)__			fail()__		} catch (SpelEvaluationException see) {_			assertEquals(SpelMessage.COLLECTION_INDEX_OUT_OF_BOUNDS,see.getMessageCode())__		}_	};this,test,is,checking,that,with,the,changes,for,9751,that,the,refactoring,in,indexer,is,coping,correctly,for,references,beyond,collection,boundaries;test,public,void,collection,growing,via,indexer,spr9751,instance,new,spr9751,standard,evaluation,context,ctx,new,standard,evaluation,context,instance,expression,parser,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,expression,e,parser,parse,expression,list,of,strings,index3,def,e,get,value,ctx,assert,equals,2,instance,list,of,strings,size,assert,equals,def,instance,list,of,strings,get,1,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,e,parser,parse,expression,list,of,strings,0,string,value,e,get,value,ctx,string,class,assert,equals,abc,value,e,parser,parse,expression,list,of,strings,1,value,e,get,value,ctx,string,class,assert,equals,def,value,e,parser,parse,expression,list,of,strings,2,value,e,get,value,ctx,string,class,assert,equals,value,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,false,false,e,parser,parse,expression,list,of,strings,3,try,e,get,value,ctx,string,class,fail,catch,spel,evaluation,exception,see,assert,equals,spel,message,see,get,message,code
EvaluationTests -> @Test 	public void collectionGrowingViaIndexer();1356735495;This test is checking that with the changes for 9751 that the refactoring in Indexer is_coping correctly for references beyond collection boundaries.;@Test_	public void collectionGrowingViaIndexer() {_		Spr9751 instance = new Spr9751()___		_		StandardEvaluationContext ctx = new StandardEvaluationContext(instance)__		ExpressionParser parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		Expression e =  parser.parseExpression("listOfStrings[++index3]='def'")__		e.getValue(ctx)__		assertEquals(2,instance.listOfStrings.size())__		assertEquals("def",instance.listOfStrings.get(1))___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		e =  parser.parseExpression("listOfStrings[0]")__		String value = e.getValue(ctx,String.class)__		assertEquals("abc",value)__		e =  parser.parseExpression("listOfStrings[1]")__		value = e.getValue(ctx,String.class)__		assertEquals("def",value)__		e =  parser.parseExpression("listOfStrings[2]")__		value = e.getValue(ctx,String.class)__		assertEquals("",value)___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(false, false))__		e =  parser.parseExpression("listOfStrings[3]")__		try {_			e.getValue(ctx,String.class)__			fail()__		} catch (SpelEvaluationException see) {_			assertEquals(SpelMessage.COLLECTION_INDEX_OUT_OF_BOUNDS,see.getMessageCode())__		}_	};this,test,is,checking,that,with,the,changes,for,9751,that,the,refactoring,in,indexer,is,coping,correctly,for,references,beyond,collection,boundaries;test,public,void,collection,growing,via,indexer,spr9751,instance,new,spr9751,standard,evaluation,context,ctx,new,standard,evaluation,context,instance,expression,parser,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,expression,e,parser,parse,expression,list,of,strings,index3,def,e,get,value,ctx,assert,equals,2,instance,list,of,strings,size,assert,equals,def,instance,list,of,strings,get,1,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,e,parser,parse,expression,list,of,strings,0,string,value,e,get,value,ctx,string,class,assert,equals,abc,value,e,parser,parse,expression,list,of,strings,1,value,e,get,value,ctx,string,class,assert,equals,def,value,e,parser,parse,expression,list,of,strings,2,value,e,get,value,ctx,string,class,assert,equals,value,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,false,false,e,parser,parse,expression,list,of,strings,3,try,e,get,value,ctx,string,class,fail,catch,spel,evaluation,exception,see,assert,equals,spel,message,see,get,message,code
EvaluationTests -> @Test 	public void collectionGrowingViaIndexer();1362408075;This test is checking that with the changes for 9751 that the refactoring in Indexer is_coping correctly for references beyond collection boundaries.;@Test_	public void collectionGrowingViaIndexer() {_		Spr9751 instance = new Spr9751()___		_		StandardEvaluationContext ctx = new StandardEvaluationContext(instance)__		ExpressionParser parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		Expression e =  parser.parseExpression("listOfStrings[++index3]='def'")__		e.getValue(ctx)__		assertEquals(2,instance.listOfStrings.size())__		assertEquals("def",instance.listOfStrings.get(1))___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		e =  parser.parseExpression("listOfStrings[0]")__		String value = e.getValue(ctx,String.class)__		assertEquals("abc",value)__		e =  parser.parseExpression("listOfStrings[1]")__		value = e.getValue(ctx,String.class)__		assertEquals("def",value)__		e =  parser.parseExpression("listOfStrings[2]")__		value = e.getValue(ctx,String.class)__		assertEquals("",value)___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(false, false))__		e =  parser.parseExpression("listOfStrings[3]")__		try {_			e.getValue(ctx,String.class)__			fail()__		} catch (SpelEvaluationException see) {_			assertEquals(SpelMessage.COLLECTION_INDEX_OUT_OF_BOUNDS,see.getMessageCode())__		}_	};this,test,is,checking,that,with,the,changes,for,9751,that,the,refactoring,in,indexer,is,coping,correctly,for,references,beyond,collection,boundaries;test,public,void,collection,growing,via,indexer,spr9751,instance,new,spr9751,standard,evaluation,context,ctx,new,standard,evaluation,context,instance,expression,parser,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,expression,e,parser,parse,expression,list,of,strings,index3,def,e,get,value,ctx,assert,equals,2,instance,list,of,strings,size,assert,equals,def,instance,list,of,strings,get,1,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,e,parser,parse,expression,list,of,strings,0,string,value,e,get,value,ctx,string,class,assert,equals,abc,value,e,parser,parse,expression,list,of,strings,1,value,e,get,value,ctx,string,class,assert,equals,def,value,e,parser,parse,expression,list,of,strings,2,value,e,get,value,ctx,string,class,assert,equals,value,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,false,false,e,parser,parse,expression,list,of,strings,3,try,e,get,value,ctx,string,class,fail,catch,spel,evaluation,exception,see,assert,equals,spel,message,see,get,message,code
EvaluationTests -> @Test 	public void collectionGrowingViaIndexer();1385073193;This test is checking that with the changes for 9751 that the refactoring in Indexer is_coping correctly for references beyond collection boundaries.;@Test_	public void collectionGrowingViaIndexer() {_		Spr9751 instance = new Spr9751()___		_		StandardEvaluationContext ctx = new StandardEvaluationContext(instance)__		ExpressionParser parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		Expression e =  parser.parseExpression("listOfStrings[++index3]='def'")__		e.getValue(ctx)__		assertEquals(2,instance.listOfStrings.size())__		assertEquals("def",instance.listOfStrings.get(1))___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		e =  parser.parseExpression("listOfStrings[0]")__		String value = e.getValue(ctx,String.class)__		assertEquals("abc",value)__		e =  parser.parseExpression("listOfStrings[1]")__		value = e.getValue(ctx,String.class)__		assertEquals("def",value)__		e =  parser.parseExpression("listOfStrings[2]")__		value = e.getValue(ctx,String.class)__		assertEquals("",value)___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(false, false))__		e =  parser.parseExpression("listOfStrings[3]")__		try {_			e.getValue(ctx,String.class)__			fail()__		} catch (SpelEvaluationException see) {_			assertEquals(SpelMessage.COLLECTION_INDEX_OUT_OF_BOUNDS,see.getMessageCode())__		}_	};this,test,is,checking,that,with,the,changes,for,9751,that,the,refactoring,in,indexer,is,coping,correctly,for,references,beyond,collection,boundaries;test,public,void,collection,growing,via,indexer,spr9751,instance,new,spr9751,standard,evaluation,context,ctx,new,standard,evaluation,context,instance,expression,parser,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,expression,e,parser,parse,expression,list,of,strings,index3,def,e,get,value,ctx,assert,equals,2,instance,list,of,strings,size,assert,equals,def,instance,list,of,strings,get,1,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,e,parser,parse,expression,list,of,strings,0,string,value,e,get,value,ctx,string,class,assert,equals,abc,value,e,parser,parse,expression,list,of,strings,1,value,e,get,value,ctx,string,class,assert,equals,def,value,e,parser,parse,expression,list,of,strings,2,value,e,get,value,ctx,string,class,assert,equals,value,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,false,false,e,parser,parse,expression,list,of,strings,3,try,e,get,value,ctx,string,class,fail,catch,spel,evaluation,exception,see,assert,equals,spel,message,see,get,message,code
EvaluationTests -> @Test 	public void collectionGrowingViaIndexer();1391876651;This test is checking that with the changes for 9751 that the refactoring in Indexer is_coping correctly for references beyond collection boundaries.;@Test_	public void collectionGrowingViaIndexer() {_		Spr9751 instance = new Spr9751()___		_		StandardEvaluationContext ctx = new StandardEvaluationContext(instance)__		ExpressionParser parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		Expression e =  parser.parseExpression("listOfStrings[++index3]='def'")__		e.getValue(ctx)__		assertEquals(2,instance.listOfStrings.size())__		assertEquals("def",instance.listOfStrings.get(1))___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		e =  parser.parseExpression("listOfStrings[0]")__		String value = e.getValue(ctx,String.class)__		assertEquals("abc",value)__		e =  parser.parseExpression("listOfStrings[1]")__		value = e.getValue(ctx,String.class)__		assertEquals("def",value)__		e =  parser.parseExpression("listOfStrings[2]")__		value = e.getValue(ctx,String.class)__		assertEquals("",value)___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(false, false))__		e =  parser.parseExpression("listOfStrings[3]")__		try {_			e.getValue(ctx,String.class)__			fail()__		} catch (SpelEvaluationException see) {_			assertEquals(SpelMessage.COLLECTION_INDEX_OUT_OF_BOUNDS,see.getMessageCode())__		}_	};this,test,is,checking,that,with,the,changes,for,9751,that,the,refactoring,in,indexer,is,coping,correctly,for,references,beyond,collection,boundaries;test,public,void,collection,growing,via,indexer,spr9751,instance,new,spr9751,standard,evaluation,context,ctx,new,standard,evaluation,context,instance,expression,parser,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,expression,e,parser,parse,expression,list,of,strings,index3,def,e,get,value,ctx,assert,equals,2,instance,list,of,strings,size,assert,equals,def,instance,list,of,strings,get,1,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,e,parser,parse,expression,list,of,strings,0,string,value,e,get,value,ctx,string,class,assert,equals,abc,value,e,parser,parse,expression,list,of,strings,1,value,e,get,value,ctx,string,class,assert,equals,def,value,e,parser,parse,expression,list,of,strings,2,value,e,get,value,ctx,string,class,assert,equals,value,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,false,false,e,parser,parse,expression,list,of,strings,3,try,e,get,value,ctx,string,class,fail,catch,spel,evaluation,exception,see,assert,equals,spel,message,see,get,message,code
EvaluationTests -> @Test 	public void collectionGrowingViaIndexer();1407348911;This test is checking that with the changes for 9751 that the refactoring in Indexer is_coping correctly for references beyond collection boundaries.;@Test_	public void collectionGrowingViaIndexer() {_		Spr9751 instance = new Spr9751()___		_		StandardEvaluationContext ctx = new StandardEvaluationContext(instance)__		ExpressionParser parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		Expression e =  parser.parseExpression("listOfStrings[++index3]='def'")__		e.getValue(ctx)__		assertEquals(2,instance.listOfStrings.size())__		assertEquals("def",instance.listOfStrings.get(1))___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		e =  parser.parseExpression("listOfStrings[0]")__		String value = e.getValue(ctx,String.class)__		assertEquals("abc",value)__		e =  parser.parseExpression("listOfStrings[1]")__		value = e.getValue(ctx,String.class)__		assertEquals("def",value)__		e =  parser.parseExpression("listOfStrings[2]")__		value = e.getValue(ctx,String.class)__		assertEquals("",value)___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(false, false))__		e =  parser.parseExpression("listOfStrings[3]")__		try {_			e.getValue(ctx,String.class)__			fail()__		} catch (SpelEvaluationException see) {_			assertEquals(SpelMessage.COLLECTION_INDEX_OUT_OF_BOUNDS,see.getMessageCode())__		}_	};this,test,is,checking,that,with,the,changes,for,9751,that,the,refactoring,in,indexer,is,coping,correctly,for,references,beyond,collection,boundaries;test,public,void,collection,growing,via,indexer,spr9751,instance,new,spr9751,standard,evaluation,context,ctx,new,standard,evaluation,context,instance,expression,parser,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,expression,e,parser,parse,expression,list,of,strings,index3,def,e,get,value,ctx,assert,equals,2,instance,list,of,strings,size,assert,equals,def,instance,list,of,strings,get,1,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,e,parser,parse,expression,list,of,strings,0,string,value,e,get,value,ctx,string,class,assert,equals,abc,value,e,parser,parse,expression,list,of,strings,1,value,e,get,value,ctx,string,class,assert,equals,def,value,e,parser,parse,expression,list,of,strings,2,value,e,get,value,ctx,string,class,assert,equals,value,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,false,false,e,parser,parse,expression,list,of,strings,3,try,e,get,value,ctx,string,class,fail,catch,spel,evaluation,exception,see,assert,equals,spel,message,see,get,message,code
EvaluationTests -> @Test 	public void collectionGrowingViaIndexer();1413848647;This test is checking that with the changes for 9751 that the refactoring in Indexer is_coping correctly for references beyond collection boundaries.;@Test_	public void collectionGrowingViaIndexer() {_		Spr9751 instance = new Spr9751()___		_		StandardEvaluationContext ctx = new StandardEvaluationContext(instance)__		ExpressionParser parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		Expression e =  parser.parseExpression("listOfStrings[++index3]='def'")__		e.getValue(ctx)__		assertEquals(2,instance.listOfStrings.size())__		assertEquals("def",instance.listOfStrings.get(1))___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		e =  parser.parseExpression("listOfStrings[0]")__		String value = e.getValue(ctx,String.class)__		assertEquals("abc",value)__		e =  parser.parseExpression("listOfStrings[1]")__		value = e.getValue(ctx,String.class)__		assertEquals("def",value)__		e =  parser.parseExpression("listOfStrings[2]")__		value = e.getValue(ctx,String.class)__		assertEquals("",value)___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(false, false))__		e =  parser.parseExpression("listOfStrings[3]")__		try {_			e.getValue(ctx,String.class)__			fail()__		} catch (SpelEvaluationException see) {_			assertEquals(SpelMessage.COLLECTION_INDEX_OUT_OF_BOUNDS,see.getMessageCode())__		}_	};this,test,is,checking,that,with,the,changes,for,9751,that,the,refactoring,in,indexer,is,coping,correctly,for,references,beyond,collection,boundaries;test,public,void,collection,growing,via,indexer,spr9751,instance,new,spr9751,standard,evaluation,context,ctx,new,standard,evaluation,context,instance,expression,parser,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,expression,e,parser,parse,expression,list,of,strings,index3,def,e,get,value,ctx,assert,equals,2,instance,list,of,strings,size,assert,equals,def,instance,list,of,strings,get,1,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,e,parser,parse,expression,list,of,strings,0,string,value,e,get,value,ctx,string,class,assert,equals,abc,value,e,parser,parse,expression,list,of,strings,1,value,e,get,value,ctx,string,class,assert,equals,def,value,e,parser,parse,expression,list,of,strings,2,value,e,get,value,ctx,string,class,assert,equals,value,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,false,false,e,parser,parse,expression,list,of,strings,3,try,e,get,value,ctx,string,class,fail,catch,spel,evaluation,exception,see,assert,equals,spel,message,see,get,message,code
EvaluationTests -> @Test 	public void collectionGrowingViaIndexer();1413907042;This test is checking that with the changes for 9751 that the refactoring in Indexer is_coping correctly for references beyond collection boundaries.;@Test_	public void collectionGrowingViaIndexer() {_		Spr9751 instance = new Spr9751()___		_		StandardEvaluationContext ctx = new StandardEvaluationContext(instance)__		ExpressionParser parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		Expression e =  parser.parseExpression("listOfStrings[++index3]='def'")__		e.getValue(ctx)__		assertEquals(2,instance.listOfStrings.size())__		assertEquals("def",instance.listOfStrings.get(1))___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		e =  parser.parseExpression("listOfStrings[0]")__		String value = e.getValue(ctx,String.class)__		assertEquals("abc",value)__		e =  parser.parseExpression("listOfStrings[1]")__		value = e.getValue(ctx,String.class)__		assertEquals("def",value)__		e =  parser.parseExpression("listOfStrings[2]")__		value = e.getValue(ctx,String.class)__		assertEquals("",value)___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(false, false))__		e =  parser.parseExpression("listOfStrings[3]")__		try {_			e.getValue(ctx,String.class)__			fail()__		} catch (SpelEvaluationException see) {_			assertEquals(SpelMessage.COLLECTION_INDEX_OUT_OF_BOUNDS,see.getMessageCode())__		}_	};this,test,is,checking,that,with,the,changes,for,9751,that,the,refactoring,in,indexer,is,coping,correctly,for,references,beyond,collection,boundaries;test,public,void,collection,growing,via,indexer,spr9751,instance,new,spr9751,standard,evaluation,context,ctx,new,standard,evaluation,context,instance,expression,parser,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,expression,e,parser,parse,expression,list,of,strings,index3,def,e,get,value,ctx,assert,equals,2,instance,list,of,strings,size,assert,equals,def,instance,list,of,strings,get,1,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,e,parser,parse,expression,list,of,strings,0,string,value,e,get,value,ctx,string,class,assert,equals,abc,value,e,parser,parse,expression,list,of,strings,1,value,e,get,value,ctx,string,class,assert,equals,def,value,e,parser,parse,expression,list,of,strings,2,value,e,get,value,ctx,string,class,assert,equals,value,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,false,false,e,parser,parse,expression,list,of,strings,3,try,e,get,value,ctx,string,class,fail,catch,spel,evaluation,exception,see,assert,equals,spel,message,see,get,message,code
EvaluationTests -> @Test 	public void collectionGrowingViaIndexer();1425759378;This test is checking that with the changes for 9751 that the refactoring in Indexer is_coping correctly for references beyond collection boundaries.;@Test_	public void collectionGrowingViaIndexer() {_		Spr9751 instance = new Spr9751()___		_		StandardEvaluationContext ctx = new StandardEvaluationContext(instance)__		ExpressionParser parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		Expression e =  parser.parseExpression("listOfStrings[++index3]='def'")__		e.getValue(ctx)__		assertEquals(2,instance.listOfStrings.size())__		assertEquals("def",instance.listOfStrings.get(1))___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		e =  parser.parseExpression("listOfStrings[0]")__		String value = e.getValue(ctx,String.class)__		assertEquals("abc",value)__		e =  parser.parseExpression("listOfStrings[1]")__		value = e.getValue(ctx,String.class)__		assertEquals("def",value)__		e =  parser.parseExpression("listOfStrings[2]")__		value = e.getValue(ctx,String.class)__		assertEquals("",value)___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(false, false))__		e =  parser.parseExpression("listOfStrings[3]")__		try {_			e.getValue(ctx,String.class)__			fail()__		} catch (SpelEvaluationException see) {_			assertEquals(SpelMessage.COLLECTION_INDEX_OUT_OF_BOUNDS,see.getMessageCode())__		}_	};this,test,is,checking,that,with,the,changes,for,9751,that,the,refactoring,in,indexer,is,coping,correctly,for,references,beyond,collection,boundaries;test,public,void,collection,growing,via,indexer,spr9751,instance,new,spr9751,standard,evaluation,context,ctx,new,standard,evaluation,context,instance,expression,parser,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,expression,e,parser,parse,expression,list,of,strings,index3,def,e,get,value,ctx,assert,equals,2,instance,list,of,strings,size,assert,equals,def,instance,list,of,strings,get,1,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,e,parser,parse,expression,list,of,strings,0,string,value,e,get,value,ctx,string,class,assert,equals,abc,value,e,parser,parse,expression,list,of,strings,1,value,e,get,value,ctx,string,class,assert,equals,def,value,e,parser,parse,expression,list,of,strings,2,value,e,get,value,ctx,string,class,assert,equals,value,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,false,false,e,parser,parse,expression,list,of,strings,3,try,e,get,value,ctx,string,class,fail,catch,spel,evaluation,exception,see,assert,equals,spel,message,see,get,message,code
EvaluationTests -> @Test 	public void collectionGrowingViaIndexer();1458843770;This test is checking that with the changes for 9751 that the refactoring in Indexer is_coping correctly for references beyond collection boundaries.;@Test_	public void collectionGrowingViaIndexer() {_		Spr9751 instance = new Spr9751()___		_		StandardEvaluationContext ctx = new StandardEvaluationContext(instance)__		ExpressionParser parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		Expression e =  parser.parseExpression("listOfStrings[++index3]='def'")__		e.getValue(ctx)__		assertEquals(2,instance.listOfStrings.size())__		assertEquals("def",instance.listOfStrings.get(1))___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		e =  parser.parseExpression("listOfStrings[0]")__		String value = e.getValue(ctx,String.class)__		assertEquals("abc",value)__		e =  parser.parseExpression("listOfStrings[1]")__		value = e.getValue(ctx,String.class)__		assertEquals("def",value)__		e =  parser.parseExpression("listOfStrings[2]")__		value = e.getValue(ctx,String.class)__		assertEquals("",value)___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(false, false))__		e =  parser.parseExpression("listOfStrings[3]")__		try {_			e.getValue(ctx,String.class)__			fail()__		}_		catch (SpelEvaluationException see) {_			assertEquals(SpelMessage.COLLECTION_INDEX_OUT_OF_BOUNDS,see.getMessageCode())__		}_	};this,test,is,checking,that,with,the,changes,for,9751,that,the,refactoring,in,indexer,is,coping,correctly,for,references,beyond,collection,boundaries;test,public,void,collection,growing,via,indexer,spr9751,instance,new,spr9751,standard,evaluation,context,ctx,new,standard,evaluation,context,instance,expression,parser,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,expression,e,parser,parse,expression,list,of,strings,index3,def,e,get,value,ctx,assert,equals,2,instance,list,of,strings,size,assert,equals,def,instance,list,of,strings,get,1,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,e,parser,parse,expression,list,of,strings,0,string,value,e,get,value,ctx,string,class,assert,equals,abc,value,e,parser,parse,expression,list,of,strings,1,value,e,get,value,ctx,string,class,assert,equals,def,value,e,parser,parse,expression,list,of,strings,2,value,e,get,value,ctx,string,class,assert,equals,value,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,false,false,e,parser,parse,expression,list,of,strings,3,try,e,get,value,ctx,string,class,fail,catch,spel,evaluation,exception,see,assert,equals,spel,message,see,get,message,code
EvaluationTests -> @Test 	public void collectionGrowingViaIndexer();1467730834;This test is checking that with the changes for 9751 that the refactoring in Indexer is_coping correctly for references beyond collection boundaries.;@Test_	public void collectionGrowingViaIndexer() {_		Spr9751 instance = new Spr9751()___		_		StandardEvaluationContext ctx = new StandardEvaluationContext(instance)__		ExpressionParser parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		Expression e =  parser.parseExpression("listOfStrings[++index3]='def'")__		e.getValue(ctx)__		assertEquals(2,instance.listOfStrings.size())__		assertEquals("def",instance.listOfStrings.get(1))___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		e =  parser.parseExpression("listOfStrings[0]")__		String value = e.getValue(ctx,String.class)__		assertEquals("abc",value)__		e =  parser.parseExpression("listOfStrings[1]")__		value = e.getValue(ctx,String.class)__		assertEquals("def",value)__		e =  parser.parseExpression("listOfStrings[2]")__		value = e.getValue(ctx,String.class)__		assertEquals("",value)___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(false, false))__		e =  parser.parseExpression("listOfStrings[3]")__		try {_			e.getValue(ctx,String.class)__			fail()__		}_		catch (SpelEvaluationException see) {_			assertEquals(SpelMessage.COLLECTION_INDEX_OUT_OF_BOUNDS,see.getMessageCode())__		}_	};this,test,is,checking,that,with,the,changes,for,9751,that,the,refactoring,in,indexer,is,coping,correctly,for,references,beyond,collection,boundaries;test,public,void,collection,growing,via,indexer,spr9751,instance,new,spr9751,standard,evaluation,context,ctx,new,standard,evaluation,context,instance,expression,parser,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,expression,e,parser,parse,expression,list,of,strings,index3,def,e,get,value,ctx,assert,equals,2,instance,list,of,strings,size,assert,equals,def,instance,list,of,strings,get,1,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,e,parser,parse,expression,list,of,strings,0,string,value,e,get,value,ctx,string,class,assert,equals,abc,value,e,parser,parse,expression,list,of,strings,1,value,e,get,value,ctx,string,class,assert,equals,def,value,e,parser,parse,expression,list,of,strings,2,value,e,get,value,ctx,string,class,assert,equals,value,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,false,false,e,parser,parse,expression,list,of,strings,3,try,e,get,value,ctx,string,class,fail,catch,spel,evaluation,exception,see,assert,equals,spel,message,see,get,message,code
EvaluationTests -> @Test 	public void collectionGrowingViaIndexer();1496837955;This test is checking that with the changes for 9751 that the refactoring in Indexer is_coping correctly for references beyond collection boundaries.;@Test_	public void collectionGrowingViaIndexer() {_		Spr9751 instance = new Spr9751()___		_		StandardEvaluationContext ctx = new StandardEvaluationContext(instance)__		ExpressionParser parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		Expression e =  parser.parseExpression("listOfStrings[++index3]='def'")__		e.getValue(ctx)__		assertEquals(2,instance.listOfStrings.size())__		assertEquals("def",instance.listOfStrings.get(1))___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		e =  parser.parseExpression("listOfStrings[0]")__		String value = e.getValue(ctx,String.class)__		assertEquals("abc",value)__		e =  parser.parseExpression("listOfStrings[1]")__		value = e.getValue(ctx,String.class)__		assertEquals("def",value)__		e =  parser.parseExpression("listOfStrings[2]")__		value = e.getValue(ctx,String.class)__		assertEquals("",value)___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(false, false))__		e =  parser.parseExpression("listOfStrings[3]")__		try {_			e.getValue(ctx,String.class)__			fail()__		}_		catch (SpelEvaluationException see) {_			assertEquals(SpelMessage.COLLECTION_INDEX_OUT_OF_BOUNDS,see.getMessageCode())__		}_	};this,test,is,checking,that,with,the,changes,for,9751,that,the,refactoring,in,indexer,is,coping,correctly,for,references,beyond,collection,boundaries;test,public,void,collection,growing,via,indexer,spr9751,instance,new,spr9751,standard,evaluation,context,ctx,new,standard,evaluation,context,instance,expression,parser,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,expression,e,parser,parse,expression,list,of,strings,index3,def,e,get,value,ctx,assert,equals,2,instance,list,of,strings,size,assert,equals,def,instance,list,of,strings,get,1,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,e,parser,parse,expression,list,of,strings,0,string,value,e,get,value,ctx,string,class,assert,equals,abc,value,e,parser,parse,expression,list,of,strings,1,value,e,get,value,ctx,string,class,assert,equals,def,value,e,parser,parse,expression,list,of,strings,2,value,e,get,value,ctx,string,class,assert,equals,value,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,false,false,e,parser,parse,expression,list,of,strings,3,try,e,get,value,ctx,string,class,fail,catch,spel,evaluation,exception,see,assert,equals,spel,message,see,get,message,code
EvaluationTests -> @Test 	public void collectionGrowingViaIndexer();1518279448;This test is checking that with the changes for 9751 that the refactoring in Indexer is_coping correctly for references beyond collection boundaries.;@Test_	public void collectionGrowingViaIndexer() {_		Spr9751 instance = new Spr9751()___		_		StandardEvaluationContext ctx = new StandardEvaluationContext(instance)__		ExpressionParser parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		Expression e =  parser.parseExpression("listOfStrings[++index3]='def'")__		e.getValue(ctx)__		assertEquals(2,instance.listOfStrings.size())__		assertEquals("def",instance.listOfStrings.get(1))___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		e =  parser.parseExpression("listOfStrings[0]")__		String value = e.getValue(ctx,String.class)__		assertEquals("abc",value)__		e =  parser.parseExpression("listOfStrings[1]")__		value = e.getValue(ctx,String.class)__		assertEquals("def",value)__		e =  parser.parseExpression("listOfStrings[2]")__		value = e.getValue(ctx,String.class)__		assertEquals("",value)___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(false, false))__		e =  parser.parseExpression("listOfStrings[3]")__		try {_			e.getValue(ctx,String.class)__			fail()__		}_		catch (SpelEvaluationException see) {_			assertEquals(SpelMessage.COLLECTION_INDEX_OUT_OF_BOUNDS,see.getMessageCode())__		}_	};this,test,is,checking,that,with,the,changes,for,9751,that,the,refactoring,in,indexer,is,coping,correctly,for,references,beyond,collection,boundaries;test,public,void,collection,growing,via,indexer,spr9751,instance,new,spr9751,standard,evaluation,context,ctx,new,standard,evaluation,context,instance,expression,parser,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,expression,e,parser,parse,expression,list,of,strings,index3,def,e,get,value,ctx,assert,equals,2,instance,list,of,strings,size,assert,equals,def,instance,list,of,strings,get,1,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,e,parser,parse,expression,list,of,strings,0,string,value,e,get,value,ctx,string,class,assert,equals,abc,value,e,parser,parse,expression,list,of,strings,1,value,e,get,value,ctx,string,class,assert,equals,def,value,e,parser,parse,expression,list,of,strings,2,value,e,get,value,ctx,string,class,assert,equals,value,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,false,false,e,parser,parse,expression,list,of,strings,3,try,e,get,value,ctx,string,class,fail,catch,spel,evaluation,exception,see,assert,equals,spel,message,see,get,message,code
EvaluationTests -> @Test 	public void collectionGrowingViaIndexer();1518283060;This test is checking that with the changes for 9751 that the refactoring in Indexer is_coping correctly for references beyond collection boundaries.;@Test_	public void collectionGrowingViaIndexer() {_		Spr9751 instance = new Spr9751()___		_		StandardEvaluationContext ctx = new StandardEvaluationContext(instance)__		ExpressionParser parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		Expression e =  parser.parseExpression("listOfStrings[++index3]='def'")__		e.getValue(ctx)__		assertEquals(2,instance.listOfStrings.size())__		assertEquals("def",instance.listOfStrings.get(1))___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		e =  parser.parseExpression("listOfStrings[0]")__		String value = e.getValue(ctx,String.class)__		assertEquals("abc",value)__		e =  parser.parseExpression("listOfStrings[1]")__		value = e.getValue(ctx,String.class)__		assertEquals("def",value)__		e =  parser.parseExpression("listOfStrings[2]")__		value = e.getValue(ctx,String.class)__		assertEquals("",value)___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(false, false))__		e =  parser.parseExpression("listOfStrings[3]")__		try {_			e.getValue(ctx,String.class)__			fail()__		}_		catch (SpelEvaluationException see) {_			assertEquals(SpelMessage.COLLECTION_INDEX_OUT_OF_BOUNDS,see.getMessageCode())__		}_	};this,test,is,checking,that,with,the,changes,for,9751,that,the,refactoring,in,indexer,is,coping,correctly,for,references,beyond,collection,boundaries;test,public,void,collection,growing,via,indexer,spr9751,instance,new,spr9751,standard,evaluation,context,ctx,new,standard,evaluation,context,instance,expression,parser,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,expression,e,parser,parse,expression,list,of,strings,index3,def,e,get,value,ctx,assert,equals,2,instance,list,of,strings,size,assert,equals,def,instance,list,of,strings,get,1,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,e,parser,parse,expression,list,of,strings,0,string,value,e,get,value,ctx,string,class,assert,equals,abc,value,e,parser,parse,expression,list,of,strings,1,value,e,get,value,ctx,string,class,assert,equals,def,value,e,parser,parse,expression,list,of,strings,2,value,e,get,value,ctx,string,class,assert,equals,value,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,false,false,e,parser,parse,expression,list,of,strings,3,try,e,get,value,ctx,string,class,fail,catch,spel,evaluation,exception,see,assert,equals,spel,message,see,get,message,code
EvaluationTests -> @Test 	public void collectionGrowingViaIndexer();1520090085;This test is checking that with the changes for 9751 that the refactoring in Indexer is_coping correctly for references beyond collection boundaries.;@Test_	public void collectionGrowingViaIndexer() {_		Spr9751 instance = new Spr9751()___		_		StandardEvaluationContext ctx = new StandardEvaluationContext(instance)__		ExpressionParser parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		Expression e =  parser.parseExpression("listOfStrings[++index3]='def'")__		e.getValue(ctx)__		assertEquals(2,instance.listOfStrings.size())__		assertEquals("def",instance.listOfStrings.get(1))___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		e =  parser.parseExpression("listOfStrings[0]")__		String value = e.getValue(ctx,String.class)__		assertEquals("abc",value)__		e =  parser.parseExpression("listOfStrings[1]")__		value = e.getValue(ctx,String.class)__		assertEquals("def",value)__		e =  parser.parseExpression("listOfStrings[2]")__		value = e.getValue(ctx,String.class)__		assertEquals("",value)___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(false, false))__		e =  parser.parseExpression("listOfStrings[3]")__		try {_			e.getValue(ctx,String.class)__			fail()__		}_		catch (SpelEvaluationException see) {_			assertEquals(SpelMessage.COLLECTION_INDEX_OUT_OF_BOUNDS,see.getMessageCode())__		}_	};this,test,is,checking,that,with,the,changes,for,9751,that,the,refactoring,in,indexer,is,coping,correctly,for,references,beyond,collection,boundaries;test,public,void,collection,growing,via,indexer,spr9751,instance,new,spr9751,standard,evaluation,context,ctx,new,standard,evaluation,context,instance,expression,parser,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,expression,e,parser,parse,expression,list,of,strings,index3,def,e,get,value,ctx,assert,equals,2,instance,list,of,strings,size,assert,equals,def,instance,list,of,strings,get,1,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,e,parser,parse,expression,list,of,strings,0,string,value,e,get,value,ctx,string,class,assert,equals,abc,value,e,parser,parse,expression,list,of,strings,1,value,e,get,value,ctx,string,class,assert,equals,def,value,e,parser,parse,expression,list,of,strings,2,value,e,get,value,ctx,string,class,assert,equals,value,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,false,false,e,parser,parse,expression,list,of,strings,3,try,e,get,value,ctx,string,class,fail,catch,spel,evaluation,exception,see,assert,equals,spel,message,see,get,message,code
EvaluationTests -> @Test 	public void collectionGrowingViaIndexer();1520094828;This test is checking that with the changes for 9751 that the refactoring in Indexer is_coping correctly for references beyond collection boundaries.;@Test_	public void collectionGrowingViaIndexer() {_		Spr9751 instance = new Spr9751()___		_		StandardEvaluationContext ctx = new StandardEvaluationContext(instance)__		ExpressionParser parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		Expression e =  parser.parseExpression("listOfStrings[++index3]='def'")__		e.getValue(ctx)__		assertEquals(2,instance.listOfStrings.size())__		assertEquals("def",instance.listOfStrings.get(1))___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		e =  parser.parseExpression("listOfStrings[0]")__		String value = e.getValue(ctx, String.class)__		assertEquals("abc",value)__		e =  parser.parseExpression("listOfStrings[1]")__		value = e.getValue(ctx, String.class)__		assertEquals("def",value)__		e =  parser.parseExpression("listOfStrings[2]")__		value = e.getValue(ctx, String.class)__		assertEquals("",value)___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(false, false))__		e =  parser.parseExpression("listOfStrings[3]")__		try {_			e.getValue(ctx, String.class)__			fail()__		}_		catch (SpelEvaluationException see) {_			assertEquals(SpelMessage.COLLECTION_INDEX_OUT_OF_BOUNDS, see.getMessageCode())__		}_	};this,test,is,checking,that,with,the,changes,for,9751,that,the,refactoring,in,indexer,is,coping,correctly,for,references,beyond,collection,boundaries;test,public,void,collection,growing,via,indexer,spr9751,instance,new,spr9751,standard,evaluation,context,ctx,new,standard,evaluation,context,instance,expression,parser,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,expression,e,parser,parse,expression,list,of,strings,index3,def,e,get,value,ctx,assert,equals,2,instance,list,of,strings,size,assert,equals,def,instance,list,of,strings,get,1,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,e,parser,parse,expression,list,of,strings,0,string,value,e,get,value,ctx,string,class,assert,equals,abc,value,e,parser,parse,expression,list,of,strings,1,value,e,get,value,ctx,string,class,assert,equals,def,value,e,parser,parse,expression,list,of,strings,2,value,e,get,value,ctx,string,class,assert,equals,value,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,false,false,e,parser,parse,expression,list,of,strings,3,try,e,get,value,ctx,string,class,fail,catch,spel,evaluation,exception,see,assert,equals,spel,message,see,get,message,code
EvaluationTests -> @Test 	public void collectionGrowingViaIndexer();1521632355;This test is checking that with the changes for 9751 that the refactoring in Indexer is_coping correctly for references beyond collection boundaries.;@Test_	public void collectionGrowingViaIndexer() {_		Spr9751 instance = new Spr9751()___		_		StandardEvaluationContext ctx = new StandardEvaluationContext(instance)__		ExpressionParser parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		Expression e =  parser.parseExpression("listOfStrings[++index3]='def'")__		e.getValue(ctx)__		assertEquals(2,instance.listOfStrings.size())__		assertEquals("def",instance.listOfStrings.get(1))___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		e =  parser.parseExpression("listOfStrings[0]")__		String value = e.getValue(ctx, String.class)__		assertEquals("abc",value)__		e =  parser.parseExpression("listOfStrings[1]")__		value = e.getValue(ctx, String.class)__		assertEquals("def",value)__		e =  parser.parseExpression("listOfStrings[2]")__		value = e.getValue(ctx, String.class)__		assertEquals("",value)___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(false, false))__		e =  parser.parseExpression("listOfStrings[3]")__		try {_			e.getValue(ctx, String.class)__			fail()__		}_		catch (SpelEvaluationException see) {_			assertEquals(SpelMessage.COLLECTION_INDEX_OUT_OF_BOUNDS, see.getMessageCode())__		}_	};this,test,is,checking,that,with,the,changes,for,9751,that,the,refactoring,in,indexer,is,coping,correctly,for,references,beyond,collection,boundaries;test,public,void,collection,growing,via,indexer,spr9751,instance,new,spr9751,standard,evaluation,context,ctx,new,standard,evaluation,context,instance,expression,parser,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,expression,e,parser,parse,expression,list,of,strings,index3,def,e,get,value,ctx,assert,equals,2,instance,list,of,strings,size,assert,equals,def,instance,list,of,strings,get,1,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,e,parser,parse,expression,list,of,strings,0,string,value,e,get,value,ctx,string,class,assert,equals,abc,value,e,parser,parse,expression,list,of,strings,1,value,e,get,value,ctx,string,class,assert,equals,def,value,e,parser,parse,expression,list,of,strings,2,value,e,get,value,ctx,string,class,assert,equals,value,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,false,false,e,parser,parse,expression,list,of,strings,3,try,e,get,value,ctx,string,class,fail,catch,spel,evaluation,exception,see,assert,equals,spel,message,see,get,message,code
EvaluationTests -> @Test 	public void collectionGrowingViaIndexer();1523956215;This test is checking that with the changes for 9751 that the refactoring in Indexer is_coping correctly for references beyond collection boundaries.;@Test_	public void collectionGrowingViaIndexer() {_		Spr9751 instance = new Spr9751()___		_		StandardEvaluationContext ctx = new StandardEvaluationContext(instance)__		ExpressionParser parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		Expression e =  parser.parseExpression("listOfStrings[++index3]='def'")__		e.getValue(ctx)__		assertEquals(2,instance.listOfStrings.size())__		assertEquals("def",instance.listOfStrings.get(1))___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(true, true))__		e =  parser.parseExpression("listOfStrings[0]")__		String value = e.getValue(ctx, String.class)__		assertEquals("abc",value)__		e =  parser.parseExpression("listOfStrings[1]")__		value = e.getValue(ctx, String.class)__		assertEquals("def",value)__		e =  parser.parseExpression("listOfStrings[2]")__		value = e.getValue(ctx, String.class)__		assertEquals("",value)___		_		ctx = new StandardEvaluationContext(instance)__		parser = new SpelExpressionParser(new SpelParserConfiguration(false, false))__		e =  parser.parseExpression("listOfStrings[3]")__		try {_			e.getValue(ctx, String.class)__			fail()__		}_		catch (SpelEvaluationException see) {_			assertEquals(SpelMessage.COLLECTION_INDEX_OUT_OF_BOUNDS, see.getMessageCode())__		}_	};this,test,is,checking,that,with,the,changes,for,9751,that,the,refactoring,in,indexer,is,coping,correctly,for,references,beyond,collection,boundaries;test,public,void,collection,growing,via,indexer,spr9751,instance,new,spr9751,standard,evaluation,context,ctx,new,standard,evaluation,context,instance,expression,parser,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,expression,e,parser,parse,expression,list,of,strings,index3,def,e,get,value,ctx,assert,equals,2,instance,list,of,strings,size,assert,equals,def,instance,list,of,strings,get,1,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,true,true,e,parser,parse,expression,list,of,strings,0,string,value,e,get,value,ctx,string,class,assert,equals,abc,value,e,parser,parse,expression,list,of,strings,1,value,e,get,value,ctx,string,class,assert,equals,def,value,e,parser,parse,expression,list,of,strings,2,value,e,get,value,ctx,string,class,assert,equals,value,ctx,new,standard,evaluation,context,instance,parser,new,spel,expression,parser,new,spel,parser,configuration,false,false,e,parser,parse,expression,list,of,strings,3,try,e,get,value,ctx,string,class,fail,catch,spel,evaluation,exception,see,assert,equals,spel,message,see,get,message,code
EvaluationTests -> @Test 	public void customMethodFilter();1520094828;Verifies behavior requested in SPR-9621.;@Test_	public void customMethodFilter() {_		StandardEvaluationContext context = new StandardEvaluationContext()___		_		List<MethodResolver> customResolvers = new ArrayList<>()__		customResolvers.add(new CustomMethodResolver())__		context.setMethodResolvers(customResolvers)___		_		__		_		MethodFilter filter = new CustomMethodFilter()__		try {_			context.registerMethodFilter(String.class, filter)__			fail("should have failed")__		}_		catch (IllegalStateException ise) {_			assertEquals(_					"Method filter cannot be set as the reflective method resolver is not in use",_					ise.getMessage())__		}_	};verifies,behavior,requested,in,spr,9621;test,public,void,custom,method,filter,standard,evaluation,context,context,new,standard,evaluation,context,list,method,resolver,custom,resolvers,new,array,list,custom,resolvers,add,new,custom,method,resolver,context,set,method,resolvers,custom,resolvers,method,filter,filter,new,custom,method,filter,try,context,register,method,filter,string,class,filter,fail,should,have,failed,catch,illegal,state,exception,ise,assert,equals,method,filter,cannot,be,set,as,the,reflective,method,resolver,is,not,in,use,ise,get,message
EvaluationTests -> @Test 	public void customMethodFilter();1521632355;Verifies behavior requested in SPR-9621.;@Test_	public void customMethodFilter() {_		StandardEvaluationContext context = new StandardEvaluationContext()___		_		List<MethodResolver> customResolvers = new ArrayList<>()__		customResolvers.add(new CustomMethodResolver())__		context.setMethodResolvers(customResolvers)___		_		__		_		MethodFilter filter = new CustomMethodFilter()__		try {_			context.registerMethodFilter(String.class, filter)__			fail("should have failed")__		}_		catch (IllegalStateException ise) {_			assertEquals(_					"Method filter cannot be set as the reflective method resolver is not in use",_					ise.getMessage())__		}_	};verifies,behavior,requested,in,spr,9621;test,public,void,custom,method,filter,standard,evaluation,context,context,new,standard,evaluation,context,list,method,resolver,custom,resolvers,new,array,list,custom,resolvers,add,new,custom,method,resolver,context,set,method,resolvers,custom,resolvers,method,filter,filter,new,custom,method,filter,try,context,register,method,filter,string,class,filter,fail,should,have,failed,catch,illegal,state,exception,ise,assert,equals,method,filter,cannot,be,set,as,the,reflective,method,resolver,is,not,in,use,ise,get,message
EvaluationTests -> @Test 	public void customMethodFilter();1523956215;Verifies behavior requested in SPR-9621.;@Test_	public void customMethodFilter() {_		StandardEvaluationContext context = new StandardEvaluationContext()___		_		List<MethodResolver> customResolvers = new ArrayList<>()__		customResolvers.add(new CustomMethodResolver())__		context.setMethodResolvers(customResolvers)___		_		__		_		MethodFilter filter = new CustomMethodFilter()__		try {_			context.registerMethodFilter(String.class, filter)__			fail("should have failed")__		}_		catch (IllegalStateException ise) {_			assertEquals(_					"Method filter cannot be set as the reflective method resolver is not in use",_					ise.getMessage())__		}_	};verifies,behavior,requested,in,spr,9621;test,public,void,custom,method,filter,standard,evaluation,context,context,new,standard,evaluation,context,list,method,resolver,custom,resolvers,new,array,list,custom,resolvers,add,new,custom,method,resolver,context,set,method,resolvers,custom,resolvers,method,filter,filter,new,custom,method,filter,try,context,register,method,filter,string,class,filter,fail,should,have,failed,catch,illegal,state,exception,ise,assert,equals,method,filter,cannot,be,set,as,the,reflective,method,resolver,is,not,in,use,ise,get,message
