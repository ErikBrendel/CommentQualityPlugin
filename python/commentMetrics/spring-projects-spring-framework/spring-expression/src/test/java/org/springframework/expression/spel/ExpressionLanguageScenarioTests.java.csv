# id;timestamp;commentText;codeText;commentWords;codeWords
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_AddingYourOwnPropertyResolvers_1() throws Exception;1328020251;Scenario: add a property resolver that will get called in the resolver chain, this one only supports reading.;@Test_	public void testScenario_AddingYourOwnPropertyResolvers_1() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()___		ctx.addPropertyAccessor(new FruitColourAccessor())__		Expression expr = parser.parseRaw("orange")__		Object value = expr.getValue(ctx)__		Assert.assertEquals(Color.orange, value)___		try {_			expr.setValue(ctx, Color.blue)__			Assert.fail("Should not be allowed to set oranges to be blue !")__		} catch (SpelEvaluationException ee) {_			Assert.assertEquals(ee.getMessageCode(), SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL)__		}_	};scenario,add,a,property,resolver,that,will,get,called,in,the,resolver,chain,this,one,only,supports,reading;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,add,property,accessor,new,fruit,colour,accessor,expression,expr,parser,parse,raw,orange,object,value,expr,get,value,ctx,assert,assert,equals,color,orange,value,try,expr,set,value,ctx,color,blue,assert,fail,should,not,be,allowed,to,set,oranges,to,be,blue,catch,spel,evaluation,exception,ee,assert,assert,equals,ee,get,message,code,spel,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_AddingYourOwnPropertyResolvers_1() throws Exception;1356735495;Scenario: add a property resolver that will get called in the resolver chain, this one only supports reading.;@Test_	public void testScenario_AddingYourOwnPropertyResolvers_1() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()___		ctx.addPropertyAccessor(new FruitColourAccessor())__		Expression expr = parser.parseRaw("orange")__		Object value = expr.getValue(ctx)__		Assert.assertEquals(Color.orange, value)___		try {_			expr.setValue(ctx, Color.blue)__			Assert.fail("Should not be allowed to set oranges to be blue !")__		} catch (SpelEvaluationException ee) {_			Assert.assertEquals(ee.getMessageCode(), SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL)__		}_	};scenario,add,a,property,resolver,that,will,get,called,in,the,resolver,chain,this,one,only,supports,reading;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,add,property,accessor,new,fruit,colour,accessor,expression,expr,parser,parse,raw,orange,object,value,expr,get,value,ctx,assert,assert,equals,color,orange,value,try,expr,set,value,ctx,color,blue,assert,fail,should,not,be,allowed,to,set,oranges,to,be,blue,catch,spel,evaluation,exception,ee,assert,assert,equals,ee,get,message,code,spel,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_AddingYourOwnPropertyResolvers_1() throws Exception;1357119417;Scenario: add a property resolver that will get called in the resolver chain, this one only supports reading.;@Test_	public void testScenario_AddingYourOwnPropertyResolvers_1() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()___		ctx.addPropertyAccessor(new FruitColourAccessor())__		Expression expr = parser.parseRaw("orange")__		Object value = expr.getValue(ctx)__		assertEquals(Color.orange, value)___		try {_			expr.setValue(ctx, Color.blue)__			fail("Should not be allowed to set oranges to be blue !")__		} catch (SpelEvaluationException ee) {_			assertEquals(ee.getMessageCode(), SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL)__		}_	};scenario,add,a,property,resolver,that,will,get,called,in,the,resolver,chain,this,one,only,supports,reading;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,add,property,accessor,new,fruit,colour,accessor,expression,expr,parser,parse,raw,orange,object,value,expr,get,value,ctx,assert,equals,color,orange,value,try,expr,set,value,ctx,color,blue,fail,should,not,be,allowed,to,set,oranges,to,be,blue,catch,spel,evaluation,exception,ee,assert,equals,ee,get,message,code,spel,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_AddingYourOwnPropertyResolvers_1() throws Exception;1391876651;Scenario: add a property resolver that will get called in the resolver chain, this one only supports reading.;@Test_	public void testScenario_AddingYourOwnPropertyResolvers_1() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()___		ctx.addPropertyAccessor(new FruitColourAccessor())__		Expression expr = parser.parseRaw("orange")__		Object value = expr.getValue(ctx)__		assertEquals(Color.orange, value)___		try {_			expr.setValue(ctx, Color.blue)__			fail("Should not be allowed to set oranges to be blue !")__		} catch (SpelEvaluationException ee) {_			assertEquals(ee.getMessageCode(), SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL)__		}_	};scenario,add,a,property,resolver,that,will,get,called,in,the,resolver,chain,this,one,only,supports,reading;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,add,property,accessor,new,fruit,colour,accessor,expression,expr,parser,parse,raw,orange,object,value,expr,get,value,ctx,assert,equals,color,orange,value,try,expr,set,value,ctx,color,blue,fail,should,not,be,allowed,to,set,oranges,to,be,blue,catch,spel,evaluation,exception,ee,assert,equals,ee,get,message,code,spel,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_AddingYourOwnPropertyResolvers_1() throws Exception;1413848647;Scenario: add a property resolver that will get called in the resolver chain, this one only supports reading.;@Test_	public void testScenario_AddingYourOwnPropertyResolvers_1() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()___		ctx.addPropertyAccessor(new FruitColourAccessor())__		Expression expr = parser.parseRaw("orange")__		Object value = expr.getValue(ctx)__		assertEquals(Color.orange, value)___		try {_			expr.setValue(ctx, Color.blue)__			fail("Should not be allowed to set oranges to be blue !")__		} catch (SpelEvaluationException ee) {_			assertEquals(ee.getMessageCode(), SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL)__		}_	};scenario,add,a,property,resolver,that,will,get,called,in,the,resolver,chain,this,one,only,supports,reading;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,add,property,accessor,new,fruit,colour,accessor,expression,expr,parser,parse,raw,orange,object,value,expr,get,value,ctx,assert,equals,color,orange,value,try,expr,set,value,ctx,color,blue,fail,should,not,be,allowed,to,set,oranges,to,be,blue,catch,spel,evaluation,exception,ee,assert,equals,ee,get,message,code,spel,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_AddingYourOwnPropertyResolvers_1() throws Exception;1458843770;Scenario: add a property resolver that will get called in the resolver chain, this one only supports reading.;@Test_	public void testScenario_AddingYourOwnPropertyResolvers_1() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()___		ctx.addPropertyAccessor(new FruitColourAccessor())__		Expression expr = parser.parseRaw("orange")__		Object value = expr.getValue(ctx)__		assertEquals(Color.orange, value)___		try {_			expr.setValue(ctx, Color.blue)__			fail("Should not be allowed to set oranges to be blue !")__		}_		catch (SpelEvaluationException ee) {_			assertEquals(ee.getMessageCode(), SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL)__		}_	};scenario,add,a,property,resolver,that,will,get,called,in,the,resolver,chain,this,one,only,supports,reading;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,add,property,accessor,new,fruit,colour,accessor,expression,expr,parser,parse,raw,orange,object,value,expr,get,value,ctx,assert,equals,color,orange,value,try,expr,set,value,ctx,color,blue,fail,should,not,be,allowed,to,set,oranges,to,be,blue,catch,spel,evaluation,exception,ee,assert,equals,ee,get,message,code,spel,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_AddingYourOwnPropertyResolvers_1() throws Exception;1461047077;Scenario: add a property resolver that will get called in the resolver chain, this one only supports reading.;@Test_	public void testScenario_AddingYourOwnPropertyResolvers_1() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()___		ctx.addPropertyAccessor(new FruitColourAccessor())__		Expression expr = parser.parseRaw("orange")__		Object value = expr.getValue(ctx)__		assertEquals(Color.orange, value)___		try {_			expr.setValue(ctx, Color.blue)__			fail("Should not be allowed to set oranges to be blue !")__		}_		catch (SpelEvaluationException ee) {_			assertEquals(ee.getMessageCode(), SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL)__		}_	};scenario,add,a,property,resolver,that,will,get,called,in,the,resolver,chain,this,one,only,supports,reading;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,add,property,accessor,new,fruit,colour,accessor,expression,expr,parser,parse,raw,orange,object,value,expr,get,value,ctx,assert,equals,color,orange,value,try,expr,set,value,ctx,color,blue,fail,should,not,be,allowed,to,set,oranges,to,be,blue,catch,spel,evaluation,exception,ee,assert,equals,ee,get,message,code,spel,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_AddingYourOwnPropertyResolvers_1() throws Exception;1467730834;Scenario: add a property resolver that will get called in the resolver chain, this one only supports reading.;@Test_	public void testScenario_AddingYourOwnPropertyResolvers_1() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()___		ctx.addPropertyAccessor(new FruitColourAccessor())__		Expression expr = parser.parseRaw("orange")__		Object value = expr.getValue(ctx)__		assertEquals(Color.orange, value)___		try {_			expr.setValue(ctx, Color.blue)__			fail("Should not be allowed to set oranges to be blue !")__		}_		catch (SpelEvaluationException ee) {_			assertEquals(ee.getMessageCode(), SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL)__		}_	};scenario,add,a,property,resolver,that,will,get,called,in,the,resolver,chain,this,one,only,supports,reading;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,add,property,accessor,new,fruit,colour,accessor,expression,expr,parser,parse,raw,orange,object,value,expr,get,value,ctx,assert,equals,color,orange,value,try,expr,set,value,ctx,color,blue,fail,should,not,be,allowed,to,set,oranges,to,be,blue,catch,spel,evaluation,exception,ee,assert,equals,ee,get,message,code,spel,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_AddingYourOwnPropertyResolvers_1() throws Exception;1518279448;Scenario: add a property resolver that will get called in the resolver chain, this one only supports reading.;@Test_	public void testScenario_AddingYourOwnPropertyResolvers_1() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()___		ctx.addPropertyAccessor(new FruitColourAccessor())__		Expression expr = parser.parseRaw("orange")__		Object value = expr.getValue(ctx)__		assertEquals(Color.orange, value)___		try {_			expr.setValue(ctx, Color.blue)__			fail("Should not be allowed to set oranges to be blue !")__		}_		catch (SpelEvaluationException ee) {_			assertEquals(SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL, ee.getMessageCode())__		}_	};scenario,add,a,property,resolver,that,will,get,called,in,the,resolver,chain,this,one,only,supports,reading;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,add,property,accessor,new,fruit,colour,accessor,expression,expr,parser,parse,raw,orange,object,value,expr,get,value,ctx,assert,equals,color,orange,value,try,expr,set,value,ctx,color,blue,fail,should,not,be,allowed,to,set,oranges,to,be,blue,catch,spel,evaluation,exception,ee,assert,equals,spel,message,ee,get,message,code
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_AddingYourOwnPropertyResolvers_1() throws Exception;1545727613;Scenario: add a property resolver that will get called in the resolver chain, this one only supports reading.;@Test_	public void testScenario_AddingYourOwnPropertyResolvers_1() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()___		ctx.addPropertyAccessor(new FruitColourAccessor())__		Expression expr = parser.parseRaw("orange")__		Object value = expr.getValue(ctx)__		assertEquals(Color.orange, value)___		try {_			expr.setValue(ctx, Color.blue)__			fail("Should not be allowed to set oranges to be blue !")__		}_		catch (SpelEvaluationException ee) {_			assertEquals(SpelMessage.PROPERTY_OR_FIELD_NOT_WRITABLE_ON_NULL, ee.getMessageCode())__		}_	};scenario,add,a,property,resolver,that,will,get,called,in,the,resolver,chain,this,one,only,supports,reading;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,add,property,accessor,new,fruit,colour,accessor,expression,expr,parser,parse,raw,orange,object,value,expr,get,value,ctx,assert,equals,color,orange,value,try,expr,set,value,ctx,color,blue,fail,should,not,be,allowed,to,set,oranges,to,be,blue,catch,spel,evaluation,exception,ee,assert,equals,spel,message,ee,get,message,code
ExpressionLanguageScenarioTests -> FruitColourAccessor -> @Override 		public Class<?>[] getSpecificTargetClasses();1356735495;Null means you might be able to read any property, if an earlier property resolver hasn't beaten you to it;@Override_		public Class<?>[] getSpecificTargetClasses() {_			return null__		};null,means,you,might,be,able,to,read,any,property,if,an,earlier,property,resolver,hasn,t,beaten,you,to,it;override,public,class,get,specific,target,classes,return,null
ExpressionLanguageScenarioTests -> FruitColourAccessor -> @Override 		public Class<?>[] getSpecificTargetClasses();1357119417;Null means you might be able to read any property, if an earlier property resolver hasn't beaten you to it;@Override_		public Class<?>[] getSpecificTargetClasses() {_			return null__		};null,means,you,might,be,able,to,read,any,property,if,an,earlier,property,resolver,hasn,t,beaten,you,to,it;override,public,class,get,specific,target,classes,return,null
ExpressionLanguageScenarioTests -> FruitColourAccessor -> @Override 		public Class<?>[] getSpecificTargetClasses();1391876651;Null means you might be able to read any property, if an earlier property resolver hasn't beaten you to it;@Override_		public Class<?>[] getSpecificTargetClasses() {_			return null__		};null,means,you,might,be,able,to,read,any,property,if,an,earlier,property,resolver,hasn,t,beaten,you,to,it;override,public,class,get,specific,target,classes,return,null
ExpressionLanguageScenarioTests -> FruitColourAccessor -> @Override 		public Class<?>[] getSpecificTargetClasses();1413848647;Null means you might be able to read any property, if an earlier property resolver hasn't beaten you to it;@Override_		public Class<?>[] getSpecificTargetClasses() {_			return null__		};null,means,you,might,be,able,to,read,any,property,if,an,earlier,property,resolver,hasn,t,beaten,you,to,it;override,public,class,get,specific,target,classes,return,null
ExpressionLanguageScenarioTests -> FruitColourAccessor -> @Override 		public Class<?>[] getSpecificTargetClasses();1458843770;Null means you might be able to read any property, if an earlier property resolver hasn't beaten you to it;@Override_		public Class<?>[] getSpecificTargetClasses() {_			return null__		};null,means,you,might,be,able,to,read,any,property,if,an,earlier,property,resolver,hasn,t,beaten,you,to,it;override,public,class,get,specific,target,classes,return,null
ExpressionLanguageScenarioTests -> FruitColourAccessor -> @Override 		public Class<?>[] getSpecificTargetClasses();1461047077;Null means you might be able to read any property, if an earlier property resolver hasn't beaten you to it;@Override_		public Class<?>[] getSpecificTargetClasses() {_			return null__		};null,means,you,might,be,able,to,read,any,property,if,an,earlier,property,resolver,hasn,t,beaten,you,to,it;override,public,class,get,specific,target,classes,return,null
ExpressionLanguageScenarioTests -> FruitColourAccessor -> @Override 		public Class<?>[] getSpecificTargetClasses();1467730834;Null means you might be able to read any property, if an earlier property resolver hasn't beaten you to it;@Override_		public Class<?>[] getSpecificTargetClasses() {_			return null__		};null,means,you,might,be,able,to,read,any,property,if,an,earlier,property,resolver,hasn,t,beaten,you,to,it;override,public,class,get,specific,target,classes,return,null
ExpressionLanguageScenarioTests -> FruitColourAccessor -> @Override 		public Class<?>[] getSpecificTargetClasses();1518279448;Null means you might be able to read any property, if an earlier property resolver hasn't beaten you to it;@Override_		public Class<?>[] getSpecificTargetClasses() {_			return null__		};null,means,you,might,be,able,to,read,any,property,if,an,earlier,property,resolver,hasn,t,beaten,you,to,it;override,public,class,get,specific,target,classes,return,null
ExpressionLanguageScenarioTests -> FruitColourAccessor -> @Override 		public Class<?>[] getSpecificTargetClasses();1545727613;Null means you might be able to read any property, if an earlier property resolver hasn't beaten you to it;@Override_		public Class<?>[] getSpecificTargetClasses() {_			return null__		};null,means,you,might,be,able,to,read,any,property,if,an,earlier,property,resolver,hasn,t,beaten,you,to,it;override,public,class,get,specific,target,classes,return,null
ExpressionLanguageScenarioTests -> VegetableColourAccessor -> @Override 		public Class<?>[] getSpecificTargetClasses();1356735495;Null means you might be able to read any property, if an earlier property resolver hasn't beaten you to it;@Override_		public Class<?>[] getSpecificTargetClasses() {_			return null__		};null,means,you,might,be,able,to,read,any,property,if,an,earlier,property,resolver,hasn,t,beaten,you,to,it;override,public,class,get,specific,target,classes,return,null
ExpressionLanguageScenarioTests -> VegetableColourAccessor -> @Override 		public Class<?>[] getSpecificTargetClasses();1357119417;Null means you might be able to read any property, if an earlier property resolver hasn't beaten you to it;@Override_		public Class<?>[] getSpecificTargetClasses() {_			return null__		};null,means,you,might,be,able,to,read,any,property,if,an,earlier,property,resolver,hasn,t,beaten,you,to,it;override,public,class,get,specific,target,classes,return,null
ExpressionLanguageScenarioTests -> VegetableColourAccessor -> @Override 		public Class<?>[] getSpecificTargetClasses();1391876651;Null means you might be able to read any property, if an earlier property resolver hasn't beaten you to it;@Override_		public Class<?>[] getSpecificTargetClasses() {_			return null__		};null,means,you,might,be,able,to,read,any,property,if,an,earlier,property,resolver,hasn,t,beaten,you,to,it;override,public,class,get,specific,target,classes,return,null
ExpressionLanguageScenarioTests -> VegetableColourAccessor -> @Override 		public Class<?>[] getSpecificTargetClasses();1413848647;Null means you might be able to read any property, if an earlier property resolver hasn't beaten you to it;@Override_		public Class<?>[] getSpecificTargetClasses() {_			return null__		};null,means,you,might,be,able,to,read,any,property,if,an,earlier,property,resolver,hasn,t,beaten,you,to,it;override,public,class,get,specific,target,classes,return,null
ExpressionLanguageScenarioTests -> VegetableColourAccessor -> @Override 		public Class<?>[] getSpecificTargetClasses();1458843770;Null means you might be able to read any property, if an earlier property resolver hasn't beaten you to it;@Override_		public Class<?>[] getSpecificTargetClasses() {_			return null__		};null,means,you,might,be,able,to,read,any,property,if,an,earlier,property,resolver,hasn,t,beaten,you,to,it;override,public,class,get,specific,target,classes,return,null
ExpressionLanguageScenarioTests -> VegetableColourAccessor -> @Override 		public Class<?>[] getSpecificTargetClasses();1461047077;Null means you might be able to read any property, if an earlier property resolver hasn't beaten you to it;@Override_		public Class<?>[] getSpecificTargetClasses() {_			return null__		};null,means,you,might,be,able,to,read,any,property,if,an,earlier,property,resolver,hasn,t,beaten,you,to,it;override,public,class,get,specific,target,classes,return,null
ExpressionLanguageScenarioTests -> VegetableColourAccessor -> @Override 		public Class<?>[] getSpecificTargetClasses();1467730834;Null means you might be able to read any property, if an earlier property resolver hasn't beaten you to it;@Override_		public Class<?>[] getSpecificTargetClasses() {_			return null__		};null,means,you,might,be,able,to,read,any,property,if,an,earlier,property,resolver,hasn,t,beaten,you,to,it;override,public,class,get,specific,target,classes,return,null
ExpressionLanguageScenarioTests -> VegetableColourAccessor -> @Override 		public Class<?>[] getSpecificTargetClasses();1518279448;Null means you might be able to read any property, if an earlier property resolver hasn't beaten you to it;@Override_		public Class<?>[] getSpecificTargetClasses() {_			return null__		};null,means,you,might,be,able,to,read,any,property,if,an,earlier,property,resolver,hasn,t,beaten,you,to,it;override,public,class,get,specific,target,classes,return,null
ExpressionLanguageScenarioTests -> VegetableColourAccessor -> @Override 		public Class<?>[] getSpecificTargetClasses();1545727613;Null means you might be able to read any property, if an earlier property resolver hasn't beaten you to it;@Override_		public Class<?>[] getSpecificTargetClasses() {_			return null__		};null,means,you,might,be,able,to,read,any,property,if,an,earlier,property,resolver,hasn,t,beaten,you,to,it;override,public,class,get,specific,target,classes,return,null
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_RegisteringJavaMethodsAsFunctionsAndCallingThem() throws SecurityException, NoSuchMethodException;1328020251;Scenario: using your own java methods and calling them from the expression;@Test_	public void testScenario_RegisteringJavaMethodsAsFunctionsAndCallingThem() throws SecurityException, NoSuchMethodException {_		try {_			_			SpelExpressionParser parser = new SpelExpressionParser()__			_			StandardEvaluationContext ctx = new StandardEvaluationContext()__			ctx.registerFunction("repeat",ExpressionLanguageScenarioTests.class.getDeclaredMethod("repeat",String.class))__			_			Expression expr = parser.parseRaw("#repeat('hello')")__			Object value = expr.getValue(ctx)__			Assert.assertEquals("hellohello", value)___		} catch (EvaluationException ee) {_			ee.printStackTrace()__			Assert.fail("Unexpected Exception: " + ee.getMessage())__		} catch (ParseException pe) {_			pe.printStackTrace()__			Assert.fail("Unexpected Exception: " + pe.getMessage())__		}_	};scenario,using,your,own,java,methods,and,calling,them,from,the,expression;test,public,void,throws,security,exception,no,such,method,exception,try,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,register,function,repeat,expression,language,scenario,tests,class,get,declared,method,repeat,string,class,expression,expr,parser,parse,raw,repeat,hello,object,value,expr,get,value,ctx,assert,assert,equals,hellohello,value,catch,evaluation,exception,ee,ee,print,stack,trace,assert,fail,unexpected,exception,ee,get,message,catch,parse,exception,pe,pe,print,stack,trace,assert,fail,unexpected,exception,pe,get,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_RegisteringJavaMethodsAsFunctionsAndCallingThem() throws SecurityException, NoSuchMethodException;1356735495;Scenario: using your own java methods and calling them from the expression;@Test_	public void testScenario_RegisteringJavaMethodsAsFunctionsAndCallingThem() throws SecurityException, NoSuchMethodException {_		try {_			_			SpelExpressionParser parser = new SpelExpressionParser()__			_			StandardEvaluationContext ctx = new StandardEvaluationContext()__			ctx.registerFunction("repeat",ExpressionLanguageScenarioTests.class.getDeclaredMethod("repeat",String.class))___			Expression expr = parser.parseRaw("#repeat('hello')")__			Object value = expr.getValue(ctx)__			Assert.assertEquals("hellohello", value)___		} catch (EvaluationException ee) {_			ee.printStackTrace()__			Assert.fail("Unexpected Exception: " + ee.getMessage())__		} catch (ParseException pe) {_			pe.printStackTrace()__			Assert.fail("Unexpected Exception: " + pe.getMessage())__		}_	};scenario,using,your,own,java,methods,and,calling,them,from,the,expression;test,public,void,throws,security,exception,no,such,method,exception,try,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,register,function,repeat,expression,language,scenario,tests,class,get,declared,method,repeat,string,class,expression,expr,parser,parse,raw,repeat,hello,object,value,expr,get,value,ctx,assert,assert,equals,hellohello,value,catch,evaluation,exception,ee,ee,print,stack,trace,assert,fail,unexpected,exception,ee,get,message,catch,parse,exception,pe,pe,print,stack,trace,assert,fail,unexpected,exception,pe,get,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_RegisteringJavaMethodsAsFunctionsAndCallingThem() throws SecurityException, NoSuchMethodException;1357119417;Scenario: using your own java methods and calling them from the expression;@Test_	public void testScenario_RegisteringJavaMethodsAsFunctionsAndCallingThem() throws SecurityException, NoSuchMethodException {_		try {_			_			SpelExpressionParser parser = new SpelExpressionParser()__			_			StandardEvaluationContext ctx = new StandardEvaluationContext()__			ctx.registerFunction("repeat",ExpressionLanguageScenarioTests.class.getDeclaredMethod("repeat",String.class))___			Expression expr = parser.parseRaw("#repeat('hello')")__			Object value = expr.getValue(ctx)__			assertEquals("hellohello", value)___		} catch (EvaluationException ee) {_			ee.printStackTrace()__			fail("Unexpected Exception: " + ee.getMessage())__		} catch (ParseException pe) {_			pe.printStackTrace()__			fail("Unexpected Exception: " + pe.getMessage())__		}_	};scenario,using,your,own,java,methods,and,calling,them,from,the,expression;test,public,void,throws,security,exception,no,such,method,exception,try,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,register,function,repeat,expression,language,scenario,tests,class,get,declared,method,repeat,string,class,expression,expr,parser,parse,raw,repeat,hello,object,value,expr,get,value,ctx,assert,equals,hellohello,value,catch,evaluation,exception,ee,ee,print,stack,trace,fail,unexpected,exception,ee,get,message,catch,parse,exception,pe,pe,print,stack,trace,fail,unexpected,exception,pe,get,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_RegisteringJavaMethodsAsFunctionsAndCallingThem() throws SecurityException, NoSuchMethodException;1391876651;Scenario: using your own java methods and calling them from the expression;@Test_	public void testScenario_RegisteringJavaMethodsAsFunctionsAndCallingThem() throws SecurityException, NoSuchMethodException {_		try {_			_			SpelExpressionParser parser = new SpelExpressionParser()__			_			StandardEvaluationContext ctx = new StandardEvaluationContext()__			ctx.registerFunction("repeat",ExpressionLanguageScenarioTests.class.getDeclaredMethod("repeat",String.class))___			Expression expr = parser.parseRaw("#repeat('hello')")__			Object value = expr.getValue(ctx)__			assertEquals("hellohello", value)___		} catch (EvaluationException ee) {_			ee.printStackTrace()__			fail("Unexpected Exception: " + ee.getMessage())__		} catch (ParseException pe) {_			pe.printStackTrace()__			fail("Unexpected Exception: " + pe.getMessage())__		}_	};scenario,using,your,own,java,methods,and,calling,them,from,the,expression;test,public,void,throws,security,exception,no,such,method,exception,try,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,register,function,repeat,expression,language,scenario,tests,class,get,declared,method,repeat,string,class,expression,expr,parser,parse,raw,repeat,hello,object,value,expr,get,value,ctx,assert,equals,hellohello,value,catch,evaluation,exception,ee,ee,print,stack,trace,fail,unexpected,exception,ee,get,message,catch,parse,exception,pe,pe,print,stack,trace,fail,unexpected,exception,pe,get,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_RegisteringJavaMethodsAsFunctionsAndCallingThem() throws SecurityException, NoSuchMethodException;1413848647;Scenario: using your own java methods and calling them from the expression;@Test_	public void testScenario_RegisteringJavaMethodsAsFunctionsAndCallingThem() throws SecurityException, NoSuchMethodException {_		try {_			_			SpelExpressionParser parser = new SpelExpressionParser()__			_			StandardEvaluationContext ctx = new StandardEvaluationContext()__			ctx.registerFunction("repeat",ExpressionLanguageScenarioTests.class.getDeclaredMethod("repeat",String.class))___			Expression expr = parser.parseRaw("#repeat('hello')")__			Object value = expr.getValue(ctx)__			assertEquals("hellohello", value)___		} catch (EvaluationException ee) {_			ee.printStackTrace()__			fail("Unexpected Exception: " + ee.getMessage())__		} catch (ParseException pe) {_			pe.printStackTrace()__			fail("Unexpected Exception: " + pe.getMessage())__		}_	};scenario,using,your,own,java,methods,and,calling,them,from,the,expression;test,public,void,throws,security,exception,no,such,method,exception,try,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,register,function,repeat,expression,language,scenario,tests,class,get,declared,method,repeat,string,class,expression,expr,parser,parse,raw,repeat,hello,object,value,expr,get,value,ctx,assert,equals,hellohello,value,catch,evaluation,exception,ee,ee,print,stack,trace,fail,unexpected,exception,ee,get,message,catch,parse,exception,pe,pe,print,stack,trace,fail,unexpected,exception,pe,get,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_RegisteringJavaMethodsAsFunctionsAndCallingThem() throws SecurityException, NoSuchMethodException;1458843770;Scenario: using your own java methods and calling them from the expression;@Test_	public void testScenario_RegisteringJavaMethodsAsFunctionsAndCallingThem() throws SecurityException, NoSuchMethodException {_		try {_			_			SpelExpressionParser parser = new SpelExpressionParser()__			_			StandardEvaluationContext ctx = new StandardEvaluationContext()__			ctx.registerFunction("repeat",ExpressionLanguageScenarioTests.class.getDeclaredMethod("repeat",String.class))___			Expression expr = parser.parseRaw("#repeat('hello')")__			Object value = expr.getValue(ctx)__			assertEquals("hellohello", value)___		}_		catch (EvaluationException ee) {_			ee.printStackTrace()__			fail("Unexpected Exception: " + ee.getMessage())__		}_		catch (ParseException pe) {_			pe.printStackTrace()__			fail("Unexpected Exception: " + pe.getMessage())__		}_	};scenario,using,your,own,java,methods,and,calling,them,from,the,expression;test,public,void,throws,security,exception,no,such,method,exception,try,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,register,function,repeat,expression,language,scenario,tests,class,get,declared,method,repeat,string,class,expression,expr,parser,parse,raw,repeat,hello,object,value,expr,get,value,ctx,assert,equals,hellohello,value,catch,evaluation,exception,ee,ee,print,stack,trace,fail,unexpected,exception,ee,get,message,catch,parse,exception,pe,pe,print,stack,trace,fail,unexpected,exception,pe,get,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_RegisteringJavaMethodsAsFunctionsAndCallingThem() throws SecurityException, NoSuchMethodException;1461047077;Scenario: using your own java methods and calling them from the expression;@Test_	public void testScenario_RegisteringJavaMethodsAsFunctionsAndCallingThem() throws SecurityException, NoSuchMethodException {_		try {_			_			SpelExpressionParser parser = new SpelExpressionParser()__			_			StandardEvaluationContext ctx = new StandardEvaluationContext()__			ctx.registerFunction("repeat",ExpressionLanguageScenarioTests.class.getDeclaredMethod("repeat",String.class))___			Expression expr = parser.parseRaw("#repeat('hello')")__			Object value = expr.getValue(ctx)__			assertEquals("hellohello", value)___		}_		catch (EvaluationException ee) {_			ee.printStackTrace()__			fail("Unexpected Exception: " + ee.getMessage())__		}_		catch (ParseException pe) {_			pe.printStackTrace()__			fail("Unexpected Exception: " + pe.getMessage())__		}_	};scenario,using,your,own,java,methods,and,calling,them,from,the,expression;test,public,void,throws,security,exception,no,such,method,exception,try,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,register,function,repeat,expression,language,scenario,tests,class,get,declared,method,repeat,string,class,expression,expr,parser,parse,raw,repeat,hello,object,value,expr,get,value,ctx,assert,equals,hellohello,value,catch,evaluation,exception,ee,ee,print,stack,trace,fail,unexpected,exception,ee,get,message,catch,parse,exception,pe,pe,print,stack,trace,fail,unexpected,exception,pe,get,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_RegisteringJavaMethodsAsFunctionsAndCallingThem() throws SecurityException, NoSuchMethodException;1467730834;Scenario: using your own java methods and calling them from the expression;@Test_	public void testScenario_RegisteringJavaMethodsAsFunctionsAndCallingThem() throws SecurityException, NoSuchMethodException {_		try {_			_			SpelExpressionParser parser = new SpelExpressionParser()__			_			StandardEvaluationContext ctx = new StandardEvaluationContext()__			ctx.registerFunction("repeat",ExpressionLanguageScenarioTests.class.getDeclaredMethod("repeat",String.class))___			Expression expr = parser.parseRaw("#repeat('hello')")__			Object value = expr.getValue(ctx)__			assertEquals("hellohello", value)___		}_		catch (EvaluationException ee) {_			ee.printStackTrace()__			fail("Unexpected Exception: " + ee.getMessage())__		}_		catch (ParseException pe) {_			pe.printStackTrace()__			fail("Unexpected Exception: " + pe.getMessage())__		}_	};scenario,using,your,own,java,methods,and,calling,them,from,the,expression;test,public,void,throws,security,exception,no,such,method,exception,try,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,register,function,repeat,expression,language,scenario,tests,class,get,declared,method,repeat,string,class,expression,expr,parser,parse,raw,repeat,hello,object,value,expr,get,value,ctx,assert,equals,hellohello,value,catch,evaluation,exception,ee,ee,print,stack,trace,fail,unexpected,exception,ee,get,message,catch,parse,exception,pe,pe,print,stack,trace,fail,unexpected,exception,pe,get,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_RegisteringJavaMethodsAsFunctionsAndCallingThem() throws SecurityException, NoSuchMethodException;1518279448;Scenario: using your own java methods and calling them from the expression;@Test_	public void testScenario_RegisteringJavaMethodsAsFunctionsAndCallingThem() throws SecurityException, NoSuchMethodException {_		try {_			_			SpelExpressionParser parser = new SpelExpressionParser()__			_			StandardEvaluationContext ctx = new StandardEvaluationContext()__			ctx.registerFunction("repeat",ExpressionLanguageScenarioTests.class.getDeclaredMethod("repeat",String.class))___			Expression expr = parser.parseRaw("#repeat('hello')")__			Object value = expr.getValue(ctx)__			assertEquals("hellohello", value)___		}_		catch (EvaluationException ee) {_			ee.printStackTrace()__			fail("Unexpected Exception: " + ee.getMessage())__		}_		catch (ParseException pe) {_			pe.printStackTrace()__			fail("Unexpected Exception: " + pe.getMessage())__		}_	};scenario,using,your,own,java,methods,and,calling,them,from,the,expression;test,public,void,throws,security,exception,no,such,method,exception,try,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,register,function,repeat,expression,language,scenario,tests,class,get,declared,method,repeat,string,class,expression,expr,parser,parse,raw,repeat,hello,object,value,expr,get,value,ctx,assert,equals,hellohello,value,catch,evaluation,exception,ee,ee,print,stack,trace,fail,unexpected,exception,ee,get,message,catch,parse,exception,pe,pe,print,stack,trace,fail,unexpected,exception,pe,get,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_RegisteringJavaMethodsAsFunctionsAndCallingThem() throws SecurityException, NoSuchMethodException;1545727613;Scenario: using your own java methods and calling them from the expression;@Test_	public void testScenario_RegisteringJavaMethodsAsFunctionsAndCallingThem() throws SecurityException, NoSuchMethodException {_		try {_			_			SpelExpressionParser parser = new SpelExpressionParser()__			_			StandardEvaluationContext ctx = new StandardEvaluationContext()__			ctx.registerFunction("repeat",ExpressionLanguageScenarioTests.class.getDeclaredMethod("repeat",String.class))___			Expression expr = parser.parseRaw("#repeat('hello')")__			Object value = expr.getValue(ctx)__			assertEquals("hellohello", value)___		}_		catch (EvaluationException | ParseException ex) {_			ex.printStackTrace()__			fail("Unexpected Exception: " + ex.getMessage())__		}_	};scenario,using,your,own,java,methods,and,calling,them,from,the,expression;test,public,void,throws,security,exception,no,such,method,exception,try,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,register,function,repeat,expression,language,scenario,tests,class,get,declared,method,repeat,string,class,expression,expr,parser,parse,raw,repeat,hello,object,value,expr,get,value,ctx,assert,equals,hellohello,value,catch,evaluation,exception,parse,exception,ex,ex,print,stack,trace,fail,unexpected,exception,ex,get,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_UsingADifferentRootContextObject() throws Exception;1328020251;Scenario: using your own root context object;@Test_	public void testScenario_UsingADifferentRootContextObject() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()___		TestClass tc = new TestClass()__		tc.setProperty(42)__		tc.str = "wibble"__		ctx.setRootObject(tc)__		_		_		Expression expr = parser.parseRaw("str")__		Object value = expr.getValue(ctx)__		Assert.assertEquals("wibble", value)_			_		expr = parser.parseRaw("str")__		expr.setValue(ctx, "wobble")__		expr = parser.parseRaw("str")__		value = expr.getValue(ctx)__		Assert.assertEquals("wobble", value)__		_		expr = parser.parseRaw("str='wabble'")__		value = expr.getValue(ctx)__		expr = parser.parseRaw("str")__		value = expr.getValue(ctx)__		Assert.assertEquals("wabble", value)__		_		_		expr = parser.parseRaw("property")__		value = expr.getValue(ctx)__		Assert.assertEquals(42, value)___		_		expr = parser.parseRaw("property=4")__		value = expr.getValue(ctx)__		expr = parser.parseRaw("property")__		value = expr.getValue(ctx)__		Assert.assertEquals(4,value)__	};scenario,using,your,own,root,context,object;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,test,class,tc,new,test,class,tc,set,property,42,tc,str,wibble,ctx,set,root,object,tc,expression,expr,parser,parse,raw,str,object,value,expr,get,value,ctx,assert,assert,equals,wibble,value,expr,parser,parse,raw,str,expr,set,value,ctx,wobble,expr,parser,parse,raw,str,value,expr,get,value,ctx,assert,assert,equals,wobble,value,expr,parser,parse,raw,str,wabble,value,expr,get,value,ctx,expr,parser,parse,raw,str,value,expr,get,value,ctx,assert,assert,equals,wabble,value,expr,parser,parse,raw,property,value,expr,get,value,ctx,assert,assert,equals,42,value,expr,parser,parse,raw,property,4,value,expr,get,value,ctx,expr,parser,parse,raw,property,value,expr,get,value,ctx,assert,assert,equals,4,value
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_UsingADifferentRootContextObject() throws Exception;1356735495;Scenario: using your own root context object;@Test_	public void testScenario_UsingADifferentRootContextObject() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()___		TestClass tc = new TestClass()__		tc.setProperty(42)__		tc.str = "wibble"__		ctx.setRootObject(tc)___		_		Expression expr = parser.parseRaw("str")__		Object value = expr.getValue(ctx)__		Assert.assertEquals("wibble", value)__		expr = parser.parseRaw("str")__		expr.setValue(ctx, "wobble")__		expr = parser.parseRaw("str")__		value = expr.getValue(ctx)__		Assert.assertEquals("wobble", value)__		_		expr = parser.parseRaw("str='wabble'")__		value = expr.getValue(ctx)__		expr = parser.parseRaw("str")__		value = expr.getValue(ctx)__		Assert.assertEquals("wabble", value)___		_		expr = parser.parseRaw("property")__		value = expr.getValue(ctx)__		Assert.assertEquals(42, value)___		_		expr = parser.parseRaw("property=4")__		value = expr.getValue(ctx)__		expr = parser.parseRaw("property")__		value = expr.getValue(ctx)__		Assert.assertEquals(4,value)__	};scenario,using,your,own,root,context,object;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,test,class,tc,new,test,class,tc,set,property,42,tc,str,wibble,ctx,set,root,object,tc,expression,expr,parser,parse,raw,str,object,value,expr,get,value,ctx,assert,assert,equals,wibble,value,expr,parser,parse,raw,str,expr,set,value,ctx,wobble,expr,parser,parse,raw,str,value,expr,get,value,ctx,assert,assert,equals,wobble,value,expr,parser,parse,raw,str,wabble,value,expr,get,value,ctx,expr,parser,parse,raw,str,value,expr,get,value,ctx,assert,assert,equals,wabble,value,expr,parser,parse,raw,property,value,expr,get,value,ctx,assert,assert,equals,42,value,expr,parser,parse,raw,property,4,value,expr,get,value,ctx,expr,parser,parse,raw,property,value,expr,get,value,ctx,assert,assert,equals,4,value
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_UsingADifferentRootContextObject() throws Exception;1357119417;Scenario: using your own root context object;@Test_	public void testScenario_UsingADifferentRootContextObject() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()___		TestClass tc = new TestClass()__		tc.setProperty(42)__		tc.str = "wibble"__		ctx.setRootObject(tc)___		_		Expression expr = parser.parseRaw("str")__		Object value = expr.getValue(ctx)__		assertEquals("wibble", value)__		expr = parser.parseRaw("str")__		expr.setValue(ctx, "wobble")__		expr = parser.parseRaw("str")__		value = expr.getValue(ctx)__		assertEquals("wobble", value)__		_		expr = parser.parseRaw("str='wabble'")__		value = expr.getValue(ctx)__		expr = parser.parseRaw("str")__		value = expr.getValue(ctx)__		assertEquals("wabble", value)___		_		expr = parser.parseRaw("property")__		value = expr.getValue(ctx)__		assertEquals(42, value)___		_		expr = parser.parseRaw("property=4")__		value = expr.getValue(ctx)__		expr = parser.parseRaw("property")__		value = expr.getValue(ctx)__		assertEquals(4,value)__	};scenario,using,your,own,root,context,object;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,test,class,tc,new,test,class,tc,set,property,42,tc,str,wibble,ctx,set,root,object,tc,expression,expr,parser,parse,raw,str,object,value,expr,get,value,ctx,assert,equals,wibble,value,expr,parser,parse,raw,str,expr,set,value,ctx,wobble,expr,parser,parse,raw,str,value,expr,get,value,ctx,assert,equals,wobble,value,expr,parser,parse,raw,str,wabble,value,expr,get,value,ctx,expr,parser,parse,raw,str,value,expr,get,value,ctx,assert,equals,wabble,value,expr,parser,parse,raw,property,value,expr,get,value,ctx,assert,equals,42,value,expr,parser,parse,raw,property,4,value,expr,get,value,ctx,expr,parser,parse,raw,property,value,expr,get,value,ctx,assert,equals,4,value
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_UsingADifferentRootContextObject() throws Exception;1391876651;Scenario: using your own root context object;@Test_	public void testScenario_UsingADifferentRootContextObject() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()___		TestClass tc = new TestClass()__		tc.setProperty(42)__		tc.str = "wibble"__		ctx.setRootObject(tc)___		_		Expression expr = parser.parseRaw("str")__		Object value = expr.getValue(ctx)__		assertEquals("wibble", value)__		expr = parser.parseRaw("str")__		expr.setValue(ctx, "wobble")__		expr = parser.parseRaw("str")__		value = expr.getValue(ctx)__		assertEquals("wobble", value)__		_		expr = parser.parseRaw("str='wabble'")__		value = expr.getValue(ctx)__		expr = parser.parseRaw("str")__		value = expr.getValue(ctx)__		assertEquals("wabble", value)___		_		expr = parser.parseRaw("property")__		value = expr.getValue(ctx)__		assertEquals(42, value)___		_		expr = parser.parseRaw("property=4")__		value = expr.getValue(ctx)__		expr = parser.parseRaw("property")__		value = expr.getValue(ctx)__		assertEquals(4,value)__	};scenario,using,your,own,root,context,object;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,test,class,tc,new,test,class,tc,set,property,42,tc,str,wibble,ctx,set,root,object,tc,expression,expr,parser,parse,raw,str,object,value,expr,get,value,ctx,assert,equals,wibble,value,expr,parser,parse,raw,str,expr,set,value,ctx,wobble,expr,parser,parse,raw,str,value,expr,get,value,ctx,assert,equals,wobble,value,expr,parser,parse,raw,str,wabble,value,expr,get,value,ctx,expr,parser,parse,raw,str,value,expr,get,value,ctx,assert,equals,wabble,value,expr,parser,parse,raw,property,value,expr,get,value,ctx,assert,equals,42,value,expr,parser,parse,raw,property,4,value,expr,get,value,ctx,expr,parser,parse,raw,property,value,expr,get,value,ctx,assert,equals,4,value
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_UsingADifferentRootContextObject() throws Exception;1413848647;Scenario: using your own root context object;@Test_	public void testScenario_UsingADifferentRootContextObject() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()___		TestClass tc = new TestClass()__		tc.setProperty(42)__		tc.str = "wibble"__		ctx.setRootObject(tc)___		_		Expression expr = parser.parseRaw("str")__		Object value = expr.getValue(ctx)__		assertEquals("wibble", value)__		expr = parser.parseRaw("str")__		expr.setValue(ctx, "wobble")__		expr = parser.parseRaw("str")__		value = expr.getValue(ctx)__		assertEquals("wobble", value)__		_		expr = parser.parseRaw("str='wabble'")__		value = expr.getValue(ctx)__		expr = parser.parseRaw("str")__		value = expr.getValue(ctx)__		assertEquals("wabble", value)___		_		expr = parser.parseRaw("property")__		value = expr.getValue(ctx)__		assertEquals(42, value)___		_		expr = parser.parseRaw("property=4")__		value = expr.getValue(ctx)__		expr = parser.parseRaw("property")__		value = expr.getValue(ctx)__		assertEquals(4,value)__	};scenario,using,your,own,root,context,object;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,test,class,tc,new,test,class,tc,set,property,42,tc,str,wibble,ctx,set,root,object,tc,expression,expr,parser,parse,raw,str,object,value,expr,get,value,ctx,assert,equals,wibble,value,expr,parser,parse,raw,str,expr,set,value,ctx,wobble,expr,parser,parse,raw,str,value,expr,get,value,ctx,assert,equals,wobble,value,expr,parser,parse,raw,str,wabble,value,expr,get,value,ctx,expr,parser,parse,raw,str,value,expr,get,value,ctx,assert,equals,wabble,value,expr,parser,parse,raw,property,value,expr,get,value,ctx,assert,equals,42,value,expr,parser,parse,raw,property,4,value,expr,get,value,ctx,expr,parser,parse,raw,property,value,expr,get,value,ctx,assert,equals,4,value
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_UsingADifferentRootContextObject() throws Exception;1458843770;Scenario: using your own root context object;@Test_	public void testScenario_UsingADifferentRootContextObject() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()___		TestClass tc = new TestClass()__		tc.setProperty(42)__		tc.str = "wibble"__		ctx.setRootObject(tc)___		_		Expression expr = parser.parseRaw("str")__		Object value = expr.getValue(ctx)__		assertEquals("wibble", value)__		expr = parser.parseRaw("str")__		expr.setValue(ctx, "wobble")__		expr = parser.parseRaw("str")__		value = expr.getValue(ctx)__		assertEquals("wobble", value)__		_		expr = parser.parseRaw("str='wabble'")__		value = expr.getValue(ctx)__		expr = parser.parseRaw("str")__		value = expr.getValue(ctx)__		assertEquals("wabble", value)___		_		expr = parser.parseRaw("property")__		value = expr.getValue(ctx)__		assertEquals(42, value)___		_		expr = parser.parseRaw("property=4")__		value = expr.getValue(ctx)__		expr = parser.parseRaw("property")__		value = expr.getValue(ctx)__		assertEquals(4,value)__	};scenario,using,your,own,root,context,object;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,test,class,tc,new,test,class,tc,set,property,42,tc,str,wibble,ctx,set,root,object,tc,expression,expr,parser,parse,raw,str,object,value,expr,get,value,ctx,assert,equals,wibble,value,expr,parser,parse,raw,str,expr,set,value,ctx,wobble,expr,parser,parse,raw,str,value,expr,get,value,ctx,assert,equals,wobble,value,expr,parser,parse,raw,str,wabble,value,expr,get,value,ctx,expr,parser,parse,raw,str,value,expr,get,value,ctx,assert,equals,wabble,value,expr,parser,parse,raw,property,value,expr,get,value,ctx,assert,equals,42,value,expr,parser,parse,raw,property,4,value,expr,get,value,ctx,expr,parser,parse,raw,property,value,expr,get,value,ctx,assert,equals,4,value
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_UsingADifferentRootContextObject() throws Exception;1461047077;Scenario: using your own root context object;@Test_	public void testScenario_UsingADifferentRootContextObject() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()___		TestClass tc = new TestClass()__		tc.setProperty(42)__		tc.str = "wibble"__		ctx.setRootObject(tc)___		_		Expression expr = parser.parseRaw("str")__		Object value = expr.getValue(ctx)__		assertEquals("wibble", value)__		expr = parser.parseRaw("str")__		expr.setValue(ctx, "wobble")__		expr = parser.parseRaw("str")__		value = expr.getValue(ctx)__		assertEquals("wobble", value)__		_		expr = parser.parseRaw("str='wabble'")__		value = expr.getValue(ctx)__		expr = parser.parseRaw("str")__		value = expr.getValue(ctx)__		assertEquals("wabble", value)___		_		expr = parser.parseRaw("property")__		value = expr.getValue(ctx)__		assertEquals(42, value)___		_		expr = parser.parseRaw("property=4")__		value = expr.getValue(ctx)__		expr = parser.parseRaw("property")__		value = expr.getValue(ctx)__		assertEquals(4,value)__	};scenario,using,your,own,root,context,object;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,test,class,tc,new,test,class,tc,set,property,42,tc,str,wibble,ctx,set,root,object,tc,expression,expr,parser,parse,raw,str,object,value,expr,get,value,ctx,assert,equals,wibble,value,expr,parser,parse,raw,str,expr,set,value,ctx,wobble,expr,parser,parse,raw,str,value,expr,get,value,ctx,assert,equals,wobble,value,expr,parser,parse,raw,str,wabble,value,expr,get,value,ctx,expr,parser,parse,raw,str,value,expr,get,value,ctx,assert,equals,wabble,value,expr,parser,parse,raw,property,value,expr,get,value,ctx,assert,equals,42,value,expr,parser,parse,raw,property,4,value,expr,get,value,ctx,expr,parser,parse,raw,property,value,expr,get,value,ctx,assert,equals,4,value
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_UsingADifferentRootContextObject() throws Exception;1467730834;Scenario: using your own root context object;@Test_	public void testScenario_UsingADifferentRootContextObject() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()___		TestClass tc = new TestClass()__		tc.setProperty(42)__		tc.str = "wibble"__		ctx.setRootObject(tc)___		_		Expression expr = parser.parseRaw("str")__		Object value = expr.getValue(ctx)__		assertEquals("wibble", value)__		expr = parser.parseRaw("str")__		expr.setValue(ctx, "wobble")__		expr = parser.parseRaw("str")__		value = expr.getValue(ctx)__		assertEquals("wobble", value)__		_		expr = parser.parseRaw("str='wabble'")__		value = expr.getValue(ctx)__		expr = parser.parseRaw("str")__		value = expr.getValue(ctx)__		assertEquals("wabble", value)___		_		expr = parser.parseRaw("property")__		value = expr.getValue(ctx)__		assertEquals(42, value)___		_		expr = parser.parseRaw("property=4")__		value = expr.getValue(ctx)__		expr = parser.parseRaw("property")__		value = expr.getValue(ctx)__		assertEquals(4,value)__	};scenario,using,your,own,root,context,object;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,test,class,tc,new,test,class,tc,set,property,42,tc,str,wibble,ctx,set,root,object,tc,expression,expr,parser,parse,raw,str,object,value,expr,get,value,ctx,assert,equals,wibble,value,expr,parser,parse,raw,str,expr,set,value,ctx,wobble,expr,parser,parse,raw,str,value,expr,get,value,ctx,assert,equals,wobble,value,expr,parser,parse,raw,str,wabble,value,expr,get,value,ctx,expr,parser,parse,raw,str,value,expr,get,value,ctx,assert,equals,wabble,value,expr,parser,parse,raw,property,value,expr,get,value,ctx,assert,equals,42,value,expr,parser,parse,raw,property,4,value,expr,get,value,ctx,expr,parser,parse,raw,property,value,expr,get,value,ctx,assert,equals,4,value
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_UsingADifferentRootContextObject() throws Exception;1518279448;Scenario: using your own root context object;@Test_	public void testScenario_UsingADifferentRootContextObject() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()___		TestClass tc = new TestClass()__		tc.setProperty(42)__		tc.str = "wibble"__		ctx.setRootObject(tc)___		_		Expression expr = parser.parseRaw("str")__		Object value = expr.getValue(ctx)__		assertEquals("wibble", value)__		expr = parser.parseRaw("str")__		expr.setValue(ctx, "wobble")__		expr = parser.parseRaw("str")__		value = expr.getValue(ctx)__		assertEquals("wobble", value)__		_		expr = parser.parseRaw("str='wabble'")__		value = expr.getValue(ctx)__		expr = parser.parseRaw("str")__		value = expr.getValue(ctx)__		assertEquals("wabble", value)___		_		expr = parser.parseRaw("property")__		value = expr.getValue(ctx)__		assertEquals(42, value)___		_		expr = parser.parseRaw("property=4")__		value = expr.getValue(ctx)__		expr = parser.parseRaw("property")__		value = expr.getValue(ctx)__		assertEquals(4,value)__	};scenario,using,your,own,root,context,object;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,test,class,tc,new,test,class,tc,set,property,42,tc,str,wibble,ctx,set,root,object,tc,expression,expr,parser,parse,raw,str,object,value,expr,get,value,ctx,assert,equals,wibble,value,expr,parser,parse,raw,str,expr,set,value,ctx,wobble,expr,parser,parse,raw,str,value,expr,get,value,ctx,assert,equals,wobble,value,expr,parser,parse,raw,str,wabble,value,expr,get,value,ctx,expr,parser,parse,raw,str,value,expr,get,value,ctx,assert,equals,wabble,value,expr,parser,parse,raw,property,value,expr,get,value,ctx,assert,equals,42,value,expr,parser,parse,raw,property,4,value,expr,get,value,ctx,expr,parser,parse,raw,property,value,expr,get,value,ctx,assert,equals,4,value
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_UsingADifferentRootContextObject() throws Exception;1545727613;Scenario: using your own root context object;@Test_	public void testScenario_UsingADifferentRootContextObject() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()___		TestClass tc = new TestClass()__		tc.setProperty(42)__		tc.str = "wibble"__		ctx.setRootObject(tc)___		_		Expression expr = parser.parseRaw("str")__		Object value = expr.getValue(ctx)__		assertEquals("wibble", value)__		expr = parser.parseRaw("str")__		expr.setValue(ctx, "wobble")__		expr = parser.parseRaw("str")__		value = expr.getValue(ctx)__		assertEquals("wobble", value)__		_		expr = parser.parseRaw("str='wabble'")__		value = expr.getValue(ctx)__		expr = parser.parseRaw("str")__		value = expr.getValue(ctx)__		assertEquals("wabble", value)___		_		expr = parser.parseRaw("property")__		value = expr.getValue(ctx)__		assertEquals(42, value)___		_		expr = parser.parseRaw("property=4")__		value = expr.getValue(ctx)__		expr = parser.parseRaw("property")__		value = expr.getValue(ctx)__		assertEquals(4,value)__	};scenario,using,your,own,root,context,object;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,test,class,tc,new,test,class,tc,set,property,42,tc,str,wibble,ctx,set,root,object,tc,expression,expr,parser,parse,raw,str,object,value,expr,get,value,ctx,assert,equals,wibble,value,expr,parser,parse,raw,str,expr,set,value,ctx,wobble,expr,parser,parse,raw,str,value,expr,get,value,ctx,assert,equals,wobble,value,expr,parser,parse,raw,str,wabble,value,expr,get,value,ctx,expr,parser,parse,raw,str,value,expr,get,value,ctx,assert,equals,wabble,value,expr,parser,parse,raw,property,value,expr,get,value,ctx,assert,equals,42,value,expr,parser,parse,raw,property,4,value,expr,get,value,ctx,expr,parser,parse,raw,property,value,expr,get,value,ctx,assert,equals,4,value
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_DefiningVariablesThatWillBeAccessibleInExpressions() throws Exception;1328020251;Scenario: using the standard context but adding your own variables;@Test_	public void testScenario_DefiningVariablesThatWillBeAccessibleInExpressions() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()__		ctx.setVariable("favouriteColour","blue")__		List<Integer> primes = new ArrayList<Integer>()__		primes.addAll(Arrays.asList(2,3,5,7,11,13,17))__		ctx.setVariable("primes",primes)__		_		Expression expr = parser.parseRaw("#favouriteColour")__		Object value = expr.getValue(ctx)__		Assert.assertEquals("blue", value)___		expr = parser.parseRaw("#primes.get(1)")__		value = expr.getValue(ctx)__		Assert.assertEquals(3, value)___		_		expr = parser.parseRaw("#primes.?[#this>10]")__		value = expr.getValue(ctx)__		Assert.assertEquals("[11, 13, 17]", value.toString())_			_	};scenario,using,the,standard,context,but,adding,your,own,variables;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,set,variable,favourite,colour,blue,list,integer,primes,new,array,list,integer,primes,add,all,arrays,as,list,2,3,5,7,11,13,17,ctx,set,variable,primes,primes,expression,expr,parser,parse,raw,favourite,colour,object,value,expr,get,value,ctx,assert,assert,equals,blue,value,expr,parser,parse,raw,primes,get,1,value,expr,get,value,ctx,assert,assert,equals,3,value,expr,parser,parse,raw,primes,this,10,value,expr,get,value,ctx,assert,assert,equals,11,13,17,value,to,string
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_DefiningVariablesThatWillBeAccessibleInExpressions() throws Exception;1356735495;Scenario: using the standard context but adding your own variables;@Test_	public void testScenario_DefiningVariablesThatWillBeAccessibleInExpressions() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()__		ctx.setVariable("favouriteColour","blue")__		List<Integer> primes = new ArrayList<Integer>()__		primes.addAll(Arrays.asList(2,3,5,7,11,13,17))__		ctx.setVariable("primes",primes)___		Expression expr = parser.parseRaw("#favouriteColour")__		Object value = expr.getValue(ctx)__		Assert.assertEquals("blue", value)___		expr = parser.parseRaw("#primes.get(1)")__		value = expr.getValue(ctx)__		Assert.assertEquals(3, value)___		_		expr = parser.parseRaw("#primes.?[#this>10]")__		value = expr.getValue(ctx)__		Assert.assertEquals("[11, 13, 17]", value.toString())__	};scenario,using,the,standard,context,but,adding,your,own,variables;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,set,variable,favourite,colour,blue,list,integer,primes,new,array,list,integer,primes,add,all,arrays,as,list,2,3,5,7,11,13,17,ctx,set,variable,primes,primes,expression,expr,parser,parse,raw,favourite,colour,object,value,expr,get,value,ctx,assert,assert,equals,blue,value,expr,parser,parse,raw,primes,get,1,value,expr,get,value,ctx,assert,assert,equals,3,value,expr,parser,parse,raw,primes,this,10,value,expr,get,value,ctx,assert,assert,equals,11,13,17,value,to,string
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_DefiningVariablesThatWillBeAccessibleInExpressions() throws Exception;1357119417;Scenario: using the standard context but adding your own variables;@Test_	public void testScenario_DefiningVariablesThatWillBeAccessibleInExpressions() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()__		ctx.setVariable("favouriteColour","blue")__		List<Integer> primes = new ArrayList<Integer>()__		primes.addAll(Arrays.asList(2,3,5,7,11,13,17))__		ctx.setVariable("primes",primes)___		Expression expr = parser.parseRaw("#favouriteColour")__		Object value = expr.getValue(ctx)__		assertEquals("blue", value)___		expr = parser.parseRaw("#primes.get(1)")__		value = expr.getValue(ctx)__		assertEquals(3, value)___		_		expr = parser.parseRaw("#primes.?[#this>10]")__		value = expr.getValue(ctx)__		assertEquals("[11, 13, 17]", value.toString())__	};scenario,using,the,standard,context,but,adding,your,own,variables;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,set,variable,favourite,colour,blue,list,integer,primes,new,array,list,integer,primes,add,all,arrays,as,list,2,3,5,7,11,13,17,ctx,set,variable,primes,primes,expression,expr,parser,parse,raw,favourite,colour,object,value,expr,get,value,ctx,assert,equals,blue,value,expr,parser,parse,raw,primes,get,1,value,expr,get,value,ctx,assert,equals,3,value,expr,parser,parse,raw,primes,this,10,value,expr,get,value,ctx,assert,equals,11,13,17,value,to,string
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_DefiningVariablesThatWillBeAccessibleInExpressions() throws Exception;1391876651;Scenario: using the standard context but adding your own variables;@Test_	public void testScenario_DefiningVariablesThatWillBeAccessibleInExpressions() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()__		ctx.setVariable("favouriteColour","blue")__		List<Integer> primes = new ArrayList<Integer>()__		primes.addAll(Arrays.asList(2,3,5,7,11,13,17))__		ctx.setVariable("primes",primes)___		Expression expr = parser.parseRaw("#favouriteColour")__		Object value = expr.getValue(ctx)__		assertEquals("blue", value)___		expr = parser.parseRaw("#primes.get(1)")__		value = expr.getValue(ctx)__		assertEquals(3, value)___		_		expr = parser.parseRaw("#primes.?[#this>10]")__		value = expr.getValue(ctx)__		assertEquals("[11, 13, 17]", value.toString())__	};scenario,using,the,standard,context,but,adding,your,own,variables;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,set,variable,favourite,colour,blue,list,integer,primes,new,array,list,integer,primes,add,all,arrays,as,list,2,3,5,7,11,13,17,ctx,set,variable,primes,primes,expression,expr,parser,parse,raw,favourite,colour,object,value,expr,get,value,ctx,assert,equals,blue,value,expr,parser,parse,raw,primes,get,1,value,expr,get,value,ctx,assert,equals,3,value,expr,parser,parse,raw,primes,this,10,value,expr,get,value,ctx,assert,equals,11,13,17,value,to,string
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_DefiningVariablesThatWillBeAccessibleInExpressions() throws Exception;1413848647;Scenario: using the standard context but adding your own variables;@Test_	public void testScenario_DefiningVariablesThatWillBeAccessibleInExpressions() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()__		ctx.setVariable("favouriteColour","blue")__		List<Integer> primes = new ArrayList<Integer>()__		primes.addAll(Arrays.asList(2,3,5,7,11,13,17))__		ctx.setVariable("primes",primes)___		Expression expr = parser.parseRaw("#favouriteColour")__		Object value = expr.getValue(ctx)__		assertEquals("blue", value)___		expr = parser.parseRaw("#primes.get(1)")__		value = expr.getValue(ctx)__		assertEquals(3, value)___		_		expr = parser.parseRaw("#primes.?[#this>10]")__		value = expr.getValue(ctx)__		assertEquals("[11, 13, 17]", value.toString())__	};scenario,using,the,standard,context,but,adding,your,own,variables;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,set,variable,favourite,colour,blue,list,integer,primes,new,array,list,integer,primes,add,all,arrays,as,list,2,3,5,7,11,13,17,ctx,set,variable,primes,primes,expression,expr,parser,parse,raw,favourite,colour,object,value,expr,get,value,ctx,assert,equals,blue,value,expr,parser,parse,raw,primes,get,1,value,expr,get,value,ctx,assert,equals,3,value,expr,parser,parse,raw,primes,this,10,value,expr,get,value,ctx,assert,equals,11,13,17,value,to,string
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_DefiningVariablesThatWillBeAccessibleInExpressions() throws Exception;1458843770;Scenario: using the standard context but adding your own variables;@Test_	public void testScenario_DefiningVariablesThatWillBeAccessibleInExpressions() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()__		ctx.setVariable("favouriteColour","blue")__		List<Integer> primes = new ArrayList<Integer>()__		primes.addAll(Arrays.asList(2,3,5,7,11,13,17))__		ctx.setVariable("primes",primes)___		Expression expr = parser.parseRaw("#favouriteColour")__		Object value = expr.getValue(ctx)__		assertEquals("blue", value)___		expr = parser.parseRaw("#primes.get(1)")__		value = expr.getValue(ctx)__		assertEquals(3, value)___		_		expr = parser.parseRaw("#primes.?[#this>10]")__		value = expr.getValue(ctx)__		assertEquals("[11, 13, 17]", value.toString())__	};scenario,using,the,standard,context,but,adding,your,own,variables;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,set,variable,favourite,colour,blue,list,integer,primes,new,array,list,integer,primes,add,all,arrays,as,list,2,3,5,7,11,13,17,ctx,set,variable,primes,primes,expression,expr,parser,parse,raw,favourite,colour,object,value,expr,get,value,ctx,assert,equals,blue,value,expr,parser,parse,raw,primes,get,1,value,expr,get,value,ctx,assert,equals,3,value,expr,parser,parse,raw,primes,this,10,value,expr,get,value,ctx,assert,equals,11,13,17,value,to,string
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_DefiningVariablesThatWillBeAccessibleInExpressions() throws Exception;1461047077;Scenario: using the standard context but adding your own variables;@Test_	public void testScenario_DefiningVariablesThatWillBeAccessibleInExpressions() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()__		ctx.setVariable("favouriteColour","blue")__		List<Integer> primes = new ArrayList<Integer>()__		primes.addAll(Arrays.asList(2,3,5,7,11,13,17))__		ctx.setVariable("primes",primes)___		Expression expr = parser.parseRaw("#favouriteColour")__		Object value = expr.getValue(ctx)__		assertEquals("blue", value)___		expr = parser.parseRaw("#primes.get(1)")__		value = expr.getValue(ctx)__		assertEquals(3, value)___		_		expr = parser.parseRaw("#primes.?[#this>10]")__		value = expr.getValue(ctx)__		assertEquals("[11, 13, 17]", value.toString())__	};scenario,using,the,standard,context,but,adding,your,own,variables;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,set,variable,favourite,colour,blue,list,integer,primes,new,array,list,integer,primes,add,all,arrays,as,list,2,3,5,7,11,13,17,ctx,set,variable,primes,primes,expression,expr,parser,parse,raw,favourite,colour,object,value,expr,get,value,ctx,assert,equals,blue,value,expr,parser,parse,raw,primes,get,1,value,expr,get,value,ctx,assert,equals,3,value,expr,parser,parse,raw,primes,this,10,value,expr,get,value,ctx,assert,equals,11,13,17,value,to,string
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_DefiningVariablesThatWillBeAccessibleInExpressions() throws Exception;1467730834;Scenario: using the standard context but adding your own variables;@Test_	public void testScenario_DefiningVariablesThatWillBeAccessibleInExpressions() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()__		ctx.setVariable("favouriteColour","blue")__		List<Integer> primes = new ArrayList<>()__		primes.addAll(Arrays.asList(2,3,5,7,11,13,17))__		ctx.setVariable("primes",primes)___		Expression expr = parser.parseRaw("#favouriteColour")__		Object value = expr.getValue(ctx)__		assertEquals("blue", value)___		expr = parser.parseRaw("#primes.get(1)")__		value = expr.getValue(ctx)__		assertEquals(3, value)___		_		expr = parser.parseRaw("#primes.?[#this>10]")__		value = expr.getValue(ctx)__		assertEquals("[11, 13, 17]", value.toString())__	};scenario,using,the,standard,context,but,adding,your,own,variables;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,set,variable,favourite,colour,blue,list,integer,primes,new,array,list,primes,add,all,arrays,as,list,2,3,5,7,11,13,17,ctx,set,variable,primes,primes,expression,expr,parser,parse,raw,favourite,colour,object,value,expr,get,value,ctx,assert,equals,blue,value,expr,parser,parse,raw,primes,get,1,value,expr,get,value,ctx,assert,equals,3,value,expr,parser,parse,raw,primes,this,10,value,expr,get,value,ctx,assert,equals,11,13,17,value,to,string
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_DefiningVariablesThatWillBeAccessibleInExpressions() throws Exception;1518279448;Scenario: using the standard context but adding your own variables;@Test_	public void testScenario_DefiningVariablesThatWillBeAccessibleInExpressions() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()__		ctx.setVariable("favouriteColour","blue")__		List<Integer> primes = new ArrayList<>()__		primes.addAll(Arrays.asList(2,3,5,7,11,13,17))__		ctx.setVariable("primes",primes)___		Expression expr = parser.parseRaw("#favouriteColour")__		Object value = expr.getValue(ctx)__		assertEquals("blue", value)___		expr = parser.parseRaw("#primes.get(1)")__		value = expr.getValue(ctx)__		assertEquals(3, value)___		_		expr = parser.parseRaw("#primes.?[#this>10]")__		value = expr.getValue(ctx)__		assertEquals("[11, 13, 17]", value.toString())__	};scenario,using,the,standard,context,but,adding,your,own,variables;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,set,variable,favourite,colour,blue,list,integer,primes,new,array,list,primes,add,all,arrays,as,list,2,3,5,7,11,13,17,ctx,set,variable,primes,primes,expression,expr,parser,parse,raw,favourite,colour,object,value,expr,get,value,ctx,assert,equals,blue,value,expr,parser,parse,raw,primes,get,1,value,expr,get,value,ctx,assert,equals,3,value,expr,parser,parse,raw,primes,this,10,value,expr,get,value,ctx,assert,equals,11,13,17,value,to,string
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_DefiningVariablesThatWillBeAccessibleInExpressions() throws Exception;1545727613;Scenario: using the standard context but adding your own variables;@Test_	public void testScenario_DefiningVariablesThatWillBeAccessibleInExpressions() throws Exception {_		_		SpelExpressionParser parser = new SpelExpressionParser()__		_		StandardEvaluationContext ctx = new StandardEvaluationContext()__		ctx.setVariable("favouriteColour","blue")__		List<Integer> primes = new ArrayList<>()__		primes.addAll(Arrays.asList(2,3,5,7,11,13,17))__		ctx.setVariable("primes",primes)___		Expression expr = parser.parseRaw("#favouriteColour")__		Object value = expr.getValue(ctx)__		assertEquals("blue", value)___		expr = parser.parseRaw("#primes.get(1)")__		value = expr.getValue(ctx)__		assertEquals(3, value)___		_		expr = parser.parseRaw("#primes.?[#this>10]")__		value = expr.getValue(ctx)__		assertEquals("[11, 13, 17]", value.toString())__	};scenario,using,the,standard,context,but,adding,your,own,variables;test,public,void,throws,exception,spel,expression,parser,parser,new,spel,expression,parser,standard,evaluation,context,ctx,new,standard,evaluation,context,ctx,set,variable,favourite,colour,blue,list,integer,primes,new,array,list,primes,add,all,arrays,as,list,2,3,5,7,11,13,17,ctx,set,variable,primes,primes,expression,expr,parser,parse,raw,favourite,colour,object,value,expr,get,value,ctx,assert,equals,blue,value,expr,parser,parse,raw,primes,get,1,value,expr,get,value,ctx,assert,equals,3,value,expr,parser,parse,raw,primes,this,10,value,expr,get,value,ctx,assert,equals,11,13,17,value,to,string
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_UsingStandardInfrastructure();1328020251;Scenario: using the standard infrastructure and running simple expression evaluation.;@Test_	public void testScenario_UsingStandardInfrastructure() {_		try {_			_			SpelExpressionParser parser = new SpelExpressionParser()__			_			Expression expr = parser.parseRaw("new String('hello world')")__			_			Object value = expr.getValue()__			_			value = expr.getValue()__				_			Assert.assertEquals("hello world", value)__			Assert.assertEquals(String.class, value.getClass())__		} catch (EvaluationException ee) {_			ee.printStackTrace()__			Assert.fail("Unexpected Exception: " + ee.getMessage())__		} catch (ParseException pe) {_			pe.printStackTrace()__			Assert.fail("Unexpected Exception: " + pe.getMessage())__		}_	};scenario,using,the,standard,infrastructure,and,running,simple,expression,evaluation;test,public,void,try,spel,expression,parser,parser,new,spel,expression,parser,expression,expr,parser,parse,raw,new,string,hello,world,object,value,expr,get,value,value,expr,get,value,assert,assert,equals,hello,world,value,assert,assert,equals,string,class,value,get,class,catch,evaluation,exception,ee,ee,print,stack,trace,assert,fail,unexpected,exception,ee,get,message,catch,parse,exception,pe,pe,print,stack,trace,assert,fail,unexpected,exception,pe,get,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_UsingStandardInfrastructure();1356735495;Scenario: using the standard infrastructure and running simple expression evaluation.;@Test_	public void testScenario_UsingStandardInfrastructure() {_		try {_			_			SpelExpressionParser parser = new SpelExpressionParser()__			_			Expression expr = parser.parseRaw("new String('hello world')")__			_			Object value = expr.getValue()__			_			value = expr.getValue()___			Assert.assertEquals("hello world", value)__			Assert.assertEquals(String.class, value.getClass())__		} catch (EvaluationException ee) {_			ee.printStackTrace()__			Assert.fail("Unexpected Exception: " + ee.getMessage())__		} catch (ParseException pe) {_			pe.printStackTrace()__			Assert.fail("Unexpected Exception: " + pe.getMessage())__		}_	};scenario,using,the,standard,infrastructure,and,running,simple,expression,evaluation;test,public,void,try,spel,expression,parser,parser,new,spel,expression,parser,expression,expr,parser,parse,raw,new,string,hello,world,object,value,expr,get,value,value,expr,get,value,assert,assert,equals,hello,world,value,assert,assert,equals,string,class,value,get,class,catch,evaluation,exception,ee,ee,print,stack,trace,assert,fail,unexpected,exception,ee,get,message,catch,parse,exception,pe,pe,print,stack,trace,assert,fail,unexpected,exception,pe,get,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_UsingStandardInfrastructure();1357119417;Scenario: using the standard infrastructure and running simple expression evaluation.;@Test_	public void testScenario_UsingStandardInfrastructure() {_		try {_			_			SpelExpressionParser parser = new SpelExpressionParser()__			_			Expression expr = parser.parseRaw("new String('hello world')")__			_			Object value = expr.getValue()__			_			value = expr.getValue()___			assertEquals("hello world", value)__			assertEquals(String.class, value.getClass())__		} catch (EvaluationException ee) {_			ee.printStackTrace()__			fail("Unexpected Exception: " + ee.getMessage())__		} catch (ParseException pe) {_			pe.printStackTrace()__			fail("Unexpected Exception: " + pe.getMessage())__		}_	};scenario,using,the,standard,infrastructure,and,running,simple,expression,evaluation;test,public,void,try,spel,expression,parser,parser,new,spel,expression,parser,expression,expr,parser,parse,raw,new,string,hello,world,object,value,expr,get,value,value,expr,get,value,assert,equals,hello,world,value,assert,equals,string,class,value,get,class,catch,evaluation,exception,ee,ee,print,stack,trace,fail,unexpected,exception,ee,get,message,catch,parse,exception,pe,pe,print,stack,trace,fail,unexpected,exception,pe,get,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_UsingStandardInfrastructure();1391876651;Scenario: using the standard infrastructure and running simple expression evaluation.;@Test_	public void testScenario_UsingStandardInfrastructure() {_		try {_			_			SpelExpressionParser parser = new SpelExpressionParser()__			_			Expression expr = parser.parseRaw("new String('hello world')")__			_			Object value = expr.getValue()__			_			value = expr.getValue()___			assertEquals("hello world", value)__			assertEquals(String.class, value.getClass())__		} catch (EvaluationException ee) {_			ee.printStackTrace()__			fail("Unexpected Exception: " + ee.getMessage())__		} catch (ParseException pe) {_			pe.printStackTrace()__			fail("Unexpected Exception: " + pe.getMessage())__		}_	};scenario,using,the,standard,infrastructure,and,running,simple,expression,evaluation;test,public,void,try,spel,expression,parser,parser,new,spel,expression,parser,expression,expr,parser,parse,raw,new,string,hello,world,object,value,expr,get,value,value,expr,get,value,assert,equals,hello,world,value,assert,equals,string,class,value,get,class,catch,evaluation,exception,ee,ee,print,stack,trace,fail,unexpected,exception,ee,get,message,catch,parse,exception,pe,pe,print,stack,trace,fail,unexpected,exception,pe,get,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_UsingStandardInfrastructure();1413848647;Scenario: using the standard infrastructure and running simple expression evaluation.;@Test_	public void testScenario_UsingStandardInfrastructure() {_		try {_			_			SpelExpressionParser parser = new SpelExpressionParser()__			_			Expression expr = parser.parseRaw("new String('hello world')")__			_			Object value = expr.getValue()__			_			value = expr.getValue()___			assertEquals("hello world", value)__			assertEquals(String.class, value.getClass())__		} catch (EvaluationException ee) {_			ee.printStackTrace()__			fail("Unexpected Exception: " + ee.getMessage())__		} catch (ParseException pe) {_			pe.printStackTrace()__			fail("Unexpected Exception: " + pe.getMessage())__		}_	};scenario,using,the,standard,infrastructure,and,running,simple,expression,evaluation;test,public,void,try,spel,expression,parser,parser,new,spel,expression,parser,expression,expr,parser,parse,raw,new,string,hello,world,object,value,expr,get,value,value,expr,get,value,assert,equals,hello,world,value,assert,equals,string,class,value,get,class,catch,evaluation,exception,ee,ee,print,stack,trace,fail,unexpected,exception,ee,get,message,catch,parse,exception,pe,pe,print,stack,trace,fail,unexpected,exception,pe,get,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_UsingStandardInfrastructure();1458843770;Scenario: using the standard infrastructure and running simple expression evaluation.;@Test_	public void testScenario_UsingStandardInfrastructure() {_		try {_			_			SpelExpressionParser parser = new SpelExpressionParser()__			_			Expression expr = parser.parseRaw("new String('hello world')")__			_			Object value = expr.getValue()__			_			value = expr.getValue()___			assertEquals("hello world", value)__			assertEquals(String.class, value.getClass())__		}_		catch (EvaluationException ee) {_			ee.printStackTrace()__			fail("Unexpected Exception: " + ee.getMessage())__		}_		catch (ParseException pe) {_			pe.printStackTrace()__			fail("Unexpected Exception: " + pe.getMessage())__		}_	};scenario,using,the,standard,infrastructure,and,running,simple,expression,evaluation;test,public,void,try,spel,expression,parser,parser,new,spel,expression,parser,expression,expr,parser,parse,raw,new,string,hello,world,object,value,expr,get,value,value,expr,get,value,assert,equals,hello,world,value,assert,equals,string,class,value,get,class,catch,evaluation,exception,ee,ee,print,stack,trace,fail,unexpected,exception,ee,get,message,catch,parse,exception,pe,pe,print,stack,trace,fail,unexpected,exception,pe,get,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_UsingStandardInfrastructure();1461047077;Scenario: using the standard infrastructure and running simple expression evaluation.;@Test_	public void testScenario_UsingStandardInfrastructure() {_		try {_			_			SpelExpressionParser parser = new SpelExpressionParser()__			_			Expression expr = parser.parseRaw("new String('hello world')")__			_			Object value = expr.getValue()__			_			value = expr.getValue()___			assertEquals("hello world", value)__			assertEquals(String.class, value.getClass())__		}_		catch (EvaluationException ee) {_			ee.printStackTrace()__			fail("Unexpected Exception: " + ee.getMessage())__		}_		catch (ParseException pe) {_			pe.printStackTrace()__			fail("Unexpected Exception: " + pe.getMessage())__		}_	};scenario,using,the,standard,infrastructure,and,running,simple,expression,evaluation;test,public,void,try,spel,expression,parser,parser,new,spel,expression,parser,expression,expr,parser,parse,raw,new,string,hello,world,object,value,expr,get,value,value,expr,get,value,assert,equals,hello,world,value,assert,equals,string,class,value,get,class,catch,evaluation,exception,ee,ee,print,stack,trace,fail,unexpected,exception,ee,get,message,catch,parse,exception,pe,pe,print,stack,trace,fail,unexpected,exception,pe,get,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_UsingStandardInfrastructure();1467730834;Scenario: using the standard infrastructure and running simple expression evaluation.;@Test_	public void testScenario_UsingStandardInfrastructure() {_		try {_			_			SpelExpressionParser parser = new SpelExpressionParser()__			_			Expression expr = parser.parseRaw("new String('hello world')")__			_			Object value = expr.getValue()__			_			value = expr.getValue()___			assertEquals("hello world", value)__			assertEquals(String.class, value.getClass())__		}_		catch (EvaluationException ee) {_			ee.printStackTrace()__			fail("Unexpected Exception: " + ee.getMessage())__		}_		catch (ParseException pe) {_			pe.printStackTrace()__			fail("Unexpected Exception: " + pe.getMessage())__		}_	};scenario,using,the,standard,infrastructure,and,running,simple,expression,evaluation;test,public,void,try,spel,expression,parser,parser,new,spel,expression,parser,expression,expr,parser,parse,raw,new,string,hello,world,object,value,expr,get,value,value,expr,get,value,assert,equals,hello,world,value,assert,equals,string,class,value,get,class,catch,evaluation,exception,ee,ee,print,stack,trace,fail,unexpected,exception,ee,get,message,catch,parse,exception,pe,pe,print,stack,trace,fail,unexpected,exception,pe,get,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_UsingStandardInfrastructure();1518279448;Scenario: using the standard infrastructure and running simple expression evaluation.;@Test_	public void testScenario_UsingStandardInfrastructure() {_		try {_			_			SpelExpressionParser parser = new SpelExpressionParser()__			_			Expression expr = parser.parseRaw("new String('hello world')")__			_			Object value = expr.getValue()__			_			value = expr.getValue()___			assertEquals("hello world", value)__			assertEquals(String.class, value.getClass())__		}_		catch (EvaluationException ee) {_			ee.printStackTrace()__			fail("Unexpected Exception: " + ee.getMessage())__		}_		catch (ParseException pe) {_			pe.printStackTrace()__			fail("Unexpected Exception: " + pe.getMessage())__		}_	};scenario,using,the,standard,infrastructure,and,running,simple,expression,evaluation;test,public,void,try,spel,expression,parser,parser,new,spel,expression,parser,expression,expr,parser,parse,raw,new,string,hello,world,object,value,expr,get,value,value,expr,get,value,assert,equals,hello,world,value,assert,equals,string,class,value,get,class,catch,evaluation,exception,ee,ee,print,stack,trace,fail,unexpected,exception,ee,get,message,catch,parse,exception,pe,pe,print,stack,trace,fail,unexpected,exception,pe,get,message
ExpressionLanguageScenarioTests -> @Test 	public void testScenario_UsingStandardInfrastructure();1545727613;Scenario: using the standard infrastructure and running simple expression evaluation.;@Test_	public void testScenario_UsingStandardInfrastructure() {_		try {_			_			SpelExpressionParser parser = new SpelExpressionParser()__			_			Expression expr = parser.parseRaw("new String('hello world')")__			_			Object value = expr.getValue()__			_			value = expr.getValue()___			assertEquals("hello world", value)__			assertEquals(String.class, value.getClass())__		}_		catch (EvaluationException | ParseException ex) {_			ex.printStackTrace()__			fail("Unexpected Exception: " + ex.getMessage())__		}_	};scenario,using,the,standard,infrastructure,and,running,simple,expression,evaluation;test,public,void,try,spel,expression,parser,parser,new,spel,expression,parser,expression,expr,parser,parse,raw,new,string,hello,world,object,value,expr,get,value,value,expr,get,value,assert,equals,hello,world,value,assert,equals,string,class,value,get,class,catch,evaluation,exception,parse,exception,ex,ex,print,stack,trace,fail,unexpected,exception,ex,get,message
