# id;timestamp;commentText;codeText;commentWords;codeWords
SpelCompilationPerformanceTests -> @Test 	public void compilingMathematicalExpressionsWithDifferentOperandTypes() throws Exception;1425666762;This test verifies the new support for compiling mathematical expressions with_different operand types.;@Test_	public void compilingMathematicalExpressionsWithDifferentOperandTypes() throws Exception {_		NumberHolder nh = new NumberHolder()__		expression = parser.parseExpression("(T(Integer).valueOf(payload).doubleValue())/18D")__		Object o = expression.getValue(nh)__		assertEquals(2d,o)__		System.out.println("Performance check for SpEL expression: '(T(Integer).valueOf(payload).doubleValue())/18D'")__		long stime = System.currentTimeMillis()__		for (int i=0_i<1000000_i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: "+(System.currentTimeMillis()-stime)+"ms")__		stime = System.currentTimeMillis()__		for (int i=0_i<1000000_i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: "+(System.currentTimeMillis()-stime)+"ms")__		stime = System.currentTimeMillis()__		for (int i=0_i<1000000_i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: "+(System.currentTimeMillis()-stime)+"ms")__		compile(expression)__		System.out.println("Now compiled:")__		o = expression.getValue(nh)__		assertEquals(2d, o)__		_		stime = System.currentTimeMillis()__		for (int i=0_i<1000000_i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: "+(System.currentTimeMillis()-stime)+"ms")__		stime = System.currentTimeMillis()__		for (int i=0_i<1000000_i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: "+(System.currentTimeMillis()-stime)+"ms")__		stime = System.currentTimeMillis()__		for (int i=0_i<1000000_i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: "+(System.currentTimeMillis()-stime)+"ms")__		_		expression = parser.parseExpression("payload/18D")__		o = expression.getValue(nh)__		assertEquals(2d,o)__		System.out.println("Performance check for SpEL expression: 'payload/18D'")__		stime = System.currentTimeMillis()__		for (int i=0_i<1000000_i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: "+(System.currentTimeMillis()-stime)+"ms")__		stime = System.currentTimeMillis()__		for (int i=0_i<1000000_i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: "+(System.currentTimeMillis()-stime)+"ms")__		stime = System.currentTimeMillis()__		for (int i=0_i<1000000_i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: "+(System.currentTimeMillis()-stime)+"ms")__		compile(expression)__		System.out.println("Now compiled:")__		o = expression.getValue(nh)__		assertEquals(2d, o)__		_		stime = System.currentTimeMillis()__		for (int i=0_i<1000000_i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: "+(System.currentTimeMillis()-stime)+"ms")__		stime = System.currentTimeMillis()__		for (int i=0_i<1000000_i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: "+(System.currentTimeMillis()-stime)+"ms")__		stime = System.currentTimeMillis()__		for (int i=0_i<1000000_i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: "+(System.currentTimeMillis()-stime)+"ms")__	};this,test,verifies,the,new,support,for,compiling,mathematical,expressions,with,different,operand,types;test,public,void,compiling,mathematical,expressions,with,different,operand,types,throws,exception,number,holder,nh,new,number,holder,expression,parser,parse,expression,t,integer,value,of,payload,double,value,18d,object,o,expression,get,value,nh,assert,equals,2d,o,system,out,println,performance,check,for,sp,el,expression,t,integer,value,of,payload,double,value,18d,long,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,compile,expression,system,out,println,now,compiled,o,expression,get,value,nh,assert,equals,2d,o,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,expression,parser,parse,expression,payload,18d,o,expression,get,value,nh,assert,equals,2d,o,system,out,println,performance,check,for,sp,el,expression,payload,18d,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,compile,expression,system,out,println,now,compiled,o,expression,get,value,nh,assert,equals,2d,o,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms
SpelCompilationPerformanceTests -> @Test 	public void compilingMathematicalExpressionsWithDifferentOperandTypes() throws Exception;1425759378;This test verifies the new support for compiling mathematical expressions with_different operand types.;@Test_	public void compilingMathematicalExpressionsWithDifferentOperandTypes() throws Exception {_		NumberHolder nh = new NumberHolder()__		expression = parser.parseExpression("(T(Integer).valueOf(payload).doubleValue())/18D")__		Object o = expression.getValue(nh)__		assertEquals(2d,o)__		System.out.println("Performance check for SpEL expression: '(T(Integer).valueOf(payload).doubleValue())/18D'")__		long stime = System.currentTimeMillis()__		for (int i=0_i<1000000_i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: "+(System.currentTimeMillis()-stime)+"ms")__		stime = System.currentTimeMillis()__		for (int i=0_i<1000000_i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: "+(System.currentTimeMillis()-stime)+"ms")__		stime = System.currentTimeMillis()__		for (int i=0_i<1000000_i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: "+(System.currentTimeMillis()-stime)+"ms")__		compile(expression)__		System.out.println("Now compiled:")__		o = expression.getValue(nh)__		assertEquals(2d, o)___		stime = System.currentTimeMillis()__		for (int i=0_i<1000000_i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: "+(System.currentTimeMillis()-stime)+"ms")__		stime = System.currentTimeMillis()__		for (int i=0_i<1000000_i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: "+(System.currentTimeMillis()-stime)+"ms")__		stime = System.currentTimeMillis()__		for (int i=0_i<1000000_i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: "+(System.currentTimeMillis()-stime)+"ms")___		expression = parser.parseExpression("payload/18D")__		o = expression.getValue(nh)__		assertEquals(2d,o)__		System.out.println("Performance check for SpEL expression: 'payload/18D'")__		stime = System.currentTimeMillis()__		for (int i=0_i<1000000_i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: "+(System.currentTimeMillis()-stime)+"ms")__		stime = System.currentTimeMillis()__		for (int i=0_i<1000000_i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: "+(System.currentTimeMillis()-stime)+"ms")__		stime = System.currentTimeMillis()__		for (int i=0_i<1000000_i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: "+(System.currentTimeMillis()-stime)+"ms")__		compile(expression)__		System.out.println("Now compiled:")__		o = expression.getValue(nh)__		assertEquals(2d, o)___		stime = System.currentTimeMillis()__		for (int i=0_i<1000000_i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: "+(System.currentTimeMillis()-stime)+"ms")__		stime = System.currentTimeMillis()__		for (int i=0_i<1000000_i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: "+(System.currentTimeMillis()-stime)+"ms")__		stime = System.currentTimeMillis()__		for (int i=0_i<1000000_i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: "+(System.currentTimeMillis()-stime)+"ms")__	};this,test,verifies,the,new,support,for,compiling,mathematical,expressions,with,different,operand,types;test,public,void,compiling,mathematical,expressions,with,different,operand,types,throws,exception,number,holder,nh,new,number,holder,expression,parser,parse,expression,t,integer,value,of,payload,double,value,18d,object,o,expression,get,value,nh,assert,equals,2d,o,system,out,println,performance,check,for,sp,el,expression,t,integer,value,of,payload,double,value,18d,long,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,compile,expression,system,out,println,now,compiled,o,expression,get,value,nh,assert,equals,2d,o,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,expression,parser,parse,expression,payload,18d,o,expression,get,value,nh,assert,equals,2d,o,system,out,println,performance,check,for,sp,el,expression,payload,18d,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,compile,expression,system,out,println,now,compiled,o,expression,get,value,nh,assert,equals,2d,o,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms
SpelCompilationPerformanceTests -> @Test 	public void compilingMathematicalExpressionsWithDifferentOperandTypes() throws Exception;1458843770;This test verifies the new support for compiling mathematical expressions with_different operand types.;@Test_	public void compilingMathematicalExpressionsWithDifferentOperandTypes() throws Exception {_		NumberHolder nh = new NumberHolder()__		expression = parser.parseExpression("(T(Integer).valueOf(payload).doubleValue())/18D")__		Object o = expression.getValue(nh)__		assertEquals(2d,o)__		System.out.println("Performance check for SpEL expression: '(T(Integer).valueOf(payload).doubleValue())/18D'")__		long stime = System.currentTimeMillis()__		for (int i = 0_ i < 1000000_ i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: " + (System.currentTimeMillis()-stime) + "ms")__		stime = System.currentTimeMillis()__		for (int i = 0_ i < 1000000_ i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: " + (System.currentTimeMillis()-stime) + "ms")__		stime = System.currentTimeMillis()__		for (int i = 0_ i < 1000000_ i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: " + (System.currentTimeMillis()-stime) + "ms")__		compile(expression)__		System.out.println("Now compiled:")__		o = expression.getValue(nh)__		assertEquals(2d, o)___		stime = System.currentTimeMillis()__		for (int i = 0_ i < 1000000_ i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: " + (System.currentTimeMillis()-stime) + "ms")__		stime = System.currentTimeMillis()__		for (int i = 0_ i < 1000000_ i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: " + (System.currentTimeMillis()-stime) + "ms")__		stime = System.currentTimeMillis()__		for (int i = 0_ i < 1000000_ i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: " + (System.currentTimeMillis()-stime) + "ms")___		expression = parser.parseExpression("payload/18D")__		o = expression.getValue(nh)__		assertEquals(2d,o)__		System.out.println("Performance check for SpEL expression: 'payload/18D'")__		stime = System.currentTimeMillis()__		for (int i = 0_ i < 1000000_ i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: " + (System.currentTimeMillis()-stime) + "ms")__		stime = System.currentTimeMillis()__		for (int i = 0_ i < 1000000_ i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: " + (System.currentTimeMillis()-stime) + "ms")__		stime = System.currentTimeMillis()__		for (int i = 0_ i < 1000000_ i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: " + (System.currentTimeMillis()-stime) + "ms")__		compile(expression)__		System.out.println("Now compiled:")__		o = expression.getValue(nh)__		assertEquals(2d, o)___		stime = System.currentTimeMillis()__		for (int i = 0_ i < 1000000_ i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: " + (System.currentTimeMillis()-stime) + "ms")__		stime = System.currentTimeMillis()__		for (int i = 0_ i < 1000000_ i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: " + (System.currentTimeMillis()-stime) + "ms")__		stime = System.currentTimeMillis()__		for (int i = 0_ i < 1000000_ i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: " + (System.currentTimeMillis()-stime) + "ms")__	};this,test,verifies,the,new,support,for,compiling,mathematical,expressions,with,different,operand,types;test,public,void,compiling,mathematical,expressions,with,different,operand,types,throws,exception,number,holder,nh,new,number,holder,expression,parser,parse,expression,t,integer,value,of,payload,double,value,18d,object,o,expression,get,value,nh,assert,equals,2d,o,system,out,println,performance,check,for,sp,el,expression,t,integer,value,of,payload,double,value,18d,long,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,compile,expression,system,out,println,now,compiled,o,expression,get,value,nh,assert,equals,2d,o,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,expression,parser,parse,expression,payload,18d,o,expression,get,value,nh,assert,equals,2d,o,system,out,println,performance,check,for,sp,el,expression,payload,18d,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,compile,expression,system,out,println,now,compiled,o,expression,get,value,nh,assert,equals,2d,o,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms
SpelCompilationPerformanceTests -> @Test 	public void compilingMathematicalExpressionsWithDifferentOperandTypes() throws Exception;1500046626;This test verifies the new support for compiling mathematical expressions with_different operand types.;@Test_	public void compilingMathematicalExpressionsWithDifferentOperandTypes() throws Exception {_		NumberHolder nh = new NumberHolder()__		expression = parser.parseExpression("(T(Integer).valueOf(payload).doubleValue())/18D")__		Object o = expression.getValue(nh)__		assertEquals(2d,o)__		System.out.println("Performance check for SpEL expression: '(T(Integer).valueOf(payload).doubleValue())/18D'")__		long stime = System.currentTimeMillis()__		for (int i = 0_ i < 1000000_ i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: " + (System.currentTimeMillis()-stime) + "ms")__		stime = System.currentTimeMillis()__		for (int i = 0_ i < 1000000_ i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: " + (System.currentTimeMillis()-stime) + "ms")__		stime = System.currentTimeMillis()__		for (int i = 0_ i < 1000000_ i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: " + (System.currentTimeMillis()-stime) + "ms")__		compile(expression)__		System.out.println("Now compiled:")__		o = expression.getValue(nh)__		assertEquals(2d, o)___		stime = System.currentTimeMillis()__		for (int i = 0_ i < 1000000_ i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: " + (System.currentTimeMillis()-stime) + "ms")__		stime = System.currentTimeMillis()__		for (int i = 0_ i < 1000000_ i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: " + (System.currentTimeMillis()-stime) + "ms")__		stime = System.currentTimeMillis()__		for (int i = 0_ i < 1000000_ i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: " + (System.currentTimeMillis()-stime) + "ms")___		expression = parser.parseExpression("payload/18D")__		o = expression.getValue(nh)__		assertEquals(2d,o)__		System.out.println("Performance check for SpEL expression: 'payload/18D'")__		stime = System.currentTimeMillis()__		for (int i = 0_ i < 1000000_ i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: " + (System.currentTimeMillis()-stime) + "ms")__		stime = System.currentTimeMillis()__		for (int i = 0_ i < 1000000_ i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: " + (System.currentTimeMillis()-stime) + "ms")__		stime = System.currentTimeMillis()__		for (int i = 0_ i < 1000000_ i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: " + (System.currentTimeMillis()-stime) + "ms")__		compile(expression)__		System.out.println("Now compiled:")__		o = expression.getValue(nh)__		assertEquals(2d, o)___		stime = System.currentTimeMillis()__		for (int i = 0_ i < 1000000_ i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: " + (System.currentTimeMillis()-stime) + "ms")__		stime = System.currentTimeMillis()__		for (int i = 0_ i < 1000000_ i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: " + (System.currentTimeMillis()-stime) + "ms")__		stime = System.currentTimeMillis()__		for (int i = 0_ i < 1000000_ i++) {_			o = expression.getValue(nh)__		}_		System.out.println("One million iterations: " + (System.currentTimeMillis()-stime) + "ms")__	};this,test,verifies,the,new,support,for,compiling,mathematical,expressions,with,different,operand,types;test,public,void,compiling,mathematical,expressions,with,different,operand,types,throws,exception,number,holder,nh,new,number,holder,expression,parser,parse,expression,t,integer,value,of,payload,double,value,18d,object,o,expression,get,value,nh,assert,equals,2d,o,system,out,println,performance,check,for,sp,el,expression,t,integer,value,of,payload,double,value,18d,long,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,compile,expression,system,out,println,now,compiled,o,expression,get,value,nh,assert,equals,2d,o,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,expression,parser,parse,expression,payload,18d,o,expression,get,value,nh,assert,equals,2d,o,system,out,println,performance,check,for,sp,el,expression,payload,18d,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,compile,expression,system,out,println,now,compiled,o,expression,get,value,nh,assert,equals,2d,o,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms,stime,system,current,time,millis,for,int,i,0,i,1000000,i,o,expression,get,value,nh,system,out,println,one,million,iterations,system,current,time,millis,stime,ms
