# id;timestamp;commentText;codeText;commentWords;codeWords
PlaceOfBirth -> @Override 	public String toString();1328020251;Keith now has a converter that supports String to X, if X has a ctor that takes a String._In order for round tripping to work we need toString() for X to return what it was_constructed with.  This is a bit of a hack because a PlaceOfBirth also encapsulates a_country - but as it is just a test object, it is ok.;@Override_	public String toString() {return city_};keith,now,has,a,converter,that,supports,string,to,x,if,x,has,a,ctor,that,takes,a,string,in,order,for,round,tripping,to,work,we,need,to,string,for,x,to,return,what,it,was,constructed,with,this,is,a,bit,of,a,hack,because,a,place,of,birth,also,encapsulates,a,country,but,as,it,is,just,a,test,object,it,is,ok;override,public,string,to,string,return,city
PlaceOfBirth -> @Override 	public String toString();1356735495;Keith now has a converter that supports String to X, if X has a ctor that takes a String._In order for round tripping to work we need toString() for X to return what it was_constructed with.  This is a bit of a hack because a PlaceOfBirth also encapsulates a_country - but as it is just a test object, it is ok.;@Override_	public String toString() {return city_};keith,now,has,a,converter,that,supports,string,to,x,if,x,has,a,ctor,that,takes,a,string,in,order,for,round,tripping,to,work,we,need,to,string,for,x,to,return,what,it,was,constructed,with,this,is,a,bit,of,a,hack,because,a,place,of,birth,also,encapsulates,a,country,but,as,it,is,just,a,test,object,it,is,ok;override,public,string,to,string,return,city
PlaceOfBirth -> @Override 	public String toString();1368482696;Keith now has a converter that supports String to X, if X has a ctor that takes a String._In order for round tripping to work we need toString() for X to return what it was_constructed with.  This is a bit of a hack because a PlaceOfBirth also encapsulates a_country - but as it is just a test object, it is ok.;@Override_	public String toString() {return city_};keith,now,has,a,converter,that,supports,string,to,x,if,x,has,a,ctor,that,takes,a,string,in,order,for,round,tripping,to,work,we,need,to,string,for,x,to,return,what,it,was,constructed,with,this,is,a,bit,of,a,hack,because,a,place,of,birth,also,encapsulates,a,country,but,as,it,is,just,a,test,object,it,is,ok;override,public,string,to,string,return,city
PlaceOfBirth -> @Override 	public String toString();1530174524;Keith now has a converter that supports String to X, if X has a ctor that takes a String._In order for round tripping to work we need toString() for X to return what it was_constructed with.  This is a bit of a hack because a PlaceOfBirth also encapsulates a_country - but as it is just a test object, it is ok.;@Override_	public String toString() {return city_};keith,now,has,a,converter,that,supports,string,to,x,if,x,has,a,ctor,that,takes,a,string,in,order,for,round,tripping,to,work,we,need,to,string,for,x,to,return,what,it,was,constructed,with,this,is,a,bit,of,a,hack,because,a,place,of,birth,also,encapsulates,a,country,but,as,it,is,just,a,test,object,it,is,ok;override,public,string,to,string,return,city
