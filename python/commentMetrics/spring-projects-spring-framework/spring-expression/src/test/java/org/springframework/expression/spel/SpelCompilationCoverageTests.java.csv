# id;timestamp;commentText;codeText;commentWords;codeWords
SpelCompilationCoverageTests -> @Test 	public void constructorReference_SPR13781();1449878380;Test variants of using T(...) and static/non-static method/property/field references.;@Test_	public void constructorReference_SPR13781() {_		_		expression = parser.parseExpression("T(java.util.Locale).ENGLISH")__		assertEquals("en",expression.getValue().toString())__		assertCanCompile(expression)__		assertEquals("en",expression.getValue().toString())___		_		_		_		_		_		expression = parser.parseExpression("#userId.toString().toLowerCase(T(java.util.Locale).ENGLISH)")__		StandardEvaluationContext context =_				new StandardEvaluationContext()__		context.setVariable("userId", "RoDnEy")__		assertEquals("rodney",expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("rodney",expression.getValue(context))___		_		expression = parser.parseExpression("T(String).name")__		assertEquals("java.lang.String",expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String",expression.getValue())___		_		context = new StandardEvaluationContext(String.class)__		expression = parser.parseExpression("name")__		assertEquals("java.lang.String",expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("java.lang.String",expression.getValue(context))___		expression = parser.parseExpression("T(String).getName()")__		assertEquals("java.lang.String",expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String",expression.getValue())__		_		_		_		_		_		__		String shclass = StaticsHelper.class.getName()__		_		expression = parser.parseExpression("T(String).valueOf(T(String).name.valueOf(1))")__		assertEquals("1",expression.getValue())__		assertCanCompile(expression)__		assertEquals("1",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").methoda().methoda().methodb())")__		assertEquals("mb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("mb",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").fielda.fielda.fieldb)")__		assertEquals("fb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").propertya.propertya.propertyb)")__		assertEquals("pb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("pb",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").fielda.methoda().propertya.fieldb)")__		assertEquals("fb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb",expression.getValue())___		expression = parser.parseExpression("T(String).valueOf(fielda.fieldb)")__		assertEquals("fb",expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("fb",expression.getValue(StaticsHelper.sh))__		_		expression = parser.parseExpression("T(String).valueOf(propertya.propertyb)")__		assertEquals("pb",expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("pb",expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(methoda().methodb())")__		assertEquals("mb",expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("mb",expression.getValue(StaticsHelper.sh))__		_	};test,variants,of,using,t,and,static,non,static,method,property,field,references;test,public,void,expression,parser,parse,expression,t,java,util,locale,english,assert,equals,en,expression,get,value,to,string,assert,can,compile,expression,assert,equals,en,expression,get,value,to,string,expression,parser,parse,expression,user,id,to,string,to,lower,case,t,java,util,locale,english,standard,evaluation,context,context,new,standard,evaluation,context,context,set,variable,user,id,ro,dn,ey,assert,equals,rodney,expression,get,value,context,assert,can,compile,expression,assert,equals,rodney,expression,get,value,context,expression,parser,parse,expression,t,string,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,new,standard,evaluation,context,string,class,expression,parser,parse,expression,name,assert,equals,java,lang,string,expression,get,value,context,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,expression,parser,parse,expression,t,string,get,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,string,shclass,statics,helper,class,get,name,expression,parser,parse,expression,t,string,value,of,t,string,name,value,of,1,assert,equals,1,expression,get,value,assert,can,compile,expression,assert,equals,1,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,methoda,methoda,methodb,assert,equals,mb,expression,get,value,assert,can,compile,expression,assert,equals,mb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,fielda,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,propertya,propertya,propertyb,assert,equals,pb,expression,get,value,assert,can,compile,expression,assert,equals,pb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,methoda,propertya,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,fielda,fieldb,assert,equals,fb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,fb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,propertya,propertyb,assert,equals,pb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,pb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,methoda,methodb,assert,equals,mb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,mb,expression,get,value,statics,helper,sh
SpelCompilationCoverageTests -> @Test 	public void constructorReference_SPR13781();1456768377;Test variants of using T(...) and static/non-static method/property/field references.;@Test_	public void constructorReference_SPR13781() {_		_		expression = parser.parseExpression("T(java.util.Locale).ENGLISH")__		assertEquals("en",expression.getValue().toString())__		assertCanCompile(expression)__		assertEquals("en",expression.getValue().toString())___		_		_		_		_		_		expression = parser.parseExpression("#userId.toString().toLowerCase(T(java.util.Locale).ENGLISH)")__		StandardEvaluationContext context =_				new StandardEvaluationContext()__		context.setVariable("userId", "RoDnEy")__		assertEquals("rodney",expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("rodney",expression.getValue(context))___		_		expression = parser.parseExpression("T(String).name")__		assertEquals("java.lang.String",expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String",expression.getValue())___		_		context = new StandardEvaluationContext(String.class)__		expression = parser.parseExpression("name")__		assertEquals("java.lang.String",expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("java.lang.String",expression.getValue(context))___		expression = parser.parseExpression("T(String).getName()")__		assertEquals("java.lang.String",expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String",expression.getValue())__	_		_		_		_		_		__		String shclass = StaticsHelper.class.getName()__		_		expression = parser.parseExpression("T(String).valueOf(T(String).name.valueOf(1))")__		assertEquals("1",expression.getValue())__		assertCanCompile(expression)__		assertEquals("1",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").methoda().methoda().methodb())")__		assertEquals("mb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("mb",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").fielda.fielda.fieldb)")__		assertEquals("fb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").propertya.propertya.propertyb)")__		assertEquals("pb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("pb",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").fielda.methoda().propertya.fieldb)")__		assertEquals("fb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb",expression.getValue())___		expression = parser.parseExpression("T(String).valueOf(fielda.fieldb)")__		assertEquals("fb",expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("fb",expression.getValue(StaticsHelper.sh))__	_		expression = parser.parseExpression("T(String).valueOf(propertya.propertyb)")__		assertEquals("pb",expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("pb",expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(methoda().methodb())")__		assertEquals("mb",expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("mb",expression.getValue(StaticsHelper.sh))__	_	};test,variants,of,using,t,and,static,non,static,method,property,field,references;test,public,void,expression,parser,parse,expression,t,java,util,locale,english,assert,equals,en,expression,get,value,to,string,assert,can,compile,expression,assert,equals,en,expression,get,value,to,string,expression,parser,parse,expression,user,id,to,string,to,lower,case,t,java,util,locale,english,standard,evaluation,context,context,new,standard,evaluation,context,context,set,variable,user,id,ro,dn,ey,assert,equals,rodney,expression,get,value,context,assert,can,compile,expression,assert,equals,rodney,expression,get,value,context,expression,parser,parse,expression,t,string,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,new,standard,evaluation,context,string,class,expression,parser,parse,expression,name,assert,equals,java,lang,string,expression,get,value,context,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,expression,parser,parse,expression,t,string,get,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,string,shclass,statics,helper,class,get,name,expression,parser,parse,expression,t,string,value,of,t,string,name,value,of,1,assert,equals,1,expression,get,value,assert,can,compile,expression,assert,equals,1,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,methoda,methoda,methodb,assert,equals,mb,expression,get,value,assert,can,compile,expression,assert,equals,mb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,fielda,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,propertya,propertya,propertyb,assert,equals,pb,expression,get,value,assert,can,compile,expression,assert,equals,pb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,methoda,propertya,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,fielda,fieldb,assert,equals,fb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,fb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,propertya,propertyb,assert,equals,pb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,pb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,methoda,methodb,assert,equals,mb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,mb,expression,get,value,statics,helper,sh
SpelCompilationCoverageTests -> @Test 	public void constructorReference_SPR13781();1458843770;Test variants of using T(...) and static/non-static method/property/field references.;@Test_	public void constructorReference_SPR13781() {_		_		expression = parser.parseExpression("T(java.util.Locale).ENGLISH")__		assertEquals("en",expression.getValue().toString())__		assertCanCompile(expression)__		assertEquals("en",expression.getValue().toString())___		_		_		_		_		_		expression = parser.parseExpression("#userId.toString().toLowerCase(T(java.util.Locale).ENGLISH)")__		StandardEvaluationContext context =_				new StandardEvaluationContext()__		context.setVariable("userId", "RoDnEy")__		assertEquals("rodney",expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("rodney",expression.getValue(context))___		_		expression = parser.parseExpression("T(String).name")__		assertEquals("java.lang.String",expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String",expression.getValue())___		_		context = new StandardEvaluationContext(String.class)__		expression = parser.parseExpression("name")__		assertEquals("java.lang.String",expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("java.lang.String",expression.getValue(context))___		expression = parser.parseExpression("T(String).getName()")__		assertEquals("java.lang.String",expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String",expression.getValue())__	_		_		_		_		_		__		String shclass = StaticsHelper.class.getName()__		_		expression = parser.parseExpression("T(String).valueOf(T(String).name.valueOf(1))")__		assertEquals("1",expression.getValue())__		assertCanCompile(expression)__		assertEquals("1",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").methoda().methoda().methodb())")__		assertEquals("mb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("mb",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").fielda.fielda.fieldb)")__		assertEquals("fb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").propertya.propertya.propertyb)")__		assertEquals("pb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("pb",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").fielda.methoda().propertya.fieldb)")__		assertEquals("fb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb",expression.getValue())___		expression = parser.parseExpression("T(String).valueOf(fielda.fieldb)")__		assertEquals("fb",expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("fb",expression.getValue(StaticsHelper.sh))__	_		expression = parser.parseExpression("T(String).valueOf(propertya.propertyb)")__		assertEquals("pb",expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("pb",expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(methoda().methodb())")__		assertEquals("mb",expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("mb",expression.getValue(StaticsHelper.sh))__	_	};test,variants,of,using,t,and,static,non,static,method,property,field,references;test,public,void,expression,parser,parse,expression,t,java,util,locale,english,assert,equals,en,expression,get,value,to,string,assert,can,compile,expression,assert,equals,en,expression,get,value,to,string,expression,parser,parse,expression,user,id,to,string,to,lower,case,t,java,util,locale,english,standard,evaluation,context,context,new,standard,evaluation,context,context,set,variable,user,id,ro,dn,ey,assert,equals,rodney,expression,get,value,context,assert,can,compile,expression,assert,equals,rodney,expression,get,value,context,expression,parser,parse,expression,t,string,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,new,standard,evaluation,context,string,class,expression,parser,parse,expression,name,assert,equals,java,lang,string,expression,get,value,context,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,expression,parser,parse,expression,t,string,get,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,string,shclass,statics,helper,class,get,name,expression,parser,parse,expression,t,string,value,of,t,string,name,value,of,1,assert,equals,1,expression,get,value,assert,can,compile,expression,assert,equals,1,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,methoda,methoda,methodb,assert,equals,mb,expression,get,value,assert,can,compile,expression,assert,equals,mb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,fielda,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,propertya,propertya,propertyb,assert,equals,pb,expression,get,value,assert,can,compile,expression,assert,equals,pb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,methoda,propertya,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,fielda,fieldb,assert,equals,fb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,fb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,propertya,propertyb,assert,equals,pb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,pb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,methoda,methodb,assert,equals,mb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,mb,expression,get,value,statics,helper,sh
SpelCompilationCoverageTests -> @Test 	public void constructorReference_SPR13781();1462467435;Test variants of using T(...) and static/non-static method/property/field references.;@Test_	public void constructorReference_SPR13781() {_		_		expression = parser.parseExpression("T(java.util.Locale).ENGLISH")__		assertEquals("en",expression.getValue().toString())__		assertCanCompile(expression)__		assertEquals("en",expression.getValue().toString())___		_		_		_		_		_		expression = parser.parseExpression("#userId.toString().toLowerCase(T(java.util.Locale).ENGLISH)")__		StandardEvaluationContext context =_				new StandardEvaluationContext()__		context.setVariable("userId", "RoDnEy")__		assertEquals("rodney",expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("rodney",expression.getValue(context))___		_		expression = parser.parseExpression("T(String).name")__		assertEquals("java.lang.String",expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String",expression.getValue())___		_		context = new StandardEvaluationContext(String.class)__		expression = parser.parseExpression("name")__		assertEquals("java.lang.String",expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("java.lang.String",expression.getValue(context))___		expression = parser.parseExpression("T(String).getName()")__		assertEquals("java.lang.String",expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String",expression.getValue())__	_		_		_		_		_		__		String shclass = StaticsHelper.class.getName()__		_		expression = parser.parseExpression("T(String).valueOf(T(String).name.valueOf(1))")__		assertEquals("1",expression.getValue())__		assertCanCompile(expression)__		assertEquals("1",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").methoda().methoda().methodb())")__		assertEquals("mb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("mb",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").fielda.fielda.fieldb)")__		assertEquals("fb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").propertya.propertya.propertyb)")__		assertEquals("pb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("pb",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").fielda.methoda().propertya.fieldb)")__		assertEquals("fb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb",expression.getValue())___		expression = parser.parseExpression("T(String).valueOf(fielda.fieldb)")__		assertEquals("fb",expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("fb",expression.getValue(StaticsHelper.sh))__	_		expression = parser.parseExpression("T(String).valueOf(propertya.propertyb)")__		assertEquals("pb",expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("pb",expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(methoda().methodb())")__		assertEquals("mb",expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("mb",expression.getValue(StaticsHelper.sh))__	_	};test,variants,of,using,t,and,static,non,static,method,property,field,references;test,public,void,expression,parser,parse,expression,t,java,util,locale,english,assert,equals,en,expression,get,value,to,string,assert,can,compile,expression,assert,equals,en,expression,get,value,to,string,expression,parser,parse,expression,user,id,to,string,to,lower,case,t,java,util,locale,english,standard,evaluation,context,context,new,standard,evaluation,context,context,set,variable,user,id,ro,dn,ey,assert,equals,rodney,expression,get,value,context,assert,can,compile,expression,assert,equals,rodney,expression,get,value,context,expression,parser,parse,expression,t,string,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,new,standard,evaluation,context,string,class,expression,parser,parse,expression,name,assert,equals,java,lang,string,expression,get,value,context,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,expression,parser,parse,expression,t,string,get,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,string,shclass,statics,helper,class,get,name,expression,parser,parse,expression,t,string,value,of,t,string,name,value,of,1,assert,equals,1,expression,get,value,assert,can,compile,expression,assert,equals,1,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,methoda,methoda,methodb,assert,equals,mb,expression,get,value,assert,can,compile,expression,assert,equals,mb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,fielda,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,propertya,propertya,propertyb,assert,equals,pb,expression,get,value,assert,can,compile,expression,assert,equals,pb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,methoda,propertya,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,fielda,fieldb,assert,equals,fb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,fb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,propertya,propertyb,assert,equals,pb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,pb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,methoda,methodb,assert,equals,mb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,mb,expression,get,value,statics,helper,sh
SpelCompilationCoverageTests -> @Test 	public void constructorReference_SPR13781();1467730834;Test variants of using T(...) and static/non-static method/property/field references.;@Test_	public void constructorReference_SPR13781() {_		_		expression = parser.parseExpression("T(java.util.Locale).ENGLISH")__		assertEquals("en",expression.getValue().toString())__		assertCanCompile(expression)__		assertEquals("en",expression.getValue().toString())___		_		_		_		_		_		expression = parser.parseExpression("#userId.toString().toLowerCase(T(java.util.Locale).ENGLISH)")__		StandardEvaluationContext context =_				new StandardEvaluationContext()__		context.setVariable("userId", "RoDnEy")__		assertEquals("rodney",expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("rodney",expression.getValue(context))___		_		expression = parser.parseExpression("T(String).name")__		assertEquals("java.lang.String",expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String",expression.getValue())___		_		context = new StandardEvaluationContext(String.class)__		expression = parser.parseExpression("name")__		assertEquals("java.lang.String",expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("java.lang.String",expression.getValue(context))___		expression = parser.parseExpression("T(String).getName()")__		assertEquals("java.lang.String",expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String",expression.getValue())__	_		_		_		_		_		__		String shclass = StaticsHelper.class.getName()__		_		expression = parser.parseExpression("T(String).valueOf(T(String).name.valueOf(1))")__		assertEquals("1",expression.getValue())__		assertCanCompile(expression)__		assertEquals("1",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").methoda().methoda().methodb())")__		assertEquals("mb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("mb",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").fielda.fielda.fieldb)")__		assertEquals("fb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").propertya.propertya.propertyb)")__		assertEquals("pb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("pb",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").fielda.methoda().propertya.fieldb)")__		assertEquals("fb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb",expression.getValue())___		expression = parser.parseExpression("T(String).valueOf(fielda.fieldb)")__		assertEquals("fb",expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("fb",expression.getValue(StaticsHelper.sh))__	_		expression = parser.parseExpression("T(String).valueOf(propertya.propertyb)")__		assertEquals("pb",expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("pb",expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(methoda().methodb())")__		assertEquals("mb",expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("mb",expression.getValue(StaticsHelper.sh))__	_	};test,variants,of,using,t,and,static,non,static,method,property,field,references;test,public,void,expression,parser,parse,expression,t,java,util,locale,english,assert,equals,en,expression,get,value,to,string,assert,can,compile,expression,assert,equals,en,expression,get,value,to,string,expression,parser,parse,expression,user,id,to,string,to,lower,case,t,java,util,locale,english,standard,evaluation,context,context,new,standard,evaluation,context,context,set,variable,user,id,ro,dn,ey,assert,equals,rodney,expression,get,value,context,assert,can,compile,expression,assert,equals,rodney,expression,get,value,context,expression,parser,parse,expression,t,string,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,new,standard,evaluation,context,string,class,expression,parser,parse,expression,name,assert,equals,java,lang,string,expression,get,value,context,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,expression,parser,parse,expression,t,string,get,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,string,shclass,statics,helper,class,get,name,expression,parser,parse,expression,t,string,value,of,t,string,name,value,of,1,assert,equals,1,expression,get,value,assert,can,compile,expression,assert,equals,1,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,methoda,methoda,methodb,assert,equals,mb,expression,get,value,assert,can,compile,expression,assert,equals,mb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,fielda,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,propertya,propertya,propertyb,assert,equals,pb,expression,get,value,assert,can,compile,expression,assert,equals,pb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,methoda,propertya,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,fielda,fieldb,assert,equals,fb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,fb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,propertya,propertyb,assert,equals,pb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,pb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,methoda,methodb,assert,equals,mb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,mb,expression,get,value,statics,helper,sh
SpelCompilationCoverageTests -> @Test 	public void constructorReference_SPR13781();1472477110;Test variants of using T(...) and static/non-static method/property/field references.;@Test_	public void constructorReference_SPR13781() {_		_		expression = parser.parseExpression("T(java.util.Locale).ENGLISH")__		assertEquals("en",expression.getValue().toString())__		assertCanCompile(expression)__		assertEquals("en",expression.getValue().toString())___		_		_		_		_		_		expression = parser.parseExpression("#userId.toString().toLowerCase(T(java.util.Locale).ENGLISH)")__		StandardEvaluationContext context =_				new StandardEvaluationContext()__		context.setVariable("userId", "RoDnEy")__		assertEquals("rodney",expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("rodney",expression.getValue(context))___		_		expression = parser.parseExpression("T(String).name")__		assertEquals("java.lang.String",expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String",expression.getValue())___		_		context = new StandardEvaluationContext(String.class)__		expression = parser.parseExpression("name")__		assertEquals("java.lang.String",expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("java.lang.String",expression.getValue(context))___		expression = parser.parseExpression("T(String).getName()")__		assertEquals("java.lang.String",expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String",expression.getValue())___		_		_		_		_		__		String shclass = StaticsHelper.class.getName()__		_		expression = parser.parseExpression("T(String).valueOf(T(String).name.valueOf(1))")__		assertEquals("1",expression.getValue())__		assertCanCompile(expression)__		assertEquals("1",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").methoda().methoda().methodb())")__		assertEquals("mb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("mb",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").fielda.fielda.fieldb)")__		assertEquals("fb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").propertya.propertya.propertyb)")__		assertEquals("pb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("pb",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").fielda.methoda().propertya.fieldb)")__		assertEquals("fb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb",expression.getValue())___		expression = parser.parseExpression("T(String).valueOf(fielda.fieldb)")__		assertEquals("fb",expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("fb",expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(propertya.propertyb)")__		assertEquals("pb",expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("pb",expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(methoda().methodb())")__		assertEquals("mb",expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("mb",expression.getValue(StaticsHelper.sh))___	};test,variants,of,using,t,and,static,non,static,method,property,field,references;test,public,void,expression,parser,parse,expression,t,java,util,locale,english,assert,equals,en,expression,get,value,to,string,assert,can,compile,expression,assert,equals,en,expression,get,value,to,string,expression,parser,parse,expression,user,id,to,string,to,lower,case,t,java,util,locale,english,standard,evaluation,context,context,new,standard,evaluation,context,context,set,variable,user,id,ro,dn,ey,assert,equals,rodney,expression,get,value,context,assert,can,compile,expression,assert,equals,rodney,expression,get,value,context,expression,parser,parse,expression,t,string,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,new,standard,evaluation,context,string,class,expression,parser,parse,expression,name,assert,equals,java,lang,string,expression,get,value,context,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,expression,parser,parse,expression,t,string,get,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,string,shclass,statics,helper,class,get,name,expression,parser,parse,expression,t,string,value,of,t,string,name,value,of,1,assert,equals,1,expression,get,value,assert,can,compile,expression,assert,equals,1,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,methoda,methoda,methodb,assert,equals,mb,expression,get,value,assert,can,compile,expression,assert,equals,mb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,fielda,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,propertya,propertya,propertyb,assert,equals,pb,expression,get,value,assert,can,compile,expression,assert,equals,pb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,methoda,propertya,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,fielda,fieldb,assert,equals,fb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,fb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,propertya,propertyb,assert,equals,pb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,pb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,methoda,methodb,assert,equals,mb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,mb,expression,get,value,statics,helper,sh
SpelCompilationCoverageTests -> @Test 	public void constructorReference_SPR13781();1478032943;Test variants of using T(...) and static/non-static method/property/field references.;@Test_	public void constructorReference_SPR13781() {_		_		expression = parser.parseExpression("T(java.util.Locale).ENGLISH")__		assertEquals("en",expression.getValue().toString())__		assertCanCompile(expression)__		assertEquals("en",expression.getValue().toString())___		_		_		_		_		_		expression = parser.parseExpression("#userId.toString().toLowerCase(T(java.util.Locale).ENGLISH)")__		StandardEvaluationContext context =_				new StandardEvaluationContext()__		context.setVariable("userId", "RoDnEy")__		assertEquals("rodney",expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("rodney",expression.getValue(context))___		_		expression = parser.parseExpression("T(String).name")__		assertEquals("java.lang.String",expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String",expression.getValue())___		_		context = new StandardEvaluationContext(String.class)__		expression = parser.parseExpression("name")__		assertEquals("java.lang.String",expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("java.lang.String",expression.getValue(context))___		expression = parser.parseExpression("T(String).getName()")__		assertEquals("java.lang.String",expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String",expression.getValue())___		_		_		_		_		__		String shclass = StaticsHelper.class.getName()__		_		expression = parser.parseExpression("T(String).valueOf(T(String).name.valueOf(1))")__		assertEquals("1",expression.getValue())__		assertCanCompile(expression)__		assertEquals("1",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").methoda().methoda().methodb())")__		assertEquals("mb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("mb",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").fielda.fielda.fieldb)")__		assertEquals("fb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").propertya.propertya.propertyb)")__		assertEquals("pb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("pb",expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T("+shclass+").fielda.methoda().propertya.fieldb)")__		assertEquals("fb",expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb",expression.getValue())___		expression = parser.parseExpression("T(String).valueOf(fielda.fieldb)")__		assertEquals("fb",expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("fb",expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(propertya.propertyb)")__		assertEquals("pb",expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("pb",expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(methoda().methodb())")__		assertEquals("mb",expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("mb",expression.getValue(StaticsHelper.sh))___	};test,variants,of,using,t,and,static,non,static,method,property,field,references;test,public,void,expression,parser,parse,expression,t,java,util,locale,english,assert,equals,en,expression,get,value,to,string,assert,can,compile,expression,assert,equals,en,expression,get,value,to,string,expression,parser,parse,expression,user,id,to,string,to,lower,case,t,java,util,locale,english,standard,evaluation,context,context,new,standard,evaluation,context,context,set,variable,user,id,ro,dn,ey,assert,equals,rodney,expression,get,value,context,assert,can,compile,expression,assert,equals,rodney,expression,get,value,context,expression,parser,parse,expression,t,string,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,new,standard,evaluation,context,string,class,expression,parser,parse,expression,name,assert,equals,java,lang,string,expression,get,value,context,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,expression,parser,parse,expression,t,string,get,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,string,shclass,statics,helper,class,get,name,expression,parser,parse,expression,t,string,value,of,t,string,name,value,of,1,assert,equals,1,expression,get,value,assert,can,compile,expression,assert,equals,1,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,methoda,methoda,methodb,assert,equals,mb,expression,get,value,assert,can,compile,expression,assert,equals,mb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,fielda,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,propertya,propertya,propertyb,assert,equals,pb,expression,get,value,assert,can,compile,expression,assert,equals,pb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,methoda,propertya,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,fielda,fieldb,assert,equals,fb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,fb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,propertya,propertyb,assert,equals,pb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,pb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,methoda,methodb,assert,equals,mb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,mb,expression,get,value,statics,helper,sh
SpelCompilationCoverageTests -> @Test 	public void constructorReference_SPR13781();1478083559;Test variants of using T(...) and static/non-static method/property/field references.;@Test_	public void constructorReference_SPR13781() {_		_		expression = parser.parseExpression("T(java.util.Locale).ENGLISH")__		assertEquals("en", expression.getValue().toString())__		assertCanCompile(expression)__		assertEquals("en", expression.getValue().toString())___		_		_		_		_		_		expression = parser.parseExpression("#userId.toString().toLowerCase(T(java.util.Locale).ENGLISH)")__		StandardEvaluationContext context =_				new StandardEvaluationContext()__		context.setVariable("userId", "RoDnEy")__		assertEquals("rodney", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("rodney", expression.getValue(context))___		_		expression = parser.parseExpression("T(String).name")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		context = new StandardEvaluationContext(String.class)__		expression = parser.parseExpression("name")__		assertEquals("java.lang.String", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue(context))___		expression = parser.parseExpression("T(String).getName()")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		_		_		_		__		String shclass = StaticsHelper.class.getName()__		_		expression = parser.parseExpression("T(String).valueOf(T(String).name.valueOf(1))")__		assertEquals("1", expression.getValue())__		assertCanCompile(expression)__		assertEquals("1", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").methoda().methoda().methodb())")__		assertEquals("mb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.fielda.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").propertya.propertya.propertyb)")__		assertEquals("pb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.methoda().propertya.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		expression = parser.parseExpression("T(String).valueOf(fielda.fieldb)")__		assertEquals("fb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(propertya.propertyb)")__		assertEquals("pb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(methoda().methodb())")__		assertEquals("mb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue(StaticsHelper.sh))___	};test,variants,of,using,t,and,static,non,static,method,property,field,references;test,public,void,expression,parser,parse,expression,t,java,util,locale,english,assert,equals,en,expression,get,value,to,string,assert,can,compile,expression,assert,equals,en,expression,get,value,to,string,expression,parser,parse,expression,user,id,to,string,to,lower,case,t,java,util,locale,english,standard,evaluation,context,context,new,standard,evaluation,context,context,set,variable,user,id,ro,dn,ey,assert,equals,rodney,expression,get,value,context,assert,can,compile,expression,assert,equals,rodney,expression,get,value,context,expression,parser,parse,expression,t,string,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,new,standard,evaluation,context,string,class,expression,parser,parse,expression,name,assert,equals,java,lang,string,expression,get,value,context,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,expression,parser,parse,expression,t,string,get,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,string,shclass,statics,helper,class,get,name,expression,parser,parse,expression,t,string,value,of,t,string,name,value,of,1,assert,equals,1,expression,get,value,assert,can,compile,expression,assert,equals,1,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,methoda,methoda,methodb,assert,equals,mb,expression,get,value,assert,can,compile,expression,assert,equals,mb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,fielda,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,propertya,propertya,propertyb,assert,equals,pb,expression,get,value,assert,can,compile,expression,assert,equals,pb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,methoda,propertya,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,fielda,fieldb,assert,equals,fb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,fb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,propertya,propertyb,assert,equals,pb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,pb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,methoda,methodb,assert,equals,mb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,mb,expression,get,value,statics,helper,sh
SpelCompilationCoverageTests -> @Test 	public void constructorReference_SPR13781();1478087052;Test variants of using T(...) and static/non-static method/property/field references.;@Test_	public void constructorReference_SPR13781() {_		_		expression = parser.parseExpression("T(java.util.Locale).ENGLISH")__		assertEquals("en", expression.getValue().toString())__		assertCanCompile(expression)__		assertEquals("en", expression.getValue().toString())___		_		_		_		_		_		expression = parser.parseExpression("#userId.toString().toLowerCase(T(java.util.Locale).ENGLISH)")__		StandardEvaluationContext context =_				new StandardEvaluationContext()__		context.setVariable("userId", "RoDnEy")__		assertEquals("rodney", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("rodney", expression.getValue(context))___		_		expression = parser.parseExpression("T(String).name")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		context = new StandardEvaluationContext(String.class)__		expression = parser.parseExpression("name")__		assertEquals("java.lang.String", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue(context))___		expression = parser.parseExpression("T(String).getName()")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		_		_		_		__		String shclass = StaticsHelper.class.getName()__		_		expression = parser.parseExpression("T(String).valueOf(T(String).name.valueOf(1))")__		assertEquals("1", expression.getValue())__		assertCanCompile(expression)__		assertEquals("1", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").methoda().methoda().methodb())")__		assertEquals("mb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.fielda.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").propertya.propertya.propertyb)")__		assertEquals("pb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.methoda().propertya.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		expression = parser.parseExpression("T(String).valueOf(fielda.fieldb)")__		assertEquals("fb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(propertya.propertyb)")__		assertEquals("pb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(methoda().methodb())")__		assertEquals("mb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue(StaticsHelper.sh))___	};test,variants,of,using,t,and,static,non,static,method,property,field,references;test,public,void,expression,parser,parse,expression,t,java,util,locale,english,assert,equals,en,expression,get,value,to,string,assert,can,compile,expression,assert,equals,en,expression,get,value,to,string,expression,parser,parse,expression,user,id,to,string,to,lower,case,t,java,util,locale,english,standard,evaluation,context,context,new,standard,evaluation,context,context,set,variable,user,id,ro,dn,ey,assert,equals,rodney,expression,get,value,context,assert,can,compile,expression,assert,equals,rodney,expression,get,value,context,expression,parser,parse,expression,t,string,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,new,standard,evaluation,context,string,class,expression,parser,parse,expression,name,assert,equals,java,lang,string,expression,get,value,context,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,expression,parser,parse,expression,t,string,get,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,string,shclass,statics,helper,class,get,name,expression,parser,parse,expression,t,string,value,of,t,string,name,value,of,1,assert,equals,1,expression,get,value,assert,can,compile,expression,assert,equals,1,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,methoda,methoda,methodb,assert,equals,mb,expression,get,value,assert,can,compile,expression,assert,equals,mb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,fielda,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,propertya,propertya,propertyb,assert,equals,pb,expression,get,value,assert,can,compile,expression,assert,equals,pb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,methoda,propertya,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,fielda,fieldb,assert,equals,fb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,fb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,propertya,propertyb,assert,equals,pb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,pb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,methoda,methodb,assert,equals,mb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,mb,expression,get,value,statics,helper,sh
SpelCompilationCoverageTests -> @Test 	public void constructorReference_SPR13781();1486402990;Test variants of using T(...) and static/non-static method/property/field references.;@Test_	public void constructorReference_SPR13781() {_		_		expression = parser.parseExpression("T(java.util.Locale).ENGLISH")__		assertEquals("en", expression.getValue().toString())__		assertCanCompile(expression)__		assertEquals("en", expression.getValue().toString())___		_		_		_		_		_		expression = parser.parseExpression("#userId.toString().toLowerCase(T(java.util.Locale).ENGLISH)")__		StandardEvaluationContext context =_				new StandardEvaluationContext()__		context.setVariable("userId", "RoDnEy")__		assertEquals("rodney", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("rodney", expression.getValue(context))___		_		expression = parser.parseExpression("T(String).name")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		context = new StandardEvaluationContext(String.class)__		expression = parser.parseExpression("name")__		assertEquals("java.lang.String", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue(context))___		expression = parser.parseExpression("T(String).getName()")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		_		_		_		__		String shclass = StaticsHelper.class.getName()__		_		expression = parser.parseExpression("T(String).valueOf(T(String).name.valueOf(1))")__		assertEquals("1", expression.getValue())__		assertCanCompile(expression)__		assertEquals("1", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").methoda().methoda().methodb())")__		assertEquals("mb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.fielda.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").propertya.propertya.propertyb)")__		assertEquals("pb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.methoda().propertya.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		expression = parser.parseExpression("T(String).valueOf(fielda.fieldb)")__		assertEquals("fb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(propertya.propertyb)")__		assertEquals("pb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(methoda().methodb())")__		assertEquals("mb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue(StaticsHelper.sh))___	};test,variants,of,using,t,and,static,non,static,method,property,field,references;test,public,void,expression,parser,parse,expression,t,java,util,locale,english,assert,equals,en,expression,get,value,to,string,assert,can,compile,expression,assert,equals,en,expression,get,value,to,string,expression,parser,parse,expression,user,id,to,string,to,lower,case,t,java,util,locale,english,standard,evaluation,context,context,new,standard,evaluation,context,context,set,variable,user,id,ro,dn,ey,assert,equals,rodney,expression,get,value,context,assert,can,compile,expression,assert,equals,rodney,expression,get,value,context,expression,parser,parse,expression,t,string,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,new,standard,evaluation,context,string,class,expression,parser,parse,expression,name,assert,equals,java,lang,string,expression,get,value,context,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,expression,parser,parse,expression,t,string,get,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,string,shclass,statics,helper,class,get,name,expression,parser,parse,expression,t,string,value,of,t,string,name,value,of,1,assert,equals,1,expression,get,value,assert,can,compile,expression,assert,equals,1,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,methoda,methoda,methodb,assert,equals,mb,expression,get,value,assert,can,compile,expression,assert,equals,mb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,fielda,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,propertya,propertya,propertyb,assert,equals,pb,expression,get,value,assert,can,compile,expression,assert,equals,pb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,methoda,propertya,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,fielda,fieldb,assert,equals,fb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,fb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,propertya,propertyb,assert,equals,pb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,pb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,methoda,methodb,assert,equals,mb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,mb,expression,get,value,statics,helper,sh
SpelCompilationCoverageTests -> @Test 	public void constructorReference_SPR13781();1487376095;Test variants of using T(...) and static/non-static method/property/field references.;@Test_	public void constructorReference_SPR13781() {_		_		expression = parser.parseExpression("T(java.util.Locale).ENGLISH")__		assertEquals("en", expression.getValue().toString())__		assertCanCompile(expression)__		assertEquals("en", expression.getValue().toString())___		_		_		_		_		_		expression = parser.parseExpression("#userId.toString().toLowerCase(T(java.util.Locale).ENGLISH)")__		StandardEvaluationContext context =_				new StandardEvaluationContext()__		context.setVariable("userId", "RoDnEy")__		assertEquals("rodney", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("rodney", expression.getValue(context))___		_		expression = parser.parseExpression("T(String).name")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		context = new StandardEvaluationContext(String.class)__		expression = parser.parseExpression("name")__		assertEquals("java.lang.String", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue(context))___		expression = parser.parseExpression("T(String).getName()")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		_		_		_		__		String shclass = StaticsHelper.class.getName()__		_		expression = parser.parseExpression("T(String).valueOf(T(String).name.valueOf(1))")__		assertEquals("1", expression.getValue())__		assertCanCompile(expression)__		assertEquals("1", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").methoda().methoda().methodb())")__		assertEquals("mb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.fielda.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").propertya.propertya.propertyb)")__		assertEquals("pb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.methoda().propertya.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		expression = parser.parseExpression("T(String).valueOf(fielda.fieldb)")__		assertEquals("fb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(propertya.propertyb)")__		assertEquals("pb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(methoda().methodb())")__		assertEquals("mb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue(StaticsHelper.sh))___	};test,variants,of,using,t,and,static,non,static,method,property,field,references;test,public,void,expression,parser,parse,expression,t,java,util,locale,english,assert,equals,en,expression,get,value,to,string,assert,can,compile,expression,assert,equals,en,expression,get,value,to,string,expression,parser,parse,expression,user,id,to,string,to,lower,case,t,java,util,locale,english,standard,evaluation,context,context,new,standard,evaluation,context,context,set,variable,user,id,ro,dn,ey,assert,equals,rodney,expression,get,value,context,assert,can,compile,expression,assert,equals,rodney,expression,get,value,context,expression,parser,parse,expression,t,string,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,new,standard,evaluation,context,string,class,expression,parser,parse,expression,name,assert,equals,java,lang,string,expression,get,value,context,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,expression,parser,parse,expression,t,string,get,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,string,shclass,statics,helper,class,get,name,expression,parser,parse,expression,t,string,value,of,t,string,name,value,of,1,assert,equals,1,expression,get,value,assert,can,compile,expression,assert,equals,1,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,methoda,methoda,methodb,assert,equals,mb,expression,get,value,assert,can,compile,expression,assert,equals,mb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,fielda,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,propertya,propertya,propertyb,assert,equals,pb,expression,get,value,assert,can,compile,expression,assert,equals,pb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,methoda,propertya,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,fielda,fieldb,assert,equals,fb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,fb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,propertya,propertyb,assert,equals,pb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,pb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,methoda,methodb,assert,equals,mb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,mb,expression,get,value,statics,helper,sh
SpelCompilationCoverageTests -> @Test 	public void constructorReference_SPR13781();1493317916;Test variants of using T(...) and static/non-static method/property/field references.;@Test_	public void constructorReference_SPR13781() {_		_		expression = parser.parseExpression("T(java.util.Locale).ENGLISH")__		assertEquals("en", expression.getValue().toString())__		assertCanCompile(expression)__		assertEquals("en", expression.getValue().toString())___		_		_		_		_		_		expression = parser.parseExpression("#userId.toString().toLowerCase(T(java.util.Locale).ENGLISH)")__		StandardEvaluationContext context =_				new StandardEvaluationContext()__		context.setVariable("userId", "RoDnEy")__		assertEquals("rodney", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("rodney", expression.getValue(context))___		_		expression = parser.parseExpression("T(String).name")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		context = new StandardEvaluationContext(String.class)__		expression = parser.parseExpression("name")__		assertEquals("java.lang.String", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue(context))___		expression = parser.parseExpression("T(String).getName()")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		_		_		_		__		String shclass = StaticsHelper.class.getName()__		_		expression = parser.parseExpression("T(String).valueOf(T(String).name.valueOf(1))")__		assertEquals("1", expression.getValue())__		assertCanCompile(expression)__		assertEquals("1", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").methoda().methoda().methodb())")__		assertEquals("mb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.fielda.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").propertya.propertya.propertyb)")__		assertEquals("pb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.methoda().propertya.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		expression = parser.parseExpression("T(String).valueOf(fielda.fieldb)")__		assertEquals("fb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(propertya.propertyb)")__		assertEquals("pb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(methoda().methodb())")__		assertEquals("mb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue(StaticsHelper.sh))___	};test,variants,of,using,t,and,static,non,static,method,property,field,references;test,public,void,expression,parser,parse,expression,t,java,util,locale,english,assert,equals,en,expression,get,value,to,string,assert,can,compile,expression,assert,equals,en,expression,get,value,to,string,expression,parser,parse,expression,user,id,to,string,to,lower,case,t,java,util,locale,english,standard,evaluation,context,context,new,standard,evaluation,context,context,set,variable,user,id,ro,dn,ey,assert,equals,rodney,expression,get,value,context,assert,can,compile,expression,assert,equals,rodney,expression,get,value,context,expression,parser,parse,expression,t,string,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,new,standard,evaluation,context,string,class,expression,parser,parse,expression,name,assert,equals,java,lang,string,expression,get,value,context,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,expression,parser,parse,expression,t,string,get,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,string,shclass,statics,helper,class,get,name,expression,parser,parse,expression,t,string,value,of,t,string,name,value,of,1,assert,equals,1,expression,get,value,assert,can,compile,expression,assert,equals,1,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,methoda,methoda,methodb,assert,equals,mb,expression,get,value,assert,can,compile,expression,assert,equals,mb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,fielda,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,propertya,propertya,propertyb,assert,equals,pb,expression,get,value,assert,can,compile,expression,assert,equals,pb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,methoda,propertya,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,fielda,fieldb,assert,equals,fb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,fb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,propertya,propertyb,assert,equals,pb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,pb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,methoda,methodb,assert,equals,mb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,mb,expression,get,value,statics,helper,sh
SpelCompilationCoverageTests -> @Test 	public void constructorReference_SPR13781();1496837955;Test variants of using T(...) and static/non-static method/property/field references.;@Test_	public void constructorReference_SPR13781() {_		_		expression = parser.parseExpression("T(java.util.Locale).ENGLISH")__		assertEquals("en", expression.getValue().toString())__		assertCanCompile(expression)__		assertEquals("en", expression.getValue().toString())___		_		_		_		_		_		expression = parser.parseExpression("#userId.toString().toLowerCase(T(java.util.Locale).ENGLISH)")__		StandardEvaluationContext context =_				new StandardEvaluationContext()__		context.setVariable("userId", "RoDnEy")__		assertEquals("rodney", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("rodney", expression.getValue(context))___		_		expression = parser.parseExpression("T(String).name")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		context = new StandardEvaluationContext(String.class)__		expression = parser.parseExpression("name")__		assertEquals("java.lang.String", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue(context))___		expression = parser.parseExpression("T(String).getName()")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		_		_		_		__		String shclass = StaticsHelper.class.getName()__		_		expression = parser.parseExpression("T(String).valueOf(T(String).name.valueOf(1))")__		assertEquals("1", expression.getValue())__		assertCanCompile(expression)__		assertEquals("1", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").methoda().methoda().methodb())")__		assertEquals("mb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.fielda.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").propertya.propertya.propertyb)")__		assertEquals("pb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.methoda().propertya.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		expression = parser.parseExpression("T(String).valueOf(fielda.fieldb)")__		assertEquals("fb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(propertya.propertyb)")__		assertEquals("pb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(methoda().methodb())")__		assertEquals("mb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue(StaticsHelper.sh))___	};test,variants,of,using,t,and,static,non,static,method,property,field,references;test,public,void,expression,parser,parse,expression,t,java,util,locale,english,assert,equals,en,expression,get,value,to,string,assert,can,compile,expression,assert,equals,en,expression,get,value,to,string,expression,parser,parse,expression,user,id,to,string,to,lower,case,t,java,util,locale,english,standard,evaluation,context,context,new,standard,evaluation,context,context,set,variable,user,id,ro,dn,ey,assert,equals,rodney,expression,get,value,context,assert,can,compile,expression,assert,equals,rodney,expression,get,value,context,expression,parser,parse,expression,t,string,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,new,standard,evaluation,context,string,class,expression,parser,parse,expression,name,assert,equals,java,lang,string,expression,get,value,context,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,expression,parser,parse,expression,t,string,get,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,string,shclass,statics,helper,class,get,name,expression,parser,parse,expression,t,string,value,of,t,string,name,value,of,1,assert,equals,1,expression,get,value,assert,can,compile,expression,assert,equals,1,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,methoda,methoda,methodb,assert,equals,mb,expression,get,value,assert,can,compile,expression,assert,equals,mb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,fielda,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,propertya,propertya,propertyb,assert,equals,pb,expression,get,value,assert,can,compile,expression,assert,equals,pb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,methoda,propertya,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,fielda,fieldb,assert,equals,fb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,fb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,propertya,propertyb,assert,equals,pb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,pb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,methoda,methodb,assert,equals,mb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,mb,expression,get,value,statics,helper,sh
SpelCompilationCoverageTests -> @Test 	public void constructorReference_SPR13781();1500043582;Test variants of using T(...) and static/non-static method/property/field references.;@Test_	public void constructorReference_SPR13781() {_		_		expression = parser.parseExpression("T(java.util.Locale).ENGLISH")__		assertEquals("en", expression.getValue().toString())__		assertCanCompile(expression)__		assertEquals("en", expression.getValue().toString())___		_		_		_		_		_		expression = parser.parseExpression("#userId.toString().toLowerCase(T(java.util.Locale).ENGLISH)")__		StandardEvaluationContext context = new StandardEvaluationContext()__		context.setVariable("userId", "RoDnEy")__		assertEquals("rodney", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("rodney", expression.getValue(context))___		_		expression = parser.parseExpression("T(String).name")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		context = new StandardEvaluationContext(String.class)__		expression = parser.parseExpression("name")__		assertEquals("java.lang.String", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue(context))___		expression = parser.parseExpression("T(String).getName()")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		_		_		_		__		String shclass = StaticsHelper.class.getName()__		_		expression = parser.parseExpression("T(String).valueOf(T(String).name.valueOf(1))")__		assertEquals("1", expression.getValue())__		assertCanCompile(expression)__		assertEquals("1", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").methoda().methoda().methodb())")__		assertEquals("mb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.fielda.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").propertya.propertya.propertyb)")__		assertEquals("pb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.methoda().propertya.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		expression = parser.parseExpression("T(String).valueOf(fielda.fieldb)")__		assertEquals("fb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(propertya.propertyb)")__		assertEquals("pb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(methoda().methodb())")__		assertEquals("mb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue(StaticsHelper.sh))___	};test,variants,of,using,t,and,static,non,static,method,property,field,references;test,public,void,expression,parser,parse,expression,t,java,util,locale,english,assert,equals,en,expression,get,value,to,string,assert,can,compile,expression,assert,equals,en,expression,get,value,to,string,expression,parser,parse,expression,user,id,to,string,to,lower,case,t,java,util,locale,english,standard,evaluation,context,context,new,standard,evaluation,context,context,set,variable,user,id,ro,dn,ey,assert,equals,rodney,expression,get,value,context,assert,can,compile,expression,assert,equals,rodney,expression,get,value,context,expression,parser,parse,expression,t,string,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,new,standard,evaluation,context,string,class,expression,parser,parse,expression,name,assert,equals,java,lang,string,expression,get,value,context,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,expression,parser,parse,expression,t,string,get,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,string,shclass,statics,helper,class,get,name,expression,parser,parse,expression,t,string,value,of,t,string,name,value,of,1,assert,equals,1,expression,get,value,assert,can,compile,expression,assert,equals,1,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,methoda,methoda,methodb,assert,equals,mb,expression,get,value,assert,can,compile,expression,assert,equals,mb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,fielda,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,propertya,propertya,propertyb,assert,equals,pb,expression,get,value,assert,can,compile,expression,assert,equals,pb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,methoda,propertya,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,fielda,fieldb,assert,equals,fb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,fb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,propertya,propertyb,assert,equals,pb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,pb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,methoda,methodb,assert,equals,mb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,mb,expression,get,value,statics,helper,sh
SpelCompilationCoverageTests -> @Test 	public void constructorReference_SPR13781();1500046626;Test variants of using T(...) and static/non-static method/property/field references.;@Test_	public void constructorReference_SPR13781() {_		_		expression = parser.parseExpression("T(java.util.Locale).ENGLISH")__		assertEquals("en", expression.getValue().toString())__		assertCanCompile(expression)__		assertEquals("en", expression.getValue().toString())___		_		_		_		_		_		expression = parser.parseExpression("#userId.toString().toLowerCase(T(java.util.Locale).ENGLISH)")__		StandardEvaluationContext context = new StandardEvaluationContext()__		context.setVariable("userId", "RoDnEy")__		assertEquals("rodney", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("rodney", expression.getValue(context))___		_		expression = parser.parseExpression("T(String).name")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		context = new StandardEvaluationContext(String.class)__		expression = parser.parseExpression("name")__		assertEquals("java.lang.String", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue(context))___		expression = parser.parseExpression("T(String).getName()")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		_		_		_		__		String shclass = StaticsHelper.class.getName()__		_		expression = parser.parseExpression("T(String).valueOf(T(String).name.valueOf(1))")__		assertEquals("1", expression.getValue())__		assertCanCompile(expression)__		assertEquals("1", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").methoda().methoda().methodb())")__		assertEquals("mb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.fielda.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").propertya.propertya.propertyb)")__		assertEquals("pb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.methoda().propertya.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		expression = parser.parseExpression("T(String).valueOf(fielda.fieldb)")__		assertEquals("fb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(propertya.propertyb)")__		assertEquals("pb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(methoda().methodb())")__		assertEquals("mb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue(StaticsHelper.sh))___	};test,variants,of,using,t,and,static,non,static,method,property,field,references;test,public,void,expression,parser,parse,expression,t,java,util,locale,english,assert,equals,en,expression,get,value,to,string,assert,can,compile,expression,assert,equals,en,expression,get,value,to,string,expression,parser,parse,expression,user,id,to,string,to,lower,case,t,java,util,locale,english,standard,evaluation,context,context,new,standard,evaluation,context,context,set,variable,user,id,ro,dn,ey,assert,equals,rodney,expression,get,value,context,assert,can,compile,expression,assert,equals,rodney,expression,get,value,context,expression,parser,parse,expression,t,string,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,new,standard,evaluation,context,string,class,expression,parser,parse,expression,name,assert,equals,java,lang,string,expression,get,value,context,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,expression,parser,parse,expression,t,string,get,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,string,shclass,statics,helper,class,get,name,expression,parser,parse,expression,t,string,value,of,t,string,name,value,of,1,assert,equals,1,expression,get,value,assert,can,compile,expression,assert,equals,1,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,methoda,methoda,methodb,assert,equals,mb,expression,get,value,assert,can,compile,expression,assert,equals,mb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,fielda,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,propertya,propertya,propertyb,assert,equals,pb,expression,get,value,assert,can,compile,expression,assert,equals,pb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,methoda,propertya,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,fielda,fieldb,assert,equals,fb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,fb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,propertya,propertyb,assert,equals,pb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,pb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,methoda,methodb,assert,equals,mb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,mb,expression,get,value,statics,helper,sh
SpelCompilationCoverageTests -> @Test 	public void constructorReference_SPR13781();1515364415;Test variants of using T(...) and static/non-static method/property/field references.;@Test_	public void constructorReference_SPR13781() {_		_		expression = parser.parseExpression("T(java.util.Locale).ENGLISH")__		assertEquals("en", expression.getValue().toString())__		assertCanCompile(expression)__		assertEquals("en", expression.getValue().toString())___		_		_		_		_		_		expression = parser.parseExpression("#userId.toString().toLowerCase(T(java.util.Locale).ENGLISH)")__		StandardEvaluationContext context = new StandardEvaluationContext()__		context.setVariable("userId", "RoDnEy")__		assertEquals("rodney", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("rodney", expression.getValue(context))___		_		expression = parser.parseExpression("T(String).name")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		context = new StandardEvaluationContext(String.class)__		expression = parser.parseExpression("name")__		assertEquals("java.lang.String", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue(context))___		expression = parser.parseExpression("T(String).getName()")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		_		_		_		__		String shclass = StaticsHelper.class.getName()__		_		expression = parser.parseExpression("T(String).valueOf(T(String).name.valueOf(1))")__		assertEquals("1", expression.getValue())__		assertCanCompile(expression)__		assertEquals("1", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").methoda().methoda().methodb())")__		assertEquals("mb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.fielda.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").propertya.propertya.propertyb)")__		assertEquals("pb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.methoda().propertya.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		expression = parser.parseExpression("T(String).valueOf(fielda.fieldb)")__		assertEquals("fb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(propertya.propertyb)")__		assertEquals("pb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(methoda().methodb())")__		assertEquals("mb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue(StaticsHelper.sh))___	};test,variants,of,using,t,and,static,non,static,method,property,field,references;test,public,void,expression,parser,parse,expression,t,java,util,locale,english,assert,equals,en,expression,get,value,to,string,assert,can,compile,expression,assert,equals,en,expression,get,value,to,string,expression,parser,parse,expression,user,id,to,string,to,lower,case,t,java,util,locale,english,standard,evaluation,context,context,new,standard,evaluation,context,context,set,variable,user,id,ro,dn,ey,assert,equals,rodney,expression,get,value,context,assert,can,compile,expression,assert,equals,rodney,expression,get,value,context,expression,parser,parse,expression,t,string,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,new,standard,evaluation,context,string,class,expression,parser,parse,expression,name,assert,equals,java,lang,string,expression,get,value,context,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,expression,parser,parse,expression,t,string,get,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,string,shclass,statics,helper,class,get,name,expression,parser,parse,expression,t,string,value,of,t,string,name,value,of,1,assert,equals,1,expression,get,value,assert,can,compile,expression,assert,equals,1,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,methoda,methoda,methodb,assert,equals,mb,expression,get,value,assert,can,compile,expression,assert,equals,mb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,fielda,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,propertya,propertya,propertyb,assert,equals,pb,expression,get,value,assert,can,compile,expression,assert,equals,pb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,methoda,propertya,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,fielda,fieldb,assert,equals,fb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,fb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,propertya,propertyb,assert,equals,pb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,pb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,methoda,methodb,assert,equals,mb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,mb,expression,get,value,statics,helper,sh
SpelCompilationCoverageTests -> @Test 	public void constructorReference_SPR13781();1518615840;Test variants of using T(...) and static/non-static method/property/field references.;@Test_	public void constructorReference_SPR13781() {_		_		expression = parser.parseExpression("T(java.util.Locale).ENGLISH")__		assertEquals("en", expression.getValue().toString())__		assertCanCompile(expression)__		assertEquals("en", expression.getValue().toString())___		_		_		_		_		_		expression = parser.parseExpression("#userId.toString().toLowerCase(T(java.util.Locale).ENGLISH)")__		StandardEvaluationContext context = new StandardEvaluationContext()__		context.setVariable("userId", "RoDnEy")__		assertEquals("rodney", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("rodney", expression.getValue(context))___		_		expression = parser.parseExpression("T(String).name")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		context = new StandardEvaluationContext(String.class)__		expression = parser.parseExpression("name")__		assertEquals("java.lang.String", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue(context))___		expression = parser.parseExpression("T(String).getName()")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		_		_		_		__		String shclass = StaticsHelper.class.getName()__		_		expression = parser.parseExpression("T(String).valueOf(T(String).name.valueOf(1))")__		assertEquals("1", expression.getValue())__		assertCanCompile(expression)__		assertEquals("1", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").methoda().methoda().methodb())")__		assertEquals("mb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.fielda.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").propertya.propertya.propertyb)")__		assertEquals("pb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.methoda().propertya.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		expression = parser.parseExpression("T(String).valueOf(fielda.fieldb)")__		assertEquals("fb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(propertya.propertyb)")__		assertEquals("pb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(methoda().methodb())")__		assertEquals("mb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue(StaticsHelper.sh))___	};test,variants,of,using,t,and,static,non,static,method,property,field,references;test,public,void,expression,parser,parse,expression,t,java,util,locale,english,assert,equals,en,expression,get,value,to,string,assert,can,compile,expression,assert,equals,en,expression,get,value,to,string,expression,parser,parse,expression,user,id,to,string,to,lower,case,t,java,util,locale,english,standard,evaluation,context,context,new,standard,evaluation,context,context,set,variable,user,id,ro,dn,ey,assert,equals,rodney,expression,get,value,context,assert,can,compile,expression,assert,equals,rodney,expression,get,value,context,expression,parser,parse,expression,t,string,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,new,standard,evaluation,context,string,class,expression,parser,parse,expression,name,assert,equals,java,lang,string,expression,get,value,context,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,expression,parser,parse,expression,t,string,get,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,string,shclass,statics,helper,class,get,name,expression,parser,parse,expression,t,string,value,of,t,string,name,value,of,1,assert,equals,1,expression,get,value,assert,can,compile,expression,assert,equals,1,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,methoda,methoda,methodb,assert,equals,mb,expression,get,value,assert,can,compile,expression,assert,equals,mb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,fielda,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,propertya,propertya,propertyb,assert,equals,pb,expression,get,value,assert,can,compile,expression,assert,equals,pb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,methoda,propertya,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,fielda,fieldb,assert,equals,fb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,fb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,propertya,propertyb,assert,equals,pb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,pb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,methoda,methodb,assert,equals,mb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,mb,expression,get,value,statics,helper,sh
SpelCompilationCoverageTests -> @Test 	public void constructorReference_SPR13781();1520895539;Test variants of using T(...) and static/non-static method/property/field references.;@Test_	public void constructorReference_SPR13781() {_		_		expression = parser.parseExpression("T(java.util.Locale).ENGLISH")__		assertEquals("en", expression.getValue().toString())__		assertCanCompile(expression)__		assertEquals("en", expression.getValue().toString())___		_		_		_		_		_		expression = parser.parseExpression("#userId.toString().toLowerCase(T(java.util.Locale).ENGLISH)")__		StandardEvaluationContext context = new StandardEvaluationContext()__		context.setVariable("userId", "RoDnEy")__		assertEquals("rodney", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("rodney", expression.getValue(context))___		_		expression = parser.parseExpression("T(String).name")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		context = new StandardEvaluationContext(String.class)__		expression = parser.parseExpression("name")__		assertEquals("java.lang.String", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue(context))___		expression = parser.parseExpression("T(String).getName()")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		_		_		_		__		String shclass = StaticsHelper.class.getName()__		_		expression = parser.parseExpression("T(String).valueOf(T(String).name.valueOf(1))")__		assertEquals("1", expression.getValue())__		assertCanCompile(expression)__		assertEquals("1", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").methoda().methoda().methodb())")__		assertEquals("mb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.fielda.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").propertya.propertya.propertyb)")__		assertEquals("pb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.methoda().propertya.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		expression = parser.parseExpression("T(String).valueOf(fielda.fieldb)")__		assertEquals("fb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(propertya.propertyb)")__		assertEquals("pb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(methoda().methodb())")__		assertEquals("mb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue(StaticsHelper.sh))___	};test,variants,of,using,t,and,static,non,static,method,property,field,references;test,public,void,expression,parser,parse,expression,t,java,util,locale,english,assert,equals,en,expression,get,value,to,string,assert,can,compile,expression,assert,equals,en,expression,get,value,to,string,expression,parser,parse,expression,user,id,to,string,to,lower,case,t,java,util,locale,english,standard,evaluation,context,context,new,standard,evaluation,context,context,set,variable,user,id,ro,dn,ey,assert,equals,rodney,expression,get,value,context,assert,can,compile,expression,assert,equals,rodney,expression,get,value,context,expression,parser,parse,expression,t,string,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,new,standard,evaluation,context,string,class,expression,parser,parse,expression,name,assert,equals,java,lang,string,expression,get,value,context,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,expression,parser,parse,expression,t,string,get,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,string,shclass,statics,helper,class,get,name,expression,parser,parse,expression,t,string,value,of,t,string,name,value,of,1,assert,equals,1,expression,get,value,assert,can,compile,expression,assert,equals,1,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,methoda,methoda,methodb,assert,equals,mb,expression,get,value,assert,can,compile,expression,assert,equals,mb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,fielda,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,propertya,propertya,propertyb,assert,equals,pb,expression,get,value,assert,can,compile,expression,assert,equals,pb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,methoda,propertya,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,fielda,fieldb,assert,equals,fb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,fb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,propertya,propertyb,assert,equals,pb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,pb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,methoda,methodb,assert,equals,mb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,mb,expression,get,value,statics,helper,sh
SpelCompilationCoverageTests -> @Test 	public void constructorReference_SPR13781();1530174524;Test variants of using T(...) and static/non-static method/property/field references.;@Test_	public void constructorReference_SPR13781() {_		_		expression = parser.parseExpression("T(java.util.Locale).ENGLISH")__		assertEquals("en", expression.getValue().toString())__		assertCanCompile(expression)__		assertEquals("en", expression.getValue().toString())___		_		_		_		_		_		expression = parser.parseExpression("#userId.toString().toLowerCase(T(java.util.Locale).ENGLISH)")__		StandardEvaluationContext context = new StandardEvaluationContext()__		context.setVariable("userId", "RoDnEy")__		assertEquals("rodney", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("rodney", expression.getValue(context))___		_		expression = parser.parseExpression("T(String).name")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		context = new StandardEvaluationContext(String.class)__		expression = parser.parseExpression("name")__		assertEquals("java.lang.String", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue(context))___		expression = parser.parseExpression("T(String).getName()")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		_		_		_		__		String shclass = StaticsHelper.class.getName()__		_		expression = parser.parseExpression("T(String).valueOf(T(String).name.valueOf(1))")__		assertEquals("1", expression.getValue())__		assertCanCompile(expression)__		assertEquals("1", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").methoda().methoda().methodb())")__		assertEquals("mb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.fielda.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").propertya.propertya.propertyb)")__		assertEquals("pb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.methoda().propertya.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		expression = parser.parseExpression("T(String).valueOf(fielda.fieldb)")__		assertEquals("fb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(propertya.propertyb)")__		assertEquals("pb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(methoda().methodb())")__		assertEquals("mb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue(StaticsHelper.sh))___	};test,variants,of,using,t,and,static,non,static,method,property,field,references;test,public,void,expression,parser,parse,expression,t,java,util,locale,english,assert,equals,en,expression,get,value,to,string,assert,can,compile,expression,assert,equals,en,expression,get,value,to,string,expression,parser,parse,expression,user,id,to,string,to,lower,case,t,java,util,locale,english,standard,evaluation,context,context,new,standard,evaluation,context,context,set,variable,user,id,ro,dn,ey,assert,equals,rodney,expression,get,value,context,assert,can,compile,expression,assert,equals,rodney,expression,get,value,context,expression,parser,parse,expression,t,string,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,new,standard,evaluation,context,string,class,expression,parser,parse,expression,name,assert,equals,java,lang,string,expression,get,value,context,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,expression,parser,parse,expression,t,string,get,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,string,shclass,statics,helper,class,get,name,expression,parser,parse,expression,t,string,value,of,t,string,name,value,of,1,assert,equals,1,expression,get,value,assert,can,compile,expression,assert,equals,1,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,methoda,methoda,methodb,assert,equals,mb,expression,get,value,assert,can,compile,expression,assert,equals,mb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,fielda,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,propertya,propertya,propertyb,assert,equals,pb,expression,get,value,assert,can,compile,expression,assert,equals,pb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,methoda,propertya,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,fielda,fieldb,assert,equals,fb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,fb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,propertya,propertyb,assert,equals,pb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,pb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,methoda,methodb,assert,equals,mb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,mb,expression,get,value,statics,helper,sh
SpelCompilationCoverageTests -> @Test 	public void constructorReference_SPR13781();1536165673;Test variants of using T(...) and static/non-static method/property/field references.;@Test_	public void constructorReference_SPR13781() {_		_		expression = parser.parseExpression("T(java.util.Locale).ENGLISH")__		assertEquals("en", expression.getValue().toString())__		assertCanCompile(expression)__		assertEquals("en", expression.getValue().toString())___		_		_		_		_		_		expression = parser.parseExpression("#userId.toString().toLowerCase(T(java.util.Locale).ENGLISH)")__		StandardEvaluationContext context = new StandardEvaluationContext()__		context.setVariable("userId", "RoDnEy")__		assertEquals("rodney", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("rodney", expression.getValue(context))___		_		expression = parser.parseExpression("T(String).name")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		context = new StandardEvaluationContext(String.class)__		expression = parser.parseExpression("name")__		assertEquals("java.lang.String", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue(context))___		expression = parser.parseExpression("T(String).getName()")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		_		_		_		__		String shclass = StaticsHelper.class.getName()__		_		expression = parser.parseExpression("T(String).valueOf(T(String).name.valueOf(1))")__		assertEquals("1", expression.getValue())__		assertCanCompile(expression)__		assertEquals("1", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").methoda().methoda().methodb())")__		assertEquals("mb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.fielda.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").propertya.propertya.propertyb)")__		assertEquals("pb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.methoda().propertya.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		expression = parser.parseExpression("T(String).valueOf(fielda.fieldb)")__		assertEquals("fb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(propertya.propertyb)")__		assertEquals("pb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(methoda().methodb())")__		assertEquals("mb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue(StaticsHelper.sh))___	};test,variants,of,using,t,and,static,non,static,method,property,field,references;test,public,void,expression,parser,parse,expression,t,java,util,locale,english,assert,equals,en,expression,get,value,to,string,assert,can,compile,expression,assert,equals,en,expression,get,value,to,string,expression,parser,parse,expression,user,id,to,string,to,lower,case,t,java,util,locale,english,standard,evaluation,context,context,new,standard,evaluation,context,context,set,variable,user,id,ro,dn,ey,assert,equals,rodney,expression,get,value,context,assert,can,compile,expression,assert,equals,rodney,expression,get,value,context,expression,parser,parse,expression,t,string,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,new,standard,evaluation,context,string,class,expression,parser,parse,expression,name,assert,equals,java,lang,string,expression,get,value,context,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,expression,parser,parse,expression,t,string,get,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,string,shclass,statics,helper,class,get,name,expression,parser,parse,expression,t,string,value,of,t,string,name,value,of,1,assert,equals,1,expression,get,value,assert,can,compile,expression,assert,equals,1,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,methoda,methoda,methodb,assert,equals,mb,expression,get,value,assert,can,compile,expression,assert,equals,mb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,fielda,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,propertya,propertya,propertyb,assert,equals,pb,expression,get,value,assert,can,compile,expression,assert,equals,pb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,methoda,propertya,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,fielda,fieldb,assert,equals,fb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,fb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,propertya,propertyb,assert,equals,pb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,pb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,methoda,methodb,assert,equals,mb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,mb,expression,get,value,statics,helper,sh
SpelCompilationCoverageTests -> @Test 	public void constructorReference_SPR13781();1536317813;Test variants of using T(...) and static/non-static method/property/field references.;@Test_	public void constructorReference_SPR13781() {_		_		expression = parser.parseExpression("T(java.util.Locale).ENGLISH")__		assertEquals("en", expression.getValue().toString())__		assertCanCompile(expression)__		assertEquals("en", expression.getValue().toString())___		_		_		_		_		_		expression = parser.parseExpression("#userId.toString().toLowerCase(T(java.util.Locale).ENGLISH)")__		StandardEvaluationContext context = new StandardEvaluationContext()__		context.setVariable("userId", "RoDnEy")__		assertEquals("rodney", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("rodney", expression.getValue(context))___		_		expression = parser.parseExpression("T(String).name")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		context = new StandardEvaluationContext(String.class)__		expression = parser.parseExpression("name")__		assertEquals("java.lang.String", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue(context))___		expression = parser.parseExpression("T(String).getName()")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		_		_		_		__		String shclass = StaticsHelper.class.getName()__		_		expression = parser.parseExpression("T(String).valueOf(T(String).name.valueOf(1))")__		assertEquals("1", expression.getValue())__		assertCanCompile(expression)__		assertEquals("1", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").methoda().methoda().methodb())")__		assertEquals("mb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.fielda.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").propertya.propertya.propertyb)")__		assertEquals("pb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.methoda().propertya.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		expression = parser.parseExpression("T(String).valueOf(fielda.fieldb)")__		assertEquals("fb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(propertya.propertyb)")__		assertEquals("pb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(methoda().methodb())")__		assertEquals("mb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue(StaticsHelper.sh))___	};test,variants,of,using,t,and,static,non,static,method,property,field,references;test,public,void,expression,parser,parse,expression,t,java,util,locale,english,assert,equals,en,expression,get,value,to,string,assert,can,compile,expression,assert,equals,en,expression,get,value,to,string,expression,parser,parse,expression,user,id,to,string,to,lower,case,t,java,util,locale,english,standard,evaluation,context,context,new,standard,evaluation,context,context,set,variable,user,id,ro,dn,ey,assert,equals,rodney,expression,get,value,context,assert,can,compile,expression,assert,equals,rodney,expression,get,value,context,expression,parser,parse,expression,t,string,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,new,standard,evaluation,context,string,class,expression,parser,parse,expression,name,assert,equals,java,lang,string,expression,get,value,context,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,expression,parser,parse,expression,t,string,get,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,string,shclass,statics,helper,class,get,name,expression,parser,parse,expression,t,string,value,of,t,string,name,value,of,1,assert,equals,1,expression,get,value,assert,can,compile,expression,assert,equals,1,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,methoda,methoda,methodb,assert,equals,mb,expression,get,value,assert,can,compile,expression,assert,equals,mb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,fielda,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,propertya,propertya,propertyb,assert,equals,pb,expression,get,value,assert,can,compile,expression,assert,equals,pb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,methoda,propertya,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,fielda,fieldb,assert,equals,fb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,fb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,propertya,propertyb,assert,equals,pb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,pb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,methoda,methodb,assert,equals,mb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,mb,expression,get,value,statics,helper,sh
SpelCompilationCoverageTests -> @Test 	public void constructorReference_SPR13781();1536319402;Test variants of using T(...) and static/non-static method/property/field references.;@Test_	public void constructorReference_SPR13781() {_		_		expression = parser.parseExpression("T(java.util.Locale).ENGLISH")__		assertEquals("en", expression.getValue().toString())__		assertCanCompile(expression)__		assertEquals("en", expression.getValue().toString())___		_		_		_		_		_		expression = parser.parseExpression("#userId.toString().toLowerCase(T(java.util.Locale).ENGLISH)")__		StandardEvaluationContext context = new StandardEvaluationContext()__		context.setVariable("userId", "RoDnEy")__		assertEquals("rodney", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("rodney", expression.getValue(context))___		_		expression = parser.parseExpression("T(String).name")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		context = new StandardEvaluationContext(String.class)__		expression = parser.parseExpression("name")__		assertEquals("java.lang.String", expression.getValue(context))__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue(context))___		expression = parser.parseExpression("T(String).getName()")__		assertEquals("java.lang.String", expression.getValue())__		assertCanCompile(expression)__		assertEquals("java.lang.String", expression.getValue())___		_		_		_		_		__		String shclass = StaticsHelper.class.getName()__		_		expression = parser.parseExpression("T(String).valueOf(T(String).name.valueOf(1))")__		assertEquals("1", expression.getValue())__		assertCanCompile(expression)__		assertEquals("1", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").methoda().methoda().methodb())")__		assertEquals("mb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.fielda.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").propertya.propertya.propertyb)")__		assertEquals("pb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue())___		_		expression = parser.parseExpression("T(String).valueOf(T(" + shclass + ").fielda.methoda().propertya.fieldb)")__		assertEquals("fb", expression.getValue())__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue())___		expression = parser.parseExpression("T(String).valueOf(fielda.fieldb)")__		assertEquals("fb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("fb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(propertya.propertyb)")__		assertEquals("pb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("pb", expression.getValue(StaticsHelper.sh))___		expression = parser.parseExpression("T(String).valueOf(methoda().methodb())")__		assertEquals("mb", expression.getValue(StaticsHelper.sh))__		assertCanCompile(expression)__		assertEquals("mb", expression.getValue(StaticsHelper.sh))___	};test,variants,of,using,t,and,static,non,static,method,property,field,references;test,public,void,expression,parser,parse,expression,t,java,util,locale,english,assert,equals,en,expression,get,value,to,string,assert,can,compile,expression,assert,equals,en,expression,get,value,to,string,expression,parser,parse,expression,user,id,to,string,to,lower,case,t,java,util,locale,english,standard,evaluation,context,context,new,standard,evaluation,context,context,set,variable,user,id,ro,dn,ey,assert,equals,rodney,expression,get,value,context,assert,can,compile,expression,assert,equals,rodney,expression,get,value,context,expression,parser,parse,expression,t,string,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,new,standard,evaluation,context,string,class,expression,parser,parse,expression,name,assert,equals,java,lang,string,expression,get,value,context,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,context,expression,parser,parse,expression,t,string,get,name,assert,equals,java,lang,string,expression,get,value,assert,can,compile,expression,assert,equals,java,lang,string,expression,get,value,string,shclass,statics,helper,class,get,name,expression,parser,parse,expression,t,string,value,of,t,string,name,value,of,1,assert,equals,1,expression,get,value,assert,can,compile,expression,assert,equals,1,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,methoda,methoda,methodb,assert,equals,mb,expression,get,value,assert,can,compile,expression,assert,equals,mb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,fielda,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,propertya,propertya,propertyb,assert,equals,pb,expression,get,value,assert,can,compile,expression,assert,equals,pb,expression,get,value,expression,parser,parse,expression,t,string,value,of,t,shclass,fielda,methoda,propertya,fieldb,assert,equals,fb,expression,get,value,assert,can,compile,expression,assert,equals,fb,expression,get,value,expression,parser,parse,expression,t,string,value,of,fielda,fieldb,assert,equals,fb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,fb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,propertya,propertyb,assert,equals,pb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,pb,expression,get,value,statics,helper,sh,expression,parser,parse,expression,t,string,value,of,methoda,methodb,assert,equals,mb,expression,get,value,statics,helper,sh,assert,can,compile,expression,assert,equals,mb,expression,get,value,statics,helper,sh
