# id;timestamp;commentText;codeText;commentWords;codeWords
RuleBasedTransactionAttribute -> public RuleBasedTransactionAttribute(int propagationBehavior, List<RollbackRuleAttribute> rollbackRules);1328020251;Create a new DefaultTransactionAttribute with the the given_propagation behavior. Can be modified through bean property setters._@param propagationBehavior one of the propagation constants in the_TransactionDefinition interface_@param rollbackRules the list of RollbackRuleAttributes to apply_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly;public RuleBasedTransactionAttribute(int propagationBehavior, List<RollbackRuleAttribute> rollbackRules) {_		super(propagationBehavior)__		this.rollbackRules = rollbackRules__	};create,a,new,default,transaction,attribute,with,the,the,given,propagation,behavior,can,be,modified,through,bean,property,setters,param,propagation,behavior,one,of,the,propagation,constants,in,the,transaction,definition,interface,param,rollback,rules,the,list,of,rollback,rule,attributes,to,apply,see,set,isolation,level,see,set,timeout,see,set,read,only;public,rule,based,transaction,attribute,int,propagation,behavior,list,rollback,rule,attribute,rollback,rules,super,propagation,behavior,this,rollback,rules,rollback,rules
RuleBasedTransactionAttribute -> public RuleBasedTransactionAttribute(int propagationBehavior, List<RollbackRuleAttribute> rollbackRules);1356735495;Create a new DefaultTransactionAttribute with the the given_propagation behavior. Can be modified through bean property setters._@param propagationBehavior one of the propagation constants in the_TransactionDefinition interface_@param rollbackRules the list of RollbackRuleAttributes to apply_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly;public RuleBasedTransactionAttribute(int propagationBehavior, List<RollbackRuleAttribute> rollbackRules) {_		super(propagationBehavior)__		this.rollbackRules = rollbackRules__	};create,a,new,default,transaction,attribute,with,the,the,given,propagation,behavior,can,be,modified,through,bean,property,setters,param,propagation,behavior,one,of,the,propagation,constants,in,the,transaction,definition,interface,param,rollback,rules,the,list,of,rollback,rule,attributes,to,apply,see,set,isolation,level,see,set,timeout,see,set,read,only;public,rule,based,transaction,attribute,int,propagation,behavior,list,rollback,rule,attribute,rollback,rules,super,propagation,behavior,this,rollback,rules,rollback,rules
RuleBasedTransactionAttribute -> public RuleBasedTransactionAttribute(int propagationBehavior, List<RollbackRuleAttribute> rollbackRules);1461047077;Create a new DefaultTransactionAttribute with the given_propagation behavior. Can be modified through bean property setters._@param propagationBehavior one of the propagation constants in the_TransactionDefinition interface_@param rollbackRules the list of RollbackRuleAttributes to apply_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly;public RuleBasedTransactionAttribute(int propagationBehavior, List<RollbackRuleAttribute> rollbackRules) {_		super(propagationBehavior)__		this.rollbackRules = rollbackRules__	};create,a,new,default,transaction,attribute,with,the,given,propagation,behavior,can,be,modified,through,bean,property,setters,param,propagation,behavior,one,of,the,propagation,constants,in,the,transaction,definition,interface,param,rollback,rules,the,list,of,rollback,rule,attributes,to,apply,see,set,isolation,level,see,set,timeout,see,set,read,only;public,rule,based,transaction,attribute,int,propagation,behavior,list,rollback,rule,attribute,rollback,rules,super,propagation,behavior,this,rollback,rules,rollback,rules
RuleBasedTransactionAttribute -> public RuleBasedTransactionAttribute(int propagationBehavior, List<RollbackRuleAttribute> rollbackRules);1467730834;Create a new DefaultTransactionAttribute with the given_propagation behavior. Can be modified through bean property setters._@param propagationBehavior one of the propagation constants in the_TransactionDefinition interface_@param rollbackRules the list of RollbackRuleAttributes to apply_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly;public RuleBasedTransactionAttribute(int propagationBehavior, List<RollbackRuleAttribute> rollbackRules) {_		super(propagationBehavior)__		this.rollbackRules = rollbackRules__	};create,a,new,default,transaction,attribute,with,the,given,propagation,behavior,can,be,modified,through,bean,property,setters,param,propagation,behavior,one,of,the,propagation,constants,in,the,transaction,definition,interface,param,rollback,rules,the,list,of,rollback,rule,attributes,to,apply,see,set,isolation,level,see,set,timeout,see,set,read,only;public,rule,based,transaction,attribute,int,propagation,behavior,list,rollback,rule,attribute,rollback,rules,super,propagation,behavior,this,rollback,rules,rollback,rules
RuleBasedTransactionAttribute -> public RuleBasedTransactionAttribute(int propagationBehavior, List<RollbackRuleAttribute> rollbackRules);1498780456;Create a new DefaultTransactionAttribute with the given_propagation behavior. Can be modified through bean property setters._@param propagationBehavior one of the propagation constants in the_TransactionDefinition interface_@param rollbackRules the list of RollbackRuleAttributes to apply_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly;public RuleBasedTransactionAttribute(int propagationBehavior, List<RollbackRuleAttribute> rollbackRules) {_		super(propagationBehavior)__		this.rollbackRules = rollbackRules__	};create,a,new,default,transaction,attribute,with,the,given,propagation,behavior,can,be,modified,through,bean,property,setters,param,propagation,behavior,one,of,the,propagation,constants,in,the,transaction,definition,interface,param,rollback,rules,the,list,of,rollback,rule,attributes,to,apply,see,set,isolation,level,see,set,timeout,see,set,read,only;public,rule,based,transaction,attribute,int,propagation,behavior,list,rollback,rule,attribute,rollback,rules,super,propagation,behavior,this,rollback,rules,rollback,rules
RuleBasedTransactionAttribute -> public RuleBasedTransactionAttribute(int propagationBehavior, List<RollbackRuleAttribute> rollbackRules);1530174524;Create a new DefaultTransactionAttribute with the given_propagation behavior. Can be modified through bean property setters._@param propagationBehavior one of the propagation constants in the_TransactionDefinition interface_@param rollbackRules the list of RollbackRuleAttributes to apply_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly;public RuleBasedTransactionAttribute(int propagationBehavior, List<RollbackRuleAttribute> rollbackRules) {_		super(propagationBehavior)__		this.rollbackRules = rollbackRules__	};create,a,new,default,transaction,attribute,with,the,given,propagation,behavior,can,be,modified,through,bean,property,setters,param,propagation,behavior,one,of,the,propagation,constants,in,the,transaction,definition,interface,param,rollback,rules,the,list,of,rollback,rule,attributes,to,apply,see,set,isolation,level,see,set,timeout,see,set,read,only;public,rule,based,transaction,attribute,int,propagation,behavior,list,rollback,rule,attribute,rollback,rules,super,propagation,behavior,this,rollback,rules,rollback,rules
RuleBasedTransactionAttribute -> public List<RollbackRuleAttribute> getRollbackRules();1328020251;Return the list of <code>RollbackRuleAttribute</code> objects_(never <code>null</code>).;public List<RollbackRuleAttribute> getRollbackRules() {_		if (this.rollbackRules == null) {_			this.rollbackRules = new LinkedList<RollbackRuleAttribute>()__		}_		return this.rollbackRules__	};return,the,list,of,code,rollback,rule,attribute,code,objects,never,code,null,code;public,list,rollback,rule,attribute,get,rollback,rules,if,this,rollback,rules,null,this,rollback,rules,new,linked,list,rollback,rule,attribute,return,this,rollback,rules
RuleBasedTransactionAttribute -> public List<RollbackRuleAttribute> getRollbackRules();1356735495;Return the list of {@code RollbackRuleAttribute} objects_(never {@code null}).;public List<RollbackRuleAttribute> getRollbackRules() {_		if (this.rollbackRules == null) {_			this.rollbackRules = new LinkedList<RollbackRuleAttribute>()__		}_		return this.rollbackRules__	};return,the,list,of,code,rollback,rule,attribute,objects,never,code,null;public,list,rollback,rule,attribute,get,rollback,rules,if,this,rollback,rules,null,this,rollback,rules,new,linked,list,rollback,rule,attribute,return,this,rollback,rules
RuleBasedTransactionAttribute -> public List<RollbackRuleAttribute> getRollbackRules();1461047077;Return the list of {@code RollbackRuleAttribute} objects_(never {@code null}).;public List<RollbackRuleAttribute> getRollbackRules() {_		if (this.rollbackRules == null) {_			this.rollbackRules = new LinkedList<RollbackRuleAttribute>()__		}_		return this.rollbackRules__	};return,the,list,of,code,rollback,rule,attribute,objects,never,code,null;public,list,rollback,rule,attribute,get,rollback,rules,if,this,rollback,rules,null,this,rollback,rules,new,linked,list,rollback,rule,attribute,return,this,rollback,rules
RuleBasedTransactionAttribute -> public List<RollbackRuleAttribute> getRollbackRules();1467730834;Return the list of {@code RollbackRuleAttribute} objects_(never {@code null}).;public List<RollbackRuleAttribute> getRollbackRules() {_		if (this.rollbackRules == null) {_			this.rollbackRules = new LinkedList<>()__		}_		return this.rollbackRules__	};return,the,list,of,code,rollback,rule,attribute,objects,never,code,null;public,list,rollback,rule,attribute,get,rollback,rules,if,this,rollback,rules,null,this,rollback,rules,new,linked,list,return,this,rollback,rules
RuleBasedTransactionAttribute -> public List<RollbackRuleAttribute> getRollbackRules();1498780456;Return the list of {@code RollbackRuleAttribute} objects_(never {@code null}).;public List<RollbackRuleAttribute> getRollbackRules() {_		if (this.rollbackRules == null) {_			this.rollbackRules = new LinkedList<>()__		}_		return this.rollbackRules__	};return,the,list,of,code,rollback,rule,attribute,objects,never,code,null;public,list,rollback,rule,attribute,get,rollback,rules,if,this,rollback,rules,null,this,rollback,rules,new,linked,list,return,this,rollback,rules
RuleBasedTransactionAttribute -> public List<RollbackRuleAttribute> getRollbackRules();1530174524;Return the list of {@code RollbackRuleAttribute} objects_(never {@code null}).;public List<RollbackRuleAttribute> getRollbackRules() {_		if (this.rollbackRules == null) {_			this.rollbackRules = new LinkedList<>()__		}_		return this.rollbackRules__	};return,the,list,of,code,rollback,rule,attribute,objects,never,code,null;public,list,rollback,rule,attribute,get,rollback,rules,if,this,rollback,rules,null,this,rollback,rules,new,linked,list,return,this,rollback,rules
RuleBasedTransactionAttribute -> @Override 	public boolean rollbackOn(Throwable ex);1328020251;Winning rule is the shallowest rule (that is, the closest in the_inheritance hierarchy to the exception). If no rule applies (-1),_return false._@see TransactionAttribute#rollbackOn(java.lang.Throwable);@Override_	public boolean rollbackOn(Throwable ex) {_		if (logger.isTraceEnabled()) {_			logger.trace("Applying rules to determine whether transaction should rollback on " + ex)__		}__		RollbackRuleAttribute winner = null__		int deepest = Integer.MAX_VALUE___		if (this.rollbackRules != null) {_			for (RollbackRuleAttribute rule : this.rollbackRules) {_				int depth = rule.getDepth(ex)__				if (depth >= 0 && depth < deepest) {_					deepest = depth__					winner = rule__				}_			}_		}__		if (logger.isTraceEnabled()) {_			logger.trace("Winning rollback rule is: " + winner)__		}__		_		if (winner == null) {_			logger.trace("No relevant rollback rule found: applying default rules")__			return super.rollbackOn(ex)__		}_			_		return !(winner instanceof NoRollbackRuleAttribute)__	};winning,rule,is,the,shallowest,rule,that,is,the,closest,in,the,inheritance,hierarchy,to,the,exception,if,no,rule,applies,1,return,false,see,transaction,attribute,rollback,on,java,lang,throwable;override,public,boolean,rollback,on,throwable,ex,if,logger,is,trace,enabled,logger,trace,applying,rules,to,determine,whether,transaction,should,rollback,on,ex,rollback,rule,attribute,winner,null,int,deepest,integer,if,this,rollback,rules,null,for,rollback,rule,attribute,rule,this,rollback,rules,int,depth,rule,get,depth,ex,if,depth,0,depth,deepest,deepest,depth,winner,rule,if,logger,is,trace,enabled,logger,trace,winning,rollback,rule,is,winner,if,winner,null,logger,trace,no,relevant,rollback,rule,found,applying,default,rules,return,super,rollback,on,ex,return,winner,instanceof,no,rollback,rule,attribute
RuleBasedTransactionAttribute -> @Override 	public boolean rollbackOn(Throwable ex);1356735495;Winning rule is the shallowest rule (that is, the closest in the_inheritance hierarchy to the exception). If no rule applies (-1),_return false._@see TransactionAttribute#rollbackOn(java.lang.Throwable);@Override_	public boolean rollbackOn(Throwable ex) {_		if (logger.isTraceEnabled()) {_			logger.trace("Applying rules to determine whether transaction should rollback on " + ex)__		}__		RollbackRuleAttribute winner = null__		int deepest = Integer.MAX_VALUE___		if (this.rollbackRules != null) {_			for (RollbackRuleAttribute rule : this.rollbackRules) {_				int depth = rule.getDepth(ex)__				if (depth >= 0 && depth < deepest) {_					deepest = depth__					winner = rule__				}_			}_		}__		if (logger.isTraceEnabled()) {_			logger.trace("Winning rollback rule is: " + winner)__		}__		_		if (winner == null) {_			logger.trace("No relevant rollback rule found: applying default rules")__			return super.rollbackOn(ex)__		}__		return !(winner instanceof NoRollbackRuleAttribute)__	};winning,rule,is,the,shallowest,rule,that,is,the,closest,in,the,inheritance,hierarchy,to,the,exception,if,no,rule,applies,1,return,false,see,transaction,attribute,rollback,on,java,lang,throwable;override,public,boolean,rollback,on,throwable,ex,if,logger,is,trace,enabled,logger,trace,applying,rules,to,determine,whether,transaction,should,rollback,on,ex,rollback,rule,attribute,winner,null,int,deepest,integer,if,this,rollback,rules,null,for,rollback,rule,attribute,rule,this,rollback,rules,int,depth,rule,get,depth,ex,if,depth,0,depth,deepest,deepest,depth,winner,rule,if,logger,is,trace,enabled,logger,trace,winning,rollback,rule,is,winner,if,winner,null,logger,trace,no,relevant,rollback,rule,found,applying,default,rules,return,super,rollback,on,ex,return,winner,instanceof,no,rollback,rule,attribute
RuleBasedTransactionAttribute -> @Override 	public boolean rollbackOn(Throwable ex);1461047077;Winning rule is the shallowest rule (that is, the closest in the_inheritance hierarchy to the exception). If no rule applies (-1),_return false._@see TransactionAttribute#rollbackOn(java.lang.Throwable);@Override_	public boolean rollbackOn(Throwable ex) {_		if (logger.isTraceEnabled()) {_			logger.trace("Applying rules to determine whether transaction should rollback on " + ex)__		}__		RollbackRuleAttribute winner = null__		int deepest = Integer.MAX_VALUE___		if (this.rollbackRules != null) {_			for (RollbackRuleAttribute rule : this.rollbackRules) {_				int depth = rule.getDepth(ex)__				if (depth >= 0 && depth < deepest) {_					deepest = depth__					winner = rule__				}_			}_		}__		if (logger.isTraceEnabled()) {_			logger.trace("Winning rollback rule is: " + winner)__		}__		_		if (winner == null) {_			logger.trace("No relevant rollback rule found: applying default rules")__			return super.rollbackOn(ex)__		}__		return !(winner instanceof NoRollbackRuleAttribute)__	};winning,rule,is,the,shallowest,rule,that,is,the,closest,in,the,inheritance,hierarchy,to,the,exception,if,no,rule,applies,1,return,false,see,transaction,attribute,rollback,on,java,lang,throwable;override,public,boolean,rollback,on,throwable,ex,if,logger,is,trace,enabled,logger,trace,applying,rules,to,determine,whether,transaction,should,rollback,on,ex,rollback,rule,attribute,winner,null,int,deepest,integer,if,this,rollback,rules,null,for,rollback,rule,attribute,rule,this,rollback,rules,int,depth,rule,get,depth,ex,if,depth,0,depth,deepest,deepest,depth,winner,rule,if,logger,is,trace,enabled,logger,trace,winning,rollback,rule,is,winner,if,winner,null,logger,trace,no,relevant,rollback,rule,found,applying,default,rules,return,super,rollback,on,ex,return,winner,instanceof,no,rollback,rule,attribute
RuleBasedTransactionAttribute -> @Override 	public boolean rollbackOn(Throwable ex);1467730834;Winning rule is the shallowest rule (that is, the closest in the_inheritance hierarchy to the exception). If no rule applies (-1),_return false._@see TransactionAttribute#rollbackOn(java.lang.Throwable);@Override_	public boolean rollbackOn(Throwable ex) {_		if (logger.isTraceEnabled()) {_			logger.trace("Applying rules to determine whether transaction should rollback on " + ex)__		}__		RollbackRuleAttribute winner = null__		int deepest = Integer.MAX_VALUE___		if (this.rollbackRules != null) {_			for (RollbackRuleAttribute rule : this.rollbackRules) {_				int depth = rule.getDepth(ex)__				if (depth >= 0 && depth < deepest) {_					deepest = depth__					winner = rule__				}_			}_		}__		if (logger.isTraceEnabled()) {_			logger.trace("Winning rollback rule is: " + winner)__		}__		_		if (winner == null) {_			logger.trace("No relevant rollback rule found: applying default rules")__			return super.rollbackOn(ex)__		}__		return !(winner instanceof NoRollbackRuleAttribute)__	};winning,rule,is,the,shallowest,rule,that,is,the,closest,in,the,inheritance,hierarchy,to,the,exception,if,no,rule,applies,1,return,false,see,transaction,attribute,rollback,on,java,lang,throwable;override,public,boolean,rollback,on,throwable,ex,if,logger,is,trace,enabled,logger,trace,applying,rules,to,determine,whether,transaction,should,rollback,on,ex,rollback,rule,attribute,winner,null,int,deepest,integer,if,this,rollback,rules,null,for,rollback,rule,attribute,rule,this,rollback,rules,int,depth,rule,get,depth,ex,if,depth,0,depth,deepest,deepest,depth,winner,rule,if,logger,is,trace,enabled,logger,trace,winning,rollback,rule,is,winner,if,winner,null,logger,trace,no,relevant,rollback,rule,found,applying,default,rules,return,super,rollback,on,ex,return,winner,instanceof,no,rollback,rule,attribute
RuleBasedTransactionAttribute -> @Override 	public boolean rollbackOn(Throwable ex);1498780456;Winning rule is the shallowest rule (that is, the closest in the_inheritance hierarchy to the exception). If no rule applies (-1),_return false._@see TransactionAttribute#rollbackOn(java.lang.Throwable);@Override_	public boolean rollbackOn(Throwable ex) {_		if (logger.isTraceEnabled()) {_			logger.trace("Applying rules to determine whether transaction should rollback on " + ex)__		}__		RollbackRuleAttribute winner = null__		int deepest = Integer.MAX_VALUE___		if (this.rollbackRules != null) {_			for (RollbackRuleAttribute rule : this.rollbackRules) {_				int depth = rule.getDepth(ex)__				if (depth >= 0 && depth < deepest) {_					deepest = depth__					winner = rule__				}_			}_		}__		if (logger.isTraceEnabled()) {_			logger.trace("Winning rollback rule is: " + winner)__		}__		_		if (winner == null) {_			logger.trace("No relevant rollback rule found: applying default rules")__			return super.rollbackOn(ex)__		}__		return !(winner instanceof NoRollbackRuleAttribute)__	};winning,rule,is,the,shallowest,rule,that,is,the,closest,in,the,inheritance,hierarchy,to,the,exception,if,no,rule,applies,1,return,false,see,transaction,attribute,rollback,on,java,lang,throwable;override,public,boolean,rollback,on,throwable,ex,if,logger,is,trace,enabled,logger,trace,applying,rules,to,determine,whether,transaction,should,rollback,on,ex,rollback,rule,attribute,winner,null,int,deepest,integer,if,this,rollback,rules,null,for,rollback,rule,attribute,rule,this,rollback,rules,int,depth,rule,get,depth,ex,if,depth,0,depth,deepest,deepest,depth,winner,rule,if,logger,is,trace,enabled,logger,trace,winning,rollback,rule,is,winner,if,winner,null,logger,trace,no,relevant,rollback,rule,found,applying,default,rules,return,super,rollback,on,ex,return,winner,instanceof,no,rollback,rule,attribute
RuleBasedTransactionAttribute -> @Override 	public boolean rollbackOn(Throwable ex);1530174524;Winning rule is the shallowest rule (that is, the closest in the_inheritance hierarchy to the exception). If no rule applies (-1),_return false._@see TransactionAttribute#rollbackOn(java.lang.Throwable);@Override_	public boolean rollbackOn(Throwable ex) {_		if (logger.isTraceEnabled()) {_			logger.trace("Applying rules to determine whether transaction should rollback on " + ex)__		}__		RollbackRuleAttribute winner = null__		int deepest = Integer.MAX_VALUE___		if (this.rollbackRules != null) {_			for (RollbackRuleAttribute rule : this.rollbackRules) {_				int depth = rule.getDepth(ex)__				if (depth >= 0 && depth < deepest) {_					deepest = depth__					winner = rule__				}_			}_		}__		if (logger.isTraceEnabled()) {_			logger.trace("Winning rollback rule is: " + winner)__		}__		_		if (winner == null) {_			logger.trace("No relevant rollback rule found: applying default rules")__			return super.rollbackOn(ex)__		}__		return !(winner instanceof NoRollbackRuleAttribute)__	};winning,rule,is,the,shallowest,rule,that,is,the,closest,in,the,inheritance,hierarchy,to,the,exception,if,no,rule,applies,1,return,false,see,transaction,attribute,rollback,on,java,lang,throwable;override,public,boolean,rollback,on,throwable,ex,if,logger,is,trace,enabled,logger,trace,applying,rules,to,determine,whether,transaction,should,rollback,on,ex,rollback,rule,attribute,winner,null,int,deepest,integer,if,this,rollback,rules,null,for,rollback,rule,attribute,rule,this,rollback,rules,int,depth,rule,get,depth,ex,if,depth,0,depth,deepest,deepest,depth,winner,rule,if,logger,is,trace,enabled,logger,trace,winning,rollback,rule,is,winner,if,winner,null,logger,trace,no,relevant,rollback,rule,found,applying,default,rules,return,super,rollback,on,ex,return,winner,instanceof,no,rollback,rule,attribute
RuleBasedTransactionAttribute -> public RuleBasedTransactionAttribute();1328020251;Create a new RuleBasedTransactionAttribute, with default settings._Can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName_@see #setRollbackRules;public RuleBasedTransactionAttribute() {_		super()__	};create,a,new,rule,based,transaction,attribute,with,default,settings,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name,see,set,rollback,rules;public,rule,based,transaction,attribute,super
RuleBasedTransactionAttribute -> public RuleBasedTransactionAttribute();1356735495;Create a new RuleBasedTransactionAttribute, with default settings._Can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName_@see #setRollbackRules;public RuleBasedTransactionAttribute() {_		super()__	};create,a,new,rule,based,transaction,attribute,with,default,settings,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name,see,set,rollback,rules;public,rule,based,transaction,attribute,super
RuleBasedTransactionAttribute -> public RuleBasedTransactionAttribute();1461047077;Create a new RuleBasedTransactionAttribute, with default settings._Can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName_@see #setRollbackRules;public RuleBasedTransactionAttribute() {_		super()__	};create,a,new,rule,based,transaction,attribute,with,default,settings,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name,see,set,rollback,rules;public,rule,based,transaction,attribute,super
RuleBasedTransactionAttribute -> public RuleBasedTransactionAttribute();1467730834;Create a new RuleBasedTransactionAttribute, with default settings._Can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName_@see #setRollbackRules;public RuleBasedTransactionAttribute() {_		super()__	};create,a,new,rule,based,transaction,attribute,with,default,settings,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name,see,set,rollback,rules;public,rule,based,transaction,attribute,super
RuleBasedTransactionAttribute -> public RuleBasedTransactionAttribute();1498780456;Create a new RuleBasedTransactionAttribute, with default settings._Can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName_@see #setRollbackRules;public RuleBasedTransactionAttribute() {_		super()__	};create,a,new,rule,based,transaction,attribute,with,default,settings,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name,see,set,rollback,rules;public,rule,based,transaction,attribute,super
RuleBasedTransactionAttribute -> public RuleBasedTransactionAttribute();1530174524;Create a new RuleBasedTransactionAttribute, with default settings._Can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName_@see #setRollbackRules;public RuleBasedTransactionAttribute() {_		super()__	};create,a,new,rule,based,transaction,attribute,with,default,settings,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name,see,set,rollback,rules;public,rule,based,transaction,attribute,super
RuleBasedTransactionAttribute -> public RuleBasedTransactionAttribute(RuleBasedTransactionAttribute other);1328020251;Copy constructor. Definition can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName_@see #setRollbackRules;public RuleBasedTransactionAttribute(RuleBasedTransactionAttribute other) {_		super(other)__		this.rollbackRules = new ArrayList<RollbackRuleAttribute>(other.rollbackRules)__	};copy,constructor,definition,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name,see,set,rollback,rules;public,rule,based,transaction,attribute,rule,based,transaction,attribute,other,super,other,this,rollback,rules,new,array,list,rollback,rule,attribute,other,rollback,rules
RuleBasedTransactionAttribute -> public RuleBasedTransactionAttribute(RuleBasedTransactionAttribute other);1356735495;Copy constructor. Definition can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName_@see #setRollbackRules;public RuleBasedTransactionAttribute(RuleBasedTransactionAttribute other) {_		super(other)__		this.rollbackRules = new ArrayList<RollbackRuleAttribute>(other.rollbackRules)__	};copy,constructor,definition,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name,see,set,rollback,rules;public,rule,based,transaction,attribute,rule,based,transaction,attribute,other,super,other,this,rollback,rules,new,array,list,rollback,rule,attribute,other,rollback,rules
RuleBasedTransactionAttribute -> public RuleBasedTransactionAttribute(RuleBasedTransactionAttribute other);1461047077;Copy constructor. Definition can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName_@see #setRollbackRules;public RuleBasedTransactionAttribute(RuleBasedTransactionAttribute other) {_		super(other)__		this.rollbackRules = new ArrayList<RollbackRuleAttribute>(other.rollbackRules)__	};copy,constructor,definition,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name,see,set,rollback,rules;public,rule,based,transaction,attribute,rule,based,transaction,attribute,other,super,other,this,rollback,rules,new,array,list,rollback,rule,attribute,other,rollback,rules
RuleBasedTransactionAttribute -> public RuleBasedTransactionAttribute(RuleBasedTransactionAttribute other);1467730834;Copy constructor. Definition can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName_@see #setRollbackRules;public RuleBasedTransactionAttribute(RuleBasedTransactionAttribute other) {_		super(other)__		this.rollbackRules = new ArrayList<>(other.rollbackRules)__	};copy,constructor,definition,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name,see,set,rollback,rules;public,rule,based,transaction,attribute,rule,based,transaction,attribute,other,super,other,this,rollback,rules,new,array,list,other,rollback,rules
RuleBasedTransactionAttribute -> public RuleBasedTransactionAttribute(RuleBasedTransactionAttribute other);1498780456;Copy constructor. Definition can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName_@see #setRollbackRules;public RuleBasedTransactionAttribute(RuleBasedTransactionAttribute other) {_		super(other)__		this.rollbackRules = (other.rollbackRules != null ? new ArrayList<>(other.rollbackRules) : null)__	};copy,constructor,definition,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name,see,set,rollback,rules;public,rule,based,transaction,attribute,rule,based,transaction,attribute,other,super,other,this,rollback,rules,other,rollback,rules,null,new,array,list,other,rollback,rules,null
RuleBasedTransactionAttribute -> public RuleBasedTransactionAttribute(RuleBasedTransactionAttribute other);1530174524;Copy constructor. Definition can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName_@see #setRollbackRules;public RuleBasedTransactionAttribute(RuleBasedTransactionAttribute other) {_		super(other)__		this.rollbackRules = (other.rollbackRules != null ? new ArrayList<>(other.rollbackRules) : null)__	};copy,constructor,definition,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name,see,set,rollback,rules;public,rule,based,transaction,attribute,rule,based,transaction,attribute,other,super,other,this,rollback,rules,other,rollback,rules,null,new,array,list,other,rollback,rules,null
RuleBasedTransactionAttribute -> public void setRollbackRules(List<RollbackRuleAttribute> rollbackRules);1328020251;Set the list of <code>RollbackRuleAttribute</code> objects_(and/or <code>NoRollbackRuleAttribute</code> objects) to apply._@see RollbackRuleAttribute_@see NoRollbackRuleAttribute;public void setRollbackRules(List<RollbackRuleAttribute> rollbackRules) {_		this.rollbackRules = rollbackRules__	};set,the,list,of,code,rollback,rule,attribute,code,objects,and,or,code,no,rollback,rule,attribute,code,objects,to,apply,see,rollback,rule,attribute,see,no,rollback,rule,attribute;public,void,set,rollback,rules,list,rollback,rule,attribute,rollback,rules,this,rollback,rules,rollback,rules
RuleBasedTransactionAttribute -> public void setRollbackRules(List<RollbackRuleAttribute> rollbackRules);1356735495;Set the list of {@code RollbackRuleAttribute} objects_(and/or {@code NoRollbackRuleAttribute} objects) to apply._@see RollbackRuleAttribute_@see NoRollbackRuleAttribute;public void setRollbackRules(List<RollbackRuleAttribute> rollbackRules) {_		this.rollbackRules = rollbackRules__	};set,the,list,of,code,rollback,rule,attribute,objects,and,or,code,no,rollback,rule,attribute,objects,to,apply,see,rollback,rule,attribute,see,no,rollback,rule,attribute;public,void,set,rollback,rules,list,rollback,rule,attribute,rollback,rules,this,rollback,rules,rollback,rules
RuleBasedTransactionAttribute -> public void setRollbackRules(List<RollbackRuleAttribute> rollbackRules);1461047077;Set the list of {@code RollbackRuleAttribute} objects_(and/or {@code NoRollbackRuleAttribute} objects) to apply._@see RollbackRuleAttribute_@see NoRollbackRuleAttribute;public void setRollbackRules(List<RollbackRuleAttribute> rollbackRules) {_		this.rollbackRules = rollbackRules__	};set,the,list,of,code,rollback,rule,attribute,objects,and,or,code,no,rollback,rule,attribute,objects,to,apply,see,rollback,rule,attribute,see,no,rollback,rule,attribute;public,void,set,rollback,rules,list,rollback,rule,attribute,rollback,rules,this,rollback,rules,rollback,rules
RuleBasedTransactionAttribute -> public void setRollbackRules(List<RollbackRuleAttribute> rollbackRules);1467730834;Set the list of {@code RollbackRuleAttribute} objects_(and/or {@code NoRollbackRuleAttribute} objects) to apply._@see RollbackRuleAttribute_@see NoRollbackRuleAttribute;public void setRollbackRules(List<RollbackRuleAttribute> rollbackRules) {_		this.rollbackRules = rollbackRules__	};set,the,list,of,code,rollback,rule,attribute,objects,and,or,code,no,rollback,rule,attribute,objects,to,apply,see,rollback,rule,attribute,see,no,rollback,rule,attribute;public,void,set,rollback,rules,list,rollback,rule,attribute,rollback,rules,this,rollback,rules,rollback,rules
RuleBasedTransactionAttribute -> public void setRollbackRules(List<RollbackRuleAttribute> rollbackRules);1498780456;Set the list of {@code RollbackRuleAttribute} objects_(and/or {@code NoRollbackRuleAttribute} objects) to apply._@see RollbackRuleAttribute_@see NoRollbackRuleAttribute;public void setRollbackRules(List<RollbackRuleAttribute> rollbackRules) {_		this.rollbackRules = rollbackRules__	};set,the,list,of,code,rollback,rule,attribute,objects,and,or,code,no,rollback,rule,attribute,objects,to,apply,see,rollback,rule,attribute,see,no,rollback,rule,attribute;public,void,set,rollback,rules,list,rollback,rule,attribute,rollback,rules,this,rollback,rules,rollback,rules
RuleBasedTransactionAttribute -> public void setRollbackRules(List<RollbackRuleAttribute> rollbackRules);1530174524;Set the list of {@code RollbackRuleAttribute} objects_(and/or {@code NoRollbackRuleAttribute} objects) to apply._@see RollbackRuleAttribute_@see NoRollbackRuleAttribute;public void setRollbackRules(List<RollbackRuleAttribute> rollbackRules) {_		this.rollbackRules = rollbackRules__	};set,the,list,of,code,rollback,rule,attribute,objects,and,or,code,no,rollback,rule,attribute,objects,to,apply,see,rollback,rule,attribute,see,no,rollback,rule,attribute;public,void,set,rollback,rules,list,rollback,rule,attribute,rollback,rules,this,rollback,rules,rollback,rules
