# id;timestamp;commentText;codeText;commentWords;codeWords
SimpleRecordOperation -> @Nullable 	public Record execute(Record inputRecord) throws DataAccessException;1496955179;Execute the CCI interaction encapsulated by this operation object._<p>This method will call CCI's {@code Interaction.execute} variant_that returns an output Record._@param inputRecord the input record_@return the output record_@throws DataAccessException if there is any problem_@see javax.resource.cci.Interaction#execute(javax.resource.cci.InteractionSpec, Record);@Nullable_	public Record execute(Record inputRecord) throws DataAccessException {_		return getCciTemplate().execute(getInteractionSpec(), inputRecord)__	};execute,the,cci,interaction,encapsulated,by,this,operation,object,p,this,method,will,call,cci,s,code,interaction,execute,variant,that,returns,an,output,record,param,input,record,the,input,record,return,the,output,record,throws,data,access,exception,if,there,is,any,problem,see,javax,resource,cci,interaction,execute,javax,resource,cci,interaction,spec,record;nullable,public,record,execute,record,input,record,throws,data,access,exception,return,get,cci,template,execute,get,interaction,spec,input,record
SimpleRecordOperation -> @Nullable 	public Record execute(Record inputRecord) throws DataAccessException;1498780456;Execute the CCI interaction encapsulated by this operation object._<p>This method will call CCI's {@code Interaction.execute} variant_that returns an output Record._@param inputRecord the input record_@return the output record_@throws DataAccessException if there is any problem_@see javax.resource.cci.Interaction#execute(javax.resource.cci.InteractionSpec, Record);@Nullable_	public Record execute(Record inputRecord) throws DataAccessException {_		InteractionSpec interactionSpec = getInteractionSpec()__		Assert.state(interactionSpec != null, "No InteractionSpec set")__		return getCciTemplate().execute(interactionSpec, inputRecord)__	};execute,the,cci,interaction,encapsulated,by,this,operation,object,p,this,method,will,call,cci,s,code,interaction,execute,variant,that,returns,an,output,record,param,input,record,the,input,record,return,the,output,record,throws,data,access,exception,if,there,is,any,problem,see,javax,resource,cci,interaction,execute,javax,resource,cci,interaction,spec,record;nullable,public,record,execute,record,input,record,throws,data,access,exception,interaction,spec,interaction,spec,get,interaction,spec,assert,state,interaction,spec,null,no,interaction,spec,set,return,get,cci,template,execute,interaction,spec,input,record
SimpleRecordOperation -> @Nullable 	public Record execute(Record inputRecord) throws DataAccessException;1530174524;Execute the CCI interaction encapsulated by this operation object._<p>This method will call CCI's {@code Interaction.execute} variant_that returns an output Record._@param inputRecord the input record_@return the output record_@throws DataAccessException if there is any problem_@see javax.resource.cci.Interaction#execute(javax.resource.cci.InteractionSpec, Record);@Nullable_	public Record execute(Record inputRecord) throws DataAccessException {_		InteractionSpec interactionSpec = getInteractionSpec()__		Assert.state(interactionSpec != null, "No InteractionSpec set")__		return getCciTemplate().execute(interactionSpec, inputRecord)__	};execute,the,cci,interaction,encapsulated,by,this,operation,object,p,this,method,will,call,cci,s,code,interaction,execute,variant,that,returns,an,output,record,param,input,record,the,input,record,return,the,output,record,throws,data,access,exception,if,there,is,any,problem,see,javax,resource,cci,interaction,execute,javax,resource,cci,interaction,spec,record;nullable,public,record,execute,record,input,record,throws,data,access,exception,interaction,spec,interaction,spec,get,interaction,spec,assert,state,interaction,spec,null,no,interaction,spec,set,return,get,cci,template,execute,interaction,spec,input,record
SimpleRecordOperation -> public SimpleRecordOperation();1328020251;Constructor that allows use as a JavaBean.;public SimpleRecordOperation() {_	};constructor,that,allows,use,as,a,java,bean;public,simple,record,operation
SimpleRecordOperation -> public SimpleRecordOperation();1356735495;Constructor that allows use as a JavaBean.;public SimpleRecordOperation() {_	};constructor,that,allows,use,as,a,java,bean;public,simple,record,operation
SimpleRecordOperation -> public SimpleRecordOperation();1496955179;Constructor that allows use as a JavaBean.;public SimpleRecordOperation() {_	};constructor,that,allows,use,as,a,java,bean;public,simple,record,operation
SimpleRecordOperation -> public SimpleRecordOperation();1498780456;Constructor that allows use as a JavaBean.;public SimpleRecordOperation() {_	};constructor,that,allows,use,as,a,java,bean;public,simple,record,operation
SimpleRecordOperation -> public SimpleRecordOperation();1530174524;Constructor that allows use as a JavaBean.;public SimpleRecordOperation() {_	};constructor,that,allows,use,as,a,java,bean;public,simple,record,operation
SimpleRecordOperation -> public Record execute(Record inputRecord) throws DataAccessException;1328020251;Execute the CCI interaction encapsulated by this operation object._<p>This method will call CCI's <code>Interaction.execute</code> variant_that returns an output Record._@param inputRecord the input record_@return the output record_@throws DataAccessException if there is any problem_@see javax.resource.cci.Interaction#execute(javax.resource.cci.InteractionSpec, Record);public Record execute(Record inputRecord) throws DataAccessException {_		return getCciTemplate().execute(getInteractionSpec(), inputRecord)__	};execute,the,cci,interaction,encapsulated,by,this,operation,object,p,this,method,will,call,cci,s,code,interaction,execute,code,variant,that,returns,an,output,record,param,input,record,the,input,record,return,the,output,record,throws,data,access,exception,if,there,is,any,problem,see,javax,resource,cci,interaction,execute,javax,resource,cci,interaction,spec,record;public,record,execute,record,input,record,throws,data,access,exception,return,get,cci,template,execute,get,interaction,spec,input,record
SimpleRecordOperation -> public Record execute(Record inputRecord) throws DataAccessException;1356735495;Execute the CCI interaction encapsulated by this operation object._<p>This method will call CCI's {@code Interaction.execute} variant_that returns an output Record._@param inputRecord the input record_@return the output record_@throws DataAccessException if there is any problem_@see javax.resource.cci.Interaction#execute(javax.resource.cci.InteractionSpec, Record);public Record execute(Record inputRecord) throws DataAccessException {_		return getCciTemplate().execute(getInteractionSpec(), inputRecord)__	};execute,the,cci,interaction,encapsulated,by,this,operation,object,p,this,method,will,call,cci,s,code,interaction,execute,variant,that,returns,an,output,record,param,input,record,the,input,record,return,the,output,record,throws,data,access,exception,if,there,is,any,problem,see,javax,resource,cci,interaction,execute,javax,resource,cci,interaction,spec,record;public,record,execute,record,input,record,throws,data,access,exception,return,get,cci,template,execute,get,interaction,spec,input,record
SimpleRecordOperation -> public void execute(Record inputRecord, Record outputRecord) throws DataAccessException;1328020251;Execute the CCI interaction encapsulated by this operation object._<p>This method will call CCI's <code>Interaction.execute</code> variant_with a passed-in output Record._@param inputRecord the input record_@param outputRecord the output record_@throws DataAccessException if there is any problem_@see javax.resource.cci.Interaction#execute(javax.resource.cci.InteractionSpec, Record, Record);public void execute(Record inputRecord, Record outputRecord) throws DataAccessException {_		getCciTemplate().execute(getInteractionSpec(), inputRecord, outputRecord)__	};execute,the,cci,interaction,encapsulated,by,this,operation,object,p,this,method,will,call,cci,s,code,interaction,execute,code,variant,with,a,passed,in,output,record,param,input,record,the,input,record,param,output,record,the,output,record,throws,data,access,exception,if,there,is,any,problem,see,javax,resource,cci,interaction,execute,javax,resource,cci,interaction,spec,record,record;public,void,execute,record,input,record,record,output,record,throws,data,access,exception,get,cci,template,execute,get,interaction,spec,input,record,output,record
SimpleRecordOperation -> public void execute(Record inputRecord, Record outputRecord) throws DataAccessException;1356735495;Execute the CCI interaction encapsulated by this operation object._<p>This method will call CCI's {@code Interaction.execute} variant_with a passed-in output Record._@param inputRecord the input record_@param outputRecord the output record_@throws DataAccessException if there is any problem_@see javax.resource.cci.Interaction#execute(javax.resource.cci.InteractionSpec, Record, Record);public void execute(Record inputRecord, Record outputRecord) throws DataAccessException {_		getCciTemplate().execute(getInteractionSpec(), inputRecord, outputRecord)__	};execute,the,cci,interaction,encapsulated,by,this,operation,object,p,this,method,will,call,cci,s,code,interaction,execute,variant,with,a,passed,in,output,record,param,input,record,the,input,record,param,output,record,the,output,record,throws,data,access,exception,if,there,is,any,problem,see,javax,resource,cci,interaction,execute,javax,resource,cci,interaction,spec,record,record;public,void,execute,record,input,record,record,output,record,throws,data,access,exception,get,cci,template,execute,get,interaction,spec,input,record,output,record
SimpleRecordOperation -> public void execute(Record inputRecord, Record outputRecord) throws DataAccessException;1496955179;Execute the CCI interaction encapsulated by this operation object._<p>This method will call CCI's {@code Interaction.execute} variant_with a passed-in output Record._@param inputRecord the input record_@param outputRecord the output record_@throws DataAccessException if there is any problem_@see javax.resource.cci.Interaction#execute(javax.resource.cci.InteractionSpec, Record, Record);public void execute(Record inputRecord, Record outputRecord) throws DataAccessException {_		getCciTemplate().execute(getInteractionSpec(), inputRecord, outputRecord)__	};execute,the,cci,interaction,encapsulated,by,this,operation,object,p,this,method,will,call,cci,s,code,interaction,execute,variant,with,a,passed,in,output,record,param,input,record,the,input,record,param,output,record,the,output,record,throws,data,access,exception,if,there,is,any,problem,see,javax,resource,cci,interaction,execute,javax,resource,cci,interaction,spec,record,record;public,void,execute,record,input,record,record,output,record,throws,data,access,exception,get,cci,template,execute,get,interaction,spec,input,record,output,record
SimpleRecordOperation -> public void execute(Record inputRecord, Record outputRecord) throws DataAccessException;1498780456;Execute the CCI interaction encapsulated by this operation object._<p>This method will call CCI's {@code Interaction.execute} variant_with a passed-in output Record._@param inputRecord the input record_@param outputRecord the output record_@throws DataAccessException if there is any problem_@see javax.resource.cci.Interaction#execute(javax.resource.cci.InteractionSpec, Record, Record);public void execute(Record inputRecord, Record outputRecord) throws DataAccessException {_		InteractionSpec interactionSpec = getInteractionSpec()__		Assert.state(interactionSpec != null, "No InteractionSpec set")__		getCciTemplate().execute(interactionSpec, inputRecord, outputRecord)__	};execute,the,cci,interaction,encapsulated,by,this,operation,object,p,this,method,will,call,cci,s,code,interaction,execute,variant,with,a,passed,in,output,record,param,input,record,the,input,record,param,output,record,the,output,record,throws,data,access,exception,if,there,is,any,problem,see,javax,resource,cci,interaction,execute,javax,resource,cci,interaction,spec,record,record;public,void,execute,record,input,record,record,output,record,throws,data,access,exception,interaction,spec,interaction,spec,get,interaction,spec,assert,state,interaction,spec,null,no,interaction,spec,set,get,cci,template,execute,interaction,spec,input,record,output,record
SimpleRecordOperation -> public void execute(Record inputRecord, Record outputRecord) throws DataAccessException;1530174524;Execute the CCI interaction encapsulated by this operation object._<p>This method will call CCI's {@code Interaction.execute} variant_with a passed-in output Record._@param inputRecord the input record_@param outputRecord the output record_@throws DataAccessException if there is any problem_@see javax.resource.cci.Interaction#execute(javax.resource.cci.InteractionSpec, Record, Record);public void execute(Record inputRecord, Record outputRecord) throws DataAccessException {_		InteractionSpec interactionSpec = getInteractionSpec()__		Assert.state(interactionSpec != null, "No InteractionSpec set")__		getCciTemplate().execute(interactionSpec, inputRecord, outputRecord)__	};execute,the,cci,interaction,encapsulated,by,this,operation,object,p,this,method,will,call,cci,s,code,interaction,execute,variant,with,a,passed,in,output,record,param,input,record,the,input,record,param,output,record,the,output,record,throws,data,access,exception,if,there,is,any,problem,see,javax,resource,cci,interaction,execute,javax,resource,cci,interaction,spec,record,record;public,void,execute,record,input,record,record,output,record,throws,data,access,exception,interaction,spec,interaction,spec,get,interaction,spec,assert,state,interaction,spec,null,no,interaction,spec,set,get,cci,template,execute,interaction,spec,input,record,output,record
SimpleRecordOperation -> public SimpleRecordOperation(ConnectionFactory connectionFactory, InteractionSpec interactionSpec);1328020251;Convenient constructor with ConnectionFactory and specifications_(connection and interaction)._@param connectionFactory ConnectionFactory to use to obtain connections;public SimpleRecordOperation(ConnectionFactory connectionFactory, InteractionSpec interactionSpec) {_		getCciTemplate().setConnectionFactory(connectionFactory)__		setInteractionSpec(interactionSpec)__	};convenient,constructor,with,connection,factory,and,specifications,connection,and,interaction,param,connection,factory,connection,factory,to,use,to,obtain,connections;public,simple,record,operation,connection,factory,connection,factory,interaction,spec,interaction,spec,get,cci,template,set,connection,factory,connection,factory,set,interaction,spec,interaction,spec
SimpleRecordOperation -> public SimpleRecordOperation(ConnectionFactory connectionFactory, InteractionSpec interactionSpec);1356735495;Convenient constructor with ConnectionFactory and specifications_(connection and interaction)._@param connectionFactory ConnectionFactory to use to obtain connections;public SimpleRecordOperation(ConnectionFactory connectionFactory, InteractionSpec interactionSpec) {_		getCciTemplate().setConnectionFactory(connectionFactory)__		setInteractionSpec(interactionSpec)__	};convenient,constructor,with,connection,factory,and,specifications,connection,and,interaction,param,connection,factory,connection,factory,to,use,to,obtain,connections;public,simple,record,operation,connection,factory,connection,factory,interaction,spec,interaction,spec,get,cci,template,set,connection,factory,connection,factory,set,interaction,spec,interaction,spec
SimpleRecordOperation -> public SimpleRecordOperation(ConnectionFactory connectionFactory, InteractionSpec interactionSpec);1496955179;Convenient constructor with ConnectionFactory and specifications_(connection and interaction)._@param connectionFactory ConnectionFactory to use to obtain connections;public SimpleRecordOperation(ConnectionFactory connectionFactory, InteractionSpec interactionSpec) {_		getCciTemplate().setConnectionFactory(connectionFactory)__		setInteractionSpec(interactionSpec)__	};convenient,constructor,with,connection,factory,and,specifications,connection,and,interaction,param,connection,factory,connection,factory,to,use,to,obtain,connections;public,simple,record,operation,connection,factory,connection,factory,interaction,spec,interaction,spec,get,cci,template,set,connection,factory,connection,factory,set,interaction,spec,interaction,spec
SimpleRecordOperation -> public SimpleRecordOperation(ConnectionFactory connectionFactory, InteractionSpec interactionSpec);1498780456;Convenient constructor with ConnectionFactory and specifications_(connection and interaction)._@param connectionFactory ConnectionFactory to use to obtain connections;public SimpleRecordOperation(ConnectionFactory connectionFactory, InteractionSpec interactionSpec) {_		getCciTemplate().setConnectionFactory(connectionFactory)__		setInteractionSpec(interactionSpec)__	};convenient,constructor,with,connection,factory,and,specifications,connection,and,interaction,param,connection,factory,connection,factory,to,use,to,obtain,connections;public,simple,record,operation,connection,factory,connection,factory,interaction,spec,interaction,spec,get,cci,template,set,connection,factory,connection,factory,set,interaction,spec,interaction,spec
SimpleRecordOperation -> public SimpleRecordOperation(ConnectionFactory connectionFactory, InteractionSpec interactionSpec);1530174524;Convenient constructor with ConnectionFactory and specifications_(connection and interaction)._@param connectionFactory the ConnectionFactory to use to obtain connections;public SimpleRecordOperation(ConnectionFactory connectionFactory, InteractionSpec interactionSpec) {_		getCciTemplate().setConnectionFactory(connectionFactory)__		setInteractionSpec(interactionSpec)__	};convenient,constructor,with,connection,factory,and,specifications,connection,and,interaction,param,connection,factory,the,connection,factory,to,use,to,obtain,connections;public,simple,record,operation,connection,factory,connection,factory,interaction,spec,interaction,spec,get,cci,template,set,connection,factory,connection,factory,set,interaction,spec,interaction,spec
