commented;modifiers;parameterAmount;loc;comment;code
true;public;1;3;/**  * Set the target ConnectionFactory that this ConnectionFactory should delegate to.  */ ;/**  * Set the target ConnectionFactory that this ConnectionFactory should delegate to.  */ public void setTargetConnectionFactory(@Nullable ConnectionFactory targetConnectionFactory) {     this.targetConnectionFactory = targetConnectionFactory. }
true;public;0;4;/**  * Return the target ConnectionFactory that this ConnectionFactory should delegate to.  */ ;/**  * Return the target ConnectionFactory that this ConnectionFactory should delegate to.  */ @Nullable public ConnectionFactory getTargetConnectionFactory() {     return this.targetConnectionFactory. }
true;protected;0;5;/**  * Obtain the target {@code ConnectionFactory} for actual use (never {@code null}).  * @since 5.0  */ ;/**  * Obtain the target {@code ConnectionFactory} for actual use (never {@code null}).  * @since 5.0  */ protected ConnectionFactory obtainTargetConnectionFactory() {     ConnectionFactory connectionFactory = getTargetConnectionFactory().     Assert.state(connectionFactory != null, "No 'targetConnectionFactory' set").     return connectionFactory. }
false;public;0;6;;@Override public void afterPropertiesSet() {     if (getTargetConnectionFactory() == null) {         throw new IllegalArgumentException("Property 'targetConnectionFactory' is required").     } }
false;public;0;4;;@Override public Connection getConnection() throws ResourceException {     return obtainTargetConnectionFactory().getConnection(). }
false;public;1;4;;@Override public Connection getConnection(ConnectionSpec connectionSpec) throws ResourceException {     return obtainTargetConnectionFactory().getConnection(connectionSpec). }
false;public;0;4;;@Override public RecordFactory getRecordFactory() throws ResourceException {     return obtainTargetConnectionFactory().getRecordFactory(). }
false;public;0;4;;@Override public ResourceAdapterMetaData getMetaData() throws ResourceException {     return obtainTargetConnectionFactory().getMetaData(). }
false;public;0;4;;@Override public Reference getReference() throws NamingException {     return obtainTargetConnectionFactory().getReference(). }
false;public;1;4;;@Override public void setReference(Reference reference) {     obtainTargetConnectionFactory().setReference(reference). }
