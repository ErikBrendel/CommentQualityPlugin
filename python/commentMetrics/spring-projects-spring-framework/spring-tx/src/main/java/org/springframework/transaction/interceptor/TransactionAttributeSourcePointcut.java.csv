commented;modifiers;parameterAmount;loc;comment;code
false;public;2;10;;@Override public boolean matches(Method method, Class<?> targetClass) {     if (TransactionalProxy.class.isAssignableFrom(targetClass) || PlatformTransactionManager.class.isAssignableFrom(targetClass) || PersistenceExceptionTranslator.class.isAssignableFrom(targetClass)) {         return false.     }     TransactionAttributeSource tas = getTransactionAttributeSource().     return (tas == null || tas.getTransactionAttribute(method, targetClass) != null). }
false;public;1;11;;@Override public boolean equals(Object other) {     if (this == other) {         return true.     }     if (!(other instanceof TransactionAttributeSourcePointcut)) {         return false.     }     TransactionAttributeSourcePointcut otherPc = (TransactionAttributeSourcePointcut) other.     return ObjectUtils.nullSafeEquals(getTransactionAttributeSource(), otherPc.getTransactionAttributeSource()). }
false;public;0;4;;@Override public int hashCode() {     return TransactionAttributeSourcePointcut.class.hashCode(). }
false;public;0;4;;@Override public String toString() {     return getClass().getName() + ": " + getTransactionAttributeSource(). }
true;protected,abstract;0;2;/**  * Obtain the underlying TransactionAttributeSource (may be {@code null}).  * To be implemented by subclasses.  */ ;/**  * Obtain the underlying TransactionAttributeSource (may be {@code null}).  * To be implemented by subclasses.  */ @Nullable protected abstract TransactionAttributeSource getTransactionAttributeSource().
