commented;modifiers;parameterAmount;loc;comment;code
false;public,final;0;13;;@Override public final void afterPropertiesSet() throws IllegalArgumentException, BeanInitializationException {     // Let abstract subclasses check their configuration.     checkDaoConfig().     // Let concrete implementations initialize themselves.     try {         initDao().     } catch (Exception ex) {         throw new BeanInitializationException("Initialization of DAO failed", ex).     } }
true;protected,abstract;0;1;/**  * Abstract subclasses must override this to check their configuration.  * <p>Implementors should be marked as {@code final} if concrete subclasses  * are not supposed to override this template method themselves.  * @throws IllegalArgumentException in case of illegal configuration  */ ;/**  * Abstract subclasses must override this to check their configuration.  * <p>Implementors should be marked as {@code final} if concrete subclasses  * are not supposed to override this template method themselves.  * @throws IllegalArgumentException in case of illegal configuration  */ protected abstract void checkDaoConfig() throws IllegalArgumentException.
true;protected;0;2;/**  * Concrete subclasses can override this for custom initialization behavior.  * Gets called after population of this instance's bean properties.  * @throws Exception if DAO initialization fails  * (will be rethrown as a BeanInitializationException)  * @see org.springframework.beans.factory.BeanInitializationException  */ ;/**  * Concrete subclasses can override this for custom initialization behavior.  * Gets called after population of this instance's bean properties.  * @throws Exception if DAO initialization fails  * (will be rethrown as a BeanInitializationException)  * @see org.springframework.beans.factory.BeanInitializationException  */ protected void initDao() throws Exception { }
