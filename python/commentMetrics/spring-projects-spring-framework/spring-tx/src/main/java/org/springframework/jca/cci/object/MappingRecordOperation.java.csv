commented;modifiers;parameterAmount;loc;comment;code
true;public;1;3;/**  * Set a RecordCreator that should be used for creating default output Records.  * <p>Default is none: CCI's {@code Interaction.execute} variant  * that returns an output Record will be called.  * <p>Specify a RecordCreator here if you always need to call CCI's  * {@code Interaction.execute} variant with a passed-in output Record.  * This RecordCreator will then be invoked to create a default output Record instance.  * @see javax.resource.cci.Interaction#execute(javax.resource.cci.InteractionSpec, Record)  * @see javax.resource.cci.Interaction#execute(javax.resource.cci.InteractionSpec, Record, Record)  * @see org.springframework.jca.cci.core.CciTemplate#setOutputRecordCreator  */ ;/**  * Set a RecordCreator that should be used for creating default output Records.  * <p>Default is none: CCI's {@code Interaction.execute} variant  * that returns an output Record will be called.  * <p>Specify a RecordCreator here if you always need to call CCI's  * {@code Interaction.execute} variant with a passed-in output Record.  * This RecordCreator will then be invoked to create a default output Record instance.  * @see javax.resource.cci.Interaction#execute(javax.resource.cci.InteractionSpec, Record)  * @see javax.resource.cci.Interaction#execute(javax.resource.cci.InteractionSpec, Record, Record)  * @see org.springframework.jca.cci.core.CciTemplate#setOutputRecordCreator  */ public void setOutputRecordCreator(RecordCreator creator) {     getCciTemplate().setOutputRecordCreator(creator). }
true;public;1;7;/**  * Execute the interaction encapsulated by this operation object.  * @param inputObject the input data, to be converted to a Record  * by the {@code createInputRecord} method  * @return the output data extracted with the {@code extractOutputData} method  * @throws DataAccessException if there is any problem  * @see #createInputRecord  * @see #extractOutputData  */ ;/**  * Execute the interaction encapsulated by this operation object.  * @param inputObject the input data, to be converted to a Record  * by the {@code createInputRecord} method  * @return the output data extracted with the {@code extractOutputData} method  * @throws DataAccessException if there is any problem  * @see #createInputRecord  * @see #extractOutputData  */ @Nullable public Object execute(Object inputObject) throws DataAccessException {     InteractionSpec interactionSpec = getInteractionSpec().     Assert.state(interactionSpec != null, "No InteractionSpec set").     return getCciTemplate().execute(interactionSpec, new RecordCreatorImpl(inputObject), new RecordExtractorImpl()). }
true;protected,abstract;2;2;/**  * Subclasses must implement this method to generate an input Record  * from an input object passed into the {@code execute} method.  * @param inputObject the passed-in input object  * @return the CCI input Record  * @throws ResourceException if thrown by a CCI method, to be auto-converted  * to a DataAccessException  * @see #execute(Object)  */ ;/**  * Subclasses must implement this method to generate an input Record  * from an input object passed into the {@code execute} method.  * @param inputObject the passed-in input object  * @return the CCI input Record  * @throws ResourceException if thrown by a CCI method, to be auto-converted  * to a DataAccessException  * @see #execute(Object)  */ protected abstract Record createInputRecord(RecordFactory recordFactory, Object inputObject) throws ResourceException, DataAccessException.
true;protected,abstract;1;2;/**  * Subclasses must implement this method to convert the Record returned  * by CCI execution into a result object for the {@code execute} method.  * @param outputRecord the Record returned by CCI execution  * @return the result object  * @throws ResourceException if thrown by a CCI method, to be auto-converted  * to a DataAccessException  * @see #execute(Object)  */ ;/**  * Subclasses must implement this method to convert the Record returned  * by CCI execution into a result object for the {@code execute} method.  * @param outputRecord the Record returned by CCI execution  * @return the result object  * @throws ResourceException if thrown by a CCI method, to be auto-converted  * to a DataAccessException  * @see #execute(Object)  */ protected abstract Object extractOutputData(Record outputRecord) throws ResourceException, SQLException, DataAccessException.
false;public;1;4;;@Override public Record createRecord(RecordFactory recordFactory) throws ResourceException, DataAccessException {     return createInputRecord(recordFactory, this.inputObject). }
false;public;1;4;;@Override public Object extractData(Record record) throws ResourceException, SQLException, DataAccessException {     return extractOutputData(record). }
