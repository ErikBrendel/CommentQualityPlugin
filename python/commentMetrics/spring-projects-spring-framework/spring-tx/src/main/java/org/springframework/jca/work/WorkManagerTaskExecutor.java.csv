# id;timestamp;commentText;codeText;commentWords;codeWords
WorkManagerTaskExecutor -> protected WorkManager getDefaultWorkManager();1328020251;Obtain a default WorkManager to delegate to._Called if no explicit WorkManager or WorkManager JNDI name has been specified._<p>The default implementation returns a {@link SimpleTaskWorkManager}._Can be overridden in subclasses.;protected WorkManager getDefaultWorkManager() {_		return new SimpleTaskWorkManager()__	};obtain,a,default,work,manager,to,delegate,to,called,if,no,explicit,work,manager,or,work,manager,jndi,name,has,been,specified,p,the,default,implementation,returns,a,link,simple,task,work,manager,can,be,overridden,in,subclasses;protected,work,manager,get,default,work,manager,return,new,simple,task,work,manager
WorkManagerTaskExecutor -> protected WorkManager getDefaultWorkManager();1353874548;Obtain a default WorkManager to delegate to._Called if no explicit WorkManager or WorkManager JNDI name has been specified._<p>The default implementation returns a {@link SimpleTaskWorkManager}._Can be overridden in subclasses.;protected WorkManager getDefaultWorkManager() {_		return new SimpleTaskWorkManager()__	};obtain,a,default,work,manager,to,delegate,to,called,if,no,explicit,work,manager,or,work,manager,jndi,name,has,been,specified,p,the,default,implementation,returns,a,link,simple,task,work,manager,can,be,overridden,in,subclasses;protected,work,manager,get,default,work,manager,return,new,simple,task,work,manager
WorkManagerTaskExecutor -> protected WorkManager getDefaultWorkManager();1356735495;Obtain a default WorkManager to delegate to._Called if no explicit WorkManager or WorkManager JNDI name has been specified._<p>The default implementation returns a {@link SimpleTaskWorkManager}._Can be overridden in subclasses.;protected WorkManager getDefaultWorkManager() {_		return new SimpleTaskWorkManager()__	};obtain,a,default,work,manager,to,delegate,to,called,if,no,explicit,work,manager,or,work,manager,jndi,name,has,been,specified,p,the,default,implementation,returns,a,link,simple,task,work,manager,can,be,overridden,in,subclasses;protected,work,manager,get,default,work,manager,return,new,simple,task,work,manager
WorkManagerTaskExecutor -> protected WorkManager getDefaultWorkManager();1357119239;Obtain a default WorkManager to delegate to._Called if no explicit WorkManager or WorkManager JNDI name has been specified._<p>The default implementation returns a {@link SimpleTaskWorkManager}._Can be overridden in subclasses.;protected WorkManager getDefaultWorkManager() {_		return new SimpleTaskWorkManager()__	};obtain,a,default,work,manager,to,delegate,to,called,if,no,explicit,work,manager,or,work,manager,jndi,name,has,been,specified,p,the,default,implementation,returns,a,link,simple,task,work,manager,can,be,overridden,in,subclasses;protected,work,manager,get,default,work,manager,return,new,simple,task,work,manager
WorkManagerTaskExecutor -> protected WorkManager getDefaultWorkManager();1368482696;Obtain a default WorkManager to delegate to._Called if no explicit WorkManager or WorkManager JNDI name has been specified._<p>The default implementation returns a {@link SimpleTaskWorkManager}._Can be overridden in subclasses.;protected WorkManager getDefaultWorkManager() {_		return new SimpleTaskWorkManager()__	};obtain,a,default,work,manager,to,delegate,to,called,if,no,explicit,work,manager,or,work,manager,jndi,name,has,been,specified,p,the,default,implementation,returns,a,link,simple,task,work,manager,can,be,overridden,in,subclasses;protected,work,manager,get,default,work,manager,return,new,simple,task,work,manager
WorkManagerTaskExecutor -> protected WorkManager getDefaultWorkManager();1388782627;Obtain a default WorkManager to delegate to._Called if no explicit WorkManager or WorkManager JNDI name has been specified._<p>The default implementation returns a {@link SimpleTaskWorkManager}._Can be overridden in subclasses.;protected WorkManager getDefaultWorkManager() {_		return new SimpleTaskWorkManager()__	};obtain,a,default,work,manager,to,delegate,to,called,if,no,explicit,work,manager,or,work,manager,jndi,name,has,been,specified,p,the,default,implementation,returns,a,link,simple,task,work,manager,can,be,overridden,in,subclasses;protected,work,manager,get,default,work,manager,return,new,simple,task,work,manager
WorkManagerTaskExecutor -> protected WorkManager getDefaultWorkManager();1455724682;Obtain a default WorkManager to delegate to._Called if no explicit WorkManager or WorkManager JNDI name has been specified._<p>The default implementation returns a {@link SimpleTaskWorkManager}._Can be overridden in subclasses.;protected WorkManager getDefaultWorkManager() {_		return new SimpleTaskWorkManager()__	};obtain,a,default,work,manager,to,delegate,to,called,if,no,explicit,work,manager,or,work,manager,jndi,name,has,been,specified,p,the,default,implementation,returns,a,link,simple,task,work,manager,can,be,overridden,in,subclasses;protected,work,manager,get,default,work,manager,return,new,simple,task,work,manager
WorkManagerTaskExecutor -> protected WorkManager getDefaultWorkManager();1467730834;Obtain a default WorkManager to delegate to._Called if no explicit WorkManager or WorkManager JNDI name has been specified._<p>The default implementation returns a {@link SimpleTaskWorkManager}._Can be overridden in subclasses.;protected WorkManager getDefaultWorkManager() {_		return new SimpleTaskWorkManager()__	};obtain,a,default,work,manager,to,delegate,to,called,if,no,explicit,work,manager,or,work,manager,jndi,name,has,been,specified,p,the,default,implementation,returns,a,link,simple,task,work,manager,can,be,overridden,in,subclasses;protected,work,manager,get,default,work,manager,return,new,simple,task,work,manager
WorkManagerTaskExecutor -> protected WorkManager getDefaultWorkManager();1467749899;Obtain a default WorkManager to delegate to._Called if no explicit WorkManager or WorkManager JNDI name has been specified._<p>The default implementation returns a {@link SimpleTaskWorkManager}._Can be overridden in subclasses.;protected WorkManager getDefaultWorkManager() {_		return new SimpleTaskWorkManager()__	};obtain,a,default,work,manager,to,delegate,to,called,if,no,explicit,work,manager,or,work,manager,jndi,name,has,been,specified,p,the,default,implementation,returns,a,link,simple,task,work,manager,can,be,overridden,in,subclasses;protected,work,manager,get,default,work,manager,return,new,simple,task,work,manager
WorkManagerTaskExecutor -> protected WorkManager getDefaultWorkManager();1468613531;Obtain a default WorkManager to delegate to._Called if no explicit WorkManager or WorkManager JNDI name has been specified._<p>The default implementation returns a {@link SimpleTaskWorkManager}._Can be overridden in subclasses.;protected WorkManager getDefaultWorkManager() {_		return new SimpleTaskWorkManager()__	};obtain,a,default,work,manager,to,delegate,to,called,if,no,explicit,work,manager,or,work,manager,jndi,name,has,been,specified,p,the,default,implementation,returns,a,link,simple,task,work,manager,can,be,overridden,in,subclasses;protected,work,manager,get,default,work,manager,return,new,simple,task,work,manager
WorkManagerTaskExecutor -> protected WorkManager getDefaultWorkManager();1476521730;Obtain a default WorkManager to delegate to._Called if no explicit WorkManager or WorkManager JNDI name has been specified._<p>The default implementation returns a {@link SimpleTaskWorkManager}._Can be overridden in subclasses.;protected WorkManager getDefaultWorkManager() {_		return new SimpleTaskWorkManager()__	};obtain,a,default,work,manager,to,delegate,to,called,if,no,explicit,work,manager,or,work,manager,jndi,name,has,been,specified,p,the,default,implementation,returns,a,link,simple,task,work,manager,can,be,overridden,in,subclasses;protected,work,manager,get,default,work,manager,return,new,simple,task,work,manager
WorkManagerTaskExecutor -> protected WorkManager getDefaultWorkManager();1495868221;Obtain a default WorkManager to delegate to._Called if no explicit WorkManager or WorkManager JNDI name has been specified._<p>The default implementation returns a {@link SimpleTaskWorkManager}._Can be overridden in subclasses.;protected WorkManager getDefaultWorkManager() {_		return new SimpleTaskWorkManager()__	};obtain,a,default,work,manager,to,delegate,to,called,if,no,explicit,work,manager,or,work,manager,jndi,name,has,been,specified,p,the,default,implementation,returns,a,link,simple,task,work,manager,can,be,overridden,in,subclasses;protected,work,manager,get,default,work,manager,return,new,simple,task,work,manager
WorkManagerTaskExecutor -> protected WorkManager getDefaultWorkManager();1498780456;Obtain a default WorkManager to delegate to._Called if no explicit WorkManager or WorkManager JNDI name has been specified._<p>The default implementation returns a {@link SimpleTaskWorkManager}._Can be overridden in subclasses.;protected WorkManager getDefaultWorkManager() {_		return new SimpleTaskWorkManager()__	};obtain,a,default,work,manager,to,delegate,to,called,if,no,explicit,work,manager,or,work,manager,jndi,name,has,been,specified,p,the,default,implementation,returns,a,link,simple,task,work,manager,can,be,overridden,in,subclasses;protected,work,manager,get,default,work,manager,return,new,simple,task,work,manager
WorkManagerTaskExecutor -> protected WorkManager getDefaultWorkManager();1533213413;Obtain a default WorkManager to delegate to._Called if no explicit WorkManager or WorkManager JNDI name has been specified._<p>The default implementation returns a {@link SimpleTaskWorkManager}._Can be overridden in subclasses.;protected WorkManager getDefaultWorkManager() {_		return new SimpleTaskWorkManager()__	};obtain,a,default,work,manager,to,delegate,to,called,if,no,explicit,work,manager,or,work,manager,jndi,name,has,been,specified,p,the,default,implementation,returns,a,link,simple,task,work,manager,can,be,overridden,in,subclasses;protected,work,manager,get,default,work,manager,return,new,simple,task,work,manager
WorkManagerTaskExecutor -> public void setWorkListener(WorkListener workListener);1328020251;Specify a JCA 1.5 WorkListener to apply, if any._<p>This shared WorkListener instance will be passed on to the_WorkManager by all {@link #execute} calls on this TaskExecutor.;public void setWorkListener(WorkListener workListener) {_		this.workListener = workListener__	};specify,a,jca,1,5,work,listener,to,apply,if,any,p,this,shared,work,listener,instance,will,be,passed,on,to,the,work,manager,by,all,link,execute,calls,on,this,task,executor;public,void,set,work,listener,work,listener,work,listener,this,work,listener,work,listener
WorkManagerTaskExecutor -> public void setWorkListener(WorkListener workListener);1353874548;Specify a JCA 1.5 WorkListener to apply, if any._<p>This shared WorkListener instance will be passed on to the_WorkManager by all {@link #execute} calls on this TaskExecutor.;public void setWorkListener(WorkListener workListener) {_		this.workListener = workListener__	};specify,a,jca,1,5,work,listener,to,apply,if,any,p,this,shared,work,listener,instance,will,be,passed,on,to,the,work,manager,by,all,link,execute,calls,on,this,task,executor;public,void,set,work,listener,work,listener,work,listener,this,work,listener,work,listener
WorkManagerTaskExecutor -> public void setWorkListener(WorkListener workListener);1356735495;Specify a JCA 1.5 WorkListener to apply, if any._<p>This shared WorkListener instance will be passed on to the_WorkManager by all {@link #execute} calls on this TaskExecutor.;public void setWorkListener(WorkListener workListener) {_		this.workListener = workListener__	};specify,a,jca,1,5,work,listener,to,apply,if,any,p,this,shared,work,listener,instance,will,be,passed,on,to,the,work,manager,by,all,link,execute,calls,on,this,task,executor;public,void,set,work,listener,work,listener,work,listener,this,work,listener,work,listener
WorkManagerTaskExecutor -> public void setWorkListener(WorkListener workListener);1357119239;Specify a JCA 1.5 WorkListener to apply, if any._<p>This shared WorkListener instance will be passed on to the_WorkManager by all {@link #execute} calls on this TaskExecutor.;public void setWorkListener(WorkListener workListener) {_		this.workListener = workListener__	};specify,a,jca,1,5,work,listener,to,apply,if,any,p,this,shared,work,listener,instance,will,be,passed,on,to,the,work,manager,by,all,link,execute,calls,on,this,task,executor;public,void,set,work,listener,work,listener,work,listener,this,work,listener,work,listener
WorkManagerTaskExecutor -> public void setWorkListener(WorkListener workListener);1368482696;Specify a JCA 1.5 WorkListener to apply, if any._<p>This shared WorkListener instance will be passed on to the_WorkManager by all {@link #execute} calls on this TaskExecutor.;public void setWorkListener(WorkListener workListener) {_		this.workListener = workListener__	};specify,a,jca,1,5,work,listener,to,apply,if,any,p,this,shared,work,listener,instance,will,be,passed,on,to,the,work,manager,by,all,link,execute,calls,on,this,task,executor;public,void,set,work,listener,work,listener,work,listener,this,work,listener,work,listener
WorkManagerTaskExecutor -> public void setWorkListener(WorkListener workListener);1388782627;Specify a JCA 1.5 WorkListener to apply, if any._<p>This shared WorkListener instance will be passed on to the_WorkManager by all {@link #execute} calls on this TaskExecutor.;public void setWorkListener(WorkListener workListener) {_		this.workListener = workListener__	};specify,a,jca,1,5,work,listener,to,apply,if,any,p,this,shared,work,listener,instance,will,be,passed,on,to,the,work,manager,by,all,link,execute,calls,on,this,task,executor;public,void,set,work,listener,work,listener,work,listener,this,work,listener,work,listener
WorkManagerTaskExecutor -> public void setWorkListener(WorkListener workListener);1455724682;Specify a JCA 1.5 WorkListener to apply, if any._<p>This shared WorkListener instance will be passed on to the_WorkManager by all {@link #execute} calls on this TaskExecutor.;public void setWorkListener(WorkListener workListener) {_		this.workListener = workListener__	};specify,a,jca,1,5,work,listener,to,apply,if,any,p,this,shared,work,listener,instance,will,be,passed,on,to,the,work,manager,by,all,link,execute,calls,on,this,task,executor;public,void,set,work,listener,work,listener,work,listener,this,work,listener,work,listener
WorkManagerTaskExecutor -> public void setWorkListener(WorkListener workListener);1467730834;Specify a JCA 1.5 WorkListener to apply, if any._<p>This shared WorkListener instance will be passed on to the_WorkManager by all {@link #execute} calls on this TaskExecutor.;public void setWorkListener(WorkListener workListener) {_		this.workListener = workListener__	};specify,a,jca,1,5,work,listener,to,apply,if,any,p,this,shared,work,listener,instance,will,be,passed,on,to,the,work,manager,by,all,link,execute,calls,on,this,task,executor;public,void,set,work,listener,work,listener,work,listener,this,work,listener,work,listener
WorkManagerTaskExecutor -> public void setWorkListener(WorkListener workListener);1467749899;Specify a JCA WorkListener to apply, if any._<p>This shared WorkListener instance will be passed on to the_WorkManager by all {@link #execute} calls on this TaskExecutor.;public void setWorkListener(WorkListener workListener) {_		this.workListener = workListener__	};specify,a,jca,work,listener,to,apply,if,any,p,this,shared,work,listener,instance,will,be,passed,on,to,the,work,manager,by,all,link,execute,calls,on,this,task,executor;public,void,set,work,listener,work,listener,work,listener,this,work,listener,work,listener
WorkManagerTaskExecutor -> public void setWorkListener(WorkListener workListener);1468613531;Specify a JCA WorkListener to apply, if any._<p>This shared WorkListener instance will be passed on to the_WorkManager by all {@link #execute} calls on this TaskExecutor.;public void setWorkListener(WorkListener workListener) {_		this.workListener = workListener__	};specify,a,jca,work,listener,to,apply,if,any,p,this,shared,work,listener,instance,will,be,passed,on,to,the,work,manager,by,all,link,execute,calls,on,this,task,executor;public,void,set,work,listener,work,listener,work,listener,this,work,listener,work,listener
WorkManagerTaskExecutor -> public void setWorkListener(WorkListener workListener);1476521730;Specify a JCA WorkListener to apply, if any._<p>This shared WorkListener instance will be passed on to the_WorkManager by all {@link #execute} calls on this TaskExecutor.;public void setWorkListener(WorkListener workListener) {_		this.workListener = workListener__	};specify,a,jca,work,listener,to,apply,if,any,p,this,shared,work,listener,instance,will,be,passed,on,to,the,work,manager,by,all,link,execute,calls,on,this,task,executor;public,void,set,work,listener,work,listener,work,listener,this,work,listener,work,listener
WorkManagerTaskExecutor -> public boolean prefersShortLivedTasks();1328020251;This task executor prefers short-lived work units.;public boolean prefersShortLivedTasks() {_		return true__	};this,task,executor,prefers,short,lived,work,units;public,boolean,prefers,short,lived,tasks,return,true
WorkManagerTaskExecutor -> public boolean prefersShortLivedTasks();1353874548;This task executor prefers short-lived work units.;public boolean prefersShortLivedTasks() {_		return true__	};this,task,executor,prefers,short,lived,work,units;public,boolean,prefers,short,lived,tasks,return,true
WorkManagerTaskExecutor -> public boolean prefersShortLivedTasks();1357119239;This task executor prefers short-lived work units.;public boolean prefersShortLivedTasks() {_		return true__	};this,task,executor,prefers,short,lived,work,units;public,boolean,prefers,short,lived,tasks,return,true
WorkManagerTaskExecutor -> public void setWorkManager(WorkManager workManager);1328020251;Specify the JCA WorkManager instance to delegate to.;public void setWorkManager(WorkManager workManager) {_		Assert.notNull(workManager, "WorkManager must not be null")__		this.workManager = workManager__	};specify,the,jca,work,manager,instance,to,delegate,to;public,void,set,work,manager,work,manager,work,manager,assert,not,null,work,manager,work,manager,must,not,be,null,this,work,manager,work,manager
WorkManagerTaskExecutor -> public void setWorkManager(WorkManager workManager);1353874548;Specify the JCA WorkManager instance to delegate to.;public void setWorkManager(WorkManager workManager) {_		Assert.notNull(workManager, "WorkManager must not be null")__		this.workManager = workManager__	};specify,the,jca,work,manager,instance,to,delegate,to;public,void,set,work,manager,work,manager,work,manager,assert,not,null,work,manager,work,manager,must,not,be,null,this,work,manager,work,manager
WorkManagerTaskExecutor -> public void setWorkManager(WorkManager workManager);1356735495;Specify the JCA WorkManager instance to delegate to.;public void setWorkManager(WorkManager workManager) {_		Assert.notNull(workManager, "WorkManager must not be null")__		this.workManager = workManager__	};specify,the,jca,work,manager,instance,to,delegate,to;public,void,set,work,manager,work,manager,work,manager,assert,not,null,work,manager,work,manager,must,not,be,null,this,work,manager,work,manager
WorkManagerTaskExecutor -> public void setWorkManager(WorkManager workManager);1357119239;Specify the JCA WorkManager instance to delegate to.;public void setWorkManager(WorkManager workManager) {_		Assert.notNull(workManager, "WorkManager must not be null")__		this.workManager = workManager__	};specify,the,jca,work,manager,instance,to,delegate,to;public,void,set,work,manager,work,manager,work,manager,assert,not,null,work,manager,work,manager,must,not,be,null,this,work,manager,work,manager
WorkManagerTaskExecutor -> public void setWorkManager(WorkManager workManager);1368482696;Specify the JCA WorkManager instance to delegate to.;public void setWorkManager(WorkManager workManager) {_		Assert.notNull(workManager, "WorkManager must not be null")__		this.workManager = workManager__	};specify,the,jca,work,manager,instance,to,delegate,to;public,void,set,work,manager,work,manager,work,manager,assert,not,null,work,manager,work,manager,must,not,be,null,this,work,manager,work,manager
WorkManagerTaskExecutor -> public void setWorkManager(WorkManager workManager);1388782627;Specify the JCA WorkManager instance to delegate to.;public void setWorkManager(WorkManager workManager) {_		Assert.notNull(workManager, "WorkManager must not be null")__		this.workManager = workManager__	};specify,the,jca,work,manager,instance,to,delegate,to;public,void,set,work,manager,work,manager,work,manager,assert,not,null,work,manager,work,manager,must,not,be,null,this,work,manager,work,manager
WorkManagerTaskExecutor -> public void setWorkManager(WorkManager workManager);1455724682;Specify the JCA WorkManager instance to delegate to.;public void setWorkManager(WorkManager workManager) {_		Assert.notNull(workManager, "WorkManager must not be null")__		this.workManager = workManager__	};specify,the,jca,work,manager,instance,to,delegate,to;public,void,set,work,manager,work,manager,work,manager,assert,not,null,work,manager,work,manager,must,not,be,null,this,work,manager,work,manager
WorkManagerTaskExecutor -> public void setWorkManager(WorkManager workManager);1467730834;Specify the JCA WorkManager instance to delegate to.;public void setWorkManager(WorkManager workManager) {_		Assert.notNull(workManager, "WorkManager must not be null")__		this.workManager = workManager__	};specify,the,jca,work,manager,instance,to,delegate,to;public,void,set,work,manager,work,manager,work,manager,assert,not,null,work,manager,work,manager,must,not,be,null,this,work,manager,work,manager
WorkManagerTaskExecutor -> public void setWorkManager(WorkManager workManager);1467749899;Specify the JCA WorkManager instance to delegate to.;public void setWorkManager(WorkManager workManager) {_		Assert.notNull(workManager, "WorkManager must not be null")__		this.workManager = workManager__	};specify,the,jca,work,manager,instance,to,delegate,to;public,void,set,work,manager,work,manager,work,manager,assert,not,null,work,manager,work,manager,must,not,be,null,this,work,manager,work,manager
WorkManagerTaskExecutor -> public void setWorkManager(WorkManager workManager);1468613531;Specify the JCA WorkManager instance to delegate to.;public void setWorkManager(WorkManager workManager) {_		Assert.notNull(workManager, "WorkManager must not be null")__		this.workManager = workManager__	};specify,the,jca,work,manager,instance,to,delegate,to;public,void,set,work,manager,work,manager,work,manager,assert,not,null,work,manager,work,manager,must,not,be,null,this,work,manager,work,manager
WorkManagerTaskExecutor -> public void setWorkManager(WorkManager workManager);1476521730;Specify the JCA WorkManager instance to delegate to.;public void setWorkManager(WorkManager workManager) {_		Assert.notNull(workManager, "WorkManager must not be null")__		this.workManager = workManager__	};specify,the,jca,work,manager,instance,to,delegate,to;public,void,set,work,manager,work,manager,work,manager,assert,not,null,work,manager,work,manager,must,not,be,null,this,work,manager,work,manager
WorkManagerTaskExecutor -> public void setWorkManager(WorkManager workManager);1495868221;Specify the JCA WorkManager instance to delegate to.;public void setWorkManager(WorkManager workManager) {_		Assert.notNull(workManager, "WorkManager must not be null")__		this.workManager = workManager__	};specify,the,jca,work,manager,instance,to,delegate,to;public,void,set,work,manager,work,manager,work,manager,assert,not,null,work,manager,work,manager,must,not,be,null,this,work,manager,work,manager
WorkManagerTaskExecutor -> public void setWorkManager(WorkManager workManager);1498780456;Specify the JCA WorkManager instance to delegate to.;public void setWorkManager(WorkManager workManager) {_		Assert.notNull(workManager, "WorkManager must not be null")__		this.workManager = workManager__	};specify,the,jca,work,manager,instance,to,delegate,to;public,void,set,work,manager,work,manager,work,manager,assert,not,null,work,manager,work,manager,must,not,be,null,this,work,manager,work,manager
WorkManagerTaskExecutor -> public void setWorkManager(WorkManager workManager);1533213413;Specify the JCA WorkManager instance to delegate to.;public void setWorkManager(WorkManager workManager) {_		Assert.notNull(workManager, "WorkManager must not be null")__		this.workManager = workManager__	};specify,the,jca,work,manager,instance,to,delegate,to;public,void,set,work,manager,work,manager,work,manager,assert,not,null,work,manager,work,manager,must,not,be,null,this,work,manager,work,manager
WorkManagerTaskExecutor -> public void setWorkManagerName(String workManagerName);1328020251;Set the JNDI name of the JCA WorkManager._<p>This can either be a fully qualified JNDI name,_or the JNDI name relative to the current environment_naming context if "resourceRef" is set to "true"._@see #setWorkManager_@see #setResourceRef;public void setWorkManagerName(String workManagerName) {_		this.workManagerName = workManagerName__	};set,the,jndi,name,of,the,jca,work,manager,p,this,can,either,be,a,fully,qualified,jndi,name,or,the,jndi,name,relative,to,the,current,environment,naming,context,if,resource,ref,is,set,to,true,see,set,work,manager,see,set,resource,ref;public,void,set,work,manager,name,string,work,manager,name,this,work,manager,name,work,manager,name
WorkManagerTaskExecutor -> public void setWorkManagerName(String workManagerName);1353874548;Set the JNDI name of the JCA WorkManager._<p>This can either be a fully qualified JNDI name,_or the JNDI name relative to the current environment_naming context if "resourceRef" is set to "true"._@see #setWorkManager_@see #setResourceRef;public void setWorkManagerName(String workManagerName) {_		this.workManagerName = workManagerName__	};set,the,jndi,name,of,the,jca,work,manager,p,this,can,either,be,a,fully,qualified,jndi,name,or,the,jndi,name,relative,to,the,current,environment,naming,context,if,resource,ref,is,set,to,true,see,set,work,manager,see,set,resource,ref;public,void,set,work,manager,name,string,work,manager,name,this,work,manager,name,work,manager,name
WorkManagerTaskExecutor -> public void setWorkManagerName(String workManagerName);1356735495;Set the JNDI name of the JCA WorkManager._<p>This can either be a fully qualified JNDI name,_or the JNDI name relative to the current environment_naming context if "resourceRef" is set to "true"._@see #setWorkManager_@see #setResourceRef;public void setWorkManagerName(String workManagerName) {_		this.workManagerName = workManagerName__	};set,the,jndi,name,of,the,jca,work,manager,p,this,can,either,be,a,fully,qualified,jndi,name,or,the,jndi,name,relative,to,the,current,environment,naming,context,if,resource,ref,is,set,to,true,see,set,work,manager,see,set,resource,ref;public,void,set,work,manager,name,string,work,manager,name,this,work,manager,name,work,manager,name
WorkManagerTaskExecutor -> public void setWorkManagerName(String workManagerName);1357119239;Set the JNDI name of the JCA WorkManager._<p>This can either be a fully qualified JNDI name,_or the JNDI name relative to the current environment_naming context if "resourceRef" is set to "true"._@see #setWorkManager_@see #setResourceRef;public void setWorkManagerName(String workManagerName) {_		this.workManagerName = workManagerName__	};set,the,jndi,name,of,the,jca,work,manager,p,this,can,either,be,a,fully,qualified,jndi,name,or,the,jndi,name,relative,to,the,current,environment,naming,context,if,resource,ref,is,set,to,true,see,set,work,manager,see,set,resource,ref;public,void,set,work,manager,name,string,work,manager,name,this,work,manager,name,work,manager,name
WorkManagerTaskExecutor -> public void setWorkManagerName(String workManagerName);1368482696;Set the JNDI name of the JCA WorkManager._<p>This can either be a fully qualified JNDI name,_or the JNDI name relative to the current environment_naming context if "resourceRef" is set to "true"._@see #setWorkManager_@see #setResourceRef;public void setWorkManagerName(String workManagerName) {_		this.workManagerName = workManagerName__	};set,the,jndi,name,of,the,jca,work,manager,p,this,can,either,be,a,fully,qualified,jndi,name,or,the,jndi,name,relative,to,the,current,environment,naming,context,if,resource,ref,is,set,to,true,see,set,work,manager,see,set,resource,ref;public,void,set,work,manager,name,string,work,manager,name,this,work,manager,name,work,manager,name
WorkManagerTaskExecutor -> public void setWorkManagerName(String workManagerName);1388782627;Set the JNDI name of the JCA WorkManager._<p>This can either be a fully qualified JNDI name,_or the JNDI name relative to the current environment_naming context if "resourceRef" is set to "true"._@see #setWorkManager_@see #setResourceRef;public void setWorkManagerName(String workManagerName) {_		this.workManagerName = workManagerName__	};set,the,jndi,name,of,the,jca,work,manager,p,this,can,either,be,a,fully,qualified,jndi,name,or,the,jndi,name,relative,to,the,current,environment,naming,context,if,resource,ref,is,set,to,true,see,set,work,manager,see,set,resource,ref;public,void,set,work,manager,name,string,work,manager,name,this,work,manager,name,work,manager,name
WorkManagerTaskExecutor -> public void setWorkManagerName(String workManagerName);1455724682;Set the JNDI name of the JCA WorkManager._<p>This can either be a fully qualified JNDI name,_or the JNDI name relative to the current environment_naming context if "resourceRef" is set to "true"._@see #setWorkManager_@see #setResourceRef;public void setWorkManagerName(String workManagerName) {_		this.workManagerName = workManagerName__	};set,the,jndi,name,of,the,jca,work,manager,p,this,can,either,be,a,fully,qualified,jndi,name,or,the,jndi,name,relative,to,the,current,environment,naming,context,if,resource,ref,is,set,to,true,see,set,work,manager,see,set,resource,ref;public,void,set,work,manager,name,string,work,manager,name,this,work,manager,name,work,manager,name
WorkManagerTaskExecutor -> public void setWorkManagerName(String workManagerName);1467730834;Set the JNDI name of the JCA WorkManager._<p>This can either be a fully qualified JNDI name,_or the JNDI name relative to the current environment_naming context if "resourceRef" is set to "true"._@see #setWorkManager_@see #setResourceRef;public void setWorkManagerName(String workManagerName) {_		this.workManagerName = workManagerName__	};set,the,jndi,name,of,the,jca,work,manager,p,this,can,either,be,a,fully,qualified,jndi,name,or,the,jndi,name,relative,to,the,current,environment,naming,context,if,resource,ref,is,set,to,true,see,set,work,manager,see,set,resource,ref;public,void,set,work,manager,name,string,work,manager,name,this,work,manager,name,work,manager,name
WorkManagerTaskExecutor -> public void setWorkManagerName(String workManagerName);1467749899;Set the JNDI name of the JCA WorkManager._<p>This can either be a fully qualified JNDI name,_or the JNDI name relative to the current environment_naming context if "resourceRef" is set to "true"._@see #setWorkManager_@see #setResourceRef;public void setWorkManagerName(String workManagerName) {_		this.workManagerName = workManagerName__	};set,the,jndi,name,of,the,jca,work,manager,p,this,can,either,be,a,fully,qualified,jndi,name,or,the,jndi,name,relative,to,the,current,environment,naming,context,if,resource,ref,is,set,to,true,see,set,work,manager,see,set,resource,ref;public,void,set,work,manager,name,string,work,manager,name,this,work,manager,name,work,manager,name
WorkManagerTaskExecutor -> public void setWorkManagerName(String workManagerName);1468613531;Set the JNDI name of the JCA WorkManager._<p>This can either be a fully qualified JNDI name,_or the JNDI name relative to the current environment_naming context if "resourceRef" is set to "true"._@see #setWorkManager_@see #setResourceRef;public void setWorkManagerName(String workManagerName) {_		this.workManagerName = workManagerName__	};set,the,jndi,name,of,the,jca,work,manager,p,this,can,either,be,a,fully,qualified,jndi,name,or,the,jndi,name,relative,to,the,current,environment,naming,context,if,resource,ref,is,set,to,true,see,set,work,manager,see,set,resource,ref;public,void,set,work,manager,name,string,work,manager,name,this,work,manager,name,work,manager,name
WorkManagerTaskExecutor -> public void setWorkManagerName(String workManagerName);1476521730;Set the JNDI name of the JCA WorkManager._<p>This can either be a fully qualified JNDI name,_or the JNDI name relative to the current environment_naming context if "resourceRef" is set to "true"._@see #setWorkManager_@see #setResourceRef;public void setWorkManagerName(String workManagerName) {_		this.workManagerName = workManagerName__	};set,the,jndi,name,of,the,jca,work,manager,p,this,can,either,be,a,fully,qualified,jndi,name,or,the,jndi,name,relative,to,the,current,environment,naming,context,if,resource,ref,is,set,to,true,see,set,work,manager,see,set,resource,ref;public,void,set,work,manager,name,string,work,manager,name,this,work,manager,name,work,manager,name
WorkManagerTaskExecutor -> public void setWorkManagerName(String workManagerName);1495868221;Set the JNDI name of the JCA WorkManager._<p>This can either be a fully qualified JNDI name,_or the JNDI name relative to the current environment_naming context if "resourceRef" is set to "true"._@see #setWorkManager_@see #setResourceRef;public void setWorkManagerName(String workManagerName) {_		this.workManagerName = workManagerName__	};set,the,jndi,name,of,the,jca,work,manager,p,this,can,either,be,a,fully,qualified,jndi,name,or,the,jndi,name,relative,to,the,current,environment,naming,context,if,resource,ref,is,set,to,true,see,set,work,manager,see,set,resource,ref;public,void,set,work,manager,name,string,work,manager,name,this,work,manager,name,work,manager,name
WorkManagerTaskExecutor -> public void setWorkManagerName(String workManagerName);1498780456;Set the JNDI name of the JCA WorkManager._<p>This can either be a fully qualified JNDI name,_or the JNDI name relative to the current environment_naming context if "resourceRef" is set to "true"._@see #setWorkManager_@see #setResourceRef;public void setWorkManagerName(String workManagerName) {_		this.workManagerName = workManagerName__	};set,the,jndi,name,of,the,jca,work,manager,p,this,can,either,be,a,fully,qualified,jndi,name,or,the,jndi,name,relative,to,the,current,environment,naming,context,if,resource,ref,is,set,to,true,see,set,work,manager,see,set,resource,ref;public,void,set,work,manager,name,string,work,manager,name,this,work,manager,name,work,manager,name
WorkManagerTaskExecutor -> public void setWorkManagerName(String workManagerName);1533213413;Set the JNDI name of the JCA WorkManager._<p>This can either be a fully qualified JNDI name,_or the JNDI name relative to the current environment_naming context if "resourceRef" is set to "true"._@see #setWorkManager_@see #setResourceRef;public void setWorkManagerName(String workManagerName) {_		this.workManagerName = workManagerName__	};set,the,jndi,name,of,the,jca,work,manager,p,this,can,either,be,a,fully,qualified,jndi,name,or,the,jndi,name,relative,to,the,current,environment,naming,context,if,resource,ref,is,set,to,true,see,set,work,manager,see,set,resource,ref;public,void,set,work,manager,name,string,work,manager,name,this,work,manager,name,work,manager,name
WorkManagerTaskExecutor -> public void setBootstrapContext(BootstrapContext bootstrapContext);1328020251;Specify the JCA BootstrapContext that contains the_WorkManager to delegate to.;public void setBootstrapContext(BootstrapContext bootstrapContext) {_		Assert.notNull(bootstrapContext, "BootstrapContext must not be null")__		this.workManager = bootstrapContext.getWorkManager()__	};specify,the,jca,bootstrap,context,that,contains,the,work,manager,to,delegate,to;public,void,set,bootstrap,context,bootstrap,context,bootstrap,context,assert,not,null,bootstrap,context,bootstrap,context,must,not,be,null,this,work,manager,bootstrap,context,get,work,manager
WorkManagerTaskExecutor -> public void setBootstrapContext(BootstrapContext bootstrapContext);1353874548;Specify the JCA BootstrapContext that contains the_WorkManager to delegate to.;public void setBootstrapContext(BootstrapContext bootstrapContext) {_		Assert.notNull(bootstrapContext, "BootstrapContext must not be null")__		this.workManager = bootstrapContext.getWorkManager()__	};specify,the,jca,bootstrap,context,that,contains,the,work,manager,to,delegate,to;public,void,set,bootstrap,context,bootstrap,context,bootstrap,context,assert,not,null,bootstrap,context,bootstrap,context,must,not,be,null,this,work,manager,bootstrap,context,get,work,manager
WorkManagerTaskExecutor -> public void setBootstrapContext(BootstrapContext bootstrapContext);1357119239;Specify the JCA BootstrapContext that contains the_WorkManager to delegate to.;public void setBootstrapContext(BootstrapContext bootstrapContext) {_		Assert.notNull(bootstrapContext, "BootstrapContext must not be null")__		this.workManager = bootstrapContext.getWorkManager()__	};specify,the,jca,bootstrap,context,that,contains,the,work,manager,to,delegate,to;public,void,set,bootstrap,context,bootstrap,context,bootstrap,context,assert,not,null,bootstrap,context,bootstrap,context,must,not,be,null,this,work,manager,bootstrap,context,get,work,manager
WorkManagerTaskExecutor -> @Override 	public boolean prefersShortLivedTasks();1356735495;This task executor prefers short-lived work units.;@Override_	public boolean prefersShortLivedTasks() {_		return true__	};this,task,executor,prefers,short,lived,work,units;override,public,boolean,prefers,short,lived,tasks,return,true
WorkManagerTaskExecutor -> @Override 	public boolean prefersShortLivedTasks();1368482696;This task executor prefers short-lived work units.;@Override_	public boolean prefersShortLivedTasks() {_		return true__	};this,task,executor,prefers,short,lived,work,units;override,public,boolean,prefers,short,lived,tasks,return,true
WorkManagerTaskExecutor -> @Override 	public boolean prefersShortLivedTasks();1388782627;This task executor prefers short-lived work units.;@Override_	public boolean prefersShortLivedTasks() {_		return true__	};this,task,executor,prefers,short,lived,work,units;override,public,boolean,prefers,short,lived,tasks,return,true
WorkManagerTaskExecutor -> @Override 	public boolean prefersShortLivedTasks();1455724682;This task executor prefers short-lived work units.;@Override_	public boolean prefersShortLivedTasks() {_		return true__	};this,task,executor,prefers,short,lived,work,units;override,public,boolean,prefers,short,lived,tasks,return,true
WorkManagerTaskExecutor -> @Override 	public boolean prefersShortLivedTasks();1467730834;This task executor prefers short-lived work units.;@Override_	public boolean prefersShortLivedTasks() {_		return true__	};this,task,executor,prefers,short,lived,work,units;override,public,boolean,prefers,short,lived,tasks,return,true
WorkManagerTaskExecutor -> @Override 	public boolean prefersShortLivedTasks();1467749899;This task executor prefers short-lived work units.;@Override_	public boolean prefersShortLivedTasks() {_		return true__	};this,task,executor,prefers,short,lived,work,units;override,public,boolean,prefers,short,lived,tasks,return,true
WorkManagerTaskExecutor -> @Override 	public boolean prefersShortLivedTasks();1468613531;This task executor prefers short-lived work units.;@Override_	public boolean prefersShortLivedTasks() {_		return true__	};this,task,executor,prefers,short,lived,work,units;override,public,boolean,prefers,short,lived,tasks,return,true
WorkManagerTaskExecutor -> @Override 	public boolean prefersShortLivedTasks();1476521730;This task executor prefers short-lived work units.;@Override_	public boolean prefersShortLivedTasks() {_		return true__	};this,task,executor,prefers,short,lived,work,units;override,public,boolean,prefers,short,lived,tasks,return,true
WorkManagerTaskExecutor -> @Override 	public boolean prefersShortLivedTasks();1495868221;This task executor prefers short-lived work units.;@Override_	public boolean prefersShortLivedTasks() {_		return true__	};this,task,executor,prefers,short,lived,work,units;override,public,boolean,prefers,short,lived,tasks,return,true
WorkManagerTaskExecutor -> @Override 	public boolean prefersShortLivedTasks();1498780456;This task executor prefers short-lived work units.;@Override_	public boolean prefersShortLivedTasks() {_		return true__	};this,task,executor,prefers,short,lived,work,units;override,public,boolean,prefers,short,lived,tasks,return,true
WorkManagerTaskExecutor -> public void setTaskDecorator(TaskDecorator taskDecorator);1455724682;Specify a custom {@link TaskDecorator} to be applied to any {@link Runnable}_about to be executed._<p>Note that such a decorator is not necessarily being applied to the_user-supplied {@code Runnable}/{@code Callable} but rather to the actual_execution callback (which may be a wrapper around the user-supplied task)._<p>The primary use case is to set some execution context around the task's_invocation, or to provide some monitoring/statistics for task execution._@since 4.3;public void setTaskDecorator(TaskDecorator taskDecorator) {_		this.taskDecorator = taskDecorator__	};specify,a,custom,link,task,decorator,to,be,applied,to,any,link,runnable,about,to,be,executed,p,note,that,such,a,decorator,is,not,necessarily,being,applied,to,the,user,supplied,code,runnable,code,callable,but,rather,to,the,actual,execution,callback,which,may,be,a,wrapper,around,the,user,supplied,task,p,the,primary,use,case,is,to,set,some,execution,context,around,the,task,s,invocation,or,to,provide,some,monitoring,statistics,for,task,execution,since,4,3;public,void,set,task,decorator,task,decorator,task,decorator,this,task,decorator,task,decorator
WorkManagerTaskExecutor -> public void setTaskDecorator(TaskDecorator taskDecorator);1467730834;Specify a custom {@link TaskDecorator} to be applied to any {@link Runnable}_about to be executed._<p>Note that such a decorator is not necessarily being applied to the_user-supplied {@code Runnable}/{@code Callable} but rather to the actual_execution callback (which may be a wrapper around the user-supplied task)._<p>The primary use case is to set some execution context around the task's_invocation, or to provide some monitoring/statistics for task execution._@since 4.3;public void setTaskDecorator(TaskDecorator taskDecorator) {_		this.taskDecorator = taskDecorator__	};specify,a,custom,link,task,decorator,to,be,applied,to,any,link,runnable,about,to,be,executed,p,note,that,such,a,decorator,is,not,necessarily,being,applied,to,the,user,supplied,code,runnable,code,callable,but,rather,to,the,actual,execution,callback,which,may,be,a,wrapper,around,the,user,supplied,task,p,the,primary,use,case,is,to,set,some,execution,context,around,the,task,s,invocation,or,to,provide,some,monitoring,statistics,for,task,execution,since,4,3;public,void,set,task,decorator,task,decorator,task,decorator,this,task,decorator,task,decorator
WorkManagerTaskExecutor -> public void setTaskDecorator(TaskDecorator taskDecorator);1467749899;Specify a custom {@link TaskDecorator} to be applied to any {@link Runnable}_about to be executed._<p>Note that such a decorator is not necessarily being applied to the_user-supplied {@code Runnable}/{@code Callable} but rather to the actual_execution callback (which may be a wrapper around the user-supplied task)._<p>The primary use case is to set some execution context around the task's_invocation, or to provide some monitoring/statistics for task execution._@since 4.3;public void setTaskDecorator(TaskDecorator taskDecorator) {_		this.taskDecorator = taskDecorator__	};specify,a,custom,link,task,decorator,to,be,applied,to,any,link,runnable,about,to,be,executed,p,note,that,such,a,decorator,is,not,necessarily,being,applied,to,the,user,supplied,code,runnable,code,callable,but,rather,to,the,actual,execution,callback,which,may,be,a,wrapper,around,the,user,supplied,task,p,the,primary,use,case,is,to,set,some,execution,context,around,the,task,s,invocation,or,to,provide,some,monitoring,statistics,for,task,execution,since,4,3;public,void,set,task,decorator,task,decorator,task,decorator,this,task,decorator,task,decorator
WorkManagerTaskExecutor -> public void setTaskDecorator(TaskDecorator taskDecorator);1468613531;Specify a custom {@link TaskDecorator} to be applied to any {@link Runnable}_about to be executed._<p>Note that such a decorator is not necessarily being applied to the_user-supplied {@code Runnable}/{@code Callable} but rather to the actual_execution callback (which may be a wrapper around the user-supplied task)._<p>The primary use case is to set some execution context around the task's_invocation, or to provide some monitoring/statistics for task execution._@since 4.3;public void setTaskDecorator(TaskDecorator taskDecorator) {_		this.taskDecorator = taskDecorator__	};specify,a,custom,link,task,decorator,to,be,applied,to,any,link,runnable,about,to,be,executed,p,note,that,such,a,decorator,is,not,necessarily,being,applied,to,the,user,supplied,code,runnable,code,callable,but,rather,to,the,actual,execution,callback,which,may,be,a,wrapper,around,the,user,supplied,task,p,the,primary,use,case,is,to,set,some,execution,context,around,the,task,s,invocation,or,to,provide,some,monitoring,statistics,for,task,execution,since,4,3;public,void,set,task,decorator,task,decorator,task,decorator,this,task,decorator,task,decorator
WorkManagerTaskExecutor -> public void setTaskDecorator(TaskDecorator taskDecorator);1476521730;Specify a custom {@link TaskDecorator} to be applied to any {@link Runnable}_about to be executed._<p>Note that such a decorator is not necessarily being applied to the_user-supplied {@code Runnable}/{@code Callable} but rather to the actual_execution callback (which may be a wrapper around the user-supplied task)._<p>The primary use case is to set some execution context around the task's_invocation, or to provide some monitoring/statistics for task execution._@since 4.3;public void setTaskDecorator(TaskDecorator taskDecorator) {_		this.taskDecorator = taskDecorator__	};specify,a,custom,link,task,decorator,to,be,applied,to,any,link,runnable,about,to,be,executed,p,note,that,such,a,decorator,is,not,necessarily,being,applied,to,the,user,supplied,code,runnable,code,callable,but,rather,to,the,actual,execution,callback,which,may,be,a,wrapper,around,the,user,supplied,task,p,the,primary,use,case,is,to,set,some,execution,context,around,the,task,s,invocation,or,to,provide,some,monitoring,statistics,for,task,execution,since,4,3;public,void,set,task,decorator,task,decorator,task,decorator,this,task,decorator,task,decorator
WorkManagerTaskExecutor -> public void setTaskDecorator(TaskDecorator taskDecorator);1495868221;Specify a custom {@link TaskDecorator} to be applied to any {@link Runnable}_about to be executed._<p>Note that such a decorator is not necessarily being applied to the_user-supplied {@code Runnable}/{@code Callable} but rather to the actual_execution callback (which may be a wrapper around the user-supplied task)._<p>The primary use case is to set some execution context around the task's_invocation, or to provide some monitoring/statistics for task execution._@since 4.3;public void setTaskDecorator(TaskDecorator taskDecorator) {_		this.taskDecorator = taskDecorator__	};specify,a,custom,link,task,decorator,to,be,applied,to,any,link,runnable,about,to,be,executed,p,note,that,such,a,decorator,is,not,necessarily,being,applied,to,the,user,supplied,code,runnable,code,callable,but,rather,to,the,actual,execution,callback,which,may,be,a,wrapper,around,the,user,supplied,task,p,the,primary,use,case,is,to,set,some,execution,context,around,the,task,s,invocation,or,to,provide,some,monitoring,statistics,for,task,execution,since,4,3;public,void,set,task,decorator,task,decorator,task,decorator,this,task,decorator,task,decorator
WorkManagerTaskExecutor -> public void setTaskDecorator(TaskDecorator taskDecorator);1498780456;Specify a custom {@link TaskDecorator} to be applied to any {@link Runnable}_about to be executed._<p>Note that such a decorator is not necessarily being applied to the_user-supplied {@code Runnable}/{@code Callable} but rather to the actual_execution callback (which may be a wrapper around the user-supplied task)._<p>The primary use case is to set some execution context around the task's_invocation, or to provide some monitoring/statistics for task execution._@since 4.3;public void setTaskDecorator(TaskDecorator taskDecorator) {_		this.taskDecorator = taskDecorator__	};specify,a,custom,link,task,decorator,to,be,applied,to,any,link,runnable,about,to,be,executed,p,note,that,such,a,decorator,is,not,necessarily,being,applied,to,the,user,supplied,code,runnable,code,callable,but,rather,to,the,actual,execution,callback,which,may,be,a,wrapper,around,the,user,supplied,task,p,the,primary,use,case,is,to,set,some,execution,context,around,the,task,s,invocation,or,to,provide,some,monitoring,statistics,for,task,execution,since,4,3;public,void,set,task,decorator,task,decorator,task,decorator,this,task,decorator,task,decorator
WorkManagerTaskExecutor -> public void setTaskDecorator(TaskDecorator taskDecorator);1533213413;Specify a custom {@link TaskDecorator} to be applied to any {@link Runnable}_about to be executed._<p>Note that such a decorator is not necessarily being applied to the_user-supplied {@code Runnable}/{@code Callable} but rather to the actual_execution callback (which may be a wrapper around the user-supplied task)._<p>The primary use case is to set some execution context around the task's_invocation, or to provide some monitoring/statistics for task execution._@since 4.3;public void setTaskDecorator(TaskDecorator taskDecorator) {_		this.taskDecorator = taskDecorator__	};specify,a,custom,link,task,decorator,to,be,applied,to,any,link,runnable,about,to,be,executed,p,note,that,such,a,decorator,is,not,necessarily,being,applied,to,the,user,supplied,code,runnable,code,callable,but,rather,to,the,actual,execution,callback,which,may,be,a,wrapper,around,the,user,supplied,task,p,the,primary,use,case,is,to,set,some,execution,context,around,the,task,s,invocation,or,to,provide,some,monitoring,statistics,for,task,execution,since,4,3;public,void,set,task,decorator,task,decorator,task,decorator,this,task,decorator,task,decorator
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor();1328020251;Create a new WorkManagerTaskExecutor, expecting bean-style configuration._@see #setWorkManager;public WorkManagerTaskExecutor() {_	};create,a,new,work,manager,task,executor,expecting,bean,style,configuration,see,set,work,manager;public,work,manager,task,executor
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor();1353874548;Create a new WorkManagerTaskExecutor, expecting bean-style configuration._@see #setWorkManager;public WorkManagerTaskExecutor() {_	};create,a,new,work,manager,task,executor,expecting,bean,style,configuration,see,set,work,manager;public,work,manager,task,executor
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor();1356735495;Create a new WorkManagerTaskExecutor, expecting bean-style configuration._@see #setWorkManager;public WorkManagerTaskExecutor() {_	};create,a,new,work,manager,task,executor,expecting,bean,style,configuration,see,set,work,manager;public,work,manager,task,executor
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor();1357119239;Create a new WorkManagerTaskExecutor, expecting bean-style configuration._@see #setWorkManager;public WorkManagerTaskExecutor() {_	};create,a,new,work,manager,task,executor,expecting,bean,style,configuration,see,set,work,manager;public,work,manager,task,executor
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor();1368482696;Create a new WorkManagerTaskExecutor, expecting bean-style configuration._@see #setWorkManager;public WorkManagerTaskExecutor() {_	};create,a,new,work,manager,task,executor,expecting,bean,style,configuration,see,set,work,manager;public,work,manager,task,executor
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor();1388782627;Create a new WorkManagerTaskExecutor, expecting bean-style configuration._@see #setWorkManager;public WorkManagerTaskExecutor() {_	};create,a,new,work,manager,task,executor,expecting,bean,style,configuration,see,set,work,manager;public,work,manager,task,executor
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor();1455724682;Create a new WorkManagerTaskExecutor, expecting bean-style configuration._@see #setWorkManager;public WorkManagerTaskExecutor() {_	};create,a,new,work,manager,task,executor,expecting,bean,style,configuration,see,set,work,manager;public,work,manager,task,executor
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor();1467730834;Create a new WorkManagerTaskExecutor, expecting bean-style configuration._@see #setWorkManager;public WorkManagerTaskExecutor() {_	};create,a,new,work,manager,task,executor,expecting,bean,style,configuration,see,set,work,manager;public,work,manager,task,executor
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor();1467749899;Create a new WorkManagerTaskExecutor, expecting bean-style configuration._@see #setWorkManager;public WorkManagerTaskExecutor() {_	};create,a,new,work,manager,task,executor,expecting,bean,style,configuration,see,set,work,manager;public,work,manager,task,executor
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor();1468613531;Create a new WorkManagerTaskExecutor, expecting bean-style configuration._@see #setWorkManager;public WorkManagerTaskExecutor() {_	};create,a,new,work,manager,task,executor,expecting,bean,style,configuration,see,set,work,manager;public,work,manager,task,executor
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor();1476521730;Create a new WorkManagerTaskExecutor, expecting bean-style configuration._@see #setWorkManager;public WorkManagerTaskExecutor() {_	};create,a,new,work,manager,task,executor,expecting,bean,style,configuration,see,set,work,manager;public,work,manager,task,executor
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor();1495868221;Create a new WorkManagerTaskExecutor, expecting bean-style configuration._@see #setWorkManager;public WorkManagerTaskExecutor() {_	};create,a,new,work,manager,task,executor,expecting,bean,style,configuration,see,set,work,manager;public,work,manager,task,executor
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor();1498780456;Create a new WorkManagerTaskExecutor, expecting bean-style configuration._@see #setWorkManager;public WorkManagerTaskExecutor() {_	};create,a,new,work,manager,task,executor,expecting,bean,style,configuration,see,set,work,manager;public,work,manager,task,executor
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor();1533213413;Create a new WorkManagerTaskExecutor, expecting bean-style configuration._@see #setWorkManager;public WorkManagerTaskExecutor() {_	};create,a,new,work,manager,task,executor,expecting,bean,style,configuration,see,set,work,manager;public,work,manager,task,executor
WorkManagerTaskExecutor -> public void setBlockUntilCompleted(boolean blockUntilCompleted);1328020251;Set whether to let {@link #execute} block until the work_has been completed._<p>Uses the JCA <code>doWork</code> operation underneath,_instead of the default <code>scheduleWork</code>._@see javax.resource.spi.work.WorkManager#doWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilCompleted(boolean blockUntilCompleted) {_		this.blockUntilCompleted = blockUntilCompleted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,completed,p,uses,the,jca,code,do,work,code,operation,underneath,instead,of,the,default,code,schedule,work,code,see,javax,resource,spi,work,work,manager,do,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,completed,boolean,block,until,completed,this,block,until,completed,block,until,completed
WorkManagerTaskExecutor -> public void setBlockUntilCompleted(boolean blockUntilCompleted);1353874548;Set whether to let {@link #execute} block until the work_has been completed._<p>Uses the JCA <code>doWork</code> operation underneath,_instead of the default <code>scheduleWork</code>._@see javax.resource.spi.work.WorkManager#doWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilCompleted(boolean blockUntilCompleted) {_		this.blockUntilCompleted = blockUntilCompleted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,completed,p,uses,the,jca,code,do,work,code,operation,underneath,instead,of,the,default,code,schedule,work,code,see,javax,resource,spi,work,work,manager,do,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,completed,boolean,block,until,completed,this,block,until,completed,block,until,completed
WorkManagerTaskExecutor -> public void setBlockUntilCompleted(boolean blockUntilCompleted);1356735495;Set whether to let {@link #execute} block until the work_has been completed._<p>Uses the JCA {@code doWork} operation underneath,_instead of the default {@code scheduleWork}._@see javax.resource.spi.work.WorkManager#doWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilCompleted(boolean blockUntilCompleted) {_		this.blockUntilCompleted = blockUntilCompleted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,completed,p,uses,the,jca,code,do,work,operation,underneath,instead,of,the,default,code,schedule,work,see,javax,resource,spi,work,work,manager,do,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,completed,boolean,block,until,completed,this,block,until,completed,block,until,completed
WorkManagerTaskExecutor -> public void setBlockUntilCompleted(boolean blockUntilCompleted);1357119239;Set whether to let {@link #execute} block until the work_has been completed._<p>Uses the JCA {@code doWork} operation underneath,_instead of the default {@code scheduleWork}._@see javax.resource.spi.work.WorkManager#doWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilCompleted(boolean blockUntilCompleted) {_		this.blockUntilCompleted = blockUntilCompleted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,completed,p,uses,the,jca,code,do,work,operation,underneath,instead,of,the,default,code,schedule,work,see,javax,resource,spi,work,work,manager,do,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,completed,boolean,block,until,completed,this,block,until,completed,block,until,completed
WorkManagerTaskExecutor -> public void setBlockUntilCompleted(boolean blockUntilCompleted);1368482696;Set whether to let {@link #execute} block until the work_has been completed._<p>Uses the JCA {@code doWork} operation underneath,_instead of the default {@code scheduleWork}._@see javax.resource.spi.work.WorkManager#doWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilCompleted(boolean blockUntilCompleted) {_		this.blockUntilCompleted = blockUntilCompleted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,completed,p,uses,the,jca,code,do,work,operation,underneath,instead,of,the,default,code,schedule,work,see,javax,resource,spi,work,work,manager,do,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,completed,boolean,block,until,completed,this,block,until,completed,block,until,completed
WorkManagerTaskExecutor -> public void setBlockUntilCompleted(boolean blockUntilCompleted);1388782627;Set whether to let {@link #execute} block until the work_has been completed._<p>Uses the JCA {@code doWork} operation underneath,_instead of the default {@code scheduleWork}._@see javax.resource.spi.work.WorkManager#doWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilCompleted(boolean blockUntilCompleted) {_		this.blockUntilCompleted = blockUntilCompleted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,completed,p,uses,the,jca,code,do,work,operation,underneath,instead,of,the,default,code,schedule,work,see,javax,resource,spi,work,work,manager,do,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,completed,boolean,block,until,completed,this,block,until,completed,block,until,completed
WorkManagerTaskExecutor -> public void setBlockUntilCompleted(boolean blockUntilCompleted);1455724682;Set whether to let {@link #execute} block until the work_has been completed._<p>Uses the JCA {@code doWork} operation underneath,_instead of the default {@code scheduleWork}._@see javax.resource.spi.work.WorkManager#doWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilCompleted(boolean blockUntilCompleted) {_		this.blockUntilCompleted = blockUntilCompleted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,completed,p,uses,the,jca,code,do,work,operation,underneath,instead,of,the,default,code,schedule,work,see,javax,resource,spi,work,work,manager,do,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,completed,boolean,block,until,completed,this,block,until,completed,block,until,completed
WorkManagerTaskExecutor -> public void setBlockUntilCompleted(boolean blockUntilCompleted);1467730834;Set whether to let {@link #execute} block until the work_has been completed._<p>Uses the JCA {@code doWork} operation underneath,_instead of the default {@code scheduleWork}._@see javax.resource.spi.work.WorkManager#doWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilCompleted(boolean blockUntilCompleted) {_		this.blockUntilCompleted = blockUntilCompleted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,completed,p,uses,the,jca,code,do,work,operation,underneath,instead,of,the,default,code,schedule,work,see,javax,resource,spi,work,work,manager,do,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,completed,boolean,block,until,completed,this,block,until,completed,block,until,completed
WorkManagerTaskExecutor -> public void setBlockUntilCompleted(boolean blockUntilCompleted);1467749899;Set whether to let {@link #execute} block until the work_has been completed._<p>Uses the JCA {@code doWork} operation underneath,_instead of the default {@code scheduleWork}._@see javax.resource.spi.work.WorkManager#doWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilCompleted(boolean blockUntilCompleted) {_		this.blockUntilCompleted = blockUntilCompleted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,completed,p,uses,the,jca,code,do,work,operation,underneath,instead,of,the,default,code,schedule,work,see,javax,resource,spi,work,work,manager,do,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,completed,boolean,block,until,completed,this,block,until,completed,block,until,completed
WorkManagerTaskExecutor -> public void setBlockUntilCompleted(boolean blockUntilCompleted);1468613531;Set whether to let {@link #execute} block until the work_has been completed._<p>Uses the JCA {@code doWork} operation underneath,_instead of the default {@code scheduleWork}._@see javax.resource.spi.work.WorkManager#doWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilCompleted(boolean blockUntilCompleted) {_		this.blockUntilCompleted = blockUntilCompleted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,completed,p,uses,the,jca,code,do,work,operation,underneath,instead,of,the,default,code,schedule,work,see,javax,resource,spi,work,work,manager,do,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,completed,boolean,block,until,completed,this,block,until,completed,block,until,completed
WorkManagerTaskExecutor -> public void setBlockUntilCompleted(boolean blockUntilCompleted);1476521730;Set whether to let {@link #execute} block until the work_has been completed._<p>Uses the JCA {@code doWork} operation underneath,_instead of the default {@code scheduleWork}._@see javax.resource.spi.work.WorkManager#doWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilCompleted(boolean blockUntilCompleted) {_		this.blockUntilCompleted = blockUntilCompleted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,completed,p,uses,the,jca,code,do,work,operation,underneath,instead,of,the,default,code,schedule,work,see,javax,resource,spi,work,work,manager,do,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,completed,boolean,block,until,completed,this,block,until,completed,block,until,completed
WorkManagerTaskExecutor -> public void setBlockUntilCompleted(boolean blockUntilCompleted);1495868221;Set whether to let {@link #execute} block until the work_has been completed._<p>Uses the JCA {@code doWork} operation underneath,_instead of the default {@code scheduleWork}._@see javax.resource.spi.work.WorkManager#doWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilCompleted(boolean blockUntilCompleted) {_		this.blockUntilCompleted = blockUntilCompleted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,completed,p,uses,the,jca,code,do,work,operation,underneath,instead,of,the,default,code,schedule,work,see,javax,resource,spi,work,work,manager,do,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,completed,boolean,block,until,completed,this,block,until,completed,block,until,completed
WorkManagerTaskExecutor -> public void setBlockUntilCompleted(boolean blockUntilCompleted);1498780456;Set whether to let {@link #execute} block until the work_has been completed._<p>Uses the JCA {@code doWork} operation underneath,_instead of the default {@code scheduleWork}._@see javax.resource.spi.work.WorkManager#doWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilCompleted(boolean blockUntilCompleted) {_		this.blockUntilCompleted = blockUntilCompleted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,completed,p,uses,the,jca,code,do,work,operation,underneath,instead,of,the,default,code,schedule,work,see,javax,resource,spi,work,work,manager,do,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,completed,boolean,block,until,completed,this,block,until,completed,block,until,completed
WorkManagerTaskExecutor -> public void setBlockUntilCompleted(boolean blockUntilCompleted);1533213413;Set whether to let {@link #execute} block until the work_has been completed._<p>Uses the JCA {@code doWork} operation underneath,_instead of the default {@code scheduleWork}._@see javax.resource.spi.work.WorkManager#doWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilCompleted(boolean blockUntilCompleted) {_		this.blockUntilCompleted = blockUntilCompleted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,completed,p,uses,the,jca,code,do,work,operation,underneath,instead,of,the,default,code,schedule,work,see,javax,resource,spi,work,work,manager,do,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,completed,boolean,block,until,completed,this,block,until,completed,block,until,completed
WorkManagerTaskExecutor -> public void setBlockUntilStarted(boolean blockUntilStarted);1328020251;Set whether to let {@link #execute} block until the work_has been actually started._<p>Uses the JCA <code>startWork</code> operation underneath,_instead of the default <code>scheduleWork</code>._@see javax.resource.spi.work.WorkManager#startWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilStarted(boolean blockUntilStarted) {_		this.blockUntilStarted = blockUntilStarted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,actually,started,p,uses,the,jca,code,start,work,code,operation,underneath,instead,of,the,default,code,schedule,work,code,see,javax,resource,spi,work,work,manager,start,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,started,boolean,block,until,started,this,block,until,started,block,until,started
WorkManagerTaskExecutor -> public void setBlockUntilStarted(boolean blockUntilStarted);1353874548;Set whether to let {@link #execute} block until the work_has been actually started._<p>Uses the JCA <code>startWork</code> operation underneath,_instead of the default <code>scheduleWork</code>._@see javax.resource.spi.work.WorkManager#startWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilStarted(boolean blockUntilStarted) {_		this.blockUntilStarted = blockUntilStarted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,actually,started,p,uses,the,jca,code,start,work,code,operation,underneath,instead,of,the,default,code,schedule,work,code,see,javax,resource,spi,work,work,manager,start,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,started,boolean,block,until,started,this,block,until,started,block,until,started
WorkManagerTaskExecutor -> public void setBlockUntilStarted(boolean blockUntilStarted);1356735495;Set whether to let {@link #execute} block until the work_has been actually started._<p>Uses the JCA {@code startWork} operation underneath,_instead of the default {@code scheduleWork}._@see javax.resource.spi.work.WorkManager#startWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilStarted(boolean blockUntilStarted) {_		this.blockUntilStarted = blockUntilStarted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,actually,started,p,uses,the,jca,code,start,work,operation,underneath,instead,of,the,default,code,schedule,work,see,javax,resource,spi,work,work,manager,start,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,started,boolean,block,until,started,this,block,until,started,block,until,started
WorkManagerTaskExecutor -> public void setBlockUntilStarted(boolean blockUntilStarted);1357119239;Set whether to let {@link #execute} block until the work_has been actually started._<p>Uses the JCA {@code startWork} operation underneath,_instead of the default {@code scheduleWork}._@see javax.resource.spi.work.WorkManager#startWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilStarted(boolean blockUntilStarted) {_		this.blockUntilStarted = blockUntilStarted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,actually,started,p,uses,the,jca,code,start,work,operation,underneath,instead,of,the,default,code,schedule,work,see,javax,resource,spi,work,work,manager,start,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,started,boolean,block,until,started,this,block,until,started,block,until,started
WorkManagerTaskExecutor -> public void setBlockUntilStarted(boolean blockUntilStarted);1368482696;Set whether to let {@link #execute} block until the work_has been actually started._<p>Uses the JCA {@code startWork} operation underneath,_instead of the default {@code scheduleWork}._@see javax.resource.spi.work.WorkManager#startWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilStarted(boolean blockUntilStarted) {_		this.blockUntilStarted = blockUntilStarted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,actually,started,p,uses,the,jca,code,start,work,operation,underneath,instead,of,the,default,code,schedule,work,see,javax,resource,spi,work,work,manager,start,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,started,boolean,block,until,started,this,block,until,started,block,until,started
WorkManagerTaskExecutor -> public void setBlockUntilStarted(boolean blockUntilStarted);1388782627;Set whether to let {@link #execute} block until the work_has been actually started._<p>Uses the JCA {@code startWork} operation underneath,_instead of the default {@code scheduleWork}._@see javax.resource.spi.work.WorkManager#startWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilStarted(boolean blockUntilStarted) {_		this.blockUntilStarted = blockUntilStarted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,actually,started,p,uses,the,jca,code,start,work,operation,underneath,instead,of,the,default,code,schedule,work,see,javax,resource,spi,work,work,manager,start,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,started,boolean,block,until,started,this,block,until,started,block,until,started
WorkManagerTaskExecutor -> public void setBlockUntilStarted(boolean blockUntilStarted);1455724682;Set whether to let {@link #execute} block until the work_has been actually started._<p>Uses the JCA {@code startWork} operation underneath,_instead of the default {@code scheduleWork}._@see javax.resource.spi.work.WorkManager#startWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilStarted(boolean blockUntilStarted) {_		this.blockUntilStarted = blockUntilStarted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,actually,started,p,uses,the,jca,code,start,work,operation,underneath,instead,of,the,default,code,schedule,work,see,javax,resource,spi,work,work,manager,start,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,started,boolean,block,until,started,this,block,until,started,block,until,started
WorkManagerTaskExecutor -> public void setBlockUntilStarted(boolean blockUntilStarted);1467730834;Set whether to let {@link #execute} block until the work_has been actually started._<p>Uses the JCA {@code startWork} operation underneath,_instead of the default {@code scheduleWork}._@see javax.resource.spi.work.WorkManager#startWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilStarted(boolean blockUntilStarted) {_		this.blockUntilStarted = blockUntilStarted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,actually,started,p,uses,the,jca,code,start,work,operation,underneath,instead,of,the,default,code,schedule,work,see,javax,resource,spi,work,work,manager,start,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,started,boolean,block,until,started,this,block,until,started,block,until,started
WorkManagerTaskExecutor -> public void setBlockUntilStarted(boolean blockUntilStarted);1467749899;Set whether to let {@link #execute} block until the work_has been actually started._<p>Uses the JCA {@code startWork} operation underneath,_instead of the default {@code scheduleWork}._@see javax.resource.spi.work.WorkManager#startWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilStarted(boolean blockUntilStarted) {_		this.blockUntilStarted = blockUntilStarted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,actually,started,p,uses,the,jca,code,start,work,operation,underneath,instead,of,the,default,code,schedule,work,see,javax,resource,spi,work,work,manager,start,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,started,boolean,block,until,started,this,block,until,started,block,until,started
WorkManagerTaskExecutor -> public void setBlockUntilStarted(boolean blockUntilStarted);1468613531;Set whether to let {@link #execute} block until the work_has been actually started._<p>Uses the JCA {@code startWork} operation underneath,_instead of the default {@code scheduleWork}._@see javax.resource.spi.work.WorkManager#startWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilStarted(boolean blockUntilStarted) {_		this.blockUntilStarted = blockUntilStarted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,actually,started,p,uses,the,jca,code,start,work,operation,underneath,instead,of,the,default,code,schedule,work,see,javax,resource,spi,work,work,manager,start,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,started,boolean,block,until,started,this,block,until,started,block,until,started
WorkManagerTaskExecutor -> public void setBlockUntilStarted(boolean blockUntilStarted);1476521730;Set whether to let {@link #execute} block until the work_has been actually started._<p>Uses the JCA {@code startWork} operation underneath,_instead of the default {@code scheduleWork}._@see javax.resource.spi.work.WorkManager#startWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilStarted(boolean blockUntilStarted) {_		this.blockUntilStarted = blockUntilStarted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,actually,started,p,uses,the,jca,code,start,work,operation,underneath,instead,of,the,default,code,schedule,work,see,javax,resource,spi,work,work,manager,start,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,started,boolean,block,until,started,this,block,until,started,block,until,started
WorkManagerTaskExecutor -> public void setBlockUntilStarted(boolean blockUntilStarted);1495868221;Set whether to let {@link #execute} block until the work_has been actually started._<p>Uses the JCA {@code startWork} operation underneath,_instead of the default {@code scheduleWork}._@see javax.resource.spi.work.WorkManager#startWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilStarted(boolean blockUntilStarted) {_		this.blockUntilStarted = blockUntilStarted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,actually,started,p,uses,the,jca,code,start,work,operation,underneath,instead,of,the,default,code,schedule,work,see,javax,resource,spi,work,work,manager,start,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,started,boolean,block,until,started,this,block,until,started,block,until,started
WorkManagerTaskExecutor -> public void setBlockUntilStarted(boolean blockUntilStarted);1498780456;Set whether to let {@link #execute} block until the work_has been actually started._<p>Uses the JCA {@code startWork} operation underneath,_instead of the default {@code scheduleWork}._@see javax.resource.spi.work.WorkManager#startWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilStarted(boolean blockUntilStarted) {_		this.blockUntilStarted = blockUntilStarted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,actually,started,p,uses,the,jca,code,start,work,operation,underneath,instead,of,the,default,code,schedule,work,see,javax,resource,spi,work,work,manager,start,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,started,boolean,block,until,started,this,block,until,started,block,until,started
WorkManagerTaskExecutor -> public void setBlockUntilStarted(boolean blockUntilStarted);1533213413;Set whether to let {@link #execute} block until the work_has been actually started._<p>Uses the JCA {@code startWork} operation underneath,_instead of the default {@code scheduleWork}._@see javax.resource.spi.work.WorkManager#startWork_@see javax.resource.spi.work.WorkManager#scheduleWork;public void setBlockUntilStarted(boolean blockUntilStarted) {_		this.blockUntilStarted = blockUntilStarted__	};set,whether,to,let,link,execute,block,until,the,work,has,been,actually,started,p,uses,the,jca,code,start,work,operation,underneath,instead,of,the,default,code,schedule,work,see,javax,resource,spi,work,work,manager,start,work,see,javax,resource,spi,work,work,manager,schedule,work;public,void,set,block,until,started,boolean,block,until,started,this,block,until,started,block,until,started
WorkManagerTaskExecutor -> public void setWorkListener(@Nullable WorkListener workListener);1495868221;Specify a JCA WorkListener to apply, if any._<p>This shared WorkListener instance will be passed on to the_WorkManager by all {@link #execute} calls on this TaskExecutor.;public void setWorkListener(@Nullable WorkListener workListener) {_		this.workListener = workListener__	};specify,a,jca,work,listener,to,apply,if,any,p,this,shared,work,listener,instance,will,be,passed,on,to,the,work,manager,by,all,link,execute,calls,on,this,task,executor;public,void,set,work,listener,nullable,work,listener,work,listener,this,work,listener,work,listener
WorkManagerTaskExecutor -> public void setWorkListener(@Nullable WorkListener workListener);1498780456;Specify a JCA WorkListener to apply, if any._<p>This shared WorkListener instance will be passed on to the_WorkManager by all {@link #execute} calls on this TaskExecutor.;public void setWorkListener(@Nullable WorkListener workListener) {_		this.workListener = workListener__	};specify,a,jca,work,listener,to,apply,if,any,p,this,shared,work,listener,instance,will,be,passed,on,to,the,work,manager,by,all,link,execute,calls,on,this,task,executor;public,void,set,work,listener,nullable,work,listener,work,listener,this,work,listener,work,listener
WorkManagerTaskExecutor -> public void setWorkListener(@Nullable WorkListener workListener);1533213413;Specify a JCA WorkListener to apply, if any._<p>This shared WorkListener instance will be passed on to the_WorkManager by all {@link #execute} calls on this TaskExecutor.;public void setWorkListener(@Nullable WorkListener workListener) {_		this.workListener = workListener__	};specify,a,jca,work,listener,to,apply,if,any,p,this,shared,work,listener,instance,will,be,passed,on,to,the,work,manager,by,all,link,execute,calls,on,this,task,executor;public,void,set,work,listener,nullable,work,listener,work,listener,this,work,listener,work,listener
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor(WorkManager workManager);1328020251;Create a new WorkManagerTaskExecutor for the given WorkManager._@param workManager the JCA WorkManager to delegate to;public WorkManagerTaskExecutor(WorkManager workManager) {_		setWorkManager(workManager)__	};create,a,new,work,manager,task,executor,for,the,given,work,manager,param,work,manager,the,jca,work,manager,to,delegate,to;public,work,manager,task,executor,work,manager,work,manager,set,work,manager,work,manager
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor(WorkManager workManager);1353874548;Create a new WorkManagerTaskExecutor for the given WorkManager._@param workManager the JCA WorkManager to delegate to;public WorkManagerTaskExecutor(WorkManager workManager) {_		setWorkManager(workManager)__	};create,a,new,work,manager,task,executor,for,the,given,work,manager,param,work,manager,the,jca,work,manager,to,delegate,to;public,work,manager,task,executor,work,manager,work,manager,set,work,manager,work,manager
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor(WorkManager workManager);1356735495;Create a new WorkManagerTaskExecutor for the given WorkManager._@param workManager the JCA WorkManager to delegate to;public WorkManagerTaskExecutor(WorkManager workManager) {_		setWorkManager(workManager)__	};create,a,new,work,manager,task,executor,for,the,given,work,manager,param,work,manager,the,jca,work,manager,to,delegate,to;public,work,manager,task,executor,work,manager,work,manager,set,work,manager,work,manager
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor(WorkManager workManager);1357119239;Create a new WorkManagerTaskExecutor for the given WorkManager._@param workManager the JCA WorkManager to delegate to;public WorkManagerTaskExecutor(WorkManager workManager) {_		setWorkManager(workManager)__	};create,a,new,work,manager,task,executor,for,the,given,work,manager,param,work,manager,the,jca,work,manager,to,delegate,to;public,work,manager,task,executor,work,manager,work,manager,set,work,manager,work,manager
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor(WorkManager workManager);1368482696;Create a new WorkManagerTaskExecutor for the given WorkManager._@param workManager the JCA WorkManager to delegate to;public WorkManagerTaskExecutor(WorkManager workManager) {_		setWorkManager(workManager)__	};create,a,new,work,manager,task,executor,for,the,given,work,manager,param,work,manager,the,jca,work,manager,to,delegate,to;public,work,manager,task,executor,work,manager,work,manager,set,work,manager,work,manager
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor(WorkManager workManager);1388782627;Create a new WorkManagerTaskExecutor for the given WorkManager._@param workManager the JCA WorkManager to delegate to;public WorkManagerTaskExecutor(WorkManager workManager) {_		setWorkManager(workManager)__	};create,a,new,work,manager,task,executor,for,the,given,work,manager,param,work,manager,the,jca,work,manager,to,delegate,to;public,work,manager,task,executor,work,manager,work,manager,set,work,manager,work,manager
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor(WorkManager workManager);1455724682;Create a new WorkManagerTaskExecutor for the given WorkManager._@param workManager the JCA WorkManager to delegate to;public WorkManagerTaskExecutor(WorkManager workManager) {_		setWorkManager(workManager)__	};create,a,new,work,manager,task,executor,for,the,given,work,manager,param,work,manager,the,jca,work,manager,to,delegate,to;public,work,manager,task,executor,work,manager,work,manager,set,work,manager,work,manager
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor(WorkManager workManager);1467730834;Create a new WorkManagerTaskExecutor for the given WorkManager._@param workManager the JCA WorkManager to delegate to;public WorkManagerTaskExecutor(WorkManager workManager) {_		setWorkManager(workManager)__	};create,a,new,work,manager,task,executor,for,the,given,work,manager,param,work,manager,the,jca,work,manager,to,delegate,to;public,work,manager,task,executor,work,manager,work,manager,set,work,manager,work,manager
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor(WorkManager workManager);1467749899;Create a new WorkManagerTaskExecutor for the given WorkManager._@param workManager the JCA WorkManager to delegate to;public WorkManagerTaskExecutor(WorkManager workManager) {_		setWorkManager(workManager)__	};create,a,new,work,manager,task,executor,for,the,given,work,manager,param,work,manager,the,jca,work,manager,to,delegate,to;public,work,manager,task,executor,work,manager,work,manager,set,work,manager,work,manager
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor(WorkManager workManager);1468613531;Create a new WorkManagerTaskExecutor for the given WorkManager._@param workManager the JCA WorkManager to delegate to;public WorkManagerTaskExecutor(WorkManager workManager) {_		setWorkManager(workManager)__	};create,a,new,work,manager,task,executor,for,the,given,work,manager,param,work,manager,the,jca,work,manager,to,delegate,to;public,work,manager,task,executor,work,manager,work,manager,set,work,manager,work,manager
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor(WorkManager workManager);1476521730;Create a new WorkManagerTaskExecutor for the given WorkManager._@param workManager the JCA WorkManager to delegate to;public WorkManagerTaskExecutor(WorkManager workManager) {_		setWorkManager(workManager)__	};create,a,new,work,manager,task,executor,for,the,given,work,manager,param,work,manager,the,jca,work,manager,to,delegate,to;public,work,manager,task,executor,work,manager,work,manager,set,work,manager,work,manager
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor(WorkManager workManager);1495868221;Create a new WorkManagerTaskExecutor for the given WorkManager._@param workManager the JCA WorkManager to delegate to;public WorkManagerTaskExecutor(WorkManager workManager) {_		setWorkManager(workManager)__	};create,a,new,work,manager,task,executor,for,the,given,work,manager,param,work,manager,the,jca,work,manager,to,delegate,to;public,work,manager,task,executor,work,manager,work,manager,set,work,manager,work,manager
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor(WorkManager workManager);1498780456;Create a new WorkManagerTaskExecutor for the given WorkManager._@param workManager the JCA WorkManager to delegate to;public WorkManagerTaskExecutor(WorkManager workManager) {_		setWorkManager(workManager)__	};create,a,new,work,manager,task,executor,for,the,given,work,manager,param,work,manager,the,jca,work,manager,to,delegate,to;public,work,manager,task,executor,work,manager,work,manager,set,work,manager,work,manager
WorkManagerTaskExecutor -> public WorkManagerTaskExecutor(WorkManager workManager);1533213413;Create a new WorkManagerTaskExecutor for the given WorkManager._@param workManager the JCA WorkManager to delegate to;public WorkManagerTaskExecutor(WorkManager workManager) {_		setWorkManager(workManager)__	};create,a,new,work,manager,task,executor,for,the,given,work,manager,param,work,manager,the,jca,work,manager,to,delegate,to;public,work,manager,task,executor,work,manager,work,manager,set,work,manager,work,manager
WorkManagerTaskExecutor -> @Override 	public void setBootstrapContext(BootstrapContext bootstrapContext);1356735495;Specify the JCA BootstrapContext that contains the_WorkManager to delegate to.;@Override_	public void setBootstrapContext(BootstrapContext bootstrapContext) {_		Assert.notNull(bootstrapContext, "BootstrapContext must not be null")__		this.workManager = bootstrapContext.getWorkManager()__	};specify,the,jca,bootstrap,context,that,contains,the,work,manager,to,delegate,to;override,public,void,set,bootstrap,context,bootstrap,context,bootstrap,context,assert,not,null,bootstrap,context,bootstrap,context,must,not,be,null,this,work,manager,bootstrap,context,get,work,manager
WorkManagerTaskExecutor -> @Override 	public void setBootstrapContext(BootstrapContext bootstrapContext);1368482696;Specify the JCA BootstrapContext that contains the_WorkManager to delegate to.;@Override_	public void setBootstrapContext(BootstrapContext bootstrapContext) {_		Assert.notNull(bootstrapContext, "BootstrapContext must not be null")__		this.workManager = bootstrapContext.getWorkManager()__	};specify,the,jca,bootstrap,context,that,contains,the,work,manager,to,delegate,to;override,public,void,set,bootstrap,context,bootstrap,context,bootstrap,context,assert,not,null,bootstrap,context,bootstrap,context,must,not,be,null,this,work,manager,bootstrap,context,get,work,manager
WorkManagerTaskExecutor -> @Override 	public void setBootstrapContext(BootstrapContext bootstrapContext);1388782627;Specify the JCA BootstrapContext that contains the_WorkManager to delegate to.;@Override_	public void setBootstrapContext(BootstrapContext bootstrapContext) {_		Assert.notNull(bootstrapContext, "BootstrapContext must not be null")__		this.workManager = bootstrapContext.getWorkManager()__	};specify,the,jca,bootstrap,context,that,contains,the,work,manager,to,delegate,to;override,public,void,set,bootstrap,context,bootstrap,context,bootstrap,context,assert,not,null,bootstrap,context,bootstrap,context,must,not,be,null,this,work,manager,bootstrap,context,get,work,manager
WorkManagerTaskExecutor -> @Override 	public void setBootstrapContext(BootstrapContext bootstrapContext);1455724682;Specify the JCA BootstrapContext that contains the_WorkManager to delegate to.;@Override_	public void setBootstrapContext(BootstrapContext bootstrapContext) {_		Assert.notNull(bootstrapContext, "BootstrapContext must not be null")__		this.workManager = bootstrapContext.getWorkManager()__	};specify,the,jca,bootstrap,context,that,contains,the,work,manager,to,delegate,to;override,public,void,set,bootstrap,context,bootstrap,context,bootstrap,context,assert,not,null,bootstrap,context,bootstrap,context,must,not,be,null,this,work,manager,bootstrap,context,get,work,manager
WorkManagerTaskExecutor -> @Override 	public void setBootstrapContext(BootstrapContext bootstrapContext);1467730834;Specify the JCA BootstrapContext that contains the_WorkManager to delegate to.;@Override_	public void setBootstrapContext(BootstrapContext bootstrapContext) {_		Assert.notNull(bootstrapContext, "BootstrapContext must not be null")__		this.workManager = bootstrapContext.getWorkManager()__	};specify,the,jca,bootstrap,context,that,contains,the,work,manager,to,delegate,to;override,public,void,set,bootstrap,context,bootstrap,context,bootstrap,context,assert,not,null,bootstrap,context,bootstrap,context,must,not,be,null,this,work,manager,bootstrap,context,get,work,manager
WorkManagerTaskExecutor -> @Override 	public void setBootstrapContext(BootstrapContext bootstrapContext);1467749899;Specify the JCA BootstrapContext that contains the_WorkManager to delegate to.;@Override_	public void setBootstrapContext(BootstrapContext bootstrapContext) {_		Assert.notNull(bootstrapContext, "BootstrapContext must not be null")__		this.workManager = bootstrapContext.getWorkManager()__	};specify,the,jca,bootstrap,context,that,contains,the,work,manager,to,delegate,to;override,public,void,set,bootstrap,context,bootstrap,context,bootstrap,context,assert,not,null,bootstrap,context,bootstrap,context,must,not,be,null,this,work,manager,bootstrap,context,get,work,manager
WorkManagerTaskExecutor -> @Override 	public void setBootstrapContext(BootstrapContext bootstrapContext);1468613531;Specify the JCA BootstrapContext that contains the_WorkManager to delegate to.;@Override_	public void setBootstrapContext(BootstrapContext bootstrapContext) {_		Assert.notNull(bootstrapContext, "BootstrapContext must not be null")__		this.workManager = bootstrapContext.getWorkManager()__	};specify,the,jca,bootstrap,context,that,contains,the,work,manager,to,delegate,to;override,public,void,set,bootstrap,context,bootstrap,context,bootstrap,context,assert,not,null,bootstrap,context,bootstrap,context,must,not,be,null,this,work,manager,bootstrap,context,get,work,manager
WorkManagerTaskExecutor -> @Override 	public void setBootstrapContext(BootstrapContext bootstrapContext);1476521730;Specify the JCA BootstrapContext that contains the_WorkManager to delegate to.;@Override_	public void setBootstrapContext(BootstrapContext bootstrapContext) {_		Assert.notNull(bootstrapContext, "BootstrapContext must not be null")__		this.workManager = bootstrapContext.getWorkManager()__	};specify,the,jca,bootstrap,context,that,contains,the,work,manager,to,delegate,to;override,public,void,set,bootstrap,context,bootstrap,context,bootstrap,context,assert,not,null,bootstrap,context,bootstrap,context,must,not,be,null,this,work,manager,bootstrap,context,get,work,manager
WorkManagerTaskExecutor -> @Override 	public void setBootstrapContext(BootstrapContext bootstrapContext);1495868221;Specify the JCA BootstrapContext that contains the_WorkManager to delegate to.;@Override_	public void setBootstrapContext(BootstrapContext bootstrapContext) {_		Assert.notNull(bootstrapContext, "BootstrapContext must not be null")__		this.workManager = bootstrapContext.getWorkManager()__	};specify,the,jca,bootstrap,context,that,contains,the,work,manager,to,delegate,to;override,public,void,set,bootstrap,context,bootstrap,context,bootstrap,context,assert,not,null,bootstrap,context,bootstrap,context,must,not,be,null,this,work,manager,bootstrap,context,get,work,manager
WorkManagerTaskExecutor -> @Override 	public void setBootstrapContext(BootstrapContext bootstrapContext);1498780456;Specify the JCA BootstrapContext that contains the_WorkManager to delegate to.;@Override_	public void setBootstrapContext(BootstrapContext bootstrapContext) {_		Assert.notNull(bootstrapContext, "BootstrapContext must not be null")__		this.workManager = bootstrapContext.getWorkManager()__	};specify,the,jca,bootstrap,context,that,contains,the,work,manager,to,delegate,to;override,public,void,set,bootstrap,context,bootstrap,context,bootstrap,context,assert,not,null,bootstrap,context,bootstrap,context,must,not,be,null,this,work,manager,bootstrap,context,get,work,manager
WorkManagerTaskExecutor -> @Override 	public void setBootstrapContext(BootstrapContext bootstrapContext);1533213413;Specify the JCA BootstrapContext that contains the_WorkManager to delegate to.;@Override_	public void setBootstrapContext(BootstrapContext bootstrapContext) {_		Assert.notNull(bootstrapContext, "BootstrapContext must not be null")__		this.workManager = bootstrapContext.getWorkManager()__	};specify,the,jca,bootstrap,context,that,contains,the,work,manager,to,delegate,to;override,public,void,set,bootstrap,context,bootstrap,context,bootstrap,context,assert,not,null,bootstrap,context,bootstrap,context,must,not,be,null,this,work,manager,bootstrap,context,get,work,manager
