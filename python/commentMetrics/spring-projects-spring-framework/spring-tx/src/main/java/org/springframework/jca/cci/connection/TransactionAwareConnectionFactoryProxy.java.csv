# id;timestamp;commentText;codeText;commentWords;codeWords
TransactionAwareConnectionFactoryProxy -> @Override 	public Connection getConnection() throws ResourceException;1328020251;Delegate to ConnectionFactoryUtils for automatically participating in Spring-managed_transactions. Throws the original ResourceException, if any._@return a transactional Connection if any, a new one else_@see org.springframework.jca.cci.connection.ConnectionFactoryUtils#doGetConnection;@Override_	public Connection getConnection() throws ResourceException {_		Connection con = ConnectionFactoryUtils.doGetConnection(getTargetConnectionFactory())__		return getTransactionAwareConnectionProxy(con, getTargetConnectionFactory())__	};delegate,to,connection,factory,utils,for,automatically,participating,in,spring,managed,transactions,throws,the,original,resource,exception,if,any,return,a,transactional,connection,if,any,a,new,one,else,see,org,springframework,jca,cci,connection,connection,factory,utils,do,get,connection;override,public,connection,get,connection,throws,resource,exception,connection,con,connection,factory,utils,do,get,connection,get,target,connection,factory,return,get,transaction,aware,connection,proxy,con,get,target,connection,factory
TransactionAwareConnectionFactoryProxy -> @Override 	public Connection getConnection() throws ResourceException;1356735495;Delegate to ConnectionFactoryUtils for automatically participating in Spring-managed_transactions. Throws the original ResourceException, if any._@return a transactional Connection if any, a new one else_@see org.springframework.jca.cci.connection.ConnectionFactoryUtils#doGetConnection;@Override_	public Connection getConnection() throws ResourceException {_		Connection con = ConnectionFactoryUtils.doGetConnection(getTargetConnectionFactory())__		return getTransactionAwareConnectionProxy(con, getTargetConnectionFactory())__	};delegate,to,connection,factory,utils,for,automatically,participating,in,spring,managed,transactions,throws,the,original,resource,exception,if,any,return,a,transactional,connection,if,any,a,new,one,else,see,org,springframework,jca,cci,connection,connection,factory,utils,do,get,connection;override,public,connection,get,connection,throws,resource,exception,connection,con,connection,factory,utils,do,get,connection,get,target,connection,factory,return,get,transaction,aware,connection,proxy,con,get,target,connection,factory
TransactionAwareConnectionFactoryProxy -> @Override 	public Connection getConnection() throws ResourceException;1357119239;Delegate to ConnectionFactoryUtils for automatically participating in Spring-managed_transactions. Throws the original ResourceException, if any._@return a transactional Connection if any, a new one else_@see org.springframework.jca.cci.connection.ConnectionFactoryUtils#doGetConnection;@Override_	public Connection getConnection() throws ResourceException {_		Connection con = ConnectionFactoryUtils.doGetConnection(getTargetConnectionFactory())__		return getTransactionAwareConnectionProxy(con, getTargetConnectionFactory())__	};delegate,to,connection,factory,utils,for,automatically,participating,in,spring,managed,transactions,throws,the,original,resource,exception,if,any,return,a,transactional,connection,if,any,a,new,one,else,see,org,springframework,jca,cci,connection,connection,factory,utils,do,get,connection;override,public,connection,get,connection,throws,resource,exception,connection,con,connection,factory,utils,do,get,connection,get,target,connection,factory,return,get,transaction,aware,connection,proxy,con,get,target,connection,factory
TransactionAwareConnectionFactoryProxy -> @Override 	public Connection getConnection() throws ResourceException;1368482696;Delegate to ConnectionFactoryUtils for automatically participating in Spring-managed_transactions. Throws the original ResourceException, if any._@return a transactional Connection if any, a new one else_@see org.springframework.jca.cci.connection.ConnectionFactoryUtils#doGetConnection;@Override_	public Connection getConnection() throws ResourceException {_		Connection con = ConnectionFactoryUtils.doGetConnection(getTargetConnectionFactory())__		return getTransactionAwareConnectionProxy(con, getTargetConnectionFactory())__	};delegate,to,connection,factory,utils,for,automatically,participating,in,spring,managed,transactions,throws,the,original,resource,exception,if,any,return,a,transactional,connection,if,any,a,new,one,else,see,org,springframework,jca,cci,connection,connection,factory,utils,do,get,connection;override,public,connection,get,connection,throws,resource,exception,connection,con,connection,factory,utils,do,get,connection,get,target,connection,factory,return,get,transaction,aware,connection,proxy,con,get,target,connection,factory
TransactionAwareConnectionFactoryProxy -> @Override 	public Connection getConnection() throws ResourceException;1385412762;Delegate to ConnectionFactoryUtils for automatically participating in Spring-managed_transactions. Throws the original ResourceException, if any._@return a transactional Connection if any, a new one else_@see org.springframework.jca.cci.connection.ConnectionFactoryUtils#doGetConnection;@Override_	public Connection getConnection() throws ResourceException {_		Connection con = ConnectionFactoryUtils.doGetConnection(getTargetConnectionFactory())__		return getTransactionAwareConnectionProxy(con, getTargetConnectionFactory())__	};delegate,to,connection,factory,utils,for,automatically,participating,in,spring,managed,transactions,throws,the,original,resource,exception,if,any,return,a,transactional,connection,if,any,a,new,one,else,see,org,springframework,jca,cci,connection,connection,factory,utils,do,get,connection;override,public,connection,get,connection,throws,resource,exception,connection,con,connection,factory,utils,do,get,connection,get,target,connection,factory,return,get,transaction,aware,connection,proxy,con,get,target,connection,factory
TransactionAwareConnectionFactoryProxy -> @Override 	public Connection getConnection() throws ResourceException;1413848647;Delegate to ConnectionFactoryUtils for automatically participating in Spring-managed_transactions. Throws the original ResourceException, if any._@return a transactional Connection if any, a new one else_@see org.springframework.jca.cci.connection.ConnectionFactoryUtils#doGetConnection;@Override_	public Connection getConnection() throws ResourceException {_		Connection con = ConnectionFactoryUtils.doGetConnection(getTargetConnectionFactory())__		return getTransactionAwareConnectionProxy(con, getTargetConnectionFactory())__	};delegate,to,connection,factory,utils,for,automatically,participating,in,spring,managed,transactions,throws,the,original,resource,exception,if,any,return,a,transactional,connection,if,any,a,new,one,else,see,org,springframework,jca,cci,connection,connection,factory,utils,do,get,connection;override,public,connection,get,connection,throws,resource,exception,connection,con,connection,factory,utils,do,get,connection,get,target,connection,factory,return,get,transaction,aware,connection,proxy,con,get,target,connection,factory
TransactionAwareConnectionFactoryProxy -> @Override 	public Connection getConnection() throws ResourceException;1476521730;Delegate to ConnectionFactoryUtils for automatically participating in Spring-managed_transactions. Throws the original ResourceException, if any._@return a transactional Connection if any, a new one else_@see org.springframework.jca.cci.connection.ConnectionFactoryUtils#doGetConnection;@Override_	public Connection getConnection() throws ResourceException {_		Connection con = ConnectionFactoryUtils.doGetConnection(getTargetConnectionFactory())__		return getTransactionAwareConnectionProxy(con, getTargetConnectionFactory())__	};delegate,to,connection,factory,utils,for,automatically,participating,in,spring,managed,transactions,throws,the,original,resource,exception,if,any,return,a,transactional,connection,if,any,a,new,one,else,see,org,springframework,jca,cci,connection,connection,factory,utils,do,get,connection;override,public,connection,get,connection,throws,resource,exception,connection,con,connection,factory,utils,do,get,connection,get,target,connection,factory,return,get,transaction,aware,connection,proxy,con,get,target,connection,factory
TransactionAwareConnectionFactoryProxy -> @Override 	public Connection getConnection() throws ResourceException;1496837955;Delegate to ConnectionFactoryUtils for automatically participating in Spring-managed_transactions. Throws the original ResourceException, if any._@return a transactional Connection if any, a new one else_@see org.springframework.jca.cci.connection.ConnectionFactoryUtils#doGetConnection;@Override_	public Connection getConnection() throws ResourceException {_		ConnectionFactory targetConnectionFactory = obtainTargetConnectionFactory()__		Connection con = ConnectionFactoryUtils.doGetConnection(targetConnectionFactory)__		return getTransactionAwareConnectionProxy(con, targetConnectionFactory)__	};delegate,to,connection,factory,utils,for,automatically,participating,in,spring,managed,transactions,throws,the,original,resource,exception,if,any,return,a,transactional,connection,if,any,a,new,one,else,see,org,springframework,jca,cci,connection,connection,factory,utils,do,get,connection;override,public,connection,get,connection,throws,resource,exception,connection,factory,target,connection,factory,obtain,target,connection,factory,connection,con,connection,factory,utils,do,get,connection,target,connection,factory,return,get,transaction,aware,connection,proxy,con,target,connection,factory
TransactionAwareConnectionFactoryProxy -> @Override 	public Connection getConnection() throws ResourceException;1530174524;Delegate to ConnectionFactoryUtils for automatically participating in Spring-managed_transactions. Throws the original ResourceException, if any._@return a transactional Connection if any, a new one else_@see org.springframework.jca.cci.connection.ConnectionFactoryUtils#doGetConnection;@Override_	public Connection getConnection() throws ResourceException {_		ConnectionFactory targetConnectionFactory = obtainTargetConnectionFactory()__		Connection con = ConnectionFactoryUtils.doGetConnection(targetConnectionFactory)__		return getTransactionAwareConnectionProxy(con, targetConnectionFactory)__	};delegate,to,connection,factory,utils,for,automatically,participating,in,spring,managed,transactions,throws,the,original,resource,exception,if,any,return,a,transactional,connection,if,any,a,new,one,else,see,org,springframework,jca,cci,connection,connection,factory,utils,do,get,connection;override,public,connection,get,connection,throws,resource,exception,connection,factory,target,connection,factory,obtain,target,connection,factory,connection,con,connection,factory,utils,do,get,connection,target,connection,factory,return,get,transaction,aware,connection,proxy,con,target,connection,factory
TransactionAwareConnectionFactoryProxy -> public TransactionAwareConnectionFactoryProxy(ConnectionFactory targetConnectionFactory);1328020251;Create a new TransactionAwareConnectionFactoryProxy._@param targetConnectionFactory the target ConnectionFactory;public TransactionAwareConnectionFactoryProxy(ConnectionFactory targetConnectionFactory) {_		setTargetConnectionFactory(targetConnectionFactory)__		afterPropertiesSet()__	};create,a,new,transaction,aware,connection,factory,proxy,param,target,connection,factory,the,target,connection,factory;public,transaction,aware,connection,factory,proxy,connection,factory,target,connection,factory,set,target,connection,factory,target,connection,factory,after,properties,set
TransactionAwareConnectionFactoryProxy -> public TransactionAwareConnectionFactoryProxy(ConnectionFactory targetConnectionFactory);1356735495;Create a new TransactionAwareConnectionFactoryProxy._@param targetConnectionFactory the target ConnectionFactory;public TransactionAwareConnectionFactoryProxy(ConnectionFactory targetConnectionFactory) {_		setTargetConnectionFactory(targetConnectionFactory)__		afterPropertiesSet()__	};create,a,new,transaction,aware,connection,factory,proxy,param,target,connection,factory,the,target,connection,factory;public,transaction,aware,connection,factory,proxy,connection,factory,target,connection,factory,set,target,connection,factory,target,connection,factory,after,properties,set
TransactionAwareConnectionFactoryProxy -> public TransactionAwareConnectionFactoryProxy(ConnectionFactory targetConnectionFactory);1357119239;Create a new TransactionAwareConnectionFactoryProxy._@param targetConnectionFactory the target ConnectionFactory;public TransactionAwareConnectionFactoryProxy(ConnectionFactory targetConnectionFactory) {_		setTargetConnectionFactory(targetConnectionFactory)__		afterPropertiesSet()__	};create,a,new,transaction,aware,connection,factory,proxy,param,target,connection,factory,the,target,connection,factory;public,transaction,aware,connection,factory,proxy,connection,factory,target,connection,factory,set,target,connection,factory,target,connection,factory,after,properties,set
TransactionAwareConnectionFactoryProxy -> public TransactionAwareConnectionFactoryProxy(ConnectionFactory targetConnectionFactory);1368482696;Create a new TransactionAwareConnectionFactoryProxy._@param targetConnectionFactory the target ConnectionFactory;public TransactionAwareConnectionFactoryProxy(ConnectionFactory targetConnectionFactory) {_		setTargetConnectionFactory(targetConnectionFactory)__		afterPropertiesSet()__	};create,a,new,transaction,aware,connection,factory,proxy,param,target,connection,factory,the,target,connection,factory;public,transaction,aware,connection,factory,proxy,connection,factory,target,connection,factory,set,target,connection,factory,target,connection,factory,after,properties,set
TransactionAwareConnectionFactoryProxy -> public TransactionAwareConnectionFactoryProxy(ConnectionFactory targetConnectionFactory);1385412762;Create a new TransactionAwareConnectionFactoryProxy._@param targetConnectionFactory the target ConnectionFactory;public TransactionAwareConnectionFactoryProxy(ConnectionFactory targetConnectionFactory) {_		setTargetConnectionFactory(targetConnectionFactory)__		afterPropertiesSet()__	};create,a,new,transaction,aware,connection,factory,proxy,param,target,connection,factory,the,target,connection,factory;public,transaction,aware,connection,factory,proxy,connection,factory,target,connection,factory,set,target,connection,factory,target,connection,factory,after,properties,set
TransactionAwareConnectionFactoryProxy -> public TransactionAwareConnectionFactoryProxy(ConnectionFactory targetConnectionFactory);1413848647;Create a new TransactionAwareConnectionFactoryProxy._@param targetConnectionFactory the target ConnectionFactory;public TransactionAwareConnectionFactoryProxy(ConnectionFactory targetConnectionFactory) {_		setTargetConnectionFactory(targetConnectionFactory)__		afterPropertiesSet()__	};create,a,new,transaction,aware,connection,factory,proxy,param,target,connection,factory,the,target,connection,factory;public,transaction,aware,connection,factory,proxy,connection,factory,target,connection,factory,set,target,connection,factory,target,connection,factory,after,properties,set
TransactionAwareConnectionFactoryProxy -> public TransactionAwareConnectionFactoryProxy(ConnectionFactory targetConnectionFactory);1476521730;Create a new TransactionAwareConnectionFactoryProxy._@param targetConnectionFactory the target ConnectionFactory;public TransactionAwareConnectionFactoryProxy(ConnectionFactory targetConnectionFactory) {_		setTargetConnectionFactory(targetConnectionFactory)__		afterPropertiesSet()__	};create,a,new,transaction,aware,connection,factory,proxy,param,target,connection,factory,the,target,connection,factory;public,transaction,aware,connection,factory,proxy,connection,factory,target,connection,factory,set,target,connection,factory,target,connection,factory,after,properties,set
TransactionAwareConnectionFactoryProxy -> public TransactionAwareConnectionFactoryProxy(ConnectionFactory targetConnectionFactory);1496837955;Create a new TransactionAwareConnectionFactoryProxy._@param targetConnectionFactory the target ConnectionFactory;public TransactionAwareConnectionFactoryProxy(ConnectionFactory targetConnectionFactory) {_		setTargetConnectionFactory(targetConnectionFactory)__		afterPropertiesSet()__	};create,a,new,transaction,aware,connection,factory,proxy,param,target,connection,factory,the,target,connection,factory;public,transaction,aware,connection,factory,proxy,connection,factory,target,connection,factory,set,target,connection,factory,target,connection,factory,after,properties,set
TransactionAwareConnectionFactoryProxy -> public TransactionAwareConnectionFactoryProxy(ConnectionFactory targetConnectionFactory);1530174524;Create a new TransactionAwareConnectionFactoryProxy._@param targetConnectionFactory the target ConnectionFactory;public TransactionAwareConnectionFactoryProxy(ConnectionFactory targetConnectionFactory) {_		setTargetConnectionFactory(targetConnectionFactory)__		afterPropertiesSet()__	};create,a,new,transaction,aware,connection,factory,proxy,param,target,connection,factory,the,target,connection,factory;public,transaction,aware,connection,factory,proxy,connection,factory,target,connection,factory,set,target,connection,factory,target,connection,factory,after,properties,set
TransactionAwareConnectionFactoryProxy -> public TransactionAwareConnectionFactoryProxy();1328020251;Create a new TransactionAwareConnectionFactoryProxy._@see #setTargetConnectionFactory;public TransactionAwareConnectionFactoryProxy() {_	};create,a,new,transaction,aware,connection,factory,proxy,see,set,target,connection,factory;public,transaction,aware,connection,factory,proxy
TransactionAwareConnectionFactoryProxy -> public TransactionAwareConnectionFactoryProxy();1356735495;Create a new TransactionAwareConnectionFactoryProxy._@see #setTargetConnectionFactory;public TransactionAwareConnectionFactoryProxy() {_	};create,a,new,transaction,aware,connection,factory,proxy,see,set,target,connection,factory;public,transaction,aware,connection,factory,proxy
TransactionAwareConnectionFactoryProxy -> public TransactionAwareConnectionFactoryProxy();1357119239;Create a new TransactionAwareConnectionFactoryProxy._@see #setTargetConnectionFactory;public TransactionAwareConnectionFactoryProxy() {_	};create,a,new,transaction,aware,connection,factory,proxy,see,set,target,connection,factory;public,transaction,aware,connection,factory,proxy
TransactionAwareConnectionFactoryProxy -> public TransactionAwareConnectionFactoryProxy();1368482696;Create a new TransactionAwareConnectionFactoryProxy._@see #setTargetConnectionFactory;public TransactionAwareConnectionFactoryProxy() {_	};create,a,new,transaction,aware,connection,factory,proxy,see,set,target,connection,factory;public,transaction,aware,connection,factory,proxy
TransactionAwareConnectionFactoryProxy -> public TransactionAwareConnectionFactoryProxy();1385412762;Create a new TransactionAwareConnectionFactoryProxy._@see #setTargetConnectionFactory;public TransactionAwareConnectionFactoryProxy() {_	};create,a,new,transaction,aware,connection,factory,proxy,see,set,target,connection,factory;public,transaction,aware,connection,factory,proxy
TransactionAwareConnectionFactoryProxy -> public TransactionAwareConnectionFactoryProxy();1413848647;Create a new TransactionAwareConnectionFactoryProxy._@see #setTargetConnectionFactory;public TransactionAwareConnectionFactoryProxy() {_	};create,a,new,transaction,aware,connection,factory,proxy,see,set,target,connection,factory;public,transaction,aware,connection,factory,proxy
TransactionAwareConnectionFactoryProxy -> public TransactionAwareConnectionFactoryProxy();1476521730;Create a new TransactionAwareConnectionFactoryProxy._@see #setTargetConnectionFactory;public TransactionAwareConnectionFactoryProxy() {_	};create,a,new,transaction,aware,connection,factory,proxy,see,set,target,connection,factory;public,transaction,aware,connection,factory,proxy
TransactionAwareConnectionFactoryProxy -> public TransactionAwareConnectionFactoryProxy();1496837955;Create a new TransactionAwareConnectionFactoryProxy._@see #setTargetConnectionFactory;public TransactionAwareConnectionFactoryProxy() {_	};create,a,new,transaction,aware,connection,factory,proxy,see,set,target,connection,factory;public,transaction,aware,connection,factory,proxy
TransactionAwareConnectionFactoryProxy -> public TransactionAwareConnectionFactoryProxy();1530174524;Create a new TransactionAwareConnectionFactoryProxy._@see #setTargetConnectionFactory;public TransactionAwareConnectionFactoryProxy() {_	};create,a,new,transaction,aware,connection,factory,proxy,see,set,target,connection,factory;public,transaction,aware,connection,factory,proxy
TransactionAwareConnectionFactoryProxy -> protected Connection getTransactionAwareConnectionProxy(Connection target, ConnectionFactory cf);1328020251;Wrap the given Connection with a proxy that delegates every method call to it_but delegates <code>close</code> calls to ConnectionFactoryUtils._@param target the original Connection to wrap_@param cf ConnectionFactory that the Connection came from_@return the wrapped Connection_@see javax.resource.cci.Connection#close()_@see org.springframework.jca.cci.connection.ConnectionFactoryUtils#doReleaseConnection;protected Connection getTransactionAwareConnectionProxy(Connection target, ConnectionFactory cf) {_		return (Connection) Proxy.newProxyInstance(_				Connection.class.getClassLoader(),_				new Class[] {Connection.class},_				new TransactionAwareInvocationHandler(target, cf))__	};wrap,the,given,connection,with,a,proxy,that,delegates,every,method,call,to,it,but,delegates,code,close,code,calls,to,connection,factory,utils,param,target,the,original,connection,to,wrap,param,cf,connection,factory,that,the,connection,came,from,return,the,wrapped,connection,see,javax,resource,cci,connection,close,see,org,springframework,jca,cci,connection,connection,factory,utils,do,release,connection;protected,connection,get,transaction,aware,connection,proxy,connection,target,connection,factory,cf,return,connection,proxy,new,proxy,instance,connection,class,get,class,loader,new,class,connection,class,new,transaction,aware,invocation,handler,target,cf
TransactionAwareConnectionFactoryProxy -> protected Connection getTransactionAwareConnectionProxy(Connection target, ConnectionFactory cf);1356735495;Wrap the given Connection with a proxy that delegates every method call to it_but delegates {@code close} calls to ConnectionFactoryUtils._@param target the original Connection to wrap_@param cf ConnectionFactory that the Connection came from_@return the wrapped Connection_@see javax.resource.cci.Connection#close()_@see ConnectionFactoryUtils#doReleaseConnection;protected Connection getTransactionAwareConnectionProxy(Connection target, ConnectionFactory cf) {_		return (Connection) Proxy.newProxyInstance(_				Connection.class.getClassLoader(),_				new Class[] {Connection.class},_				new TransactionAwareInvocationHandler(target, cf))__	};wrap,the,given,connection,with,a,proxy,that,delegates,every,method,call,to,it,but,delegates,code,close,calls,to,connection,factory,utils,param,target,the,original,connection,to,wrap,param,cf,connection,factory,that,the,connection,came,from,return,the,wrapped,connection,see,javax,resource,cci,connection,close,see,connection,factory,utils,do,release,connection;protected,connection,get,transaction,aware,connection,proxy,connection,target,connection,factory,cf,return,connection,proxy,new,proxy,instance,connection,class,get,class,loader,new,class,connection,class,new,transaction,aware,invocation,handler,target,cf
TransactionAwareConnectionFactoryProxy -> protected Connection getTransactionAwareConnectionProxy(Connection target, ConnectionFactory cf);1357119239;Wrap the given Connection with a proxy that delegates every method call to it_but delegates {@code close} calls to ConnectionFactoryUtils._@param target the original Connection to wrap_@param cf ConnectionFactory that the Connection came from_@return the wrapped Connection_@see javax.resource.cci.Connection#close()_@see ConnectionFactoryUtils#doReleaseConnection;protected Connection getTransactionAwareConnectionProxy(Connection target, ConnectionFactory cf) {_		return (Connection) Proxy.newProxyInstance(_				Connection.class.getClassLoader(),_				new Class[] {Connection.class},_				new TransactionAwareInvocationHandler(target, cf))__	};wrap,the,given,connection,with,a,proxy,that,delegates,every,method,call,to,it,but,delegates,code,close,calls,to,connection,factory,utils,param,target,the,original,connection,to,wrap,param,cf,connection,factory,that,the,connection,came,from,return,the,wrapped,connection,see,javax,resource,cci,connection,close,see,connection,factory,utils,do,release,connection;protected,connection,get,transaction,aware,connection,proxy,connection,target,connection,factory,cf,return,connection,proxy,new,proxy,instance,connection,class,get,class,loader,new,class,connection,class,new,transaction,aware,invocation,handler,target,cf
TransactionAwareConnectionFactoryProxy -> protected Connection getTransactionAwareConnectionProxy(Connection target, ConnectionFactory cf);1368482696;Wrap the given Connection with a proxy that delegates every method call to it_but delegates {@code close} calls to ConnectionFactoryUtils._@param target the original Connection to wrap_@param cf ConnectionFactory that the Connection came from_@return the wrapped Connection_@see javax.resource.cci.Connection#close()_@see ConnectionFactoryUtils#doReleaseConnection;protected Connection getTransactionAwareConnectionProxy(Connection target, ConnectionFactory cf) {_		return (Connection) Proxy.newProxyInstance(_				Connection.class.getClassLoader(),_				new Class[] {Connection.class},_				new TransactionAwareInvocationHandler(target, cf))__	};wrap,the,given,connection,with,a,proxy,that,delegates,every,method,call,to,it,but,delegates,code,close,calls,to,connection,factory,utils,param,target,the,original,connection,to,wrap,param,cf,connection,factory,that,the,connection,came,from,return,the,wrapped,connection,see,javax,resource,cci,connection,close,see,connection,factory,utils,do,release,connection;protected,connection,get,transaction,aware,connection,proxy,connection,target,connection,factory,cf,return,connection,proxy,new,proxy,instance,connection,class,get,class,loader,new,class,connection,class,new,transaction,aware,invocation,handler,target,cf
TransactionAwareConnectionFactoryProxy -> protected Connection getTransactionAwareConnectionProxy(Connection target, ConnectionFactory cf);1385412762;Wrap the given Connection with a proxy that delegates every method call to it_but delegates {@code close} calls to ConnectionFactoryUtils._@param target the original Connection to wrap_@param cf ConnectionFactory that the Connection came from_@return the wrapped Connection_@see javax.resource.cci.Connection#close()_@see ConnectionFactoryUtils#doReleaseConnection;protected Connection getTransactionAwareConnectionProxy(Connection target, ConnectionFactory cf) {_		return (Connection) Proxy.newProxyInstance(_				Connection.class.getClassLoader(),_				new Class<?>[] {Connection.class},_				new TransactionAwareInvocationHandler(target, cf))__	};wrap,the,given,connection,with,a,proxy,that,delegates,every,method,call,to,it,but,delegates,code,close,calls,to,connection,factory,utils,param,target,the,original,connection,to,wrap,param,cf,connection,factory,that,the,connection,came,from,return,the,wrapped,connection,see,javax,resource,cci,connection,close,see,connection,factory,utils,do,release,connection;protected,connection,get,transaction,aware,connection,proxy,connection,target,connection,factory,cf,return,connection,proxy,new,proxy,instance,connection,class,get,class,loader,new,class,connection,class,new,transaction,aware,invocation,handler,target,cf
TransactionAwareConnectionFactoryProxy -> protected Connection getTransactionAwareConnectionProxy(Connection target, ConnectionFactory cf);1413848647;Wrap the given Connection with a proxy that delegates every method call to it_but delegates {@code close} calls to ConnectionFactoryUtils._@param target the original Connection to wrap_@param cf ConnectionFactory that the Connection came from_@return the wrapped Connection_@see javax.resource.cci.Connection#close()_@see ConnectionFactoryUtils#doReleaseConnection;protected Connection getTransactionAwareConnectionProxy(Connection target, ConnectionFactory cf) {_		return (Connection) Proxy.newProxyInstance(_				Connection.class.getClassLoader(),_				new Class<?>[] {Connection.class},_				new TransactionAwareInvocationHandler(target, cf))__	};wrap,the,given,connection,with,a,proxy,that,delegates,every,method,call,to,it,but,delegates,code,close,calls,to,connection,factory,utils,param,target,the,original,connection,to,wrap,param,cf,connection,factory,that,the,connection,came,from,return,the,wrapped,connection,see,javax,resource,cci,connection,close,see,connection,factory,utils,do,release,connection;protected,connection,get,transaction,aware,connection,proxy,connection,target,connection,factory,cf,return,connection,proxy,new,proxy,instance,connection,class,get,class,loader,new,class,connection,class,new,transaction,aware,invocation,handler,target,cf
TransactionAwareConnectionFactoryProxy -> protected Connection getTransactionAwareConnectionProxy(Connection target, ConnectionFactory cf);1476521730;Wrap the given Connection with a proxy that delegates every method call to it_but delegates {@code close} calls to ConnectionFactoryUtils._@param target the original Connection to wrap_@param cf ConnectionFactory that the Connection came from_@return the wrapped Connection_@see javax.resource.cci.Connection#close()_@see ConnectionFactoryUtils#doReleaseConnection;protected Connection getTransactionAwareConnectionProxy(Connection target, ConnectionFactory cf) {_		return (Connection) Proxy.newProxyInstance(_				Connection.class.getClassLoader(),_				new Class<?>[] {Connection.class},_				new TransactionAwareInvocationHandler(target, cf))__	};wrap,the,given,connection,with,a,proxy,that,delegates,every,method,call,to,it,but,delegates,code,close,calls,to,connection,factory,utils,param,target,the,original,connection,to,wrap,param,cf,connection,factory,that,the,connection,came,from,return,the,wrapped,connection,see,javax,resource,cci,connection,close,see,connection,factory,utils,do,release,connection;protected,connection,get,transaction,aware,connection,proxy,connection,target,connection,factory,cf,return,connection,proxy,new,proxy,instance,connection,class,get,class,loader,new,class,connection,class,new,transaction,aware,invocation,handler,target,cf
TransactionAwareConnectionFactoryProxy -> protected Connection getTransactionAwareConnectionProxy(Connection target, ConnectionFactory cf);1496837955;Wrap the given Connection with a proxy that delegates every method call to it_but delegates {@code close} calls to ConnectionFactoryUtils._@param target the original Connection to wrap_@param cf ConnectionFactory that the Connection came from_@return the wrapped Connection_@see javax.resource.cci.Connection#close()_@see ConnectionFactoryUtils#doReleaseConnection;protected Connection getTransactionAwareConnectionProxy(Connection target, ConnectionFactory cf) {_		return (Connection) Proxy.newProxyInstance(_				Connection.class.getClassLoader(),_				new Class<?>[] {Connection.class},_				new TransactionAwareInvocationHandler(target, cf))__	};wrap,the,given,connection,with,a,proxy,that,delegates,every,method,call,to,it,but,delegates,code,close,calls,to,connection,factory,utils,param,target,the,original,connection,to,wrap,param,cf,connection,factory,that,the,connection,came,from,return,the,wrapped,connection,see,javax,resource,cci,connection,close,see,connection,factory,utils,do,release,connection;protected,connection,get,transaction,aware,connection,proxy,connection,target,connection,factory,cf,return,connection,proxy,new,proxy,instance,connection,class,get,class,loader,new,class,connection,class,new,transaction,aware,invocation,handler,target,cf
TransactionAwareConnectionFactoryProxy -> protected Connection getTransactionAwareConnectionProxy(Connection target, ConnectionFactory cf);1530174524;Wrap the given Connection with a proxy that delegates every method call to it_but delegates {@code close} calls to ConnectionFactoryUtils._@param target the original Connection to wrap_@param cf the ConnectionFactory that the Connection came from_@return the wrapped Connection_@see javax.resource.cci.Connection#close()_@see ConnectionFactoryUtils#doReleaseConnection;protected Connection getTransactionAwareConnectionProxy(Connection target, ConnectionFactory cf) {_		return (Connection) Proxy.newProxyInstance(_				Connection.class.getClassLoader(),_				new Class<?>[] {Connection.class},_				new TransactionAwareInvocationHandler(target, cf))__	};wrap,the,given,connection,with,a,proxy,that,delegates,every,method,call,to,it,but,delegates,code,close,calls,to,connection,factory,utils,param,target,the,original,connection,to,wrap,param,cf,the,connection,factory,that,the,connection,came,from,return,the,wrapped,connection,see,javax,resource,cci,connection,close,see,connection,factory,utils,do,release,connection;protected,connection,get,transaction,aware,connection,proxy,connection,target,connection,factory,cf,return,connection,proxy,new,proxy,instance,connection,class,get,class,loader,new,class,connection,class,new,transaction,aware,invocation,handler,target,cf
