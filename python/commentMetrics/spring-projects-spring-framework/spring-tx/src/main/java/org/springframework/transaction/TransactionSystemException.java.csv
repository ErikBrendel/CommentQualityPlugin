# id;timestamp;commentText;codeText;commentWords;codeWords
TransactionSystemException -> public TransactionSystemException(String msg, Throwable cause);1328020251;Constructor for TransactionSystemException._@param msg the detail message_@param cause the root cause from the transaction API in use;public TransactionSystemException(String msg, Throwable cause) {_		super(msg, cause)__	};constructor,for,transaction,system,exception,param,msg,the,detail,message,param,cause,the,root,cause,from,the,transaction,api,in,use;public,transaction,system,exception,string,msg,throwable,cause,super,msg,cause
TransactionSystemException -> public TransactionSystemException(String msg, Throwable cause);1356735495;Constructor for TransactionSystemException._@param msg the detail message_@param cause the root cause from the transaction API in use;public TransactionSystemException(String msg, Throwable cause) {_		super(msg, cause)__	};constructor,for,transaction,system,exception,param,msg,the,detail,message,param,cause,the,root,cause,from,the,transaction,api,in,use;public,transaction,system,exception,string,msg,throwable,cause,super,msg,cause
TransactionSystemException -> public TransactionSystemException(String msg, Throwable cause);1385412762;Constructor for TransactionSystemException._@param msg the detail message_@param cause the root cause from the transaction API in use;public TransactionSystemException(String msg, Throwable cause) {_		super(msg, cause)__	};constructor,for,transaction,system,exception,param,msg,the,detail,message,param,cause,the,root,cause,from,the,transaction,api,in,use;public,transaction,system,exception,string,msg,throwable,cause,super,msg,cause
TransactionSystemException -> public TransactionSystemException(String msg, Throwable cause);1495868221;Constructor for TransactionSystemException._@param msg the detail message_@param cause the root cause from the transaction API in use;public TransactionSystemException(String msg, Throwable cause) {_		super(msg, cause)__	};constructor,for,transaction,system,exception,param,msg,the,detail,message,param,cause,the,root,cause,from,the,transaction,api,in,use;public,transaction,system,exception,string,msg,throwable,cause,super,msg,cause
TransactionSystemException -> public TransactionSystemException(String msg, Throwable cause);1496837955;Constructor for TransactionSystemException._@param msg the detail message_@param cause the root cause from the transaction API in use;public TransactionSystemException(String msg, Throwable cause) {_		super(msg, cause)__	};constructor,for,transaction,system,exception,param,msg,the,detail,message,param,cause,the,root,cause,from,the,transaction,api,in,use;public,transaction,system,exception,string,msg,throwable,cause,super,msg,cause
TransactionSystemException -> public TransactionSystemException(String msg, Throwable cause);1498780456;Constructor for TransactionSystemException._@param msg the detail message_@param cause the root cause from the transaction API in use;public TransactionSystemException(String msg, Throwable cause) {_		super(msg, cause)__	};constructor,for,transaction,system,exception,param,msg,the,detail,message,param,cause,the,root,cause,from,the,transaction,api,in,use;public,transaction,system,exception,string,msg,throwable,cause,super,msg,cause
TransactionSystemException -> @Nullable 	public Throwable getOriginalException();1495868221;Return the exception that was the first to be thrown within the failed transaction:_i.e. the application exception, if any, or the TransactionSystemException's own cause._@return the original exception, or {@code null} if there was none;@Nullable_	public Throwable getOriginalException() {_		return (this.applicationException != null ? this.applicationException : getCause())__	};return,the,exception,that,was,the,first,to,be,thrown,within,the,failed,transaction,i,e,the,application,exception,if,any,or,the,transaction,system,exception,s,own,cause,return,the,original,exception,or,code,null,if,there,was,none;nullable,public,throwable,get,original,exception,return,this,application,exception,null,this,application,exception,get,cause
TransactionSystemException -> @Nullable 	public Throwable getOriginalException();1496837955;Return the exception that was the first to be thrown within the failed transaction:_i.e. the application exception, if any, or the TransactionSystemException's own cause._@return the original exception, or {@code null} if there was none;@Nullable_	public Throwable getOriginalException() {_		return (this.applicationException != null ? this.applicationException : getCause())__	};return,the,exception,that,was,the,first,to,be,thrown,within,the,failed,transaction,i,e,the,application,exception,if,any,or,the,transaction,system,exception,s,own,cause,return,the,original,exception,or,code,null,if,there,was,none;nullable,public,throwable,get,original,exception,return,this,application,exception,null,this,application,exception,get,cause
TransactionSystemException -> @Nullable 	public Throwable getOriginalException();1498780456;Return the exception that was the first to be thrown within the failed transaction:_i.e. the application exception, if any, or the TransactionSystemException's own cause._@return the original exception, or {@code null} if there was none;@Nullable_	public Throwable getOriginalException() {_		return (this.applicationException != null ? this.applicationException : getCause())__	};return,the,exception,that,was,the,first,to,be,thrown,within,the,failed,transaction,i,e,the,application,exception,if,any,or,the,transaction,system,exception,s,own,cause,return,the,original,exception,or,code,null,if,there,was,none;nullable,public,throwable,get,original,exception,return,this,application,exception,null,this,application,exception,get,cause
TransactionSystemException -> public void initApplicationException(Throwable ex);1328020251;Set an application exception that was thrown before this transaction exception,_preserving the original exception despite the overriding TransactionSystemException._@param ex the application exception_@throws IllegalStateException if this TransactionSystemException already holds an_application exception;public void initApplicationException(Throwable ex) {_		Assert.notNull(ex, "Application exception must not be null")__		if (this.applicationException != null) {_			throw new IllegalStateException("Already holding an application exception: " + this.applicationException)__		}_		this.applicationException = ex__	};set,an,application,exception,that,was,thrown,before,this,transaction,exception,preserving,the,original,exception,despite,the,overriding,transaction,system,exception,param,ex,the,application,exception,throws,illegal,state,exception,if,this,transaction,system,exception,already,holds,an,application,exception;public,void,init,application,exception,throwable,ex,assert,not,null,ex,application,exception,must,not,be,null,if,this,application,exception,null,throw,new,illegal,state,exception,already,holding,an,application,exception,this,application,exception,this,application,exception,ex
TransactionSystemException -> public void initApplicationException(Throwable ex);1356735495;Set an application exception that was thrown before this transaction exception,_preserving the original exception despite the overriding TransactionSystemException._@param ex the application exception_@throws IllegalStateException if this TransactionSystemException already holds an_application exception;public void initApplicationException(Throwable ex) {_		Assert.notNull(ex, "Application exception must not be null")__		if (this.applicationException != null) {_			throw new IllegalStateException("Already holding an application exception: " + this.applicationException)__		}_		this.applicationException = ex__	};set,an,application,exception,that,was,thrown,before,this,transaction,exception,preserving,the,original,exception,despite,the,overriding,transaction,system,exception,param,ex,the,application,exception,throws,illegal,state,exception,if,this,transaction,system,exception,already,holds,an,application,exception;public,void,init,application,exception,throwable,ex,assert,not,null,ex,application,exception,must,not,be,null,if,this,application,exception,null,throw,new,illegal,state,exception,already,holding,an,application,exception,this,application,exception,this,application,exception,ex
TransactionSystemException -> public void initApplicationException(Throwable ex);1385412762;Set an application exception that was thrown before this transaction exception,_preserving the original exception despite the overriding TransactionSystemException._@param ex the application exception_@throws IllegalStateException if this TransactionSystemException already holds an_application exception;public void initApplicationException(Throwable ex) {_		Assert.notNull(ex, "Application exception must not be null")__		if (this.applicationException != null) {_			throw new IllegalStateException("Already holding an application exception: " + this.applicationException)__		}_		this.applicationException = ex__	};set,an,application,exception,that,was,thrown,before,this,transaction,exception,preserving,the,original,exception,despite,the,overriding,transaction,system,exception,param,ex,the,application,exception,throws,illegal,state,exception,if,this,transaction,system,exception,already,holds,an,application,exception;public,void,init,application,exception,throwable,ex,assert,not,null,ex,application,exception,must,not,be,null,if,this,application,exception,null,throw,new,illegal,state,exception,already,holding,an,application,exception,this,application,exception,this,application,exception,ex
TransactionSystemException -> public void initApplicationException(Throwable ex);1495868221;Set an application exception that was thrown before this transaction exception,_preserving the original exception despite the overriding TransactionSystemException._@param ex the application exception_@throws IllegalStateException if this TransactionSystemException already holds an_application exception;public void initApplicationException(Throwable ex) {_		Assert.notNull(ex, "Application exception must not be null")__		if (this.applicationException != null) {_			throw new IllegalStateException("Already holding an application exception: " + this.applicationException)__		}_		this.applicationException = ex__	};set,an,application,exception,that,was,thrown,before,this,transaction,exception,preserving,the,original,exception,despite,the,overriding,transaction,system,exception,param,ex,the,application,exception,throws,illegal,state,exception,if,this,transaction,system,exception,already,holds,an,application,exception;public,void,init,application,exception,throwable,ex,assert,not,null,ex,application,exception,must,not,be,null,if,this,application,exception,null,throw,new,illegal,state,exception,already,holding,an,application,exception,this,application,exception,this,application,exception,ex
TransactionSystemException -> public void initApplicationException(Throwable ex);1496837955;Set an application exception that was thrown before this transaction exception,_preserving the original exception despite the overriding TransactionSystemException._@param ex the application exception_@throws IllegalStateException if this TransactionSystemException already holds an_application exception;public void initApplicationException(Throwable ex) {_		Assert.notNull(ex, "Application exception must not be null")__		if (this.applicationException != null) {_			throw new IllegalStateException("Already holding an application exception: " + this.applicationException)__		}_		this.applicationException = ex__	};set,an,application,exception,that,was,thrown,before,this,transaction,exception,preserving,the,original,exception,despite,the,overriding,transaction,system,exception,param,ex,the,application,exception,throws,illegal,state,exception,if,this,transaction,system,exception,already,holds,an,application,exception;public,void,init,application,exception,throwable,ex,assert,not,null,ex,application,exception,must,not,be,null,if,this,application,exception,null,throw,new,illegal,state,exception,already,holding,an,application,exception,this,application,exception,this,application,exception,ex
TransactionSystemException -> public void initApplicationException(Throwable ex);1498780456;Set an application exception that was thrown before this transaction exception,_preserving the original exception despite the overriding TransactionSystemException._@param ex the application exception_@throws IllegalStateException if this TransactionSystemException already holds an_application exception;public void initApplicationException(Throwable ex) {_		Assert.notNull(ex, "Application exception must not be null")__		if (this.applicationException != null) {_			throw new IllegalStateException("Already holding an application exception: " + this.applicationException)__		}_		this.applicationException = ex__	};set,an,application,exception,that,was,thrown,before,this,transaction,exception,preserving,the,original,exception,despite,the,overriding,transaction,system,exception,param,ex,the,application,exception,throws,illegal,state,exception,if,this,transaction,system,exception,already,holds,an,application,exception;public,void,init,application,exception,throwable,ex,assert,not,null,ex,application,exception,must,not,be,null,if,this,application,exception,null,throw,new,illegal,state,exception,already,holding,an,application,exception,this,application,exception,this,application,exception,ex
TransactionSystemException -> @Nullable 	public final Throwable getApplicationException();1495868221;Return the application exception that was thrown before this transaction exception,_if any._@return the application exception, or {@code null} if none set;@Nullable_	public final Throwable getApplicationException() {_		return this.applicationException__	};return,the,application,exception,that,was,thrown,before,this,transaction,exception,if,any,return,the,application,exception,or,code,null,if,none,set;nullable,public,final,throwable,get,application,exception,return,this,application,exception
TransactionSystemException -> @Nullable 	public final Throwable getApplicationException();1496837955;Return the application exception that was thrown before this transaction exception,_if any._@return the application exception, or {@code null} if none set;@Nullable_	public final Throwable getApplicationException() {_		return this.applicationException__	};return,the,application,exception,that,was,thrown,before,this,transaction,exception,if,any,return,the,application,exception,or,code,null,if,none,set;nullable,public,final,throwable,get,application,exception,return,this,application,exception
TransactionSystemException -> @Nullable 	public final Throwable getApplicationException();1498780456;Return the application exception that was thrown before this transaction exception,_if any._@return the application exception, or {@code null} if none set;@Nullable_	public final Throwable getApplicationException() {_		return this.applicationException__	};return,the,application,exception,that,was,thrown,before,this,transaction,exception,if,any,return,the,application,exception,or,code,null,if,none,set;nullable,public,final,throwable,get,application,exception,return,this,application,exception
TransactionSystemException -> public final Throwable getApplicationException();1328020251;Return the application exception that was thrown before this transaction exception,_if any._@return the application exception, or <code>null</code> if none set;public final Throwable getApplicationException() {_		return this.applicationException__	};return,the,application,exception,that,was,thrown,before,this,transaction,exception,if,any,return,the,application,exception,or,code,null,code,if,none,set;public,final,throwable,get,application,exception,return,this,application,exception
TransactionSystemException -> public final Throwable getApplicationException();1356735495;Return the application exception that was thrown before this transaction exception,_if any._@return the application exception, or {@code null} if none set;public final Throwable getApplicationException() {_		return this.applicationException__	};return,the,application,exception,that,was,thrown,before,this,transaction,exception,if,any,return,the,application,exception,or,code,null,if,none,set;public,final,throwable,get,application,exception,return,this,application,exception
TransactionSystemException -> public final Throwable getApplicationException();1385412762;Return the application exception that was thrown before this transaction exception,_if any._@return the application exception, or {@code null} if none set;public final Throwable getApplicationException() {_		return this.applicationException__	};return,the,application,exception,that,was,thrown,before,this,transaction,exception,if,any,return,the,application,exception,or,code,null,if,none,set;public,final,throwable,get,application,exception,return,this,application,exception
TransactionSystemException -> public Throwable getOriginalException();1328020251;Return the exception that was the first to be thrown within the failed transaction:_i.e. the application exception, if any, or the TransactionSystemException's own cause._@return the original exception, or <code>null</code> if there was none;public Throwable getOriginalException() {_		return (this.applicationException != null ? this.applicationException : getCause())__	};return,the,exception,that,was,the,first,to,be,thrown,within,the,failed,transaction,i,e,the,application,exception,if,any,or,the,transaction,system,exception,s,own,cause,return,the,original,exception,or,code,null,code,if,there,was,none;public,throwable,get,original,exception,return,this,application,exception,null,this,application,exception,get,cause
TransactionSystemException -> public Throwable getOriginalException();1356735495;Return the exception that was the first to be thrown within the failed transaction:_i.e. the application exception, if any, or the TransactionSystemException's own cause._@return the original exception, or {@code null} if there was none;public Throwable getOriginalException() {_		return (this.applicationException != null ? this.applicationException : getCause())__	};return,the,exception,that,was,the,first,to,be,thrown,within,the,failed,transaction,i,e,the,application,exception,if,any,or,the,transaction,system,exception,s,own,cause,return,the,original,exception,or,code,null,if,there,was,none;public,throwable,get,original,exception,return,this,application,exception,null,this,application,exception,get,cause
TransactionSystemException -> public Throwable getOriginalException();1385412762;Return the exception that was the first to be thrown within the failed transaction:_i.e. the application exception, if any, or the TransactionSystemException's own cause._@return the original exception, or {@code null} if there was none;public Throwable getOriginalException() {_		return (this.applicationException != null ? this.applicationException : getCause())__	};return,the,exception,that,was,the,first,to,be,thrown,within,the,failed,transaction,i,e,the,application,exception,if,any,or,the,transaction,system,exception,s,own,cause,return,the,original,exception,or,code,null,if,there,was,none;public,throwable,get,original,exception,return,this,application,exception,null,this,application,exception,get,cause
TransactionSystemException -> public TransactionSystemException(String msg);1328020251;Constructor for TransactionSystemException._@param msg the detail message;public TransactionSystemException(String msg) {_		super(msg)__	};constructor,for,transaction,system,exception,param,msg,the,detail,message;public,transaction,system,exception,string,msg,super,msg
TransactionSystemException -> public TransactionSystemException(String msg);1356735495;Constructor for TransactionSystemException._@param msg the detail message;public TransactionSystemException(String msg) {_		super(msg)__	};constructor,for,transaction,system,exception,param,msg,the,detail,message;public,transaction,system,exception,string,msg,super,msg
TransactionSystemException -> public TransactionSystemException(String msg);1385412762;Constructor for TransactionSystemException._@param msg the detail message;public TransactionSystemException(String msg) {_		super(msg)__	};constructor,for,transaction,system,exception,param,msg,the,detail,message;public,transaction,system,exception,string,msg,super,msg
TransactionSystemException -> public TransactionSystemException(String msg);1495868221;Constructor for TransactionSystemException._@param msg the detail message;public TransactionSystemException(String msg) {_		super(msg)__	};constructor,for,transaction,system,exception,param,msg,the,detail,message;public,transaction,system,exception,string,msg,super,msg
TransactionSystemException -> public TransactionSystemException(String msg);1496837955;Constructor for TransactionSystemException._@param msg the detail message;public TransactionSystemException(String msg) {_		super(msg)__	};constructor,for,transaction,system,exception,param,msg,the,detail,message;public,transaction,system,exception,string,msg,super,msg
TransactionSystemException -> public TransactionSystemException(String msg);1498780456;Constructor for TransactionSystemException._@param msg the detail message;public TransactionSystemException(String msg) {_		super(msg)__	};constructor,for,transaction,system,exception,param,msg,the,detail,message;public,transaction,system,exception,string,msg,super,msg
