# id;timestamp;commentText;codeText;commentWords;codeWords
TransactionManagementConfigurationSelector -> @Override 	protected String[] selectImports(AdviceMode adviceMode);1328020251;{@inheritDoc}_@return {@link ProxyTransactionManagementConfiguration} or_{@code AspectJTransactionManagementConfiguration} for {@code PROXY} and_{@code ASPECTJ} values of {@link EnableTransactionManagement#mode()}, respectively;@Override_	protected String[] selectImports(AdviceMode adviceMode) {_		switch (adviceMode) {_			case PROXY:_				return new String[] { AutoProxyRegistrar.class.getName(), ProxyTransactionManagementConfiguration.class.getName() }__			case ASPECTJ:_				return new String[] { TransactionManagementConfigUtils.TRANSACTION_ASPECT_CONFIGURATION_CLASS_NAME }__			default:_				return null__		}_	};inherit,doc,return,link,proxy,transaction,management,configuration,or,code,aspect,jtransaction,management,configuration,for,code,proxy,and,code,aspectj,values,of,link,enable,transaction,management,mode,respectively;override,protected,string,select,imports,advice,mode,advice,mode,switch,advice,mode,case,proxy,return,new,string,auto,proxy,registrar,class,get,name,proxy,transaction,management,configuration,class,get,name,case,aspectj,return,new,string,transaction,management,config,utils,default,return,null
TransactionManagementConfigurationSelector -> @Override 	protected String[] selectImports(AdviceMode adviceMode);1385159394;{@inheritDoc}_@return {@link ProxyTransactionManagementConfiguration} or_{@code AspectJTransactionManagementConfiguration} for {@code PROXY} and_{@code ASPECTJ} values of {@link EnableTransactionManagement#mode()}, respectively;@Override_	protected String[] selectImports(AdviceMode adviceMode) {_		switch (adviceMode) {_			case PROXY:_				return new String[] {AutoProxyRegistrar.class.getName(), ProxyTransactionManagementConfiguration.class.getName()}__			case ASPECTJ:_				return new String[] {TransactionManagementConfigUtils.TRANSACTION_ASPECT_CONFIGURATION_CLASS_NAME}__			default:_				return null__		}_	};inherit,doc,return,link,proxy,transaction,management,configuration,or,code,aspect,jtransaction,management,configuration,for,code,proxy,and,code,aspectj,values,of,link,enable,transaction,management,mode,respectively;override,protected,string,select,imports,advice,mode,advice,mode,switch,advice,mode,case,proxy,return,new,string,auto,proxy,registrar,class,get,name,proxy,transaction,management,configuration,class,get,name,case,aspectj,return,new,string,transaction,management,config,utils,default,return,null
TransactionManagementConfigurationSelector -> @Override 	protected String[] selectImports(AdviceMode adviceMode);1385978426;{@inheritDoc}_@return {@link ProxyTransactionManagementConfiguration} or_{@code AspectJTransactionManagementConfiguration} for {@code PROXY} and_{@code ASPECTJ} values of {@link EnableTransactionManagement#mode()}, respectively;@Override_	protected String[] selectImports(AdviceMode adviceMode) {_		switch (adviceMode) {_			case PROXY:_				return new String[] {AutoProxyRegistrar.class.getName(), ProxyTransactionManagementConfiguration.class.getName()}__			case ASPECTJ:_				return new String[] {TransactionManagementConfigUtils.TRANSACTION_ASPECT_CONFIGURATION_CLASS_NAME}__			default:_				return null__		}_	};inherit,doc,return,link,proxy,transaction,management,configuration,or,code,aspect,jtransaction,management,configuration,for,code,proxy,and,code,aspectj,values,of,link,enable,transaction,management,mode,respectively;override,protected,string,select,imports,advice,mode,advice,mode,switch,advice,mode,case,proxy,return,new,string,auto,proxy,registrar,class,get,name,proxy,transaction,management,configuration,class,get,name,case,aspectj,return,new,string,transaction,management,config,utils,default,return,null
TransactionManagementConfigurationSelector -> @Override 	protected String[] selectImports(AdviceMode adviceMode);1530294218;{@inheritDoc}_@return {@link ProxyTransactionManagementConfiguration} or_{@code AspectJTransactionManagementConfiguration} for {@code PROXY} and_{@code ASPECTJ} values of {@link EnableTransactionManagement#mode()}, respectively;@Override_	protected String[] selectImports(AdviceMode adviceMode) {_		switch (adviceMode) {_			case PROXY:_				return new String[] {AutoProxyRegistrar.class.getName(), ProxyTransactionManagementConfiguration.class.getName()}__			case ASPECTJ:_				return new String[] {determineTransactionAspectClass()}__			default:_				return null__		}_	};inherit,doc,return,link,proxy,transaction,management,configuration,or,code,aspect,jtransaction,management,configuration,for,code,proxy,and,code,aspectj,values,of,link,enable,transaction,management,mode,respectively;override,protected,string,select,imports,advice,mode,advice,mode,switch,advice,mode,case,proxy,return,new,string,auto,proxy,registrar,class,get,name,proxy,transaction,management,configuration,class,get,name,case,aspectj,return,new,string,determine,transaction,aspect,class,default,return,null
TransactionManagementConfigurationSelector -> @Override 	protected String[] selectImports(AdviceMode adviceMode);1532640050;Returns {@link ProxyTransactionManagementConfiguration} or_{@code AspectJ(Jta)TransactionManagementConfiguration} for {@code PROXY}_and {@code ASPECTJ} values of {@link EnableTransactionManagement#mode()},_respectively.;@Override_	protected String[] selectImports(AdviceMode adviceMode) {_		switch (adviceMode) {_			case PROXY:_				return new String[] {AutoProxyRegistrar.class.getName(),_						ProxyTransactionManagementConfiguration.class.getName()}__			case ASPECTJ:_				return new String[] {determineTransactionAspectClass()}__			default:_				return null__		}_	};returns,link,proxy,transaction,management,configuration,or,code,aspect,j,jta,transaction,management,configuration,for,code,proxy,and,code,aspectj,values,of,link,enable,transaction,management,mode,respectively;override,protected,string,select,imports,advice,mode,advice,mode,switch,advice,mode,case,proxy,return,new,string,auto,proxy,registrar,class,get,name,proxy,transaction,management,configuration,class,get,name,case,aspectj,return,new,string,determine,transaction,aspect,class,default,return,null
