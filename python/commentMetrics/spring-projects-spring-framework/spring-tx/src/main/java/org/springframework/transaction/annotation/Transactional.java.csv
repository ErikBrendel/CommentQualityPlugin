# id;timestamp;commentText;codeText;commentWords;codeWords
Transactional -> Class<? extends Throwable>[] rollbackFor() default {}_;1328020251;Defines zero (0) or more exception {@link Class classes}, which must be a_subclass of {@link Throwable}, indicating which exception types must cause_a transaction rollback._<p>This is the preferred way to construct a rollback rule, matching the_exception class and subclasses._<p>Similar to {@link org.springframework.transaction.interceptor.RollbackRuleAttribute#RollbackRuleAttribute(Class clazz)};Class<? extends Throwable>[] rollbackFor() default {}_;defines,zero,0,or,more,exception,link,class,classes,which,must,be,a,subclass,of,link,throwable,indicating,which,exception,types,must,cause,a,transaction,rollback,p,this,is,the,preferred,way,to,construct,a,rollback,rule,matching,the,exception,class,and,subclasses,p,similar,to,link,org,springframework,transaction,interceptor,rollback,rule,attribute,rollback,rule,attribute,class,clazz;class,extends,throwable,rollback,for,default
Transactional -> Class<? extends Throwable>[] rollbackFor() default {}_;1356735495;Defines zero (0) or more exception {@link Class classes}, which must be a_subclass of {@link Throwable}, indicating which exception types must cause_a transaction rollback._<p>This is the preferred way to construct a rollback rule, matching the_exception class and subclasses._<p>Similar to {@link org.springframework.transaction.interceptor.RollbackRuleAttribute#RollbackRuleAttribute(Class clazz)};Class<? extends Throwable>[] rollbackFor() default {}_;defines,zero,0,or,more,exception,link,class,classes,which,must,be,a,subclass,of,link,throwable,indicating,which,exception,types,must,cause,a,transaction,rollback,p,this,is,the,preferred,way,to,construct,a,rollback,rule,matching,the,exception,class,and,subclasses,p,similar,to,link,org,springframework,transaction,interceptor,rollback,rule,attribute,rollback,rule,attribute,class,clazz;class,extends,throwable,rollback,for,default
Transactional -> Class<? extends Throwable>[] rollbackFor() default {}_;1434139184;Defines zero (0) or more exception {@link Class classes}, which must be_subclasses of {@link Throwable}, indicating which exception types must cause_a transaction rollback._<p>This is the preferred way to construct a rollback rule (in contrast to_{@link #rollbackForClassName}), matching the exception class and its subclasses._<p>Similar to {@link org.springframework.transaction.interceptor.RollbackRuleAttribute#RollbackRuleAttribute(Class clazz)}_@see #rollbackForClassName;Class<? extends Throwable>[] rollbackFor() default {}_;defines,zero,0,or,more,exception,link,class,classes,which,must,be,subclasses,of,link,throwable,indicating,which,exception,types,must,cause,a,transaction,rollback,p,this,is,the,preferred,way,to,construct,a,rollback,rule,in,contrast,to,link,rollback,for,class,name,matching,the,exception,class,and,its,subclasses,p,similar,to,link,org,springframework,transaction,interceptor,rollback,rule,attribute,rollback,rule,attribute,class,clazz,see,rollback,for,class,name;class,extends,throwable,rollback,for,default
Transactional -> Class<? extends Throwable>[] rollbackFor() default {}_;1434141320;Defines zero (0) or more exception {@link Class classes}, which must be_subclasses of {@link Throwable}, indicating which exception types must cause_a transaction rollback._<p>This is the preferred way to construct a rollback rule (in contrast to_{@link #rollbackForClassName}), matching the exception class and its subclasses._<p>Similar to {@link org.springframework.transaction.interceptor.RollbackRuleAttribute#RollbackRuleAttribute(Class clazz)}_@see #rollbackForClassName;Class<? extends Throwable>[] rollbackFor() default {}_;defines,zero,0,or,more,exception,link,class,classes,which,must,be,subclasses,of,link,throwable,indicating,which,exception,types,must,cause,a,transaction,rollback,p,this,is,the,preferred,way,to,construct,a,rollback,rule,in,contrast,to,link,rollback,for,class,name,matching,the,exception,class,and,its,subclasses,p,similar,to,link,org,springframework,transaction,interceptor,rollback,rule,attribute,rollback,rule,attribute,class,clazz,see,rollback,for,class,name;class,extends,throwable,rollback,for,default
Transactional -> Class<? extends Throwable>[] rollbackFor() default {}_;1438176426;Defines zero (0) or more exception {@link Class classes}, which must be_subclasses of {@link Throwable}, indicating which exception types must cause_a transaction rollback._<p>This is the preferred way to construct a rollback rule (in contrast to_{@link #rollbackForClassName}), matching the exception class and its subclasses._<p>Similar to {@link org.springframework.transaction.interceptor.RollbackRuleAttribute#RollbackRuleAttribute(Class clazz)}_@see #rollbackForClassName;Class<? extends Throwable>[] rollbackFor() default {}_;defines,zero,0,or,more,exception,link,class,classes,which,must,be,subclasses,of,link,throwable,indicating,which,exception,types,must,cause,a,transaction,rollback,p,this,is,the,preferred,way,to,construct,a,rollback,rule,in,contrast,to,link,rollback,for,class,name,matching,the,exception,class,and,its,subclasses,p,similar,to,link,org,springframework,transaction,interceptor,rollback,rule,attribute,rollback,rule,attribute,class,clazz,see,rollback,for,class,name;class,extends,throwable,rollback,for,default
Transactional -> Class<? extends Throwable>[] rollbackFor() default {}_;1481292320;Defines zero (0) or more exception {@link Class classes}, which must be_subclasses of {@link Throwable}, indicating which exception types must cause_a transaction rollback._<p>By default, a transaction will be rolling back on {@link RuntimeException}_and {@link Error} but not on checked exceptions (business exceptions). See_{@link org.springframework.transaction.interceptor.DefaultTransactionAttribute#rollbackOn(Throwable)}_for a detailed explanation._<p>This is the preferred way to construct a rollback rule (in contrast to_{@link #rollbackForClassName}), matching the exception class and its subclasses._<p>Similar to {@link org.springframework.transaction.interceptor.RollbackRuleAttribute#RollbackRuleAttribute(Class clazz)}._@see #rollbackForClassName_@see org.springframework.transaction.interceptor.DefaultTransactionAttribute#rollbackOn(Throwable);Class<? extends Throwable>[] rollbackFor() default {}_;defines,zero,0,or,more,exception,link,class,classes,which,must,be,subclasses,of,link,throwable,indicating,which,exception,types,must,cause,a,transaction,rollback,p,by,default,a,transaction,will,be,rolling,back,on,link,runtime,exception,and,link,error,but,not,on,checked,exceptions,business,exceptions,see,link,org,springframework,transaction,interceptor,default,transaction,attribute,rollback,on,throwable,for,a,detailed,explanation,p,this,is,the,preferred,way,to,construct,a,rollback,rule,in,contrast,to,link,rollback,for,class,name,matching,the,exception,class,and,its,subclasses,p,similar,to,link,org,springframework,transaction,interceptor,rollback,rule,attribute,rollback,rule,attribute,class,clazz,see,rollback,for,class,name,see,org,springframework,transaction,interceptor,default,transaction,attribute,rollback,on,throwable;class,extends,throwable,rollback,for,default
Transactional -> Class<? extends Throwable>[] rollbackFor() default {}_;1517867503;Defines zero (0) or more exception {@link Class classes}, which must be_subclasses of {@link Throwable}, indicating which exception types must cause_a transaction rollback._<p>By default, a transaction will be rolling back on {@link RuntimeException}_and {@link Error} but not on checked exceptions (business exceptions). See_{@link org.springframework.transaction.interceptor.DefaultTransactionAttribute#rollbackOn(Throwable)}_for a detailed explanation._<p>This is the preferred way to construct a rollback rule (in contrast to_{@link #rollbackForClassName}), matching the exception class and its subclasses._<p>Similar to {@link org.springframework.transaction.interceptor.RollbackRuleAttribute#RollbackRuleAttribute(Class clazz)}._@see #rollbackForClassName_@see org.springframework.transaction.interceptor.DefaultTransactionAttribute#rollbackOn(Throwable);Class<? extends Throwable>[] rollbackFor() default {}_;defines,zero,0,or,more,exception,link,class,classes,which,must,be,subclasses,of,link,throwable,indicating,which,exception,types,must,cause,a,transaction,rollback,p,by,default,a,transaction,will,be,rolling,back,on,link,runtime,exception,and,link,error,but,not,on,checked,exceptions,business,exceptions,see,link,org,springframework,transaction,interceptor,default,transaction,attribute,rollback,on,throwable,for,a,detailed,explanation,p,this,is,the,preferred,way,to,construct,a,rollback,rule,in,contrast,to,link,rollback,for,class,name,matching,the,exception,class,and,its,subclasses,p,similar,to,link,org,springframework,transaction,interceptor,rollback,rule,attribute,rollback,rule,attribute,class,clazz,see,rollback,for,class,name,see,org,springframework,transaction,interceptor,default,transaction,attribute,rollback,on,throwable;class,extends,throwable,rollback,for,default
Transactional -> Class<? extends Throwable>[] rollbackFor() default {}_;1535712043;Defines zero (0) or more exception {@link Class classes}, which must be_subclasses of {@link Throwable}, indicating which exception types must cause_a transaction rollback._<p>By default, a transaction will be rolling back on {@link RuntimeException}_and {@link Error} but not on checked exceptions (business exceptions). See_{@link org.springframework.transaction.interceptor.DefaultTransactionAttribute#rollbackOn(Throwable)}_for a detailed explanation._<p>This is the preferred way to construct a rollback rule (in contrast to_{@link #rollbackForClassName}), matching the exception class and its subclasses._<p>Similar to {@link org.springframework.transaction.interceptor.RollbackRuleAttribute#RollbackRuleAttribute(Class clazz)}._@see #rollbackForClassName_@see org.springframework.transaction.interceptor.DefaultTransactionAttribute#rollbackOn(Throwable);Class<? extends Throwable>[] rollbackFor() default {}_;defines,zero,0,or,more,exception,link,class,classes,which,must,be,subclasses,of,link,throwable,indicating,which,exception,types,must,cause,a,transaction,rollback,p,by,default,a,transaction,will,be,rolling,back,on,link,runtime,exception,and,link,error,but,not,on,checked,exceptions,business,exceptions,see,link,org,springframework,transaction,interceptor,default,transaction,attribute,rollback,on,throwable,for,a,detailed,explanation,p,this,is,the,preferred,way,to,construct,a,rollback,rule,in,contrast,to,link,rollback,for,class,name,matching,the,exception,class,and,its,subclasses,p,similar,to,link,org,springframework,transaction,interceptor,rollback,rule,attribute,rollback,rule,attribute,class,clazz,see,rollback,for,class,name,see,org,springframework,transaction,interceptor,default,transaction,attribute,rollback,on,throwable;class,extends,throwable,rollback,for,default
Transactional -> Class<? extends Throwable>[] rollbackFor() default {}_;1541442754;Defines zero (0) or more exception {@link Class classes}, which must be_subclasses of {@link Throwable}, indicating which exception types must cause_a transaction rollback._<p>By default, a transaction will be rolling back on {@link RuntimeException}_and {@link Error} but not on checked exceptions (business exceptions). See_{@link org.springframework.transaction.interceptor.DefaultTransactionAttribute#rollbackOn(Throwable)}_for a detailed explanation._<p>This is the preferred way to construct a rollback rule (in contrast to_{@link #rollbackForClassName}), matching the exception class and its subclasses._<p>Similar to {@link org.springframework.transaction.interceptor.RollbackRuleAttribute#RollbackRuleAttribute(Class clazz)}._@see #rollbackForClassName_@see org.springframework.transaction.interceptor.DefaultTransactionAttribute#rollbackOn(Throwable);Class<? extends Throwable>[] rollbackFor() default {}_;defines,zero,0,or,more,exception,link,class,classes,which,must,be,subclasses,of,link,throwable,indicating,which,exception,types,must,cause,a,transaction,rollback,p,by,default,a,transaction,will,be,rolling,back,on,link,runtime,exception,and,link,error,but,not,on,checked,exceptions,business,exceptions,see,link,org,springframework,transaction,interceptor,default,transaction,attribute,rollback,on,throwable,for,a,detailed,explanation,p,this,is,the,preferred,way,to,construct,a,rollback,rule,in,contrast,to,link,rollback,for,class,name,matching,the,exception,class,and,its,subclasses,p,similar,to,link,org,springframework,transaction,interceptor,rollback,rule,attribute,rollback,rule,attribute,class,clazz,see,rollback,for,class,name,see,org,springframework,transaction,interceptor,default,transaction,attribute,rollback,on,throwable;class,extends,throwable,rollback,for,default
Transactional -> String[] rollbackForClassName() default {}_;1328020251;Defines zero (0) or more exception names (for exceptions which must be a_subclass of {@link Throwable}), indicating which exception types must cause_a transaction rollback._<p>This can be a substring, with no wildcard support at present._A value of "ServletException" would match_{@link javax.servlet.ServletException} and subclasses, for example._<p><b>NB: </b>Consider carefully how specific the pattern is, and whether_to include package information (which isn't mandatory). For example,_"Exception" will match nearly anything, and will probably hide other rules._"java.lang.Exception" would be correct if "Exception" was meant to define_a rule for all checked exceptions. With more unusual {@link Exception}_names such as "BaseBusinessException" there is no need to use a FQN._<p>Similar to {@link org.springframework.transaction.interceptor.RollbackRuleAttribute#RollbackRuleAttribute(String exceptionName)};String[] rollbackForClassName() default {}_;defines,zero,0,or,more,exception,names,for,exceptions,which,must,be,a,subclass,of,link,throwable,indicating,which,exception,types,must,cause,a,transaction,rollback,p,this,can,be,a,substring,with,no,wildcard,support,at,present,a,value,of,servlet,exception,would,match,link,javax,servlet,servlet,exception,and,subclasses,for,example,p,b,nb,b,consider,carefully,how,specific,the,pattern,is,and,whether,to,include,package,information,which,isn,t,mandatory,for,example,exception,will,match,nearly,anything,and,will,probably,hide,other,rules,java,lang,exception,would,be,correct,if,exception,was,meant,to,define,a,rule,for,all,checked,exceptions,with,more,unusual,link,exception,names,such,as,base,business,exception,there,is,no,need,to,use,a,fqn,p,similar,to,link,org,springframework,transaction,interceptor,rollback,rule,attribute,rollback,rule,attribute,string,exception,name;string,rollback,for,class,name,default
Transactional -> String[] rollbackForClassName() default {}_;1356735495;Defines zero (0) or more exception names (for exceptions which must be a_subclass of {@link Throwable}), indicating which exception types must cause_a transaction rollback._<p>This can be a substring, with no wildcard support at present._A value of "ServletException" would match_{@link javax.servlet.ServletException} and subclasses, for example._<p><b>NB: </b>Consider carefully how specific the pattern is, and whether_to include package information (which isn't mandatory). For example,_"Exception" will match nearly anything, and will probably hide other rules._"java.lang.Exception" would be correct if "Exception" was meant to define_a rule for all checked exceptions. With more unusual {@link Exception}_names such as "BaseBusinessException" there is no need to use a FQN._<p>Similar to {@link org.springframework.transaction.interceptor.RollbackRuleAttribute#RollbackRuleAttribute(String exceptionName)};String[] rollbackForClassName() default {}_;defines,zero,0,or,more,exception,names,for,exceptions,which,must,be,a,subclass,of,link,throwable,indicating,which,exception,types,must,cause,a,transaction,rollback,p,this,can,be,a,substring,with,no,wildcard,support,at,present,a,value,of,servlet,exception,would,match,link,javax,servlet,servlet,exception,and,subclasses,for,example,p,b,nb,b,consider,carefully,how,specific,the,pattern,is,and,whether,to,include,package,information,which,isn,t,mandatory,for,example,exception,will,match,nearly,anything,and,will,probably,hide,other,rules,java,lang,exception,would,be,correct,if,exception,was,meant,to,define,a,rule,for,all,checked,exceptions,with,more,unusual,link,exception,names,such,as,base,business,exception,there,is,no,need,to,use,a,fqn,p,similar,to,link,org,springframework,transaction,interceptor,rollback,rule,attribute,rollback,rule,attribute,string,exception,name;string,rollback,for,class,name,default
Transactional -> String[] rollbackForClassName() default {}_;1434139184;Defines zero (0) or more exception names (for exceptions which must be a_subclass of {@link Throwable}), indicating which exception types must cause_a transaction rollback._<p>This can be a substring of a fully qualified class name, with no wildcard_support at present. For example, a value of {@code "ServletException"} would_match {@link javax.servlet.ServletException} and its subclasses._<p><b>NB:</b> Consider carefully how specific the pattern is and whether_to include package information (which isn't mandatory). For example,_{@code "Exception"} will match nearly anything and will probably hide other_rules. {@code "java.lang.Exception"} would be correct if {@code "Exception"}_were meant to define a rule for all checked exceptions. With more unusual_{@link Exception} names such as {@code "BaseBusinessException"} there is no_need to use a FQN._<p>Similar to {@link org.springframework.transaction.interceptor.RollbackRuleAttribute#RollbackRuleAttribute(String exceptionName)}_@see #rollbackFor;String[] rollbackForClassName() default {}_;defines,zero,0,or,more,exception,names,for,exceptions,which,must,be,a,subclass,of,link,throwable,indicating,which,exception,types,must,cause,a,transaction,rollback,p,this,can,be,a,substring,of,a,fully,qualified,class,name,with,no,wildcard,support,at,present,for,example,a,value,of,code,servlet,exception,would,match,link,javax,servlet,servlet,exception,and,its,subclasses,p,b,nb,b,consider,carefully,how,specific,the,pattern,is,and,whether,to,include,package,information,which,isn,t,mandatory,for,example,code,exception,will,match,nearly,anything,and,will,probably,hide,other,rules,code,java,lang,exception,would,be,correct,if,code,exception,were,meant,to,define,a,rule,for,all,checked,exceptions,with,more,unusual,link,exception,names,such,as,code,base,business,exception,there,is,no,need,to,use,a,fqn,p,similar,to,link,org,springframework,transaction,interceptor,rollback,rule,attribute,rollback,rule,attribute,string,exception,name,see,rollback,for;string,rollback,for,class,name,default
Transactional -> String[] rollbackForClassName() default {}_;1434141320;Defines zero (0) or more exception names (for exceptions which must be a_subclass of {@link Throwable}), indicating which exception types must cause_a transaction rollback._<p>This can be a substring of a fully qualified class name, with no wildcard_support at present. For example, a value of {@code "ServletException"} would_match {@link javax.servlet.ServletException} and its subclasses._<p><b>NB:</b> Consider carefully how specific the pattern is and whether_to include package information (which isn't mandatory). For example,_{@code "Exception"} will match nearly anything and will probably hide other_rules. {@code "java.lang.Exception"} would be correct if {@code "Exception"}_were meant to define a rule for all checked exceptions. With more unusual_{@link Exception} names such as {@code "BaseBusinessException"} there is no_need to use a FQN._<p>Similar to {@link org.springframework.transaction.interceptor.RollbackRuleAttribute#RollbackRuleAttribute(String exceptionName)}_@see #rollbackFor;String[] rollbackForClassName() default {}_;defines,zero,0,or,more,exception,names,for,exceptions,which,must,be,a,subclass,of,link,throwable,indicating,which,exception,types,must,cause,a,transaction,rollback,p,this,can,be,a,substring,of,a,fully,qualified,class,name,with,no,wildcard,support,at,present,for,example,a,value,of,code,servlet,exception,would,match,link,javax,servlet,servlet,exception,and,its,subclasses,p,b,nb,b,consider,carefully,how,specific,the,pattern,is,and,whether,to,include,package,information,which,isn,t,mandatory,for,example,code,exception,will,match,nearly,anything,and,will,probably,hide,other,rules,code,java,lang,exception,would,be,correct,if,code,exception,were,meant,to,define,a,rule,for,all,checked,exceptions,with,more,unusual,link,exception,names,such,as,code,base,business,exception,there,is,no,need,to,use,a,fqn,p,similar,to,link,org,springframework,transaction,interceptor,rollback,rule,attribute,rollback,rule,attribute,string,exception,name,see,rollback,for;string,rollback,for,class,name,default
Transactional -> String[] rollbackForClassName() default {}_;1438176426;Defines zero (0) or more exception names (for exceptions which must be a_subclass of {@link Throwable}), indicating which exception types must cause_a transaction rollback._<p>This can be a substring of a fully qualified class name, with no wildcard_support at present. For example, a value of {@code "ServletException"} would_match {@link javax.servlet.ServletException} and its subclasses._<p><b>NB:</b> Consider carefully how specific the pattern is and whether_to include package information (which isn't mandatory). For example,_{@code "Exception"} will match nearly anything and will probably hide other_rules. {@code "java.lang.Exception"} would be correct if {@code "Exception"}_were meant to define a rule for all checked exceptions. With more unusual_{@link Exception} names such as {@code "BaseBusinessException"} there is no_need to use a FQN._<p>Similar to {@link org.springframework.transaction.interceptor.RollbackRuleAttribute#RollbackRuleAttribute(String exceptionName)}_@see #rollbackFor;String[] rollbackForClassName() default {}_;defines,zero,0,or,more,exception,names,for,exceptions,which,must,be,a,subclass,of,link,throwable,indicating,which,exception,types,must,cause,a,transaction,rollback,p,this,can,be,a,substring,of,a,fully,qualified,class,name,with,no,wildcard,support,at,present,for,example,a,value,of,code,servlet,exception,would,match,link,javax,servlet,servlet,exception,and,its,subclasses,p,b,nb,b,consider,carefully,how,specific,the,pattern,is,and,whether,to,include,package,information,which,isn,t,mandatory,for,example,code,exception,will,match,nearly,anything,and,will,probably,hide,other,rules,code,java,lang,exception,would,be,correct,if,code,exception,were,meant,to,define,a,rule,for,all,checked,exceptions,with,more,unusual,link,exception,names,such,as,code,base,business,exception,there,is,no,need,to,use,a,fqn,p,similar,to,link,org,springframework,transaction,interceptor,rollback,rule,attribute,rollback,rule,attribute,string,exception,name,see,rollback,for;string,rollback,for,class,name,default
Transactional -> String[] rollbackForClassName() default {}_;1481292320;Defines zero (0) or more exception names (for exceptions which must be a_subclass of {@link Throwable}), indicating which exception types must cause_a transaction rollback._<p>This can be a substring of a fully qualified class name, with no wildcard_support at present. For example, a value of {@code "ServletException"} would_match {@code javax.servlet.ServletException} and its subclasses._<p><b>NB:</b> Consider carefully how specific the pattern is and whether_to include package information (which isn't mandatory). For example,_{@code "Exception"} will match nearly anything and will probably hide other_rules. {@code "java.lang.Exception"} would be correct if {@code "Exception"}_were meant to define a rule for all checked exceptions. With more unusual_{@link Exception} names such as {@code "BaseBusinessException"} there is no_need to use a FQN._<p>Similar to {@link org.springframework.transaction.interceptor.RollbackRuleAttribute#RollbackRuleAttribute(String exceptionName)}._@see #rollbackFor_@see org.springframework.transaction.interceptor.DefaultTransactionAttribute#rollbackOn(Throwable);String[] rollbackForClassName() default {}_;defines,zero,0,or,more,exception,names,for,exceptions,which,must,be,a,subclass,of,link,throwable,indicating,which,exception,types,must,cause,a,transaction,rollback,p,this,can,be,a,substring,of,a,fully,qualified,class,name,with,no,wildcard,support,at,present,for,example,a,value,of,code,servlet,exception,would,match,code,javax,servlet,servlet,exception,and,its,subclasses,p,b,nb,b,consider,carefully,how,specific,the,pattern,is,and,whether,to,include,package,information,which,isn,t,mandatory,for,example,code,exception,will,match,nearly,anything,and,will,probably,hide,other,rules,code,java,lang,exception,would,be,correct,if,code,exception,were,meant,to,define,a,rule,for,all,checked,exceptions,with,more,unusual,link,exception,names,such,as,code,base,business,exception,there,is,no,need,to,use,a,fqn,p,similar,to,link,org,springframework,transaction,interceptor,rollback,rule,attribute,rollback,rule,attribute,string,exception,name,see,rollback,for,see,org,springframework,transaction,interceptor,default,transaction,attribute,rollback,on,throwable;string,rollback,for,class,name,default
Transactional -> String[] rollbackForClassName() default {}_;1517867503;Defines zero (0) or more exception names (for exceptions which must be a_subclass of {@link Throwable}), indicating which exception types must cause_a transaction rollback._<p>This can be a substring of a fully qualified class name, with no wildcard_support at present. For example, a value of {@code "ServletException"} would_match {@code javax.servlet.ServletException} and its subclasses._<p><b>NB:</b> Consider carefully how specific the pattern is and whether_to include package information (which isn't mandatory). For example,_{@code "Exception"} will match nearly anything and will probably hide other_rules. {@code "java.lang.Exception"} would be correct if {@code "Exception"}_were meant to define a rule for all checked exceptions. With more unusual_{@link Exception} names such as {@code "BaseBusinessException"} there is no_need to use a FQN._<p>Similar to {@link org.springframework.transaction.interceptor.RollbackRuleAttribute#RollbackRuleAttribute(String exceptionName)}._@see #rollbackFor_@see org.springframework.transaction.interceptor.DefaultTransactionAttribute#rollbackOn(Throwable);String[] rollbackForClassName() default {}_;defines,zero,0,or,more,exception,names,for,exceptions,which,must,be,a,subclass,of,link,throwable,indicating,which,exception,types,must,cause,a,transaction,rollback,p,this,can,be,a,substring,of,a,fully,qualified,class,name,with,no,wildcard,support,at,present,for,example,a,value,of,code,servlet,exception,would,match,code,javax,servlet,servlet,exception,and,its,subclasses,p,b,nb,b,consider,carefully,how,specific,the,pattern,is,and,whether,to,include,package,information,which,isn,t,mandatory,for,example,code,exception,will,match,nearly,anything,and,will,probably,hide,other,rules,code,java,lang,exception,would,be,correct,if,code,exception,were,meant,to,define,a,rule,for,all,checked,exceptions,with,more,unusual,link,exception,names,such,as,code,base,business,exception,there,is,no,need,to,use,a,fqn,p,similar,to,link,org,springframework,transaction,interceptor,rollback,rule,attribute,rollback,rule,attribute,string,exception,name,see,rollback,for,see,org,springframework,transaction,interceptor,default,transaction,attribute,rollback,on,throwable;string,rollback,for,class,name,default
Transactional -> String[] rollbackForClassName() default {}_;1535712043;Defines zero (0) or more exception names (for exceptions which must be a_subclass of {@link Throwable}), indicating which exception types must cause_a transaction rollback._<p>This can be a substring of a fully qualified class name, with no wildcard_support at present. For example, a value of {@code "ServletException"} would_match {@code javax.servlet.ServletException} and its subclasses._<p><b>NB:</b> Consider carefully how specific the pattern is and whether_to include package information (which isn't mandatory). For example,_{@code "Exception"} will match nearly anything and will probably hide other_rules. {@code "java.lang.Exception"} would be correct if {@code "Exception"}_were meant to define a rule for all checked exceptions. With more unusual_{@link Exception} names such as {@code "BaseBusinessException"} there is no_need to use a FQN._<p>Similar to {@link org.springframework.transaction.interceptor.RollbackRuleAttribute#RollbackRuleAttribute(String exceptionName)}._@see #rollbackFor_@see org.springframework.transaction.interceptor.DefaultTransactionAttribute#rollbackOn(Throwable);String[] rollbackForClassName() default {}_;defines,zero,0,or,more,exception,names,for,exceptions,which,must,be,a,subclass,of,link,throwable,indicating,which,exception,types,must,cause,a,transaction,rollback,p,this,can,be,a,substring,of,a,fully,qualified,class,name,with,no,wildcard,support,at,present,for,example,a,value,of,code,servlet,exception,would,match,code,javax,servlet,servlet,exception,and,its,subclasses,p,b,nb,b,consider,carefully,how,specific,the,pattern,is,and,whether,to,include,package,information,which,isn,t,mandatory,for,example,code,exception,will,match,nearly,anything,and,will,probably,hide,other,rules,code,java,lang,exception,would,be,correct,if,code,exception,were,meant,to,define,a,rule,for,all,checked,exceptions,with,more,unusual,link,exception,names,such,as,code,base,business,exception,there,is,no,need,to,use,a,fqn,p,similar,to,link,org,springframework,transaction,interceptor,rollback,rule,attribute,rollback,rule,attribute,string,exception,name,see,rollback,for,see,org,springframework,transaction,interceptor,default,transaction,attribute,rollback,on,throwable;string,rollback,for,class,name,default
Transactional -> String[] rollbackForClassName() default {}_;1541442754;Defines zero (0) or more exception names (for exceptions which must be a_subclass of {@link Throwable}), indicating which exception types must cause_a transaction rollback._<p>This can be a substring of a fully qualified class name, with no wildcard_support at present. For example, a value of {@code "ServletException"} would_match {@code javax.servlet.ServletException} and its subclasses._<p><b>NB:</b> Consider carefully how specific the pattern is and whether_to include package information (which isn't mandatory). For example,_{@code "Exception"} will match nearly anything and will probably hide other_rules. {@code "java.lang.Exception"} would be correct if {@code "Exception"}_were meant to define a rule for all checked exceptions. With more unusual_{@link Exception} names such as {@code "BaseBusinessException"} there is no_need to use a FQN._<p>Similar to {@link org.springframework.transaction.interceptor.RollbackRuleAttribute#RollbackRuleAttribute(String exceptionName)}._@see #rollbackFor_@see org.springframework.transaction.interceptor.DefaultTransactionAttribute#rollbackOn(Throwable);String[] rollbackForClassName() default {}_;defines,zero,0,or,more,exception,names,for,exceptions,which,must,be,a,subclass,of,link,throwable,indicating,which,exception,types,must,cause,a,transaction,rollback,p,this,can,be,a,substring,of,a,fully,qualified,class,name,with,no,wildcard,support,at,present,for,example,a,value,of,code,servlet,exception,would,match,code,javax,servlet,servlet,exception,and,its,subclasses,p,b,nb,b,consider,carefully,how,specific,the,pattern,is,and,whether,to,include,package,information,which,isn,t,mandatory,for,example,code,exception,will,match,nearly,anything,and,will,probably,hide,other,rules,code,java,lang,exception,would,be,correct,if,code,exception,were,meant,to,define,a,rule,for,all,checked,exceptions,with,more,unusual,link,exception,names,such,as,code,base,business,exception,there,is,no,need,to,use,a,fqn,p,similar,to,link,org,springframework,transaction,interceptor,rollback,rule,attribute,rollback,rule,attribute,string,exception,name,see,rollback,for,see,org,springframework,transaction,interceptor,default,transaction,attribute,rollback,on,throwable;string,rollback,for,class,name,default
Transactional -> Class<? extends Throwable>[] noRollbackFor() default {}_;1328020251;Defines zero (0) or more exception {@link Class Classes}, which must be a_subclass of {@link Throwable}, indicating which exception types must <b>not</b>_cause a transaction rollback._<p>This is the preferred way to construct a rollback rule, matching the_exception class and subclasses._<p>Similar to {@link org.springframework.transaction.interceptor.NoRollbackRuleAttribute#NoRollbackRuleAttribute(Class clazz)};Class<? extends Throwable>[] noRollbackFor() default {}_;defines,zero,0,or,more,exception,link,class,classes,which,must,be,a,subclass,of,link,throwable,indicating,which,exception,types,must,b,not,b,cause,a,transaction,rollback,p,this,is,the,preferred,way,to,construct,a,rollback,rule,matching,the,exception,class,and,subclasses,p,similar,to,link,org,springframework,transaction,interceptor,no,rollback,rule,attribute,no,rollback,rule,attribute,class,clazz;class,extends,throwable,no,rollback,for,default
Transactional -> Class<? extends Throwable>[] noRollbackFor() default {}_;1356735495;Defines zero (0) or more exception {@link Class Classes}, which must be a_subclass of {@link Throwable}, indicating which exception types must <b>not</b>_cause a transaction rollback._<p>This is the preferred way to construct a rollback rule, matching the_exception class and subclasses._<p>Similar to {@link org.springframework.transaction.interceptor.NoRollbackRuleAttribute#NoRollbackRuleAttribute(Class clazz)};Class<? extends Throwable>[] noRollbackFor() default {}_;defines,zero,0,or,more,exception,link,class,classes,which,must,be,a,subclass,of,link,throwable,indicating,which,exception,types,must,b,not,b,cause,a,transaction,rollback,p,this,is,the,preferred,way,to,construct,a,rollback,rule,matching,the,exception,class,and,subclasses,p,similar,to,link,org,springframework,transaction,interceptor,no,rollback,rule,attribute,no,rollback,rule,attribute,class,clazz;class,extends,throwable,no,rollback,for,default
Transactional -> Class<? extends Throwable>[] noRollbackFor() default {}_;1434139184;Defines zero (0) or more exception {@link Class Classes}, which must be_subclasses of {@link Throwable}, indicating which exception types must_<b>not</b> cause a transaction rollback._<p>This is the preferred way to construct a rollback rule (in contrast_to {@link #noRollbackForClassName}), matching the exception class and_its subclasses._<p>Similar to {@link org.springframework.transaction.interceptor.NoRollbackRuleAttribute#NoRollbackRuleAttribute(Class clazz)}_@see #noRollbackForClassName;Class<? extends Throwable>[] noRollbackFor() default {}_;defines,zero,0,or,more,exception,link,class,classes,which,must,be,subclasses,of,link,throwable,indicating,which,exception,types,must,b,not,b,cause,a,transaction,rollback,p,this,is,the,preferred,way,to,construct,a,rollback,rule,in,contrast,to,link,no,rollback,for,class,name,matching,the,exception,class,and,its,subclasses,p,similar,to,link,org,springframework,transaction,interceptor,no,rollback,rule,attribute,no,rollback,rule,attribute,class,clazz,see,no,rollback,for,class,name;class,extends,throwable,no,rollback,for,default
Transactional -> Class<? extends Throwable>[] noRollbackFor() default {}_;1434141320;Defines zero (0) or more exception {@link Class Classes}, which must be_subclasses of {@link Throwable}, indicating which exception types must_<b>not</b> cause a transaction rollback._<p>This is the preferred way to construct a rollback rule (in contrast_to {@link #noRollbackForClassName}), matching the exception class and_its subclasses._<p>Similar to {@link org.springframework.transaction.interceptor.NoRollbackRuleAttribute#NoRollbackRuleAttribute(Class clazz)}_@see #noRollbackForClassName;Class<? extends Throwable>[] noRollbackFor() default {}_;defines,zero,0,or,more,exception,link,class,classes,which,must,be,subclasses,of,link,throwable,indicating,which,exception,types,must,b,not,b,cause,a,transaction,rollback,p,this,is,the,preferred,way,to,construct,a,rollback,rule,in,contrast,to,link,no,rollback,for,class,name,matching,the,exception,class,and,its,subclasses,p,similar,to,link,org,springframework,transaction,interceptor,no,rollback,rule,attribute,no,rollback,rule,attribute,class,clazz,see,no,rollback,for,class,name;class,extends,throwable,no,rollback,for,default
Transactional -> Class<? extends Throwable>[] noRollbackFor() default {}_;1438176426;Defines zero (0) or more exception {@link Class Classes}, which must be_subclasses of {@link Throwable}, indicating which exception types must_<b>not</b> cause a transaction rollback._<p>This is the preferred way to construct a rollback rule (in contrast_to {@link #noRollbackForClassName}), matching the exception class and_its subclasses._<p>Similar to {@link org.springframework.transaction.interceptor.NoRollbackRuleAttribute#NoRollbackRuleAttribute(Class clazz)}_@see #noRollbackForClassName;Class<? extends Throwable>[] noRollbackFor() default {}_;defines,zero,0,or,more,exception,link,class,classes,which,must,be,subclasses,of,link,throwable,indicating,which,exception,types,must,b,not,b,cause,a,transaction,rollback,p,this,is,the,preferred,way,to,construct,a,rollback,rule,in,contrast,to,link,no,rollback,for,class,name,matching,the,exception,class,and,its,subclasses,p,similar,to,link,org,springframework,transaction,interceptor,no,rollback,rule,attribute,no,rollback,rule,attribute,class,clazz,see,no,rollback,for,class,name;class,extends,throwable,no,rollback,for,default
Transactional -> Class<? extends Throwable>[] noRollbackFor() default {}_;1481292320;Defines zero (0) or more exception {@link Class Classes}, which must be_subclasses of {@link Throwable}, indicating which exception types must_<b>not</b> cause a transaction rollback._<p>This is the preferred way to construct a rollback rule (in contrast_to {@link #noRollbackForClassName}), matching the exception class and_its subclasses._<p>Similar to {@link org.springframework.transaction.interceptor.NoRollbackRuleAttribute#NoRollbackRuleAttribute(Class clazz)}._@see #noRollbackForClassName_@see org.springframework.transaction.interceptor.DefaultTransactionAttribute#rollbackOn(Throwable);Class<? extends Throwable>[] noRollbackFor() default {}_;defines,zero,0,or,more,exception,link,class,classes,which,must,be,subclasses,of,link,throwable,indicating,which,exception,types,must,b,not,b,cause,a,transaction,rollback,p,this,is,the,preferred,way,to,construct,a,rollback,rule,in,contrast,to,link,no,rollback,for,class,name,matching,the,exception,class,and,its,subclasses,p,similar,to,link,org,springframework,transaction,interceptor,no,rollback,rule,attribute,no,rollback,rule,attribute,class,clazz,see,no,rollback,for,class,name,see,org,springframework,transaction,interceptor,default,transaction,attribute,rollback,on,throwable;class,extends,throwable,no,rollback,for,default
Transactional -> Class<? extends Throwable>[] noRollbackFor() default {}_;1517867503;Defines zero (0) or more exception {@link Class Classes}, which must be_subclasses of {@link Throwable}, indicating which exception types must_<b>not</b> cause a transaction rollback._<p>This is the preferred way to construct a rollback rule (in contrast_to {@link #noRollbackForClassName}), matching the exception class and_its subclasses._<p>Similar to {@link org.springframework.transaction.interceptor.NoRollbackRuleAttribute#NoRollbackRuleAttribute(Class clazz)}._@see #noRollbackForClassName_@see org.springframework.transaction.interceptor.DefaultTransactionAttribute#rollbackOn(Throwable);Class<? extends Throwable>[] noRollbackFor() default {}_;defines,zero,0,or,more,exception,link,class,classes,which,must,be,subclasses,of,link,throwable,indicating,which,exception,types,must,b,not,b,cause,a,transaction,rollback,p,this,is,the,preferred,way,to,construct,a,rollback,rule,in,contrast,to,link,no,rollback,for,class,name,matching,the,exception,class,and,its,subclasses,p,similar,to,link,org,springframework,transaction,interceptor,no,rollback,rule,attribute,no,rollback,rule,attribute,class,clazz,see,no,rollback,for,class,name,see,org,springframework,transaction,interceptor,default,transaction,attribute,rollback,on,throwable;class,extends,throwable,no,rollback,for,default
Transactional -> Class<? extends Throwable>[] noRollbackFor() default {}_;1535712043;Defines zero (0) or more exception {@link Class Classes}, which must be_subclasses of {@link Throwable}, indicating which exception types must_<b>not</b> cause a transaction rollback._<p>This is the preferred way to construct a rollback rule (in contrast_to {@link #noRollbackForClassName}), matching the exception class and_its subclasses._<p>Similar to {@link org.springframework.transaction.interceptor.NoRollbackRuleAttribute#NoRollbackRuleAttribute(Class clazz)}._@see #noRollbackForClassName_@see org.springframework.transaction.interceptor.DefaultTransactionAttribute#rollbackOn(Throwable);Class<? extends Throwable>[] noRollbackFor() default {}_;defines,zero,0,or,more,exception,link,class,classes,which,must,be,subclasses,of,link,throwable,indicating,which,exception,types,must,b,not,b,cause,a,transaction,rollback,p,this,is,the,preferred,way,to,construct,a,rollback,rule,in,contrast,to,link,no,rollback,for,class,name,matching,the,exception,class,and,its,subclasses,p,similar,to,link,org,springframework,transaction,interceptor,no,rollback,rule,attribute,no,rollback,rule,attribute,class,clazz,see,no,rollback,for,class,name,see,org,springframework,transaction,interceptor,default,transaction,attribute,rollback,on,throwable;class,extends,throwable,no,rollback,for,default
Transactional -> Class<? extends Throwable>[] noRollbackFor() default {}_;1541442754;Defines zero (0) or more exception {@link Class Classes}, which must be_subclasses of {@link Throwable}, indicating which exception types must_<b>not</b> cause a transaction rollback._<p>This is the preferred way to construct a rollback rule (in contrast_to {@link #noRollbackForClassName}), matching the exception class and_its subclasses._<p>Similar to {@link org.springframework.transaction.interceptor.NoRollbackRuleAttribute#NoRollbackRuleAttribute(Class clazz)}._@see #noRollbackForClassName_@see org.springframework.transaction.interceptor.DefaultTransactionAttribute#rollbackOn(Throwable);Class<? extends Throwable>[] noRollbackFor() default {}_;defines,zero,0,or,more,exception,link,class,classes,which,must,be,subclasses,of,link,throwable,indicating,which,exception,types,must,b,not,b,cause,a,transaction,rollback,p,this,is,the,preferred,way,to,construct,a,rollback,rule,in,contrast,to,link,no,rollback,for,class,name,matching,the,exception,class,and,its,subclasses,p,similar,to,link,org,springframework,transaction,interceptor,no,rollback,rule,attribute,no,rollback,rule,attribute,class,clazz,see,no,rollback,for,class,name,see,org,springframework,transaction,interceptor,default,transaction,attribute,rollback,on,throwable;class,extends,throwable,no,rollback,for,default
Transactional -> Isolation isolation() default Isolation.DEFAULT_;1328020251;The transaction isolation level._Defaults to {@link Isolation#DEFAULT}._@see org.springframework.transaction.interceptor.TransactionAttribute#getIsolationLevel();Isolation isolation() default Isolation.DEFAULT_;the,transaction,isolation,level,defaults,to,link,isolation,default,see,org,springframework,transaction,interceptor,transaction,attribute,get,isolation,level;isolation,isolation,default,isolation,default
Transactional -> Isolation isolation() default Isolation.DEFAULT_;1356735495;The transaction isolation level._Defaults to {@link Isolation#DEFAULT}._@see org.springframework.transaction.interceptor.TransactionAttribute#getIsolationLevel();Isolation isolation() default Isolation.DEFAULT_;the,transaction,isolation,level,defaults,to,link,isolation,default,see,org,springframework,transaction,interceptor,transaction,attribute,get,isolation,level;isolation,isolation,default,isolation,default
Transactional -> Isolation isolation() default Isolation.DEFAULT_;1434139184;The transaction isolation level._<p>Defaults to {@link Isolation#DEFAULT}._@see org.springframework.transaction.interceptor.TransactionAttribute#getIsolationLevel();Isolation isolation() default Isolation.DEFAULT_;the,transaction,isolation,level,p,defaults,to,link,isolation,default,see,org,springframework,transaction,interceptor,transaction,attribute,get,isolation,level;isolation,isolation,default,isolation,default
Transactional -> Isolation isolation() default Isolation.DEFAULT_;1434141320;The transaction isolation level._<p>Defaults to {@link Isolation#DEFAULT}._@see org.springframework.transaction.interceptor.TransactionAttribute#getIsolationLevel();Isolation isolation() default Isolation.DEFAULT_;the,transaction,isolation,level,p,defaults,to,link,isolation,default,see,org,springframework,transaction,interceptor,transaction,attribute,get,isolation,level;isolation,isolation,default,isolation,default
Transactional -> Isolation isolation() default Isolation.DEFAULT_;1438176426;The transaction isolation level._<p>Defaults to {@link Isolation#DEFAULT}._@see org.springframework.transaction.interceptor.TransactionAttribute#getIsolationLevel();Isolation isolation() default Isolation.DEFAULT_;the,transaction,isolation,level,p,defaults,to,link,isolation,default,see,org,springframework,transaction,interceptor,transaction,attribute,get,isolation,level;isolation,isolation,default,isolation,default
Transactional -> Isolation isolation() default Isolation.DEFAULT_;1481292320;The transaction isolation level._<p>Defaults to {@link Isolation#DEFAULT}._@see org.springframework.transaction.interceptor.TransactionAttribute#getIsolationLevel();Isolation isolation() default Isolation.DEFAULT_;the,transaction,isolation,level,p,defaults,to,link,isolation,default,see,org,springframework,transaction,interceptor,transaction,attribute,get,isolation,level;isolation,isolation,default,isolation,default
Transactional -> Isolation isolation() default Isolation.DEFAULT_;1517867503;The transaction isolation level._<p>Defaults to {@link Isolation#DEFAULT}._<p>Exclusively designed for use with {@link Propagation#REQUIRED} or_{@link Propagation#REQUIRES_NEW} since it only applies to newly started_transactions. Consider switching the "validateExistingTransactions" flag to_"true" on your transaction manager if you'd like isolation level declarations_to get rejected when participating in an existing transaction with a different_isolation level._@see org.springframework.transaction.interceptor.TransactionAttribute#getIsolationLevel()_@see org.springframework.transaction.support.AbstractPlatformTransactionManager#setValidateExistingTransaction;Isolation isolation() default Isolation.DEFAULT_;the,transaction,isolation,level,p,defaults,to,link,isolation,default,p,exclusively,designed,for,use,with,link,propagation,required,or,link,propagation,since,it,only,applies,to,newly,started,transactions,consider,switching,the,validate,existing,transactions,flag,to,true,on,your,transaction,manager,if,you,d,like,isolation,level,declarations,to,get,rejected,when,participating,in,an,existing,transaction,with,a,different,isolation,level,see,org,springframework,transaction,interceptor,transaction,attribute,get,isolation,level,see,org,springframework,transaction,support,abstract,platform,transaction,manager,set,validate,existing,transaction;isolation,isolation,default,isolation,default
Transactional -> Isolation isolation() default Isolation.DEFAULT_;1535712043;The transaction isolation level._<p>Defaults to {@link Isolation#DEFAULT}._<p>Exclusively designed for use with {@link Propagation#REQUIRED} or_{@link Propagation#REQUIRES_NEW} since it only applies to newly started_transactions. Consider switching the "validateExistingTransactions" flag to_"true" on your transaction manager if you'd like isolation level declarations_to get rejected when participating in an existing transaction with a different_isolation level._@see org.springframework.transaction.interceptor.TransactionAttribute#getIsolationLevel()_@see org.springframework.transaction.support.AbstractPlatformTransactionManager#setValidateExistingTransaction;Isolation isolation() default Isolation.DEFAULT_;the,transaction,isolation,level,p,defaults,to,link,isolation,default,p,exclusively,designed,for,use,with,link,propagation,required,or,link,propagation,since,it,only,applies,to,newly,started,transactions,consider,switching,the,validate,existing,transactions,flag,to,true,on,your,transaction,manager,if,you,d,like,isolation,level,declarations,to,get,rejected,when,participating,in,an,existing,transaction,with,a,different,isolation,level,see,org,springframework,transaction,interceptor,transaction,attribute,get,isolation,level,see,org,springframework,transaction,support,abstract,platform,transaction,manager,set,validate,existing,transaction;isolation,isolation,default,isolation,default
Transactional -> Isolation isolation() default Isolation.DEFAULT_;1541442754;The transaction isolation level._<p>Defaults to {@link Isolation#DEFAULT}._<p>Exclusively designed for use with {@link Propagation#REQUIRED} or_{@link Propagation#REQUIRES_NEW} since it only applies to newly started_transactions. Consider switching the "validateExistingTransactions" flag to_"true" on your transaction manager if you'd like isolation level declarations_to get rejected when participating in an existing transaction with a different_isolation level._@see org.springframework.transaction.interceptor.TransactionAttribute#getIsolationLevel()_@see org.springframework.transaction.support.AbstractPlatformTransactionManager#setValidateExistingTransaction;Isolation isolation() default Isolation.DEFAULT_;the,transaction,isolation,level,p,defaults,to,link,isolation,default,p,exclusively,designed,for,use,with,link,propagation,required,or,link,propagation,since,it,only,applies,to,newly,started,transactions,consider,switching,the,validate,existing,transactions,flag,to,true,on,your,transaction,manager,if,you,d,like,isolation,level,declarations,to,get,rejected,when,participating,in,an,existing,transaction,with,a,different,isolation,level,see,org,springframework,transaction,interceptor,transaction,attribute,get,isolation,level,see,org,springframework,transaction,support,abstract,platform,transaction,manager,set,validate,existing,transaction;isolation,isolation,default,isolation,default
Transactional -> boolean readOnly() default false_;1328020251;<code>true</code> if the transaction is read-only._Defaults to <code>false</code>._<p>This just serves as a hint for the actual transaction subsystem__it will <i>not necessarily</i> cause failure of write access attempts._A transaction manager which cannot interpret the read-only hint will_<i>not</i> throw an exception when asked for a read-only transaction._@see org.springframework.transaction.interceptor.TransactionAttribute#isReadOnly();boolean readOnly() default false_;code,true,code,if,the,transaction,is,read,only,defaults,to,code,false,code,p,this,just,serves,as,a,hint,for,the,actual,transaction,subsystem,it,will,i,not,necessarily,i,cause,failure,of,write,access,attempts,a,transaction,manager,which,cannot,interpret,the,read,only,hint,will,i,not,i,throw,an,exception,when,asked,for,a,read,only,transaction,see,org,springframework,transaction,interceptor,transaction,attribute,is,read,only;boolean,read,only,default,false
Transactional -> boolean readOnly() default false_;1356735495;{@code true} if the transaction is read-only._Defaults to {@code false}._<p>This just serves as a hint for the actual transaction subsystem__it will <i>not necessarily</i> cause failure of write access attempts._A transaction manager which cannot interpret the read-only hint will_<i>not</i> throw an exception when asked for a read-only transaction._@see org.springframework.transaction.interceptor.TransactionAttribute#isReadOnly();boolean readOnly() default false_;code,true,if,the,transaction,is,read,only,defaults,to,code,false,p,this,just,serves,as,a,hint,for,the,actual,transaction,subsystem,it,will,i,not,necessarily,i,cause,failure,of,write,access,attempts,a,transaction,manager,which,cannot,interpret,the,read,only,hint,will,i,not,i,throw,an,exception,when,asked,for,a,read,only,transaction,see,org,springframework,transaction,interceptor,transaction,attribute,is,read,only;boolean,read,only,default,false
Transactional -> boolean readOnly() default false_;1434139184;{@code true} if the transaction is read-only._<p>Defaults to {@code false}._<p>This just serves as a hint for the actual transaction subsystem__it will <i>not necessarily</i> cause failure of write access attempts._A transaction manager which cannot interpret the read-only hint will_<i>not</i> throw an exception when asked for a read-only transaction._@see org.springframework.transaction.interceptor.TransactionAttribute#isReadOnly();boolean readOnly() default false_;code,true,if,the,transaction,is,read,only,p,defaults,to,code,false,p,this,just,serves,as,a,hint,for,the,actual,transaction,subsystem,it,will,i,not,necessarily,i,cause,failure,of,write,access,attempts,a,transaction,manager,which,cannot,interpret,the,read,only,hint,will,i,not,i,throw,an,exception,when,asked,for,a,read,only,transaction,see,org,springframework,transaction,interceptor,transaction,attribute,is,read,only;boolean,read,only,default,false
Transactional -> boolean readOnly() default false_;1434141320;{@code true} if the transaction is read-only._<p>Defaults to {@code false}._<p>This just serves as a hint for the actual transaction subsystem__it will <i>not necessarily</i> cause failure of write access attempts._A transaction manager which cannot interpret the read-only hint will_<i>not</i> throw an exception when asked for a read-only transaction._@see org.springframework.transaction.interceptor.TransactionAttribute#isReadOnly();boolean readOnly() default false_;code,true,if,the,transaction,is,read,only,p,defaults,to,code,false,p,this,just,serves,as,a,hint,for,the,actual,transaction,subsystem,it,will,i,not,necessarily,i,cause,failure,of,write,access,attempts,a,transaction,manager,which,cannot,interpret,the,read,only,hint,will,i,not,i,throw,an,exception,when,asked,for,a,read,only,transaction,see,org,springframework,transaction,interceptor,transaction,attribute,is,read,only;boolean,read,only,default,false
Transactional -> boolean readOnly() default false_;1438176426;{@code true} if the transaction is read-only._<p>Defaults to {@code false}._<p>This just serves as a hint for the actual transaction subsystem__it will <i>not necessarily</i> cause failure of write access attempts._A transaction manager which cannot interpret the read-only hint will_<i>not</i> throw an exception when asked for a read-only transaction._@see org.springframework.transaction.interceptor.TransactionAttribute#isReadOnly();boolean readOnly() default false_;code,true,if,the,transaction,is,read,only,p,defaults,to,code,false,p,this,just,serves,as,a,hint,for,the,actual,transaction,subsystem,it,will,i,not,necessarily,i,cause,failure,of,write,access,attempts,a,transaction,manager,which,cannot,interpret,the,read,only,hint,will,i,not,i,throw,an,exception,when,asked,for,a,read,only,transaction,see,org,springframework,transaction,interceptor,transaction,attribute,is,read,only;boolean,read,only,default,false
Transactional -> boolean readOnly() default false_;1481292320;{@code true} if the transaction is read-only._<p>Defaults to {@code false}._<p>This just serves as a hint for the actual transaction subsystem__it will <i>not necessarily</i> cause failure of write access attempts._A transaction manager which cannot interpret the read-only hint will_<i>not</i> throw an exception when asked for a read-only transaction_but rather silently ignore the hint._@see org.springframework.transaction.interceptor.TransactionAttribute#isReadOnly();boolean readOnly() default false_;code,true,if,the,transaction,is,read,only,p,defaults,to,code,false,p,this,just,serves,as,a,hint,for,the,actual,transaction,subsystem,it,will,i,not,necessarily,i,cause,failure,of,write,access,attempts,a,transaction,manager,which,cannot,interpret,the,read,only,hint,will,i,not,i,throw,an,exception,when,asked,for,a,read,only,transaction,but,rather,silently,ignore,the,hint,see,org,springframework,transaction,interceptor,transaction,attribute,is,read,only;boolean,read,only,default,false
Transactional -> boolean readOnly() default false_;1517867503;A boolean flag that can be set to {@code true} if the transaction is_effectively read-only, allowing for corresponding optimizations at runtime._<p>Defaults to {@code false}._<p>This just serves as a hint for the actual transaction subsystem__it will <i>not necessarily</i> cause failure of write access attempts._A transaction manager which cannot interpret the read-only hint will_<i>not</i> throw an exception when asked for a read-only transaction_but rather silently ignore the hint._@see org.springframework.transaction.interceptor.TransactionAttribute#isReadOnly()_@see org.springframework.transaction.support.TransactionSynchronizationManager#isCurrentTransactionReadOnly();boolean readOnly() default false_;a,boolean,flag,that,can,be,set,to,code,true,if,the,transaction,is,effectively,read,only,allowing,for,corresponding,optimizations,at,runtime,p,defaults,to,code,false,p,this,just,serves,as,a,hint,for,the,actual,transaction,subsystem,it,will,i,not,necessarily,i,cause,failure,of,write,access,attempts,a,transaction,manager,which,cannot,interpret,the,read,only,hint,will,i,not,i,throw,an,exception,when,asked,for,a,read,only,transaction,but,rather,silently,ignore,the,hint,see,org,springframework,transaction,interceptor,transaction,attribute,is,read,only,see,org,springframework,transaction,support,transaction,synchronization,manager,is,current,transaction,read,only;boolean,read,only,default,false
Transactional -> boolean readOnly() default false_;1535712043;A boolean flag that can be set to {@code true} if the transaction is_effectively read-only, allowing for corresponding optimizations at runtime._<p>Defaults to {@code false}._<p>This just serves as a hint for the actual transaction subsystem__it will <i>not necessarily</i> cause failure of write access attempts._A transaction manager which cannot interpret the read-only hint will_<i>not</i> throw an exception when asked for a read-only transaction_but rather silently ignore the hint._@see org.springframework.transaction.interceptor.TransactionAttribute#isReadOnly()_@see org.springframework.transaction.support.TransactionSynchronizationManager#isCurrentTransactionReadOnly();boolean readOnly() default false_;a,boolean,flag,that,can,be,set,to,code,true,if,the,transaction,is,effectively,read,only,allowing,for,corresponding,optimizations,at,runtime,p,defaults,to,code,false,p,this,just,serves,as,a,hint,for,the,actual,transaction,subsystem,it,will,i,not,necessarily,i,cause,failure,of,write,access,attempts,a,transaction,manager,which,cannot,interpret,the,read,only,hint,will,i,not,i,throw,an,exception,when,asked,for,a,read,only,transaction,but,rather,silently,ignore,the,hint,see,org,springframework,transaction,interceptor,transaction,attribute,is,read,only,see,org,springframework,transaction,support,transaction,synchronization,manager,is,current,transaction,read,only;boolean,read,only,default,false
Transactional -> boolean readOnly() default false_;1541442754;A boolean flag that can be set to {@code true} if the transaction is_effectively read-only, allowing for corresponding optimizations at runtime._<p>Defaults to {@code false}._<p>This just serves as a hint for the actual transaction subsystem__it will <i>not necessarily</i> cause failure of write access attempts._A transaction manager which cannot interpret the read-only hint will_<i>not</i> throw an exception when asked for a read-only transaction_but rather silently ignore the hint._@see org.springframework.transaction.interceptor.TransactionAttribute#isReadOnly()_@see org.springframework.transaction.support.TransactionSynchronizationManager#isCurrentTransactionReadOnly();boolean readOnly() default false_;a,boolean,flag,that,can,be,set,to,code,true,if,the,transaction,is,effectively,read,only,allowing,for,corresponding,optimizations,at,runtime,p,defaults,to,code,false,p,this,just,serves,as,a,hint,for,the,actual,transaction,subsystem,it,will,i,not,necessarily,i,cause,failure,of,write,access,attempts,a,transaction,manager,which,cannot,interpret,the,read,only,hint,will,i,not,i,throw,an,exception,when,asked,for,a,read,only,transaction,but,rather,silently,ignore,the,hint,see,org,springframework,transaction,interceptor,transaction,attribute,is,read,only,see,org,springframework,transaction,support,transaction,synchronization,manager,is,current,transaction,read,only;boolean,read,only,default,false
Transactional -> String[] noRollbackForClassName() default {}_;1328020251;Defines zero (0) or more exception names (for exceptions which must be a_subclass of {@link Throwable}) indicating which exception types must <b>not</b>_cause a transaction rollback._<p>See the description of {@link #rollbackForClassName()} for more info on how_the specified names are treated._<p>Similar to {@link org.springframework.transaction.interceptor.NoRollbackRuleAttribute#NoRollbackRuleAttribute(String exceptionName)};String[] noRollbackForClassName() default {}_;defines,zero,0,or,more,exception,names,for,exceptions,which,must,be,a,subclass,of,link,throwable,indicating,which,exception,types,must,b,not,b,cause,a,transaction,rollback,p,see,the,description,of,link,rollback,for,class,name,for,more,info,on,how,the,specified,names,are,treated,p,similar,to,link,org,springframework,transaction,interceptor,no,rollback,rule,attribute,no,rollback,rule,attribute,string,exception,name;string,no,rollback,for,class,name,default
Transactional -> String[] noRollbackForClassName() default {}_;1356735495;Defines zero (0) or more exception names (for exceptions which must be a_subclass of {@link Throwable}) indicating which exception types must <b>not</b>_cause a transaction rollback._<p>See the description of {@link #rollbackForClassName()} for more info on how_the specified names are treated._<p>Similar to {@link org.springframework.transaction.interceptor.NoRollbackRuleAttribute#NoRollbackRuleAttribute(String exceptionName)};String[] noRollbackForClassName() default {}_;defines,zero,0,or,more,exception,names,for,exceptions,which,must,be,a,subclass,of,link,throwable,indicating,which,exception,types,must,b,not,b,cause,a,transaction,rollback,p,see,the,description,of,link,rollback,for,class,name,for,more,info,on,how,the,specified,names,are,treated,p,similar,to,link,org,springframework,transaction,interceptor,no,rollback,rule,attribute,no,rollback,rule,attribute,string,exception,name;string,no,rollback,for,class,name,default
Transactional -> String[] noRollbackForClassName() default {}_;1434139184;Defines zero (0) or more exception names (for exceptions which must be a_subclass of {@link Throwable}) indicating which exception types must <b>not</b>_cause a transaction rollback._<p>See the description of {@link #rollbackForClassName} for further_information on how the specified names are treated._<p>Similar to {@link org.springframework.transaction.interceptor.NoRollbackRuleAttribute#NoRollbackRuleAttribute(String exceptionName)}_@see #noRollbackFor;String[] noRollbackForClassName() default {}_;defines,zero,0,or,more,exception,names,for,exceptions,which,must,be,a,subclass,of,link,throwable,indicating,which,exception,types,must,b,not,b,cause,a,transaction,rollback,p,see,the,description,of,link,rollback,for,class,name,for,further,information,on,how,the,specified,names,are,treated,p,similar,to,link,org,springframework,transaction,interceptor,no,rollback,rule,attribute,no,rollback,rule,attribute,string,exception,name,see,no,rollback,for;string,no,rollback,for,class,name,default
Transactional -> String[] noRollbackForClassName() default {}_;1434141320;Defines zero (0) or more exception names (for exceptions which must be a_subclass of {@link Throwable}) indicating which exception types must <b>not</b>_cause a transaction rollback._<p>See the description of {@link #rollbackForClassName} for further_information on how the specified names are treated._<p>Similar to {@link org.springframework.transaction.interceptor.NoRollbackRuleAttribute#NoRollbackRuleAttribute(String exceptionName)}_@see #noRollbackFor;String[] noRollbackForClassName() default {}_;defines,zero,0,or,more,exception,names,for,exceptions,which,must,be,a,subclass,of,link,throwable,indicating,which,exception,types,must,b,not,b,cause,a,transaction,rollback,p,see,the,description,of,link,rollback,for,class,name,for,further,information,on,how,the,specified,names,are,treated,p,similar,to,link,org,springframework,transaction,interceptor,no,rollback,rule,attribute,no,rollback,rule,attribute,string,exception,name,see,no,rollback,for;string,no,rollback,for,class,name,default
Transactional -> String[] noRollbackForClassName() default {}_;1438176426;Defines zero (0) or more exception names (for exceptions which must be a_subclass of {@link Throwable}) indicating which exception types must <b>not</b>_cause a transaction rollback._<p>See the description of {@link #rollbackForClassName} for further_information on how the specified names are treated._<p>Similar to {@link org.springframework.transaction.interceptor.NoRollbackRuleAttribute#NoRollbackRuleAttribute(String exceptionName)}_@see #noRollbackFor;String[] noRollbackForClassName() default {}_;defines,zero,0,or,more,exception,names,for,exceptions,which,must,be,a,subclass,of,link,throwable,indicating,which,exception,types,must,b,not,b,cause,a,transaction,rollback,p,see,the,description,of,link,rollback,for,class,name,for,further,information,on,how,the,specified,names,are,treated,p,similar,to,link,org,springframework,transaction,interceptor,no,rollback,rule,attribute,no,rollback,rule,attribute,string,exception,name,see,no,rollback,for;string,no,rollback,for,class,name,default
Transactional -> String[] noRollbackForClassName() default {}_;1481292320;Defines zero (0) or more exception names (for exceptions which must be a_subclass of {@link Throwable}) indicating which exception types must <b>not</b>_cause a transaction rollback._<p>See the description of {@link #rollbackForClassName} for further_information on how the specified names are treated._<p>Similar to {@link org.springframework.transaction.interceptor.NoRollbackRuleAttribute#NoRollbackRuleAttribute(String exceptionName)}._@see #noRollbackFor_@see org.springframework.transaction.interceptor.DefaultTransactionAttribute#rollbackOn(Throwable);String[] noRollbackForClassName() default {}_;defines,zero,0,or,more,exception,names,for,exceptions,which,must,be,a,subclass,of,link,throwable,indicating,which,exception,types,must,b,not,b,cause,a,transaction,rollback,p,see,the,description,of,link,rollback,for,class,name,for,further,information,on,how,the,specified,names,are,treated,p,similar,to,link,org,springframework,transaction,interceptor,no,rollback,rule,attribute,no,rollback,rule,attribute,string,exception,name,see,no,rollback,for,see,org,springframework,transaction,interceptor,default,transaction,attribute,rollback,on,throwable;string,no,rollback,for,class,name,default
Transactional -> String[] noRollbackForClassName() default {}_;1517867503;Defines zero (0) or more exception names (for exceptions which must be a_subclass of {@link Throwable}) indicating which exception types must <b>not</b>_cause a transaction rollback._<p>See the description of {@link #rollbackForClassName} for further_information on how the specified names are treated._<p>Similar to {@link org.springframework.transaction.interceptor.NoRollbackRuleAttribute#NoRollbackRuleAttribute(String exceptionName)}._@see #noRollbackFor_@see org.springframework.transaction.interceptor.DefaultTransactionAttribute#rollbackOn(Throwable);String[] noRollbackForClassName() default {}_;defines,zero,0,or,more,exception,names,for,exceptions,which,must,be,a,subclass,of,link,throwable,indicating,which,exception,types,must,b,not,b,cause,a,transaction,rollback,p,see,the,description,of,link,rollback,for,class,name,for,further,information,on,how,the,specified,names,are,treated,p,similar,to,link,org,springframework,transaction,interceptor,no,rollback,rule,attribute,no,rollback,rule,attribute,string,exception,name,see,no,rollback,for,see,org,springframework,transaction,interceptor,default,transaction,attribute,rollback,on,throwable;string,no,rollback,for,class,name,default
Transactional -> String[] noRollbackForClassName() default {}_;1535712043;Defines zero (0) or more exception names (for exceptions which must be a_subclass of {@link Throwable}) indicating which exception types must <b>not</b>_cause a transaction rollback._<p>See the description of {@link #rollbackForClassName} for further_information on how the specified names are treated._<p>Similar to {@link org.springframework.transaction.interceptor.NoRollbackRuleAttribute#NoRollbackRuleAttribute(String exceptionName)}._@see #noRollbackFor_@see org.springframework.transaction.interceptor.DefaultTransactionAttribute#rollbackOn(Throwable);String[] noRollbackForClassName() default {}_;defines,zero,0,or,more,exception,names,for,exceptions,which,must,be,a,subclass,of,link,throwable,indicating,which,exception,types,must,b,not,b,cause,a,transaction,rollback,p,see,the,description,of,link,rollback,for,class,name,for,further,information,on,how,the,specified,names,are,treated,p,similar,to,link,org,springframework,transaction,interceptor,no,rollback,rule,attribute,no,rollback,rule,attribute,string,exception,name,see,no,rollback,for,see,org,springframework,transaction,interceptor,default,transaction,attribute,rollback,on,throwable;string,no,rollback,for,class,name,default
Transactional -> String[] noRollbackForClassName() default {}_;1541442754;Defines zero (0) or more exception names (for exceptions which must be a_subclass of {@link Throwable}) indicating which exception types must <b>not</b>_cause a transaction rollback._<p>See the description of {@link #rollbackForClassName} for further_information on how the specified names are treated._<p>Similar to {@link org.springframework.transaction.interceptor.NoRollbackRuleAttribute#NoRollbackRuleAttribute(String exceptionName)}._@see #noRollbackFor_@see org.springframework.transaction.interceptor.DefaultTransactionAttribute#rollbackOn(Throwable);String[] noRollbackForClassName() default {}_;defines,zero,0,or,more,exception,names,for,exceptions,which,must,be,a,subclass,of,link,throwable,indicating,which,exception,types,must,b,not,b,cause,a,transaction,rollback,p,see,the,description,of,link,rollback,for,class,name,for,further,information,on,how,the,specified,names,are,treated,p,similar,to,link,org,springframework,transaction,interceptor,no,rollback,rule,attribute,no,rollback,rule,attribute,string,exception,name,see,no,rollback,for,see,org,springframework,transaction,interceptor,default,transaction,attribute,rollback,on,throwable;string,no,rollback,for,class,name,default
Transactional -> String value() default ""_;1328020251;A qualifier value for the specified transaction._<p>May be used to determine the target transaction manager,_matching the qualifier value (or the bean name) of a specific_{@link org.springframework.transaction.PlatformTransactionManager}_bean definition.;String value() default ""_;a,qualifier,value,for,the,specified,transaction,p,may,be,used,to,determine,the,target,transaction,manager,matching,the,qualifier,value,or,the,bean,name,of,a,specific,link,org,springframework,transaction,platform,transaction,manager,bean,definition;string,value,default
Transactional -> String value() default ""_;1356735495;A qualifier value for the specified transaction._<p>May be used to determine the target transaction manager,_matching the qualifier value (or the bean name) of a specific_{@link org.springframework.transaction.PlatformTransactionManager}_bean definition.;String value() default ""_;a,qualifier,value,for,the,specified,transaction,p,may,be,used,to,determine,the,target,transaction,manager,matching,the,qualifier,value,or,the,bean,name,of,a,specific,link,org,springframework,transaction,platform,transaction,manager,bean,definition;string,value,default
Transactional -> String value() default ""_;1434139184;A <em>qualifier</em> value for the specified transaction._<p>May be used to determine the target transaction manager,_matching the qualifier value (or the bean name) of a specific_{@link org.springframework.transaction.PlatformTransactionManager}_bean definition.;String value() default ""_;a,em,qualifier,em,value,for,the,specified,transaction,p,may,be,used,to,determine,the,target,transaction,manager,matching,the,qualifier,value,or,the,bean,name,of,a,specific,link,org,springframework,transaction,platform,transaction,manager,bean,definition;string,value,default
Transactional -> int timeout() default TransactionDefinition.TIMEOUT_DEFAULT_;1328020251;The timeout for this transaction._Defaults to the default timeout of the underlying transaction system._@see org.springframework.transaction.interceptor.TransactionAttribute#getTimeout();int timeout() default TransactionDefinition.TIMEOUT_DEFAULT_;the,timeout,for,this,transaction,defaults,to,the,default,timeout,of,the,underlying,transaction,system,see,org,springframework,transaction,interceptor,transaction,attribute,get,timeout;int,timeout,default,transaction,definition
Transactional -> int timeout() default TransactionDefinition.TIMEOUT_DEFAULT_;1356735495;The timeout for this transaction._Defaults to the default timeout of the underlying transaction system._@see org.springframework.transaction.interceptor.TransactionAttribute#getTimeout();int timeout() default TransactionDefinition.TIMEOUT_DEFAULT_;the,timeout,for,this,transaction,defaults,to,the,default,timeout,of,the,underlying,transaction,system,see,org,springframework,transaction,interceptor,transaction,attribute,get,timeout;int,timeout,default,transaction,definition
Transactional -> int timeout() default TransactionDefinition.TIMEOUT_DEFAULT_;1434139184;The timeout for this transaction._<p>Defaults to the default timeout of the underlying transaction system._@see org.springframework.transaction.interceptor.TransactionAttribute#getTimeout();int timeout() default TransactionDefinition.TIMEOUT_DEFAULT_;the,timeout,for,this,transaction,p,defaults,to,the,default,timeout,of,the,underlying,transaction,system,see,org,springframework,transaction,interceptor,transaction,attribute,get,timeout;int,timeout,default,transaction,definition
Transactional -> int timeout() default TransactionDefinition.TIMEOUT_DEFAULT_;1434141320;The timeout for this transaction._<p>Defaults to the default timeout of the underlying transaction system._@see org.springframework.transaction.interceptor.TransactionAttribute#getTimeout();int timeout() default TransactionDefinition.TIMEOUT_DEFAULT_;the,timeout,for,this,transaction,p,defaults,to,the,default,timeout,of,the,underlying,transaction,system,see,org,springframework,transaction,interceptor,transaction,attribute,get,timeout;int,timeout,default,transaction,definition
Transactional -> int timeout() default TransactionDefinition.TIMEOUT_DEFAULT_;1438176426;The timeout for this transaction._<p>Defaults to the default timeout of the underlying transaction system._@see org.springframework.transaction.interceptor.TransactionAttribute#getTimeout();int timeout() default TransactionDefinition.TIMEOUT_DEFAULT_;the,timeout,for,this,transaction,p,defaults,to,the,default,timeout,of,the,underlying,transaction,system,see,org,springframework,transaction,interceptor,transaction,attribute,get,timeout;int,timeout,default,transaction,definition
Transactional -> int timeout() default TransactionDefinition.TIMEOUT_DEFAULT_;1481292320;The timeout for this transaction._<p>Defaults to the default timeout of the underlying transaction system._@see org.springframework.transaction.interceptor.TransactionAttribute#getTimeout();int timeout() default TransactionDefinition.TIMEOUT_DEFAULT_;the,timeout,for,this,transaction,p,defaults,to,the,default,timeout,of,the,underlying,transaction,system,see,org,springframework,transaction,interceptor,transaction,attribute,get,timeout;int,timeout,default,transaction,definition
Transactional -> int timeout() default TransactionDefinition.TIMEOUT_DEFAULT_;1517867503;The timeout for this transaction._<p>Defaults to the default timeout of the underlying transaction system._<p>Exclusively designed for use with {@link Propagation#REQUIRED} or_{@link Propagation#REQUIRES_NEW} since it only applies to newly started_transactions._@see org.springframework.transaction.interceptor.TransactionAttribute#getTimeout();int timeout() default TransactionDefinition.TIMEOUT_DEFAULT_;the,timeout,for,this,transaction,p,defaults,to,the,default,timeout,of,the,underlying,transaction,system,p,exclusively,designed,for,use,with,link,propagation,required,or,link,propagation,since,it,only,applies,to,newly,started,transactions,see,org,springframework,transaction,interceptor,transaction,attribute,get,timeout;int,timeout,default,transaction,definition
Transactional -> int timeout() default TransactionDefinition.TIMEOUT_DEFAULT_;1535712043;The timeout for this transaction (in seconds)._<p>Defaults to the default timeout of the underlying transaction system._<p>Exclusively designed for use with {@link Propagation#REQUIRED} or_{@link Propagation#REQUIRES_NEW} since it only applies to newly started_transactions._@see org.springframework.transaction.interceptor.TransactionAttribute#getTimeout();int timeout() default TransactionDefinition.TIMEOUT_DEFAULT_;the,timeout,for,this,transaction,in,seconds,p,defaults,to,the,default,timeout,of,the,underlying,transaction,system,p,exclusively,designed,for,use,with,link,propagation,required,or,link,propagation,since,it,only,applies,to,newly,started,transactions,see,org,springframework,transaction,interceptor,transaction,attribute,get,timeout;int,timeout,default,transaction,definition
Transactional -> int timeout() default TransactionDefinition.TIMEOUT_DEFAULT_;1541442754;The timeout for this transaction (in seconds)._<p>Defaults to the default timeout of the underlying transaction system._<p>Exclusively designed for use with {@link Propagation#REQUIRED} or_{@link Propagation#REQUIRES_NEW} since it only applies to newly started_transactions._@see org.springframework.transaction.interceptor.TransactionAttribute#getTimeout();int timeout() default TransactionDefinition.TIMEOUT_DEFAULT_;the,timeout,for,this,transaction,in,seconds,p,defaults,to,the,default,timeout,of,the,underlying,transaction,system,p,exclusively,designed,for,use,with,link,propagation,required,or,link,propagation,since,it,only,applies,to,newly,started,transactions,see,org,springframework,transaction,interceptor,transaction,attribute,get,timeout;int,timeout,default,transaction,definition
Transactional -> @AliasFor("transactionManager") 	String value() default ""_;1438176426;Alias for {@link #transactionManager}._@see #transactionManager;@AliasFor("transactionManager")_	String value() default ""_;alias,for,link,transaction,manager,see,transaction,manager;alias,for,transaction,manager,string,value,default
Transactional -> @AliasFor("transactionManager") 	String value() default ""_;1481292320;Alias for {@link #transactionManager}._@see #transactionManager;@AliasFor("transactionManager")_	String value() default ""_;alias,for,link,transaction,manager,see,transaction,manager;alias,for,transaction,manager,string,value,default
Transactional -> @AliasFor("transactionManager") 	String value() default ""_;1517867503;Alias for {@link #transactionManager}._@see #transactionManager;@AliasFor("transactionManager")_	String value() default ""_;alias,for,link,transaction,manager,see,transaction,manager;alias,for,transaction,manager,string,value,default
Transactional -> @AliasFor("transactionManager") 	String value() default ""_;1535712043;Alias for {@link #transactionManager}._@see #transactionManager;@AliasFor("transactionManager")_	String value() default ""_;alias,for,link,transaction,manager,see,transaction,manager;alias,for,transaction,manager,string,value,default
Transactional -> @AliasFor("transactionManager") 	String value() default ""_;1541442754;Alias for {@link #transactionManager}._@see #transactionManager;@AliasFor("transactionManager")_	String value() default ""_;alias,for,link,transaction,manager,see,transaction,manager;alias,for,transaction,manager,string,value,default
Transactional -> Propagation propagation() default Propagation.REQUIRED_;1328020251;The transaction propagation type._Defaults to {@link Propagation#REQUIRED}._@see org.springframework.transaction.interceptor.TransactionAttribute#getPropagationBehavior();Propagation propagation() default Propagation.REQUIRED_;the,transaction,propagation,type,defaults,to,link,propagation,required,see,org,springframework,transaction,interceptor,transaction,attribute,get,propagation,behavior;propagation,propagation,default,propagation,required
Transactional -> Propagation propagation() default Propagation.REQUIRED_;1356735495;The transaction propagation type._Defaults to {@link Propagation#REQUIRED}._@see org.springframework.transaction.interceptor.TransactionAttribute#getPropagationBehavior();Propagation propagation() default Propagation.REQUIRED_;the,transaction,propagation,type,defaults,to,link,propagation,required,see,org,springframework,transaction,interceptor,transaction,attribute,get,propagation,behavior;propagation,propagation,default,propagation,required
Transactional -> Propagation propagation() default Propagation.REQUIRED_;1434139184;The transaction propagation type._<p>Defaults to {@link Propagation#REQUIRED}._@see org.springframework.transaction.interceptor.TransactionAttribute#getPropagationBehavior();Propagation propagation() default Propagation.REQUIRED_;the,transaction,propagation,type,p,defaults,to,link,propagation,required,see,org,springframework,transaction,interceptor,transaction,attribute,get,propagation,behavior;propagation,propagation,default,propagation,required
Transactional -> Propagation propagation() default Propagation.REQUIRED_;1434141320;The transaction propagation type._<p>Defaults to {@link Propagation#REQUIRED}._@see org.springframework.transaction.interceptor.TransactionAttribute#getPropagationBehavior();Propagation propagation() default Propagation.REQUIRED_;the,transaction,propagation,type,p,defaults,to,link,propagation,required,see,org,springframework,transaction,interceptor,transaction,attribute,get,propagation,behavior;propagation,propagation,default,propagation,required
Transactional -> Propagation propagation() default Propagation.REQUIRED_;1438176426;The transaction propagation type._<p>Defaults to {@link Propagation#REQUIRED}._@see org.springframework.transaction.interceptor.TransactionAttribute#getPropagationBehavior();Propagation propagation() default Propagation.REQUIRED_;the,transaction,propagation,type,p,defaults,to,link,propagation,required,see,org,springframework,transaction,interceptor,transaction,attribute,get,propagation,behavior;propagation,propagation,default,propagation,required
Transactional -> Propagation propagation() default Propagation.REQUIRED_;1481292320;The transaction propagation type._<p>Defaults to {@link Propagation#REQUIRED}._@see org.springframework.transaction.interceptor.TransactionAttribute#getPropagationBehavior();Propagation propagation() default Propagation.REQUIRED_;the,transaction,propagation,type,p,defaults,to,link,propagation,required,see,org,springframework,transaction,interceptor,transaction,attribute,get,propagation,behavior;propagation,propagation,default,propagation,required
Transactional -> Propagation propagation() default Propagation.REQUIRED_;1517867503;The transaction propagation type._<p>Defaults to {@link Propagation#REQUIRED}._@see org.springframework.transaction.interceptor.TransactionAttribute#getPropagationBehavior();Propagation propagation() default Propagation.REQUIRED_;the,transaction,propagation,type,p,defaults,to,link,propagation,required,see,org,springframework,transaction,interceptor,transaction,attribute,get,propagation,behavior;propagation,propagation,default,propagation,required
Transactional -> Propagation propagation() default Propagation.REQUIRED_;1535712043;The transaction propagation type._<p>Defaults to {@link Propagation#REQUIRED}._@see org.springframework.transaction.interceptor.TransactionAttribute#getPropagationBehavior();Propagation propagation() default Propagation.REQUIRED_;the,transaction,propagation,type,p,defaults,to,link,propagation,required,see,org,springframework,transaction,interceptor,transaction,attribute,get,propagation,behavior;propagation,propagation,default,propagation,required
Transactional -> Propagation propagation() default Propagation.REQUIRED_;1541442754;The transaction propagation type._<p>Defaults to {@link Propagation#REQUIRED}._@see org.springframework.transaction.interceptor.TransactionAttribute#getPropagationBehavior();Propagation propagation() default Propagation.REQUIRED_;the,transaction,propagation,type,p,defaults,to,link,propagation,required,see,org,springframework,transaction,interceptor,transaction,attribute,get,propagation,behavior;propagation,propagation,default,propagation,required
Transactional -> @AliasFor("value") 	String transactionManager() default ""_;1438176426;A <em>qualifier</em> value for the specified transaction._<p>May be used to determine the target transaction manager,_matching the qualifier value (or the bean name) of a specific_{@link org.springframework.transaction.PlatformTransactionManager}_bean definition._@since 4.2_@see #value;@AliasFor("value")_	String transactionManager() default ""_;a,em,qualifier,em,value,for,the,specified,transaction,p,may,be,used,to,determine,the,target,transaction,manager,matching,the,qualifier,value,or,the,bean,name,of,a,specific,link,org,springframework,transaction,platform,transaction,manager,bean,definition,since,4,2,see,value;alias,for,value,string,transaction,manager,default
Transactional -> @AliasFor("value") 	String transactionManager() default ""_;1481292320;A <em>qualifier</em> value for the specified transaction._<p>May be used to determine the target transaction manager,_matching the qualifier value (or the bean name) of a specific_{@link org.springframework.transaction.PlatformTransactionManager}_bean definition._@since 4.2_@see #value;@AliasFor("value")_	String transactionManager() default ""_;a,em,qualifier,em,value,for,the,specified,transaction,p,may,be,used,to,determine,the,target,transaction,manager,matching,the,qualifier,value,or,the,bean,name,of,a,specific,link,org,springframework,transaction,platform,transaction,manager,bean,definition,since,4,2,see,value;alias,for,value,string,transaction,manager,default
Transactional -> @AliasFor("value") 	String transactionManager() default ""_;1517867503;A <em>qualifier</em> value for the specified transaction._<p>May be used to determine the target transaction manager,_matching the qualifier value (or the bean name) of a specific_{@link org.springframework.transaction.PlatformTransactionManager}_bean definition._@since 4.2_@see #value;@AliasFor("value")_	String transactionManager() default ""_;a,em,qualifier,em,value,for,the,specified,transaction,p,may,be,used,to,determine,the,target,transaction,manager,matching,the,qualifier,value,or,the,bean,name,of,a,specific,link,org,springframework,transaction,platform,transaction,manager,bean,definition,since,4,2,see,value;alias,for,value,string,transaction,manager,default
Transactional -> @AliasFor("value") 	String transactionManager() default ""_;1535712043;A <em>qualifier</em> value for the specified transaction._<p>May be used to determine the target transaction manager,_matching the qualifier value (or the bean name) of a specific_{@link org.springframework.transaction.PlatformTransactionManager}_bean definition._@since 4.2_@see #value;@AliasFor("value")_	String transactionManager() default ""_;a,em,qualifier,em,value,for,the,specified,transaction,p,may,be,used,to,determine,the,target,transaction,manager,matching,the,qualifier,value,or,the,bean,name,of,a,specific,link,org,springframework,transaction,platform,transaction,manager,bean,definition,since,4,2,see,value;alias,for,value,string,transaction,manager,default
Transactional -> @AliasFor("value") 	String transactionManager() default ""_;1541442754;A <em>qualifier</em> value for the specified transaction._<p>May be used to determine the target transaction manager,_matching the qualifier value (or the bean name) of a specific_{@link org.springframework.transaction.PlatformTransactionManager}_bean definition._@since 4.2_@see #value;@AliasFor("value")_	String transactionManager() default ""_;a,em,qualifier,em,value,for,the,specified,transaction,p,may,be,used,to,determine,the,target,transaction,manager,matching,the,qualifier,value,or,the,bean,name,of,a,specific,link,org,springframework,transaction,platform,transaction,manager,bean,definition,since,4,2,see,value;alias,for,value,string,transaction,manager,default
