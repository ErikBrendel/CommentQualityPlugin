commented;modifiers;parameterAmount;loc;comment;code
true;public;1;4;/**  * Set the 'repository' annotation type.  * The default repository annotation type is the {@link Repository} annotation.  * <p>This setter property exists so that developers can provide their own  * (non-Spring-specific) annotation type to indicate that a class has a  * repository role.  * @param repositoryAnnotationType the desired annotation type  */ ;/**  * Set the 'repository' annotation type.  * The default repository annotation type is the {@link Repository} annotation.  * <p>This setter property exists so that developers can provide their own  * (non-Spring-specific) annotation type to indicate that a class has a  * repository role.  * @param repositoryAnnotationType the desired annotation type  */ public void setRepositoryAnnotationType(Class<? extends Annotation> repositoryAnnotationType) {     Assert.notNull(repositoryAnnotationType, "'repositoryAnnotationType' must not be null").     this.repositoryAnnotationType = repositoryAnnotationType. }
false;public;1;11;;@Override public void setBeanFactory(BeanFactory beanFactory) {     super.setBeanFactory(beanFactory).     if (!(beanFactory instanceof ListableBeanFactory)) {         throw new IllegalArgumentException("Cannot use PersistenceExceptionTranslator autodetection without ListableBeanFactory").     }     this.advisor = new PersistenceExceptionTranslationAdvisor((ListableBeanFactory) beanFactory, this.repositoryAnnotationType). }
