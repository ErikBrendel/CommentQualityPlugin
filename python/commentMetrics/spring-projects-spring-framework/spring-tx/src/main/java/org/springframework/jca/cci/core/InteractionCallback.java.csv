# id;timestamp;commentText;codeText;commentWords;codeWords
InteractionCallback -> @Nullable 	T doInInteraction(Interaction interaction, ConnectionFactory connectionFactory) 			throws ResourceException, SQLException, DataAccessException_;1495868221;Gets called by {@code CciTemplate.execute} with an active CCI Interaction._Does not need to care about activating or closing the Interaction, or_handling transactions._<p>If called without a thread-bound CCI transaction (initiated by_CciLocalTransactionManager), the code will simply get executed on the CCI_Interaction with its transactional semantics. If CciTemplate is configured_to use a JTA-aware ConnectionFactory, the CCI Interaction and thus the callback_code will be transactional if a JTA transaction is active._<p>Allows for returning a result object created within the callback, i.e._a domain object or a collection of domain objects. Note that there's special_support for single step actions: see the {@code CciTemplate.execute}_variants. A thrown RuntimeException is treated as application exception:_it gets propagated to the caller of the template._@param interaction active CCI Interaction_@param connectionFactory the CCI ConnectionFactory that the Connection was_created with (gives access to RecordFactory and ResourceAdapterMetaData)_@return a result object, or {@code null} if none_@throws ResourceException if thrown by a CCI method, to be auto-converted_to a DataAccessException_@throws SQLException if thrown by a ResultSet method, to be auto-converted_to a DataAccessException_@throws DataAccessException in case of custom exceptions_@see javax.resource.cci.ConnectionFactory#getRecordFactory()_@see javax.resource.cci.ConnectionFactory#getMetaData()_@see CciTemplate#execute(javax.resource.cci.InteractionSpec, RecordCreator, RecordExtractor);@Nullable_	T doInInteraction(Interaction interaction, ConnectionFactory connectionFactory)_			throws ResourceException, SQLException, DataAccessException_;gets,called,by,code,cci,template,execute,with,an,active,cci,interaction,does,not,need,to,care,about,activating,or,closing,the,interaction,or,handling,transactions,p,if,called,without,a,thread,bound,cci,transaction,initiated,by,cci,local,transaction,manager,the,code,will,simply,get,executed,on,the,cci,interaction,with,its,transactional,semantics,if,cci,template,is,configured,to,use,a,jta,aware,connection,factory,the,cci,interaction,and,thus,the,callback,code,will,be,transactional,if,a,jta,transaction,is,active,p,allows,for,returning,a,result,object,created,within,the,callback,i,e,a,domain,object,or,a,collection,of,domain,objects,note,that,there,s,special,support,for,single,step,actions,see,the,code,cci,template,execute,variants,a,thrown,runtime,exception,is,treated,as,application,exception,it,gets,propagated,to,the,caller,of,the,template,param,interaction,active,cci,interaction,param,connection,factory,the,cci,connection,factory,that,the,connection,was,created,with,gives,access,to,record,factory,and,resource,adapter,meta,data,return,a,result,object,or,code,null,if,none,throws,resource,exception,if,thrown,by,a,cci,method,to,be,auto,converted,to,a,data,access,exception,throws,sqlexception,if,thrown,by,a,result,set,method,to,be,auto,converted,to,a,data,access,exception,throws,data,access,exception,in,case,of,custom,exceptions,see,javax,resource,cci,connection,factory,get,record,factory,see,javax,resource,cci,connection,factory,get,meta,data,see,cci,template,execute,javax,resource,cci,interaction,spec,record,creator,record,extractor;nullable,t,do,in,interaction,interaction,interaction,connection,factory,connection,factory,throws,resource,exception,sqlexception,data,access,exception
InteractionCallback -> @Nullable 	T doInInteraction(Interaction interaction, ConnectionFactory connectionFactory) 			throws ResourceException, SQLException, DataAccessException_;1530174524;Gets called by {@code CciTemplate.execute} with an active CCI Interaction._Does not need to care about activating or closing the Interaction, or_handling transactions._<p>If called without a thread-bound CCI transaction (initiated by_CciLocalTransactionManager), the code will simply get executed on the CCI_Interaction with its transactional semantics. If CciTemplate is configured_to use a JTA-aware ConnectionFactory, the CCI Interaction and thus the callback_code will be transactional if a JTA transaction is active._<p>Allows for returning a result object created within the callback, i.e._a domain object or a collection of domain objects. Note that there's special_support for single step actions: see the {@code CciTemplate.execute}_variants. A thrown RuntimeException is treated as application exception:_it gets propagated to the caller of the template._@param interaction active CCI Interaction_@param connectionFactory the CCI ConnectionFactory that the Connection was_created with (gives access to RecordFactory and ResourceAdapterMetaData)_@return a result object, or {@code null} if none_@throws ResourceException if thrown by a CCI method, to be auto-converted_to a DataAccessException_@throws SQLException if thrown by a ResultSet method, to be auto-converted_to a DataAccessException_@throws DataAccessException in case of custom exceptions_@see javax.resource.cci.ConnectionFactory#getRecordFactory()_@see javax.resource.cci.ConnectionFactory#getMetaData()_@see CciTemplate#execute(javax.resource.cci.InteractionSpec, RecordCreator, RecordExtractor);@Nullable_	T doInInteraction(Interaction interaction, ConnectionFactory connectionFactory)_			throws ResourceException, SQLException, DataAccessException_;gets,called,by,code,cci,template,execute,with,an,active,cci,interaction,does,not,need,to,care,about,activating,or,closing,the,interaction,or,handling,transactions,p,if,called,without,a,thread,bound,cci,transaction,initiated,by,cci,local,transaction,manager,the,code,will,simply,get,executed,on,the,cci,interaction,with,its,transactional,semantics,if,cci,template,is,configured,to,use,a,jta,aware,connection,factory,the,cci,interaction,and,thus,the,callback,code,will,be,transactional,if,a,jta,transaction,is,active,p,allows,for,returning,a,result,object,created,within,the,callback,i,e,a,domain,object,or,a,collection,of,domain,objects,note,that,there,s,special,support,for,single,step,actions,see,the,code,cci,template,execute,variants,a,thrown,runtime,exception,is,treated,as,application,exception,it,gets,propagated,to,the,caller,of,the,template,param,interaction,active,cci,interaction,param,connection,factory,the,cci,connection,factory,that,the,connection,was,created,with,gives,access,to,record,factory,and,resource,adapter,meta,data,return,a,result,object,or,code,null,if,none,throws,resource,exception,if,thrown,by,a,cci,method,to,be,auto,converted,to,a,data,access,exception,throws,sqlexception,if,thrown,by,a,result,set,method,to,be,auto,converted,to,a,data,access,exception,throws,data,access,exception,in,case,of,custom,exceptions,see,javax,resource,cci,connection,factory,get,record,factory,see,javax,resource,cci,connection,factory,get,meta,data,see,cci,template,execute,javax,resource,cci,interaction,spec,record,creator,record,extractor;nullable,t,do,in,interaction,interaction,interaction,connection,factory,connection,factory,throws,resource,exception,sqlexception,data,access,exception
InteractionCallback -> @Nullable 	T doInInteraction(Interaction interaction, ConnectionFactory connectionFactory) 			throws ResourceException, SQLException, DataAccessException_;1530174524;Gets called by {@code CciTemplate.execute} with an active CCI Interaction._Does not need to care about activating or closing the Interaction, or_handling transactions._<p>If called without a thread-bound CCI transaction (initiated by_CciLocalTransactionManager), the code will simply get executed on the CCI_Interaction with its transactional semantics. If CciTemplate is configured_to use a JTA-aware ConnectionFactory, the CCI Interaction and thus the callback_code will be transactional if a JTA transaction is active._<p>Allows for returning a result object created within the callback, i.e._a domain object or a collection of domain objects. Note that there's special_support for single step actions: see the {@code CciTemplate.execute}_variants. A thrown RuntimeException is treated as application exception:_it gets propagated to the caller of the template._@param interaction active CCI Interaction_@param connectionFactory the CCI ConnectionFactory that the Connection was_created with (gives access to RecordFactory and ResourceAdapterMetaData)_@return a result object, or {@code null} if none_@throws ResourceException if thrown by a CCI method, to be auto-converted_to a DataAccessException_@throws SQLException if thrown by a ResultSet method, to be auto-converted_to a DataAccessException_@throws DataAccessException in case of custom exceptions_@see javax.resource.cci.ConnectionFactory#getRecordFactory()_@see javax.resource.cci.ConnectionFactory#getMetaData()_@see CciTemplate#execute(javax.resource.cci.InteractionSpec, RecordCreator, RecordExtractor);@Nullable_	T doInInteraction(Interaction interaction, ConnectionFactory connectionFactory)_			throws ResourceException, SQLException, DataAccessException_;gets,called,by,code,cci,template,execute,with,an,active,cci,interaction,does,not,need,to,care,about,activating,or,closing,the,interaction,or,handling,transactions,p,if,called,without,a,thread,bound,cci,transaction,initiated,by,cci,local,transaction,manager,the,code,will,simply,get,executed,on,the,cci,interaction,with,its,transactional,semantics,if,cci,template,is,configured,to,use,a,jta,aware,connection,factory,the,cci,interaction,and,thus,the,callback,code,will,be,transactional,if,a,jta,transaction,is,active,p,allows,for,returning,a,result,object,created,within,the,callback,i,e,a,domain,object,or,a,collection,of,domain,objects,note,that,there,s,special,support,for,single,step,actions,see,the,code,cci,template,execute,variants,a,thrown,runtime,exception,is,treated,as,application,exception,it,gets,propagated,to,the,caller,of,the,template,param,interaction,active,cci,interaction,param,connection,factory,the,cci,connection,factory,that,the,connection,was,created,with,gives,access,to,record,factory,and,resource,adapter,meta,data,return,a,result,object,or,code,null,if,none,throws,resource,exception,if,thrown,by,a,cci,method,to,be,auto,converted,to,a,data,access,exception,throws,sqlexception,if,thrown,by,a,result,set,method,to,be,auto,converted,to,a,data,access,exception,throws,data,access,exception,in,case,of,custom,exceptions,see,javax,resource,cci,connection,factory,get,record,factory,see,javax,resource,cci,connection,factory,get,meta,data,see,cci,template,execute,javax,resource,cci,interaction,spec,record,creator,record,extractor;nullable,t,do,in,interaction,interaction,interaction,connection,factory,connection,factory,throws,resource,exception,sqlexception,data,access,exception
InteractionCallback -> T doInInteraction(Interaction interaction, ConnectionFactory connectionFactory) 			throws ResourceException, SQLException, DataAccessException_;1328020251;Gets called by <code>CciTemplate.execute</code> with an active CCI Interaction._Does not need to care about activating or closing the Interaction, or_handling transactions.__<p>If called without a thread-bound CCI transaction (initiated by_CciLocalTransactionManager), the code will simply get executed on the CCI_Interaction with its transactional semantics. If CciTemplate is configured_to use a JTA-aware ConnectionFactory, the CCI Interaction and thus the callback_code will be transactional if a JTA transaction is active.__<p>Allows for returning a result object created within the callback, i.e._a domain object or a collection of domain objects. Note that there's special_support for single step actions: see the <code>CciTemplate.execute</code>_variants. A thrown RuntimeException is treated as application exception:_it gets propagated to the caller of the template.__@param interaction active CCI Interaction_@param connectionFactory the CCI ConnectionFactory that the Connection was_created with (gives access to RecordFactory and ResourceAdapterMetaData)_@return a result object, or <code>null</code> if none_@throws ResourceException if thrown by a CCI method, to be auto-converted_to a DataAccessException_@throws SQLException if thrown by a ResultSet method, to be auto-converted_to a DataAccessException_@throws DataAccessException in case of custom exceptions_@see javax.resource.cci.ConnectionFactory#getRecordFactory()_@see javax.resource.cci.ConnectionFactory#getMetaData()_@see CciTemplate#execute(javax.resource.cci.InteractionSpec, RecordCreator, RecordExtractor);T doInInteraction(Interaction interaction, ConnectionFactory connectionFactory)_			throws ResourceException, SQLException, DataAccessException_;gets,called,by,code,cci,template,execute,code,with,an,active,cci,interaction,does,not,need,to,care,about,activating,or,closing,the,interaction,or,handling,transactions,p,if,called,without,a,thread,bound,cci,transaction,initiated,by,cci,local,transaction,manager,the,code,will,simply,get,executed,on,the,cci,interaction,with,its,transactional,semantics,if,cci,template,is,configured,to,use,a,jta,aware,connection,factory,the,cci,interaction,and,thus,the,callback,code,will,be,transactional,if,a,jta,transaction,is,active,p,allows,for,returning,a,result,object,created,within,the,callback,i,e,a,domain,object,or,a,collection,of,domain,objects,note,that,there,s,special,support,for,single,step,actions,see,the,code,cci,template,execute,code,variants,a,thrown,runtime,exception,is,treated,as,application,exception,it,gets,propagated,to,the,caller,of,the,template,param,interaction,active,cci,interaction,param,connection,factory,the,cci,connection,factory,that,the,connection,was,created,with,gives,access,to,record,factory,and,resource,adapter,meta,data,return,a,result,object,or,code,null,code,if,none,throws,resource,exception,if,thrown,by,a,cci,method,to,be,auto,converted,to,a,data,access,exception,throws,sqlexception,if,thrown,by,a,result,set,method,to,be,auto,converted,to,a,data,access,exception,throws,data,access,exception,in,case,of,custom,exceptions,see,javax,resource,cci,connection,factory,get,record,factory,see,javax,resource,cci,connection,factory,get,meta,data,see,cci,template,execute,javax,resource,cci,interaction,spec,record,creator,record,extractor;t,do,in,interaction,interaction,interaction,connection,factory,connection,factory,throws,resource,exception,sqlexception,data,access,exception
InteractionCallback -> T doInInteraction(Interaction interaction, ConnectionFactory connectionFactory) 			throws ResourceException, SQLException, DataAccessException_;1356735495;Gets called by {@code CciTemplate.execute} with an active CCI Interaction._Does not need to care about activating or closing the Interaction, or_handling transactions.__<p>If called without a thread-bound CCI transaction (initiated by_CciLocalTransactionManager), the code will simply get executed on the CCI_Interaction with its transactional semantics. If CciTemplate is configured_to use a JTA-aware ConnectionFactory, the CCI Interaction and thus the callback_code will be transactional if a JTA transaction is active.__<p>Allows for returning a result object created within the callback, i.e._a domain object or a collection of domain objects. Note that there's special_support for single step actions: see the {@code CciTemplate.execute}_variants. A thrown RuntimeException is treated as application exception:_it gets propagated to the caller of the template.__@param interaction active CCI Interaction_@param connectionFactory the CCI ConnectionFactory that the Connection was_created with (gives access to RecordFactory and ResourceAdapterMetaData)_@return a result object, or {@code null} if none_@throws ResourceException if thrown by a CCI method, to be auto-converted_to a DataAccessException_@throws SQLException if thrown by a ResultSet method, to be auto-converted_to a DataAccessException_@throws DataAccessException in case of custom exceptions_@see javax.resource.cci.ConnectionFactory#getRecordFactory()_@see javax.resource.cci.ConnectionFactory#getMetaData()_@see CciTemplate#execute(javax.resource.cci.InteractionSpec, RecordCreator, RecordExtractor);T doInInteraction(Interaction interaction, ConnectionFactory connectionFactory)_			throws ResourceException, SQLException, DataAccessException_;gets,called,by,code,cci,template,execute,with,an,active,cci,interaction,does,not,need,to,care,about,activating,or,closing,the,interaction,or,handling,transactions,p,if,called,without,a,thread,bound,cci,transaction,initiated,by,cci,local,transaction,manager,the,code,will,simply,get,executed,on,the,cci,interaction,with,its,transactional,semantics,if,cci,template,is,configured,to,use,a,jta,aware,connection,factory,the,cci,interaction,and,thus,the,callback,code,will,be,transactional,if,a,jta,transaction,is,active,p,allows,for,returning,a,result,object,created,within,the,callback,i,e,a,domain,object,or,a,collection,of,domain,objects,note,that,there,s,special,support,for,single,step,actions,see,the,code,cci,template,execute,variants,a,thrown,runtime,exception,is,treated,as,application,exception,it,gets,propagated,to,the,caller,of,the,template,param,interaction,active,cci,interaction,param,connection,factory,the,cci,connection,factory,that,the,connection,was,created,with,gives,access,to,record,factory,and,resource,adapter,meta,data,return,a,result,object,or,code,null,if,none,throws,resource,exception,if,thrown,by,a,cci,method,to,be,auto,converted,to,a,data,access,exception,throws,sqlexception,if,thrown,by,a,result,set,method,to,be,auto,converted,to,a,data,access,exception,throws,data,access,exception,in,case,of,custom,exceptions,see,javax,resource,cci,connection,factory,get,record,factory,see,javax,resource,cci,connection,factory,get,meta,data,see,cci,template,execute,javax,resource,cci,interaction,spec,record,creator,record,extractor;t,do,in,interaction,interaction,interaction,connection,factory,connection,factory,throws,resource,exception,sqlexception,data,access,exception
InteractionCallback -> T doInInteraction(Interaction interaction, ConnectionFactory connectionFactory) 			throws ResourceException, SQLException, DataAccessException_;1413848647;Gets called by {@code CciTemplate.execute} with an active CCI Interaction._Does not need to care about activating or closing the Interaction, or_handling transactions.__<p>If called without a thread-bound CCI transaction (initiated by_CciLocalTransactionManager), the code will simply get executed on the CCI_Interaction with its transactional semantics. If CciTemplate is configured_to use a JTA-aware ConnectionFactory, the CCI Interaction and thus the callback_code will be transactional if a JTA transaction is active.__<p>Allows for returning a result object created within the callback, i.e._a domain object or a collection of domain objects. Note that there's special_support for single step actions: see the {@code CciTemplate.execute}_variants. A thrown RuntimeException is treated as application exception:_it gets propagated to the caller of the template.__@param interaction active CCI Interaction_@param connectionFactory the CCI ConnectionFactory that the Connection was_created with (gives access to RecordFactory and ResourceAdapterMetaData)_@return a result object, or {@code null} if none_@throws ResourceException if thrown by a CCI method, to be auto-converted_to a DataAccessException_@throws SQLException if thrown by a ResultSet method, to be auto-converted_to a DataAccessException_@throws DataAccessException in case of custom exceptions_@see javax.resource.cci.ConnectionFactory#getRecordFactory()_@see javax.resource.cci.ConnectionFactory#getMetaData()_@see CciTemplate#execute(javax.resource.cci.InteractionSpec, RecordCreator, RecordExtractor);T doInInteraction(Interaction interaction, ConnectionFactory connectionFactory)_			throws ResourceException, SQLException, DataAccessException_;gets,called,by,code,cci,template,execute,with,an,active,cci,interaction,does,not,need,to,care,about,activating,or,closing,the,interaction,or,handling,transactions,p,if,called,without,a,thread,bound,cci,transaction,initiated,by,cci,local,transaction,manager,the,code,will,simply,get,executed,on,the,cci,interaction,with,its,transactional,semantics,if,cci,template,is,configured,to,use,a,jta,aware,connection,factory,the,cci,interaction,and,thus,the,callback,code,will,be,transactional,if,a,jta,transaction,is,active,p,allows,for,returning,a,result,object,created,within,the,callback,i,e,a,domain,object,or,a,collection,of,domain,objects,note,that,there,s,special,support,for,single,step,actions,see,the,code,cci,template,execute,variants,a,thrown,runtime,exception,is,treated,as,application,exception,it,gets,propagated,to,the,caller,of,the,template,param,interaction,active,cci,interaction,param,connection,factory,the,cci,connection,factory,that,the,connection,was,created,with,gives,access,to,record,factory,and,resource,adapter,meta,data,return,a,result,object,or,code,null,if,none,throws,resource,exception,if,thrown,by,a,cci,method,to,be,auto,converted,to,a,data,access,exception,throws,sqlexception,if,thrown,by,a,result,set,method,to,be,auto,converted,to,a,data,access,exception,throws,data,access,exception,in,case,of,custom,exceptions,see,javax,resource,cci,connection,factory,get,record,factory,see,javax,resource,cci,connection,factory,get,meta,data,see,cci,template,execute,javax,resource,cci,interaction,spec,record,creator,record,extractor;t,do,in,interaction,interaction,interaction,connection,factory,connection,factory,throws,resource,exception,sqlexception,data,access,exception
InteractionCallback -> T doInInteraction(Interaction interaction, ConnectionFactory connectionFactory) 			throws ResourceException, SQLException, DataAccessException_;1460469837;Gets called by {@code CciTemplate.execute} with an active CCI Interaction._Does not need to care about activating or closing the Interaction, or_handling transactions._<p>If called without a thread-bound CCI transaction (initiated by_CciLocalTransactionManager), the code will simply get executed on the CCI_Interaction with its transactional semantics. If CciTemplate is configured_to use a JTA-aware ConnectionFactory, the CCI Interaction and thus the callback_code will be transactional if a JTA transaction is active._<p>Allows for returning a result object created within the callback, i.e._a domain object or a collection of domain objects. Note that there's special_support for single step actions: see the {@code CciTemplate.execute}_variants. A thrown RuntimeException is treated as application exception:_it gets propagated to the caller of the template._@param interaction active CCI Interaction_@param connectionFactory the CCI ConnectionFactory that the Connection was_created with (gives access to RecordFactory and ResourceAdapterMetaData)_@return a result object, or {@code null} if none_@throws ResourceException if thrown by a CCI method, to be auto-converted_to a DataAccessException_@throws SQLException if thrown by a ResultSet method, to be auto-converted_to a DataAccessException_@throws DataAccessException in case of custom exceptions_@see javax.resource.cci.ConnectionFactory#getRecordFactory()_@see javax.resource.cci.ConnectionFactory#getMetaData()_@see CciTemplate#execute(javax.resource.cci.InteractionSpec, RecordCreator, RecordExtractor);T doInInteraction(Interaction interaction, ConnectionFactory connectionFactory)_			throws ResourceException, SQLException, DataAccessException_;gets,called,by,code,cci,template,execute,with,an,active,cci,interaction,does,not,need,to,care,about,activating,or,closing,the,interaction,or,handling,transactions,p,if,called,without,a,thread,bound,cci,transaction,initiated,by,cci,local,transaction,manager,the,code,will,simply,get,executed,on,the,cci,interaction,with,its,transactional,semantics,if,cci,template,is,configured,to,use,a,jta,aware,connection,factory,the,cci,interaction,and,thus,the,callback,code,will,be,transactional,if,a,jta,transaction,is,active,p,allows,for,returning,a,result,object,created,within,the,callback,i,e,a,domain,object,or,a,collection,of,domain,objects,note,that,there,s,special,support,for,single,step,actions,see,the,code,cci,template,execute,variants,a,thrown,runtime,exception,is,treated,as,application,exception,it,gets,propagated,to,the,caller,of,the,template,param,interaction,active,cci,interaction,param,connection,factory,the,cci,connection,factory,that,the,connection,was,created,with,gives,access,to,record,factory,and,resource,adapter,meta,data,return,a,result,object,or,code,null,if,none,throws,resource,exception,if,thrown,by,a,cci,method,to,be,auto,converted,to,a,data,access,exception,throws,sqlexception,if,thrown,by,a,result,set,method,to,be,auto,converted,to,a,data,access,exception,throws,data,access,exception,in,case,of,custom,exceptions,see,javax,resource,cci,connection,factory,get,record,factory,see,javax,resource,cci,connection,factory,get,meta,data,see,cci,template,execute,javax,resource,cci,interaction,spec,record,creator,record,extractor;t,do,in,interaction,interaction,interaction,connection,factory,connection,factory,throws,resource,exception,sqlexception,data,access,exception
InteractionCallback -> T doInInteraction(Interaction interaction, ConnectionFactory connectionFactory) 			throws ResourceException, SQLException, DataAccessException_;1467808333;Gets called by {@code CciTemplate.execute} with an active CCI Interaction._Does not need to care about activating or closing the Interaction, or_handling transactions._<p>If called without a thread-bound CCI transaction (initiated by_CciLocalTransactionManager), the code will simply get executed on the CCI_Interaction with its transactional semantics. If CciTemplate is configured_to use a JTA-aware ConnectionFactory, the CCI Interaction and thus the callback_code will be transactional if a JTA transaction is active._<p>Allows for returning a result object created within the callback, i.e._a domain object or a collection of domain objects. Note that there's special_support for single step actions: see the {@code CciTemplate.execute}_variants. A thrown RuntimeException is treated as application exception:_it gets propagated to the caller of the template._@param interaction active CCI Interaction_@param connectionFactory the CCI ConnectionFactory that the Connection was_created with (gives access to RecordFactory and ResourceAdapterMetaData)_@return a result object, or {@code null} if none_@throws ResourceException if thrown by a CCI method, to be auto-converted_to a DataAccessException_@throws SQLException if thrown by a ResultSet method, to be auto-converted_to a DataAccessException_@throws DataAccessException in case of custom exceptions_@see javax.resource.cci.ConnectionFactory#getRecordFactory()_@see javax.resource.cci.ConnectionFactory#getMetaData()_@see CciTemplate#execute(javax.resource.cci.InteractionSpec, RecordCreator, RecordExtractor);T doInInteraction(Interaction interaction, ConnectionFactory connectionFactory)_			throws ResourceException, SQLException, DataAccessException_;gets,called,by,code,cci,template,execute,with,an,active,cci,interaction,does,not,need,to,care,about,activating,or,closing,the,interaction,or,handling,transactions,p,if,called,without,a,thread,bound,cci,transaction,initiated,by,cci,local,transaction,manager,the,code,will,simply,get,executed,on,the,cci,interaction,with,its,transactional,semantics,if,cci,template,is,configured,to,use,a,jta,aware,connection,factory,the,cci,interaction,and,thus,the,callback,code,will,be,transactional,if,a,jta,transaction,is,active,p,allows,for,returning,a,result,object,created,within,the,callback,i,e,a,domain,object,or,a,collection,of,domain,objects,note,that,there,s,special,support,for,single,step,actions,see,the,code,cci,template,execute,variants,a,thrown,runtime,exception,is,treated,as,application,exception,it,gets,propagated,to,the,caller,of,the,template,param,interaction,active,cci,interaction,param,connection,factory,the,cci,connection,factory,that,the,connection,was,created,with,gives,access,to,record,factory,and,resource,adapter,meta,data,return,a,result,object,or,code,null,if,none,throws,resource,exception,if,thrown,by,a,cci,method,to,be,auto,converted,to,a,data,access,exception,throws,sqlexception,if,thrown,by,a,result,set,method,to,be,auto,converted,to,a,data,access,exception,throws,data,access,exception,in,case,of,custom,exceptions,see,javax,resource,cci,connection,factory,get,record,factory,see,javax,resource,cci,connection,factory,get,meta,data,see,cci,template,execute,javax,resource,cci,interaction,spec,record,creator,record,extractor;t,do,in,interaction,interaction,interaction,connection,factory,connection,factory,throws,resource,exception,sqlexception,data,access,exception
