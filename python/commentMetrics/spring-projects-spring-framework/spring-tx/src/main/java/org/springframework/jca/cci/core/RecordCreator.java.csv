commented;modifiers;parameterAmount;loc;comment;code
true;;1;1;/**  * Create a CCI Record instance, usually based on the passed-in CCI RecordFactory.  * <p>For use as <i>input</i> creator with CciTemplate's {@code execute} methods,  * this method should create a <i>populated</i> Record instance. For use as  * <i>output</i> Record creator, it should return an <i>empty</i> Record instance.  * @param recordFactory the CCI RecordFactory (never {@code null}, but not guaranteed to be  * supported by the connector: its create methods might throw NotSupportedException)  * @return the Record instance  * @throws ResourceException if thrown by a CCI method, to be auto-converted  * to a DataAccessException  * @throws DataAccessException in case of custom exceptions  */ ;/**  * Create a CCI Record instance, usually based on the passed-in CCI RecordFactory.  * <p>For use as <i>input</i> creator with CciTemplate's {@code execute} methods,  * this method should create a <i>populated</i> Record instance. For use as  * <i>output</i> Record creator, it should return an <i>empty</i> Record instance.  * @param recordFactory the CCI RecordFactory (never {@code null}, but not guaranteed to be  * supported by the connector: its create methods might throw NotSupportedException)  * @return the Record instance  * @throws ResourceException if thrown by a CCI method, to be auto-converted  * to a DataAccessException  * @throws DataAccessException in case of custom exceptions  */ Record createRecord(RecordFactory recordFactory) throws ResourceException, DataAccessException.
