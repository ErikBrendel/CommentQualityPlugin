# id;timestamp;commentText;codeText;commentWords;codeWords
DefaultTransactionDefinition -> public DefaultTransactionDefinition(int propagationBehavior);1328020251;Create a new DefaultTransactionDefinition with the the given_propagation behavior. Can be modified through bean property setters._@param propagationBehavior one of the propagation constants in the_TransactionDefinition interface_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly;public DefaultTransactionDefinition(int propagationBehavior) {_		this.propagationBehavior = propagationBehavior__	};create,a,new,default,transaction,definition,with,the,the,given,propagation,behavior,can,be,modified,through,bean,property,setters,param,propagation,behavior,one,of,the,propagation,constants,in,the,transaction,definition,interface,see,set,isolation,level,see,set,timeout,see,set,read,only;public,default,transaction,definition,int,propagation,behavior,this,propagation,behavior,propagation,behavior
DefaultTransactionDefinition -> public DefaultTransactionDefinition(int propagationBehavior);1356735495;Create a new DefaultTransactionDefinition with the the given_propagation behavior. Can be modified through bean property setters._@param propagationBehavior one of the propagation constants in the_TransactionDefinition interface_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly;public DefaultTransactionDefinition(int propagationBehavior) {_		this.propagationBehavior = propagationBehavior__	};create,a,new,default,transaction,definition,with,the,the,given,propagation,behavior,can,be,modified,through,bean,property,setters,param,propagation,behavior,one,of,the,propagation,constants,in,the,transaction,definition,interface,see,set,isolation,level,see,set,timeout,see,set,read,only;public,default,transaction,definition,int,propagation,behavior,this,propagation,behavior,propagation,behavior
DefaultTransactionDefinition -> public DefaultTransactionDefinition(int propagationBehavior);1357119239;Create a new DefaultTransactionDefinition with the the given_propagation behavior. Can be modified through bean property setters._@param propagationBehavior one of the propagation constants in the_TransactionDefinition interface_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly;public DefaultTransactionDefinition(int propagationBehavior) {_		this.propagationBehavior = propagationBehavior__	};create,a,new,default,transaction,definition,with,the,the,given,propagation,behavior,can,be,modified,through,bean,property,setters,param,propagation,behavior,one,of,the,propagation,constants,in,the,transaction,definition,interface,see,set,isolation,level,see,set,timeout,see,set,read,only;public,default,transaction,definition,int,propagation,behavior,this,propagation,behavior,propagation,behavior
DefaultTransactionDefinition -> public DefaultTransactionDefinition(int propagationBehavior);1368482696;Create a new DefaultTransactionDefinition with the the given_propagation behavior. Can be modified through bean property setters._@param propagationBehavior one of the propagation constants in the_TransactionDefinition interface_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly;public DefaultTransactionDefinition(int propagationBehavior) {_		this.propagationBehavior = propagationBehavior__	};create,a,new,default,transaction,definition,with,the,the,given,propagation,behavior,can,be,modified,through,bean,property,setters,param,propagation,behavior,one,of,the,propagation,constants,in,the,transaction,definition,interface,see,set,isolation,level,see,set,timeout,see,set,read,only;public,default,transaction,definition,int,propagation,behavior,this,propagation,behavior,propagation,behavior
DefaultTransactionDefinition -> public DefaultTransactionDefinition(int propagationBehavior);1461047077;Create a new DefaultTransactionDefinition with the given_propagation behavior. Can be modified through bean property setters._@param propagationBehavior one of the propagation constants in the_TransactionDefinition interface_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly;public DefaultTransactionDefinition(int propagationBehavior) {_		this.propagationBehavior = propagationBehavior__	};create,a,new,default,transaction,definition,with,the,given,propagation,behavior,can,be,modified,through,bean,property,setters,param,propagation,behavior,one,of,the,propagation,constants,in,the,transaction,definition,interface,see,set,isolation,level,see,set,timeout,see,set,read,only;public,default,transaction,definition,int,propagation,behavior,this,propagation,behavior,propagation,behavior
DefaultTransactionDefinition -> public DefaultTransactionDefinition(int propagationBehavior);1496837955;Create a new DefaultTransactionDefinition with the given_propagation behavior. Can be modified through bean property setters._@param propagationBehavior one of the propagation constants in the_TransactionDefinition interface_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly;public DefaultTransactionDefinition(int propagationBehavior) {_		this.propagationBehavior = propagationBehavior__	};create,a,new,default,transaction,definition,with,the,given,propagation,behavior,can,be,modified,through,bean,property,setters,param,propagation,behavior,one,of,the,propagation,constants,in,the,transaction,definition,interface,see,set,isolation,level,see,set,timeout,see,set,read,only;public,default,transaction,definition,int,propagation,behavior,this,propagation,behavior,propagation,behavior
DefaultTransactionDefinition -> public DefaultTransactionDefinition(int propagationBehavior);1498780456;Create a new DefaultTransactionDefinition with the given_propagation behavior. Can be modified through bean property setters._@param propagationBehavior one of the propagation constants in the_TransactionDefinition interface_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly;public DefaultTransactionDefinition(int propagationBehavior) {_		this.propagationBehavior = propagationBehavior__	};create,a,new,default,transaction,definition,with,the,given,propagation,behavior,can,be,modified,through,bean,property,setters,param,propagation,behavior,one,of,the,propagation,constants,in,the,transaction,definition,interface,see,set,isolation,level,see,set,timeout,see,set,read,only;public,default,transaction,definition,int,propagation,behavior,this,propagation,behavior,propagation,behavior
DefaultTransactionDefinition -> public DefaultTransactionDefinition(int propagationBehavior);1500495740;Create a new DefaultTransactionDefinition with the given_propagation behavior. Can be modified through bean property setters._@param propagationBehavior one of the propagation constants in the_TransactionDefinition interface_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly;public DefaultTransactionDefinition(int propagationBehavior) {_		this.propagationBehavior = propagationBehavior__	};create,a,new,default,transaction,definition,with,the,given,propagation,behavior,can,be,modified,through,bean,property,setters,param,propagation,behavior,one,of,the,propagation,constants,in,the,transaction,definition,interface,see,set,isolation,level,see,set,timeout,see,set,read,only;public,default,transaction,definition,int,propagation,behavior,this,propagation,behavior,propagation,behavior
DefaultTransactionDefinition -> public DefaultTransactionDefinition(int propagationBehavior);1517867503;Create a new DefaultTransactionDefinition with the given_propagation behavior. Can be modified through bean property setters._@param propagationBehavior one of the propagation constants in the_TransactionDefinition interface_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly;public DefaultTransactionDefinition(int propagationBehavior) {_		this.propagationBehavior = propagationBehavior__	};create,a,new,default,transaction,definition,with,the,given,propagation,behavior,can,be,modified,through,bean,property,setters,param,propagation,behavior,one,of,the,propagation,constants,in,the,transaction,definition,interface,see,set,isolation,level,see,set,timeout,see,set,read,only;public,default,transaction,definition,int,propagation,behavior,this,propagation,behavior,propagation,behavior
DefaultTransactionDefinition -> public DefaultTransactionDefinition(int propagationBehavior);1520584785;Create a new DefaultTransactionDefinition with the given_propagation behavior. Can be modified through bean property setters._@param propagationBehavior one of the propagation constants in the_TransactionDefinition interface_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly;public DefaultTransactionDefinition(int propagationBehavior) {_		this.propagationBehavior = propagationBehavior__	};create,a,new,default,transaction,definition,with,the,given,propagation,behavior,can,be,modified,through,bean,property,setters,param,propagation,behavior,one,of,the,propagation,constants,in,the,transaction,definition,interface,see,set,isolation,level,see,set,timeout,see,set,read,only;public,default,transaction,definition,int,propagation,behavior,this,propagation,behavior,propagation,behavior
DefaultTransactionDefinition -> public DefaultTransactionDefinition(int propagationBehavior);1530174524;Create a new DefaultTransactionDefinition with the given_propagation behavior. Can be modified through bean property setters._@param propagationBehavior one of the propagation constants in the_TransactionDefinition interface_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly;public DefaultTransactionDefinition(int propagationBehavior) {_		this.propagationBehavior = propagationBehavior__	};create,a,new,default,transaction,definition,with,the,given,propagation,behavior,can,be,modified,through,bean,property,setters,param,propagation,behavior,one,of,the,propagation,constants,in,the,transaction,definition,interface,see,set,isolation,level,see,set,timeout,see,set,read,only;public,default,transaction,definition,int,propagation,behavior,this,propagation,behavior,propagation,behavior
DefaultTransactionDefinition -> @Override 	public String toString();1328020251;Return an identifying description for this transaction definition._<p>The format matches the one used by_{@link org.springframework.transaction.interceptor.TransactionAttributeEditor},_to be able to feed <code>toString</code> results into bean properties of type_{@link org.springframework.transaction.interceptor.TransactionAttribute}._<p>Has to be overridden in subclasses for correct <code>equals</code>_and <code>hashCode</code> behavior. Alternatively, {@link #equals}_and {@link #hashCode} can be overridden themselves._@see #getDefinitionDescription()_@see org.springframework.transaction.interceptor.TransactionAttributeEditor;@Override_	public String toString() {_		return getDefinitionDescription().toString()__	};return,an,identifying,description,for,this,transaction,definition,p,the,format,matches,the,one,used,by,link,org,springframework,transaction,interceptor,transaction,attribute,editor,to,be,able,to,feed,code,to,string,code,results,into,bean,properties,of,type,link,org,springframework,transaction,interceptor,transaction,attribute,p,has,to,be,overridden,in,subclasses,for,correct,code,equals,code,and,code,hash,code,code,behavior,alternatively,link,equals,and,link,hash,code,can,be,overridden,themselves,see,get,definition,description,see,org,springframework,transaction,interceptor,transaction,attribute,editor;override,public,string,to,string,return,get,definition,description,to,string
DefaultTransactionDefinition -> @Override 	public String toString();1356735495;Return an identifying description for this transaction definition._<p>The format matches the one used by_{@link org.springframework.transaction.interceptor.TransactionAttributeEditor},_to be able to feed {@code toString} results into bean properties of type_{@link org.springframework.transaction.interceptor.TransactionAttribute}._<p>Has to be overridden in subclasses for correct {@code equals}_and {@code hashCode} behavior. Alternatively, {@link #equals}_and {@link #hashCode} can be overridden themselves._@see #getDefinitionDescription()_@see org.springframework.transaction.interceptor.TransactionAttributeEditor;@Override_	public String toString() {_		return getDefinitionDescription().toString()__	};return,an,identifying,description,for,this,transaction,definition,p,the,format,matches,the,one,used,by,link,org,springframework,transaction,interceptor,transaction,attribute,editor,to,be,able,to,feed,code,to,string,results,into,bean,properties,of,type,link,org,springframework,transaction,interceptor,transaction,attribute,p,has,to,be,overridden,in,subclasses,for,correct,code,equals,and,code,hash,code,behavior,alternatively,link,equals,and,link,hash,code,can,be,overridden,themselves,see,get,definition,description,see,org,springframework,transaction,interceptor,transaction,attribute,editor;override,public,string,to,string,return,get,definition,description,to,string
DefaultTransactionDefinition -> @Override 	public String toString();1357119239;Return an identifying description for this transaction definition._<p>The format matches the one used by_{@link org.springframework.transaction.interceptor.TransactionAttributeEditor},_to be able to feed {@code toString} results into bean properties of type_{@link org.springframework.transaction.interceptor.TransactionAttribute}._<p>Has to be overridden in subclasses for correct {@code equals}_and {@code hashCode} behavior. Alternatively, {@link #equals}_and {@link #hashCode} can be overridden themselves._@see #getDefinitionDescription()_@see org.springframework.transaction.interceptor.TransactionAttributeEditor;@Override_	public String toString() {_		return getDefinitionDescription().toString()__	};return,an,identifying,description,for,this,transaction,definition,p,the,format,matches,the,one,used,by,link,org,springframework,transaction,interceptor,transaction,attribute,editor,to,be,able,to,feed,code,to,string,results,into,bean,properties,of,type,link,org,springframework,transaction,interceptor,transaction,attribute,p,has,to,be,overridden,in,subclasses,for,correct,code,equals,and,code,hash,code,behavior,alternatively,link,equals,and,link,hash,code,can,be,overridden,themselves,see,get,definition,description,see,org,springframework,transaction,interceptor,transaction,attribute,editor;override,public,string,to,string,return,get,definition,description,to,string
DefaultTransactionDefinition -> @Override 	public String toString();1368482696;Return an identifying description for this transaction definition._<p>The format matches the one used by_{@link org.springframework.transaction.interceptor.TransactionAttributeEditor},_to be able to feed {@code toString} results into bean properties of type_{@link org.springframework.transaction.interceptor.TransactionAttribute}._<p>Has to be overridden in subclasses for correct {@code equals}_and {@code hashCode} behavior. Alternatively, {@link #equals}_and {@link #hashCode} can be overridden themselves._@see #getDefinitionDescription()_@see org.springframework.transaction.interceptor.TransactionAttributeEditor;@Override_	public String toString() {_		return getDefinitionDescription().toString()__	};return,an,identifying,description,for,this,transaction,definition,p,the,format,matches,the,one,used,by,link,org,springframework,transaction,interceptor,transaction,attribute,editor,to,be,able,to,feed,code,to,string,results,into,bean,properties,of,type,link,org,springframework,transaction,interceptor,transaction,attribute,p,has,to,be,overridden,in,subclasses,for,correct,code,equals,and,code,hash,code,behavior,alternatively,link,equals,and,link,hash,code,can,be,overridden,themselves,see,get,definition,description,see,org,springframework,transaction,interceptor,transaction,attribute,editor;override,public,string,to,string,return,get,definition,description,to,string
DefaultTransactionDefinition -> @Override 	public String toString();1461047077;Return an identifying description for this transaction definition._<p>The format matches the one used by_{@link org.springframework.transaction.interceptor.TransactionAttributeEditor},_to be able to feed {@code toString} results into bean properties of type_{@link org.springframework.transaction.interceptor.TransactionAttribute}._<p>Has to be overridden in subclasses for correct {@code equals}_and {@code hashCode} behavior. Alternatively, {@link #equals}_and {@link #hashCode} can be overridden themselves._@see #getDefinitionDescription()_@see org.springframework.transaction.interceptor.TransactionAttributeEditor;@Override_	public String toString() {_		return getDefinitionDescription().toString()__	};return,an,identifying,description,for,this,transaction,definition,p,the,format,matches,the,one,used,by,link,org,springframework,transaction,interceptor,transaction,attribute,editor,to,be,able,to,feed,code,to,string,results,into,bean,properties,of,type,link,org,springframework,transaction,interceptor,transaction,attribute,p,has,to,be,overridden,in,subclasses,for,correct,code,equals,and,code,hash,code,behavior,alternatively,link,equals,and,link,hash,code,can,be,overridden,themselves,see,get,definition,description,see,org,springframework,transaction,interceptor,transaction,attribute,editor;override,public,string,to,string,return,get,definition,description,to,string
DefaultTransactionDefinition -> @Override 	public String toString();1496837955;Return an identifying description for this transaction definition._<p>The format matches the one used by_{@link org.springframework.transaction.interceptor.TransactionAttributeEditor},_to be able to feed {@code toString} results into bean properties of type_{@link org.springframework.transaction.interceptor.TransactionAttribute}._<p>Has to be overridden in subclasses for correct {@code equals}_and {@code hashCode} behavior. Alternatively, {@link #equals}_and {@link #hashCode} can be overridden themselves._@see #getDefinitionDescription()_@see org.springframework.transaction.interceptor.TransactionAttributeEditor;@Override_	public String toString() {_		return getDefinitionDescription().toString()__	};return,an,identifying,description,for,this,transaction,definition,p,the,format,matches,the,one,used,by,link,org,springframework,transaction,interceptor,transaction,attribute,editor,to,be,able,to,feed,code,to,string,results,into,bean,properties,of,type,link,org,springframework,transaction,interceptor,transaction,attribute,p,has,to,be,overridden,in,subclasses,for,correct,code,equals,and,code,hash,code,behavior,alternatively,link,equals,and,link,hash,code,can,be,overridden,themselves,see,get,definition,description,see,org,springframework,transaction,interceptor,transaction,attribute,editor;override,public,string,to,string,return,get,definition,description,to,string
DefaultTransactionDefinition -> @Override 	public String toString();1498780456;Return an identifying description for this transaction definition._<p>The format matches the one used by_{@link org.springframework.transaction.interceptor.TransactionAttributeEditor},_to be able to feed {@code toString} results into bean properties of type_{@link org.springframework.transaction.interceptor.TransactionAttribute}._<p>Has to be overridden in subclasses for correct {@code equals}_and {@code hashCode} behavior. Alternatively, {@link #equals}_and {@link #hashCode} can be overridden themselves._@see #getDefinitionDescription()_@see org.springframework.transaction.interceptor.TransactionAttributeEditor;@Override_	public String toString() {_		return getDefinitionDescription().toString()__	};return,an,identifying,description,for,this,transaction,definition,p,the,format,matches,the,one,used,by,link,org,springframework,transaction,interceptor,transaction,attribute,editor,to,be,able,to,feed,code,to,string,results,into,bean,properties,of,type,link,org,springframework,transaction,interceptor,transaction,attribute,p,has,to,be,overridden,in,subclasses,for,correct,code,equals,and,code,hash,code,behavior,alternatively,link,equals,and,link,hash,code,can,be,overridden,themselves,see,get,definition,description,see,org,springframework,transaction,interceptor,transaction,attribute,editor;override,public,string,to,string,return,get,definition,description,to,string
DefaultTransactionDefinition -> @Override 	public String toString();1500495740;Return an identifying description for this transaction definition._<p>The format matches the one used by_{@link org.springframework.transaction.interceptor.TransactionAttributeEditor},_to be able to feed {@code toString} results into bean properties of type_{@link org.springframework.transaction.interceptor.TransactionAttribute}._<p>Has to be overridden in subclasses for correct {@code equals}_and {@code hashCode} behavior. Alternatively, {@link #equals}_and {@link #hashCode} can be overridden themselves._@see #getDefinitionDescription()_@see org.springframework.transaction.interceptor.TransactionAttributeEditor;@Override_	public String toString() {_		return getDefinitionDescription().toString()__	};return,an,identifying,description,for,this,transaction,definition,p,the,format,matches,the,one,used,by,link,org,springframework,transaction,interceptor,transaction,attribute,editor,to,be,able,to,feed,code,to,string,results,into,bean,properties,of,type,link,org,springframework,transaction,interceptor,transaction,attribute,p,has,to,be,overridden,in,subclasses,for,correct,code,equals,and,code,hash,code,behavior,alternatively,link,equals,and,link,hash,code,can,be,overridden,themselves,see,get,definition,description,see,org,springframework,transaction,interceptor,transaction,attribute,editor;override,public,string,to,string,return,get,definition,description,to,string
DefaultTransactionDefinition -> @Override 	public String toString();1517867503;Return an identifying description for this transaction definition._<p>The format matches the one used by_{@link org.springframework.transaction.interceptor.TransactionAttributeEditor},_to be able to feed {@code toString} results into bean properties of type_{@link org.springframework.transaction.interceptor.TransactionAttribute}._<p>Has to be overridden in subclasses for correct {@code equals}_and {@code hashCode} behavior. Alternatively, {@link #equals}_and {@link #hashCode} can be overridden themselves._@see #getDefinitionDescription()_@see org.springframework.transaction.interceptor.TransactionAttributeEditor;@Override_	public String toString() {_		return getDefinitionDescription().toString()__	};return,an,identifying,description,for,this,transaction,definition,p,the,format,matches,the,one,used,by,link,org,springframework,transaction,interceptor,transaction,attribute,editor,to,be,able,to,feed,code,to,string,results,into,bean,properties,of,type,link,org,springframework,transaction,interceptor,transaction,attribute,p,has,to,be,overridden,in,subclasses,for,correct,code,equals,and,code,hash,code,behavior,alternatively,link,equals,and,link,hash,code,can,be,overridden,themselves,see,get,definition,description,see,org,springframework,transaction,interceptor,transaction,attribute,editor;override,public,string,to,string,return,get,definition,description,to,string
DefaultTransactionDefinition -> @Override 	public String toString();1520584785;Return an identifying description for this transaction definition._<p>The format matches the one used by_{@link org.springframework.transaction.interceptor.TransactionAttributeEditor},_to be able to feed {@code toString} results into bean properties of type_{@link org.springframework.transaction.interceptor.TransactionAttribute}._<p>Has to be overridden in subclasses for correct {@code equals}_and {@code hashCode} behavior. Alternatively, {@link #equals}_and {@link #hashCode} can be overridden themselves._@see #getDefinitionDescription()_@see org.springframework.transaction.interceptor.TransactionAttributeEditor;@Override_	public String toString() {_		return getDefinitionDescription().toString()__	};return,an,identifying,description,for,this,transaction,definition,p,the,format,matches,the,one,used,by,link,org,springframework,transaction,interceptor,transaction,attribute,editor,to,be,able,to,feed,code,to,string,results,into,bean,properties,of,type,link,org,springframework,transaction,interceptor,transaction,attribute,p,has,to,be,overridden,in,subclasses,for,correct,code,equals,and,code,hash,code,behavior,alternatively,link,equals,and,link,hash,code,can,be,overridden,themselves,see,get,definition,description,see,org,springframework,transaction,interceptor,transaction,attribute,editor;override,public,string,to,string,return,get,definition,description,to,string
DefaultTransactionDefinition -> @Override 	public String toString();1530174524;Return an identifying description for this transaction definition._<p>The format matches the one used by_{@link org.springframework.transaction.interceptor.TransactionAttributeEditor},_to be able to feed {@code toString} results into bean properties of type_{@link org.springframework.transaction.interceptor.TransactionAttribute}._<p>Has to be overridden in subclasses for correct {@code equals}_and {@code hashCode} behavior. Alternatively, {@link #equals}_and {@link #hashCode} can be overridden themselves._@see #getDefinitionDescription()_@see org.springframework.transaction.interceptor.TransactionAttributeEditor;@Override_	public String toString() {_		return getDefinitionDescription().toString()__	};return,an,identifying,description,for,this,transaction,definition,p,the,format,matches,the,one,used,by,link,org,springframework,transaction,interceptor,transaction,attribute,editor,to,be,able,to,feed,code,to,string,results,into,bean,properties,of,type,link,org,springframework,transaction,interceptor,transaction,attribute,p,has,to,be,overridden,in,subclasses,for,correct,code,equals,and,code,hash,code,behavior,alternatively,link,equals,and,link,hash,code,can,be,overridden,themselves,see,get,definition,description,see,org,springframework,transaction,interceptor,transaction,attribute,editor;override,public,string,to,string,return,get,definition,description,to,string
DefaultTransactionDefinition -> public final void setReadOnly(boolean readOnly);1328020251;Set whether to optimize as read-only transaction._Default is "false".;public final void setReadOnly(boolean readOnly) {_		this.readOnly = readOnly__	};set,whether,to,optimize,as,read,only,transaction,default,is,false;public,final,void,set,read,only,boolean,read,only,this,read,only,read,only
DefaultTransactionDefinition -> public final void setReadOnly(boolean readOnly);1356735495;Set whether to optimize as read-only transaction._Default is "false".;public final void setReadOnly(boolean readOnly) {_		this.readOnly = readOnly__	};set,whether,to,optimize,as,read,only,transaction,default,is,false;public,final,void,set,read,only,boolean,read,only,this,read,only,read,only
DefaultTransactionDefinition -> public final void setReadOnly(boolean readOnly);1357119239;Set whether to optimize as read-only transaction._Default is "false".;public final void setReadOnly(boolean readOnly) {_		this.readOnly = readOnly__	};set,whether,to,optimize,as,read,only,transaction,default,is,false;public,final,void,set,read,only,boolean,read,only,this,read,only,read,only
DefaultTransactionDefinition -> public final void setReadOnly(boolean readOnly);1368482696;Set whether to optimize as read-only transaction._Default is "false".;public final void setReadOnly(boolean readOnly) {_		this.readOnly = readOnly__	};set,whether,to,optimize,as,read,only,transaction,default,is,false;public,final,void,set,read,only,boolean,read,only,this,read,only,read,only
DefaultTransactionDefinition -> public final void setReadOnly(boolean readOnly);1461047077;Set whether to optimize as read-only transaction._Default is "false".;public final void setReadOnly(boolean readOnly) {_		this.readOnly = readOnly__	};set,whether,to,optimize,as,read,only,transaction,default,is,false;public,final,void,set,read,only,boolean,read,only,this,read,only,read,only
DefaultTransactionDefinition -> public final void setReadOnly(boolean readOnly);1496837955;Set whether to optimize as read-only transaction._Default is "false".;public final void setReadOnly(boolean readOnly) {_		this.readOnly = readOnly__	};set,whether,to,optimize,as,read,only,transaction,default,is,false;public,final,void,set,read,only,boolean,read,only,this,read,only,read,only
DefaultTransactionDefinition -> public final void setReadOnly(boolean readOnly);1498780456;Set whether to optimize as read-only transaction._Default is "false".;public final void setReadOnly(boolean readOnly) {_		this.readOnly = readOnly__	};set,whether,to,optimize,as,read,only,transaction,default,is,false;public,final,void,set,read,only,boolean,read,only,this,read,only,read,only
DefaultTransactionDefinition -> public final void setReadOnly(boolean readOnly);1500495740;Set whether to optimize as read-only transaction._Default is "false".;public final void setReadOnly(boolean readOnly) {_		this.readOnly = readOnly__	};set,whether,to,optimize,as,read,only,transaction,default,is,false;public,final,void,set,read,only,boolean,read,only,this,read,only,read,only
DefaultTransactionDefinition -> public final void setReadOnly(boolean readOnly);1517867503;Set whether to optimize as read-only transaction._Default is "false"._<p>The read-only flag applies to any transaction context, whether backed_by an actual resource transaction ({@link #PROPAGATION_REQUIRED}/_{@link #PROPAGATION_REQUIRES_NEW}) or operating non-transactionally at_the resource level ({@link #PROPAGATION_SUPPORTS}). In the latter case,_the flag will only apply to managed resources within the application,_such as a Hibernate {@code Session}._<p>This just serves as a hint for the actual transaction subsystem__it will <i>not necessarily</i> cause failure of write access attempts._A transaction manager which cannot interpret the read-only hint will_<i>not</i> throw an exception when asked for a read-only transaction.;public final void setReadOnly(boolean readOnly) {_		this.readOnly = readOnly__	};set,whether,to,optimize,as,read,only,transaction,default,is,false,p,the,read,only,flag,applies,to,any,transaction,context,whether,backed,by,an,actual,resource,transaction,link,link,or,operating,non,transactionally,at,the,resource,level,link,in,the,latter,case,the,flag,will,only,apply,to,managed,resources,within,the,application,such,as,a,hibernate,code,session,p,this,just,serves,as,a,hint,for,the,actual,transaction,subsystem,it,will,i,not,necessarily,i,cause,failure,of,write,access,attempts,a,transaction,manager,which,cannot,interpret,the,read,only,hint,will,i,not,i,throw,an,exception,when,asked,for,a,read,only,transaction;public,final,void,set,read,only,boolean,read,only,this,read,only,read,only
DefaultTransactionDefinition -> public final void setReadOnly(boolean readOnly);1520584785;Set whether to optimize as read-only transaction._Default is "false"._<p>The read-only flag applies to any transaction context, whether backed_by an actual resource transaction ({@link #PROPAGATION_REQUIRED}/_{@link #PROPAGATION_REQUIRES_NEW}) or operating non-transactionally at_the resource level ({@link #PROPAGATION_SUPPORTS}). In the latter case,_the flag will only apply to managed resources within the application,_such as a Hibernate {@code Session}._<p>This just serves as a hint for the actual transaction subsystem__it will <i>not necessarily</i> cause failure of write access attempts._A transaction manager which cannot interpret the read-only hint will_<i>not</i> throw an exception when asked for a read-only transaction.;public final void setReadOnly(boolean readOnly) {_		this.readOnly = readOnly__	};set,whether,to,optimize,as,read,only,transaction,default,is,false,p,the,read,only,flag,applies,to,any,transaction,context,whether,backed,by,an,actual,resource,transaction,link,link,or,operating,non,transactionally,at,the,resource,level,link,in,the,latter,case,the,flag,will,only,apply,to,managed,resources,within,the,application,such,as,a,hibernate,code,session,p,this,just,serves,as,a,hint,for,the,actual,transaction,subsystem,it,will,i,not,necessarily,i,cause,failure,of,write,access,attempts,a,transaction,manager,which,cannot,interpret,the,read,only,hint,will,i,not,i,throw,an,exception,when,asked,for,a,read,only,transaction;public,final,void,set,read,only,boolean,read,only,this,read,only,read,only
DefaultTransactionDefinition -> public final void setReadOnly(boolean readOnly);1530174524;Set whether to optimize as read-only transaction._Default is "false"._<p>The read-only flag applies to any transaction context, whether backed_by an actual resource transaction ({@link #PROPAGATION_REQUIRED}/_{@link #PROPAGATION_REQUIRES_NEW}) or operating non-transactionally at_the resource level ({@link #PROPAGATION_SUPPORTS}). In the latter case,_the flag will only apply to managed resources within the application,_such as a Hibernate {@code Session}._<p>This just serves as a hint for the actual transaction subsystem__it will <i>not necessarily</i> cause failure of write access attempts._A transaction manager which cannot interpret the read-only hint will_<i>not</i> throw an exception when asked for a read-only transaction.;public final void setReadOnly(boolean readOnly) {_		this.readOnly = readOnly__	};set,whether,to,optimize,as,read,only,transaction,default,is,false,p,the,read,only,flag,applies,to,any,transaction,context,whether,backed,by,an,actual,resource,transaction,link,link,or,operating,non,transactionally,at,the,resource,level,link,in,the,latter,case,the,flag,will,only,apply,to,managed,resources,within,the,application,such,as,a,hibernate,code,session,p,this,just,serves,as,a,hint,for,the,actual,transaction,subsystem,it,will,i,not,necessarily,i,cause,failure,of,write,access,attempts,a,transaction,manager,which,cannot,interpret,the,read,only,hint,will,i,not,i,throw,an,exception,when,asked,for,a,read,only,transaction;public,final,void,set,read,only,boolean,read,only,this,read,only,read,only
DefaultTransactionDefinition -> public DefaultTransactionDefinition(TransactionDefinition other);1328020251;Copy constructor. Definition can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName;public DefaultTransactionDefinition(TransactionDefinition other) {_		this.propagationBehavior = other.getPropagationBehavior()__		this.isolationLevel = other.getIsolationLevel()__		this.timeout = other.getTimeout()__		this.readOnly = other.isReadOnly()__		this.name = other.getName()__	};copy,constructor,definition,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name;public,default,transaction,definition,transaction,definition,other,this,propagation,behavior,other,get,propagation,behavior,this,isolation,level,other,get,isolation,level,this,timeout,other,get,timeout,this,read,only,other,is,read,only,this,name,other,get,name
DefaultTransactionDefinition -> public DefaultTransactionDefinition(TransactionDefinition other);1356735495;Copy constructor. Definition can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName;public DefaultTransactionDefinition(TransactionDefinition other) {_		this.propagationBehavior = other.getPropagationBehavior()__		this.isolationLevel = other.getIsolationLevel()__		this.timeout = other.getTimeout()__		this.readOnly = other.isReadOnly()__		this.name = other.getName()__	};copy,constructor,definition,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name;public,default,transaction,definition,transaction,definition,other,this,propagation,behavior,other,get,propagation,behavior,this,isolation,level,other,get,isolation,level,this,timeout,other,get,timeout,this,read,only,other,is,read,only,this,name,other,get,name
DefaultTransactionDefinition -> public DefaultTransactionDefinition(TransactionDefinition other);1357119239;Copy constructor. Definition can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName;public DefaultTransactionDefinition(TransactionDefinition other) {_		this.propagationBehavior = other.getPropagationBehavior()__		this.isolationLevel = other.getIsolationLevel()__		this.timeout = other.getTimeout()__		this.readOnly = other.isReadOnly()__		this.name = other.getName()__	};copy,constructor,definition,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name;public,default,transaction,definition,transaction,definition,other,this,propagation,behavior,other,get,propagation,behavior,this,isolation,level,other,get,isolation,level,this,timeout,other,get,timeout,this,read,only,other,is,read,only,this,name,other,get,name
DefaultTransactionDefinition -> public DefaultTransactionDefinition(TransactionDefinition other);1368482696;Copy constructor. Definition can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName;public DefaultTransactionDefinition(TransactionDefinition other) {_		this.propagationBehavior = other.getPropagationBehavior()__		this.isolationLevel = other.getIsolationLevel()__		this.timeout = other.getTimeout()__		this.readOnly = other.isReadOnly()__		this.name = other.getName()__	};copy,constructor,definition,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name;public,default,transaction,definition,transaction,definition,other,this,propagation,behavior,other,get,propagation,behavior,this,isolation,level,other,get,isolation,level,this,timeout,other,get,timeout,this,read,only,other,is,read,only,this,name,other,get,name
DefaultTransactionDefinition -> public DefaultTransactionDefinition(TransactionDefinition other);1461047077;Copy constructor. Definition can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName;public DefaultTransactionDefinition(TransactionDefinition other) {_		this.propagationBehavior = other.getPropagationBehavior()__		this.isolationLevel = other.getIsolationLevel()__		this.timeout = other.getTimeout()__		this.readOnly = other.isReadOnly()__		this.name = other.getName()__	};copy,constructor,definition,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name;public,default,transaction,definition,transaction,definition,other,this,propagation,behavior,other,get,propagation,behavior,this,isolation,level,other,get,isolation,level,this,timeout,other,get,timeout,this,read,only,other,is,read,only,this,name,other,get,name
DefaultTransactionDefinition -> public DefaultTransactionDefinition(TransactionDefinition other);1496837955;Copy constructor. Definition can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName;public DefaultTransactionDefinition(TransactionDefinition other) {_		this.propagationBehavior = other.getPropagationBehavior()__		this.isolationLevel = other.getIsolationLevel()__		this.timeout = other.getTimeout()__		this.readOnly = other.isReadOnly()__		this.name = other.getName()__	};copy,constructor,definition,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name;public,default,transaction,definition,transaction,definition,other,this,propagation,behavior,other,get,propagation,behavior,this,isolation,level,other,get,isolation,level,this,timeout,other,get,timeout,this,read,only,other,is,read,only,this,name,other,get,name
DefaultTransactionDefinition -> public DefaultTransactionDefinition(TransactionDefinition other);1498780456;Copy constructor. Definition can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName;public DefaultTransactionDefinition(TransactionDefinition other) {_		this.propagationBehavior = other.getPropagationBehavior()__		this.isolationLevel = other.getIsolationLevel()__		this.timeout = other.getTimeout()__		this.readOnly = other.isReadOnly()__		this.name = other.getName()__	};copy,constructor,definition,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name;public,default,transaction,definition,transaction,definition,other,this,propagation,behavior,other,get,propagation,behavior,this,isolation,level,other,get,isolation,level,this,timeout,other,get,timeout,this,read,only,other,is,read,only,this,name,other,get,name
DefaultTransactionDefinition -> public DefaultTransactionDefinition(TransactionDefinition other);1500495740;Copy constructor. Definition can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName;public DefaultTransactionDefinition(TransactionDefinition other) {_		this.propagationBehavior = other.getPropagationBehavior()__		this.isolationLevel = other.getIsolationLevel()__		this.timeout = other.getTimeout()__		this.readOnly = other.isReadOnly()__		this.name = other.getName()__	};copy,constructor,definition,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name;public,default,transaction,definition,transaction,definition,other,this,propagation,behavior,other,get,propagation,behavior,this,isolation,level,other,get,isolation,level,this,timeout,other,get,timeout,this,read,only,other,is,read,only,this,name,other,get,name
DefaultTransactionDefinition -> public DefaultTransactionDefinition(TransactionDefinition other);1517867503;Copy constructor. Definition can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName;public DefaultTransactionDefinition(TransactionDefinition other) {_		this.propagationBehavior = other.getPropagationBehavior()__		this.isolationLevel = other.getIsolationLevel()__		this.timeout = other.getTimeout()__		this.readOnly = other.isReadOnly()__		this.name = other.getName()__	};copy,constructor,definition,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name;public,default,transaction,definition,transaction,definition,other,this,propagation,behavior,other,get,propagation,behavior,this,isolation,level,other,get,isolation,level,this,timeout,other,get,timeout,this,read,only,other,is,read,only,this,name,other,get,name
DefaultTransactionDefinition -> public DefaultTransactionDefinition(TransactionDefinition other);1520584785;Copy constructor. Definition can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName;public DefaultTransactionDefinition(TransactionDefinition other) {_		this.propagationBehavior = other.getPropagationBehavior()__		this.isolationLevel = other.getIsolationLevel()__		this.timeout = other.getTimeout()__		this.readOnly = other.isReadOnly()__		this.name = other.getName()__	};copy,constructor,definition,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name;public,default,transaction,definition,transaction,definition,other,this,propagation,behavior,other,get,propagation,behavior,this,isolation,level,other,get,isolation,level,this,timeout,other,get,timeout,this,read,only,other,is,read,only,this,name,other,get,name
DefaultTransactionDefinition -> public DefaultTransactionDefinition(TransactionDefinition other);1530174524;Copy constructor. Definition can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName;public DefaultTransactionDefinition(TransactionDefinition other) {_		this.propagationBehavior = other.getPropagationBehavior()__		this.isolationLevel = other.getIsolationLevel()__		this.timeout = other.getTimeout()__		this.readOnly = other.isReadOnly()__		this.name = other.getName()__	};copy,constructor,definition,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name;public,default,transaction,definition,transaction,definition,other,this,propagation,behavior,other,get,propagation,behavior,this,isolation,level,other,get,isolation,level,this,timeout,other,get,timeout,this,read,only,other,is,read,only,this,name,other,get,name
DefaultTransactionDefinition -> public final void setTimeout(int timeout);1328020251;Set the timeout to apply, as number of seconds._Default is TIMEOUT_DEFAULT (-1)._@see #TIMEOUT_DEFAULT;public final void setTimeout(int timeout) {_		if (timeout < TIMEOUT_DEFAULT) {_			throw new IllegalArgumentException("Timeout must be a positive integer or TIMEOUT_DEFAULT")__		}_		this.timeout = timeout__	};set,the,timeout,to,apply,as,number,of,seconds,default,is,1,see;public,final,void,set,timeout,int,timeout,if,timeout,throw,new,illegal,argument,exception,timeout,must,be,a,positive,integer,or,this,timeout,timeout
DefaultTransactionDefinition -> public final void setTimeout(int timeout);1356735495;Set the timeout to apply, as number of seconds._Default is TIMEOUT_DEFAULT (-1)._@see #TIMEOUT_DEFAULT;public final void setTimeout(int timeout) {_		if (timeout < TIMEOUT_DEFAULT) {_			throw new IllegalArgumentException("Timeout must be a positive integer or TIMEOUT_DEFAULT")__		}_		this.timeout = timeout__	};set,the,timeout,to,apply,as,number,of,seconds,default,is,1,see;public,final,void,set,timeout,int,timeout,if,timeout,throw,new,illegal,argument,exception,timeout,must,be,a,positive,integer,or,this,timeout,timeout
DefaultTransactionDefinition -> public final void setTimeout(int timeout);1357119239;Set the timeout to apply, as number of seconds._Default is TIMEOUT_DEFAULT (-1)._@see #TIMEOUT_DEFAULT;public final void setTimeout(int timeout) {_		if (timeout < TIMEOUT_DEFAULT) {_			throw new IllegalArgumentException("Timeout must be a positive integer or TIMEOUT_DEFAULT")__		}_		this.timeout = timeout__	};set,the,timeout,to,apply,as,number,of,seconds,default,is,1,see;public,final,void,set,timeout,int,timeout,if,timeout,throw,new,illegal,argument,exception,timeout,must,be,a,positive,integer,or,this,timeout,timeout
DefaultTransactionDefinition -> public final void setTimeout(int timeout);1368482696;Set the timeout to apply, as number of seconds._Default is TIMEOUT_DEFAULT (-1)._@see #TIMEOUT_DEFAULT;public final void setTimeout(int timeout) {_		if (timeout < TIMEOUT_DEFAULT) {_			throw new IllegalArgumentException("Timeout must be a positive integer or TIMEOUT_DEFAULT")__		}_		this.timeout = timeout__	};set,the,timeout,to,apply,as,number,of,seconds,default,is,1,see;public,final,void,set,timeout,int,timeout,if,timeout,throw,new,illegal,argument,exception,timeout,must,be,a,positive,integer,or,this,timeout,timeout
DefaultTransactionDefinition -> public final void setTimeout(int timeout);1461047077;Set the timeout to apply, as number of seconds._Default is TIMEOUT_DEFAULT (-1)._@see #TIMEOUT_DEFAULT;public final void setTimeout(int timeout) {_		if (timeout < TIMEOUT_DEFAULT) {_			throw new IllegalArgumentException("Timeout must be a positive integer or TIMEOUT_DEFAULT")__		}_		this.timeout = timeout__	};set,the,timeout,to,apply,as,number,of,seconds,default,is,1,see;public,final,void,set,timeout,int,timeout,if,timeout,throw,new,illegal,argument,exception,timeout,must,be,a,positive,integer,or,this,timeout,timeout
DefaultTransactionDefinition -> public final void setTimeout(int timeout);1496837955;Set the timeout to apply, as number of seconds._Default is TIMEOUT_DEFAULT (-1)._@see #TIMEOUT_DEFAULT;public final void setTimeout(int timeout) {_		if (timeout < TIMEOUT_DEFAULT) {_			throw new IllegalArgumentException("Timeout must be a positive integer or TIMEOUT_DEFAULT")__		}_		this.timeout = timeout__	};set,the,timeout,to,apply,as,number,of,seconds,default,is,1,see;public,final,void,set,timeout,int,timeout,if,timeout,throw,new,illegal,argument,exception,timeout,must,be,a,positive,integer,or,this,timeout,timeout
DefaultTransactionDefinition -> public final void setTimeout(int timeout);1498780456;Set the timeout to apply, as number of seconds._Default is TIMEOUT_DEFAULT (-1)._@see #TIMEOUT_DEFAULT;public final void setTimeout(int timeout) {_		if (timeout < TIMEOUT_DEFAULT) {_			throw new IllegalArgumentException("Timeout must be a positive integer or TIMEOUT_DEFAULT")__		}_		this.timeout = timeout__	};set,the,timeout,to,apply,as,number,of,seconds,default,is,1,see;public,final,void,set,timeout,int,timeout,if,timeout,throw,new,illegal,argument,exception,timeout,must,be,a,positive,integer,or,this,timeout,timeout
DefaultTransactionDefinition -> public final void setTimeout(int timeout);1500495740;Set the timeout to apply, as number of seconds._Default is TIMEOUT_DEFAULT (-1)._@see #TIMEOUT_DEFAULT;public final void setTimeout(int timeout) {_		if (timeout < TIMEOUT_DEFAULT) {_			throw new IllegalArgumentException("Timeout must be a positive integer or TIMEOUT_DEFAULT")__		}_		this.timeout = timeout__	};set,the,timeout,to,apply,as,number,of,seconds,default,is,1,see;public,final,void,set,timeout,int,timeout,if,timeout,throw,new,illegal,argument,exception,timeout,must,be,a,positive,integer,or,this,timeout,timeout
DefaultTransactionDefinition -> public final void setTimeout(int timeout);1517867503;Set the timeout to apply, as number of seconds._Default is TIMEOUT_DEFAULT (-1)._<p>Exclusively designed for use with {@link #PROPAGATION_REQUIRED} or_{@link #PROPAGATION_REQUIRES_NEW} since it only applies to newly started_transactions._<p>Note that a transaction manager that does not support timeouts will throw_an exception when given any other timeout than {@link #TIMEOUT_DEFAULT}._@see #TIMEOUT_DEFAULT;public final void setTimeout(int timeout) {_		if (timeout < TIMEOUT_DEFAULT) {_			throw new IllegalArgumentException("Timeout must be a positive integer or TIMEOUT_DEFAULT")__		}_		this.timeout = timeout__	};set,the,timeout,to,apply,as,number,of,seconds,default,is,1,p,exclusively,designed,for,use,with,link,or,link,since,it,only,applies,to,newly,started,transactions,p,note,that,a,transaction,manager,that,does,not,support,timeouts,will,throw,an,exception,when,given,any,other,timeout,than,link,see;public,final,void,set,timeout,int,timeout,if,timeout,throw,new,illegal,argument,exception,timeout,must,be,a,positive,integer,or,this,timeout,timeout
DefaultTransactionDefinition -> public final void setTimeout(int timeout);1520584785;Set the timeout to apply, as number of seconds._Default is TIMEOUT_DEFAULT (-1)._<p>Exclusively designed for use with {@link #PROPAGATION_REQUIRED} or_{@link #PROPAGATION_REQUIRES_NEW} since it only applies to newly started_transactions._<p>Note that a transaction manager that does not support timeouts will throw_an exception when given any other timeout than {@link #TIMEOUT_DEFAULT}._@see #TIMEOUT_DEFAULT;public final void setTimeout(int timeout) {_		if (timeout < TIMEOUT_DEFAULT) {_			throw new IllegalArgumentException("Timeout must be a positive integer or TIMEOUT_DEFAULT")__		}_		this.timeout = timeout__	};set,the,timeout,to,apply,as,number,of,seconds,default,is,1,p,exclusively,designed,for,use,with,link,or,link,since,it,only,applies,to,newly,started,transactions,p,note,that,a,transaction,manager,that,does,not,support,timeouts,will,throw,an,exception,when,given,any,other,timeout,than,link,see;public,final,void,set,timeout,int,timeout,if,timeout,throw,new,illegal,argument,exception,timeout,must,be,a,positive,integer,or,this,timeout,timeout
DefaultTransactionDefinition -> public final void setTimeout(int timeout);1530174524;Set the timeout to apply, as number of seconds._Default is TIMEOUT_DEFAULT (-1)._<p>Exclusively designed for use with {@link #PROPAGATION_REQUIRED} or_{@link #PROPAGATION_REQUIRES_NEW} since it only applies to newly started_transactions._<p>Note that a transaction manager that does not support timeouts will throw_an exception when given any other timeout than {@link #TIMEOUT_DEFAULT}._@see #TIMEOUT_DEFAULT;public final void setTimeout(int timeout) {_		if (timeout < TIMEOUT_DEFAULT) {_			throw new IllegalArgumentException("Timeout must be a positive integer or TIMEOUT_DEFAULT")__		}_		this.timeout = timeout__	};set,the,timeout,to,apply,as,number,of,seconds,default,is,1,p,exclusively,designed,for,use,with,link,or,link,since,it,only,applies,to,newly,started,transactions,p,note,that,a,transaction,manager,that,does,not,support,timeouts,will,throw,an,exception,when,given,any,other,timeout,than,link,see;public,final,void,set,timeout,int,timeout,if,timeout,throw,new,illegal,argument,exception,timeout,must,be,a,positive,integer,or,this,timeout,timeout
DefaultTransactionDefinition -> public final void setName(String name);1328020251;Set the name of this transaction. Default is none._<p>This will be used as transaction name to be shown in a_transaction monitor, if applicable (for example, WebLogic's).;public final void setName(String name) {_		this.name = name__	};set,the,name,of,this,transaction,default,is,none,p,this,will,be,used,as,transaction,name,to,be,shown,in,a,transaction,monitor,if,applicable,for,example,web,logic,s;public,final,void,set,name,string,name,this,name,name
DefaultTransactionDefinition -> public final void setName(String name);1356735495;Set the name of this transaction. Default is none._<p>This will be used as transaction name to be shown in a_transaction monitor, if applicable (for example, WebLogic's).;public final void setName(String name) {_		this.name = name__	};set,the,name,of,this,transaction,default,is,none,p,this,will,be,used,as,transaction,name,to,be,shown,in,a,transaction,monitor,if,applicable,for,example,web,logic,s;public,final,void,set,name,string,name,this,name,name
DefaultTransactionDefinition -> public final void setName(String name);1357119239;Set the name of this transaction. Default is none._<p>This will be used as transaction name to be shown in a_transaction monitor, if applicable (for example, WebLogic's).;public final void setName(String name) {_		this.name = name__	};set,the,name,of,this,transaction,default,is,none,p,this,will,be,used,as,transaction,name,to,be,shown,in,a,transaction,monitor,if,applicable,for,example,web,logic,s;public,final,void,set,name,string,name,this,name,name
DefaultTransactionDefinition -> public final void setName(String name);1368482696;Set the name of this transaction. Default is none._<p>This will be used as transaction name to be shown in a_transaction monitor, if applicable (for example, WebLogic's).;public final void setName(String name) {_		this.name = name__	};set,the,name,of,this,transaction,default,is,none,p,this,will,be,used,as,transaction,name,to,be,shown,in,a,transaction,monitor,if,applicable,for,example,web,logic,s;public,final,void,set,name,string,name,this,name,name
DefaultTransactionDefinition -> public final void setName(String name);1461047077;Set the name of this transaction. Default is none._<p>This will be used as transaction name to be shown in a_transaction monitor, if applicable (for example, WebLogic's).;public final void setName(String name) {_		this.name = name__	};set,the,name,of,this,transaction,default,is,none,p,this,will,be,used,as,transaction,name,to,be,shown,in,a,transaction,monitor,if,applicable,for,example,web,logic,s;public,final,void,set,name,string,name,this,name,name
DefaultTransactionDefinition -> public final void setName(String name);1496837955;Set the name of this transaction. Default is none._<p>This will be used as transaction name to be shown in a_transaction monitor, if applicable (for example, WebLogic's).;public final void setName(String name) {_		this.name = name__	};set,the,name,of,this,transaction,default,is,none,p,this,will,be,used,as,transaction,name,to,be,shown,in,a,transaction,monitor,if,applicable,for,example,web,logic,s;public,final,void,set,name,string,name,this,name,name
DefaultTransactionDefinition -> public final void setName(String name);1498780456;Set the name of this transaction. Default is none._<p>This will be used as transaction name to be shown in a_transaction monitor, if applicable (for example, WebLogic's).;public final void setName(String name) {_		this.name = name__	};set,the,name,of,this,transaction,default,is,none,p,this,will,be,used,as,transaction,name,to,be,shown,in,a,transaction,monitor,if,applicable,for,example,web,logic,s;public,final,void,set,name,string,name,this,name,name
DefaultTransactionDefinition -> public final void setName(String name);1500495740;Set the name of this transaction. Default is none._<p>This will be used as transaction name to be shown in a_transaction monitor, if applicable (for example, WebLogic's).;public final void setName(String name) {_		this.name = name__	};set,the,name,of,this,transaction,default,is,none,p,this,will,be,used,as,transaction,name,to,be,shown,in,a,transaction,monitor,if,applicable,for,example,web,logic,s;public,final,void,set,name,string,name,this,name,name
DefaultTransactionDefinition -> public final void setName(String name);1517867503;Set the name of this transaction. Default is none._<p>This will be used as transaction name to be shown in a_transaction monitor, if applicable (for example, WebLogic's).;public final void setName(String name) {_		this.name = name__	};set,the,name,of,this,transaction,default,is,none,p,this,will,be,used,as,transaction,name,to,be,shown,in,a,transaction,monitor,if,applicable,for,example,web,logic,s;public,final,void,set,name,string,name,this,name,name
DefaultTransactionDefinition -> public final void setName(String name);1520584785;Set the name of this transaction. Default is none._<p>This will be used as transaction name to be shown in a_transaction monitor, if applicable (for example, WebLogic's).;public final void setName(String name) {_		this.name = name__	};set,the,name,of,this,transaction,default,is,none,p,this,will,be,used,as,transaction,name,to,be,shown,in,a,transaction,monitor,if,applicable,for,example,web,logic,s;public,final,void,set,name,string,name,this,name,name
DefaultTransactionDefinition -> public final void setName(String name);1530174524;Set the name of this transaction. Default is none._<p>This will be used as transaction name to be shown in a_transaction monitor, if applicable (for example, WebLogic's).;public final void setName(String name) {_		this.name = name__	};set,the,name,of,this,transaction,default,is,none,p,this,will,be,used,as,transaction,name,to,be,shown,in,a,transaction,monitor,if,applicable,for,example,web,logic,s;public,final,void,set,name,string,name,this,name,name
DefaultTransactionDefinition -> @Override 	public int hashCode();1328020251;This implementation returns <code>toString()</code>'s hash code._@see #toString();@Override_	public int hashCode() {_		return toString().hashCode()__	};this,implementation,returns,code,to,string,code,s,hash,code,see,to,string;override,public,int,hash,code,return,to,string,hash,code
DefaultTransactionDefinition -> @Override 	public int hashCode();1356735495;This implementation returns {@code toString()}'s hash code._@see #toString();@Override_	public int hashCode() {_		return toString().hashCode()__	};this,implementation,returns,code,to,string,s,hash,code,see,to,string;override,public,int,hash,code,return,to,string,hash,code
DefaultTransactionDefinition -> @Override 	public int hashCode();1357119239;This implementation returns {@code toString()}'s hash code._@see #toString();@Override_	public int hashCode() {_		return toString().hashCode()__	};this,implementation,returns,code,to,string,s,hash,code,see,to,string;override,public,int,hash,code,return,to,string,hash,code
DefaultTransactionDefinition -> @Override 	public int hashCode();1368482696;This implementation returns {@code toString()}'s hash code._@see #toString();@Override_	public int hashCode() {_		return toString().hashCode()__	};this,implementation,returns,code,to,string,s,hash,code,see,to,string;override,public,int,hash,code,return,to,string,hash,code
DefaultTransactionDefinition -> @Override 	public int hashCode();1461047077;This implementation returns {@code toString()}'s hash code._@see #toString();@Override_	public int hashCode() {_		return toString().hashCode()__	};this,implementation,returns,code,to,string,s,hash,code,see,to,string;override,public,int,hash,code,return,to,string,hash,code
DefaultTransactionDefinition -> @Override 	public int hashCode();1496837955;This implementation returns {@code toString()}'s hash code._@see #toString();@Override_	public int hashCode() {_		return toString().hashCode()__	};this,implementation,returns,code,to,string,s,hash,code,see,to,string;override,public,int,hash,code,return,to,string,hash,code
DefaultTransactionDefinition -> @Override 	public int hashCode();1498780456;This implementation returns {@code toString()}'s hash code._@see #toString();@Override_	public int hashCode() {_		return toString().hashCode()__	};this,implementation,returns,code,to,string,s,hash,code,see,to,string;override,public,int,hash,code,return,to,string,hash,code
DefaultTransactionDefinition -> @Override 	public int hashCode();1500495740;This implementation returns {@code toString()}'s hash code._@see #toString();@Override_	public int hashCode() {_		return toString().hashCode()__	};this,implementation,returns,code,to,string,s,hash,code,see,to,string;override,public,int,hash,code,return,to,string,hash,code
DefaultTransactionDefinition -> @Override 	public int hashCode();1517867503;This implementation returns {@code toString()}'s hash code._@see #toString();@Override_	public int hashCode() {_		return toString().hashCode()__	};this,implementation,returns,code,to,string,s,hash,code,see,to,string;override,public,int,hash,code,return,to,string,hash,code
DefaultTransactionDefinition -> @Override 	public int hashCode();1520584785;This implementation returns {@code toString()}'s hash code._@see #toString();@Override_	public int hashCode() {_		return toString().hashCode()__	};this,implementation,returns,code,to,string,s,hash,code,see,to,string;override,public,int,hash,code,return,to,string,hash,code
DefaultTransactionDefinition -> @Override 	public int hashCode();1530174524;This implementation returns {@code toString()}'s hash code._@see #toString();@Override_	public int hashCode() {_		return toString().hashCode()__	};this,implementation,returns,code,to,string,s,hash,code,see,to,string;override,public,int,hash,code,return,to,string,hash,code
DefaultTransactionDefinition -> public final void setPropagationBehavior(int propagationBehavior);1328020251;Set the propagation behavior. Must be one of the propagation constants_in the TransactionDefinition interface. Default is PROPAGATION_REQUIRED._@exception IllegalArgumentException if the supplied value is not_one of the <code>PROPAGATION_</code> constants_@see #PROPAGATION_REQUIRED;public final void setPropagationBehavior(int propagationBehavior) {_		if (!constants.getValues(PREFIX_PROPAGATION).contains(propagationBehavior)) {_			throw new IllegalArgumentException("Only values of propagation constants allowed")__		}_		this.propagationBehavior = propagationBehavior__	};set,the,propagation,behavior,must,be,one,of,the,propagation,constants,in,the,transaction,definition,interface,default,is,exception,illegal,argument,exception,if,the,supplied,value,is,not,one,of,the,code,code,constants,see;public,final,void,set,propagation,behavior,int,propagation,behavior,if,constants,get,values,contains,propagation,behavior,throw,new,illegal,argument,exception,only,values,of,propagation,constants,allowed,this,propagation,behavior,propagation,behavior
DefaultTransactionDefinition -> public final void setPropagationBehavior(int propagationBehavior);1356735495;Set the propagation behavior. Must be one of the propagation constants_in the TransactionDefinition interface. Default is PROPAGATION_REQUIRED._@exception IllegalArgumentException if the supplied value is not_one of the {@code PROPAGATION_} constants_@see #PROPAGATION_REQUIRED;public final void setPropagationBehavior(int propagationBehavior) {_		if (!constants.getValues(PREFIX_PROPAGATION).contains(propagationBehavior)) {_			throw new IllegalArgumentException("Only values of propagation constants allowed")__		}_		this.propagationBehavior = propagationBehavior__	};set,the,propagation,behavior,must,be,one,of,the,propagation,constants,in,the,transaction,definition,interface,default,is,exception,illegal,argument,exception,if,the,supplied,value,is,not,one,of,the,code,constants,see;public,final,void,set,propagation,behavior,int,propagation,behavior,if,constants,get,values,contains,propagation,behavior,throw,new,illegal,argument,exception,only,values,of,propagation,constants,allowed,this,propagation,behavior,propagation,behavior
DefaultTransactionDefinition -> public final void setPropagationBehavior(int propagationBehavior);1357119239;Set the propagation behavior. Must be one of the propagation constants_in the TransactionDefinition interface. Default is PROPAGATION_REQUIRED._@exception IllegalArgumentException if the supplied value is not_one of the {@code PROPAGATION_} constants_@see #PROPAGATION_REQUIRED;public final void setPropagationBehavior(int propagationBehavior) {_		if (!constants.getValues(PREFIX_PROPAGATION).contains(propagationBehavior)) {_			throw new IllegalArgumentException("Only values of propagation constants allowed")__		}_		this.propagationBehavior = propagationBehavior__	};set,the,propagation,behavior,must,be,one,of,the,propagation,constants,in,the,transaction,definition,interface,default,is,exception,illegal,argument,exception,if,the,supplied,value,is,not,one,of,the,code,constants,see;public,final,void,set,propagation,behavior,int,propagation,behavior,if,constants,get,values,contains,propagation,behavior,throw,new,illegal,argument,exception,only,values,of,propagation,constants,allowed,this,propagation,behavior,propagation,behavior
DefaultTransactionDefinition -> public final void setPropagationBehavior(int propagationBehavior);1368482696;Set the propagation behavior. Must be one of the propagation constants_in the TransactionDefinition interface. Default is PROPAGATION_REQUIRED._@exception IllegalArgumentException if the supplied value is not_one of the {@code PROPAGATION_} constants_@see #PROPAGATION_REQUIRED;public final void setPropagationBehavior(int propagationBehavior) {_		if (!constants.getValues(PREFIX_PROPAGATION).contains(propagationBehavior)) {_			throw new IllegalArgumentException("Only values of propagation constants allowed")__		}_		this.propagationBehavior = propagationBehavior__	};set,the,propagation,behavior,must,be,one,of,the,propagation,constants,in,the,transaction,definition,interface,default,is,exception,illegal,argument,exception,if,the,supplied,value,is,not,one,of,the,code,constants,see;public,final,void,set,propagation,behavior,int,propagation,behavior,if,constants,get,values,contains,propagation,behavior,throw,new,illegal,argument,exception,only,values,of,propagation,constants,allowed,this,propagation,behavior,propagation,behavior
DefaultTransactionDefinition -> public final void setPropagationBehavior(int propagationBehavior);1461047077;Set the propagation behavior. Must be one of the propagation constants_in the TransactionDefinition interface. Default is PROPAGATION_REQUIRED._@exception IllegalArgumentException if the supplied value is not_one of the {@code PROPAGATION_} constants_@see #PROPAGATION_REQUIRED;public final void setPropagationBehavior(int propagationBehavior) {_		if (!constants.getValues(PREFIX_PROPAGATION).contains(propagationBehavior)) {_			throw new IllegalArgumentException("Only values of propagation constants allowed")__		}_		this.propagationBehavior = propagationBehavior__	};set,the,propagation,behavior,must,be,one,of,the,propagation,constants,in,the,transaction,definition,interface,default,is,exception,illegal,argument,exception,if,the,supplied,value,is,not,one,of,the,code,constants,see;public,final,void,set,propagation,behavior,int,propagation,behavior,if,constants,get,values,contains,propagation,behavior,throw,new,illegal,argument,exception,only,values,of,propagation,constants,allowed,this,propagation,behavior,propagation,behavior
DefaultTransactionDefinition -> public final void setPropagationBehavior(int propagationBehavior);1496837955;Set the propagation behavior. Must be one of the propagation constants_in the TransactionDefinition interface. Default is PROPAGATION_REQUIRED._@exception IllegalArgumentException if the supplied value is not_one of the {@code PROPAGATION_} constants_@see #PROPAGATION_REQUIRED;public final void setPropagationBehavior(int propagationBehavior) {_		if (!constants.getValues(PREFIX_PROPAGATION).contains(propagationBehavior)) {_			throw new IllegalArgumentException("Only values of propagation constants allowed")__		}_		this.propagationBehavior = propagationBehavior__	};set,the,propagation,behavior,must,be,one,of,the,propagation,constants,in,the,transaction,definition,interface,default,is,exception,illegal,argument,exception,if,the,supplied,value,is,not,one,of,the,code,constants,see;public,final,void,set,propagation,behavior,int,propagation,behavior,if,constants,get,values,contains,propagation,behavior,throw,new,illegal,argument,exception,only,values,of,propagation,constants,allowed,this,propagation,behavior,propagation,behavior
DefaultTransactionDefinition -> public final void setPropagationBehavior(int propagationBehavior);1498780456;Set the propagation behavior. Must be one of the propagation constants_in the TransactionDefinition interface. Default is PROPAGATION_REQUIRED._@exception IllegalArgumentException if the supplied value is not_one of the {@code PROPAGATION_} constants_@see #PROPAGATION_REQUIRED;public final void setPropagationBehavior(int propagationBehavior) {_		if (!constants.getValues(PREFIX_PROPAGATION).contains(propagationBehavior)) {_			throw new IllegalArgumentException("Only values of propagation constants allowed")__		}_		this.propagationBehavior = propagationBehavior__	};set,the,propagation,behavior,must,be,one,of,the,propagation,constants,in,the,transaction,definition,interface,default,is,exception,illegal,argument,exception,if,the,supplied,value,is,not,one,of,the,code,constants,see;public,final,void,set,propagation,behavior,int,propagation,behavior,if,constants,get,values,contains,propagation,behavior,throw,new,illegal,argument,exception,only,values,of,propagation,constants,allowed,this,propagation,behavior,propagation,behavior
DefaultTransactionDefinition -> public final void setPropagationBehavior(int propagationBehavior);1500495740;Set the propagation behavior. Must be one of the propagation constants_in the TransactionDefinition interface. Default is PROPAGATION_REQUIRED._@exception IllegalArgumentException if the supplied value is not_one of the {@code PROPAGATION_} constants_@see #PROPAGATION_REQUIRED;public final void setPropagationBehavior(int propagationBehavior) {_		if (!constants.getValues(PREFIX_PROPAGATION).contains(propagationBehavior)) {_			throw new IllegalArgumentException("Only values of propagation constants allowed")__		}_		this.propagationBehavior = propagationBehavior__	};set,the,propagation,behavior,must,be,one,of,the,propagation,constants,in,the,transaction,definition,interface,default,is,exception,illegal,argument,exception,if,the,supplied,value,is,not,one,of,the,code,constants,see;public,final,void,set,propagation,behavior,int,propagation,behavior,if,constants,get,values,contains,propagation,behavior,throw,new,illegal,argument,exception,only,values,of,propagation,constants,allowed,this,propagation,behavior,propagation,behavior
DefaultTransactionDefinition -> public final void setPropagationBehavior(int propagationBehavior);1517867503;Set the propagation behavior. Must be one of the propagation constants_in the TransactionDefinition interface. Default is PROPAGATION_REQUIRED._<p>Exclusively designed for use with {@link #PROPAGATION_REQUIRED} or_{@link #PROPAGATION_REQUIRES_NEW} since it only applies to newly started_transactions. Consider switching the "validateExistingTransactions" flag to_"true" on your transaction manager if you'd like isolation level declarations_to get rejected when participating in an existing transaction with a different_isolation level._<p>Note that a transaction manager that does not support custom isolation levels_will throw an exception when given any other level than {@link #ISOLATION_DEFAULT}._@throws IllegalArgumentException if the supplied value is not one of the_{@code PROPAGATION_} constants_@see #PROPAGATION_REQUIRED;public final void setPropagationBehavior(int propagationBehavior) {_		if (!constants.getValues(PREFIX_PROPAGATION).contains(propagationBehavior)) {_			throw new IllegalArgumentException("Only values of propagation constants allowed")__		}_		this.propagationBehavior = propagationBehavior__	};set,the,propagation,behavior,must,be,one,of,the,propagation,constants,in,the,transaction,definition,interface,default,is,p,exclusively,designed,for,use,with,link,or,link,since,it,only,applies,to,newly,started,transactions,consider,switching,the,validate,existing,transactions,flag,to,true,on,your,transaction,manager,if,you,d,like,isolation,level,declarations,to,get,rejected,when,participating,in,an,existing,transaction,with,a,different,isolation,level,p,note,that,a,transaction,manager,that,does,not,support,custom,isolation,levels,will,throw,an,exception,when,given,any,other,level,than,link,throws,illegal,argument,exception,if,the,supplied,value,is,not,one,of,the,code,constants,see;public,final,void,set,propagation,behavior,int,propagation,behavior,if,constants,get,values,contains,propagation,behavior,throw,new,illegal,argument,exception,only,values,of,propagation,constants,allowed,this,propagation,behavior,propagation,behavior
DefaultTransactionDefinition -> public final void setPropagationBehavior(int propagationBehavior);1520584785;Set the propagation behavior. Must be one of the propagation constants_in the TransactionDefinition interface. Default is PROPAGATION_REQUIRED._<p>Exclusively designed for use with {@link #PROPAGATION_REQUIRED} or_{@link #PROPAGATION_REQUIRES_NEW} since it only applies to newly started_transactions. Consider switching the "validateExistingTransactions" flag to_"true" on your transaction manager if you'd like isolation level declarations_to get rejected when participating in an existing transaction with a different_isolation level._<p>Note that a transaction manager that does not support custom isolation levels_will throw an exception when given any other level than {@link #ISOLATION_DEFAULT}._@throws IllegalArgumentException if the supplied value is not one of the_{@code PROPAGATION_} constants_@see #PROPAGATION_REQUIRED;public final void setPropagationBehavior(int propagationBehavior) {_		if (!constants.getValues(PREFIX_PROPAGATION).contains(propagationBehavior)) {_			throw new IllegalArgumentException("Only values of propagation constants allowed")__		}_		this.propagationBehavior = propagationBehavior__	};set,the,propagation,behavior,must,be,one,of,the,propagation,constants,in,the,transaction,definition,interface,default,is,p,exclusively,designed,for,use,with,link,or,link,since,it,only,applies,to,newly,started,transactions,consider,switching,the,validate,existing,transactions,flag,to,true,on,your,transaction,manager,if,you,d,like,isolation,level,declarations,to,get,rejected,when,participating,in,an,existing,transaction,with,a,different,isolation,level,p,note,that,a,transaction,manager,that,does,not,support,custom,isolation,levels,will,throw,an,exception,when,given,any,other,level,than,link,throws,illegal,argument,exception,if,the,supplied,value,is,not,one,of,the,code,constants,see;public,final,void,set,propagation,behavior,int,propagation,behavior,if,constants,get,values,contains,propagation,behavior,throw,new,illegal,argument,exception,only,values,of,propagation,constants,allowed,this,propagation,behavior,propagation,behavior
DefaultTransactionDefinition -> public final void setPropagationBehavior(int propagationBehavior);1530174524;Set the propagation behavior. Must be one of the propagation constants_in the TransactionDefinition interface. Default is PROPAGATION_REQUIRED._<p>Exclusively designed for use with {@link #PROPAGATION_REQUIRED} or_{@link #PROPAGATION_REQUIRES_NEW} since it only applies to newly started_transactions. Consider switching the "validateExistingTransactions" flag to_"true" on your transaction manager if you'd like isolation level declarations_to get rejected when participating in an existing transaction with a different_isolation level._<p>Note that a transaction manager that does not support custom isolation levels_will throw an exception when given any other level than {@link #ISOLATION_DEFAULT}._@throws IllegalArgumentException if the supplied value is not one of the_{@code PROPAGATION_} constants_@see #PROPAGATION_REQUIRED;public final void setPropagationBehavior(int propagationBehavior) {_		if (!constants.getValues(PREFIX_PROPAGATION).contains(propagationBehavior)) {_			throw new IllegalArgumentException("Only values of propagation constants allowed")__		}_		this.propagationBehavior = propagationBehavior__	};set,the,propagation,behavior,must,be,one,of,the,propagation,constants,in,the,transaction,definition,interface,default,is,p,exclusively,designed,for,use,with,link,or,link,since,it,only,applies,to,newly,started,transactions,consider,switching,the,validate,existing,transactions,flag,to,true,on,your,transaction,manager,if,you,d,like,isolation,level,declarations,to,get,rejected,when,participating,in,an,existing,transaction,with,a,different,isolation,level,p,note,that,a,transaction,manager,that,does,not,support,custom,isolation,levels,will,throw,an,exception,when,given,any,other,level,than,link,throws,illegal,argument,exception,if,the,supplied,value,is,not,one,of,the,code,constants,see;public,final,void,set,propagation,behavior,int,propagation,behavior,if,constants,get,values,contains,propagation,behavior,throw,new,illegal,argument,exception,only,values,of,propagation,constants,allowed,this,propagation,behavior,propagation,behavior
DefaultTransactionDefinition -> public final void setIsolationLevel(int isolationLevel);1328020251;Set the isolation level. Must be one of the isolation constants_in the TransactionDefinition interface. Default is ISOLATION_DEFAULT._@exception IllegalArgumentException if the supplied value is not_one of the <code>ISOLATION_</code> constants_@see #ISOLATION_DEFAULT;public final void setIsolationLevel(int isolationLevel) {_		if (!constants.getValues(PREFIX_ISOLATION).contains(isolationLevel)) {_			throw new IllegalArgumentException("Only values of isolation constants allowed")__		}_		this.isolationLevel = isolationLevel__	};set,the,isolation,level,must,be,one,of,the,isolation,constants,in,the,transaction,definition,interface,default,is,exception,illegal,argument,exception,if,the,supplied,value,is,not,one,of,the,code,code,constants,see;public,final,void,set,isolation,level,int,isolation,level,if,constants,get,values,contains,isolation,level,throw,new,illegal,argument,exception,only,values,of,isolation,constants,allowed,this,isolation,level,isolation,level
DefaultTransactionDefinition -> public final void setIsolationLevel(int isolationLevel);1356735495;Set the isolation level. Must be one of the isolation constants_in the TransactionDefinition interface. Default is ISOLATION_DEFAULT._@exception IllegalArgumentException if the supplied value is not_one of the {@code ISOLATION_} constants_@see #ISOLATION_DEFAULT;public final void setIsolationLevel(int isolationLevel) {_		if (!constants.getValues(PREFIX_ISOLATION).contains(isolationLevel)) {_			throw new IllegalArgumentException("Only values of isolation constants allowed")__		}_		this.isolationLevel = isolationLevel__	};set,the,isolation,level,must,be,one,of,the,isolation,constants,in,the,transaction,definition,interface,default,is,exception,illegal,argument,exception,if,the,supplied,value,is,not,one,of,the,code,constants,see;public,final,void,set,isolation,level,int,isolation,level,if,constants,get,values,contains,isolation,level,throw,new,illegal,argument,exception,only,values,of,isolation,constants,allowed,this,isolation,level,isolation,level
DefaultTransactionDefinition -> public final void setIsolationLevel(int isolationLevel);1357119239;Set the isolation level. Must be one of the isolation constants_in the TransactionDefinition interface. Default is ISOLATION_DEFAULT._@exception IllegalArgumentException if the supplied value is not_one of the {@code ISOLATION_} constants_@see #ISOLATION_DEFAULT;public final void setIsolationLevel(int isolationLevel) {_		if (!constants.getValues(PREFIX_ISOLATION).contains(isolationLevel)) {_			throw new IllegalArgumentException("Only values of isolation constants allowed")__		}_		this.isolationLevel = isolationLevel__	};set,the,isolation,level,must,be,one,of,the,isolation,constants,in,the,transaction,definition,interface,default,is,exception,illegal,argument,exception,if,the,supplied,value,is,not,one,of,the,code,constants,see;public,final,void,set,isolation,level,int,isolation,level,if,constants,get,values,contains,isolation,level,throw,new,illegal,argument,exception,only,values,of,isolation,constants,allowed,this,isolation,level,isolation,level
DefaultTransactionDefinition -> public final void setIsolationLevel(int isolationLevel);1368482696;Set the isolation level. Must be one of the isolation constants_in the TransactionDefinition interface. Default is ISOLATION_DEFAULT._@exception IllegalArgumentException if the supplied value is not_one of the {@code ISOLATION_} constants_@see #ISOLATION_DEFAULT;public final void setIsolationLevel(int isolationLevel) {_		if (!constants.getValues(PREFIX_ISOLATION).contains(isolationLevel)) {_			throw new IllegalArgumentException("Only values of isolation constants allowed")__		}_		this.isolationLevel = isolationLevel__	};set,the,isolation,level,must,be,one,of,the,isolation,constants,in,the,transaction,definition,interface,default,is,exception,illegal,argument,exception,if,the,supplied,value,is,not,one,of,the,code,constants,see;public,final,void,set,isolation,level,int,isolation,level,if,constants,get,values,contains,isolation,level,throw,new,illegal,argument,exception,only,values,of,isolation,constants,allowed,this,isolation,level,isolation,level
DefaultTransactionDefinition -> public final void setIsolationLevel(int isolationLevel);1461047077;Set the isolation level. Must be one of the isolation constants_in the TransactionDefinition interface. Default is ISOLATION_DEFAULT._@exception IllegalArgumentException if the supplied value is not_one of the {@code ISOLATION_} constants_@see #ISOLATION_DEFAULT;public final void setIsolationLevel(int isolationLevel) {_		if (!constants.getValues(PREFIX_ISOLATION).contains(isolationLevel)) {_			throw new IllegalArgumentException("Only values of isolation constants allowed")__		}_		this.isolationLevel = isolationLevel__	};set,the,isolation,level,must,be,one,of,the,isolation,constants,in,the,transaction,definition,interface,default,is,exception,illegal,argument,exception,if,the,supplied,value,is,not,one,of,the,code,constants,see;public,final,void,set,isolation,level,int,isolation,level,if,constants,get,values,contains,isolation,level,throw,new,illegal,argument,exception,only,values,of,isolation,constants,allowed,this,isolation,level,isolation,level
DefaultTransactionDefinition -> public final void setIsolationLevel(int isolationLevel);1496837955;Set the isolation level. Must be one of the isolation constants_in the TransactionDefinition interface. Default is ISOLATION_DEFAULT._@exception IllegalArgumentException if the supplied value is not_one of the {@code ISOLATION_} constants_@see #ISOLATION_DEFAULT;public final void setIsolationLevel(int isolationLevel) {_		if (!constants.getValues(PREFIX_ISOLATION).contains(isolationLevel)) {_			throw new IllegalArgumentException("Only values of isolation constants allowed")__		}_		this.isolationLevel = isolationLevel__	};set,the,isolation,level,must,be,one,of,the,isolation,constants,in,the,transaction,definition,interface,default,is,exception,illegal,argument,exception,if,the,supplied,value,is,not,one,of,the,code,constants,see;public,final,void,set,isolation,level,int,isolation,level,if,constants,get,values,contains,isolation,level,throw,new,illegal,argument,exception,only,values,of,isolation,constants,allowed,this,isolation,level,isolation,level
DefaultTransactionDefinition -> public final void setIsolationLevel(int isolationLevel);1498780456;Set the isolation level. Must be one of the isolation constants_in the TransactionDefinition interface. Default is ISOLATION_DEFAULT._@exception IllegalArgumentException if the supplied value is not_one of the {@code ISOLATION_} constants_@see #ISOLATION_DEFAULT;public final void setIsolationLevel(int isolationLevel) {_		if (!constants.getValues(PREFIX_ISOLATION).contains(isolationLevel)) {_			throw new IllegalArgumentException("Only values of isolation constants allowed")__		}_		this.isolationLevel = isolationLevel__	};set,the,isolation,level,must,be,one,of,the,isolation,constants,in,the,transaction,definition,interface,default,is,exception,illegal,argument,exception,if,the,supplied,value,is,not,one,of,the,code,constants,see;public,final,void,set,isolation,level,int,isolation,level,if,constants,get,values,contains,isolation,level,throw,new,illegal,argument,exception,only,values,of,isolation,constants,allowed,this,isolation,level,isolation,level
DefaultTransactionDefinition -> public final void setIsolationLevel(int isolationLevel);1500495740;Set the isolation level. Must be one of the isolation constants_in the TransactionDefinition interface. Default is ISOLATION_DEFAULT._@exception IllegalArgumentException if the supplied value is not_one of the {@code ISOLATION_} constants_@see #ISOLATION_DEFAULT;public final void setIsolationLevel(int isolationLevel) {_		if (!constants.getValues(PREFIX_ISOLATION).contains(isolationLevel)) {_			throw new IllegalArgumentException("Only values of isolation constants allowed")__		}_		this.isolationLevel = isolationLevel__	};set,the,isolation,level,must,be,one,of,the,isolation,constants,in,the,transaction,definition,interface,default,is,exception,illegal,argument,exception,if,the,supplied,value,is,not,one,of,the,code,constants,see;public,final,void,set,isolation,level,int,isolation,level,if,constants,get,values,contains,isolation,level,throw,new,illegal,argument,exception,only,values,of,isolation,constants,allowed,this,isolation,level,isolation,level
DefaultTransactionDefinition -> public final void setIsolationLevel(int isolationLevel);1517867503;Set the isolation level. Must be one of the isolation constants_in the TransactionDefinition interface. Default is ISOLATION_DEFAULT._<p>Exclusively designed for use with {@link #PROPAGATION_REQUIRED} or_{@link #PROPAGATION_REQUIRES_NEW} since it only applies to newly started_transactions. Consider switching the "validateExistingTransactions" flag to_"true" on your transaction manager if you'd like isolation level declarations_to get rejected when participating in an existing transaction with a different_isolation level._<p>Note that a transaction manager that does not support custom isolation levels_will throw an exception when given any other level than {@link #ISOLATION_DEFAULT}._@throws IllegalArgumentException if the supplied value is not one of the_{@code ISOLATION_} constants_@see #ISOLATION_DEFAULT;public final void setIsolationLevel(int isolationLevel) {_		if (!constants.getValues(PREFIX_ISOLATION).contains(isolationLevel)) {_			throw new IllegalArgumentException("Only values of isolation constants allowed")__		}_		this.isolationLevel = isolationLevel__	};set,the,isolation,level,must,be,one,of,the,isolation,constants,in,the,transaction,definition,interface,default,is,p,exclusively,designed,for,use,with,link,or,link,since,it,only,applies,to,newly,started,transactions,consider,switching,the,validate,existing,transactions,flag,to,true,on,your,transaction,manager,if,you,d,like,isolation,level,declarations,to,get,rejected,when,participating,in,an,existing,transaction,with,a,different,isolation,level,p,note,that,a,transaction,manager,that,does,not,support,custom,isolation,levels,will,throw,an,exception,when,given,any,other,level,than,link,throws,illegal,argument,exception,if,the,supplied,value,is,not,one,of,the,code,constants,see;public,final,void,set,isolation,level,int,isolation,level,if,constants,get,values,contains,isolation,level,throw,new,illegal,argument,exception,only,values,of,isolation,constants,allowed,this,isolation,level,isolation,level
DefaultTransactionDefinition -> public final void setIsolationLevel(int isolationLevel);1520584785;Set the isolation level. Must be one of the isolation constants_in the TransactionDefinition interface. Default is ISOLATION_DEFAULT._<p>Exclusively designed for use with {@link #PROPAGATION_REQUIRED} or_{@link #PROPAGATION_REQUIRES_NEW} since it only applies to newly started_transactions. Consider switching the "validateExistingTransactions" flag to_"true" on your transaction manager if you'd like isolation level declarations_to get rejected when participating in an existing transaction with a different_isolation level._<p>Note that a transaction manager that does not support custom isolation levels_will throw an exception when given any other level than {@link #ISOLATION_DEFAULT}._@throws IllegalArgumentException if the supplied value is not one of the_{@code ISOLATION_} constants_@see #ISOLATION_DEFAULT;public final void setIsolationLevel(int isolationLevel) {_		if (!constants.getValues(PREFIX_ISOLATION).contains(isolationLevel)) {_			throw new IllegalArgumentException("Only values of isolation constants allowed")__		}_		this.isolationLevel = isolationLevel__	};set,the,isolation,level,must,be,one,of,the,isolation,constants,in,the,transaction,definition,interface,default,is,p,exclusively,designed,for,use,with,link,or,link,since,it,only,applies,to,newly,started,transactions,consider,switching,the,validate,existing,transactions,flag,to,true,on,your,transaction,manager,if,you,d,like,isolation,level,declarations,to,get,rejected,when,participating,in,an,existing,transaction,with,a,different,isolation,level,p,note,that,a,transaction,manager,that,does,not,support,custom,isolation,levels,will,throw,an,exception,when,given,any,other,level,than,link,throws,illegal,argument,exception,if,the,supplied,value,is,not,one,of,the,code,constants,see;public,final,void,set,isolation,level,int,isolation,level,if,constants,get,values,contains,isolation,level,throw,new,illegal,argument,exception,only,values,of,isolation,constants,allowed,this,isolation,level,isolation,level
DefaultTransactionDefinition -> public final void setIsolationLevel(int isolationLevel);1530174524;Set the isolation level. Must be one of the isolation constants_in the TransactionDefinition interface. Default is ISOLATION_DEFAULT._<p>Exclusively designed for use with {@link #PROPAGATION_REQUIRED} or_{@link #PROPAGATION_REQUIRES_NEW} since it only applies to newly started_transactions. Consider switching the "validateExistingTransactions" flag to_"true" on your transaction manager if you'd like isolation level declarations_to get rejected when participating in an existing transaction with a different_isolation level._<p>Note that a transaction manager that does not support custom isolation levels_will throw an exception when given any other level than {@link #ISOLATION_DEFAULT}._@throws IllegalArgumentException if the supplied value is not one of the_{@code ISOLATION_} constants_@see #ISOLATION_DEFAULT;public final void setIsolationLevel(int isolationLevel) {_		if (!constants.getValues(PREFIX_ISOLATION).contains(isolationLevel)) {_			throw new IllegalArgumentException("Only values of isolation constants allowed")__		}_		this.isolationLevel = isolationLevel__	};set,the,isolation,level,must,be,one,of,the,isolation,constants,in,the,transaction,definition,interface,default,is,p,exclusively,designed,for,use,with,link,or,link,since,it,only,applies,to,newly,started,transactions,consider,switching,the,validate,existing,transactions,flag,to,true,on,your,transaction,manager,if,you,d,like,isolation,level,declarations,to,get,rejected,when,participating,in,an,existing,transaction,with,a,different,isolation,level,p,note,that,a,transaction,manager,that,does,not,support,custom,isolation,levels,will,throw,an,exception,when,given,any,other,level,than,link,throws,illegal,argument,exception,if,the,supplied,value,is,not,one,of,the,code,constants,see;public,final,void,set,isolation,level,int,isolation,level,if,constants,get,values,contains,isolation,level,throw,new,illegal,argument,exception,only,values,of,isolation,constants,allowed,this,isolation,level,isolation,level
DefaultTransactionDefinition -> public DefaultTransactionDefinition();1328020251;Create a new DefaultTransactionDefinition, with default settings._Can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName;public DefaultTransactionDefinition() {_	};create,a,new,default,transaction,definition,with,default,settings,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name;public,default,transaction,definition
DefaultTransactionDefinition -> public DefaultTransactionDefinition();1356735495;Create a new DefaultTransactionDefinition, with default settings._Can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName;public DefaultTransactionDefinition() {_	};create,a,new,default,transaction,definition,with,default,settings,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name;public,default,transaction,definition
DefaultTransactionDefinition -> public DefaultTransactionDefinition();1357119239;Create a new DefaultTransactionDefinition, with default settings._Can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName;public DefaultTransactionDefinition() {_	};create,a,new,default,transaction,definition,with,default,settings,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name;public,default,transaction,definition
DefaultTransactionDefinition -> public DefaultTransactionDefinition();1368482696;Create a new DefaultTransactionDefinition, with default settings._Can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName;public DefaultTransactionDefinition() {_	};create,a,new,default,transaction,definition,with,default,settings,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name;public,default,transaction,definition
DefaultTransactionDefinition -> public DefaultTransactionDefinition();1461047077;Create a new DefaultTransactionDefinition, with default settings._Can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName;public DefaultTransactionDefinition() {_	};create,a,new,default,transaction,definition,with,default,settings,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name;public,default,transaction,definition
DefaultTransactionDefinition -> public DefaultTransactionDefinition();1496837955;Create a new DefaultTransactionDefinition, with default settings._Can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName;public DefaultTransactionDefinition() {_	};create,a,new,default,transaction,definition,with,default,settings,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name;public,default,transaction,definition
DefaultTransactionDefinition -> public DefaultTransactionDefinition();1498780456;Create a new DefaultTransactionDefinition, with default settings._Can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName;public DefaultTransactionDefinition() {_	};create,a,new,default,transaction,definition,with,default,settings,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name;public,default,transaction,definition
DefaultTransactionDefinition -> public DefaultTransactionDefinition();1500495740;Create a new DefaultTransactionDefinition, with default settings._Can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName;public DefaultTransactionDefinition() {_	};create,a,new,default,transaction,definition,with,default,settings,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name;public,default,transaction,definition
DefaultTransactionDefinition -> public DefaultTransactionDefinition();1517867503;Create a new DefaultTransactionDefinition, with default settings._Can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName;public DefaultTransactionDefinition() {_	};create,a,new,default,transaction,definition,with,default,settings,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name;public,default,transaction,definition
DefaultTransactionDefinition -> public DefaultTransactionDefinition();1520584785;Create a new DefaultTransactionDefinition, with default settings._Can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName;public DefaultTransactionDefinition() {_	};create,a,new,default,transaction,definition,with,default,settings,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name;public,default,transaction,definition
DefaultTransactionDefinition -> public DefaultTransactionDefinition();1530174524;Create a new DefaultTransactionDefinition, with default settings._Can be modified through bean property setters._@see #setPropagationBehavior_@see #setIsolationLevel_@see #setTimeout_@see #setReadOnly_@see #setName;public DefaultTransactionDefinition() {_	};create,a,new,default,transaction,definition,with,default,settings,can,be,modified,through,bean,property,setters,see,set,propagation,behavior,see,set,isolation,level,see,set,timeout,see,set,read,only,see,set,name;public,default,transaction,definition
DefaultTransactionDefinition -> protected final StringBuilder getDefinitionDescription();1328020251;Return an identifying description for this transaction definition._<p>Available to subclasses, for inclusion in their <code>toString()</code> result.;protected final StringBuilder getDefinitionDescription() {_		StringBuilder result = new StringBuilder()__		result.append(constants.toCode(this.propagationBehavior, PREFIX_PROPAGATION))__		result.append(',')__		result.append(constants.toCode(this.isolationLevel, PREFIX_ISOLATION))__		if (this.timeout != TIMEOUT_DEFAULT) {_			result.append(',')__			result.append(PREFIX_TIMEOUT).append(this.timeout)__		}_		if (this.readOnly) {_			result.append(',')__			result.append(READ_ONLY_MARKER)__		}_		return result__	};return,an,identifying,description,for,this,transaction,definition,p,available,to,subclasses,for,inclusion,in,their,code,to,string,code,result;protected,final,string,builder,get,definition,description,string,builder,result,new,string,builder,result,append,constants,to,code,this,propagation,behavior,result,append,result,append,constants,to,code,this,isolation,level,if,this,timeout,result,append,result,append,append,this,timeout,if,this,read,only,result,append,result,append,return,result
DefaultTransactionDefinition -> protected final StringBuilder getDefinitionDescription();1356735495;Return an identifying description for this transaction definition._<p>Available to subclasses, for inclusion in their {@code toString()} result.;protected final StringBuilder getDefinitionDescription() {_		StringBuilder result = new StringBuilder()__		result.append(constants.toCode(this.propagationBehavior, PREFIX_PROPAGATION))__		result.append(',')__		result.append(constants.toCode(this.isolationLevel, PREFIX_ISOLATION))__		if (this.timeout != TIMEOUT_DEFAULT) {_			result.append(',')__			result.append(PREFIX_TIMEOUT).append(this.timeout)__		}_		if (this.readOnly) {_			result.append(',')__			result.append(READ_ONLY_MARKER)__		}_		return result__	};return,an,identifying,description,for,this,transaction,definition,p,available,to,subclasses,for,inclusion,in,their,code,to,string,result;protected,final,string,builder,get,definition,description,string,builder,result,new,string,builder,result,append,constants,to,code,this,propagation,behavior,result,append,result,append,constants,to,code,this,isolation,level,if,this,timeout,result,append,result,append,append,this,timeout,if,this,read,only,result,append,result,append,return,result
DefaultTransactionDefinition -> protected final StringBuilder getDefinitionDescription();1357119239;Return an identifying description for this transaction definition._<p>Available to subclasses, for inclusion in their {@code toString()} result.;protected final StringBuilder getDefinitionDescription() {_		StringBuilder result = new StringBuilder()__		result.append(constants.toCode(this.propagationBehavior, PREFIX_PROPAGATION))__		result.append(',')__		result.append(constants.toCode(this.isolationLevel, PREFIX_ISOLATION))__		if (this.timeout != TIMEOUT_DEFAULT) {_			result.append(',')__			result.append(PREFIX_TIMEOUT).append(this.timeout)__		}_		if (this.readOnly) {_			result.append(',')__			result.append(READ_ONLY_MARKER)__		}_		return result__	};return,an,identifying,description,for,this,transaction,definition,p,available,to,subclasses,for,inclusion,in,their,code,to,string,result;protected,final,string,builder,get,definition,description,string,builder,result,new,string,builder,result,append,constants,to,code,this,propagation,behavior,result,append,result,append,constants,to,code,this,isolation,level,if,this,timeout,result,append,result,append,append,this,timeout,if,this,read,only,result,append,result,append,return,result
DefaultTransactionDefinition -> protected final StringBuilder getDefinitionDescription();1368482696;Return an identifying description for this transaction definition._<p>Available to subclasses, for inclusion in their {@code toString()} result.;protected final StringBuilder getDefinitionDescription() {_		StringBuilder result = new StringBuilder()__		result.append(constants.toCode(this.propagationBehavior, PREFIX_PROPAGATION))__		result.append(',')__		result.append(constants.toCode(this.isolationLevel, PREFIX_ISOLATION))__		if (this.timeout != TIMEOUT_DEFAULT) {_			result.append(',')__			result.append(PREFIX_TIMEOUT).append(this.timeout)__		}_		if (this.readOnly) {_			result.append(',')__			result.append(READ_ONLY_MARKER)__		}_		return result__	};return,an,identifying,description,for,this,transaction,definition,p,available,to,subclasses,for,inclusion,in,their,code,to,string,result;protected,final,string,builder,get,definition,description,string,builder,result,new,string,builder,result,append,constants,to,code,this,propagation,behavior,result,append,result,append,constants,to,code,this,isolation,level,if,this,timeout,result,append,result,append,append,this,timeout,if,this,read,only,result,append,result,append,return,result
DefaultTransactionDefinition -> protected final StringBuilder getDefinitionDescription();1461047077;Return an identifying description for this transaction definition._<p>Available to subclasses, for inclusion in their {@code toString()} result.;protected final StringBuilder getDefinitionDescription() {_		StringBuilder result = new StringBuilder()__		result.append(constants.toCode(this.propagationBehavior, PREFIX_PROPAGATION))__		result.append(',')__		result.append(constants.toCode(this.isolationLevel, PREFIX_ISOLATION))__		if (this.timeout != TIMEOUT_DEFAULT) {_			result.append(',')__			result.append(PREFIX_TIMEOUT).append(this.timeout)__		}_		if (this.readOnly) {_			result.append(',')__			result.append(READ_ONLY_MARKER)__		}_		return result__	};return,an,identifying,description,for,this,transaction,definition,p,available,to,subclasses,for,inclusion,in,their,code,to,string,result;protected,final,string,builder,get,definition,description,string,builder,result,new,string,builder,result,append,constants,to,code,this,propagation,behavior,result,append,result,append,constants,to,code,this,isolation,level,if,this,timeout,result,append,result,append,append,this,timeout,if,this,read,only,result,append,result,append,return,result
DefaultTransactionDefinition -> protected final StringBuilder getDefinitionDescription();1496837955;Return an identifying description for this transaction definition._<p>Available to subclasses, for inclusion in their {@code toString()} result.;protected final StringBuilder getDefinitionDescription() {_		StringBuilder result = new StringBuilder()__		result.append(constants.toCode(this.propagationBehavior, PREFIX_PROPAGATION))__		result.append(',')__		result.append(constants.toCode(this.isolationLevel, PREFIX_ISOLATION))__		if (this.timeout != TIMEOUT_DEFAULT) {_			result.append(',')__			result.append(PREFIX_TIMEOUT).append(this.timeout)__		}_		if (this.readOnly) {_			result.append(',')__			result.append(READ_ONLY_MARKER)__		}_		return result__	};return,an,identifying,description,for,this,transaction,definition,p,available,to,subclasses,for,inclusion,in,their,code,to,string,result;protected,final,string,builder,get,definition,description,string,builder,result,new,string,builder,result,append,constants,to,code,this,propagation,behavior,result,append,result,append,constants,to,code,this,isolation,level,if,this,timeout,result,append,result,append,append,this,timeout,if,this,read,only,result,append,result,append,return,result
DefaultTransactionDefinition -> protected final StringBuilder getDefinitionDescription();1498780456;Return an identifying description for this transaction definition._<p>Available to subclasses, for inclusion in their {@code toString()} result.;protected final StringBuilder getDefinitionDescription() {_		StringBuilder result = new StringBuilder()__		result.append(constants.toCode(this.propagationBehavior, PREFIX_PROPAGATION))__		result.append(',')__		result.append(constants.toCode(this.isolationLevel, PREFIX_ISOLATION))__		if (this.timeout != TIMEOUT_DEFAULT) {_			result.append(',')__			result.append(PREFIX_TIMEOUT).append(this.timeout)__		}_		if (this.readOnly) {_			result.append(',')__			result.append(READ_ONLY_MARKER)__		}_		return result__	};return,an,identifying,description,for,this,transaction,definition,p,available,to,subclasses,for,inclusion,in,their,code,to,string,result;protected,final,string,builder,get,definition,description,string,builder,result,new,string,builder,result,append,constants,to,code,this,propagation,behavior,result,append,result,append,constants,to,code,this,isolation,level,if,this,timeout,result,append,result,append,append,this,timeout,if,this,read,only,result,append,result,append,return,result
DefaultTransactionDefinition -> protected final StringBuilder getDefinitionDescription();1500495740;Return an identifying description for this transaction definition._<p>Available to subclasses, for inclusion in their {@code toString()} result.;protected final StringBuilder getDefinitionDescription() {_		StringBuilder result = new StringBuilder()__		result.append(constants.toCode(this.propagationBehavior, PREFIX_PROPAGATION))__		result.append(',')__		result.append(constants.toCode(this.isolationLevel, PREFIX_ISOLATION))__		if (this.timeout != TIMEOUT_DEFAULT) {_			result.append(',')__			result.append(PREFIX_TIMEOUT).append(this.timeout)__		}_		if (this.readOnly) {_			result.append(',')__			result.append(READ_ONLY_MARKER)__		}_		return result__	};return,an,identifying,description,for,this,transaction,definition,p,available,to,subclasses,for,inclusion,in,their,code,to,string,result;protected,final,string,builder,get,definition,description,string,builder,result,new,string,builder,result,append,constants,to,code,this,propagation,behavior,result,append,result,append,constants,to,code,this,isolation,level,if,this,timeout,result,append,result,append,append,this,timeout,if,this,read,only,result,append,result,append,return,result
DefaultTransactionDefinition -> protected final StringBuilder getDefinitionDescription();1517867503;Return an identifying description for this transaction definition._<p>Available to subclasses, for inclusion in their {@code toString()} result.;protected final StringBuilder getDefinitionDescription() {_		StringBuilder result = new StringBuilder()__		result.append(constants.toCode(this.propagationBehavior, PREFIX_PROPAGATION))__		result.append(',')__		result.append(constants.toCode(this.isolationLevel, PREFIX_ISOLATION))__		if (this.timeout != TIMEOUT_DEFAULT) {_			result.append(',')__			result.append(PREFIX_TIMEOUT).append(this.timeout)__		}_		if (this.readOnly) {_			result.append(',')__			result.append(READ_ONLY_MARKER)__		}_		return result__	};return,an,identifying,description,for,this,transaction,definition,p,available,to,subclasses,for,inclusion,in,their,code,to,string,result;protected,final,string,builder,get,definition,description,string,builder,result,new,string,builder,result,append,constants,to,code,this,propagation,behavior,result,append,result,append,constants,to,code,this,isolation,level,if,this,timeout,result,append,result,append,append,this,timeout,if,this,read,only,result,append,result,append,return,result
DefaultTransactionDefinition -> protected final StringBuilder getDefinitionDescription();1520584785;Return an identifying description for this transaction definition._<p>Available to subclasses, for inclusion in their {@code toString()} result.;protected final StringBuilder getDefinitionDescription() {_		StringBuilder result = new StringBuilder()__		result.append(constants.toCode(this.propagationBehavior, PREFIX_PROPAGATION))__		result.append(',')__		result.append(constants.toCode(this.isolationLevel, PREFIX_ISOLATION))__		if (this.timeout != TIMEOUT_DEFAULT) {_			result.append(',')__			result.append(PREFIX_TIMEOUT).append(this.timeout)__		}_		if (this.readOnly) {_			result.append(',')__			result.append(READ_ONLY_MARKER)__		}_		return result__	};return,an,identifying,description,for,this,transaction,definition,p,available,to,subclasses,for,inclusion,in,their,code,to,string,result;protected,final,string,builder,get,definition,description,string,builder,result,new,string,builder,result,append,constants,to,code,this,propagation,behavior,result,append,result,append,constants,to,code,this,isolation,level,if,this,timeout,result,append,result,append,append,this,timeout,if,this,read,only,result,append,result,append,return,result
DefaultTransactionDefinition -> protected final StringBuilder getDefinitionDescription();1530174524;Return an identifying description for this transaction definition._<p>Available to subclasses, for inclusion in their {@code toString()} result.;protected final StringBuilder getDefinitionDescription() {_		StringBuilder result = new StringBuilder()__		result.append(constants.toCode(this.propagationBehavior, PREFIX_PROPAGATION))__		result.append(',')__		result.append(constants.toCode(this.isolationLevel, PREFIX_ISOLATION))__		if (this.timeout != TIMEOUT_DEFAULT) {_			result.append(',')__			result.append(PREFIX_TIMEOUT).append(this.timeout)__		}_		if (this.readOnly) {_			result.append(',')__			result.append(READ_ONLY_MARKER)__		}_		return result__	};return,an,identifying,description,for,this,transaction,definition,p,available,to,subclasses,for,inclusion,in,their,code,to,string,result;protected,final,string,builder,get,definition,description,string,builder,result,new,string,builder,result,append,constants,to,code,this,propagation,behavior,result,append,result,append,constants,to,code,this,isolation,level,if,this,timeout,result,append,result,append,append,this,timeout,if,this,read,only,result,append,result,append,return,result
DefaultTransactionDefinition -> public final void setPropagationBehaviorName(String constantName) throws IllegalArgumentException;1328020251;Set the propagation behavior by the name of the corresponding constant in_TransactionDefinition, e.g. "PROPAGATION_REQUIRED"._@param constantName name of the constant_@exception IllegalArgumentException if the supplied value is not resolvable_to one of the <code>PROPAGATION_</code> constants or is <code>null</code>_@see #setPropagationBehavior_@see #PROPAGATION_REQUIRED;public final void setPropagationBehaviorName(String constantName) throws IllegalArgumentException {_		if (constantName == null || !constantName.startsWith(PREFIX_PROPAGATION)) {_			throw new IllegalArgumentException("Only propagation constants allowed")__		}_		setPropagationBehavior(constants.asNumber(constantName).intValue())__	};set,the,propagation,behavior,by,the,name,of,the,corresponding,constant,in,transaction,definition,e,g,param,constant,name,name,of,the,constant,exception,illegal,argument,exception,if,the,supplied,value,is,not,resolvable,to,one,of,the,code,code,constants,or,is,code,null,code,see,set,propagation,behavior,see;public,final,void,set,propagation,behavior,name,string,constant,name,throws,illegal,argument,exception,if,constant,name,null,constant,name,starts,with,throw,new,illegal,argument,exception,only,propagation,constants,allowed,set,propagation,behavior,constants,as,number,constant,name,int,value
DefaultTransactionDefinition -> public final void setPropagationBehaviorName(String constantName) throws IllegalArgumentException;1356735495;Set the propagation behavior by the name of the corresponding constant in_TransactionDefinition, e.g. "PROPAGATION_REQUIRED"._@param constantName name of the constant_@exception IllegalArgumentException if the supplied value is not resolvable_to one of the {@code PROPAGATION_} constants or is {@code null}_@see #setPropagationBehavior_@see #PROPAGATION_REQUIRED;public final void setPropagationBehaviorName(String constantName) throws IllegalArgumentException {_		if (constantName == null || !constantName.startsWith(PREFIX_PROPAGATION)) {_			throw new IllegalArgumentException("Only propagation constants allowed")__		}_		setPropagationBehavior(constants.asNumber(constantName).intValue())__	};set,the,propagation,behavior,by,the,name,of,the,corresponding,constant,in,transaction,definition,e,g,param,constant,name,name,of,the,constant,exception,illegal,argument,exception,if,the,supplied,value,is,not,resolvable,to,one,of,the,code,constants,or,is,code,null,see,set,propagation,behavior,see;public,final,void,set,propagation,behavior,name,string,constant,name,throws,illegal,argument,exception,if,constant,name,null,constant,name,starts,with,throw,new,illegal,argument,exception,only,propagation,constants,allowed,set,propagation,behavior,constants,as,number,constant,name,int,value
DefaultTransactionDefinition -> public final void setPropagationBehaviorName(String constantName) throws IllegalArgumentException;1357119239;Set the propagation behavior by the name of the corresponding constant in_TransactionDefinition, e.g. "PROPAGATION_REQUIRED"._@param constantName name of the constant_@exception IllegalArgumentException if the supplied value is not resolvable_to one of the {@code PROPAGATION_} constants or is {@code null}_@see #setPropagationBehavior_@see #PROPAGATION_REQUIRED;public final void setPropagationBehaviorName(String constantName) throws IllegalArgumentException {_		if (constantName == null || !constantName.startsWith(PREFIX_PROPAGATION)) {_			throw new IllegalArgumentException("Only propagation constants allowed")__		}_		setPropagationBehavior(constants.asNumber(constantName).intValue())__	};set,the,propagation,behavior,by,the,name,of,the,corresponding,constant,in,transaction,definition,e,g,param,constant,name,name,of,the,constant,exception,illegal,argument,exception,if,the,supplied,value,is,not,resolvable,to,one,of,the,code,constants,or,is,code,null,see,set,propagation,behavior,see;public,final,void,set,propagation,behavior,name,string,constant,name,throws,illegal,argument,exception,if,constant,name,null,constant,name,starts,with,throw,new,illegal,argument,exception,only,propagation,constants,allowed,set,propagation,behavior,constants,as,number,constant,name,int,value
DefaultTransactionDefinition -> public final void setPropagationBehaviorName(String constantName) throws IllegalArgumentException;1368482696;Set the propagation behavior by the name of the corresponding constant in_TransactionDefinition, e.g. "PROPAGATION_REQUIRED"._@param constantName name of the constant_@exception IllegalArgumentException if the supplied value is not resolvable_to one of the {@code PROPAGATION_} constants or is {@code null}_@see #setPropagationBehavior_@see #PROPAGATION_REQUIRED;public final void setPropagationBehaviorName(String constantName) throws IllegalArgumentException {_		if (constantName == null || !constantName.startsWith(PREFIX_PROPAGATION)) {_			throw new IllegalArgumentException("Only propagation constants allowed")__		}_		setPropagationBehavior(constants.asNumber(constantName).intValue())__	};set,the,propagation,behavior,by,the,name,of,the,corresponding,constant,in,transaction,definition,e,g,param,constant,name,name,of,the,constant,exception,illegal,argument,exception,if,the,supplied,value,is,not,resolvable,to,one,of,the,code,constants,or,is,code,null,see,set,propagation,behavior,see;public,final,void,set,propagation,behavior,name,string,constant,name,throws,illegal,argument,exception,if,constant,name,null,constant,name,starts,with,throw,new,illegal,argument,exception,only,propagation,constants,allowed,set,propagation,behavior,constants,as,number,constant,name,int,value
DefaultTransactionDefinition -> public final void setPropagationBehaviorName(String constantName) throws IllegalArgumentException;1461047077;Set the propagation behavior by the name of the corresponding constant in_TransactionDefinition, e.g. "PROPAGATION_REQUIRED"._@param constantName name of the constant_@exception IllegalArgumentException if the supplied value is not resolvable_to one of the {@code PROPAGATION_} constants or is {@code null}_@see #setPropagationBehavior_@see #PROPAGATION_REQUIRED;public final void setPropagationBehaviorName(String constantName) throws IllegalArgumentException {_		if (constantName == null || !constantName.startsWith(PREFIX_PROPAGATION)) {_			throw new IllegalArgumentException("Only propagation constants allowed")__		}_		setPropagationBehavior(constants.asNumber(constantName).intValue())__	};set,the,propagation,behavior,by,the,name,of,the,corresponding,constant,in,transaction,definition,e,g,param,constant,name,name,of,the,constant,exception,illegal,argument,exception,if,the,supplied,value,is,not,resolvable,to,one,of,the,code,constants,or,is,code,null,see,set,propagation,behavior,see;public,final,void,set,propagation,behavior,name,string,constant,name,throws,illegal,argument,exception,if,constant,name,null,constant,name,starts,with,throw,new,illegal,argument,exception,only,propagation,constants,allowed,set,propagation,behavior,constants,as,number,constant,name,int,value
DefaultTransactionDefinition -> public final void setPropagationBehaviorName(String constantName) throws IllegalArgumentException;1496837955;Set the propagation behavior by the name of the corresponding constant in_TransactionDefinition, e.g. "PROPAGATION_REQUIRED"._@param constantName name of the constant_@exception IllegalArgumentException if the supplied value is not resolvable_to one of the {@code PROPAGATION_} constants or is {@code null}_@see #setPropagationBehavior_@see #PROPAGATION_REQUIRED;public final void setPropagationBehaviorName(String constantName) throws IllegalArgumentException {_		if (!constantName.startsWith(PREFIX_PROPAGATION)) {_			throw new IllegalArgumentException("Only propagation constants allowed")__		}_		setPropagationBehavior(constants.asNumber(constantName).intValue())__	};set,the,propagation,behavior,by,the,name,of,the,corresponding,constant,in,transaction,definition,e,g,param,constant,name,name,of,the,constant,exception,illegal,argument,exception,if,the,supplied,value,is,not,resolvable,to,one,of,the,code,constants,or,is,code,null,see,set,propagation,behavior,see;public,final,void,set,propagation,behavior,name,string,constant,name,throws,illegal,argument,exception,if,constant,name,starts,with,throw,new,illegal,argument,exception,only,propagation,constants,allowed,set,propagation,behavior,constants,as,number,constant,name,int,value
DefaultTransactionDefinition -> public final void setPropagationBehaviorName(String constantName) throws IllegalArgumentException;1498780456;Set the propagation behavior by the name of the corresponding constant in_TransactionDefinition, e.g. "PROPAGATION_REQUIRED"._@param constantName name of the constant_@exception IllegalArgumentException if the supplied value is not resolvable_to one of the {@code PROPAGATION_} constants or is {@code null}_@see #setPropagationBehavior_@see #PROPAGATION_REQUIRED;public final void setPropagationBehaviorName(String constantName) throws IllegalArgumentException {_		if (!constantName.startsWith(PREFIX_PROPAGATION)) {_			throw new IllegalArgumentException("Only propagation constants allowed")__		}_		setPropagationBehavior(constants.asNumber(constantName).intValue())__	};set,the,propagation,behavior,by,the,name,of,the,corresponding,constant,in,transaction,definition,e,g,param,constant,name,name,of,the,constant,exception,illegal,argument,exception,if,the,supplied,value,is,not,resolvable,to,one,of,the,code,constants,or,is,code,null,see,set,propagation,behavior,see;public,final,void,set,propagation,behavior,name,string,constant,name,throws,illegal,argument,exception,if,constant,name,starts,with,throw,new,illegal,argument,exception,only,propagation,constants,allowed,set,propagation,behavior,constants,as,number,constant,name,int,value
DefaultTransactionDefinition -> public final void setPropagationBehaviorName(String constantName) throws IllegalArgumentException;1500495740;Set the propagation behavior by the name of the corresponding constant in_TransactionDefinition, e.g. "PROPAGATION_REQUIRED"._@param constantName name of the constant_@exception IllegalArgumentException if the supplied value is not resolvable_to one of the {@code PROPAGATION_} constants or is {@code null}_@see #setPropagationBehavior_@see #PROPAGATION_REQUIRED;public final void setPropagationBehaviorName(String constantName) throws IllegalArgumentException {_		if (!constantName.startsWith(PREFIX_PROPAGATION)) {_			throw new IllegalArgumentException("Only propagation constants allowed")__		}_		setPropagationBehavior(constants.asNumber(constantName).intValue())__	};set,the,propagation,behavior,by,the,name,of,the,corresponding,constant,in,transaction,definition,e,g,param,constant,name,name,of,the,constant,exception,illegal,argument,exception,if,the,supplied,value,is,not,resolvable,to,one,of,the,code,constants,or,is,code,null,see,set,propagation,behavior,see;public,final,void,set,propagation,behavior,name,string,constant,name,throws,illegal,argument,exception,if,constant,name,starts,with,throw,new,illegal,argument,exception,only,propagation,constants,allowed,set,propagation,behavior,constants,as,number,constant,name,int,value
DefaultTransactionDefinition -> public final void setPropagationBehaviorName(String constantName) throws IllegalArgumentException;1517867503;Set the propagation behavior by the name of the corresponding constant in_TransactionDefinition, e.g. "PROPAGATION_REQUIRED"._@param constantName name of the constant_@throws IllegalArgumentException if the supplied value is not resolvable_to one of the {@code PROPAGATION_} constants or is {@code null}_@see #setPropagationBehavior_@see #PROPAGATION_REQUIRED;public final void setPropagationBehaviorName(String constantName) throws IllegalArgumentException {_		if (!constantName.startsWith(PREFIX_PROPAGATION)) {_			throw new IllegalArgumentException("Only propagation constants allowed")__		}_		setPropagationBehavior(constants.asNumber(constantName).intValue())__	};set,the,propagation,behavior,by,the,name,of,the,corresponding,constant,in,transaction,definition,e,g,param,constant,name,name,of,the,constant,throws,illegal,argument,exception,if,the,supplied,value,is,not,resolvable,to,one,of,the,code,constants,or,is,code,null,see,set,propagation,behavior,see;public,final,void,set,propagation,behavior,name,string,constant,name,throws,illegal,argument,exception,if,constant,name,starts,with,throw,new,illegal,argument,exception,only,propagation,constants,allowed,set,propagation,behavior,constants,as,number,constant,name,int,value
DefaultTransactionDefinition -> public final void setPropagationBehaviorName(String constantName) throws IllegalArgumentException;1520584785;Set the propagation behavior by the name of the corresponding constant in_TransactionDefinition, e.g. "PROPAGATION_REQUIRED"._@param constantName name of the constant_@throws IllegalArgumentException if the supplied value is not resolvable_to one of the {@code PROPAGATION_} constants or is {@code null}_@see #setPropagationBehavior_@see #PROPAGATION_REQUIRED;public final void setPropagationBehaviorName(String constantName) throws IllegalArgumentException {_		if (!constantName.startsWith(PREFIX_PROPAGATION)) {_			throw new IllegalArgumentException("Only propagation constants allowed")__		}_		setPropagationBehavior(constants.asNumber(constantName).intValue())__	};set,the,propagation,behavior,by,the,name,of,the,corresponding,constant,in,transaction,definition,e,g,param,constant,name,name,of,the,constant,throws,illegal,argument,exception,if,the,supplied,value,is,not,resolvable,to,one,of,the,code,constants,or,is,code,null,see,set,propagation,behavior,see;public,final,void,set,propagation,behavior,name,string,constant,name,throws,illegal,argument,exception,if,constant,name,starts,with,throw,new,illegal,argument,exception,only,propagation,constants,allowed,set,propagation,behavior,constants,as,number,constant,name,int,value
DefaultTransactionDefinition -> public final void setPropagationBehaviorName(String constantName) throws IllegalArgumentException;1530174524;Set the propagation behavior by the name of the corresponding constant in_TransactionDefinition, e.g. "PROPAGATION_REQUIRED"._@param constantName name of the constant_@throws IllegalArgumentException if the supplied value is not resolvable_to one of the {@code PROPAGATION_} constants or is {@code null}_@see #setPropagationBehavior_@see #PROPAGATION_REQUIRED;public final void setPropagationBehaviorName(String constantName) throws IllegalArgumentException {_		if (!constantName.startsWith(PREFIX_PROPAGATION)) {_			throw new IllegalArgumentException("Only propagation constants allowed")__		}_		setPropagationBehavior(constants.asNumber(constantName).intValue())__	};set,the,propagation,behavior,by,the,name,of,the,corresponding,constant,in,transaction,definition,e,g,param,constant,name,name,of,the,constant,throws,illegal,argument,exception,if,the,supplied,value,is,not,resolvable,to,one,of,the,code,constants,or,is,code,null,see,set,propagation,behavior,see;public,final,void,set,propagation,behavior,name,string,constant,name,throws,illegal,argument,exception,if,constant,name,starts,with,throw,new,illegal,argument,exception,only,propagation,constants,allowed,set,propagation,behavior,constants,as,number,constant,name,int,value
DefaultTransactionDefinition -> @Override 	public boolean equals(Object other);1328020251;This implementation compares the <code>toString()</code> results._@see #toString();@Override_	public boolean equals(Object other) {_		return (other instanceof TransactionDefinition && toString().equals(other.toString()))__	};this,implementation,compares,the,code,to,string,code,results,see,to,string;override,public,boolean,equals,object,other,return,other,instanceof,transaction,definition,to,string,equals,other,to,string
DefaultTransactionDefinition -> @Override 	public boolean equals(Object other);1356735495;This implementation compares the {@code toString()} results._@see #toString();@Override_	public boolean equals(Object other) {_		return (other instanceof TransactionDefinition && toString().equals(other.toString()))__	};this,implementation,compares,the,code,to,string,results,see,to,string;override,public,boolean,equals,object,other,return,other,instanceof,transaction,definition,to,string,equals,other,to,string
DefaultTransactionDefinition -> @Override 	public boolean equals(Object other);1357119239;This implementation compares the {@code toString()} results._@see #toString();@Override_	public boolean equals(Object other) {_		return (other instanceof TransactionDefinition && toString().equals(other.toString()))__	};this,implementation,compares,the,code,to,string,results,see,to,string;override,public,boolean,equals,object,other,return,other,instanceof,transaction,definition,to,string,equals,other,to,string
DefaultTransactionDefinition -> @Override 	public boolean equals(Object other);1368482696;This implementation compares the {@code toString()} results._@see #toString();@Override_	public boolean equals(Object other) {_		return (other instanceof TransactionDefinition && toString().equals(other.toString()))__	};this,implementation,compares,the,code,to,string,results,see,to,string;override,public,boolean,equals,object,other,return,other,instanceof,transaction,definition,to,string,equals,other,to,string
DefaultTransactionDefinition -> @Override 	public boolean equals(Object other);1461047077;This implementation compares the {@code toString()} results._@see #toString();@Override_	public boolean equals(Object other) {_		return (other instanceof TransactionDefinition && toString().equals(other.toString()))__	};this,implementation,compares,the,code,to,string,results,see,to,string;override,public,boolean,equals,object,other,return,other,instanceof,transaction,definition,to,string,equals,other,to,string
DefaultTransactionDefinition -> @Override 	public boolean equals(Object other);1496837955;This implementation compares the {@code toString()} results._@see #toString();@Override_	public boolean equals(Object other) {_		return (other instanceof TransactionDefinition && toString().equals(other.toString()))__	};this,implementation,compares,the,code,to,string,results,see,to,string;override,public,boolean,equals,object,other,return,other,instanceof,transaction,definition,to,string,equals,other,to,string
DefaultTransactionDefinition -> @Override 	public boolean equals(Object other);1498780456;This implementation compares the {@code toString()} results._@see #toString();@Override_	public boolean equals(Object other) {_		return (other instanceof TransactionDefinition && toString().equals(other.toString()))__	};this,implementation,compares,the,code,to,string,results,see,to,string;override,public,boolean,equals,object,other,return,other,instanceof,transaction,definition,to,string,equals,other,to,string
DefaultTransactionDefinition -> @Override 	public boolean equals(Object other);1500495740;This implementation compares the {@code toString()} results._@see #toString();@Override_	public boolean equals(Object other) {_		return (other instanceof TransactionDefinition && toString().equals(other.toString()))__	};this,implementation,compares,the,code,to,string,results,see,to,string;override,public,boolean,equals,object,other,return,other,instanceof,transaction,definition,to,string,equals,other,to,string
DefaultTransactionDefinition -> @Override 	public boolean equals(Object other);1517867503;This implementation compares the {@code toString()} results._@see #toString();@Override_	public boolean equals(Object other) {_		return (other instanceof TransactionDefinition && toString().equals(other.toString()))__	};this,implementation,compares,the,code,to,string,results,see,to,string;override,public,boolean,equals,object,other,return,other,instanceof,transaction,definition,to,string,equals,other,to,string
DefaultTransactionDefinition -> @Override 	public boolean equals(Object other);1520584785;This implementation compares the {@code toString()} results._@see #toString();@Override_	public boolean equals(Object other) {_		return (this == other || (other instanceof TransactionDefinition && toString().equals(other.toString())))__	};this,implementation,compares,the,code,to,string,results,see,to,string;override,public,boolean,equals,object,other,return,this,other,other,instanceof,transaction,definition,to,string,equals,other,to,string
DefaultTransactionDefinition -> @Override 	public boolean equals(Object other);1530174524;This implementation compares the {@code toString()} results._@see #toString();@Override_	public boolean equals(Object other) {_		return (this == other || (other instanceof TransactionDefinition && toString().equals(other.toString())))__	};this,implementation,compares,the,code,to,string,results,see,to,string;override,public,boolean,equals,object,other,return,this,other,other,instanceof,transaction,definition,to,string,equals,other,to,string
DefaultTransactionDefinition -> public final void setIsolationLevelName(String constantName) throws IllegalArgumentException;1328020251;Set the isolation level by the name of the corresponding constant in_TransactionDefinition, e.g. "ISOLATION_DEFAULT"._@param constantName name of the constant_@exception IllegalArgumentException if the supplied value is not resolvable_to one of the <code>ISOLATION_</code> constants or is <code>null</code>_@see #setIsolationLevel_@see #ISOLATION_DEFAULT;public final void setIsolationLevelName(String constantName) throws IllegalArgumentException {_		if (constantName == null || !constantName.startsWith(PREFIX_ISOLATION)) {_			throw new IllegalArgumentException("Only isolation constants allowed")__		}_		setIsolationLevel(constants.asNumber(constantName).intValue())__	};set,the,isolation,level,by,the,name,of,the,corresponding,constant,in,transaction,definition,e,g,param,constant,name,name,of,the,constant,exception,illegal,argument,exception,if,the,supplied,value,is,not,resolvable,to,one,of,the,code,code,constants,or,is,code,null,code,see,set,isolation,level,see;public,final,void,set,isolation,level,name,string,constant,name,throws,illegal,argument,exception,if,constant,name,null,constant,name,starts,with,throw,new,illegal,argument,exception,only,isolation,constants,allowed,set,isolation,level,constants,as,number,constant,name,int,value
DefaultTransactionDefinition -> public final void setIsolationLevelName(String constantName) throws IllegalArgumentException;1356735495;Set the isolation level by the name of the corresponding constant in_TransactionDefinition, e.g. "ISOLATION_DEFAULT"._@param constantName name of the constant_@exception IllegalArgumentException if the supplied value is not resolvable_to one of the {@code ISOLATION_} constants or is {@code null}_@see #setIsolationLevel_@see #ISOLATION_DEFAULT;public final void setIsolationLevelName(String constantName) throws IllegalArgumentException {_		if (constantName == null || !constantName.startsWith(PREFIX_ISOLATION)) {_			throw new IllegalArgumentException("Only isolation constants allowed")__		}_		setIsolationLevel(constants.asNumber(constantName).intValue())__	};set,the,isolation,level,by,the,name,of,the,corresponding,constant,in,transaction,definition,e,g,param,constant,name,name,of,the,constant,exception,illegal,argument,exception,if,the,supplied,value,is,not,resolvable,to,one,of,the,code,constants,or,is,code,null,see,set,isolation,level,see;public,final,void,set,isolation,level,name,string,constant,name,throws,illegal,argument,exception,if,constant,name,null,constant,name,starts,with,throw,new,illegal,argument,exception,only,isolation,constants,allowed,set,isolation,level,constants,as,number,constant,name,int,value
DefaultTransactionDefinition -> public final void setIsolationLevelName(String constantName) throws IllegalArgumentException;1357119239;Set the isolation level by the name of the corresponding constant in_TransactionDefinition, e.g. "ISOLATION_DEFAULT"._@param constantName name of the constant_@exception IllegalArgumentException if the supplied value is not resolvable_to one of the {@code ISOLATION_} constants or is {@code null}_@see #setIsolationLevel_@see #ISOLATION_DEFAULT;public final void setIsolationLevelName(String constantName) throws IllegalArgumentException {_		if (constantName == null || !constantName.startsWith(PREFIX_ISOLATION)) {_			throw new IllegalArgumentException("Only isolation constants allowed")__		}_		setIsolationLevel(constants.asNumber(constantName).intValue())__	};set,the,isolation,level,by,the,name,of,the,corresponding,constant,in,transaction,definition,e,g,param,constant,name,name,of,the,constant,exception,illegal,argument,exception,if,the,supplied,value,is,not,resolvable,to,one,of,the,code,constants,or,is,code,null,see,set,isolation,level,see;public,final,void,set,isolation,level,name,string,constant,name,throws,illegal,argument,exception,if,constant,name,null,constant,name,starts,with,throw,new,illegal,argument,exception,only,isolation,constants,allowed,set,isolation,level,constants,as,number,constant,name,int,value
DefaultTransactionDefinition -> public final void setIsolationLevelName(String constantName) throws IllegalArgumentException;1368482696;Set the isolation level by the name of the corresponding constant in_TransactionDefinition, e.g. "ISOLATION_DEFAULT"._@param constantName name of the constant_@exception IllegalArgumentException if the supplied value is not resolvable_to one of the {@code ISOLATION_} constants or is {@code null}_@see #setIsolationLevel_@see #ISOLATION_DEFAULT;public final void setIsolationLevelName(String constantName) throws IllegalArgumentException {_		if (constantName == null || !constantName.startsWith(PREFIX_ISOLATION)) {_			throw new IllegalArgumentException("Only isolation constants allowed")__		}_		setIsolationLevel(constants.asNumber(constantName).intValue())__	};set,the,isolation,level,by,the,name,of,the,corresponding,constant,in,transaction,definition,e,g,param,constant,name,name,of,the,constant,exception,illegal,argument,exception,if,the,supplied,value,is,not,resolvable,to,one,of,the,code,constants,or,is,code,null,see,set,isolation,level,see;public,final,void,set,isolation,level,name,string,constant,name,throws,illegal,argument,exception,if,constant,name,null,constant,name,starts,with,throw,new,illegal,argument,exception,only,isolation,constants,allowed,set,isolation,level,constants,as,number,constant,name,int,value
DefaultTransactionDefinition -> public final void setIsolationLevelName(String constantName) throws IllegalArgumentException;1461047077;Set the isolation level by the name of the corresponding constant in_TransactionDefinition, e.g. "ISOLATION_DEFAULT"._@param constantName name of the constant_@exception IllegalArgumentException if the supplied value is not resolvable_to one of the {@code ISOLATION_} constants or is {@code null}_@see #setIsolationLevel_@see #ISOLATION_DEFAULT;public final void setIsolationLevelName(String constantName) throws IllegalArgumentException {_		if (constantName == null || !constantName.startsWith(PREFIX_ISOLATION)) {_			throw new IllegalArgumentException("Only isolation constants allowed")__		}_		setIsolationLevel(constants.asNumber(constantName).intValue())__	};set,the,isolation,level,by,the,name,of,the,corresponding,constant,in,transaction,definition,e,g,param,constant,name,name,of,the,constant,exception,illegal,argument,exception,if,the,supplied,value,is,not,resolvable,to,one,of,the,code,constants,or,is,code,null,see,set,isolation,level,see;public,final,void,set,isolation,level,name,string,constant,name,throws,illegal,argument,exception,if,constant,name,null,constant,name,starts,with,throw,new,illegal,argument,exception,only,isolation,constants,allowed,set,isolation,level,constants,as,number,constant,name,int,value
DefaultTransactionDefinition -> public final void setIsolationLevelName(String constantName) throws IllegalArgumentException;1496837955;Set the isolation level by the name of the corresponding constant in_TransactionDefinition, e.g. "ISOLATION_DEFAULT"._@param constantName name of the constant_@exception IllegalArgumentException if the supplied value is not resolvable_to one of the {@code ISOLATION_} constants or is {@code null}_@see #setIsolationLevel_@see #ISOLATION_DEFAULT;public final void setIsolationLevelName(String constantName) throws IllegalArgumentException {_		if (!constantName.startsWith(PREFIX_ISOLATION)) {_			throw new IllegalArgumentException("Only isolation constants allowed")__		}_		setIsolationLevel(constants.asNumber(constantName).intValue())__	};set,the,isolation,level,by,the,name,of,the,corresponding,constant,in,transaction,definition,e,g,param,constant,name,name,of,the,constant,exception,illegal,argument,exception,if,the,supplied,value,is,not,resolvable,to,one,of,the,code,constants,or,is,code,null,see,set,isolation,level,see;public,final,void,set,isolation,level,name,string,constant,name,throws,illegal,argument,exception,if,constant,name,starts,with,throw,new,illegal,argument,exception,only,isolation,constants,allowed,set,isolation,level,constants,as,number,constant,name,int,value
DefaultTransactionDefinition -> public final void setIsolationLevelName(String constantName) throws IllegalArgumentException;1498780456;Set the isolation level by the name of the corresponding constant in_TransactionDefinition, e.g. "ISOLATION_DEFAULT"._@param constantName name of the constant_@exception IllegalArgumentException if the supplied value is not resolvable_to one of the {@code ISOLATION_} constants or is {@code null}_@see #setIsolationLevel_@see #ISOLATION_DEFAULT;public final void setIsolationLevelName(String constantName) throws IllegalArgumentException {_		if (!constantName.startsWith(PREFIX_ISOLATION)) {_			throw new IllegalArgumentException("Only isolation constants allowed")__		}_		setIsolationLevel(constants.asNumber(constantName).intValue())__	};set,the,isolation,level,by,the,name,of,the,corresponding,constant,in,transaction,definition,e,g,param,constant,name,name,of,the,constant,exception,illegal,argument,exception,if,the,supplied,value,is,not,resolvable,to,one,of,the,code,constants,or,is,code,null,see,set,isolation,level,see;public,final,void,set,isolation,level,name,string,constant,name,throws,illegal,argument,exception,if,constant,name,starts,with,throw,new,illegal,argument,exception,only,isolation,constants,allowed,set,isolation,level,constants,as,number,constant,name,int,value
DefaultTransactionDefinition -> public final void setIsolationLevelName(String constantName) throws IllegalArgumentException;1500495740;Set the isolation level by the name of the corresponding constant in_TransactionDefinition, e.g. "ISOLATION_DEFAULT"._@param constantName name of the constant_@exception IllegalArgumentException if the supplied value is not resolvable_to one of the {@code ISOLATION_} constants or is {@code null}_@see #setIsolationLevel_@see #ISOLATION_DEFAULT;public final void setIsolationLevelName(String constantName) throws IllegalArgumentException {_		if (!constantName.startsWith(PREFIX_ISOLATION)) {_			throw new IllegalArgumentException("Only isolation constants allowed")__		}_		setIsolationLevel(constants.asNumber(constantName).intValue())__	};set,the,isolation,level,by,the,name,of,the,corresponding,constant,in,transaction,definition,e,g,param,constant,name,name,of,the,constant,exception,illegal,argument,exception,if,the,supplied,value,is,not,resolvable,to,one,of,the,code,constants,or,is,code,null,see,set,isolation,level,see;public,final,void,set,isolation,level,name,string,constant,name,throws,illegal,argument,exception,if,constant,name,starts,with,throw,new,illegal,argument,exception,only,isolation,constants,allowed,set,isolation,level,constants,as,number,constant,name,int,value
DefaultTransactionDefinition -> public final void setIsolationLevelName(String constantName) throws IllegalArgumentException;1517867503;Set the isolation level by the name of the corresponding constant in_TransactionDefinition, e.g. "ISOLATION_DEFAULT"._@param constantName name of the constant_@throws IllegalArgumentException if the supplied value is not resolvable_to one of the {@code ISOLATION_} constants or is {@code null}_@see #setIsolationLevel_@see #ISOLATION_DEFAULT;public final void setIsolationLevelName(String constantName) throws IllegalArgumentException {_		if (!constantName.startsWith(PREFIX_ISOLATION)) {_			throw new IllegalArgumentException("Only isolation constants allowed")__		}_		setIsolationLevel(constants.asNumber(constantName).intValue())__	};set,the,isolation,level,by,the,name,of,the,corresponding,constant,in,transaction,definition,e,g,param,constant,name,name,of,the,constant,throws,illegal,argument,exception,if,the,supplied,value,is,not,resolvable,to,one,of,the,code,constants,or,is,code,null,see,set,isolation,level,see;public,final,void,set,isolation,level,name,string,constant,name,throws,illegal,argument,exception,if,constant,name,starts,with,throw,new,illegal,argument,exception,only,isolation,constants,allowed,set,isolation,level,constants,as,number,constant,name,int,value
DefaultTransactionDefinition -> public final void setIsolationLevelName(String constantName) throws IllegalArgumentException;1520584785;Set the isolation level by the name of the corresponding constant in_TransactionDefinition, e.g. "ISOLATION_DEFAULT"._@param constantName name of the constant_@throws IllegalArgumentException if the supplied value is not resolvable_to one of the {@code ISOLATION_} constants or is {@code null}_@see #setIsolationLevel_@see #ISOLATION_DEFAULT;public final void setIsolationLevelName(String constantName) throws IllegalArgumentException {_		if (!constantName.startsWith(PREFIX_ISOLATION)) {_			throw new IllegalArgumentException("Only isolation constants allowed")__		}_		setIsolationLevel(constants.asNumber(constantName).intValue())__	};set,the,isolation,level,by,the,name,of,the,corresponding,constant,in,transaction,definition,e,g,param,constant,name,name,of,the,constant,throws,illegal,argument,exception,if,the,supplied,value,is,not,resolvable,to,one,of,the,code,constants,or,is,code,null,see,set,isolation,level,see;public,final,void,set,isolation,level,name,string,constant,name,throws,illegal,argument,exception,if,constant,name,starts,with,throw,new,illegal,argument,exception,only,isolation,constants,allowed,set,isolation,level,constants,as,number,constant,name,int,value
DefaultTransactionDefinition -> public final void setIsolationLevelName(String constantName) throws IllegalArgumentException;1530174524;Set the isolation level by the name of the corresponding constant in_TransactionDefinition, e.g. "ISOLATION_DEFAULT"._@param constantName name of the constant_@throws IllegalArgumentException if the supplied value is not resolvable_to one of the {@code ISOLATION_} constants or is {@code null}_@see #setIsolationLevel_@see #ISOLATION_DEFAULT;public final void setIsolationLevelName(String constantName) throws IllegalArgumentException {_		if (!constantName.startsWith(PREFIX_ISOLATION)) {_			throw new IllegalArgumentException("Only isolation constants allowed")__		}_		setIsolationLevel(constants.asNumber(constantName).intValue())__	};set,the,isolation,level,by,the,name,of,the,corresponding,constant,in,transaction,definition,e,g,param,constant,name,name,of,the,constant,throws,illegal,argument,exception,if,the,supplied,value,is,not,resolvable,to,one,of,the,code,constants,or,is,code,null,see,set,isolation,level,see;public,final,void,set,isolation,level,name,string,constant,name,throws,illegal,argument,exception,if,constant,name,starts,with,throw,new,illegal,argument,exception,only,isolation,constants,allowed,set,isolation,level,constants,as,number,constant,name,int,value
