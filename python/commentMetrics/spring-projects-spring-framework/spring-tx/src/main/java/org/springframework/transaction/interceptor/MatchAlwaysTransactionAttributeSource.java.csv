commented;modifiers;parameterAmount;loc;comment;code
true;public;1;3;/**  * Allows a transaction attribute to be specified, using the String form, for  * example, "PROPAGATION_REQUIRED".  * @param transactionAttribute the String form of the transactionAttribute to use.  * @see org.springframework.transaction.interceptor.TransactionAttributeEditor  */ ;/**  * Allows a transaction attribute to be specified, using the String form, for  * example, "PROPAGATION_REQUIRED".  * @param transactionAttribute the String form of the transactionAttribute to use.  * @see org.springframework.transaction.interceptor.TransactionAttributeEditor  */ public void setTransactionAttribute(TransactionAttribute transactionAttribute) {     this.transactionAttribute = transactionAttribute. }
false;public;2;5;;@Override @Nullable public TransactionAttribute getTransactionAttribute(Method method, @Nullable Class<?> targetClass) {     return (ClassUtils.isUserLevelMethod(method) ? this.transactionAttribute : null). }
false;public;1;11;;@Override public boolean equals(Object other) {     if (this == other) {         return true.     }     if (!(other instanceof MatchAlwaysTransactionAttributeSource)) {         return false.     }     MatchAlwaysTransactionAttributeSource otherTas = (MatchAlwaysTransactionAttributeSource) other.     return ObjectUtils.nullSafeEquals(this.transactionAttribute, otherTas.transactionAttribute). }
false;public;0;4;;@Override public int hashCode() {     return MatchAlwaysTransactionAttributeSource.class.hashCode(). }
false;public;0;4;;@Override public String toString() {     return getClass().getName() + ": " + this.transactionAttribute. }
