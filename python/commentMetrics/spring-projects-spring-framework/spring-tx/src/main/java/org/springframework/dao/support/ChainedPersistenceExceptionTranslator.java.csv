commented;modifiers;parameterAmount;loc;comment;code
true;public,final;1;4;/**  * Add a PersistenceExceptionTranslator to the chained delegate list.  */ ;/**  * Add a PersistenceExceptionTranslator to the chained delegate list.  */ public final void addDelegate(PersistenceExceptionTranslator pet) {     Assert.notNull(pet, "PersistenceExceptionTranslator must not be null").     this.delegates.add(pet). }
true;public,final;0;3;/**  * Return all registered PersistenceExceptionTranslator delegates (as array).  */ ;/**  * Return all registered PersistenceExceptionTranslator delegates (as array).  */ public final PersistenceExceptionTranslator[] getDelegates() {     return this.delegates.toArray(new PersistenceExceptionTranslator[0]). }
false;public;1;11;;@Override @Nullable public DataAccessException translateExceptionIfPossible(RuntimeException ex) {     for (PersistenceExceptionTranslator pet : this.delegates) {         DataAccessException translatedDex = pet.translateExceptionIfPossible(ex).         if (translatedDex != null) {             return translatedDex.         }     }     return null. }
