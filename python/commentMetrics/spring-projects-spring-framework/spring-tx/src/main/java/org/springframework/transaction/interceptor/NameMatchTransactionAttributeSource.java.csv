# id;timestamp;commentText;codeText;commentWords;codeWords
NameMatchTransactionAttributeSource -> protected boolean isMatch(String methodName, String mappedName);1328020251;Return if the given method name matches the mapped name._<p>The default implementation checks for "xxx*", "*xxx" and "*xxx*" matches,_as well as direct equality. Can be overridden in subclasses._@param methodName the method name of the class_@param mappedName the name in the descriptor_@return if the names match_@see org.springframework.util.PatternMatchUtils#simpleMatch(String, String);protected boolean isMatch(String methodName, String mappedName) {_		return PatternMatchUtils.simpleMatch(mappedName, methodName)__	};return,if,the,given,method,name,matches,the,mapped,name,p,the,default,implementation,checks,for,xxx,xxx,and,xxx,matches,as,well,as,direct,equality,can,be,overridden,in,subclasses,param,method,name,the,method,name,of,the,class,param,mapped,name,the,name,in,the,descriptor,return,if,the,names,match,see,org,springframework,util,pattern,match,utils,simple,match,string,string;protected,boolean,is,match,string,method,name,string,mapped,name,return,pattern,match,utils,simple,match,mapped,name,method,name
NameMatchTransactionAttributeSource -> protected boolean isMatch(String methodName, String mappedName);1356735495;Return if the given method name matches the mapped name._<p>The default implementation checks for "xxx*", "*xxx" and "*xxx*" matches,_as well as direct equality. Can be overridden in subclasses._@param methodName the method name of the class_@param mappedName the name in the descriptor_@return if the names match_@see org.springframework.util.PatternMatchUtils#simpleMatch(String, String);protected boolean isMatch(String methodName, String mappedName) {_		return PatternMatchUtils.simpleMatch(mappedName, methodName)__	};return,if,the,given,method,name,matches,the,mapped,name,p,the,default,implementation,checks,for,xxx,xxx,and,xxx,matches,as,well,as,direct,equality,can,be,overridden,in,subclasses,param,method,name,the,method,name,of,the,class,param,mapped,name,the,name,in,the,descriptor,return,if,the,names,match,see,org,springframework,util,pattern,match,utils,simple,match,string,string;protected,boolean,is,match,string,method,name,string,mapped,name,return,pattern,match,utils,simple,match,mapped,name,method,name
NameMatchTransactionAttributeSource -> protected boolean isMatch(String methodName, String mappedName);1357119239;Return if the given method name matches the mapped name._<p>The default implementation checks for "xxx*", "*xxx" and "*xxx*" matches,_as well as direct equality. Can be overridden in subclasses._@param methodName the method name of the class_@param mappedName the name in the descriptor_@return if the names match_@see org.springframework.util.PatternMatchUtils#simpleMatch(String, String);protected boolean isMatch(String methodName, String mappedName) {_		return PatternMatchUtils.simpleMatch(mappedName, methodName)__	};return,if,the,given,method,name,matches,the,mapped,name,p,the,default,implementation,checks,for,xxx,xxx,and,xxx,matches,as,well,as,direct,equality,can,be,overridden,in,subclasses,param,method,name,the,method,name,of,the,class,param,mapped,name,the,name,in,the,descriptor,return,if,the,names,match,see,org,springframework,util,pattern,match,utils,simple,match,string,string;protected,boolean,is,match,string,method,name,string,mapped,name,return,pattern,match,utils,simple,match,mapped,name,method,name
NameMatchTransactionAttributeSource -> protected boolean isMatch(String methodName, String mappedName);1368482696;Return if the given method name matches the mapped name._<p>The default implementation checks for "xxx*", "*xxx" and "*xxx*" matches,_as well as direct equality. Can be overridden in subclasses._@param methodName the method name of the class_@param mappedName the name in the descriptor_@return if the names match_@see org.springframework.util.PatternMatchUtils#simpleMatch(String, String);protected boolean isMatch(String methodName, String mappedName) {_		return PatternMatchUtils.simpleMatch(mappedName, methodName)__	};return,if,the,given,method,name,matches,the,mapped,name,p,the,default,implementation,checks,for,xxx,xxx,and,xxx,matches,as,well,as,direct,equality,can,be,overridden,in,subclasses,param,method,name,the,method,name,of,the,class,param,mapped,name,the,name,in,the,descriptor,return,if,the,names,match,see,org,springframework,util,pattern,match,utils,simple,match,string,string;protected,boolean,is,match,string,method,name,string,mapped,name,return,pattern,match,utils,simple,match,mapped,name,method,name
NameMatchTransactionAttributeSource -> protected boolean isMatch(String methodName, String mappedName);1383133125;Return if the given method name matches the mapped name._<p>The default implementation checks for "xxx*", "*xxx" and "*xxx*" matches,_as well as direct equality. Can be overridden in subclasses._@param methodName the method name of the class_@param mappedName the name in the descriptor_@return if the names match_@see org.springframework.util.PatternMatchUtils#simpleMatch(String, String);protected boolean isMatch(String methodName, String mappedName) {_		return PatternMatchUtils.simpleMatch(mappedName, methodName)__	};return,if,the,given,method,name,matches,the,mapped,name,p,the,default,implementation,checks,for,xxx,xxx,and,xxx,matches,as,well,as,direct,equality,can,be,overridden,in,subclasses,param,method,name,the,method,name,of,the,class,param,mapped,name,the,name,in,the,descriptor,return,if,the,names,match,see,org,springframework,util,pattern,match,utils,simple,match,string,string;protected,boolean,is,match,string,method,name,string,mapped,name,return,pattern,match,utils,simple,match,mapped,name,method,name
NameMatchTransactionAttributeSource -> protected boolean isMatch(String methodName, String mappedName);1385412762;Return if the given method name matches the mapped name._<p>The default implementation checks for "xxx*", "*xxx" and "*xxx*" matches,_as well as direct equality. Can be overridden in subclasses._@param methodName the method name of the class_@param mappedName the name in the descriptor_@return if the names match_@see org.springframework.util.PatternMatchUtils#simpleMatch(String, String);protected boolean isMatch(String methodName, String mappedName) {_		return PatternMatchUtils.simpleMatch(mappedName, methodName)__	};return,if,the,given,method,name,matches,the,mapped,name,p,the,default,implementation,checks,for,xxx,xxx,and,xxx,matches,as,well,as,direct,equality,can,be,overridden,in,subclasses,param,method,name,the,method,name,of,the,class,param,mapped,name,the,name,in,the,descriptor,return,if,the,names,match,see,org,springframework,util,pattern,match,utils,simple,match,string,string;protected,boolean,is,match,string,method,name,string,mapped,name,return,pattern,match,utils,simple,match,mapped,name,method,name
NameMatchTransactionAttributeSource -> protected boolean isMatch(String methodName, String mappedName);1467730834;Return if the given method name matches the mapped name._<p>The default implementation checks for "xxx*", "*xxx" and "*xxx*" matches,_as well as direct equality. Can be overridden in subclasses._@param methodName the method name of the class_@param mappedName the name in the descriptor_@return if the names match_@see org.springframework.util.PatternMatchUtils#simpleMatch(String, String);protected boolean isMatch(String methodName, String mappedName) {_		return PatternMatchUtils.simpleMatch(mappedName, methodName)__	};return,if,the,given,method,name,matches,the,mapped,name,p,the,default,implementation,checks,for,xxx,xxx,and,xxx,matches,as,well,as,direct,equality,can,be,overridden,in,subclasses,param,method,name,the,method,name,of,the,class,param,mapped,name,the,name,in,the,descriptor,return,if,the,names,match,see,org,springframework,util,pattern,match,utils,simple,match,string,string;protected,boolean,is,match,string,method,name,string,mapped,name,return,pattern,match,utils,simple,match,mapped,name,method,name
NameMatchTransactionAttributeSource -> protected boolean isMatch(String methodName, String mappedName);1496242568;Return if the given method name matches the mapped name._<p>The default implementation checks for "xxx*", "*xxx" and "*xxx*" matches,_as well as direct equality. Can be overridden in subclasses._@param methodName the method name of the class_@param mappedName the name in the descriptor_@return if the names match_@see org.springframework.util.PatternMatchUtils#simpleMatch(String, String);protected boolean isMatch(String methodName, String mappedName) {_		return PatternMatchUtils.simpleMatch(mappedName, methodName)__	};return,if,the,given,method,name,matches,the,mapped,name,p,the,default,implementation,checks,for,xxx,xxx,and,xxx,matches,as,well,as,direct,equality,can,be,overridden,in,subclasses,param,method,name,the,method,name,of,the,class,param,mapped,name,the,name,in,the,descriptor,return,if,the,names,match,see,org,springframework,util,pattern,match,utils,simple,match,string,string;protected,boolean,is,match,string,method,name,string,mapped,name,return,pattern,match,utils,simple,match,mapped,name,method,name
NameMatchTransactionAttributeSource -> protected boolean isMatch(String methodName, String mappedName);1497362807;Return if the given method name matches the mapped name._<p>The default implementation checks for "xxx*", "*xxx" and "*xxx*" matches,_as well as direct equality. Can be overridden in subclasses._@param methodName the method name of the class_@param mappedName the name in the descriptor_@return if the names match_@see org.springframework.util.PatternMatchUtils#simpleMatch(String, String);protected boolean isMatch(String methodName, String mappedName) {_		return PatternMatchUtils.simpleMatch(mappedName, methodName)__	};return,if,the,given,method,name,matches,the,mapped,name,p,the,default,implementation,checks,for,xxx,xxx,and,xxx,matches,as,well,as,direct,equality,can,be,overridden,in,subclasses,param,method,name,the,method,name,of,the,class,param,mapped,name,the,name,in,the,descriptor,return,if,the,names,match,see,org,springframework,util,pattern,match,utils,simple,match,string,string;protected,boolean,is,match,string,method,name,string,mapped,name,return,pattern,match,utils,simple,match,mapped,name,method,name
NameMatchTransactionAttributeSource -> protected boolean isMatch(String methodName, String mappedName);1502974979;Return if the given method name matches the mapped name._<p>The default implementation checks for "xxx*", "*xxx" and "*xxx*" matches,_as well as direct equality. Can be overridden in subclasses._@param methodName the method name of the class_@param mappedName the name in the descriptor_@return if the names match_@see org.springframework.util.PatternMatchUtils#simpleMatch(String, String);protected boolean isMatch(String methodName, String mappedName) {_		return PatternMatchUtils.simpleMatch(mappedName, methodName)__	};return,if,the,given,method,name,matches,the,mapped,name,p,the,default,implementation,checks,for,xxx,xxx,and,xxx,matches,as,well,as,direct,equality,can,be,overridden,in,subclasses,param,method,name,the,method,name,of,the,class,param,mapped,name,the,name,in,the,descriptor,return,if,the,names,match,see,org,springframework,util,pattern,match,utils,simple,match,string,string;protected,boolean,is,match,string,method,name,string,mapped,name,return,pattern,match,utils,simple,match,mapped,name,method,name
NameMatchTransactionAttributeSource -> protected boolean isMatch(String methodName, String mappedName);1530174524;Return if the given method name matches the mapped name._<p>The default implementation checks for "xxx*", "*xxx" and "*xxx*" matches,_as well as direct equality. Can be overridden in subclasses._@param methodName the method name of the class_@param mappedName the name in the descriptor_@return if the names match_@see org.springframework.util.PatternMatchUtils#simpleMatch(String, String);protected boolean isMatch(String methodName, String mappedName) {_		return PatternMatchUtils.simpleMatch(mappedName, methodName)__	};return,if,the,given,method,name,matches,the,mapped,name,p,the,default,implementation,checks,for,xxx,xxx,and,xxx,matches,as,well,as,direct,equality,can,be,overridden,in,subclasses,param,method,name,the,method,name,of,the,class,param,mapped,name,the,name,in,the,descriptor,return,if,the,names,match,see,org,springframework,util,pattern,match,utils,simple,match,string,string;protected,boolean,is,match,string,method,name,string,mapped,name,return,pattern,match,utils,simple,match,mapped,name,method,name
NameMatchTransactionAttributeSource -> public void addTransactionalMethod(String methodName, TransactionAttribute attr);1328020251;Add an attribute for a transactional method._<p>Method names can be exact matches, or of the pattern "xxx*",_"*xxx" or "*xxx*" for matching multiple methods._@param methodName the name of the method_@param attr attribute associated with the method;public void addTransactionalMethod(String methodName, TransactionAttribute attr) {_		if (logger.isDebugEnabled()) {_			logger.debug("Adding transactional method [" + methodName + "] with attribute [" + attr + "]")__		}_		this.nameMap.put(methodName, attr)__	};add,an,attribute,for,a,transactional,method,p,method,names,can,be,exact,matches,or,of,the,pattern,xxx,xxx,or,xxx,for,matching,multiple,methods,param,method,name,the,name,of,the,method,param,attr,attribute,associated,with,the,method;public,void,add,transactional,method,string,method,name,transaction,attribute,attr,if,logger,is,debug,enabled,logger,debug,adding,transactional,method,method,name,with,attribute,attr,this,name,map,put,method,name,attr
NameMatchTransactionAttributeSource -> public void addTransactionalMethod(String methodName, TransactionAttribute attr);1356735495;Add an attribute for a transactional method._<p>Method names can be exact matches, or of the pattern "xxx*",_"*xxx" or "*xxx*" for matching multiple methods._@param methodName the name of the method_@param attr attribute associated with the method;public void addTransactionalMethod(String methodName, TransactionAttribute attr) {_		if (logger.isDebugEnabled()) {_			logger.debug("Adding transactional method [" + methodName + "] with attribute [" + attr + "]")__		}_		this.nameMap.put(methodName, attr)__	};add,an,attribute,for,a,transactional,method,p,method,names,can,be,exact,matches,or,of,the,pattern,xxx,xxx,or,xxx,for,matching,multiple,methods,param,method,name,the,name,of,the,method,param,attr,attribute,associated,with,the,method;public,void,add,transactional,method,string,method,name,transaction,attribute,attr,if,logger,is,debug,enabled,logger,debug,adding,transactional,method,method,name,with,attribute,attr,this,name,map,put,method,name,attr
NameMatchTransactionAttributeSource -> public void addTransactionalMethod(String methodName, TransactionAttribute attr);1357119239;Add an attribute for a transactional method._<p>Method names can be exact matches, or of the pattern "xxx*",_"*xxx" or "*xxx*" for matching multiple methods._@param methodName the name of the method_@param attr attribute associated with the method;public void addTransactionalMethod(String methodName, TransactionAttribute attr) {_		if (logger.isDebugEnabled()) {_			logger.debug("Adding transactional method [" + methodName + "] with attribute [" + attr + "]")__		}_		this.nameMap.put(methodName, attr)__	};add,an,attribute,for,a,transactional,method,p,method,names,can,be,exact,matches,or,of,the,pattern,xxx,xxx,or,xxx,for,matching,multiple,methods,param,method,name,the,name,of,the,method,param,attr,attribute,associated,with,the,method;public,void,add,transactional,method,string,method,name,transaction,attribute,attr,if,logger,is,debug,enabled,logger,debug,adding,transactional,method,method,name,with,attribute,attr,this,name,map,put,method,name,attr
NameMatchTransactionAttributeSource -> public void addTransactionalMethod(String methodName, TransactionAttribute attr);1368482696;Add an attribute for a transactional method._<p>Method names can be exact matches, or of the pattern "xxx*",_"*xxx" or "*xxx*" for matching multiple methods._@param methodName the name of the method_@param attr attribute associated with the method;public void addTransactionalMethod(String methodName, TransactionAttribute attr) {_		if (logger.isDebugEnabled()) {_			logger.debug("Adding transactional method [" + methodName + "] with attribute [" + attr + "]")__		}_		this.nameMap.put(methodName, attr)__	};add,an,attribute,for,a,transactional,method,p,method,names,can,be,exact,matches,or,of,the,pattern,xxx,xxx,or,xxx,for,matching,multiple,methods,param,method,name,the,name,of,the,method,param,attr,attribute,associated,with,the,method;public,void,add,transactional,method,string,method,name,transaction,attribute,attr,if,logger,is,debug,enabled,logger,debug,adding,transactional,method,method,name,with,attribute,attr,this,name,map,put,method,name,attr
NameMatchTransactionAttributeSource -> public void addTransactionalMethod(String methodName, TransactionAttribute attr);1383133125;Add an attribute for a transactional method._<p>Method names can be exact matches, or of the pattern "xxx*",_"*xxx" or "*xxx*" for matching multiple methods._@param methodName the name of the method_@param attr attribute associated with the method;public void addTransactionalMethod(String methodName, TransactionAttribute attr) {_		if (logger.isDebugEnabled()) {_			logger.debug("Adding transactional method [" + methodName + "] with attribute [" + attr + "]")__		}_		this.nameMap.put(methodName, attr)__	};add,an,attribute,for,a,transactional,method,p,method,names,can,be,exact,matches,or,of,the,pattern,xxx,xxx,or,xxx,for,matching,multiple,methods,param,method,name,the,name,of,the,method,param,attr,attribute,associated,with,the,method;public,void,add,transactional,method,string,method,name,transaction,attribute,attr,if,logger,is,debug,enabled,logger,debug,adding,transactional,method,method,name,with,attribute,attr,this,name,map,put,method,name,attr
NameMatchTransactionAttributeSource -> public void addTransactionalMethod(String methodName, TransactionAttribute attr);1385412762;Add an attribute for a transactional method._<p>Method names can be exact matches, or of the pattern "xxx*",_"*xxx" or "*xxx*" for matching multiple methods._@param methodName the name of the method_@param attr attribute associated with the method;public void addTransactionalMethod(String methodName, TransactionAttribute attr) {_		if (logger.isDebugEnabled()) {_			logger.debug("Adding transactional method [" + methodName + "] with attribute [" + attr + "]")__		}_		this.nameMap.put(methodName, attr)__	};add,an,attribute,for,a,transactional,method,p,method,names,can,be,exact,matches,or,of,the,pattern,xxx,xxx,or,xxx,for,matching,multiple,methods,param,method,name,the,name,of,the,method,param,attr,attribute,associated,with,the,method;public,void,add,transactional,method,string,method,name,transaction,attribute,attr,if,logger,is,debug,enabled,logger,debug,adding,transactional,method,method,name,with,attribute,attr,this,name,map,put,method,name,attr
NameMatchTransactionAttributeSource -> public void addTransactionalMethod(String methodName, TransactionAttribute attr);1467730834;Add an attribute for a transactional method._<p>Method names can be exact matches, or of the pattern "xxx*",_"*xxx" or "*xxx*" for matching multiple methods._@param methodName the name of the method_@param attr attribute associated with the method;public void addTransactionalMethod(String methodName, TransactionAttribute attr) {_		if (logger.isDebugEnabled()) {_			logger.debug("Adding transactional method [" + methodName + "] with attribute [" + attr + "]")__		}_		this.nameMap.put(methodName, attr)__	};add,an,attribute,for,a,transactional,method,p,method,names,can,be,exact,matches,or,of,the,pattern,xxx,xxx,or,xxx,for,matching,multiple,methods,param,method,name,the,name,of,the,method,param,attr,attribute,associated,with,the,method;public,void,add,transactional,method,string,method,name,transaction,attribute,attr,if,logger,is,debug,enabled,logger,debug,adding,transactional,method,method,name,with,attribute,attr,this,name,map,put,method,name,attr
NameMatchTransactionAttributeSource -> public void addTransactionalMethod(String methodName, TransactionAttribute attr);1496242568;Add an attribute for a transactional method._<p>Method names can be exact matches, or of the pattern "xxx*",_"*xxx" or "*xxx*" for matching multiple methods._@param methodName the name of the method_@param attr attribute associated with the method;public void addTransactionalMethod(String methodName, TransactionAttribute attr) {_		if (logger.isDebugEnabled()) {_			logger.debug("Adding transactional method [" + methodName + "] with attribute [" + attr + "]")__		}_		this.nameMap.put(methodName, attr)__	};add,an,attribute,for,a,transactional,method,p,method,names,can,be,exact,matches,or,of,the,pattern,xxx,xxx,or,xxx,for,matching,multiple,methods,param,method,name,the,name,of,the,method,param,attr,attribute,associated,with,the,method;public,void,add,transactional,method,string,method,name,transaction,attribute,attr,if,logger,is,debug,enabled,logger,debug,adding,transactional,method,method,name,with,attribute,attr,this,name,map,put,method,name,attr
NameMatchTransactionAttributeSource -> public void addTransactionalMethod(String methodName, TransactionAttribute attr);1497362807;Add an attribute for a transactional method._<p>Method names can be exact matches, or of the pattern "xxx*",_"*xxx" or "*xxx*" for matching multiple methods._@param methodName the name of the method_@param attr attribute associated with the method;public void addTransactionalMethod(String methodName, TransactionAttribute attr) {_		if (logger.isDebugEnabled()) {_			logger.debug("Adding transactional method [" + methodName + "] with attribute [" + attr + "]")__		}_		this.nameMap.put(methodName, attr)__	};add,an,attribute,for,a,transactional,method,p,method,names,can,be,exact,matches,or,of,the,pattern,xxx,xxx,or,xxx,for,matching,multiple,methods,param,method,name,the,name,of,the,method,param,attr,attribute,associated,with,the,method;public,void,add,transactional,method,string,method,name,transaction,attribute,attr,if,logger,is,debug,enabled,logger,debug,adding,transactional,method,method,name,with,attribute,attr,this,name,map,put,method,name,attr
NameMatchTransactionAttributeSource -> public void addTransactionalMethod(String methodName, TransactionAttribute attr);1502974979;Add an attribute for a transactional method._<p>Method names can be exact matches, or of the pattern "xxx*",_"*xxx" or "*xxx*" for matching multiple methods._@param methodName the name of the method_@param attr attribute associated with the method;public void addTransactionalMethod(String methodName, TransactionAttribute attr) {_		if (logger.isDebugEnabled()) {_			logger.debug("Adding transactional method [" + methodName + "] with attribute [" + attr + "]")__		}_		this.nameMap.put(methodName, attr)__	};add,an,attribute,for,a,transactional,method,p,method,names,can,be,exact,matches,or,of,the,pattern,xxx,xxx,or,xxx,for,matching,multiple,methods,param,method,name,the,name,of,the,method,param,attr,attribute,associated,with,the,method;public,void,add,transactional,method,string,method,name,transaction,attribute,attr,if,logger,is,debug,enabled,logger,debug,adding,transactional,method,method,name,with,attribute,attr,this,name,map,put,method,name,attr
NameMatchTransactionAttributeSource -> public void addTransactionalMethod(String methodName, TransactionAttribute attr);1530174524;Add an attribute for a transactional method._<p>Method names can be exact matches, or of the pattern "xxx*",_"*xxx" or "*xxx*" for matching multiple methods._@param methodName the name of the method_@param attr attribute associated with the method;public void addTransactionalMethod(String methodName, TransactionAttribute attr) {_		if (logger.isDebugEnabled()) {_			logger.debug("Adding transactional method [" + methodName + "] with attribute [" + attr + "]")__		}_		this.nameMap.put(methodName, attr)__	};add,an,attribute,for,a,transactional,method,p,method,names,can,be,exact,matches,or,of,the,pattern,xxx,xxx,or,xxx,for,matching,multiple,methods,param,method,name,the,name,of,the,method,param,attr,attribute,associated,with,the,method;public,void,add,transactional,method,string,method,name,transaction,attribute,attr,if,logger,is,debug,enabled,logger,debug,adding,transactional,method,method,name,with,attribute,attr,this,name,map,put,method,name,attr
NameMatchTransactionAttributeSource -> public void setNameMap(Map<String, TransactionAttribute> nameMap);1328020251;Set a name/attribute map, consisting of method names_(e.g. "myMethod") and TransactionAttribute instances_(or Strings to be converted to TransactionAttribute instances)._@see TransactionAttribute_@see TransactionAttributeEditor;public void setNameMap(Map<String, TransactionAttribute> nameMap) {_		for (Map.Entry<String, TransactionAttribute> entry : nameMap.entrySet()) {_			addTransactionalMethod(entry.getKey(), entry.getValue())__		}_	};set,a,name,attribute,map,consisting,of,method,names,e,g,my,method,and,transaction,attribute,instances,or,strings,to,be,converted,to,transaction,attribute,instances,see,transaction,attribute,see,transaction,attribute,editor;public,void,set,name,map,map,string,transaction,attribute,name,map,for,map,entry,string,transaction,attribute,entry,name,map,entry,set,add,transactional,method,entry,get,key,entry,get,value
NameMatchTransactionAttributeSource -> public void setNameMap(Map<String, TransactionAttribute> nameMap);1356735495;Set a name/attribute map, consisting of method names_(e.g. "myMethod") and TransactionAttribute instances_(or Strings to be converted to TransactionAttribute instances)._@see TransactionAttribute_@see TransactionAttributeEditor;public void setNameMap(Map<String, TransactionAttribute> nameMap) {_		for (Map.Entry<String, TransactionAttribute> entry : nameMap.entrySet()) {_			addTransactionalMethod(entry.getKey(), entry.getValue())__		}_	};set,a,name,attribute,map,consisting,of,method,names,e,g,my,method,and,transaction,attribute,instances,or,strings,to,be,converted,to,transaction,attribute,instances,see,transaction,attribute,see,transaction,attribute,editor;public,void,set,name,map,map,string,transaction,attribute,name,map,for,map,entry,string,transaction,attribute,entry,name,map,entry,set,add,transactional,method,entry,get,key,entry,get,value
NameMatchTransactionAttributeSource -> public void setNameMap(Map<String, TransactionAttribute> nameMap);1357119239;Set a name/attribute map, consisting of method names_(e.g. "myMethod") and TransactionAttribute instances_(or Strings to be converted to TransactionAttribute instances)._@see TransactionAttribute_@see TransactionAttributeEditor;public void setNameMap(Map<String, TransactionAttribute> nameMap) {_		for (Map.Entry<String, TransactionAttribute> entry : nameMap.entrySet()) {_			addTransactionalMethod(entry.getKey(), entry.getValue())__		}_	};set,a,name,attribute,map,consisting,of,method,names,e,g,my,method,and,transaction,attribute,instances,or,strings,to,be,converted,to,transaction,attribute,instances,see,transaction,attribute,see,transaction,attribute,editor;public,void,set,name,map,map,string,transaction,attribute,name,map,for,map,entry,string,transaction,attribute,entry,name,map,entry,set,add,transactional,method,entry,get,key,entry,get,value
NameMatchTransactionAttributeSource -> public void setNameMap(Map<String, TransactionAttribute> nameMap);1368482696;Set a name/attribute map, consisting of method names_(e.g. "myMethod") and TransactionAttribute instances_(or Strings to be converted to TransactionAttribute instances)._@see TransactionAttribute_@see TransactionAttributeEditor;public void setNameMap(Map<String, TransactionAttribute> nameMap) {_		for (Map.Entry<String, TransactionAttribute> entry : nameMap.entrySet()) {_			addTransactionalMethod(entry.getKey(), entry.getValue())__		}_	};set,a,name,attribute,map,consisting,of,method,names,e,g,my,method,and,transaction,attribute,instances,or,strings,to,be,converted,to,transaction,attribute,instances,see,transaction,attribute,see,transaction,attribute,editor;public,void,set,name,map,map,string,transaction,attribute,name,map,for,map,entry,string,transaction,attribute,entry,name,map,entry,set,add,transactional,method,entry,get,key,entry,get,value
NameMatchTransactionAttributeSource -> public void setNameMap(Map<String, TransactionAttribute> nameMap);1383133125;Set a name/attribute map, consisting of method names_(e.g. "myMethod") and TransactionAttribute instances_(or Strings to be converted to TransactionAttribute instances)._@see TransactionAttribute_@see TransactionAttributeEditor;public void setNameMap(Map<String, TransactionAttribute> nameMap) {_		for (Map.Entry<String, TransactionAttribute> entry : nameMap.entrySet()) {_			addTransactionalMethod(entry.getKey(), entry.getValue())__		}_	};set,a,name,attribute,map,consisting,of,method,names,e,g,my,method,and,transaction,attribute,instances,or,strings,to,be,converted,to,transaction,attribute,instances,see,transaction,attribute,see,transaction,attribute,editor;public,void,set,name,map,map,string,transaction,attribute,name,map,for,map,entry,string,transaction,attribute,entry,name,map,entry,set,add,transactional,method,entry,get,key,entry,get,value
NameMatchTransactionAttributeSource -> public void setNameMap(Map<String, TransactionAttribute> nameMap);1385412762;Set a name/attribute map, consisting of method names_(e.g. "myMethod") and TransactionAttribute instances_(or Strings to be converted to TransactionAttribute instances)._@see TransactionAttribute_@see TransactionAttributeEditor;public void setNameMap(Map<String, TransactionAttribute> nameMap) {_		for (Map.Entry<String, TransactionAttribute> entry : nameMap.entrySet()) {_			addTransactionalMethod(entry.getKey(), entry.getValue())__		}_	};set,a,name,attribute,map,consisting,of,method,names,e,g,my,method,and,transaction,attribute,instances,or,strings,to,be,converted,to,transaction,attribute,instances,see,transaction,attribute,see,transaction,attribute,editor;public,void,set,name,map,map,string,transaction,attribute,name,map,for,map,entry,string,transaction,attribute,entry,name,map,entry,set,add,transactional,method,entry,get,key,entry,get,value
NameMatchTransactionAttributeSource -> public void setNameMap(Map<String, TransactionAttribute> nameMap);1467730834;Set a name/attribute map, consisting of method names_(e.g. "myMethod") and TransactionAttribute instances_(or Strings to be converted to TransactionAttribute instances)._@see TransactionAttribute_@see TransactionAttributeEditor;public void setNameMap(Map<String, TransactionAttribute> nameMap) {_		for (Map.Entry<String, TransactionAttribute> entry : nameMap.entrySet()) {_			addTransactionalMethod(entry.getKey(), entry.getValue())__		}_	};set,a,name,attribute,map,consisting,of,method,names,e,g,my,method,and,transaction,attribute,instances,or,strings,to,be,converted,to,transaction,attribute,instances,see,transaction,attribute,see,transaction,attribute,editor;public,void,set,name,map,map,string,transaction,attribute,name,map,for,map,entry,string,transaction,attribute,entry,name,map,entry,set,add,transactional,method,entry,get,key,entry,get,value
NameMatchTransactionAttributeSource -> public void setNameMap(Map<String, TransactionAttribute> nameMap);1496242568;Set a name/attribute map, consisting of method names_(e.g. "myMethod") and TransactionAttribute instances_(or Strings to be converted to TransactionAttribute instances)._@see TransactionAttribute_@see TransactionAttributeEditor;public void setNameMap(Map<String, TransactionAttribute> nameMap) {_		for (Map.Entry<String, TransactionAttribute> entry : nameMap.entrySet()) {_			addTransactionalMethod(entry.getKey(), entry.getValue())__		}_	};set,a,name,attribute,map,consisting,of,method,names,e,g,my,method,and,transaction,attribute,instances,or,strings,to,be,converted,to,transaction,attribute,instances,see,transaction,attribute,see,transaction,attribute,editor;public,void,set,name,map,map,string,transaction,attribute,name,map,for,map,entry,string,transaction,attribute,entry,name,map,entry,set,add,transactional,method,entry,get,key,entry,get,value
NameMatchTransactionAttributeSource -> public void setNameMap(Map<String, TransactionAttribute> nameMap);1497362807;Set a name/attribute map, consisting of method names_(e.g. "myMethod") and TransactionAttribute instances_(or Strings to be converted to TransactionAttribute instances)._@see TransactionAttribute_@see TransactionAttributeEditor;public void setNameMap(Map<String, TransactionAttribute> nameMap) {_		nameMap.forEach(this::addTransactionalMethod)__	};set,a,name,attribute,map,consisting,of,method,names,e,g,my,method,and,transaction,attribute,instances,or,strings,to,be,converted,to,transaction,attribute,instances,see,transaction,attribute,see,transaction,attribute,editor;public,void,set,name,map,map,string,transaction,attribute,name,map,name,map,for,each,this,add,transactional,method
NameMatchTransactionAttributeSource -> public void setNameMap(Map<String, TransactionAttribute> nameMap);1502974979;Set a name/attribute map, consisting of method names_(e.g. "myMethod") and TransactionAttribute instances_(or Strings to be converted to TransactionAttribute instances)._@see TransactionAttribute_@see TransactionAttributeEditor;public void setNameMap(Map<String, TransactionAttribute> nameMap) {_		nameMap.forEach(this::addTransactionalMethod)__	};set,a,name,attribute,map,consisting,of,method,names,e,g,my,method,and,transaction,attribute,instances,or,strings,to,be,converted,to,transaction,attribute,instances,see,transaction,attribute,see,transaction,attribute,editor;public,void,set,name,map,map,string,transaction,attribute,name,map,name,map,for,each,this,add,transactional,method
NameMatchTransactionAttributeSource -> public void setNameMap(Map<String, TransactionAttribute> nameMap);1530174524;Set a name/attribute map, consisting of method names_(e.g. "myMethod") and TransactionAttribute instances_(or Strings to be converted to TransactionAttribute instances)._@see TransactionAttribute_@see TransactionAttributeEditor;public void setNameMap(Map<String, TransactionAttribute> nameMap) {_		nameMap.forEach(this::addTransactionalMethod)__	};set,a,name,attribute,map,consisting,of,method,names,e,g,my,method,and,transaction,attribute,instances,or,strings,to,be,converted,to,transaction,attribute,instances,see,transaction,attribute,see,transaction,attribute,editor;public,void,set,name,map,map,string,transaction,attribute,name,map,name,map,for,each,this,add,transactional,method
NameMatchTransactionAttributeSource -> public void setProperties(Properties transactionAttributes);1328020251;Parses the given properties into a name/attribute map._Expects method names as keys and String attributes definitions as values,_parsable into TransactionAttribute instances via TransactionAttributeEditor._@see #setNameMap_@see TransactionAttributeEditor;public void setProperties(Properties transactionAttributes) {_		TransactionAttributeEditor tae = new TransactionAttributeEditor()__		Enumeration propNames = transactionAttributes.propertyNames()__		while (propNames.hasMoreElements()) {_			String methodName = (String) propNames.nextElement()__			String value = transactionAttributes.getProperty(methodName)__			tae.setAsText(value)__			TransactionAttribute attr = (TransactionAttribute) tae.getValue()__			addTransactionalMethod(methodName, attr)__		}_	};parses,the,given,properties,into,a,name,attribute,map,expects,method,names,as,keys,and,string,attributes,definitions,as,values,parsable,into,transaction,attribute,instances,via,transaction,attribute,editor,see,set,name,map,see,transaction,attribute,editor;public,void,set,properties,properties,transaction,attributes,transaction,attribute,editor,tae,new,transaction,attribute,editor,enumeration,prop,names,transaction,attributes,property,names,while,prop,names,has,more,elements,string,method,name,string,prop,names,next,element,string,value,transaction,attributes,get,property,method,name,tae,set,as,text,value,transaction,attribute,attr,transaction,attribute,tae,get,value,add,transactional,method,method,name,attr
NameMatchTransactionAttributeSource -> public void setProperties(Properties transactionAttributes);1356735495;Parses the given properties into a name/attribute map._Expects method names as keys and String attributes definitions as values,_parsable into TransactionAttribute instances via TransactionAttributeEditor._@see #setNameMap_@see TransactionAttributeEditor;public void setProperties(Properties transactionAttributes) {_		TransactionAttributeEditor tae = new TransactionAttributeEditor()__		Enumeration propNames = transactionAttributes.propertyNames()__		while (propNames.hasMoreElements()) {_			String methodName = (String) propNames.nextElement()__			String value = transactionAttributes.getProperty(methodName)__			tae.setAsText(value)__			TransactionAttribute attr = (TransactionAttribute) tae.getValue()__			addTransactionalMethod(methodName, attr)__		}_	};parses,the,given,properties,into,a,name,attribute,map,expects,method,names,as,keys,and,string,attributes,definitions,as,values,parsable,into,transaction,attribute,instances,via,transaction,attribute,editor,see,set,name,map,see,transaction,attribute,editor;public,void,set,properties,properties,transaction,attributes,transaction,attribute,editor,tae,new,transaction,attribute,editor,enumeration,prop,names,transaction,attributes,property,names,while,prop,names,has,more,elements,string,method,name,string,prop,names,next,element,string,value,transaction,attributes,get,property,method,name,tae,set,as,text,value,transaction,attribute,attr,transaction,attribute,tae,get,value,add,transactional,method,method,name,attr
NameMatchTransactionAttributeSource -> public void setProperties(Properties transactionAttributes);1357119239;Parses the given properties into a name/attribute map._Expects method names as keys and String attributes definitions as values,_parsable into TransactionAttribute instances via TransactionAttributeEditor._@see #setNameMap_@see TransactionAttributeEditor;public void setProperties(Properties transactionAttributes) {_		TransactionAttributeEditor tae = new TransactionAttributeEditor()__		Enumeration propNames = transactionAttributes.propertyNames()__		while (propNames.hasMoreElements()) {_			String methodName = (String) propNames.nextElement()__			String value = transactionAttributes.getProperty(methodName)__			tae.setAsText(value)__			TransactionAttribute attr = (TransactionAttribute) tae.getValue()__			addTransactionalMethod(methodName, attr)__		}_	};parses,the,given,properties,into,a,name,attribute,map,expects,method,names,as,keys,and,string,attributes,definitions,as,values,parsable,into,transaction,attribute,instances,via,transaction,attribute,editor,see,set,name,map,see,transaction,attribute,editor;public,void,set,properties,properties,transaction,attributes,transaction,attribute,editor,tae,new,transaction,attribute,editor,enumeration,prop,names,transaction,attributes,property,names,while,prop,names,has,more,elements,string,method,name,string,prop,names,next,element,string,value,transaction,attributes,get,property,method,name,tae,set,as,text,value,transaction,attribute,attr,transaction,attribute,tae,get,value,add,transactional,method,method,name,attr
NameMatchTransactionAttributeSource -> public void setProperties(Properties transactionAttributes);1368482696;Parses the given properties into a name/attribute map._Expects method names as keys and String attributes definitions as values,_parsable into TransactionAttribute instances via TransactionAttributeEditor._@see #setNameMap_@see TransactionAttributeEditor;public void setProperties(Properties transactionAttributes) {_		TransactionAttributeEditor tae = new TransactionAttributeEditor()__		Enumeration propNames = transactionAttributes.propertyNames()__		while (propNames.hasMoreElements()) {_			String methodName = (String) propNames.nextElement()__			String value = transactionAttributes.getProperty(methodName)__			tae.setAsText(value)__			TransactionAttribute attr = (TransactionAttribute) tae.getValue()__			addTransactionalMethod(methodName, attr)__		}_	};parses,the,given,properties,into,a,name,attribute,map,expects,method,names,as,keys,and,string,attributes,definitions,as,values,parsable,into,transaction,attribute,instances,via,transaction,attribute,editor,see,set,name,map,see,transaction,attribute,editor;public,void,set,properties,properties,transaction,attributes,transaction,attribute,editor,tae,new,transaction,attribute,editor,enumeration,prop,names,transaction,attributes,property,names,while,prop,names,has,more,elements,string,method,name,string,prop,names,next,element,string,value,transaction,attributes,get,property,method,name,tae,set,as,text,value,transaction,attribute,attr,transaction,attribute,tae,get,value,add,transactional,method,method,name,attr
NameMatchTransactionAttributeSource -> public void setProperties(Properties transactionAttributes);1383133125;Parses the given properties into a name/attribute map._Expects method names as keys and String attributes definitions as values,_parsable into TransactionAttribute instances via TransactionAttributeEditor._@see #setNameMap_@see TransactionAttributeEditor;public void setProperties(Properties transactionAttributes) {_		TransactionAttributeEditor tae = new TransactionAttributeEditor()__		Enumeration propNames = transactionAttributes.propertyNames()__		while (propNames.hasMoreElements()) {_			String methodName = (String) propNames.nextElement()__			String value = transactionAttributes.getProperty(methodName)__			tae.setAsText(value)__			TransactionAttribute attr = (TransactionAttribute) tae.getValue()__			addTransactionalMethod(methodName, attr)__		}_	};parses,the,given,properties,into,a,name,attribute,map,expects,method,names,as,keys,and,string,attributes,definitions,as,values,parsable,into,transaction,attribute,instances,via,transaction,attribute,editor,see,set,name,map,see,transaction,attribute,editor;public,void,set,properties,properties,transaction,attributes,transaction,attribute,editor,tae,new,transaction,attribute,editor,enumeration,prop,names,transaction,attributes,property,names,while,prop,names,has,more,elements,string,method,name,string,prop,names,next,element,string,value,transaction,attributes,get,property,method,name,tae,set,as,text,value,transaction,attribute,attr,transaction,attribute,tae,get,value,add,transactional,method,method,name,attr
NameMatchTransactionAttributeSource -> public void setProperties(Properties transactionAttributes);1385412762;Parses the given properties into a name/attribute map._Expects method names as keys and String attributes definitions as values,_parsable into TransactionAttribute instances via TransactionAttributeEditor._@see #setNameMap_@see TransactionAttributeEditor;public void setProperties(Properties transactionAttributes) {_		TransactionAttributeEditor tae = new TransactionAttributeEditor()__		Enumeration<?> propNames = transactionAttributes.propertyNames()__		while (propNames.hasMoreElements()) {_			String methodName = (String) propNames.nextElement()__			String value = transactionAttributes.getProperty(methodName)__			tae.setAsText(value)__			TransactionAttribute attr = (TransactionAttribute) tae.getValue()__			addTransactionalMethod(methodName, attr)__		}_	};parses,the,given,properties,into,a,name,attribute,map,expects,method,names,as,keys,and,string,attributes,definitions,as,values,parsable,into,transaction,attribute,instances,via,transaction,attribute,editor,see,set,name,map,see,transaction,attribute,editor;public,void,set,properties,properties,transaction,attributes,transaction,attribute,editor,tae,new,transaction,attribute,editor,enumeration,prop,names,transaction,attributes,property,names,while,prop,names,has,more,elements,string,method,name,string,prop,names,next,element,string,value,transaction,attributes,get,property,method,name,tae,set,as,text,value,transaction,attribute,attr,transaction,attribute,tae,get,value,add,transactional,method,method,name,attr
NameMatchTransactionAttributeSource -> public void setProperties(Properties transactionAttributes);1467730834;Parses the given properties into a name/attribute map._Expects method names as keys and String attributes definitions as values,_parsable into TransactionAttribute instances via TransactionAttributeEditor._@see #setNameMap_@see TransactionAttributeEditor;public void setProperties(Properties transactionAttributes) {_		TransactionAttributeEditor tae = new TransactionAttributeEditor()__		Enumeration<?> propNames = transactionAttributes.propertyNames()__		while (propNames.hasMoreElements()) {_			String methodName = (String) propNames.nextElement()__			String value = transactionAttributes.getProperty(methodName)__			tae.setAsText(value)__			TransactionAttribute attr = (TransactionAttribute) tae.getValue()__			addTransactionalMethod(methodName, attr)__		}_	};parses,the,given,properties,into,a,name,attribute,map,expects,method,names,as,keys,and,string,attributes,definitions,as,values,parsable,into,transaction,attribute,instances,via,transaction,attribute,editor,see,set,name,map,see,transaction,attribute,editor;public,void,set,properties,properties,transaction,attributes,transaction,attribute,editor,tae,new,transaction,attribute,editor,enumeration,prop,names,transaction,attributes,property,names,while,prop,names,has,more,elements,string,method,name,string,prop,names,next,element,string,value,transaction,attributes,get,property,method,name,tae,set,as,text,value,transaction,attribute,attr,transaction,attribute,tae,get,value,add,transactional,method,method,name,attr
NameMatchTransactionAttributeSource -> public void setProperties(Properties transactionAttributes);1496242568;Parses the given properties into a name/attribute map._Expects method names as keys and String attributes definitions as values,_parsable into TransactionAttribute instances via TransactionAttributeEditor._@see #setNameMap_@see TransactionAttributeEditor;public void setProperties(Properties transactionAttributes) {_		TransactionAttributeEditor tae = new TransactionAttributeEditor()__		Enumeration<?> propNames = transactionAttributes.propertyNames()__		while (propNames.hasMoreElements()) {_			String methodName = (String) propNames.nextElement()__			String value = transactionAttributes.getProperty(methodName)__			tae.setAsText(value)__			TransactionAttribute attr = (TransactionAttribute) tae.getValue()__			addTransactionalMethod(methodName, attr)__		}_	};parses,the,given,properties,into,a,name,attribute,map,expects,method,names,as,keys,and,string,attributes,definitions,as,values,parsable,into,transaction,attribute,instances,via,transaction,attribute,editor,see,set,name,map,see,transaction,attribute,editor;public,void,set,properties,properties,transaction,attributes,transaction,attribute,editor,tae,new,transaction,attribute,editor,enumeration,prop,names,transaction,attributes,property,names,while,prop,names,has,more,elements,string,method,name,string,prop,names,next,element,string,value,transaction,attributes,get,property,method,name,tae,set,as,text,value,transaction,attribute,attr,transaction,attribute,tae,get,value,add,transactional,method,method,name,attr
NameMatchTransactionAttributeSource -> public void setProperties(Properties transactionAttributes);1497362807;Parses the given properties into a name/attribute map._Expects method names as keys and String attributes definitions as values,_parsable into TransactionAttribute instances via TransactionAttributeEditor._@see #setNameMap_@see TransactionAttributeEditor;public void setProperties(Properties transactionAttributes) {_		TransactionAttributeEditor tae = new TransactionAttributeEditor()__		Enumeration<?> propNames = transactionAttributes.propertyNames()__		while (propNames.hasMoreElements()) {_			String methodName = (String) propNames.nextElement()__			String value = transactionAttributes.getProperty(methodName)__			tae.setAsText(value)__			TransactionAttribute attr = (TransactionAttribute) tae.getValue()__			addTransactionalMethod(methodName, attr)__		}_	};parses,the,given,properties,into,a,name,attribute,map,expects,method,names,as,keys,and,string,attributes,definitions,as,values,parsable,into,transaction,attribute,instances,via,transaction,attribute,editor,see,set,name,map,see,transaction,attribute,editor;public,void,set,properties,properties,transaction,attributes,transaction,attribute,editor,tae,new,transaction,attribute,editor,enumeration,prop,names,transaction,attributes,property,names,while,prop,names,has,more,elements,string,method,name,string,prop,names,next,element,string,value,transaction,attributes,get,property,method,name,tae,set,as,text,value,transaction,attribute,attr,transaction,attribute,tae,get,value,add,transactional,method,method,name,attr
NameMatchTransactionAttributeSource -> public void setProperties(Properties transactionAttributes);1502974979;Parses the given properties into a name/attribute map._Expects method names as keys and String attributes definitions as values,_parsable into TransactionAttribute instances via TransactionAttributeEditor._@see #setNameMap_@see TransactionAttributeEditor;public void setProperties(Properties transactionAttributes) {_		TransactionAttributeEditor tae = new TransactionAttributeEditor()__		Enumeration<?> propNames = transactionAttributes.propertyNames()__		while (propNames.hasMoreElements()) {_			String methodName = (String) propNames.nextElement()__			String value = transactionAttributes.getProperty(methodName)__			tae.setAsText(value)__			TransactionAttribute attr = (TransactionAttribute) tae.getValue()__			addTransactionalMethod(methodName, attr)__		}_	};parses,the,given,properties,into,a,name,attribute,map,expects,method,names,as,keys,and,string,attributes,definitions,as,values,parsable,into,transaction,attribute,instances,via,transaction,attribute,editor,see,set,name,map,see,transaction,attribute,editor;public,void,set,properties,properties,transaction,attributes,transaction,attribute,editor,tae,new,transaction,attribute,editor,enumeration,prop,names,transaction,attributes,property,names,while,prop,names,has,more,elements,string,method,name,string,prop,names,next,element,string,value,transaction,attributes,get,property,method,name,tae,set,as,text,value,transaction,attribute,attr,transaction,attribute,tae,get,value,add,transactional,method,method,name,attr
NameMatchTransactionAttributeSource -> public void setProperties(Properties transactionAttributes);1530174524;Parses the given properties into a name/attribute map._Expects method names as keys and String attributes definitions as values,_parsable into TransactionAttribute instances via TransactionAttributeEditor._@see #setNameMap_@see TransactionAttributeEditor;public void setProperties(Properties transactionAttributes) {_		TransactionAttributeEditor tae = new TransactionAttributeEditor()__		Enumeration<?> propNames = transactionAttributes.propertyNames()__		while (propNames.hasMoreElements()) {_			String methodName = (String) propNames.nextElement()__			String value = transactionAttributes.getProperty(methodName)__			tae.setAsText(value)__			TransactionAttribute attr = (TransactionAttribute) tae.getValue()__			addTransactionalMethod(methodName, attr)__		}_	};parses,the,given,properties,into,a,name,attribute,map,expects,method,names,as,keys,and,string,attributes,definitions,as,values,parsable,into,transaction,attribute,instances,via,transaction,attribute,editor,see,set,name,map,see,transaction,attribute,editor;public,void,set,properties,properties,transaction,attributes,transaction,attribute,editor,tae,new,transaction,attribute,editor,enumeration,prop,names,transaction,attributes,property,names,while,prop,names,has,more,elements,string,method,name,string,prop,names,next,element,string,value,transaction,attributes,get,property,method,name,tae,set,as,text,value,transaction,attribute,attr,transaction,attribute,tae,get,value,add,transactional,method,method,name,attr
