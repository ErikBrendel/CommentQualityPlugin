commented;modifiers;parameterAmount;loc;comment;code
false;protected,final;2;9;;@Override protected final Record createInputRecord(RecordFactory recordFactory, Object inObject) {     try {         return new CommAreaRecord(objectToBytes(inObject)).     } catch (IOException ex) {         throw new DataRetrievalFailureException("I/O exception during bytes conversion", ex).     } }
false;protected,final;1;10;;@Override protected final Object extractOutputData(Record record) throws DataAccessException {     CommAreaRecord commAreaRecord = (CommAreaRecord) record.     try {         return bytesToObject(commAreaRecord.toByteArray()).     } catch (IOException ex) {         throw new DataRetrievalFailureException("I/O exception during bytes conversion", ex).     } }
true;protected,abstract;1;1;/**  * Method used to convert an object into COMMAREA bytes.  * @param inObject the input data  * @return the COMMAREA's bytes  * @throws IOException if thrown by I/O methods  * @throws DataAccessException if conversion failed  */ ;/**  * Method used to convert an object into COMMAREA bytes.  * @param inObject the input data  * @return the COMMAREA's bytes  * @throws IOException if thrown by I/O methods  * @throws DataAccessException if conversion failed  */ protected abstract byte[] objectToBytes(Object inObject) throws IOException, DataAccessException.
true;protected,abstract;1;1;/**  * Method used to convert the COMMAREA's bytes to an object.  * @param bytes the COMMAREA's bytes  * @return the output data  * @throws IOException if thrown by I/O methods  * @throws DataAccessException if conversion failed  */ ;/**  * Method used to convert the COMMAREA's bytes to an object.  * @param bytes the COMMAREA's bytes  * @return the output data  * @throws IOException if thrown by I/O methods  * @throws DataAccessException if conversion failed  */ protected abstract Object bytesToObject(byte[] bytes) throws IOException, DataAccessException.
