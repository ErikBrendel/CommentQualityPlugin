commented;modifiers;parameterAmount;loc;comment;code
false;public;1;9;;@Override public void setImportMetadata(AnnotationMetadata importMetadata) {     this.enableTx = AnnotationAttributes.fromMap(importMetadata.getAnnotationAttributes(EnableTransactionManagement.class.getName(), false)).     if (this.enableTx == null) {         throw new IllegalArgumentException("@EnableTransactionManagement is not present on importing class " + importMetadata.getClassName()).     } }
false;;1;11;;@Autowired(required = false) void setConfigurers(Collection<TransactionManagementConfigurer> configurers) {     if (CollectionUtils.isEmpty(configurers)) {         return.     }     if (configurers.size() > 1) {         throw new IllegalStateException("Only one TransactionManagementConfigurer may exist").     }     TransactionManagementConfigurer configurer = configurers.iterator().next().     this.txManager = configurer.annotationDrivenTransactionManager(). }
false;public,static;0;5;;@Bean(name = TransactionManagementConfigUtils.TRANSACTIONAL_EVENT_LISTENER_FACTORY_BEAN_NAME) @Role(BeanDefinition.ROLE_INFRASTRUCTURE) public static TransactionalEventListenerFactory transactionalEventListenerFactory() {     return new TransactionalEventListenerFactory(). }
