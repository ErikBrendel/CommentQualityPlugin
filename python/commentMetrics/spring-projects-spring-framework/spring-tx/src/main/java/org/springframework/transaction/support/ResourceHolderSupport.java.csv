# id;timestamp;commentText;codeText;commentWords;codeWords
ResourceHolderSupport -> public int getTimeToLiveInSeconds();1328020251;Return the time to live for this object in seconds._Rounds up eagerly, e.g. 9.00001 still to 10._@return number of seconds until expiration_@throws TransactionTimedOutException if the deadline has already been reached;public int getTimeToLiveInSeconds() {_		double diff = ((double) getTimeToLiveInMillis()) / 1000__		int secs = (int) Math.ceil(diff)__		checkTransactionTimeout(secs <= 0)__		return secs__	};return,the,time,to,live,for,this,object,in,seconds,rounds,up,eagerly,e,g,9,00001,still,to,10,return,number,of,seconds,until,expiration,throws,transaction,timed,out,exception,if,the,deadline,has,already,been,reached;public,int,get,time,to,live,in,seconds,double,diff,double,get,time,to,live,in,millis,1000,int,secs,int,math,ceil,diff,check,transaction,timeout,secs,0,return,secs
ResourceHolderSupport -> public int getTimeToLiveInSeconds();1356735495;Return the time to live for this object in seconds._Rounds up eagerly, e.g. 9.00001 still to 10._@return number of seconds until expiration_@throws TransactionTimedOutException if the deadline has already been reached;public int getTimeToLiveInSeconds() {_		double diff = ((double) getTimeToLiveInMillis()) / 1000__		int secs = (int) Math.ceil(diff)__		checkTransactionTimeout(secs <= 0)__		return secs__	};return,the,time,to,live,for,this,object,in,seconds,rounds,up,eagerly,e,g,9,00001,still,to,10,return,number,of,seconds,until,expiration,throws,transaction,timed,out,exception,if,the,deadline,has,already,been,reached;public,int,get,time,to,live,in,seconds,double,diff,double,get,time,to,live,in,millis,1000,int,secs,int,math,ceil,diff,check,transaction,timeout,secs,0,return,secs
ResourceHolderSupport -> public int getTimeToLiveInSeconds();1357119239;Return the time to live for this object in seconds._Rounds up eagerly, e.g. 9.00001 still to 10._@return number of seconds until expiration_@throws TransactionTimedOutException if the deadline has already been reached;public int getTimeToLiveInSeconds() {_		double diff = ((double) getTimeToLiveInMillis()) / 1000__		int secs = (int) Math.ceil(diff)__		checkTransactionTimeout(secs <= 0)__		return secs__	};return,the,time,to,live,for,this,object,in,seconds,rounds,up,eagerly,e,g,9,00001,still,to,10,return,number,of,seconds,until,expiration,throws,transaction,timed,out,exception,if,the,deadline,has,already,been,reached;public,int,get,time,to,live,in,seconds,double,diff,double,get,time,to,live,in,millis,1000,int,secs,int,math,ceil,diff,check,transaction,timeout,secs,0,return,secs
ResourceHolderSupport -> public int getTimeToLiveInSeconds();1368482696;Return the time to live for this object in seconds._Rounds up eagerly, e.g. 9.00001 still to 10._@return number of seconds until expiration_@throws TransactionTimedOutException if the deadline has already been reached;public int getTimeToLiveInSeconds() {_		double diff = ((double) getTimeToLiveInMillis()) / 1000__		int secs = (int) Math.ceil(diff)__		checkTransactionTimeout(secs <= 0)__		return secs__	};return,the,time,to,live,for,this,object,in,seconds,rounds,up,eagerly,e,g,9,00001,still,to,10,return,number,of,seconds,until,expiration,throws,transaction,timed,out,exception,if,the,deadline,has,already,been,reached;public,int,get,time,to,live,in,seconds,double,diff,double,get,time,to,live,in,millis,1000,int,secs,int,math,ceil,diff,check,transaction,timeout,secs,0,return,secs
ResourceHolderSupport -> public int getTimeToLiveInSeconds();1487371244;Return the time to live for this object in seconds._Rounds up eagerly, e.g. 9.00001 still to 10._@return number of seconds until expiration_@throws TransactionTimedOutException if the deadline has already been reached;public int getTimeToLiveInSeconds() {_		double diff = ((double) getTimeToLiveInMillis()) / 1000__		int secs = (int) Math.ceil(diff)__		checkTransactionTimeout(secs <= 0)__		return secs__	};return,the,time,to,live,for,this,object,in,seconds,rounds,up,eagerly,e,g,9,00001,still,to,10,return,number,of,seconds,until,expiration,throws,transaction,timed,out,exception,if,the,deadline,has,already,been,reached;public,int,get,time,to,live,in,seconds,double,diff,double,get,time,to,live,in,millis,1000,int,secs,int,math,ceil,diff,check,transaction,timeout,secs,0,return,secs
ResourceHolderSupport -> public int getTimeToLiveInSeconds();1498780456;Return the time to live for this object in seconds._Rounds up eagerly, e.g. 9.00001 still to 10._@return number of seconds until expiration_@throws TransactionTimedOutException if the deadline has already been reached;public int getTimeToLiveInSeconds() {_		double diff = ((double) getTimeToLiveInMillis()) / 1000__		int secs = (int) Math.ceil(diff)__		checkTransactionTimeout(secs <= 0)__		return secs__	};return,the,time,to,live,for,this,object,in,seconds,rounds,up,eagerly,e,g,9,00001,still,to,10,return,number,of,seconds,until,expiration,throws,transaction,timed,out,exception,if,the,deadline,has,already,been,reached;public,int,get,time,to,live,in,seconds,double,diff,double,get,time,to,live,in,millis,1000,int,secs,int,math,ceil,diff,check,transaction,timeout,secs,0,return,secs
ResourceHolderSupport -> public int getTimeToLiveInSeconds();1515365304;Return the time to live for this object in seconds._Rounds up eagerly, e.g. 9.00001 still to 10._@return number of seconds until expiration_@throws TransactionTimedOutException if the deadline has already been reached;public int getTimeToLiveInSeconds() {_		double diff = ((double) getTimeToLiveInMillis()) / 1000__		int secs = (int) Math.ceil(diff)__		checkTransactionTimeout(secs <= 0)__		return secs__	};return,the,time,to,live,for,this,object,in,seconds,rounds,up,eagerly,e,g,9,00001,still,to,10,return,number,of,seconds,until,expiration,throws,transaction,timed,out,exception,if,the,deadline,has,already,been,reached;public,int,get,time,to,live,in,seconds,double,diff,double,get,time,to,live,in,millis,1000,int,secs,int,math,ceil,diff,check,transaction,timeout,secs,0,return,secs
ResourceHolderSupport -> public int getTimeToLiveInSeconds();1542613849;Return the time to live for this object in seconds._Rounds up eagerly, e.g. 9.00001 still to 10._@return number of seconds until expiration_@throws TransactionTimedOutException if the deadline has already been reached;public int getTimeToLiveInSeconds() {_		double diff = ((double) getTimeToLiveInMillis()) / 1000__		int secs = (int) Math.ceil(diff)__		checkTransactionTimeout(secs <= 0)__		return secs__	};return,the,time,to,live,for,this,object,in,seconds,rounds,up,eagerly,e,g,9,00001,still,to,10,return,number,of,seconds,until,expiration,throws,transaction,timed,out,exception,if,the,deadline,has,already,been,reached;public,int,get,time,to,live,in,seconds,double,diff,double,get,time,to,live,in,millis,1000,int,secs,int,math,ceil,diff,check,transaction,timeout,secs,0,return,secs
ResourceHolderSupport -> private void checkTransactionTimeout(boolean deadlineReached) throws TransactionTimedOutException;1328020251;Set the transaction rollback-only if the deadline has been reached,_and throw a TransactionTimedOutException.;private void checkTransactionTimeout(boolean deadlineReached) throws TransactionTimedOutException {_		if (deadlineReached) {_			setRollbackOnly()__			throw new TransactionTimedOutException("Transaction timed out: deadline was " + this.deadline)__		}_	};set,the,transaction,rollback,only,if,the,deadline,has,been,reached,and,throw,a,transaction,timed,out,exception;private,void,check,transaction,timeout,boolean,deadline,reached,throws,transaction,timed,out,exception,if,deadline,reached,set,rollback,only,throw,new,transaction,timed,out,exception,transaction,timed,out,deadline,was,this,deadline
ResourceHolderSupport -> private void checkTransactionTimeout(boolean deadlineReached) throws TransactionTimedOutException;1356735495;Set the transaction rollback-only if the deadline has been reached,_and throw a TransactionTimedOutException.;private void checkTransactionTimeout(boolean deadlineReached) throws TransactionTimedOutException {_		if (deadlineReached) {_			setRollbackOnly()__			throw new TransactionTimedOutException("Transaction timed out: deadline was " + this.deadline)__		}_	};set,the,transaction,rollback,only,if,the,deadline,has,been,reached,and,throw,a,transaction,timed,out,exception;private,void,check,transaction,timeout,boolean,deadline,reached,throws,transaction,timed,out,exception,if,deadline,reached,set,rollback,only,throw,new,transaction,timed,out,exception,transaction,timed,out,deadline,was,this,deadline
ResourceHolderSupport -> private void checkTransactionTimeout(boolean deadlineReached) throws TransactionTimedOutException;1357119239;Set the transaction rollback-only if the deadline has been reached,_and throw a TransactionTimedOutException.;private void checkTransactionTimeout(boolean deadlineReached) throws TransactionTimedOutException {_		if (deadlineReached) {_			setRollbackOnly()__			throw new TransactionTimedOutException("Transaction timed out: deadline was " + this.deadline)__		}_	};set,the,transaction,rollback,only,if,the,deadline,has,been,reached,and,throw,a,transaction,timed,out,exception;private,void,check,transaction,timeout,boolean,deadline,reached,throws,transaction,timed,out,exception,if,deadline,reached,set,rollback,only,throw,new,transaction,timed,out,exception,transaction,timed,out,deadline,was,this,deadline
ResourceHolderSupport -> private void checkTransactionTimeout(boolean deadlineReached) throws TransactionTimedOutException;1368482696;Set the transaction rollback-only if the deadline has been reached,_and throw a TransactionTimedOutException.;private void checkTransactionTimeout(boolean deadlineReached) throws TransactionTimedOutException {_		if (deadlineReached) {_			setRollbackOnly()__			throw new TransactionTimedOutException("Transaction timed out: deadline was " + this.deadline)__		}_	};set,the,transaction,rollback,only,if,the,deadline,has,been,reached,and,throw,a,transaction,timed,out,exception;private,void,check,transaction,timeout,boolean,deadline,reached,throws,transaction,timed,out,exception,if,deadline,reached,set,rollback,only,throw,new,transaction,timed,out,exception,transaction,timed,out,deadline,was,this,deadline
ResourceHolderSupport -> private void checkTransactionTimeout(boolean deadlineReached) throws TransactionTimedOutException;1487371244;Set the transaction rollback-only if the deadline has been reached,_and throw a TransactionTimedOutException.;private void checkTransactionTimeout(boolean deadlineReached) throws TransactionTimedOutException {_		if (deadlineReached) {_			setRollbackOnly()__			throw new TransactionTimedOutException("Transaction timed out: deadline was " + this.deadline)__		}_	};set,the,transaction,rollback,only,if,the,deadline,has,been,reached,and,throw,a,transaction,timed,out,exception;private,void,check,transaction,timeout,boolean,deadline,reached,throws,transaction,timed,out,exception,if,deadline,reached,set,rollback,only,throw,new,transaction,timed,out,exception,transaction,timed,out,deadline,was,this,deadline
ResourceHolderSupport -> private void checkTransactionTimeout(boolean deadlineReached) throws TransactionTimedOutException;1498780456;Set the transaction rollback-only if the deadline has been reached,_and throw a TransactionTimedOutException.;private void checkTransactionTimeout(boolean deadlineReached) throws TransactionTimedOutException {_		if (deadlineReached) {_			setRollbackOnly()__			throw new TransactionTimedOutException("Transaction timed out: deadline was " + this.deadline)__		}_	};set,the,transaction,rollback,only,if,the,deadline,has,been,reached,and,throw,a,transaction,timed,out,exception;private,void,check,transaction,timeout,boolean,deadline,reached,throws,transaction,timed,out,exception,if,deadline,reached,set,rollback,only,throw,new,transaction,timed,out,exception,transaction,timed,out,deadline,was,this,deadline
ResourceHolderSupport -> private void checkTransactionTimeout(boolean deadlineReached) throws TransactionTimedOutException;1515365304;Set the transaction rollback-only if the deadline has been reached,_and throw a TransactionTimedOutException.;private void checkTransactionTimeout(boolean deadlineReached) throws TransactionTimedOutException {_		if (deadlineReached) {_			setRollbackOnly()__			throw new TransactionTimedOutException("Transaction timed out: deadline was " + this.deadline)__		}_	};set,the,transaction,rollback,only,if,the,deadline,has,been,reached,and,throw,a,transaction,timed,out,exception;private,void,check,transaction,timeout,boolean,deadline,reached,throws,transaction,timed,out,exception,if,deadline,reached,set,rollback,only,throw,new,transaction,timed,out,exception,transaction,timed,out,deadline,was,this,deadline
ResourceHolderSupport -> private void checkTransactionTimeout(boolean deadlineReached) throws TransactionTimedOutException;1542613849;Set the transaction rollback-only if the deadline has been reached,_and throw a TransactionTimedOutException.;private void checkTransactionTimeout(boolean deadlineReached) throws TransactionTimedOutException {_		if (deadlineReached) {_			setRollbackOnly()__			throw new TransactionTimedOutException("Transaction timed out: deadline was " + this.deadline)__		}_	};set,the,transaction,rollback,only,if,the,deadline,has,been,reached,and,throw,a,transaction,timed,out,exception;private,void,check,transaction,timeout,boolean,deadline,reached,throws,transaction,timed,out,exception,if,deadline,reached,set,rollback,only,throw,new,transaction,timed,out,exception,transaction,timed,out,deadline,was,this,deadline
ResourceHolderSupport -> public void setTimeoutInSeconds(int seconds);1328020251;Set the timeout for this object in seconds._@param seconds number of seconds until expiration;public void setTimeoutInSeconds(int seconds) {_		setTimeoutInMillis(seconds * 1000)__	};set,the,timeout,for,this,object,in,seconds,param,seconds,number,of,seconds,until,expiration;public,void,set,timeout,in,seconds,int,seconds,set,timeout,in,millis,seconds,1000
ResourceHolderSupport -> public void setTimeoutInSeconds(int seconds);1356735495;Set the timeout for this object in seconds._@param seconds number of seconds until expiration;public void setTimeoutInSeconds(int seconds) {_		setTimeoutInMillis(seconds * 1000)__	};set,the,timeout,for,this,object,in,seconds,param,seconds,number,of,seconds,until,expiration;public,void,set,timeout,in,seconds,int,seconds,set,timeout,in,millis,seconds,1000
ResourceHolderSupport -> public void setTimeoutInSeconds(int seconds);1357119239;Set the timeout for this object in seconds._@param seconds number of seconds until expiration;public void setTimeoutInSeconds(int seconds) {_		setTimeoutInMillis(seconds * 1000)__	};set,the,timeout,for,this,object,in,seconds,param,seconds,number,of,seconds,until,expiration;public,void,set,timeout,in,seconds,int,seconds,set,timeout,in,millis,seconds,1000
ResourceHolderSupport -> public void setTimeoutInSeconds(int seconds);1368482696;Set the timeout for this object in seconds._@param seconds number of seconds until expiration;public void setTimeoutInSeconds(int seconds) {_		setTimeoutInMillis(seconds * 1000)__	};set,the,timeout,for,this,object,in,seconds,param,seconds,number,of,seconds,until,expiration;public,void,set,timeout,in,seconds,int,seconds,set,timeout,in,millis,seconds,1000
ResourceHolderSupport -> public void setTimeoutInSeconds(int seconds);1487371244;Set the timeout for this object in seconds._@param seconds number of seconds until expiration;public void setTimeoutInSeconds(int seconds) {_		setTimeoutInMillis(seconds * 1000)__	};set,the,timeout,for,this,object,in,seconds,param,seconds,number,of,seconds,until,expiration;public,void,set,timeout,in,seconds,int,seconds,set,timeout,in,millis,seconds,1000
ResourceHolderSupport -> public void setTimeoutInSeconds(int seconds);1498780456;Set the timeout for this object in seconds._@param seconds number of seconds until expiration;public void setTimeoutInSeconds(int seconds) {_		setTimeoutInMillis(seconds * 1000)__	};set,the,timeout,for,this,object,in,seconds,param,seconds,number,of,seconds,until,expiration;public,void,set,timeout,in,seconds,int,seconds,set,timeout,in,millis,seconds,1000
ResourceHolderSupport -> public void setTimeoutInSeconds(int seconds);1515365304;Set the timeout for this object in seconds._@param seconds number of seconds until expiration;public void setTimeoutInSeconds(int seconds) {_		setTimeoutInMillis(seconds * 1000L)__	};set,the,timeout,for,this,object,in,seconds,param,seconds,number,of,seconds,until,expiration;public,void,set,timeout,in,seconds,int,seconds,set,timeout,in,millis,seconds,1000l
ResourceHolderSupport -> public void setTimeoutInSeconds(int seconds);1542613849;Set the timeout for this object in seconds._@param seconds number of seconds until expiration;public void setTimeoutInSeconds(int seconds) {_		setTimeoutInMillis(seconds * 1000L)__	};set,the,timeout,for,this,object,in,seconds,param,seconds,number,of,seconds,until,expiration;public,void,set,timeout,in,seconds,int,seconds,set,timeout,in,millis,seconds,1000l
ResourceHolderSupport -> public void requested();1328020251;Increase the reference count by one because the holder has been requested_(i.e. someone requested the resource held by it).;public void requested() {_		this.referenceCount++__	};increase,the,reference,count,by,one,because,the,holder,has,been,requested,i,e,someone,requested,the,resource,held,by,it;public,void,requested,this,reference,count
ResourceHolderSupport -> public void requested();1356735495;Increase the reference count by one because the holder has been requested_(i.e. someone requested the resource held by it).;public void requested() {_		this.referenceCount++__	};increase,the,reference,count,by,one,because,the,holder,has,been,requested,i,e,someone,requested,the,resource,held,by,it;public,void,requested,this,reference,count
ResourceHolderSupport -> public void requested();1357119239;Increase the reference count by one because the holder has been requested_(i.e. someone requested the resource held by it).;public void requested() {_		this.referenceCount++__	};increase,the,reference,count,by,one,because,the,holder,has,been,requested,i,e,someone,requested,the,resource,held,by,it;public,void,requested,this,reference,count
ResourceHolderSupport -> public void requested();1368482696;Increase the reference count by one because the holder has been requested_(i.e. someone requested the resource held by it).;public void requested() {_		this.referenceCount++__	};increase,the,reference,count,by,one,because,the,holder,has,been,requested,i,e,someone,requested,the,resource,held,by,it;public,void,requested,this,reference,count
ResourceHolderSupport -> public void requested();1487371244;Increase the reference count by one because the holder has been requested_(i.e. someone requested the resource held by it).;public void requested() {_		this.referenceCount++__	};increase,the,reference,count,by,one,because,the,holder,has,been,requested,i,e,someone,requested,the,resource,held,by,it;public,void,requested,this,reference,count
ResourceHolderSupport -> public void requested();1498780456;Increase the reference count by one because the holder has been requested_(i.e. someone requested the resource held by it).;public void requested() {_		this.referenceCount++__	};increase,the,reference,count,by,one,because,the,holder,has,been,requested,i,e,someone,requested,the,resource,held,by,it;public,void,requested,this,reference,count
ResourceHolderSupport -> public void requested();1515365304;Increase the reference count by one because the holder has been requested_(i.e. someone requested the resource held by it).;public void requested() {_		this.referenceCount++__	};increase,the,reference,count,by,one,because,the,holder,has,been,requested,i,e,someone,requested,the,resource,held,by,it;public,void,requested,this,reference,count
ResourceHolderSupport -> public void requested();1542613849;Increase the reference count by one because the holder has been requested_(i.e. someone requested the resource held by it).;public void requested() {_		this.referenceCount++__	};increase,the,reference,count,by,one,because,the,holder,has,been,requested,i,e,someone,requested,the,resource,held,by,it;public,void,requested,this,reference,count
ResourceHolderSupport -> public void setSynchronizedWithTransaction(boolean synchronizedWithTransaction);1328020251;Mark the resource as synchronized with a transaction.;public void setSynchronizedWithTransaction(boolean synchronizedWithTransaction) {_		this.synchronizedWithTransaction = synchronizedWithTransaction__	};mark,the,resource,as,synchronized,with,a,transaction;public,void,set,synchronized,with,transaction,boolean,synchronized,with,transaction,this,synchronized,with,transaction,synchronized,with,transaction
ResourceHolderSupport -> public void setSynchronizedWithTransaction(boolean synchronizedWithTransaction);1356735495;Mark the resource as synchronized with a transaction.;public void setSynchronizedWithTransaction(boolean synchronizedWithTransaction) {_		this.synchronizedWithTransaction = synchronizedWithTransaction__	};mark,the,resource,as,synchronized,with,a,transaction;public,void,set,synchronized,with,transaction,boolean,synchronized,with,transaction,this,synchronized,with,transaction,synchronized,with,transaction
ResourceHolderSupport -> public void setSynchronizedWithTransaction(boolean synchronizedWithTransaction);1357119239;Mark the resource as synchronized with a transaction.;public void setSynchronizedWithTransaction(boolean synchronizedWithTransaction) {_		this.synchronizedWithTransaction = synchronizedWithTransaction__	};mark,the,resource,as,synchronized,with,a,transaction;public,void,set,synchronized,with,transaction,boolean,synchronized,with,transaction,this,synchronized,with,transaction,synchronized,with,transaction
ResourceHolderSupport -> public void setSynchronizedWithTransaction(boolean synchronizedWithTransaction);1368482696;Mark the resource as synchronized with a transaction.;public void setSynchronizedWithTransaction(boolean synchronizedWithTransaction) {_		this.synchronizedWithTransaction = synchronizedWithTransaction__	};mark,the,resource,as,synchronized,with,a,transaction;public,void,set,synchronized,with,transaction,boolean,synchronized,with,transaction,this,synchronized,with,transaction,synchronized,with,transaction
ResourceHolderSupport -> public void setSynchronizedWithTransaction(boolean synchronizedWithTransaction);1487371244;Mark the resource as synchronized with a transaction.;public void setSynchronizedWithTransaction(boolean synchronizedWithTransaction) {_		this.synchronizedWithTransaction = synchronizedWithTransaction__	};mark,the,resource,as,synchronized,with,a,transaction;public,void,set,synchronized,with,transaction,boolean,synchronized,with,transaction,this,synchronized,with,transaction,synchronized,with,transaction
ResourceHolderSupport -> public void setSynchronizedWithTransaction(boolean synchronizedWithTransaction);1498780456;Mark the resource as synchronized with a transaction.;public void setSynchronizedWithTransaction(boolean synchronizedWithTransaction) {_		this.synchronizedWithTransaction = synchronizedWithTransaction__	};mark,the,resource,as,synchronized,with,a,transaction;public,void,set,synchronized,with,transaction,boolean,synchronized,with,transaction,this,synchronized,with,transaction,synchronized,with,transaction
ResourceHolderSupport -> public void setSynchronizedWithTransaction(boolean synchronizedWithTransaction);1515365304;Mark the resource as synchronized with a transaction.;public void setSynchronizedWithTransaction(boolean synchronizedWithTransaction) {_		this.synchronizedWithTransaction = synchronizedWithTransaction__	};mark,the,resource,as,synchronized,with,a,transaction;public,void,set,synchronized,with,transaction,boolean,synchronized,with,transaction,this,synchronized,with,transaction,synchronized,with,transaction
ResourceHolderSupport -> public void setSynchronizedWithTransaction(boolean synchronizedWithTransaction);1542613849;Mark the resource as synchronized with a transaction.;public void setSynchronizedWithTransaction(boolean synchronizedWithTransaction) {_		this.synchronizedWithTransaction = synchronizedWithTransaction__	};mark,the,resource,as,synchronized,with,a,transaction;public,void,set,synchronized,with,transaction,boolean,synchronized,with,transaction,this,synchronized,with,transaction,synchronized,with,transaction
ResourceHolderSupport -> @Override 	public void reset();1356735495;Reset this resource holder - transactional state as well as reference count.;@Override_	public void reset() {_		clear()__		this.referenceCount = 0__	};reset,this,resource,holder,transactional,state,as,well,as,reference,count;override,public,void,reset,clear,this,reference,count,0
ResourceHolderSupport -> @Override 	public void reset();1368482696;Reset this resource holder - transactional state as well as reference count.;@Override_	public void reset() {_		clear()__		this.referenceCount = 0__	};reset,this,resource,holder,transactional,state,as,well,as,reference,count;override,public,void,reset,clear,this,reference,count,0
ResourceHolderSupport -> @Override 	public void reset();1487371244;Reset this resource holder - transactional state as well as reference count.;@Override_	public void reset() {_		clear()__		this.referenceCount = 0__	};reset,this,resource,holder,transactional,state,as,well,as,reference,count;override,public,void,reset,clear,this,reference,count,0
ResourceHolderSupport -> @Override 	public void reset();1498780456;Reset this resource holder - transactional state as well as reference count.;@Override_	public void reset() {_		clear()__		this.referenceCount = 0__	};reset,this,resource,holder,transactional,state,as,well,as,reference,count;override,public,void,reset,clear,this,reference,count,0
ResourceHolderSupport -> @Override 	public void reset();1515365304;Reset this resource holder - transactional state as well as reference count.;@Override_	public void reset() {_		clear()__		this.referenceCount = 0__	};reset,this,resource,holder,transactional,state,as,well,as,reference,count;override,public,void,reset,clear,this,reference,count,0
ResourceHolderSupport -> @Override 	public void reset();1542613849;Reset this resource holder - transactional state as well as reference count.;@Override_	public void reset() {_		clear()__		this.referenceCount = 0__	};reset,this,resource,holder,transactional,state,as,well,as,reference,count;override,public,void,reset,clear,this,reference,count,0
ResourceHolderSupport -> public boolean hasTimeout();1328020251;Return whether this object has an associated timeout.;public boolean hasTimeout() {_		return (this.deadline != null)__	};return,whether,this,object,has,an,associated,timeout;public,boolean,has,timeout,return,this,deadline,null
ResourceHolderSupport -> public boolean hasTimeout();1356735495;Return whether this object has an associated timeout.;public boolean hasTimeout() {_		return (this.deadline != null)__	};return,whether,this,object,has,an,associated,timeout;public,boolean,has,timeout,return,this,deadline,null
ResourceHolderSupport -> public boolean hasTimeout();1357119239;Return whether this object has an associated timeout.;public boolean hasTimeout() {_		return (this.deadline != null)__	};return,whether,this,object,has,an,associated,timeout;public,boolean,has,timeout,return,this,deadline,null
ResourceHolderSupport -> public boolean hasTimeout();1368482696;Return whether this object has an associated timeout.;public boolean hasTimeout() {_		return (this.deadline != null)__	};return,whether,this,object,has,an,associated,timeout;public,boolean,has,timeout,return,this,deadline,null
ResourceHolderSupport -> public boolean hasTimeout();1487371244;Return whether this object has an associated timeout.;public boolean hasTimeout() {_		return (this.deadline != null)__	};return,whether,this,object,has,an,associated,timeout;public,boolean,has,timeout,return,this,deadline,null
ResourceHolderSupport -> public boolean hasTimeout();1498780456;Return whether this object has an associated timeout.;public boolean hasTimeout() {_		return (this.deadline != null)__	};return,whether,this,object,has,an,associated,timeout;public,boolean,has,timeout,return,this,deadline,null
ResourceHolderSupport -> public boolean hasTimeout();1515365304;Return whether this object has an associated timeout.;public boolean hasTimeout() {_		return (this.deadline != null)__	};return,whether,this,object,has,an,associated,timeout;public,boolean,has,timeout,return,this,deadline,null
ResourceHolderSupport -> public boolean hasTimeout();1542613849;Return whether this object has an associated timeout.;public boolean hasTimeout() {_		return (this.deadline != null)__	};return,whether,this,object,has,an,associated,timeout;public,boolean,has,timeout,return,this,deadline,null
ResourceHolderSupport -> public void setRollbackOnly();1328020251;Mark the resource transaction as rollback-only.;public void setRollbackOnly() {_		this.rollbackOnly = true__	};mark,the,resource,transaction,as,rollback,only;public,void,set,rollback,only,this,rollback,only,true
ResourceHolderSupport -> public void setRollbackOnly();1356735495;Mark the resource transaction as rollback-only.;public void setRollbackOnly() {_		this.rollbackOnly = true__	};mark,the,resource,transaction,as,rollback,only;public,void,set,rollback,only,this,rollback,only,true
ResourceHolderSupport -> public void setRollbackOnly();1357119239;Mark the resource transaction as rollback-only.;public void setRollbackOnly() {_		this.rollbackOnly = true__	};mark,the,resource,transaction,as,rollback,only;public,void,set,rollback,only,this,rollback,only,true
ResourceHolderSupport -> public void setRollbackOnly();1368482696;Mark the resource transaction as rollback-only.;public void setRollbackOnly() {_		this.rollbackOnly = true__	};mark,the,resource,transaction,as,rollback,only;public,void,set,rollback,only,this,rollback,only,true
ResourceHolderSupport -> public void setRollbackOnly();1487371244;Mark the resource transaction as rollback-only.;public void setRollbackOnly() {_		this.rollbackOnly = true__	};mark,the,resource,transaction,as,rollback,only;public,void,set,rollback,only,this,rollback,only,true
ResourceHolderSupport -> public void setRollbackOnly();1498780456;Mark the resource transaction as rollback-only.;public void setRollbackOnly() {_		this.rollbackOnly = true__	};mark,the,resource,transaction,as,rollback,only;public,void,set,rollback,only,this,rollback,only,true
ResourceHolderSupport -> public void setRollbackOnly();1515365304;Mark the resource transaction as rollback-only.;public void setRollbackOnly() {_		this.rollbackOnly = true__	};mark,the,resource,transaction,as,rollback,only;public,void,set,rollback,only,this,rollback,only,true
ResourceHolderSupport -> public void setRollbackOnly();1542613849;Mark the resource transaction as rollback-only.;public void setRollbackOnly() {_		this.rollbackOnly = true__	};mark,the,resource,transaction,as,rollback,only;public,void,set,rollback,only,this,rollback,only,true
ResourceHolderSupport -> public void clear();1328020251;Clear the transactional state of this resource holder.;public void clear() {_		this.synchronizedWithTransaction = false__		this.rollbackOnly = false__		this.deadline = null__	};clear,the,transactional,state,of,this,resource,holder;public,void,clear,this,synchronized,with,transaction,false,this,rollback,only,false,this,deadline,null
ResourceHolderSupport -> public void clear();1356735495;Clear the transactional state of this resource holder.;public void clear() {_		this.synchronizedWithTransaction = false__		this.rollbackOnly = false__		this.deadline = null__	};clear,the,transactional,state,of,this,resource,holder;public,void,clear,this,synchronized,with,transaction,false,this,rollback,only,false,this,deadline,null
ResourceHolderSupport -> public void clear();1357119239;Clear the transactional state of this resource holder.;public void clear() {_		this.synchronizedWithTransaction = false__		this.rollbackOnly = false__		this.deadline = null__	};clear,the,transactional,state,of,this,resource,holder;public,void,clear,this,synchronized,with,transaction,false,this,rollback,only,false,this,deadline,null
ResourceHolderSupport -> public void clear();1368482696;Clear the transactional state of this resource holder.;public void clear() {_		this.synchronizedWithTransaction = false__		this.rollbackOnly = false__		this.deadline = null__	};clear,the,transactional,state,of,this,resource,holder;public,void,clear,this,synchronized,with,transaction,false,this,rollback,only,false,this,deadline,null
ResourceHolderSupport -> public void clear();1487371244;Clear the transactional state of this resource holder.;public void clear() {_		this.synchronizedWithTransaction = false__		this.rollbackOnly = false__		this.deadline = null__	};clear,the,transactional,state,of,this,resource,holder;public,void,clear,this,synchronized,with,transaction,false,this,rollback,only,false,this,deadline,null
ResourceHolderSupport -> public void clear();1498780456;Clear the transactional state of this resource holder.;public void clear() {_		this.synchronizedWithTransaction = false__		this.rollbackOnly = false__		this.deadline = null__	};clear,the,transactional,state,of,this,resource,holder;public,void,clear,this,synchronized,with,transaction,false,this,rollback,only,false,this,deadline,null
ResourceHolderSupport -> public void clear();1515365304;Clear the transactional state of this resource holder.;public void clear() {_		this.synchronizedWithTransaction = false__		this.rollbackOnly = false__		this.deadline = null__	};clear,the,transactional,state,of,this,resource,holder;public,void,clear,this,synchronized,with,transaction,false,this,rollback,only,false,this,deadline,null
ResourceHolderSupport -> public void clear();1542613849;Clear the transactional state of this resource holder.;public void clear() {_		this.synchronizedWithTransaction = false__		this.rollbackOnly = false__		this.deadline = null__	};clear,the,transactional,state,of,this,resource,holder;public,void,clear,this,synchronized,with,transaction,false,this,rollback,only,false,this,deadline,null
ResourceHolderSupport -> public Date getDeadline();1328020251;Return the expiration deadline of this object._@return the deadline as Date object;public Date getDeadline() {_		return this.deadline__	};return,the,expiration,deadline,of,this,object,return,the,deadline,as,date,object;public,date,get,deadline,return,this,deadline
ResourceHolderSupport -> public Date getDeadline();1356735495;Return the expiration deadline of this object._@return the deadline as Date object;public Date getDeadline() {_		return this.deadline__	};return,the,expiration,deadline,of,this,object,return,the,deadline,as,date,object;public,date,get,deadline,return,this,deadline
ResourceHolderSupport -> public Date getDeadline();1357119239;Return the expiration deadline of this object._@return the deadline as Date object;public Date getDeadline() {_		return this.deadline__	};return,the,expiration,deadline,of,this,object,return,the,deadline,as,date,object;public,date,get,deadline,return,this,deadline
ResourceHolderSupport -> public Date getDeadline();1368482696;Return the expiration deadline of this object._@return the deadline as Date object;public Date getDeadline() {_		return this.deadline__	};return,the,expiration,deadline,of,this,object,return,the,deadline,as,date,object;public,date,get,deadline,return,this,deadline
ResourceHolderSupport -> public Date getDeadline();1487371244;Return the expiration deadline of this object._@return the deadline as Date object;public Date getDeadline() {_		return this.deadline__	};return,the,expiration,deadline,of,this,object,return,the,deadline,as,date,object;public,date,get,deadline,return,this,deadline
ResourceHolderSupport -> public void resetRollbackOnly();1487371244;Reset the rollback-only status for this resource transaction._<p>Only really intended to be called after custom rollback steps which_keep the original resource in action, e.g. in case of a savepoint._@since 5.0_@see org.springframework.transaction.SavepointManager#rollbackToSavepoint;public void resetRollbackOnly() {_		this.rollbackOnly = false__	};reset,the,rollback,only,status,for,this,resource,transaction,p,only,really,intended,to,be,called,after,custom,rollback,steps,which,keep,the,original,resource,in,action,e,g,in,case,of,a,savepoint,since,5,0,see,org,springframework,transaction,savepoint,manager,rollback,to,savepoint;public,void,reset,rollback,only,this,rollback,only,false
ResourceHolderSupport -> public void resetRollbackOnly();1498780456;Reset the rollback-only status for this resource transaction._<p>Only really intended to be called after custom rollback steps which_keep the original resource in action, e.g. in case of a savepoint._@since 5.0_@see org.springframework.transaction.SavepointManager#rollbackToSavepoint;public void resetRollbackOnly() {_		this.rollbackOnly = false__	};reset,the,rollback,only,status,for,this,resource,transaction,p,only,really,intended,to,be,called,after,custom,rollback,steps,which,keep,the,original,resource,in,action,e,g,in,case,of,a,savepoint,since,5,0,see,org,springframework,transaction,savepoint,manager,rollback,to,savepoint;public,void,reset,rollback,only,this,rollback,only,false
ResourceHolderSupport -> public void resetRollbackOnly();1515365304;Reset the rollback-only status for this resource transaction._<p>Only really intended to be called after custom rollback steps which_keep the original resource in action, e.g. in case of a savepoint._@since 5.0_@see org.springframework.transaction.SavepointManager#rollbackToSavepoint;public void resetRollbackOnly() {_		this.rollbackOnly = false__	};reset,the,rollback,only,status,for,this,resource,transaction,p,only,really,intended,to,be,called,after,custom,rollback,steps,which,keep,the,original,resource,in,action,e,g,in,case,of,a,savepoint,since,5,0,see,org,springframework,transaction,savepoint,manager,rollback,to,savepoint;public,void,reset,rollback,only,this,rollback,only,false
ResourceHolderSupport -> public void resetRollbackOnly();1542613849;Reset the rollback-only status for this resource transaction._<p>Only really intended to be called after custom rollback steps which_keep the original resource in action, e.g. in case of a savepoint._@since 5.0_@see org.springframework.transaction.SavepointManager#rollbackToSavepoint;public void resetRollbackOnly() {_		this.rollbackOnly = false__	};reset,the,rollback,only,status,for,this,resource,transaction,p,only,really,intended,to,be,called,after,custom,rollback,steps,which,keep,the,original,resource,in,action,e,g,in,case,of,a,savepoint,since,5,0,see,org,springframework,transaction,savepoint,manager,rollback,to,savepoint;public,void,reset,rollback,only,this,rollback,only,false
ResourceHolderSupport -> @Nullable 	public Date getDeadline();1498780456;Return the expiration deadline of this object._@return the deadline as Date object;@Nullable_	public Date getDeadline() {_		return this.deadline__	};return,the,expiration,deadline,of,this,object,return,the,deadline,as,date,object;nullable,public,date,get,deadline,return,this,deadline
ResourceHolderSupport -> @Nullable 	public Date getDeadline();1515365304;Return the expiration deadline of this object._@return the deadline as Date object;@Nullable_	public Date getDeadline() {_		return this.deadline__	};return,the,expiration,deadline,of,this,object,return,the,deadline,as,date,object;nullable,public,date,get,deadline,return,this,deadline
ResourceHolderSupport -> @Nullable 	public Date getDeadline();1542613849;Return the expiration deadline of this object._@return the deadline as Date object;@Nullable_	public Date getDeadline() {_		return this.deadline__	};return,the,expiration,deadline,of,this,object,return,the,deadline,as,date,object;nullable,public,date,get,deadline,return,this,deadline
ResourceHolderSupport -> public void reset();1328020251;Reset this resource holder - transactional state as well as reference count.;public void reset() {_		clear()__		this.referenceCount = 0__	};reset,this,resource,holder,transactional,state,as,well,as,reference,count;public,void,reset,clear,this,reference,count,0
ResourceHolderSupport -> public void reset();1357119239;Reset this resource holder - transactional state as well as reference count.;public void reset() {_		clear()__		this.referenceCount = 0__	};reset,this,resource,holder,transactional,state,as,well,as,reference,count;public,void,reset,clear,this,reference,count,0
ResourceHolderSupport -> public boolean isSynchronizedWithTransaction();1328020251;Return whether the resource is synchronized with a transaction.;public boolean isSynchronizedWithTransaction() {_		return this.synchronizedWithTransaction__	};return,whether,the,resource,is,synchronized,with,a,transaction;public,boolean,is,synchronized,with,transaction,return,this,synchronized,with,transaction
ResourceHolderSupport -> public boolean isSynchronizedWithTransaction();1356735495;Return whether the resource is synchronized with a transaction.;public boolean isSynchronizedWithTransaction() {_		return this.synchronizedWithTransaction__	};return,whether,the,resource,is,synchronized,with,a,transaction;public,boolean,is,synchronized,with,transaction,return,this,synchronized,with,transaction
ResourceHolderSupport -> public boolean isSynchronizedWithTransaction();1357119239;Return whether the resource is synchronized with a transaction.;public boolean isSynchronizedWithTransaction() {_		return this.synchronizedWithTransaction__	};return,whether,the,resource,is,synchronized,with,a,transaction;public,boolean,is,synchronized,with,transaction,return,this,synchronized,with,transaction
ResourceHolderSupport -> public boolean isSynchronizedWithTransaction();1368482696;Return whether the resource is synchronized with a transaction.;public boolean isSynchronizedWithTransaction() {_		return this.synchronizedWithTransaction__	};return,whether,the,resource,is,synchronized,with,a,transaction;public,boolean,is,synchronized,with,transaction,return,this,synchronized,with,transaction
ResourceHolderSupport -> public boolean isSynchronizedWithTransaction();1487371244;Return whether the resource is synchronized with a transaction.;public boolean isSynchronizedWithTransaction() {_		return this.synchronizedWithTransaction__	};return,whether,the,resource,is,synchronized,with,a,transaction;public,boolean,is,synchronized,with,transaction,return,this,synchronized,with,transaction
ResourceHolderSupport -> public boolean isSynchronizedWithTransaction();1498780456;Return whether the resource is synchronized with a transaction.;public boolean isSynchronizedWithTransaction() {_		return this.synchronizedWithTransaction__	};return,whether,the,resource,is,synchronized,with,a,transaction;public,boolean,is,synchronized,with,transaction,return,this,synchronized,with,transaction
ResourceHolderSupport -> public boolean isSynchronizedWithTransaction();1515365304;Return whether the resource is synchronized with a transaction.;public boolean isSynchronizedWithTransaction() {_		return this.synchronizedWithTransaction__	};return,whether,the,resource,is,synchronized,with,a,transaction;public,boolean,is,synchronized,with,transaction,return,this,synchronized,with,transaction
ResourceHolderSupport -> public boolean isSynchronizedWithTransaction();1542613849;Return whether the resource is synchronized with a transaction.;public boolean isSynchronizedWithTransaction() {_		return this.synchronizedWithTransaction__	};return,whether,the,resource,is,synchronized,with,a,transaction;public,boolean,is,synchronized,with,transaction,return,this,synchronized,with,transaction
ResourceHolderSupport -> public boolean isRollbackOnly();1328020251;Return whether the resource transaction is marked as rollback-only.;public boolean isRollbackOnly() {_		return this.rollbackOnly__	};return,whether,the,resource,transaction,is,marked,as,rollback,only;public,boolean,is,rollback,only,return,this,rollback,only
ResourceHolderSupport -> public boolean isRollbackOnly();1356735495;Return whether the resource transaction is marked as rollback-only.;public boolean isRollbackOnly() {_		return this.rollbackOnly__	};return,whether,the,resource,transaction,is,marked,as,rollback,only;public,boolean,is,rollback,only,return,this,rollback,only
ResourceHolderSupport -> public boolean isRollbackOnly();1357119239;Return whether the resource transaction is marked as rollback-only.;public boolean isRollbackOnly() {_		return this.rollbackOnly__	};return,whether,the,resource,transaction,is,marked,as,rollback,only;public,boolean,is,rollback,only,return,this,rollback,only
ResourceHolderSupport -> public boolean isRollbackOnly();1368482696;Return whether the resource transaction is marked as rollback-only.;public boolean isRollbackOnly() {_		return this.rollbackOnly__	};return,whether,the,resource,transaction,is,marked,as,rollback,only;public,boolean,is,rollback,only,return,this,rollback,only
ResourceHolderSupport -> public boolean isRollbackOnly();1487371244;Return whether the resource transaction is marked as rollback-only.;public boolean isRollbackOnly() {_		return this.rollbackOnly__	};return,whether,the,resource,transaction,is,marked,as,rollback,only;public,boolean,is,rollback,only,return,this,rollback,only
ResourceHolderSupport -> public boolean isRollbackOnly();1498780456;Return whether the resource transaction is marked as rollback-only.;public boolean isRollbackOnly() {_		return this.rollbackOnly__	};return,whether,the,resource,transaction,is,marked,as,rollback,only;public,boolean,is,rollback,only,return,this,rollback,only
ResourceHolderSupport -> public boolean isRollbackOnly();1515365304;Return whether the resource transaction is marked as rollback-only.;public boolean isRollbackOnly() {_		return this.rollbackOnly__	};return,whether,the,resource,transaction,is,marked,as,rollback,only;public,boolean,is,rollback,only,return,this,rollback,only
ResourceHolderSupport -> public boolean isRollbackOnly();1542613849;Return whether the resource transaction is marked as rollback-only.;public boolean isRollbackOnly() {_		return this.rollbackOnly__	};return,whether,the,resource,transaction,is,marked,as,rollback,only;public,boolean,is,rollback,only,return,this,rollback,only
ResourceHolderSupport -> public void setTimeoutInMillis(long millis);1328020251;Set the timeout for this object in milliseconds._@param millis number of milliseconds until expiration;public void setTimeoutInMillis(long millis) {_		this.deadline = new Date(System.currentTimeMillis() + millis)__	};set,the,timeout,for,this,object,in,milliseconds,param,millis,number,of,milliseconds,until,expiration;public,void,set,timeout,in,millis,long,millis,this,deadline,new,date,system,current,time,millis,millis
ResourceHolderSupport -> public void setTimeoutInMillis(long millis);1356735495;Set the timeout for this object in milliseconds._@param millis number of milliseconds until expiration;public void setTimeoutInMillis(long millis) {_		this.deadline = new Date(System.currentTimeMillis() + millis)__	};set,the,timeout,for,this,object,in,milliseconds,param,millis,number,of,milliseconds,until,expiration;public,void,set,timeout,in,millis,long,millis,this,deadline,new,date,system,current,time,millis,millis
ResourceHolderSupport -> public void setTimeoutInMillis(long millis);1357119239;Set the timeout for this object in milliseconds._@param millis number of milliseconds until expiration;public void setTimeoutInMillis(long millis) {_		this.deadline = new Date(System.currentTimeMillis() + millis)__	};set,the,timeout,for,this,object,in,milliseconds,param,millis,number,of,milliseconds,until,expiration;public,void,set,timeout,in,millis,long,millis,this,deadline,new,date,system,current,time,millis,millis
ResourceHolderSupport -> public void setTimeoutInMillis(long millis);1368482696;Set the timeout for this object in milliseconds._@param millis number of milliseconds until expiration;public void setTimeoutInMillis(long millis) {_		this.deadline = new Date(System.currentTimeMillis() + millis)__	};set,the,timeout,for,this,object,in,milliseconds,param,millis,number,of,milliseconds,until,expiration;public,void,set,timeout,in,millis,long,millis,this,deadline,new,date,system,current,time,millis,millis
ResourceHolderSupport -> public void setTimeoutInMillis(long millis);1487371244;Set the timeout for this object in milliseconds._@param millis number of milliseconds until expiration;public void setTimeoutInMillis(long millis) {_		this.deadline = new Date(System.currentTimeMillis() + millis)__	};set,the,timeout,for,this,object,in,milliseconds,param,millis,number,of,milliseconds,until,expiration;public,void,set,timeout,in,millis,long,millis,this,deadline,new,date,system,current,time,millis,millis
ResourceHolderSupport -> public void setTimeoutInMillis(long millis);1498780456;Set the timeout for this object in milliseconds._@param millis number of milliseconds until expiration;public void setTimeoutInMillis(long millis) {_		this.deadline = new Date(System.currentTimeMillis() + millis)__	};set,the,timeout,for,this,object,in,milliseconds,param,millis,number,of,milliseconds,until,expiration;public,void,set,timeout,in,millis,long,millis,this,deadline,new,date,system,current,time,millis,millis
ResourceHolderSupport -> public void setTimeoutInMillis(long millis);1515365304;Set the timeout for this object in milliseconds._@param millis number of milliseconds until expiration;public void setTimeoutInMillis(long millis) {_		this.deadline = new Date(System.currentTimeMillis() + millis)__	};set,the,timeout,for,this,object,in,milliseconds,param,millis,number,of,milliseconds,until,expiration;public,void,set,timeout,in,millis,long,millis,this,deadline,new,date,system,current,time,millis,millis
ResourceHolderSupport -> public void setTimeoutInMillis(long millis);1542613849;Set the timeout for this object in milliseconds._@param millis number of milliseconds until expiration;public void setTimeoutInMillis(long millis) {_		this.deadline = new Date(System.currentTimeMillis() + millis)__	};set,the,timeout,for,this,object,in,milliseconds,param,millis,number,of,milliseconds,until,expiration;public,void,set,timeout,in,millis,long,millis,this,deadline,new,date,system,current,time,millis,millis
ResourceHolderSupport -> public void released();1328020251;Decrease the reference count by one because the holder has been released_(i.e. someone released the resource held by it).;public void released() {_		this.referenceCount--__	};decrease,the,reference,count,by,one,because,the,holder,has,been,released,i,e,someone,released,the,resource,held,by,it;public,void,released,this,reference,count
ResourceHolderSupport -> public void released();1356735495;Decrease the reference count by one because the holder has been released_(i.e. someone released the resource held by it).;public void released() {_		this.referenceCount--__	};decrease,the,reference,count,by,one,because,the,holder,has,been,released,i,e,someone,released,the,resource,held,by,it;public,void,released,this,reference,count
ResourceHolderSupport -> public void released();1357119239;Decrease the reference count by one because the holder has been released_(i.e. someone released the resource held by it).;public void released() {_		this.referenceCount--__	};decrease,the,reference,count,by,one,because,the,holder,has,been,released,i,e,someone,released,the,resource,held,by,it;public,void,released,this,reference,count
ResourceHolderSupport -> public void released();1368482696;Decrease the reference count by one because the holder has been released_(i.e. someone released the resource held by it).;public void released() {_		this.referenceCount--__	};decrease,the,reference,count,by,one,because,the,holder,has,been,released,i,e,someone,released,the,resource,held,by,it;public,void,released,this,reference,count
ResourceHolderSupport -> public void released();1487371244;Decrease the reference count by one because the holder has been released_(i.e. someone released the resource held by it).;public void released() {_		this.referenceCount--__	};decrease,the,reference,count,by,one,because,the,holder,has,been,released,i,e,someone,released,the,resource,held,by,it;public,void,released,this,reference,count
ResourceHolderSupport -> public void released();1498780456;Decrease the reference count by one because the holder has been released_(i.e. someone released the resource held by it).;public void released() {_		this.referenceCount--__	};decrease,the,reference,count,by,one,because,the,holder,has,been,released,i,e,someone,released,the,resource,held,by,it;public,void,released,this,reference,count
ResourceHolderSupport -> public void released();1515365304;Decrease the reference count by one because the holder has been released_(i.e. someone released the resource held by it).;public void released() {_		this.referenceCount--__	};decrease,the,reference,count,by,one,because,the,holder,has,been,released,i,e,someone,released,the,resource,held,by,it;public,void,released,this,reference,count
ResourceHolderSupport -> public void released();1542613849;Decrease the reference count by one because the holder has been released_(i.e. someone released the resource held by it).;public void released() {_		this.referenceCount--__	};decrease,the,reference,count,by,one,because,the,holder,has,been,released,i,e,someone,released,the,resource,held,by,it;public,void,released,this,reference,count
ResourceHolderSupport -> public boolean isOpen();1328020251;Return whether there are still open references to this holder.;public boolean isOpen() {_		return (this.referenceCount > 0)__	};return,whether,there,are,still,open,references,to,this,holder;public,boolean,is,open,return,this,reference,count,0
ResourceHolderSupport -> public boolean isOpen();1356735495;Return whether there are still open references to this holder.;public boolean isOpen() {_		return (this.referenceCount > 0)__	};return,whether,there,are,still,open,references,to,this,holder;public,boolean,is,open,return,this,reference,count,0
ResourceHolderSupport -> public boolean isOpen();1357119239;Return whether there are still open references to this holder.;public boolean isOpen() {_		return (this.referenceCount > 0)__	};return,whether,there,are,still,open,references,to,this,holder;public,boolean,is,open,return,this,reference,count,0
ResourceHolderSupport -> public boolean isOpen();1368482696;Return whether there are still open references to this holder.;public boolean isOpen() {_		return (this.referenceCount > 0)__	};return,whether,there,are,still,open,references,to,this,holder;public,boolean,is,open,return,this,reference,count,0
ResourceHolderSupport -> public boolean isOpen();1487371244;Return whether there are still open references to this holder.;public boolean isOpen() {_		return (this.referenceCount > 0)__	};return,whether,there,are,still,open,references,to,this,holder;public,boolean,is,open,return,this,reference,count,0
ResourceHolderSupport -> public boolean isOpen();1498780456;Return whether there are still open references to this holder.;public boolean isOpen() {_		return (this.referenceCount > 0)__	};return,whether,there,are,still,open,references,to,this,holder;public,boolean,is,open,return,this,reference,count,0
ResourceHolderSupport -> public boolean isOpen();1515365304;Return whether there are still open references to this holder.;public boolean isOpen() {_		return (this.referenceCount > 0)__	};return,whether,there,are,still,open,references,to,this,holder;public,boolean,is,open,return,this,reference,count,0
ResourceHolderSupport -> public boolean isOpen();1542613849;Return whether there are still open references to this holder.;public boolean isOpen() {_		return (this.referenceCount > 0)__	};return,whether,there,are,still,open,references,to,this,holder;public,boolean,is,open,return,this,reference,count,0
ResourceHolderSupport -> public long getTimeToLiveInMillis() throws TransactionTimedOutException;1328020251;Return the time to live for this object in milliseconds._@return number of millseconds until expiration_@throws TransactionTimedOutException if the deadline has already been reached;public long getTimeToLiveInMillis() throws TransactionTimedOutException{_		if (this.deadline == null) {_			throw new IllegalStateException("No timeout specified for this resource holder")__		}_		long timeToLive = this.deadline.getTime() - System.currentTimeMillis()__		checkTransactionTimeout(timeToLive <= 0)__		return timeToLive__	};return,the,time,to,live,for,this,object,in,milliseconds,return,number,of,millseconds,until,expiration,throws,transaction,timed,out,exception,if,the,deadline,has,already,been,reached;public,long,get,time,to,live,in,millis,throws,transaction,timed,out,exception,if,this,deadline,null,throw,new,illegal,state,exception,no,timeout,specified,for,this,resource,holder,long,time,to,live,this,deadline,get,time,system,current,time,millis,check,transaction,timeout,time,to,live,0,return,time,to,live
ResourceHolderSupport -> public long getTimeToLiveInMillis() throws TransactionTimedOutException;1356735495;Return the time to live for this object in milliseconds._@return number of millseconds until expiration_@throws TransactionTimedOutException if the deadline has already been reached;public long getTimeToLiveInMillis() throws TransactionTimedOutException{_		if (this.deadline == null) {_			throw new IllegalStateException("No timeout specified for this resource holder")__		}_		long timeToLive = this.deadline.getTime() - System.currentTimeMillis()__		checkTransactionTimeout(timeToLive <= 0)__		return timeToLive__	};return,the,time,to,live,for,this,object,in,milliseconds,return,number,of,millseconds,until,expiration,throws,transaction,timed,out,exception,if,the,deadline,has,already,been,reached;public,long,get,time,to,live,in,millis,throws,transaction,timed,out,exception,if,this,deadline,null,throw,new,illegal,state,exception,no,timeout,specified,for,this,resource,holder,long,time,to,live,this,deadline,get,time,system,current,time,millis,check,transaction,timeout,time,to,live,0,return,time,to,live
ResourceHolderSupport -> public long getTimeToLiveInMillis() throws TransactionTimedOutException;1357119239;Return the time to live for this object in milliseconds._@return number of millseconds until expiration_@throws TransactionTimedOutException if the deadline has already been reached;public long getTimeToLiveInMillis() throws TransactionTimedOutException{_		if (this.deadline == null) {_			throw new IllegalStateException("No timeout specified for this resource holder")__		}_		long timeToLive = this.deadline.getTime() - System.currentTimeMillis()__		checkTransactionTimeout(timeToLive <= 0)__		return timeToLive__	};return,the,time,to,live,for,this,object,in,milliseconds,return,number,of,millseconds,until,expiration,throws,transaction,timed,out,exception,if,the,deadline,has,already,been,reached;public,long,get,time,to,live,in,millis,throws,transaction,timed,out,exception,if,this,deadline,null,throw,new,illegal,state,exception,no,timeout,specified,for,this,resource,holder,long,time,to,live,this,deadline,get,time,system,current,time,millis,check,transaction,timeout,time,to,live,0,return,time,to,live
ResourceHolderSupport -> public long getTimeToLiveInMillis() throws TransactionTimedOutException;1368482696;Return the time to live for this object in milliseconds._@return number of millseconds until expiration_@throws TransactionTimedOutException if the deadline has already been reached;public long getTimeToLiveInMillis() throws TransactionTimedOutException{_		if (this.deadline == null) {_			throw new IllegalStateException("No timeout specified for this resource holder")__		}_		long timeToLive = this.deadline.getTime() - System.currentTimeMillis()__		checkTransactionTimeout(timeToLive <= 0)__		return timeToLive__	};return,the,time,to,live,for,this,object,in,milliseconds,return,number,of,millseconds,until,expiration,throws,transaction,timed,out,exception,if,the,deadline,has,already,been,reached;public,long,get,time,to,live,in,millis,throws,transaction,timed,out,exception,if,this,deadline,null,throw,new,illegal,state,exception,no,timeout,specified,for,this,resource,holder,long,time,to,live,this,deadline,get,time,system,current,time,millis,check,transaction,timeout,time,to,live,0,return,time,to,live
ResourceHolderSupport -> public long getTimeToLiveInMillis() throws TransactionTimedOutException;1487371244;Return the time to live for this object in milliseconds._@return number of millseconds until expiration_@throws TransactionTimedOutException if the deadline has already been reached;public long getTimeToLiveInMillis() throws TransactionTimedOutException{_		if (this.deadline == null) {_			throw new IllegalStateException("No timeout specified for this resource holder")__		}_		long timeToLive = this.deadline.getTime() - System.currentTimeMillis()__		checkTransactionTimeout(timeToLive <= 0)__		return timeToLive__	};return,the,time,to,live,for,this,object,in,milliseconds,return,number,of,millseconds,until,expiration,throws,transaction,timed,out,exception,if,the,deadline,has,already,been,reached;public,long,get,time,to,live,in,millis,throws,transaction,timed,out,exception,if,this,deadline,null,throw,new,illegal,state,exception,no,timeout,specified,for,this,resource,holder,long,time,to,live,this,deadline,get,time,system,current,time,millis,check,transaction,timeout,time,to,live,0,return,time,to,live
ResourceHolderSupport -> public long getTimeToLiveInMillis() throws TransactionTimedOutException;1498780456;Return the time to live for this object in milliseconds._@return number of millseconds until expiration_@throws TransactionTimedOutException if the deadline has already been reached;public long getTimeToLiveInMillis() throws TransactionTimedOutException{_		if (this.deadline == null) {_			throw new IllegalStateException("No timeout specified for this resource holder")__		}_		long timeToLive = this.deadline.getTime() - System.currentTimeMillis()__		checkTransactionTimeout(timeToLive <= 0)__		return timeToLive__	};return,the,time,to,live,for,this,object,in,milliseconds,return,number,of,millseconds,until,expiration,throws,transaction,timed,out,exception,if,the,deadline,has,already,been,reached;public,long,get,time,to,live,in,millis,throws,transaction,timed,out,exception,if,this,deadline,null,throw,new,illegal,state,exception,no,timeout,specified,for,this,resource,holder,long,time,to,live,this,deadline,get,time,system,current,time,millis,check,transaction,timeout,time,to,live,0,return,time,to,live
ResourceHolderSupport -> public long getTimeToLiveInMillis() throws TransactionTimedOutException;1515365304;Return the time to live for this object in milliseconds._@return number of millseconds until expiration_@throws TransactionTimedOutException if the deadline has already been reached;public long getTimeToLiveInMillis() throws TransactionTimedOutException{_		if (this.deadline == null) {_			throw new IllegalStateException("No timeout specified for this resource holder")__		}_		long timeToLive = this.deadline.getTime() - System.currentTimeMillis()__		checkTransactionTimeout(timeToLive <= 0)__		return timeToLive__	};return,the,time,to,live,for,this,object,in,milliseconds,return,number,of,millseconds,until,expiration,throws,transaction,timed,out,exception,if,the,deadline,has,already,been,reached;public,long,get,time,to,live,in,millis,throws,transaction,timed,out,exception,if,this,deadline,null,throw,new,illegal,state,exception,no,timeout,specified,for,this,resource,holder,long,time,to,live,this,deadline,get,time,system,current,time,millis,check,transaction,timeout,time,to,live,0,return,time,to,live
ResourceHolderSupport -> public long getTimeToLiveInMillis() throws TransactionTimedOutException;1542613849;Return the time to live for this object in milliseconds._@return number of milliseconds until expiration_@throws TransactionTimedOutException if the deadline has already been reached;public long getTimeToLiveInMillis() throws TransactionTimedOutException{_		if (this.deadline == null) {_			throw new IllegalStateException("No timeout specified for this resource holder")__		}_		long timeToLive = this.deadline.getTime() - System.currentTimeMillis()__		checkTransactionTimeout(timeToLive <= 0)__		return timeToLive__	};return,the,time,to,live,for,this,object,in,milliseconds,return,number,of,milliseconds,until,expiration,throws,transaction,timed,out,exception,if,the,deadline,has,already,been,reached;public,long,get,time,to,live,in,millis,throws,transaction,timed,out,exception,if,this,deadline,null,throw,new,illegal,state,exception,no,timeout,specified,for,this,resource,holder,long,time,to,live,this,deadline,get,time,system,current,time,millis,check,transaction,timeout,time,to,live,0,return,time,to,live
