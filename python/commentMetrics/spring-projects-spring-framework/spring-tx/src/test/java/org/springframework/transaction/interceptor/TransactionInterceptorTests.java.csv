# id;timestamp;commentText;codeText;commentWords;codeWords
TransactionInterceptorTests -> @Override 	protected Object advised(Object target, PlatformTransactionManager ptm, TransactionAttributeSource tas);1356735495;Template method to create an advised object given the_target object and transaction setup._Creates a TransactionInterceptor and applies it.;@Override_	protected Object advised(Object target, PlatformTransactionManager ptm, TransactionAttributeSource tas) {_		TransactionInterceptor ti = new TransactionInterceptor()__		ti.setTransactionManager(ptm)__		assertEquals(ptm, ti.getTransactionManager())__		ti.setTransactionAttributeSource(tas)__		assertEquals(tas, ti.getTransactionAttributeSource())___		ProxyFactory pf = new ProxyFactory(target)__		pf.addAdvice(0, ti)__		return pf.getProxy()__	};template,method,to,create,an,advised,object,given,the,target,object,and,transaction,setup,creates,a,transaction,interceptor,and,applies,it;override,protected,object,advised,object,target,platform,transaction,manager,ptm,transaction,attribute,source,tas,transaction,interceptor,ti,new,transaction,interceptor,ti,set,transaction,manager,ptm,assert,equals,ptm,ti,get,transaction,manager,ti,set,transaction,attribute,source,tas,assert,equals,tas,ti,get,transaction,attribute,source,proxy,factory,pf,new,proxy,factory,target,pf,add,advice,0,ti,return,pf,get,proxy
TransactionInterceptorTests -> @Override 	protected Object advised(Object target, PlatformTransactionManager ptm, TransactionAttributeSource tas);1404485123;Template method to create an advised object given the_target object and transaction setup._Creates a TransactionInterceptor and applies it.;@Override_	protected Object advised(Object target, PlatformTransactionManager ptm, TransactionAttributeSource tas) {_		TransactionInterceptor ti = new TransactionInterceptor()__		ti.setTransactionManager(ptm)__		assertEquals(ptm, ti.getTransactionManager())__		ti.setTransactionAttributeSource(tas)__		assertEquals(tas, ti.getTransactionAttributeSource())___		ProxyFactory pf = new ProxyFactory(target)__		pf.addAdvice(0, ti)__		return pf.getProxy()__	};template,method,to,create,an,advised,object,given,the,target,object,and,transaction,setup,creates,a,transaction,interceptor,and,applies,it;override,protected,object,advised,object,target,platform,transaction,manager,ptm,transaction,attribute,source,tas,transaction,interceptor,ti,new,transaction,interceptor,ti,set,transaction,manager,ptm,assert,equals,ptm,ti,get,transaction,manager,ti,set,transaction,attribute,source,tas,assert,equals,tas,ti,get,transaction,attribute,source,proxy,factory,pf,new,proxy,factory,target,pf,add,advice,0,ti,return,pf,get,proxy
TransactionInterceptorTests -> @Override 	protected Object advised(Object target, PlatformTransactionManager ptm, TransactionAttributeSource tas);1413848647;Template method to create an advised object given the_target object and transaction setup._Creates a TransactionInterceptor and applies it.;@Override_	protected Object advised(Object target, PlatformTransactionManager ptm, TransactionAttributeSource tas) {_		TransactionInterceptor ti = new TransactionInterceptor()__		ti.setTransactionManager(ptm)__		assertEquals(ptm, ti.getTransactionManager())__		ti.setTransactionAttributeSource(tas)__		assertEquals(tas, ti.getTransactionAttributeSource())___		ProxyFactory pf = new ProxyFactory(target)__		pf.addAdvice(0, ti)__		return pf.getProxy()__	};template,method,to,create,an,advised,object,given,the,target,object,and,transaction,setup,creates,a,transaction,interceptor,and,applies,it;override,protected,object,advised,object,target,platform,transaction,manager,ptm,transaction,attribute,source,tas,transaction,interceptor,ti,new,transaction,interceptor,ti,set,transaction,manager,ptm,assert,equals,ptm,ti,get,transaction,manager,ti,set,transaction,attribute,source,tas,assert,equals,tas,ti,get,transaction,attribute,source,proxy,factory,pf,new,proxy,factory,target,pf,add,advice,0,ti,return,pf,get,proxy
TransactionInterceptorTests -> @Override 	protected Object advised(Object target, PlatformTransactionManager ptm, TransactionAttributeSource tas);1418738700;Template method to create an advised object given the_target object and transaction setup._Creates a TransactionInterceptor and applies it.;@Override_	protected Object advised(Object target, PlatformTransactionManager ptm, TransactionAttributeSource tas) {_		TransactionInterceptor ti = new TransactionInterceptor()__		ti.setTransactionManager(ptm)__		assertEquals(ptm, ti.getTransactionManager())__		ti.setTransactionAttributeSource(tas)__		assertEquals(tas, ti.getTransactionAttributeSource())___		ProxyFactory pf = new ProxyFactory(target)__		pf.addAdvice(0, ti)__		return pf.getProxy()__	};template,method,to,create,an,advised,object,given,the,target,object,and,transaction,setup,creates,a,transaction,interceptor,and,applies,it;override,protected,object,advised,object,target,platform,transaction,manager,ptm,transaction,attribute,source,tas,transaction,interceptor,ti,new,transaction,interceptor,ti,set,transaction,manager,ptm,assert,equals,ptm,ti,get,transaction,manager,ti,set,transaction,attribute,source,tas,assert,equals,tas,ti,get,transaction,attribute,source,proxy,factory,pf,new,proxy,factory,target,pf,add,advice,0,ti,return,pf,get,proxy
TransactionInterceptorTests -> @Override 	protected Object advised(Object target, PlatformTransactionManager ptm, TransactionAttributeSource tas);1419784686;Template method to create an advised object given the_target object and transaction setup._Creates a TransactionInterceptor and applies it.;@Override_	protected Object advised(Object target, PlatformTransactionManager ptm, TransactionAttributeSource tas) {_		TransactionInterceptor ti = new TransactionInterceptor()__		ti.setTransactionManager(ptm)__		assertEquals(ptm, ti.getTransactionManager())__		ti.setTransactionAttributeSource(tas)__		assertEquals(tas, ti.getTransactionAttributeSource())___		ProxyFactory pf = new ProxyFactory(target)__		pf.addAdvice(0, ti)__		return pf.getProxy()__	};template,method,to,create,an,advised,object,given,the,target,object,and,transaction,setup,creates,a,transaction,interceptor,and,applies,it;override,protected,object,advised,object,target,platform,transaction,manager,ptm,transaction,attribute,source,tas,transaction,interceptor,ti,new,transaction,interceptor,ti,set,transaction,manager,ptm,assert,equals,ptm,ti,get,transaction,manager,ti,set,transaction,attribute,source,tas,assert,equals,tas,ti,get,transaction,attribute,source,proxy,factory,pf,new,proxy,factory,target,pf,add,advice,0,ti,return,pf,get,proxy
TransactionInterceptorTests -> @Override 	protected Object advised(Object target, PlatformTransactionManager ptm, TransactionAttributeSource tas);1420035703;Template method to create an advised object given the_target object and transaction setup._Creates a TransactionInterceptor and applies it.;@Override_	protected Object advised(Object target, PlatformTransactionManager ptm, TransactionAttributeSource tas) {_		TransactionInterceptor ti = new TransactionInterceptor()__		ti.setTransactionManager(ptm)__		assertEquals(ptm, ti.getTransactionManager())__		ti.setTransactionAttributeSource(tas)__		assertEquals(tas, ti.getTransactionAttributeSource())___		ProxyFactory pf = new ProxyFactory(target)__		pf.addAdvice(0, ti)__		return pf.getProxy()__	};template,method,to,create,an,advised,object,given,the,target,object,and,transaction,setup,creates,a,transaction,interceptor,and,applies,it;override,protected,object,advised,object,target,platform,transaction,manager,ptm,transaction,attribute,source,tas,transaction,interceptor,ti,new,transaction,interceptor,ti,set,transaction,manager,ptm,assert,equals,ptm,ti,get,transaction,manager,ti,set,transaction,attribute,source,tas,assert,equals,tas,ti,get,transaction,attribute,source,proxy,factory,pf,new,proxy,factory,target,pf,add,advice,0,ti,return,pf,get,proxy
TransactionInterceptorTests -> @Override 	protected Object advised(Object target, PlatformTransactionManager ptm, TransactionAttributeSource tas);1432018141;Template method to create an advised object given the_target object and transaction setup._Creates a TransactionInterceptor and applies it.;@Override_	protected Object advised(Object target, PlatformTransactionManager ptm, TransactionAttributeSource tas) {_		TransactionInterceptor ti = new TransactionInterceptor()__		ti.setTransactionManager(ptm)__		assertEquals(ptm, ti.getTransactionManager())__		ti.setTransactionAttributeSource(tas)__		assertEquals(tas, ti.getTransactionAttributeSource())___		ProxyFactory pf = new ProxyFactory(target)__		pf.addAdvice(0, ti)__		return pf.getProxy()__	};template,method,to,create,an,advised,object,given,the,target,object,and,transaction,setup,creates,a,transaction,interceptor,and,applies,it;override,protected,object,advised,object,target,platform,transaction,manager,ptm,transaction,attribute,source,tas,transaction,interceptor,ti,new,transaction,interceptor,ti,set,transaction,manager,ptm,assert,equals,ptm,ti,get,transaction,manager,ti,set,transaction,attribute,source,tas,assert,equals,tas,ti,get,transaction,attribute,source,proxy,factory,pf,new,proxy,factory,target,pf,add,advice,0,ti,return,pf,get,proxy
TransactionInterceptorTests -> @Override 	protected Object advised(Object target, PlatformTransactionManager ptm, TransactionAttributeSource tas);1496242568;Template method to create an advised object given the_target object and transaction setup._Creates a TransactionInterceptor and applies it.;@Override_	protected Object advised(Object target, PlatformTransactionManager ptm, TransactionAttributeSource tas) {_		TransactionInterceptor ti = new TransactionInterceptor()__		ti.setTransactionManager(ptm)__		assertEquals(ptm, ti.getTransactionManager())__		ti.setTransactionAttributeSource(tas)__		assertEquals(tas, ti.getTransactionAttributeSource())___		ProxyFactory pf = new ProxyFactory(target)__		pf.addAdvice(0, ti)__		return pf.getProxy()__	};template,method,to,create,an,advised,object,given,the,target,object,and,transaction,setup,creates,a,transaction,interceptor,and,applies,it;override,protected,object,advised,object,target,platform,transaction,manager,ptm,transaction,attribute,source,tas,transaction,interceptor,ti,new,transaction,interceptor,ti,set,transaction,manager,ptm,assert,equals,ptm,ti,get,transaction,manager,ti,set,transaction,attribute,source,tas,assert,equals,tas,ti,get,transaction,attribute,source,proxy,factory,pf,new,proxy,factory,target,pf,add,advice,0,ti,return,pf,get,proxy
TransactionInterceptorTests -> @Override 	protected Object advised(Object target, PlatformTransactionManager ptm, TransactionAttributeSource tas);1518615840;Template method to create an advised object given the_target object and transaction setup._Creates a TransactionInterceptor and applies it.;@Override_	protected Object advised(Object target, PlatformTransactionManager ptm, TransactionAttributeSource tas) {_		TransactionInterceptor ti = new TransactionInterceptor()__		ti.setTransactionManager(ptm)__		assertEquals(ptm, ti.getTransactionManager())__		ti.setTransactionAttributeSource(tas)__		assertEquals(tas, ti.getTransactionAttributeSource())___		ProxyFactory pf = new ProxyFactory(target)__		pf.addAdvice(0, ti)__		return pf.getProxy()__	};template,method,to,create,an,advised,object,given,the,target,object,and,transaction,setup,creates,a,transaction,interceptor,and,applies,it;override,protected,object,advised,object,target,platform,transaction,manager,ptm,transaction,attribute,source,tas,transaction,interceptor,ti,new,transaction,interceptor,ti,set,transaction,manager,ptm,assert,equals,ptm,ti,get,transaction,manager,ti,set,transaction,attribute,source,tas,assert,equals,tas,ti,get,transaction,attribute,source,proxy,factory,pf,new,proxy,factory,target,pf,add,advice,0,ti,return,pf,get,proxy
TransactionInterceptorTests -> @Test 	public void serializableWithAttributeProperties() throws Exception;1404485123;A TransactionInterceptor should be serializable if its_PlatformTransactionManager is.;@Test_	public void serializableWithAttributeProperties() throws Exception {_		TransactionInterceptor ti = new TransactionInterceptor()__		Properties props = new Properties()__		props.setProperty("methodName", "PROPAGATION_REQUIRED")__		ti.setTransactionAttributes(props)__		PlatformTransactionManager ptm = new SerializableTransactionManager()__		ti.setTransactionManager(ptm)__		ti = (TransactionInterceptor) SerializationTestUtils.serializeAndDeserialize(ti)___		_		assertNotNull(ti.logger)__		assertTrue(ti.getTransactionManager() instanceof SerializableTransactionManager)__		assertNotNull(ti.getTransactionAttributeSource())__	};a,transaction,interceptor,should,be,serializable,if,its,platform,transaction,manager,is;test,public,void,serializable,with,attribute,properties,throws,exception,transaction,interceptor,ti,new,transaction,interceptor,properties,props,new,properties,props,set,property,method,name,ti,set,transaction,attributes,props,platform,transaction,manager,ptm,new,serializable,transaction,manager,ti,set,transaction,manager,ptm,ti,transaction,interceptor,serialization,test,utils,serialize,and,deserialize,ti,assert,not,null,ti,logger,assert,true,ti,get,transaction,manager,instanceof,serializable,transaction,manager,assert,not,null,ti,get,transaction,attribute,source
TransactionInterceptorTests -> @Test 	public void serializableWithAttributeProperties() throws Exception;1413848647;A TransactionInterceptor should be serializable if its_PlatformTransactionManager is.;@Test_	public void serializableWithAttributeProperties() throws Exception {_		TransactionInterceptor ti = new TransactionInterceptor()__		Properties props = new Properties()__		props.setProperty("methodName", "PROPAGATION_REQUIRED")__		ti.setTransactionAttributes(props)__		PlatformTransactionManager ptm = new SerializableTransactionManager()__		ti.setTransactionManager(ptm)__		ti = (TransactionInterceptor) SerializationTestUtils.serializeAndDeserialize(ti)___		_		assertNotNull(ti.logger)__		assertTrue(ti.getTransactionManager() instanceof SerializableTransactionManager)__		assertNotNull(ti.getTransactionAttributeSource())__	};a,transaction,interceptor,should,be,serializable,if,its,platform,transaction,manager,is;test,public,void,serializable,with,attribute,properties,throws,exception,transaction,interceptor,ti,new,transaction,interceptor,properties,props,new,properties,props,set,property,method,name,ti,set,transaction,attributes,props,platform,transaction,manager,ptm,new,serializable,transaction,manager,ti,set,transaction,manager,ptm,ti,transaction,interceptor,serialization,test,utils,serialize,and,deserialize,ti,assert,not,null,ti,logger,assert,true,ti,get,transaction,manager,instanceof,serializable,transaction,manager,assert,not,null,ti,get,transaction,attribute,source
TransactionInterceptorTests -> @Test 	public void serializableWithAttributeProperties() throws Exception;1418738700;A TransactionInterceptor should be serializable if its_PlatformTransactionManager is.;@Test_	public void serializableWithAttributeProperties() throws Exception {_		TransactionInterceptor ti = new TransactionInterceptor()__		Properties props = new Properties()__		props.setProperty("methodName", "PROPAGATION_REQUIRED")__		ti.setTransactionAttributes(props)__		PlatformTransactionManager ptm = new SerializableTransactionManager()__		ti.setTransactionManager(ptm)__		ti = (TransactionInterceptor) SerializationTestUtils.serializeAndDeserialize(ti)___		_		assertNotNull(ti.logger)__		assertTrue(ti.getTransactionManager() instanceof SerializableTransactionManager)__		assertNotNull(ti.getTransactionAttributeSource())__	};a,transaction,interceptor,should,be,serializable,if,its,platform,transaction,manager,is;test,public,void,serializable,with,attribute,properties,throws,exception,transaction,interceptor,ti,new,transaction,interceptor,properties,props,new,properties,props,set,property,method,name,ti,set,transaction,attributes,props,platform,transaction,manager,ptm,new,serializable,transaction,manager,ti,set,transaction,manager,ptm,ti,transaction,interceptor,serialization,test,utils,serialize,and,deserialize,ti,assert,not,null,ti,logger,assert,true,ti,get,transaction,manager,instanceof,serializable,transaction,manager,assert,not,null,ti,get,transaction,attribute,source
TransactionInterceptorTests -> @Test 	public void serializableWithAttributeProperties() throws Exception;1419784686;A TransactionInterceptor should be serializable if its_PlatformTransactionManager is.;@Test_	public void serializableWithAttributeProperties() throws Exception {_		TransactionInterceptor ti = new TransactionInterceptor()__		Properties props = new Properties()__		props.setProperty("methodName", "PROPAGATION_REQUIRED")__		ti.setTransactionAttributes(props)__		PlatformTransactionManager ptm = new SerializableTransactionManager()__		ti.setTransactionManager(ptm)__		ti = (TransactionInterceptor) SerializationTestUtils.serializeAndDeserialize(ti)___		_		assertNotNull(ti.logger)__		assertTrue(ti.getTransactionManager() instanceof SerializableTransactionManager)__		assertNotNull(ti.getTransactionAttributeSource())__	};a,transaction,interceptor,should,be,serializable,if,its,platform,transaction,manager,is;test,public,void,serializable,with,attribute,properties,throws,exception,transaction,interceptor,ti,new,transaction,interceptor,properties,props,new,properties,props,set,property,method,name,ti,set,transaction,attributes,props,platform,transaction,manager,ptm,new,serializable,transaction,manager,ti,set,transaction,manager,ptm,ti,transaction,interceptor,serialization,test,utils,serialize,and,deserialize,ti,assert,not,null,ti,logger,assert,true,ti,get,transaction,manager,instanceof,serializable,transaction,manager,assert,not,null,ti,get,transaction,attribute,source
TransactionInterceptorTests -> @Test 	public void serializableWithAttributeProperties() throws Exception;1420035703;A TransactionInterceptor should be serializable if its_PlatformTransactionManager is.;@Test_	public void serializableWithAttributeProperties() throws Exception {_		TransactionInterceptor ti = new TransactionInterceptor()__		Properties props = new Properties()__		props.setProperty("methodName", "PROPAGATION_REQUIRED")__		ti.setTransactionAttributes(props)__		PlatformTransactionManager ptm = new SerializableTransactionManager()__		ti.setTransactionManager(ptm)__		ti = (TransactionInterceptor) SerializationTestUtils.serializeAndDeserialize(ti)___		_		assertNotNull(ti.logger)__		assertTrue(ti.getTransactionManager() instanceof SerializableTransactionManager)__		assertNotNull(ti.getTransactionAttributeSource())__	};a,transaction,interceptor,should,be,serializable,if,its,platform,transaction,manager,is;test,public,void,serializable,with,attribute,properties,throws,exception,transaction,interceptor,ti,new,transaction,interceptor,properties,props,new,properties,props,set,property,method,name,ti,set,transaction,attributes,props,platform,transaction,manager,ptm,new,serializable,transaction,manager,ti,set,transaction,manager,ptm,ti,transaction,interceptor,serialization,test,utils,serialize,and,deserialize,ti,assert,not,null,ti,logger,assert,true,ti,get,transaction,manager,instanceof,serializable,transaction,manager,assert,not,null,ti,get,transaction,attribute,source
TransactionInterceptorTests -> @Test 	public void serializableWithAttributeProperties() throws Exception;1432018141;A TransactionInterceptor should be serializable if its_PlatformTransactionManager is.;@Test_	public void serializableWithAttributeProperties() throws Exception {_		TransactionInterceptor ti = new TransactionInterceptor()__		Properties props = new Properties()__		props.setProperty("methodName", "PROPAGATION_REQUIRED")__		ti.setTransactionAttributes(props)__		PlatformTransactionManager ptm = new SerializableTransactionManager()__		ti.setTransactionManager(ptm)__		ti = (TransactionInterceptor) SerializationTestUtils.serializeAndDeserialize(ti)___		_		assertNotNull(ti.logger)__		assertTrue(ti.getTransactionManager() instanceof SerializableTransactionManager)__		assertNotNull(ti.getTransactionAttributeSource())__	};a,transaction,interceptor,should,be,serializable,if,its,platform,transaction,manager,is;test,public,void,serializable,with,attribute,properties,throws,exception,transaction,interceptor,ti,new,transaction,interceptor,properties,props,new,properties,props,set,property,method,name,ti,set,transaction,attributes,props,platform,transaction,manager,ptm,new,serializable,transaction,manager,ti,set,transaction,manager,ptm,ti,transaction,interceptor,serialization,test,utils,serialize,and,deserialize,ti,assert,not,null,ti,logger,assert,true,ti,get,transaction,manager,instanceof,serializable,transaction,manager,assert,not,null,ti,get,transaction,attribute,source
TransactionInterceptorTests -> @Test 	public void serializableWithAttributeProperties() throws Exception;1496242568;A TransactionInterceptor should be serializable if its_PlatformTransactionManager is.;@Test_	public void serializableWithAttributeProperties() throws Exception {_		TransactionInterceptor ti = new TransactionInterceptor()__		Properties props = new Properties()__		props.setProperty("methodName", "PROPAGATION_REQUIRED")__		ti.setTransactionAttributes(props)__		PlatformTransactionManager ptm = new SerializableTransactionManager()__		ti.setTransactionManager(ptm)__		ti = (TransactionInterceptor) SerializationTestUtils.serializeAndDeserialize(ti)___		_		assertNotNull(ti.logger)__		assertTrue(ti.getTransactionManager() instanceof SerializableTransactionManager)__		assertNotNull(ti.getTransactionAttributeSource())__	};a,transaction,interceptor,should,be,serializable,if,its,platform,transaction,manager,is;test,public,void,serializable,with,attribute,properties,throws,exception,transaction,interceptor,ti,new,transaction,interceptor,properties,props,new,properties,props,set,property,method,name,ti,set,transaction,attributes,props,platform,transaction,manager,ptm,new,serializable,transaction,manager,ti,set,transaction,manager,ptm,ti,transaction,interceptor,serialization,test,utils,serialize,and,deserialize,ti,assert,not,null,ti,logger,assert,true,ti,get,transaction,manager,instanceof,serializable,transaction,manager,assert,not,null,ti,get,transaction,attribute,source
TransactionInterceptorTests -> @Test 	public void serializableWithAttributeProperties() throws Exception;1518615840;A TransactionInterceptor should be serializable if its_PlatformTransactionManager is.;@Test_	public void serializableWithAttributeProperties() throws Exception {_		TransactionInterceptor ti = new TransactionInterceptor()__		Properties props = new Properties()__		props.setProperty("methodName", "PROPAGATION_REQUIRED")__		ti.setTransactionAttributes(props)__		PlatformTransactionManager ptm = new SerializableTransactionManager()__		ti.setTransactionManager(ptm)__		ti = (TransactionInterceptor) SerializationTestUtils.serializeAndDeserialize(ti)___		_		assertNotNull(ti.logger)__		assertTrue(ti.getTransactionManager() instanceof SerializableTransactionManager)__		assertNotNull(ti.getTransactionAttributeSource())__	};a,transaction,interceptor,should,be,serializable,if,its,platform,transaction,manager,is;test,public,void,serializable,with,attribute,properties,throws,exception,transaction,interceptor,ti,new,transaction,interceptor,properties,props,new,properties,props,set,property,method,name,ti,set,transaction,attributes,props,platform,transaction,manager,ptm,new,serializable,transaction,manager,ti,set,transaction,manager,ptm,ti,transaction,interceptor,serialization,test,utils,serialize,and,deserialize,ti,assert,not,null,ti,logger,assert,true,ti,get,transaction,manager,instanceof,serializable,transaction,manager,assert,not,null,ti,get,transaction,attribute,source
TransactionInterceptorTests -> public void testSerializableWithAttributeProperties() throws Exception;1328020251;A TransactionInterceptor should be serializable if its_PlatformTransactionManager is.;public void testSerializableWithAttributeProperties() throws Exception {_		TransactionInterceptor ti = new TransactionInterceptor()__		Properties props = new Properties()__		props.setProperty("methodName", "PROPAGATION_REQUIRED")__		ti.setTransactionAttributes(props)__		PlatformTransactionManager ptm = new SerializableTransactionManager()__		ti.setTransactionManager(ptm)__		ti = (TransactionInterceptor) SerializationTestUtils.serializeAndDeserialize(ti)___		_		assertNotNull(ti.logger)__		assertTrue(ti.getTransactionManager() instanceof SerializableTransactionManager)__		assertNotNull(ti.getTransactionAttributeSource())__	};a,transaction,interceptor,should,be,serializable,if,its,platform,transaction,manager,is;public,void,test,serializable,with,attribute,properties,throws,exception,transaction,interceptor,ti,new,transaction,interceptor,properties,props,new,properties,props,set,property,method,name,ti,set,transaction,attributes,props,platform,transaction,manager,ptm,new,serializable,transaction,manager,ti,set,transaction,manager,ptm,ti,transaction,interceptor,serialization,test,utils,serialize,and,deserialize,ti,assert,not,null,ti,logger,assert,true,ti,get,transaction,manager,instanceof,serializable,transaction,manager,assert,not,null,ti,get,transaction,attribute,source
TransactionInterceptorTests -> public void testSerializableWithAttributeProperties() throws Exception;1356735495;A TransactionInterceptor should be serializable if its_PlatformTransactionManager is.;public void testSerializableWithAttributeProperties() throws Exception {_		TransactionInterceptor ti = new TransactionInterceptor()__		Properties props = new Properties()__		props.setProperty("methodName", "PROPAGATION_REQUIRED")__		ti.setTransactionAttributes(props)__		PlatformTransactionManager ptm = new SerializableTransactionManager()__		ti.setTransactionManager(ptm)__		ti = (TransactionInterceptor) SerializationTestUtils.serializeAndDeserialize(ti)___		_		assertNotNull(ti.logger)__		assertTrue(ti.getTransactionManager() instanceof SerializableTransactionManager)__		assertNotNull(ti.getTransactionAttributeSource())__	};a,transaction,interceptor,should,be,serializable,if,its,platform,transaction,manager,is;public,void,test,serializable,with,attribute,properties,throws,exception,transaction,interceptor,ti,new,transaction,interceptor,properties,props,new,properties,props,set,property,method,name,ti,set,transaction,attributes,props,platform,transaction,manager,ptm,new,serializable,transaction,manager,ti,set,transaction,manager,ptm,ti,transaction,interceptor,serialization,test,utils,serialize,and,deserialize,ti,assert,not,null,ti,logger,assert,true,ti,get,transaction,manager,instanceof,serializable,transaction,manager,assert,not,null,ti,get,transaction,attribute,source
