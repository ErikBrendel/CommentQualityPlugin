# id;timestamp;commentText;codeText;commentWords;codeWords
CachingMetadataReaderFactory -> public void setCacheLimit(int cacheLimit);1328020251;Specify the maximum number of entries for the MetadataReader cache._Default is 256.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,metadata,reader,cache,default,is,256;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
CachingMetadataReaderFactory -> public void setCacheLimit(int cacheLimit);1355279384;Specify the maximum number of entries for the MetadataReader cache._Default is 256.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,metadata,reader,cache,default,is,256;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
CachingMetadataReaderFactory -> public void setCacheLimit(int cacheLimit);1356735495;Specify the maximum number of entries for the MetadataReader cache._Default is 256.;public void setCacheLimit(int cacheLimit) {_		this.cacheLimit = cacheLimit__	};specify,the,maximum,number,of,entries,for,the,metadata,reader,cache,default,is,256;public,void,set,cache,limit,int,cache,limit,this,cache,limit,cache,limit
CachingMetadataReaderFactory -> public void setCacheLimit(int cacheLimit);1482842304;Specify the maximum number of entries for the MetadataReader cache._<p>Default is 256 for a local cache, whereas a shared cache is_typically unbounded. This method enforces a local resource cache,_even if the {@link ResourceLoader} supports a shared resource cache.;public void setCacheLimit(int cacheLimit) {_		if (cacheLimit <= 0) {_			this.metadataReaderCache = null__		}_		else if (this.metadataReaderCache instanceof LocalResourceCache) {_			((LocalResourceCache) this.metadataReaderCache).setCacheLimit(cacheLimit)__		}_		else {_			this.metadataReaderCache = new LocalResourceCache(cacheLimit)__		}_	};specify,the,maximum,number,of,entries,for,the,metadata,reader,cache,p,default,is,256,for,a,local,cache,whereas,a,shared,cache,is,typically,unbounded,this,method,enforces,a,local,resource,cache,even,if,the,link,resource,loader,supports,a,shared,resource,cache;public,void,set,cache,limit,int,cache,limit,if,cache,limit,0,this,metadata,reader,cache,null,else,if,this,metadata,reader,cache,instanceof,local,resource,cache,local,resource,cache,this,metadata,reader,cache,set,cache,limit,cache,limit,else,this,metadata,reader,cache,new,local,resource,cache,cache,limit
CachingMetadataReaderFactory -> public void setCacheLimit(int cacheLimit);1496837955;Specify the maximum number of entries for the MetadataReader cache._<p>Default is 256 for a local cache, whereas a shared cache is_typically unbounded. This method enforces a local resource cache,_even if the {@link ResourceLoader} supports a shared resource cache.;public void setCacheLimit(int cacheLimit) {_		if (cacheLimit <= 0) {_			this.metadataReaderCache = null__		}_		else if (this.metadataReaderCache instanceof LocalResourceCache) {_			((LocalResourceCache) this.metadataReaderCache).setCacheLimit(cacheLimit)__		}_		else {_			this.metadataReaderCache = new LocalResourceCache(cacheLimit)__		}_	};specify,the,maximum,number,of,entries,for,the,metadata,reader,cache,p,default,is,256,for,a,local,cache,whereas,a,shared,cache,is,typically,unbounded,this,method,enforces,a,local,resource,cache,even,if,the,link,resource,loader,supports,a,shared,resource,cache;public,void,set,cache,limit,int,cache,limit,if,cache,limit,0,this,metadata,reader,cache,null,else,if,this,metadata,reader,cache,instanceof,local,resource,cache,local,resource,cache,this,metadata,reader,cache,set,cache,limit,cache,limit,else,this,metadata,reader,cache,new,local,resource,cache,cache,limit
CachingMetadataReaderFactory -> public void setCacheLimit(int cacheLimit);1498780456;Specify the maximum number of entries for the MetadataReader cache._<p>Default is 256 for a local cache, whereas a shared cache is_typically unbounded. This method enforces a local resource cache,_even if the {@link ResourceLoader} supports a shared resource cache.;public void setCacheLimit(int cacheLimit) {_		if (cacheLimit <= 0) {_			this.metadataReaderCache = null__		}_		else if (this.metadataReaderCache instanceof LocalResourceCache) {_			((LocalResourceCache) this.metadataReaderCache).setCacheLimit(cacheLimit)__		}_		else {_			this.metadataReaderCache = new LocalResourceCache(cacheLimit)__		}_	};specify,the,maximum,number,of,entries,for,the,metadata,reader,cache,p,default,is,256,for,a,local,cache,whereas,a,shared,cache,is,typically,unbounded,this,method,enforces,a,local,resource,cache,even,if,the,link,resource,loader,supports,a,shared,resource,cache;public,void,set,cache,limit,int,cache,limit,if,cache,limit,0,this,metadata,reader,cache,null,else,if,this,metadata,reader,cache,instanceof,local,resource,cache,local,resource,cache,this,metadata,reader,cache,set,cache,limit,cache,limit,else,this,metadata,reader,cache,new,local,resource,cache,cache,limit
CachingMetadataReaderFactory -> public void setCacheLimit(int cacheLimit);1530174524;Specify the maximum number of entries for the MetadataReader cache._<p>Default is 256 for a local cache, whereas a shared cache is_typically unbounded. This method enforces a local resource cache,_even if the {@link ResourceLoader} supports a shared resource cache.;public void setCacheLimit(int cacheLimit) {_		if (cacheLimit <= 0) {_			this.metadataReaderCache = null__		}_		else if (this.metadataReaderCache instanceof LocalResourceCache) {_			((LocalResourceCache) this.metadataReaderCache).setCacheLimit(cacheLimit)__		}_		else {_			this.metadataReaderCache = new LocalResourceCache(cacheLimit)__		}_	};specify,the,maximum,number,of,entries,for,the,metadata,reader,cache,p,default,is,256,for,a,local,cache,whereas,a,shared,cache,is,typically,unbounded,this,method,enforces,a,local,resource,cache,even,if,the,link,resource,loader,supports,a,shared,resource,cache;public,void,set,cache,limit,int,cache,limit,if,cache,limit,0,this,metadata,reader,cache,null,else,if,this,metadata,reader,cache,instanceof,local,resource,cache,local,resource,cache,this,metadata,reader,cache,set,cache,limit,cache,limit,else,this,metadata,reader,cache,new,local,resource,cache,cache,limit
CachingMetadataReaderFactory -> public void setCacheLimit(int cacheLimit);1542882047;Specify the maximum number of entries for the MetadataReader cache._<p>Default is 256 for a local cache, whereas a shared cache is_typically unbounded. This method enforces a local resource cache,_even if the {@link ResourceLoader} supports a shared resource cache.;public void setCacheLimit(int cacheLimit) {_		if (cacheLimit <= 0) {_			this.metadataReaderCache = null__		}_		else if (this.metadataReaderCache instanceof LocalResourceCache) {_			((LocalResourceCache) this.metadataReaderCache).setCacheLimit(cacheLimit)__		}_		else {_			this.metadataReaderCache = new LocalResourceCache(cacheLimit)__		}_	};specify,the,maximum,number,of,entries,for,the,metadata,reader,cache,p,default,is,256,for,a,local,cache,whereas,a,shared,cache,is,typically,unbounded,this,method,enforces,a,local,resource,cache,even,if,the,link,resource,loader,supports,a,shared,resource,cache;public,void,set,cache,limit,int,cache,limit,if,cache,limit,0,this,metadata,reader,cache,null,else,if,this,metadata,reader,cache,instanceof,local,resource,cache,local,resource,cache,this,metadata,reader,cache,set,cache,limit,cache,limit,else,this,metadata,reader,cache,new,local,resource,cache,cache,limit
CachingMetadataReaderFactory -> public void clearCache();1355279384;Clear the entire MetadataReader cache, removing all cached class metadata.;public void clearCache() {_		synchronized (this.metadataReaderCache) {_			this.metadataReaderCache.clear()__		}_	};clear,the,entire,metadata,reader,cache,removing,all,cached,class,metadata;public,void,clear,cache,synchronized,this,metadata,reader,cache,this,metadata,reader,cache,clear
CachingMetadataReaderFactory -> public void clearCache();1356735495;Clear the entire MetadataReader cache, removing all cached class metadata.;public void clearCache() {_		synchronized (this.metadataReaderCache) {_			this.metadataReaderCache.clear()__		}_	};clear,the,entire,metadata,reader,cache,removing,all,cached,class,metadata;public,void,clear,cache,synchronized,this,metadata,reader,cache,this,metadata,reader,cache,clear
CachingMetadataReaderFactory -> public void clearCache();1482842304;Clear the local MetadataReader cache, if any, removing all cached class metadata.;public void clearCache() {_		if (this.metadataReaderCache instanceof LocalResourceCache) {_			synchronized (this.metadataReaderCache) {_				this.metadataReaderCache.clear()__			}_		}_	};clear,the,local,metadata,reader,cache,if,any,removing,all,cached,class,metadata;public,void,clear,cache,if,this,metadata,reader,cache,instanceof,local,resource,cache,synchronized,this,metadata,reader,cache,this,metadata,reader,cache,clear
CachingMetadataReaderFactory -> public void clearCache();1496837955;Clear the local MetadataReader cache, if any, removing all cached class metadata.;public void clearCache() {_		if (this.metadataReaderCache instanceof LocalResourceCache) {_			synchronized (this.metadataReaderCache) {_				this.metadataReaderCache.clear()__			}_		}_	};clear,the,local,metadata,reader,cache,if,any,removing,all,cached,class,metadata;public,void,clear,cache,if,this,metadata,reader,cache,instanceof,local,resource,cache,synchronized,this,metadata,reader,cache,this,metadata,reader,cache,clear
CachingMetadataReaderFactory -> public void clearCache();1498780456;Clear the local MetadataReader cache, if any, removing all cached class metadata.;public void clearCache() {_		if (this.metadataReaderCache instanceof LocalResourceCache) {_			synchronized (this.metadataReaderCache) {_				this.metadataReaderCache.clear()__			}_		}_	};clear,the,local,metadata,reader,cache,if,any,removing,all,cached,class,metadata;public,void,clear,cache,if,this,metadata,reader,cache,instanceof,local,resource,cache,synchronized,this,metadata,reader,cache,this,metadata,reader,cache,clear
CachingMetadataReaderFactory -> public void clearCache();1530174524;Clear the local MetadataReader cache, if any, removing all cached class metadata.;public void clearCache() {_		if (this.metadataReaderCache instanceof LocalResourceCache) {_			synchronized (this.metadataReaderCache) {_				this.metadataReaderCache.clear()__			}_		}_	};clear,the,local,metadata,reader,cache,if,any,removing,all,cached,class,metadata;public,void,clear,cache,if,this,metadata,reader,cache,instanceof,local,resource,cache,synchronized,this,metadata,reader,cache,this,metadata,reader,cache,clear
CachingMetadataReaderFactory -> public void clearCache();1542882047;Clear the local MetadataReader cache, if any, removing all cached class metadata.;public void clearCache() {_		if (this.metadataReaderCache instanceof LocalResourceCache) {_			synchronized (this.metadataReaderCache) {_				this.metadataReaderCache.clear()__			}_		}_		else if (this.metadataReaderCache != null) {_			_			setCacheLimit(DEFAULT_CACHE_LIMIT)__		}_	};clear,the,local,metadata,reader,cache,if,any,removing,all,cached,class,metadata;public,void,clear,cache,if,this,metadata,reader,cache,instanceof,local,resource,cache,synchronized,this,metadata,reader,cache,this,metadata,reader,cache,clear,else,if,this,metadata,reader,cache,null,set,cache,limit
CachingMetadataReaderFactory -> public int getCacheLimit();1328020251;Return the maximum number of entries for the MetadataReader cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,metadata,reader,cache;public,int,get,cache,limit,return,this,cache,limit
CachingMetadataReaderFactory -> public int getCacheLimit();1355279384;Return the maximum number of entries for the MetadataReader cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,metadata,reader,cache;public,int,get,cache,limit,return,this,cache,limit
CachingMetadataReaderFactory -> public int getCacheLimit();1356735495;Return the maximum number of entries for the MetadataReader cache.;public int getCacheLimit() {_		return this.cacheLimit__	};return,the,maximum,number,of,entries,for,the,metadata,reader,cache;public,int,get,cache,limit,return,this,cache,limit
CachingMetadataReaderFactory -> public int getCacheLimit();1482842304;Return the maximum number of entries for the MetadataReader cache.;public int getCacheLimit() {_		if (this.metadataReaderCache instanceof LocalResourceCache) {_			return ((LocalResourceCache) this.metadataReaderCache).getCacheLimit()__		}_		else {_			return (this.metadataReaderCache != null ? Integer.MAX_VALUE : 0)__		}_	};return,the,maximum,number,of,entries,for,the,metadata,reader,cache;public,int,get,cache,limit,if,this,metadata,reader,cache,instanceof,local,resource,cache,return,local,resource,cache,this,metadata,reader,cache,get,cache,limit,else,return,this,metadata,reader,cache,null,integer,0
CachingMetadataReaderFactory -> public int getCacheLimit();1496837955;Return the maximum number of entries for the MetadataReader cache.;public int getCacheLimit() {_		if (this.metadataReaderCache instanceof LocalResourceCache) {_			return ((LocalResourceCache) this.metadataReaderCache).getCacheLimit()__		}_		else {_			return (this.metadataReaderCache != null ? Integer.MAX_VALUE : 0)__		}_	};return,the,maximum,number,of,entries,for,the,metadata,reader,cache;public,int,get,cache,limit,if,this,metadata,reader,cache,instanceof,local,resource,cache,return,local,resource,cache,this,metadata,reader,cache,get,cache,limit,else,return,this,metadata,reader,cache,null,integer,0
CachingMetadataReaderFactory -> public int getCacheLimit();1498780456;Return the maximum number of entries for the MetadataReader cache.;public int getCacheLimit() {_		if (this.metadataReaderCache instanceof LocalResourceCache) {_			return ((LocalResourceCache) this.metadataReaderCache).getCacheLimit()__		}_		else {_			return (this.metadataReaderCache != null ? Integer.MAX_VALUE : 0)__		}_	};return,the,maximum,number,of,entries,for,the,metadata,reader,cache;public,int,get,cache,limit,if,this,metadata,reader,cache,instanceof,local,resource,cache,return,local,resource,cache,this,metadata,reader,cache,get,cache,limit,else,return,this,metadata,reader,cache,null,integer,0
CachingMetadataReaderFactory -> public int getCacheLimit();1530174524;Return the maximum number of entries for the MetadataReader cache.;public int getCacheLimit() {_		if (this.metadataReaderCache instanceof LocalResourceCache) {_			return ((LocalResourceCache) this.metadataReaderCache).getCacheLimit()__		}_		else {_			return (this.metadataReaderCache != null ? Integer.MAX_VALUE : 0)__		}_	};return,the,maximum,number,of,entries,for,the,metadata,reader,cache;public,int,get,cache,limit,if,this,metadata,reader,cache,instanceof,local,resource,cache,return,local,resource,cache,this,metadata,reader,cache,get,cache,limit,else,return,this,metadata,reader,cache,null,integer,0
CachingMetadataReaderFactory -> public int getCacheLimit();1542882047;Return the maximum number of entries for the MetadataReader cache.;public int getCacheLimit() {_		if (this.metadataReaderCache instanceof LocalResourceCache) {_			return ((LocalResourceCache) this.metadataReaderCache).getCacheLimit()__		}_		else {_			return (this.metadataReaderCache != null ? Integer.MAX_VALUE : 0)__		}_	};return,the,maximum,number,of,entries,for,the,metadata,reader,cache;public,int,get,cache,limit,if,this,metadata,reader,cache,instanceof,local,resource,cache,return,local,resource,cache,this,metadata,reader,cache,get,cache,limit,else,return,this,metadata,reader,cache,null,integer,0
CachingMetadataReaderFactory -> public CachingMetadataReaderFactory(@Nullable ResourceLoader resourceLoader);1496837955;Create a new CachingMetadataReaderFactory for the given {@link ResourceLoader},_using a shared resource cache if supported or a local resource cache otherwise._@param resourceLoader the Spring ResourceLoader to use_(also determines the ClassLoader to use)_@see DefaultResourceLoader#getResourceCache;public CachingMetadataReaderFactory(@Nullable ResourceLoader resourceLoader) {_		super(resourceLoader)__		if (resourceLoader instanceof DefaultResourceLoader) {_			this.metadataReaderCache =_					((DefaultResourceLoader) resourceLoader).getResourceCache(MetadataReader.class)__		}_		else {_			setCacheLimit(DEFAULT_CACHE_LIMIT)__		}_	};create,a,new,caching,metadata,reader,factory,for,the,given,link,resource,loader,using,a,shared,resource,cache,if,supported,or,a,local,resource,cache,otherwise,param,resource,loader,the,spring,resource,loader,to,use,also,determines,the,class,loader,to,use,see,default,resource,loader,get,resource,cache;public,caching,metadata,reader,factory,nullable,resource,loader,resource,loader,super,resource,loader,if,resource,loader,instanceof,default,resource,loader,this,metadata,reader,cache,default,resource,loader,resource,loader,get,resource,cache,metadata,reader,class,else,set,cache,limit
CachingMetadataReaderFactory -> public CachingMetadataReaderFactory(@Nullable ResourceLoader resourceLoader);1498780456;Create a new CachingMetadataReaderFactory for the given {@link ResourceLoader},_using a shared resource cache if supported or a local resource cache otherwise._@param resourceLoader the Spring ResourceLoader to use_(also determines the ClassLoader to use)_@see DefaultResourceLoader#getResourceCache;public CachingMetadataReaderFactory(@Nullable ResourceLoader resourceLoader) {_		super(resourceLoader)__		if (resourceLoader instanceof DefaultResourceLoader) {_			this.metadataReaderCache =_					((DefaultResourceLoader) resourceLoader).getResourceCache(MetadataReader.class)__		}_		else {_			setCacheLimit(DEFAULT_CACHE_LIMIT)__		}_	};create,a,new,caching,metadata,reader,factory,for,the,given,link,resource,loader,using,a,shared,resource,cache,if,supported,or,a,local,resource,cache,otherwise,param,resource,loader,the,spring,resource,loader,to,use,also,determines,the,class,loader,to,use,see,default,resource,loader,get,resource,cache;public,caching,metadata,reader,factory,nullable,resource,loader,resource,loader,super,resource,loader,if,resource,loader,instanceof,default,resource,loader,this,metadata,reader,cache,default,resource,loader,resource,loader,get,resource,cache,metadata,reader,class,else,set,cache,limit
CachingMetadataReaderFactory -> public CachingMetadataReaderFactory(@Nullable ResourceLoader resourceLoader);1530174524;Create a new CachingMetadataReaderFactory for the given {@link ResourceLoader},_using a shared resource cache if supported or a local resource cache otherwise._@param resourceLoader the Spring ResourceLoader to use_(also determines the ClassLoader to use)_@see DefaultResourceLoader#getResourceCache;public CachingMetadataReaderFactory(@Nullable ResourceLoader resourceLoader) {_		super(resourceLoader)__		if (resourceLoader instanceof DefaultResourceLoader) {_			this.metadataReaderCache =_					((DefaultResourceLoader) resourceLoader).getResourceCache(MetadataReader.class)__		}_		else {_			setCacheLimit(DEFAULT_CACHE_LIMIT)__		}_	};create,a,new,caching,metadata,reader,factory,for,the,given,link,resource,loader,using,a,shared,resource,cache,if,supported,or,a,local,resource,cache,otherwise,param,resource,loader,the,spring,resource,loader,to,use,also,determines,the,class,loader,to,use,see,default,resource,loader,get,resource,cache;public,caching,metadata,reader,factory,nullable,resource,loader,resource,loader,super,resource,loader,if,resource,loader,instanceof,default,resource,loader,this,metadata,reader,cache,default,resource,loader,resource,loader,get,resource,cache,metadata,reader,class,else,set,cache,limit
CachingMetadataReaderFactory -> public CachingMetadataReaderFactory(@Nullable ResourceLoader resourceLoader);1542882047;Create a new CachingMetadataReaderFactory for the given {@link ResourceLoader},_using a shared resource cache if supported or a local resource cache otherwise._@param resourceLoader the Spring ResourceLoader to use_(also determines the ClassLoader to use)_@see DefaultResourceLoader#getResourceCache;public CachingMetadataReaderFactory(@Nullable ResourceLoader resourceLoader) {_		super(resourceLoader)__		if (resourceLoader instanceof DefaultResourceLoader) {_			this.metadataReaderCache =_					((DefaultResourceLoader) resourceLoader).getResourceCache(MetadataReader.class)__		}_		else {_			setCacheLimit(DEFAULT_CACHE_LIMIT)__		}_	};create,a,new,caching,metadata,reader,factory,for,the,given,link,resource,loader,using,a,shared,resource,cache,if,supported,or,a,local,resource,cache,otherwise,param,resource,loader,the,spring,resource,loader,to,use,also,determines,the,class,loader,to,use,see,default,resource,loader,get,resource,cache;public,caching,metadata,reader,factory,nullable,resource,loader,resource,loader,super,resource,loader,if,resource,loader,instanceof,default,resource,loader,this,metadata,reader,cache,default,resource,loader,resource,loader,get,resource,cache,metadata,reader,class,else,set,cache,limit
CachingMetadataReaderFactory -> public CachingMetadataReaderFactory(ResourceLoader resourceLoader);1328020251;Create a new CachingMetadataReaderFactory for the given resource loader._@param resourceLoader the Spring ResourceLoader to use_(also determines the ClassLoader to use);public CachingMetadataReaderFactory(ResourceLoader resourceLoader) {_		super(resourceLoader)__	};create,a,new,caching,metadata,reader,factory,for,the,given,resource,loader,param,resource,loader,the,spring,resource,loader,to,use,also,determines,the,class,loader,to,use;public,caching,metadata,reader,factory,resource,loader,resource,loader,super,resource,loader
CachingMetadataReaderFactory -> public CachingMetadataReaderFactory(ResourceLoader resourceLoader);1355279384;Create a new CachingMetadataReaderFactory for the given resource loader._@param resourceLoader the Spring ResourceLoader to use_(also determines the ClassLoader to use);public CachingMetadataReaderFactory(ResourceLoader resourceLoader) {_		super(resourceLoader)__	};create,a,new,caching,metadata,reader,factory,for,the,given,resource,loader,param,resource,loader,the,spring,resource,loader,to,use,also,determines,the,class,loader,to,use;public,caching,metadata,reader,factory,resource,loader,resource,loader,super,resource,loader
CachingMetadataReaderFactory -> public CachingMetadataReaderFactory(ResourceLoader resourceLoader);1356735495;Create a new CachingMetadataReaderFactory for the given resource loader._@param resourceLoader the Spring ResourceLoader to use_(also determines the ClassLoader to use);public CachingMetadataReaderFactory(ResourceLoader resourceLoader) {_		super(resourceLoader)__	};create,a,new,caching,metadata,reader,factory,for,the,given,resource,loader,param,resource,loader,the,spring,resource,loader,to,use,also,determines,the,class,loader,to,use;public,caching,metadata,reader,factory,resource,loader,resource,loader,super,resource,loader
CachingMetadataReaderFactory -> public CachingMetadataReaderFactory(ResourceLoader resourceLoader);1482842304;Create a new CachingMetadataReaderFactory for the given {@link ResourceLoader},_using a shared resource cache if supported or a local resource cache otherwise._@param resourceLoader the Spring ResourceLoader to use_(also determines the ClassLoader to use)_@see DefaultResourceLoader#getResourceCache;public CachingMetadataReaderFactory(ResourceLoader resourceLoader) {_		super(resourceLoader)__		if (resourceLoader instanceof DefaultResourceLoader) {_			this.metadataReaderCache =_					((DefaultResourceLoader) resourceLoader).getResourceCache(MetadataReader.class)__		}_		else {_			setCacheLimit(DEFAULT_CACHE_LIMIT)__		}_	};create,a,new,caching,metadata,reader,factory,for,the,given,link,resource,loader,using,a,shared,resource,cache,if,supported,or,a,local,resource,cache,otherwise,param,resource,loader,the,spring,resource,loader,to,use,also,determines,the,class,loader,to,use,see,default,resource,loader,get,resource,cache;public,caching,metadata,reader,factory,resource,loader,resource,loader,super,resource,loader,if,resource,loader,instanceof,default,resource,loader,this,metadata,reader,cache,default,resource,loader,resource,loader,get,resource,cache,metadata,reader,class,else,set,cache,limit
CachingMetadataReaderFactory -> public CachingMetadataReaderFactory(ClassLoader classLoader);1328020251;Create a new CachingMetadataReaderFactory for the given class loader._@param classLoader the ClassLoader to use;public CachingMetadataReaderFactory(ClassLoader classLoader) {_		super(classLoader)__	};create,a,new,caching,metadata,reader,factory,for,the,given,class,loader,param,class,loader,the,class,loader,to,use;public,caching,metadata,reader,factory,class,loader,class,loader,super,class,loader
CachingMetadataReaderFactory -> public CachingMetadataReaderFactory(ClassLoader classLoader);1355279384;Create a new CachingMetadataReaderFactory for the given class loader._@param classLoader the ClassLoader to use;public CachingMetadataReaderFactory(ClassLoader classLoader) {_		super(classLoader)__	};create,a,new,caching,metadata,reader,factory,for,the,given,class,loader,param,class,loader,the,class,loader,to,use;public,caching,metadata,reader,factory,class,loader,class,loader,super,class,loader
CachingMetadataReaderFactory -> public CachingMetadataReaderFactory(ClassLoader classLoader);1356735495;Create a new CachingMetadataReaderFactory for the given class loader._@param classLoader the ClassLoader to use;public CachingMetadataReaderFactory(ClassLoader classLoader) {_		super(classLoader)__	};create,a,new,caching,metadata,reader,factory,for,the,given,class,loader,param,class,loader,the,class,loader,to,use;public,caching,metadata,reader,factory,class,loader,class,loader,super,class,loader
CachingMetadataReaderFactory -> public CachingMetadataReaderFactory(ClassLoader classLoader);1482842304;Create a new CachingMetadataReaderFactory for the given {@link ClassLoader},_using a local resource cache._@param classLoader the ClassLoader to use;public CachingMetadataReaderFactory(ClassLoader classLoader) {_		super(classLoader)__		setCacheLimit(DEFAULT_CACHE_LIMIT)__	};create,a,new,caching,metadata,reader,factory,for,the,given,link,class,loader,using,a,local,resource,cache,param,class,loader,the,class,loader,to,use;public,caching,metadata,reader,factory,class,loader,class,loader,super,class,loader,set,cache,limit
CachingMetadataReaderFactory -> public CachingMetadataReaderFactory();1328020251;Create a new CachingMetadataReaderFactory for the default class loader.;public CachingMetadataReaderFactory() {_		super()__	};create,a,new,caching,metadata,reader,factory,for,the,default,class,loader;public,caching,metadata,reader,factory,super
CachingMetadataReaderFactory -> public CachingMetadataReaderFactory();1355279384;Create a new CachingMetadataReaderFactory for the default class loader.;public CachingMetadataReaderFactory() {_		super()__	};create,a,new,caching,metadata,reader,factory,for,the,default,class,loader;public,caching,metadata,reader,factory,super
CachingMetadataReaderFactory -> public CachingMetadataReaderFactory();1356735495;Create a new CachingMetadataReaderFactory for the default class loader.;public CachingMetadataReaderFactory() {_		super()__	};create,a,new,caching,metadata,reader,factory,for,the,default,class,loader;public,caching,metadata,reader,factory,super
CachingMetadataReaderFactory -> public CachingMetadataReaderFactory();1482842304;Create a new CachingMetadataReaderFactory for the default class loader,_using a local resource cache.;public CachingMetadataReaderFactory() {_		super()__		setCacheLimit(DEFAULT_CACHE_LIMIT)__	};create,a,new,caching,metadata,reader,factory,for,the,default,class,loader,using,a,local,resource,cache;public,caching,metadata,reader,factory,super,set,cache,limit
CachingMetadataReaderFactory -> public CachingMetadataReaderFactory();1496837955;Create a new CachingMetadataReaderFactory for the default class loader,_using a local resource cache.;public CachingMetadataReaderFactory() {_		super()__		setCacheLimit(DEFAULT_CACHE_LIMIT)__	};create,a,new,caching,metadata,reader,factory,for,the,default,class,loader,using,a,local,resource,cache;public,caching,metadata,reader,factory,super,set,cache,limit
CachingMetadataReaderFactory -> public CachingMetadataReaderFactory();1498780456;Create a new CachingMetadataReaderFactory for the default class loader,_using a local resource cache.;public CachingMetadataReaderFactory() {_		super()__		setCacheLimit(DEFAULT_CACHE_LIMIT)__	};create,a,new,caching,metadata,reader,factory,for,the,default,class,loader,using,a,local,resource,cache;public,caching,metadata,reader,factory,super,set,cache,limit
CachingMetadataReaderFactory -> public CachingMetadataReaderFactory();1530174524;Create a new CachingMetadataReaderFactory for the default class loader,_using a local resource cache.;public CachingMetadataReaderFactory() {_		super()__		setCacheLimit(DEFAULT_CACHE_LIMIT)__	};create,a,new,caching,metadata,reader,factory,for,the,default,class,loader,using,a,local,resource,cache;public,caching,metadata,reader,factory,super,set,cache,limit
CachingMetadataReaderFactory -> public CachingMetadataReaderFactory();1542882047;Create a new CachingMetadataReaderFactory for the default class loader,_using a local resource cache.;public CachingMetadataReaderFactory() {_		super()__		setCacheLimit(DEFAULT_CACHE_LIMIT)__	};create,a,new,caching,metadata,reader,factory,for,the,default,class,loader,using,a,local,resource,cache;public,caching,metadata,reader,factory,super,set,cache,limit
CachingMetadataReaderFactory -> public CachingMetadataReaderFactory(@Nullable ClassLoader classLoader);1496837955;Create a new CachingMetadataReaderFactory for the given {@link ClassLoader},_using a local resource cache._@param classLoader the ClassLoader to use;public CachingMetadataReaderFactory(@Nullable ClassLoader classLoader) {_		super(classLoader)__		setCacheLimit(DEFAULT_CACHE_LIMIT)__	};create,a,new,caching,metadata,reader,factory,for,the,given,link,class,loader,using,a,local,resource,cache,param,class,loader,the,class,loader,to,use;public,caching,metadata,reader,factory,nullable,class,loader,class,loader,super,class,loader,set,cache,limit
CachingMetadataReaderFactory -> public CachingMetadataReaderFactory(@Nullable ClassLoader classLoader);1498780456;Create a new CachingMetadataReaderFactory for the given {@link ClassLoader},_using a local resource cache._@param classLoader the ClassLoader to use;public CachingMetadataReaderFactory(@Nullable ClassLoader classLoader) {_		super(classLoader)__		setCacheLimit(DEFAULT_CACHE_LIMIT)__	};create,a,new,caching,metadata,reader,factory,for,the,given,link,class,loader,using,a,local,resource,cache,param,class,loader,the,class,loader,to,use;public,caching,metadata,reader,factory,nullable,class,loader,class,loader,super,class,loader,set,cache,limit
CachingMetadataReaderFactory -> public CachingMetadataReaderFactory(@Nullable ClassLoader classLoader);1530174524;Create a new CachingMetadataReaderFactory for the given {@link ClassLoader},_using a local resource cache._@param classLoader the ClassLoader to use;public CachingMetadataReaderFactory(@Nullable ClassLoader classLoader) {_		super(classLoader)__		setCacheLimit(DEFAULT_CACHE_LIMIT)__	};create,a,new,caching,metadata,reader,factory,for,the,given,link,class,loader,using,a,local,resource,cache,param,class,loader,the,class,loader,to,use;public,caching,metadata,reader,factory,nullable,class,loader,class,loader,super,class,loader,set,cache,limit
CachingMetadataReaderFactory -> public CachingMetadataReaderFactory(@Nullable ClassLoader classLoader);1542882047;Create a new CachingMetadataReaderFactory for the given {@link ClassLoader},_using a local resource cache._@param classLoader the ClassLoader to use;public CachingMetadataReaderFactory(@Nullable ClassLoader classLoader) {_		super(classLoader)__		setCacheLimit(DEFAULT_CACHE_LIMIT)__	};create,a,new,caching,metadata,reader,factory,for,the,given,link,class,loader,using,a,local,resource,cache,param,class,loader,the,class,loader,to,use;public,caching,metadata,reader,factory,nullable,class,loader,class,loader,super,class,loader,set,cache,limit
