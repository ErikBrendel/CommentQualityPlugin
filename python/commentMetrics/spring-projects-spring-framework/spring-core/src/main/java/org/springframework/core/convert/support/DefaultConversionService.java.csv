# id;timestamp;commentText;codeText;commentWords;codeWords
DefaultConversionService -> public static void addCollectionConverters(ConverterRegistry converterRegistry);1446044129;Add collection converters._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService,_e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService_@since 4.2.3;public static void addCollectionConverters(ConverterRegistry converterRegistry) {_		ConversionService conversionService = (ConversionService) converterRegistry___		converterRegistry.addConverter(new ArrayToCollectionConverter(conversionService))__		converterRegistry.addConverter(new CollectionToArrayConverter(conversionService))___		converterRegistry.addConverter(new ArrayToArrayConverter(conversionService))__		converterRegistry.addConverter(new CollectionToCollectionConverter(conversionService))__		converterRegistry.addConverter(new MapToMapConverter(conversionService))___		converterRegistry.addConverter(new ArrayToStringConverter(conversionService))__		converterRegistry.addConverter(new StringToArrayConverter(conversionService))___		converterRegistry.addConverter(new ArrayToObjectConverter(conversionService))__		converterRegistry.addConverter(new ObjectToArrayConverter(conversionService))___		converterRegistry.addConverter(new CollectionToStringConverter(conversionService))__		converterRegistry.addConverter(new StringToCollectionConverter(conversionService))___		converterRegistry.addConverter(new CollectionToObjectConverter(conversionService))__		converterRegistry.addConverter(new ObjectToCollectionConverter(conversionService))___		if (streamAvailable) {_			converterRegistry.addConverter(new StreamConverter(conversionService))__		}_	};add,collection,converters,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service,since,4,2,3;public,static,void,add,collection,converters,converter,registry,converter,registry,conversion,service,conversion,service,conversion,service,converter,registry,converter,registry,add,converter,new,array,to,collection,converter,conversion,service,converter,registry,add,converter,new,collection,to,array,converter,conversion,service,converter,registry,add,converter,new,array,to,array,converter,conversion,service,converter,registry,add,converter,new,collection,to,collection,converter,conversion,service,converter,registry,add,converter,new,map,to,map,converter,conversion,service,converter,registry,add,converter,new,array,to,string,converter,conversion,service,converter,registry,add,converter,new,string,to,array,converter,conversion,service,converter,registry,add,converter,new,array,to,object,converter,conversion,service,converter,registry,add,converter,new,object,to,array,converter,conversion,service,converter,registry,add,converter,new,collection,to,string,converter,conversion,service,converter,registry,add,converter,new,string,to,collection,converter,conversion,service,converter,registry,add,converter,new,collection,to,object,converter,conversion,service,converter,registry,add,converter,new,object,to,collection,converter,conversion,service,if,stream,available,converter,registry,add,converter,new,stream,converter,conversion,service
DefaultConversionService -> public static void addCollectionConverters(ConverterRegistry converterRegistry);1453750406;Add collection converters._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService,_e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService_@since 4.2.3;public static void addCollectionConverters(ConverterRegistry converterRegistry) {_		ConversionService conversionService = (ConversionService) converterRegistry___		converterRegistry.addConverter(new ArrayToCollectionConverter(conversionService))__		converterRegistry.addConverter(new CollectionToArrayConverter(conversionService))___		converterRegistry.addConverter(new ArrayToArrayConverter(conversionService))__		converterRegistry.addConverter(new CollectionToCollectionConverter(conversionService))__		converterRegistry.addConverter(new MapToMapConverter(conversionService))___		converterRegistry.addConverter(new ArrayToStringConverter(conversionService))__		converterRegistry.addConverter(new StringToArrayConverter(conversionService))___		converterRegistry.addConverter(new ArrayToObjectConverter(conversionService))__		converterRegistry.addConverter(new ObjectToArrayConverter(conversionService))___		converterRegistry.addConverter(new CollectionToStringConverter(conversionService))__		converterRegistry.addConverter(new StringToCollectionConverter(conversionService))___		converterRegistry.addConverter(new CollectionToObjectConverter(conversionService))__		converterRegistry.addConverter(new ObjectToCollectionConverter(conversionService))___		if (streamAvailable) {_			converterRegistry.addConverter(new StreamConverter(conversionService))__		}_	};add,collection,converters,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service,since,4,2,3;public,static,void,add,collection,converters,converter,registry,converter,registry,conversion,service,conversion,service,conversion,service,converter,registry,converter,registry,add,converter,new,array,to,collection,converter,conversion,service,converter,registry,add,converter,new,collection,to,array,converter,conversion,service,converter,registry,add,converter,new,array,to,array,converter,conversion,service,converter,registry,add,converter,new,collection,to,collection,converter,conversion,service,converter,registry,add,converter,new,map,to,map,converter,conversion,service,converter,registry,add,converter,new,array,to,string,converter,conversion,service,converter,registry,add,converter,new,string,to,array,converter,conversion,service,converter,registry,add,converter,new,array,to,object,converter,conversion,service,converter,registry,add,converter,new,object,to,array,converter,conversion,service,converter,registry,add,converter,new,collection,to,string,converter,conversion,service,converter,registry,add,converter,new,string,to,collection,converter,conversion,service,converter,registry,add,converter,new,collection,to,object,converter,conversion,service,converter,registry,add,converter,new,object,to,collection,converter,conversion,service,if,stream,available,converter,registry,add,converter,new,stream,converter,conversion,service
DefaultConversionService -> public static void addCollectionConverters(ConverterRegistry converterRegistry);1458144062;Add collection converters._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService,_e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService_@since 4.2.3;public static void addCollectionConverters(ConverterRegistry converterRegistry) {_		ConversionService conversionService = (ConversionService) converterRegistry___		converterRegistry.addConverter(new ArrayToCollectionConverter(conversionService))__		converterRegistry.addConverter(new CollectionToArrayConverter(conversionService))___		converterRegistry.addConverter(new ArrayToArrayConverter(conversionService))__		converterRegistry.addConverter(new CollectionToCollectionConverter(conversionService))__		converterRegistry.addConverter(new MapToMapConverter(conversionService))___		converterRegistry.addConverter(new ArrayToStringConverter(conversionService))__		converterRegistry.addConverter(new StringToArrayConverter(conversionService))___		converterRegistry.addConverter(new ArrayToObjectConverter(conversionService))__		converterRegistry.addConverter(new ObjectToArrayConverter(conversionService))___		converterRegistry.addConverter(new CollectionToStringConverter(conversionService))__		converterRegistry.addConverter(new StringToCollectionConverter(conversionService))___		converterRegistry.addConverter(new CollectionToObjectConverter(conversionService))__		converterRegistry.addConverter(new ObjectToCollectionConverter(conversionService))___		if (streamAvailable) {_			converterRegistry.addConverter(new StreamConverter(conversionService))__		}_	};add,collection,converters,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service,since,4,2,3;public,static,void,add,collection,converters,converter,registry,converter,registry,conversion,service,conversion,service,conversion,service,converter,registry,converter,registry,add,converter,new,array,to,collection,converter,conversion,service,converter,registry,add,converter,new,collection,to,array,converter,conversion,service,converter,registry,add,converter,new,array,to,array,converter,conversion,service,converter,registry,add,converter,new,collection,to,collection,converter,conversion,service,converter,registry,add,converter,new,map,to,map,converter,conversion,service,converter,registry,add,converter,new,array,to,string,converter,conversion,service,converter,registry,add,converter,new,string,to,array,converter,conversion,service,converter,registry,add,converter,new,array,to,object,converter,conversion,service,converter,registry,add,converter,new,object,to,array,converter,conversion,service,converter,registry,add,converter,new,collection,to,string,converter,conversion,service,converter,registry,add,converter,new,string,to,collection,converter,conversion,service,converter,registry,add,converter,new,collection,to,object,converter,conversion,service,converter,registry,add,converter,new,object,to,collection,converter,conversion,service,if,stream,available,converter,registry,add,converter,new,stream,converter,conversion,service
DefaultConversionService -> public static void addCollectionConverters(ConverterRegistry converterRegistry);1467677340;Add collection converters._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService,_e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService_@since 4.2.3;public static void addCollectionConverters(ConverterRegistry converterRegistry) {_		ConversionService conversionService = (ConversionService) converterRegistry___		converterRegistry.addConverter(new ArrayToCollectionConverter(conversionService))__		converterRegistry.addConverter(new CollectionToArrayConverter(conversionService))___		converterRegistry.addConverter(new ArrayToArrayConverter(conversionService))__		converterRegistry.addConverter(new CollectionToCollectionConverter(conversionService))__		converterRegistry.addConverter(new MapToMapConverter(conversionService))___		converterRegistry.addConverter(new ArrayToStringConverter(conversionService))__		converterRegistry.addConverter(new StringToArrayConverter(conversionService))___		converterRegistry.addConverter(new ArrayToObjectConverter(conversionService))__		converterRegistry.addConverter(new ObjectToArrayConverter(conversionService))___		converterRegistry.addConverter(new CollectionToStringConverter(conversionService))__		converterRegistry.addConverter(new StringToCollectionConverter(conversionService))___		converterRegistry.addConverter(new CollectionToObjectConverter(conversionService))__		converterRegistry.addConverter(new ObjectToCollectionConverter(conversionService))___		converterRegistry.addConverter(new StreamConverter(conversionService))__	};add,collection,converters,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service,since,4,2,3;public,static,void,add,collection,converters,converter,registry,converter,registry,conversion,service,conversion,service,conversion,service,converter,registry,converter,registry,add,converter,new,array,to,collection,converter,conversion,service,converter,registry,add,converter,new,collection,to,array,converter,conversion,service,converter,registry,add,converter,new,array,to,array,converter,conversion,service,converter,registry,add,converter,new,collection,to,collection,converter,conversion,service,converter,registry,add,converter,new,map,to,map,converter,conversion,service,converter,registry,add,converter,new,array,to,string,converter,conversion,service,converter,registry,add,converter,new,string,to,array,converter,conversion,service,converter,registry,add,converter,new,array,to,object,converter,conversion,service,converter,registry,add,converter,new,object,to,array,converter,conversion,service,converter,registry,add,converter,new,collection,to,string,converter,conversion,service,converter,registry,add,converter,new,string,to,collection,converter,conversion,service,converter,registry,add,converter,new,collection,to,object,converter,conversion,service,converter,registry,add,converter,new,object,to,collection,converter,conversion,service,converter,registry,add,converter,new,stream,converter,conversion,service
DefaultConversionService -> public static void addCollectionConverters(ConverterRegistry converterRegistry);1472477110;Add collection converters._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService,_e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService_@since 4.2.3;public static void addCollectionConverters(ConverterRegistry converterRegistry) {_		ConversionService conversionService = (ConversionService) converterRegistry___		converterRegistry.addConverter(new ArrayToCollectionConverter(conversionService))__		converterRegistry.addConverter(new CollectionToArrayConverter(conversionService))___		converterRegistry.addConverter(new ArrayToArrayConverter(conversionService))__		converterRegistry.addConverter(new CollectionToCollectionConverter(conversionService))__		converterRegistry.addConverter(new MapToMapConverter(conversionService))___		converterRegistry.addConverter(new ArrayToStringConverter(conversionService))__		converterRegistry.addConverter(new StringToArrayConverter(conversionService))___		converterRegistry.addConverter(new ArrayToObjectConverter(conversionService))__		converterRegistry.addConverter(new ObjectToArrayConverter(conversionService))___		converterRegistry.addConverter(new CollectionToStringConverter(conversionService))__		converterRegistry.addConverter(new StringToCollectionConverter(conversionService))___		converterRegistry.addConverter(new CollectionToObjectConverter(conversionService))__		converterRegistry.addConverter(new ObjectToCollectionConverter(conversionService))___		converterRegistry.addConverter(new StreamConverter(conversionService))__	};add,collection,converters,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service,since,4,2,3;public,static,void,add,collection,converters,converter,registry,converter,registry,conversion,service,conversion,service,conversion,service,converter,registry,converter,registry,add,converter,new,array,to,collection,converter,conversion,service,converter,registry,add,converter,new,collection,to,array,converter,conversion,service,converter,registry,add,converter,new,array,to,array,converter,conversion,service,converter,registry,add,converter,new,collection,to,collection,converter,conversion,service,converter,registry,add,converter,new,map,to,map,converter,conversion,service,converter,registry,add,converter,new,array,to,string,converter,conversion,service,converter,registry,add,converter,new,string,to,array,converter,conversion,service,converter,registry,add,converter,new,array,to,object,converter,conversion,service,converter,registry,add,converter,new,object,to,array,converter,conversion,service,converter,registry,add,converter,new,collection,to,string,converter,conversion,service,converter,registry,add,converter,new,string,to,collection,converter,conversion,service,converter,registry,add,converter,new,collection,to,object,converter,conversion,service,converter,registry,add,converter,new,object,to,collection,converter,conversion,service,converter,registry,add,converter,new,stream,converter,conversion,service
DefaultConversionService -> public static void addCollectionConverters(ConverterRegistry converterRegistry);1479822903;Add collection converters._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService,_e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService_@since 4.2.3;public static void addCollectionConverters(ConverterRegistry converterRegistry) {_		ConversionService conversionService = (ConversionService) converterRegistry___		converterRegistry.addConverter(new ArrayToCollectionConverter(conversionService))__		converterRegistry.addConverter(new CollectionToArrayConverter(conversionService))___		converterRegistry.addConverter(new ArrayToArrayConverter(conversionService))__		converterRegistry.addConverter(new CollectionToCollectionConverter(conversionService))__		converterRegistry.addConverter(new MapToMapConverter(conversionService))___		converterRegistry.addConverter(new ArrayToStringConverter(conversionService))__		converterRegistry.addConverter(new StringToArrayConverter(conversionService))___		converterRegistry.addConverter(new ArrayToObjectConverter(conversionService))__		converterRegistry.addConverter(new ObjectToArrayConverter(conversionService))___		converterRegistry.addConverter(new CollectionToStringConverter(conversionService))__		converterRegistry.addConverter(new StringToCollectionConverter(conversionService))___		converterRegistry.addConverter(new CollectionToObjectConverter(conversionService))__		converterRegistry.addConverter(new ObjectToCollectionConverter(conversionService))___		converterRegistry.addConverter(new StreamConverter(conversionService))__	};add,collection,converters,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service,since,4,2,3;public,static,void,add,collection,converters,converter,registry,converter,registry,conversion,service,conversion,service,conversion,service,converter,registry,converter,registry,add,converter,new,array,to,collection,converter,conversion,service,converter,registry,add,converter,new,collection,to,array,converter,conversion,service,converter,registry,add,converter,new,array,to,array,converter,conversion,service,converter,registry,add,converter,new,collection,to,collection,converter,conversion,service,converter,registry,add,converter,new,map,to,map,converter,conversion,service,converter,registry,add,converter,new,array,to,string,converter,conversion,service,converter,registry,add,converter,new,string,to,array,converter,conversion,service,converter,registry,add,converter,new,array,to,object,converter,conversion,service,converter,registry,add,converter,new,object,to,array,converter,conversion,service,converter,registry,add,converter,new,collection,to,string,converter,conversion,service,converter,registry,add,converter,new,string,to,collection,converter,conversion,service,converter,registry,add,converter,new,collection,to,object,converter,conversion,service,converter,registry,add,converter,new,object,to,collection,converter,conversion,service,converter,registry,add,converter,new,stream,converter,conversion,service
DefaultConversionService -> public static void addCollectionConverters(ConverterRegistry converterRegistry);1479997757;Add collection converters._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService,_e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService_@since 4.2.3;public static void addCollectionConverters(ConverterRegistry converterRegistry) {_		ConversionService conversionService = (ConversionService) converterRegistry___		converterRegistry.addConverter(new ArrayToCollectionConverter(conversionService))__		converterRegistry.addConverter(new CollectionToArrayConverter(conversionService))___		converterRegistry.addConverter(new ArrayToArrayConverter(conversionService))__		converterRegistry.addConverter(new CollectionToCollectionConverter(conversionService))__		converterRegistry.addConverter(new MapToMapConverter(conversionService))___		converterRegistry.addConverter(new ArrayToStringConverter(conversionService))__		converterRegistry.addConverter(new StringToArrayConverter(conversionService))___		converterRegistry.addConverter(new ArrayToObjectConverter(conversionService))__		converterRegistry.addConverter(new ObjectToArrayConverter(conversionService))___		converterRegistry.addConverter(new CollectionToStringConverter(conversionService))__		converterRegistry.addConverter(new StringToCollectionConverter(conversionService))___		converterRegistry.addConverter(new CollectionToObjectConverter(conversionService))__		converterRegistry.addConverter(new ObjectToCollectionConverter(conversionService))___		converterRegistry.addConverter(new StreamConverter(conversionService))__	};add,collection,converters,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service,since,4,2,3;public,static,void,add,collection,converters,converter,registry,converter,registry,conversion,service,conversion,service,conversion,service,converter,registry,converter,registry,add,converter,new,array,to,collection,converter,conversion,service,converter,registry,add,converter,new,collection,to,array,converter,conversion,service,converter,registry,add,converter,new,array,to,array,converter,conversion,service,converter,registry,add,converter,new,collection,to,collection,converter,conversion,service,converter,registry,add,converter,new,map,to,map,converter,conversion,service,converter,registry,add,converter,new,array,to,string,converter,conversion,service,converter,registry,add,converter,new,string,to,array,converter,conversion,service,converter,registry,add,converter,new,array,to,object,converter,conversion,service,converter,registry,add,converter,new,object,to,array,converter,conversion,service,converter,registry,add,converter,new,collection,to,string,converter,conversion,service,converter,registry,add,converter,new,string,to,collection,converter,conversion,service,converter,registry,add,converter,new,collection,to,object,converter,conversion,service,converter,registry,add,converter,new,object,to,collection,converter,conversion,service,converter,registry,add,converter,new,stream,converter,conversion,service
DefaultConversionService -> public static void addCollectionConverters(ConverterRegistry converterRegistry);1498780456;Add collection converters._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService,_e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService_@since 4.2.3;public static void addCollectionConverters(ConverterRegistry converterRegistry) {_		ConversionService conversionService = (ConversionService) converterRegistry___		converterRegistry.addConverter(new ArrayToCollectionConverter(conversionService))__		converterRegistry.addConverter(new CollectionToArrayConverter(conversionService))___		converterRegistry.addConverter(new ArrayToArrayConverter(conversionService))__		converterRegistry.addConverter(new CollectionToCollectionConverter(conversionService))__		converterRegistry.addConverter(new MapToMapConverter(conversionService))___		converterRegistry.addConverter(new ArrayToStringConverter(conversionService))__		converterRegistry.addConverter(new StringToArrayConverter(conversionService))___		converterRegistry.addConverter(new ArrayToObjectConverter(conversionService))__		converterRegistry.addConverter(new ObjectToArrayConverter(conversionService))___		converterRegistry.addConverter(new CollectionToStringConverter(conversionService))__		converterRegistry.addConverter(new StringToCollectionConverter(conversionService))___		converterRegistry.addConverter(new CollectionToObjectConverter(conversionService))__		converterRegistry.addConverter(new ObjectToCollectionConverter(conversionService))___		converterRegistry.addConverter(new StreamConverter(conversionService))__	};add,collection,converters,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service,since,4,2,3;public,static,void,add,collection,converters,converter,registry,converter,registry,conversion,service,conversion,service,conversion,service,converter,registry,converter,registry,add,converter,new,array,to,collection,converter,conversion,service,converter,registry,add,converter,new,collection,to,array,converter,conversion,service,converter,registry,add,converter,new,array,to,array,converter,conversion,service,converter,registry,add,converter,new,collection,to,collection,converter,conversion,service,converter,registry,add,converter,new,map,to,map,converter,conversion,service,converter,registry,add,converter,new,array,to,string,converter,conversion,service,converter,registry,add,converter,new,string,to,array,converter,conversion,service,converter,registry,add,converter,new,array,to,object,converter,conversion,service,converter,registry,add,converter,new,object,to,array,converter,conversion,service,converter,registry,add,converter,new,collection,to,string,converter,conversion,service,converter,registry,add,converter,new,string,to,collection,converter,conversion,service,converter,registry,add,converter,new,collection,to,object,converter,conversion,service,converter,registry,add,converter,new,object,to,collection,converter,conversion,service,converter,registry,add,converter,new,stream,converter,conversion,service
DefaultConversionService -> public static void addCollectionConverters(ConverterRegistry converterRegistry);1511268177;Add collection converters._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService,_e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService_@since 4.2.3;public static void addCollectionConverters(ConverterRegistry converterRegistry) {_		ConversionService conversionService = (ConversionService) converterRegistry___		converterRegistry.addConverter(new ArrayToCollectionConverter(conversionService))__		converterRegistry.addConverter(new CollectionToArrayConverter(conversionService))___		converterRegistry.addConverter(new ArrayToArrayConverter(conversionService))__		converterRegistry.addConverter(new CollectionToCollectionConverter(conversionService))__		converterRegistry.addConverter(new MapToMapConverter(conversionService))___		converterRegistry.addConverter(new ArrayToStringConverter(conversionService))__		converterRegistry.addConverter(new StringToArrayConverter(conversionService))___		converterRegistry.addConverter(new ArrayToObjectConverter(conversionService))__		converterRegistry.addConverter(new ObjectToArrayConverter(conversionService))___		converterRegistry.addConverter(new CollectionToStringConverter(conversionService))__		converterRegistry.addConverter(new StringToCollectionConverter(conversionService))___		converterRegistry.addConverter(new CollectionToObjectConverter(conversionService))__		converterRegistry.addConverter(new ObjectToCollectionConverter(conversionService))___		converterRegistry.addConverter(new StreamConverter(conversionService))__	};add,collection,converters,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service,since,4,2,3;public,static,void,add,collection,converters,converter,registry,converter,registry,conversion,service,conversion,service,conversion,service,converter,registry,converter,registry,add,converter,new,array,to,collection,converter,conversion,service,converter,registry,add,converter,new,collection,to,array,converter,conversion,service,converter,registry,add,converter,new,array,to,array,converter,conversion,service,converter,registry,add,converter,new,collection,to,collection,converter,conversion,service,converter,registry,add,converter,new,map,to,map,converter,conversion,service,converter,registry,add,converter,new,array,to,string,converter,conversion,service,converter,registry,add,converter,new,string,to,array,converter,conversion,service,converter,registry,add,converter,new,array,to,object,converter,conversion,service,converter,registry,add,converter,new,object,to,array,converter,conversion,service,converter,registry,add,converter,new,collection,to,string,converter,conversion,service,converter,registry,add,converter,new,string,to,collection,converter,conversion,service,converter,registry,add,converter,new,collection,to,object,converter,conversion,service,converter,registry,add,converter,new,object,to,collection,converter,conversion,service,converter,registry,add,converter,new,stream,converter,conversion,service
DefaultConversionService -> public static void addCollectionConverters(ConverterRegistry converterRegistry);1511278448;Add common collection converters._@param converterRegistry the registry of converters to add to_(must also be castable to ConversionService, e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService_@since 4.2.3;public static void addCollectionConverters(ConverterRegistry converterRegistry) {_		ConversionService conversionService = (ConversionService) converterRegistry___		converterRegistry.addConverter(new ArrayToCollectionConverter(conversionService))__		converterRegistry.addConverter(new CollectionToArrayConverter(conversionService))___		converterRegistry.addConverter(new ArrayToArrayConverter(conversionService))__		converterRegistry.addConverter(new CollectionToCollectionConverter(conversionService))__		converterRegistry.addConverter(new MapToMapConverter(conversionService))___		converterRegistry.addConverter(new ArrayToStringConverter(conversionService))__		converterRegistry.addConverter(new StringToArrayConverter(conversionService))___		converterRegistry.addConverter(new ArrayToObjectConverter(conversionService))__		converterRegistry.addConverter(new ObjectToArrayConverter(conversionService))___		converterRegistry.addConverter(new CollectionToStringConverter(conversionService))__		converterRegistry.addConverter(new StringToCollectionConverter(conversionService))___		converterRegistry.addConverter(new CollectionToObjectConverter(conversionService))__		converterRegistry.addConverter(new ObjectToCollectionConverter(conversionService))___		converterRegistry.addConverter(new StreamConverter(conversionService))__	};add,common,collection,converters,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service,since,4,2,3;public,static,void,add,collection,converters,converter,registry,converter,registry,conversion,service,conversion,service,conversion,service,converter,registry,converter,registry,add,converter,new,array,to,collection,converter,conversion,service,converter,registry,add,converter,new,collection,to,array,converter,conversion,service,converter,registry,add,converter,new,array,to,array,converter,conversion,service,converter,registry,add,converter,new,collection,to,collection,converter,conversion,service,converter,registry,add,converter,new,map,to,map,converter,conversion,service,converter,registry,add,converter,new,array,to,string,converter,conversion,service,converter,registry,add,converter,new,string,to,array,converter,conversion,service,converter,registry,add,converter,new,array,to,object,converter,conversion,service,converter,registry,add,converter,new,object,to,array,converter,conversion,service,converter,registry,add,converter,new,collection,to,string,converter,conversion,service,converter,registry,add,converter,new,string,to,collection,converter,conversion,service,converter,registry,add,converter,new,collection,to,object,converter,conversion,service,converter,registry,add,converter,new,object,to,collection,converter,conversion,service,converter,registry,add,converter,new,stream,converter,conversion,service
DefaultConversionService -> public static void addDefaultConverters(ConverterRegistry converterRegistry);1328020251;Add converters appropriate for most environments._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService)_@throws ClassCastException if the converterRegistry could not be cast to a ConversionService;public static void addDefaultConverters(ConverterRegistry converterRegistry) {_		addScalarConverters(converterRegistry)__		addCollectionConverters(converterRegistry)__		addFallbackConverters(converterRegistry)__	};add,converters,appropriate,for,most,environments,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,throws,class,cast,exception,if,the,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,default,converters,converter,registry,converter,registry,add,scalar,converters,converter,registry,add,collection,converters,converter,registry,add,fallback,converters,converter,registry
DefaultConversionService -> public static void addDefaultConverters(ConverterRegistry converterRegistry);1350078439;Add converters appropriate for most environments._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService)_@throws ClassCastException if the converterRegistry could not be cast to a ConversionService;public static void addDefaultConverters(ConverterRegistry converterRegistry) {_		addScalarConverters(converterRegistry)__		addCollectionConverters(converterRegistry)__		addFallbackConverters(converterRegistry)__	};add,converters,appropriate,for,most,environments,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,throws,class,cast,exception,if,the,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,default,converters,converter,registry,converter,registry,add,scalar,converters,converter,registry,add,collection,converters,converter,registry,add,fallback,converters,converter,registry
DefaultConversionService -> public static void addDefaultConverters(ConverterRegistry converterRegistry);1350078439;Add converters appropriate for most environments._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService)_@throws ClassCastException if the converterRegistry could not be cast to a ConversionService;public static void addDefaultConverters(ConverterRegistry converterRegistry) {_		addScalarConverters(converterRegistry)__		addCollectionConverters(converterRegistry)__		addFallbackConverters(converterRegistry)__	};add,converters,appropriate,for,most,environments,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,throws,class,cast,exception,if,the,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,default,converters,converter,registry,converter,registry,add,scalar,converters,converter,registry,add,collection,converters,converter,registry,add,fallback,converters,converter,registry
DefaultConversionService -> public static void addDefaultConverters(ConverterRegistry converterRegistry);1351584957;Add converters appropriate for most environments._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService)_@throws ClassCastException if the converterRegistry could not be cast to a ConversionService;public static void addDefaultConverters(ConverterRegistry converterRegistry) {_		addScalarConverters(converterRegistry)__		addCollectionConverters(converterRegistry)__		addFallbackConverters(converterRegistry)__	};add,converters,appropriate,for,most,environments,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,throws,class,cast,exception,if,the,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,default,converters,converter,registry,converter,registry,add,scalar,converters,converter,registry,add,collection,converters,converter,registry,add,fallback,converters,converter,registry
DefaultConversionService -> public static void addDefaultConverters(ConverterRegistry converterRegistry);1372946100;Add converters appropriate for most environments._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService)_@throws ClassCastException if the converterRegistry could not be cast to a ConversionService;public static void addDefaultConverters(ConverterRegistry converterRegistry) {_		addScalarConverters(converterRegistry)__		addCollectionConverters(converterRegistry)__		addBinaryConverters(converterRegistry)__		addFallbackConverters(converterRegistry)__	};add,converters,appropriate,for,most,environments,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,throws,class,cast,exception,if,the,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,default,converters,converter,registry,converter,registry,add,scalar,converters,converter,registry,add,collection,converters,converter,registry,add,binary,converters,converter,registry,add,fallback,converters,converter,registry
DefaultConversionService -> public static void addDefaultConverters(ConverterRegistry converterRegistry);1380921248;Add converters appropriate for most environments._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService,_e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService;public static void addDefaultConverters(ConverterRegistry converterRegistry) {_		addScalarConverters(converterRegistry)__		addCollectionConverters(converterRegistry)___		converterRegistry.addConverter(new ByteBufferConverter((ConversionService) converterRegistry))__		if (zoneIdAvailable) {_			ZoneIdConverterRegistrar.registerZoneIdConverters(converterRegistry)__		}__		converterRegistry.addConverter(new ObjectToObjectConverter())__		converterRegistry.addConverter(new IdToEntityConverter((ConversionService) converterRegistry))__		converterRegistry.addConverter(new FallbackObjectToStringConverter())__	};add,converters,appropriate,for,most,environments,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,default,converters,converter,registry,converter,registry,add,scalar,converters,converter,registry,add,collection,converters,converter,registry,converter,registry,add,converter,new,byte,buffer,converter,conversion,service,converter,registry,if,zone,id,available,zone,id,converter,registrar,register,zone,id,converters,converter,registry,converter,registry,add,converter,new,object,to,object,converter,converter,registry,add,converter,new,id,to,entity,converter,conversion,service,converter,registry,converter,registry,add,converter,new,fallback,object,to,string,converter
DefaultConversionService -> public static void addDefaultConverters(ConverterRegistry converterRegistry);1388426916;Add converters appropriate for most environments._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService,_e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService;public static void addDefaultConverters(ConverterRegistry converterRegistry) {_		addScalarConverters(converterRegistry)__		addCollectionConverters(converterRegistry)___		converterRegistry.addConverter(new ByteBufferConverter((ConversionService) converterRegistry))__		if (jsr310Available) {_			Jsr310ConverterRegistrar.registerZoneIdConverters(converterRegistry)__		}__		converterRegistry.addConverter(new ObjectToObjectConverter())__		converterRegistry.addConverter(new IdToEntityConverter((ConversionService) converterRegistry))__		converterRegistry.addConverter(new FallbackObjectToStringConverter())__	};add,converters,appropriate,for,most,environments,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,default,converters,converter,registry,converter,registry,add,scalar,converters,converter,registry,add,collection,converters,converter,registry,converter,registry,add,converter,new,byte,buffer,converter,conversion,service,converter,registry,if,jsr310available,jsr310converter,registrar,register,zone,id,converters,converter,registry,converter,registry,add,converter,new,object,to,object,converter,converter,registry,add,converter,new,id,to,entity,converter,conversion,service,converter,registry,converter,registry,add,converter,new,fallback,object,to,string,converter
DefaultConversionService -> public static void addDefaultConverters(ConverterRegistry converterRegistry);1402942616;Add converters appropriate for most environments._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService,_e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService;public static void addDefaultConverters(ConverterRegistry converterRegistry) {_		addScalarConverters(converterRegistry)__		addCollectionConverters(converterRegistry)___		converterRegistry.addConverter(new ByteBufferConverter((ConversionService) converterRegistry))__		if (jsr310Available) {_			Jsr310ConverterRegistrar.registerZoneIdConverters(converterRegistry)__		}__		converterRegistry.addConverter(new ObjectToObjectConverter())__		converterRegistry.addConverter(new IdToEntityConverter((ConversionService) converterRegistry))__		converterRegistry.addConverter(new FallbackObjectToStringConverter())__		if (javaUtilOptionalClassAvailable) {_			converterRegistry.addConverter(new ObjectToOptionalConverter((ConversionService) converterRegistry))__		}_	};add,converters,appropriate,for,most,environments,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,default,converters,converter,registry,converter,registry,add,scalar,converters,converter,registry,add,collection,converters,converter,registry,converter,registry,add,converter,new,byte,buffer,converter,conversion,service,converter,registry,if,jsr310available,jsr310converter,registrar,register,zone,id,converters,converter,registry,converter,registry,add,converter,new,object,to,object,converter,converter,registry,add,converter,new,id,to,entity,converter,conversion,service,converter,registry,converter,registry,add,converter,new,fallback,object,to,string,converter,if,java,util,optional,class,available,converter,registry,add,converter,new,object,to,optional,converter,conversion,service,converter,registry
DefaultConversionService -> public static void addDefaultConverters(ConverterRegistry converterRegistry);1424769447;Add converters appropriate for most environments._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService,_e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService;public static void addDefaultConverters(ConverterRegistry converterRegistry) {_		addScalarConverters(converterRegistry)__		addCollectionConverters(converterRegistry)___		converterRegistry.addConverter(new ByteBufferConverter((ConversionService) converterRegistry))__		if (jsr310Available) {_			Jsr310ConverterRegistrar.registerZoneIdConverters(converterRegistry)__		}__		converterRegistry.addConverter(new ObjectToObjectConverter())__		converterRegistry.addConverter(new IdToEntityConverter((ConversionService) converterRegistry))__		converterRegistry.addConverter(new FallbackObjectToStringConverter())__		if (javaUtilOptionalClassAvailable) {_			converterRegistry.addConverter(new ObjectToOptionalConverter((ConversionService) converterRegistry))__		}_	};add,converters,appropriate,for,most,environments,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,default,converters,converter,registry,converter,registry,add,scalar,converters,converter,registry,add,collection,converters,converter,registry,converter,registry,add,converter,new,byte,buffer,converter,conversion,service,converter,registry,if,jsr310available,jsr310converter,registrar,register,zone,id,converters,converter,registry,converter,registry,add,converter,new,object,to,object,converter,converter,registry,add,converter,new,id,to,entity,converter,conversion,service,converter,registry,converter,registry,add,converter,new,fallback,object,to,string,converter,if,java,util,optional,class,available,converter,registry,add,converter,new,object,to,optional,converter,conversion,service,converter,registry
DefaultConversionService -> public static void addDefaultConverters(ConverterRegistry converterRegistry);1431696237;Add converters appropriate for most environments._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService,_e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService;public static void addDefaultConverters(ConverterRegistry converterRegistry) {_		addScalarConverters(converterRegistry)__		addCollectionConverters(converterRegistry)___		converterRegistry.addConverter(new ByteBufferConverter((ConversionService) converterRegistry))__		if (jsr310Available) {_			Jsr310ConverterRegistrar.registerJsr310Converters(converterRegistry)__		}__		converterRegistry.addConverter(new ObjectToObjectConverter())__		converterRegistry.addConverter(new IdToEntityConverter((ConversionService) converterRegistry))__		converterRegistry.addConverter(new FallbackObjectToStringConverter())__		if (javaUtilOptionalClassAvailable) {_			converterRegistry.addConverter(new ObjectToOptionalConverter((ConversionService) converterRegistry))__		}_	};add,converters,appropriate,for,most,environments,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,default,converters,converter,registry,converter,registry,add,scalar,converters,converter,registry,add,collection,converters,converter,registry,converter,registry,add,converter,new,byte,buffer,converter,conversion,service,converter,registry,if,jsr310available,jsr310converter,registrar,register,jsr310converters,converter,registry,converter,registry,add,converter,new,object,to,object,converter,converter,registry,add,converter,new,id,to,entity,converter,conversion,service,converter,registry,converter,registry,add,converter,new,fallback,object,to,string,converter,if,java,util,optional,class,available,converter,registry,add,converter,new,object,to,optional,converter,conversion,service,converter,registry
DefaultConversionService -> public static void addDefaultConverters(ConverterRegistry converterRegistry);1446044129;Add converters appropriate for most environments._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService,_e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService;public static void addDefaultConverters(ConverterRegistry converterRegistry) {_		addScalarConverters(converterRegistry)__		addCollectionConverters(converterRegistry)___		converterRegistry.addConverter(new ByteBufferConverter((ConversionService) converterRegistry))__		if (jsr310Available) {_			Jsr310ConverterRegistrar.registerJsr310Converters(converterRegistry)__		}__		converterRegistry.addConverter(new ObjectToObjectConverter())__		converterRegistry.addConverter(new IdToEntityConverter((ConversionService) converterRegistry))__		converterRegistry.addConverter(new FallbackObjectToStringConverter())__		if (javaUtilOptionalClassAvailable) {_			converterRegistry.addConverter(new ObjectToOptionalConverter((ConversionService) converterRegistry))__		}_	};add,converters,appropriate,for,most,environments,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,default,converters,converter,registry,converter,registry,add,scalar,converters,converter,registry,add,collection,converters,converter,registry,converter,registry,add,converter,new,byte,buffer,converter,conversion,service,converter,registry,if,jsr310available,jsr310converter,registrar,register,jsr310converters,converter,registry,converter,registry,add,converter,new,object,to,object,converter,converter,registry,add,converter,new,id,to,entity,converter,conversion,service,converter,registry,converter,registry,add,converter,new,fallback,object,to,string,converter,if,java,util,optional,class,available,converter,registry,add,converter,new,object,to,optional,converter,conversion,service,converter,registry
DefaultConversionService -> public static void addDefaultConverters(ConverterRegistry converterRegistry);1453750406;Add converters appropriate for most environments._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService,_e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService;public static void addDefaultConverters(ConverterRegistry converterRegistry) {_		addScalarConverters(converterRegistry)__		addCollectionConverters(converterRegistry)___		converterRegistry.addConverter(new ByteBufferConverter((ConversionService) converterRegistry))__		if (jsr310Available) {_			Jsr310ConverterRegistrar.registerJsr310Converters(converterRegistry)__		}__		converterRegistry.addConverter(new ObjectToObjectConverter())__		converterRegistry.addConverter(new IdToEntityConverter((ConversionService) converterRegistry))__		converterRegistry.addConverter(new FallbackObjectToStringConverter())__		if (javaUtilOptionalClassAvailable) {_			converterRegistry.addConverter(new ObjectToOptionalConverter((ConversionService) converterRegistry))__		}_	};add,converters,appropriate,for,most,environments,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,default,converters,converter,registry,converter,registry,add,scalar,converters,converter,registry,add,collection,converters,converter,registry,converter,registry,add,converter,new,byte,buffer,converter,conversion,service,converter,registry,if,jsr310available,jsr310converter,registrar,register,jsr310converters,converter,registry,converter,registry,add,converter,new,object,to,object,converter,converter,registry,add,converter,new,id,to,entity,converter,conversion,service,converter,registry,converter,registry,add,converter,new,fallback,object,to,string,converter,if,java,util,optional,class,available,converter,registry,add,converter,new,object,to,optional,converter,conversion,service,converter,registry
DefaultConversionService -> public static void addDefaultConverters(ConverterRegistry converterRegistry);1458144062;Add converters appropriate for most environments._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService,_e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService;public static void addDefaultConverters(ConverterRegistry converterRegistry) {_		addScalarConverters(converterRegistry)__		addCollectionConverters(converterRegistry)___		converterRegistry.addConverter(new ByteBufferConverter((ConversionService) converterRegistry))__		if (jsr310Available) {_			Jsr310ConverterRegistrar.registerJsr310Converters(converterRegistry)__		}__		converterRegistry.addConverter(new ObjectToObjectConverter())__		converterRegistry.addConverter(new IdToEntityConverter((ConversionService) converterRegistry))__		converterRegistry.addConverter(new FallbackObjectToStringConverter())__		if (javaUtilOptionalClassAvailable) {_			converterRegistry.addConverter(new ObjectToOptionalConverter((ConversionService) converterRegistry))__		}_	};add,converters,appropriate,for,most,environments,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,default,converters,converter,registry,converter,registry,add,scalar,converters,converter,registry,add,collection,converters,converter,registry,converter,registry,add,converter,new,byte,buffer,converter,conversion,service,converter,registry,if,jsr310available,jsr310converter,registrar,register,jsr310converters,converter,registry,converter,registry,add,converter,new,object,to,object,converter,converter,registry,add,converter,new,id,to,entity,converter,conversion,service,converter,registry,converter,registry,add,converter,new,fallback,object,to,string,converter,if,java,util,optional,class,available,converter,registry,add,converter,new,object,to,optional,converter,conversion,service,converter,registry
DefaultConversionService -> public static void addDefaultConverters(ConverterRegistry converterRegistry);1467677340;Add converters appropriate for most environments._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService,_e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService;public static void addDefaultConverters(ConverterRegistry converterRegistry) {_		addScalarConverters(converterRegistry)__		addCollectionConverters(converterRegistry)___		converterRegistry.addConverter(new ByteBufferConverter((ConversionService) converterRegistry))__		if (jsr310Available) {_			Jsr310ConverterRegistrar.registerJsr310Converters(converterRegistry)__		}__		converterRegistry.addConverter(new ObjectToObjectConverter())__		converterRegistry.addConverter(new IdToEntityConverter((ConversionService) converterRegistry))__		converterRegistry.addConverter(new FallbackObjectToStringConverter())__		converterRegistry.addConverter(new ObjectToOptionalConverter((ConversionService) converterRegistry))__	};add,converters,appropriate,for,most,environments,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,default,converters,converter,registry,converter,registry,add,scalar,converters,converter,registry,add,collection,converters,converter,registry,converter,registry,add,converter,new,byte,buffer,converter,conversion,service,converter,registry,if,jsr310available,jsr310converter,registrar,register,jsr310converters,converter,registry,converter,registry,add,converter,new,object,to,object,converter,converter,registry,add,converter,new,id,to,entity,converter,conversion,service,converter,registry,converter,registry,add,converter,new,fallback,object,to,string,converter,converter,registry,add,converter,new,object,to,optional,converter,conversion,service,converter,registry
DefaultConversionService -> public static void addDefaultConverters(ConverterRegistry converterRegistry);1472477110;Add converters appropriate for most environments._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService,_e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService;public static void addDefaultConverters(ConverterRegistry converterRegistry) {_		addScalarConverters(converterRegistry)__		addCollectionConverters(converterRegistry)___		converterRegistry.addConverter(new ByteBufferConverter((ConversionService) converterRegistry))__		if (jsr310Available) {_			Jsr310ConverterRegistrar.registerJsr310Converters(converterRegistry)__		}__		converterRegistry.addConverter(new ObjectToObjectConverter())__		converterRegistry.addConverter(new IdToEntityConverter((ConversionService) converterRegistry))__		converterRegistry.addConverter(new FallbackObjectToStringConverter())__		converterRegistry.addConverter(new ObjectToOptionalConverter((ConversionService) converterRegistry))__	};add,converters,appropriate,for,most,environments,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,default,converters,converter,registry,converter,registry,add,scalar,converters,converter,registry,add,collection,converters,converter,registry,converter,registry,add,converter,new,byte,buffer,converter,conversion,service,converter,registry,if,jsr310available,jsr310converter,registrar,register,jsr310converters,converter,registry,converter,registry,add,converter,new,object,to,object,converter,converter,registry,add,converter,new,id,to,entity,converter,conversion,service,converter,registry,converter,registry,add,converter,new,fallback,object,to,string,converter,converter,registry,add,converter,new,object,to,optional,converter,conversion,service,converter,registry
DefaultConversionService -> public static void addDefaultConverters(ConverterRegistry converterRegistry);1479822903;Add converters appropriate for most environments._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService,_e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService;public static void addDefaultConverters(ConverterRegistry converterRegistry) {_		addScalarConverters(converterRegistry)__		addCollectionConverters(converterRegistry)___		converterRegistry.addConverter(new ByteBufferConverter((ConversionService) converterRegistry))__		converterRegistry.addConverter(new StringToTimeZoneConverter())__		converterRegistry.addConverter(new ZoneIdToTimeZoneConverter())__		converterRegistry.addConverter(new ZonedDateTimeToCalendarConverter())___		converterRegistry.addConverter(new ObjectToObjectConverter())__		converterRegistry.addConverter(new IdToEntityConverter((ConversionService) converterRegistry))__		converterRegistry.addConverter(new FallbackObjectToStringConverter())__		converterRegistry.addConverter(new ObjectToOptionalConverter((ConversionService) converterRegistry))__	};add,converters,appropriate,for,most,environments,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,default,converters,converter,registry,converter,registry,add,scalar,converters,converter,registry,add,collection,converters,converter,registry,converter,registry,add,converter,new,byte,buffer,converter,conversion,service,converter,registry,converter,registry,add,converter,new,string,to,time,zone,converter,converter,registry,add,converter,new,zone,id,to,time,zone,converter,converter,registry,add,converter,new,zoned,date,time,to,calendar,converter,converter,registry,add,converter,new,object,to,object,converter,converter,registry,add,converter,new,id,to,entity,converter,conversion,service,converter,registry,converter,registry,add,converter,new,fallback,object,to,string,converter,converter,registry,add,converter,new,object,to,optional,converter,conversion,service,converter,registry
DefaultConversionService -> public static void addDefaultConverters(ConverterRegistry converterRegistry);1479997757;Add converters appropriate for most environments._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService,_e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService;public static void addDefaultConverters(ConverterRegistry converterRegistry) {_		addScalarConverters(converterRegistry)__		addCollectionConverters(converterRegistry)___		converterRegistry.addConverter(new ByteBufferConverter((ConversionService) converterRegistry))__		converterRegistry.addConverter(new StringToTimeZoneConverter())__		converterRegistry.addConverter(new ZoneIdToTimeZoneConverter())__		converterRegistry.addConverter(new ZonedDateTimeToCalendarConverter())___		converterRegistry.addConverter(new ObjectToObjectConverter())__		converterRegistry.addConverter(new IdToEntityConverter((ConversionService) converterRegistry))__		converterRegistry.addConverter(new FallbackObjectToStringConverter())__		converterRegistry.addConverter(new ObjectToOptionalConverter((ConversionService) converterRegistry))__	};add,converters,appropriate,for,most,environments,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,default,converters,converter,registry,converter,registry,add,scalar,converters,converter,registry,add,collection,converters,converter,registry,converter,registry,add,converter,new,byte,buffer,converter,conversion,service,converter,registry,converter,registry,add,converter,new,string,to,time,zone,converter,converter,registry,add,converter,new,zone,id,to,time,zone,converter,converter,registry,add,converter,new,zoned,date,time,to,calendar,converter,converter,registry,add,converter,new,object,to,object,converter,converter,registry,add,converter,new,id,to,entity,converter,conversion,service,converter,registry,converter,registry,add,converter,new,fallback,object,to,string,converter,converter,registry,add,converter,new,object,to,optional,converter,conversion,service,converter,registry
DefaultConversionService -> public static void addDefaultConverters(ConverterRegistry converterRegistry);1498780456;Add converters appropriate for most environments._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService,_e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService;public static void addDefaultConverters(ConverterRegistry converterRegistry) {_		addScalarConverters(converterRegistry)__		addCollectionConverters(converterRegistry)___		converterRegistry.addConverter(new ByteBufferConverter((ConversionService) converterRegistry))__		converterRegistry.addConverter(new StringToTimeZoneConverter())__		converterRegistry.addConverter(new ZoneIdToTimeZoneConverter())__		converterRegistry.addConverter(new ZonedDateTimeToCalendarConverter())___		converterRegistry.addConverter(new ObjectToObjectConverter())__		converterRegistry.addConverter(new IdToEntityConverter((ConversionService) converterRegistry))__		converterRegistry.addConverter(new FallbackObjectToStringConverter())__		converterRegistry.addConverter(new ObjectToOptionalConverter((ConversionService) converterRegistry))__	};add,converters,appropriate,for,most,environments,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,default,converters,converter,registry,converter,registry,add,scalar,converters,converter,registry,add,collection,converters,converter,registry,converter,registry,add,converter,new,byte,buffer,converter,conversion,service,converter,registry,converter,registry,add,converter,new,string,to,time,zone,converter,converter,registry,add,converter,new,zone,id,to,time,zone,converter,converter,registry,add,converter,new,zoned,date,time,to,calendar,converter,converter,registry,add,converter,new,object,to,object,converter,converter,registry,add,converter,new,id,to,entity,converter,conversion,service,converter,registry,converter,registry,add,converter,new,fallback,object,to,string,converter,converter,registry,add,converter,new,object,to,optional,converter,conversion,service,converter,registry
DefaultConversionService -> public static void addDefaultConverters(ConverterRegistry converterRegistry);1511268177;Add converters appropriate for most environments._@param converterRegistry the registry of converters to add to (must also be castable to ConversionService,_e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService;public static void addDefaultConverters(ConverterRegistry converterRegistry) {_		addScalarConverters(converterRegistry)__		addCollectionConverters(converterRegistry)___		converterRegistry.addConverter(new ByteBufferConverter((ConversionService) converterRegistry))__		converterRegistry.addConverter(new StringToTimeZoneConverter())__		converterRegistry.addConverter(new ZoneIdToTimeZoneConverter())__		converterRegistry.addConverter(new ZonedDateTimeToCalendarConverter())___		converterRegistry.addConverter(new ObjectToObjectConverter())__		converterRegistry.addConverter(new IdToEntityConverter((ConversionService) converterRegistry))__		converterRegistry.addConverter(new FallbackObjectToStringConverter())__		converterRegistry.addConverter(new ObjectToOptionalConverter((ConversionService) converterRegistry))__	};add,converters,appropriate,for,most,environments,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,default,converters,converter,registry,converter,registry,add,scalar,converters,converter,registry,add,collection,converters,converter,registry,converter,registry,add,converter,new,byte,buffer,converter,conversion,service,converter,registry,converter,registry,add,converter,new,string,to,time,zone,converter,converter,registry,add,converter,new,zone,id,to,time,zone,converter,converter,registry,add,converter,new,zoned,date,time,to,calendar,converter,converter,registry,add,converter,new,object,to,object,converter,converter,registry,add,converter,new,id,to,entity,converter,conversion,service,converter,registry,converter,registry,add,converter,new,fallback,object,to,string,converter,converter,registry,add,converter,new,object,to,optional,converter,conversion,service,converter,registry
DefaultConversionService -> public static void addDefaultConverters(ConverterRegistry converterRegistry);1511278448;Add converters appropriate for most environments._@param converterRegistry the registry of converters to add to_(must also be castable to ConversionService, e.g. being a {@link ConfigurableConversionService})_@throws ClassCastException if the given ConverterRegistry could not be cast to a ConversionService;public static void addDefaultConverters(ConverterRegistry converterRegistry) {_		addScalarConverters(converterRegistry)__		addCollectionConverters(converterRegistry)___		converterRegistry.addConverter(new ByteBufferConverter((ConversionService) converterRegistry))__		converterRegistry.addConverter(new StringToTimeZoneConverter())__		converterRegistry.addConverter(new ZoneIdToTimeZoneConverter())__		converterRegistry.addConverter(new ZonedDateTimeToCalendarConverter())___		converterRegistry.addConverter(new ObjectToObjectConverter())__		converterRegistry.addConverter(new IdToEntityConverter((ConversionService) converterRegistry))__		converterRegistry.addConverter(new FallbackObjectToStringConverter())__		converterRegistry.addConverter(new ObjectToOptionalConverter((ConversionService) converterRegistry))__	};add,converters,appropriate,for,most,environments,param,converter,registry,the,registry,of,converters,to,add,to,must,also,be,castable,to,conversion,service,e,g,being,a,link,configurable,conversion,service,throws,class,cast,exception,if,the,given,converter,registry,could,not,be,cast,to,a,conversion,service;public,static,void,add,default,converters,converter,registry,converter,registry,add,scalar,converters,converter,registry,add,collection,converters,converter,registry,converter,registry,add,converter,new,byte,buffer,converter,conversion,service,converter,registry,converter,registry,add,converter,new,string,to,time,zone,converter,converter,registry,add,converter,new,zone,id,to,time,zone,converter,converter,registry,add,converter,new,zoned,date,time,to,calendar,converter,converter,registry,add,converter,new,object,to,object,converter,converter,registry,add,converter,new,id,to,entity,converter,conversion,service,converter,registry,converter,registry,add,converter,new,fallback,object,to,string,converter,converter,registry,add,converter,new,object,to,optional,converter,conversion,service,converter,registry
DefaultConversionService -> public DefaultConversionService();1328020251;Create a new {@code DefaultConversionService} with the set of_{@linkplain DefaultConversionService#addDefaultConverters(ConverterRegistry) default converters}.;public DefaultConversionService() {_		addDefaultConverters(this)__	};create,a,new,code,default,conversion,service,with,the,set,of,linkplain,default,conversion,service,add,default,converters,converter,registry,default,converters;public,default,conversion,service,add,default,converters,this
DefaultConversionService -> public DefaultConversionService();1350078439;Create a new {@code DefaultConversionService} with the set of_{@linkplain DefaultConversionService#addDefaultConverters(ConverterRegistry) default converters}.;public DefaultConversionService() {_		addDefaultConverters(this)__	};create,a,new,code,default,conversion,service,with,the,set,of,linkplain,default,conversion,service,add,default,converters,converter,registry,default,converters;public,default,conversion,service,add,default,converters,this
DefaultConversionService -> public DefaultConversionService();1350078439;Create a new {@code DefaultConversionService} with the set of_{@linkplain DefaultConversionService#addDefaultConverters(ConverterRegistry) default converters}.;public DefaultConversionService() {_		addDefaultConverters(this)__	};create,a,new,code,default,conversion,service,with,the,set,of,linkplain,default,conversion,service,add,default,converters,converter,registry,default,converters;public,default,conversion,service,add,default,converters,this
DefaultConversionService -> public DefaultConversionService();1351584957;Create a new {@code DefaultConversionService} with the set of_{@linkplain DefaultConversionService#addDefaultConverters(ConverterRegistry) default converters}.;public DefaultConversionService() {_		addDefaultConverters(this)__	};create,a,new,code,default,conversion,service,with,the,set,of,linkplain,default,conversion,service,add,default,converters,converter,registry,default,converters;public,default,conversion,service,add,default,converters,this
DefaultConversionService -> public DefaultConversionService();1372946100;Create a new {@code DefaultConversionService} with the set of_{@linkplain DefaultConversionService#addDefaultConverters(ConverterRegistry) default converters}.;public DefaultConversionService() {_		addDefaultConverters(this)__	};create,a,new,code,default,conversion,service,with,the,set,of,linkplain,default,conversion,service,add,default,converters,converter,registry,default,converters;public,default,conversion,service,add,default,converters,this
DefaultConversionService -> public DefaultConversionService();1380921248;Create a new {@code DefaultConversionService} with the set of_{@linkplain DefaultConversionService#addDefaultConverters(ConverterRegistry) default converters}.;public DefaultConversionService() {_		addDefaultConverters(this)__	};create,a,new,code,default,conversion,service,with,the,set,of,linkplain,default,conversion,service,add,default,converters,converter,registry,default,converters;public,default,conversion,service,add,default,converters,this
DefaultConversionService -> public DefaultConversionService();1388426916;Create a new {@code DefaultConversionService} with the set of_{@linkplain DefaultConversionService#addDefaultConverters(ConverterRegistry) default converters}.;public DefaultConversionService() {_		addDefaultConverters(this)__	};create,a,new,code,default,conversion,service,with,the,set,of,linkplain,default,conversion,service,add,default,converters,converter,registry,default,converters;public,default,conversion,service,add,default,converters,this
DefaultConversionService -> public DefaultConversionService();1402942616;Create a new {@code DefaultConversionService} with the set of_{@linkplain DefaultConversionService#addDefaultConverters(ConverterRegistry) default converters}.;public DefaultConversionService() {_		addDefaultConverters(this)__	};create,a,new,code,default,conversion,service,with,the,set,of,linkplain,default,conversion,service,add,default,converters,converter,registry,default,converters;public,default,conversion,service,add,default,converters,this
DefaultConversionService -> public DefaultConversionService();1424769447;Create a new {@code DefaultConversionService} with the set of_{@linkplain DefaultConversionService#addDefaultConverters(ConverterRegistry) default converters}.;public DefaultConversionService() {_		addDefaultConverters(this)__	};create,a,new,code,default,conversion,service,with,the,set,of,linkplain,default,conversion,service,add,default,converters,converter,registry,default,converters;public,default,conversion,service,add,default,converters,this
DefaultConversionService -> public DefaultConversionService();1431696237;Create a new {@code DefaultConversionService} with the set of_{@linkplain DefaultConversionService#addDefaultConverters(ConverterRegistry) default converters}.;public DefaultConversionService() {_		addDefaultConverters(this)__	};create,a,new,code,default,conversion,service,with,the,set,of,linkplain,default,conversion,service,add,default,converters,converter,registry,default,converters;public,default,conversion,service,add,default,converters,this
DefaultConversionService -> public DefaultConversionService();1446044129;Create a new {@code DefaultConversionService} with the set of_{@linkplain DefaultConversionService#addDefaultConverters(ConverterRegistry) default converters}.;public DefaultConversionService() {_		addDefaultConverters(this)__	};create,a,new,code,default,conversion,service,with,the,set,of,linkplain,default,conversion,service,add,default,converters,converter,registry,default,converters;public,default,conversion,service,add,default,converters,this
DefaultConversionService -> public DefaultConversionService();1453750406;Create a new {@code DefaultConversionService} with the set of_{@linkplain DefaultConversionService#addDefaultConverters(ConverterRegistry) default converters}.;public DefaultConversionService() {_		addDefaultConverters(this)__	};create,a,new,code,default,conversion,service,with,the,set,of,linkplain,default,conversion,service,add,default,converters,converter,registry,default,converters;public,default,conversion,service,add,default,converters,this
DefaultConversionService -> public DefaultConversionService();1458144062;Create a new {@code DefaultConversionService} with the set of_{@linkplain DefaultConversionService#addDefaultConverters(ConverterRegistry) default converters}.;public DefaultConversionService() {_		addDefaultConverters(this)__	};create,a,new,code,default,conversion,service,with,the,set,of,linkplain,default,conversion,service,add,default,converters,converter,registry,default,converters;public,default,conversion,service,add,default,converters,this
DefaultConversionService -> public DefaultConversionService();1467677340;Create a new {@code DefaultConversionService} with the set of_{@linkplain DefaultConversionService#addDefaultConverters(ConverterRegistry) default converters}.;public DefaultConversionService() {_		addDefaultConverters(this)__	};create,a,new,code,default,conversion,service,with,the,set,of,linkplain,default,conversion,service,add,default,converters,converter,registry,default,converters;public,default,conversion,service,add,default,converters,this
DefaultConversionService -> public DefaultConversionService();1472477110;Create a new {@code DefaultConversionService} with the set of_{@linkplain DefaultConversionService#addDefaultConverters(ConverterRegistry) default converters}.;public DefaultConversionService() {_		addDefaultConverters(this)__	};create,a,new,code,default,conversion,service,with,the,set,of,linkplain,default,conversion,service,add,default,converters,converter,registry,default,converters;public,default,conversion,service,add,default,converters,this
DefaultConversionService -> public DefaultConversionService();1479822903;Create a new {@code DefaultConversionService} with the set of_{@linkplain DefaultConversionService#addDefaultConverters(ConverterRegistry) default converters}.;public DefaultConversionService() {_		addDefaultConverters(this)__	};create,a,new,code,default,conversion,service,with,the,set,of,linkplain,default,conversion,service,add,default,converters,converter,registry,default,converters;public,default,conversion,service,add,default,converters,this
DefaultConversionService -> public DefaultConversionService();1479997757;Create a new {@code DefaultConversionService} with the set of_{@linkplain DefaultConversionService#addDefaultConverters(ConverterRegistry) default converters}.;public DefaultConversionService() {_		addDefaultConverters(this)__	};create,a,new,code,default,conversion,service,with,the,set,of,linkplain,default,conversion,service,add,default,converters,converter,registry,default,converters;public,default,conversion,service,add,default,converters,this
DefaultConversionService -> public DefaultConversionService();1498780456;Create a new {@code DefaultConversionService} with the set of_{@linkplain DefaultConversionService#addDefaultConverters(ConverterRegistry) default converters}.;public DefaultConversionService() {_		addDefaultConverters(this)__	};create,a,new,code,default,conversion,service,with,the,set,of,linkplain,default,conversion,service,add,default,converters,converter,registry,default,converters;public,default,conversion,service,add,default,converters,this
DefaultConversionService -> public DefaultConversionService();1511268177;Create a new {@code DefaultConversionService} with the set of_{@linkplain DefaultConversionService#addDefaultConverters(ConverterRegistry) default converters}.;public DefaultConversionService() {_		addDefaultConverters(this)__	};create,a,new,code,default,conversion,service,with,the,set,of,linkplain,default,conversion,service,add,default,converters,converter,registry,default,converters;public,default,conversion,service,add,default,converters,this
DefaultConversionService -> public DefaultConversionService();1511278448;Create a new {@code DefaultConversionService} with the set of_{@linkplain DefaultConversionService#addDefaultConverters(ConverterRegistry) default converters}.;public DefaultConversionService() {_		addDefaultConverters(this)__	};create,a,new,code,default,conversion,service,with,the,set,of,linkplain,default,conversion,service,add,default,converters,converter,registry,default,converters;public,default,conversion,service,add,default,converters,this
DefaultConversionService -> public static ConversionService getSharedInstance();1479997757;Return a shared default {@code ConversionService} instance,_lazily building it once needed._<p><b>NOTE:</b> We highly recommend constructing individual_{@code ConversionService} instances for customization purposes._This accessor is only meant as a fallback for code paths which_need simple type coercion but cannot access a longer-lived_{@code ConversionService} instance any other way._@return the shared {@code ConversionService} instance (never {@code null})_@since 4.3.5;public static ConversionService getSharedInstance() {_		if (sharedInstance == null) {_			synchronized (DefaultConversionService.class) {_				if (sharedInstance == null) {_					sharedInstance = new DefaultConversionService()__				}_			}_		}_		return sharedInstance__	};return,a,shared,default,code,conversion,service,instance,lazily,building,it,once,needed,p,b,note,b,we,highly,recommend,constructing,individual,code,conversion,service,instances,for,customization,purposes,this,accessor,is,only,meant,as,a,fallback,for,code,paths,which,need,simple,type,coercion,but,cannot,access,a,longer,lived,code,conversion,service,instance,any,other,way,return,the,shared,code,conversion,service,instance,never,code,null,since,4,3,5;public,static,conversion,service,get,shared,instance,if,shared,instance,null,synchronized,default,conversion,service,class,if,shared,instance,null,shared,instance,new,default,conversion,service,return,shared,instance
DefaultConversionService -> public static ConversionService getSharedInstance();1498780456;Return a shared default {@code ConversionService} instance,_lazily building it once needed._<p><b>NOTE:</b> We highly recommend constructing individual_{@code ConversionService} instances for customization purposes._This accessor is only meant as a fallback for code paths which_need simple type coercion but cannot access a longer-lived_{@code ConversionService} instance any other way._@return the shared {@code ConversionService} instance (never {@code null})_@since 4.3.5;public static ConversionService getSharedInstance() {_		DefaultConversionService cs = sharedInstance__		if (cs == null) {_			synchronized (DefaultConversionService.class) {_				cs = sharedInstance__				if (cs == null) {_					cs = new DefaultConversionService()__					sharedInstance = cs__				}_			}_		}_		return cs__	};return,a,shared,default,code,conversion,service,instance,lazily,building,it,once,needed,p,b,note,b,we,highly,recommend,constructing,individual,code,conversion,service,instances,for,customization,purposes,this,accessor,is,only,meant,as,a,fallback,for,code,paths,which,need,simple,type,coercion,but,cannot,access,a,longer,lived,code,conversion,service,instance,any,other,way,return,the,shared,code,conversion,service,instance,never,code,null,since,4,3,5;public,static,conversion,service,get,shared,instance,default,conversion,service,cs,shared,instance,if,cs,null,synchronized,default,conversion,service,class,cs,shared,instance,if,cs,null,cs,new,default,conversion,service,shared,instance,cs,return,cs
DefaultConversionService -> public static ConversionService getSharedInstance();1511268177;Return a shared default {@code ConversionService} instance,_lazily building it once needed._<p><b>NOTE:</b> We highly recommend constructing individual_{@code ConversionService} instances for customization purposes._This accessor is only meant as a fallback for code paths which_need simple type coercion but cannot access a longer-lived_{@code ConversionService} instance any other way._@return the shared {@code ConversionService} instance (never {@code null})_@since 4.3.5;public static ConversionService getSharedInstance() {_		DefaultConversionService cs = sharedInstance__		if (cs == null) {_			synchronized (DefaultConversionService.class) {_				cs = sharedInstance__				if (cs == null) {_					cs = new DefaultConversionService()__					sharedInstance = cs__				}_			}_		}_		return cs__	};return,a,shared,default,code,conversion,service,instance,lazily,building,it,once,needed,p,b,note,b,we,highly,recommend,constructing,individual,code,conversion,service,instances,for,customization,purposes,this,accessor,is,only,meant,as,a,fallback,for,code,paths,which,need,simple,type,coercion,but,cannot,access,a,longer,lived,code,conversion,service,instance,any,other,way,return,the,shared,code,conversion,service,instance,never,code,null,since,4,3,5;public,static,conversion,service,get,shared,instance,default,conversion,service,cs,shared,instance,if,cs,null,synchronized,default,conversion,service,class,cs,shared,instance,if,cs,null,cs,new,default,conversion,service,shared,instance,cs,return,cs
DefaultConversionService -> public static ConversionService getSharedInstance();1511278448;Return a shared default {@code ConversionService} instance,_lazily building it once needed._<p><b>NOTE:</b> We highly recommend constructing individual_{@code ConversionService} instances for customization purposes._This accessor is only meant as a fallback for code paths which_need simple type coercion but cannot access a longer-lived_{@code ConversionService} instance any other way._@return the shared {@code ConversionService} instance (never {@code null})_@since 4.3.5;public static ConversionService getSharedInstance() {_		DefaultConversionService cs = sharedInstance__		if (cs == null) {_			synchronized (DefaultConversionService.class) {_				cs = sharedInstance__				if (cs == null) {_					cs = new DefaultConversionService()__					sharedInstance = cs__				}_			}_		}_		return cs__	};return,a,shared,default,code,conversion,service,instance,lazily,building,it,once,needed,p,b,note,b,we,highly,recommend,constructing,individual,code,conversion,service,instances,for,customization,purposes,this,accessor,is,only,meant,as,a,fallback,for,code,paths,which,need,simple,type,coercion,but,cannot,access,a,longer,lived,code,conversion,service,instance,any,other,way,return,the,shared,code,conversion,service,instance,never,code,null,since,4,3,5;public,static,conversion,service,get,shared,instance,default,conversion,service,cs,shared,instance,if,cs,null,synchronized,default,conversion,service,class,cs,shared,instance,if,cs,null,cs,new,default,conversion,service,shared,instance,cs,return,cs
