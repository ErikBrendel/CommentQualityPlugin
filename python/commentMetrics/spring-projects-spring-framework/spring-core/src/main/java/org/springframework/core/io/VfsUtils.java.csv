commented;modifiers;parameterAmount;loc;comment;code
false;protected,static;3;17;;protected static Object invokeVfsMethod(Method method, @Nullable Object target, Object... args) throws IOException {     try {         return method.invoke(target, args).     } catch (InvocationTargetException ex) {         Throwable targetEx = ex.getTargetException().         if (targetEx instanceof IOException) {             throw (IOException) targetEx.         }         ReflectionUtils.handleInvocationTargetException(ex).     } catch (Exception ex) {         ReflectionUtils.handleReflectionException(ex).     }     throw new IllegalStateException("Invalid code path reached"). }
false;static;1;8;;static boolean exists(Object vfsResource) {     try {         return (Boolean) invokeVfsMethod(VIRTUAL_FILE_METHOD_EXISTS, vfsResource).     } catch (IOException ex) {         return false.     } }
false;static;1;8;;static boolean isReadable(Object vfsResource) {     try {         return (Long) invokeVfsMethod(VIRTUAL_FILE_METHOD_GET_SIZE, vfsResource) > 0.     } catch (IOException ex) {         return false.     } }
false;static;1;3;;static long getSize(Object vfsResource) throws IOException {     return (Long) invokeVfsMethod(VIRTUAL_FILE_METHOD_GET_SIZE, vfsResource). }
false;static;1;3;;static long getLastModified(Object vfsResource) throws IOException {     return (Long) invokeVfsMethod(VIRTUAL_FILE_METHOD_GET_LAST_MODIFIED, vfsResource). }
false;static;1;3;;static InputStream getInputStream(Object vfsResource) throws IOException {     return (InputStream) invokeVfsMethod(VIRTUAL_FILE_METHOD_GET_INPUT_STREAM, vfsResource). }
false;static;1;3;;static URL getURL(Object vfsResource) throws IOException {     return (URL) invokeVfsMethod(VIRTUAL_FILE_METHOD_TO_URL, vfsResource). }
false;static;1;3;;static URI getURI(Object vfsResource) throws IOException {     return (URI) invokeVfsMethod(VIRTUAL_FILE_METHOD_TO_URI, vfsResource). }
false;static;1;8;;static String getName(Object vfsResource) {     try {         return (String) invokeVfsMethod(VIRTUAL_FILE_METHOD_GET_NAME, vfsResource).     } catch (IOException ex) {         throw new IllegalStateException("Cannot get resource name", ex).     } }
false;static;1;3;;static Object getRelative(URL url) throws IOException {     return invokeVfsMethod(VFS_METHOD_GET_ROOT_URL, null, url). }
false;static;2;3;;static Object getChild(Object vfsResource, String path) throws IOException {     return invokeVfsMethod(VIRTUAL_FILE_METHOD_GET_CHILD, vfsResource, path). }
false;static;1;3;;static File getFile(Object vfsResource) throws IOException {     return (File) invokeVfsMethod(VIRTUAL_FILE_METHOD_GET_PHYSICAL_FILE, vfsResource). }
false;static;1;3;;static Object getRoot(URI url) throws IOException {     return invokeVfsMethod(VFS_METHOD_GET_ROOT_URI, null, url). }
false;protected,static;1;3;;// protected methods used by the support sub-package protected static Object getRoot(URL url) throws IOException {     return invokeVfsMethod(VFS_METHOD_GET_ROOT_URL, null, url). }
false;protected,static;0;4;;@Nullable protected static Object doGetVisitorAttributes() {     return ReflectionUtils.getField(VISITOR_ATTRIBUTES_FIELD_RECURSE, null). }
false;protected,static;1;4;;@Nullable protected static String doGetPath(Object resource) {     return (String) ReflectionUtils.invokeMethod(VIRTUAL_FILE_METHOD_GET_PATH_NAME, resource). }
