# id;timestamp;commentText;codeText;commentWords;codeWords
ConfigurableObjectInputStream -> protected Class<?> resolveFallbackIfPossible(String className, ClassNotFoundException ex) 			throws IOException, ClassNotFoundException;1385412762;Resolve the given class name against a fallback class loader._<p>The default implementation simply rethrows the original exception,_since there is no fallback available._@param className the class name to resolve_@param ex the original exception thrown when attempting to load the class_@return the newly resolved class (never {@code null});protected Class<?> resolveFallbackIfPossible(String className, ClassNotFoundException ex)_			throws IOException, ClassNotFoundException{__		throw ex__	};resolve,the,given,class,name,against,a,fallback,class,loader,p,the,default,implementation,simply,rethrows,the,original,exception,since,there,is,no,fallback,available,param,class,name,the,class,name,to,resolve,param,ex,the,original,exception,thrown,when,attempting,to,load,the,class,return,the,newly,resolved,class,never,code,null;protected,class,resolve,fallback,if,possible,string,class,name,class,not,found,exception,ex,throws,ioexception,class,not,found,exception,throw,ex
ConfigurableObjectInputStream -> protected Class<?> resolveFallbackIfPossible(String className, ClassNotFoundException ex) 			throws IOException, ClassNotFoundException;1468948866;Resolve the given class name against a fallback class loader._<p>The default implementation simply rethrows the original exception,_since there is no fallback available._@param className the class name to resolve_@param ex the original exception thrown when attempting to load the class_@return the newly resolved class (never {@code null});protected Class<?> resolveFallbackIfPossible(String className, ClassNotFoundException ex)_			throws IOException, ClassNotFoundException{__		throw ex__	};resolve,the,given,class,name,against,a,fallback,class,loader,p,the,default,implementation,simply,rethrows,the,original,exception,since,there,is,no,fallback,available,param,class,name,the,class,name,to,resolve,param,ex,the,original,exception,thrown,when,attempting,to,load,the,class,return,the,newly,resolved,class,never,code,null;protected,class,resolve,fallback,if,possible,string,class,name,class,not,found,exception,ex,throws,ioexception,class,not,found,exception,throw,ex
ConfigurableObjectInputStream -> protected Class<?> resolveFallbackIfPossible(String className, ClassNotFoundException ex) 			throws IOException, ClassNotFoundException;1469047316;Resolve the given class name against a fallback class loader._<p>The default implementation simply rethrows the original exception,_since there is no fallback available._@param className the class name to resolve_@param ex the original exception thrown when attempting to load the class_@return the newly resolved class (never {@code null});protected Class<?> resolveFallbackIfPossible(String className, ClassNotFoundException ex)_			throws IOException, ClassNotFoundException{__		throw ex__	};resolve,the,given,class,name,against,a,fallback,class,loader,p,the,default,implementation,simply,rethrows,the,original,exception,since,there,is,no,fallback,available,param,class,name,the,class,name,to,resolve,param,ex,the,original,exception,thrown,when,attempting,to,load,the,class,return,the,newly,resolved,class,never,code,null;protected,class,resolve,fallback,if,possible,string,class,name,class,not,found,exception,ex,throws,ioexception,class,not,found,exception,throw,ex
ConfigurableObjectInputStream -> protected Class<?> resolveFallbackIfPossible(String className, ClassNotFoundException ex) 			throws IOException, ClassNotFoundException;1495868221;Resolve the given class name against a fallback class loader._<p>The default implementation simply rethrows the original exception,_since there is no fallback available._@param className the class name to resolve_@param ex the original exception thrown when attempting to load the class_@return the newly resolved class (never {@code null});protected Class<?> resolveFallbackIfPossible(String className, ClassNotFoundException ex)_			throws IOException, ClassNotFoundException{__		throw ex__	};resolve,the,given,class,name,against,a,fallback,class,loader,p,the,default,implementation,simply,rethrows,the,original,exception,since,there,is,no,fallback,available,param,class,name,the,class,name,to,resolve,param,ex,the,original,exception,thrown,when,attempting,to,load,the,class,return,the,newly,resolved,class,never,code,null;protected,class,resolve,fallback,if,possible,string,class,name,class,not,found,exception,ex,throws,ioexception,class,not,found,exception,throw,ex
ConfigurableObjectInputStream -> protected Class<?> resolveFallbackIfPossible(String className, ClassNotFoundException ex) 			throws IOException, ClassNotFoundException;1496837955;Resolve the given class name against a fallback class loader._<p>The default implementation simply rethrows the original exception,_since there is no fallback available._@param className the class name to resolve_@param ex the original exception thrown when attempting to load the class_@return the newly resolved class (never {@code null});protected Class<?> resolveFallbackIfPossible(String className, ClassNotFoundException ex)_			throws IOException, ClassNotFoundException{__		throw ex__	};resolve,the,given,class,name,against,a,fallback,class,loader,p,the,default,implementation,simply,rethrows,the,original,exception,since,there,is,no,fallback,available,param,class,name,the,class,name,to,resolve,param,ex,the,original,exception,thrown,when,attempting,to,load,the,class,return,the,newly,resolved,class,never,code,null;protected,class,resolve,fallback,if,possible,string,class,name,class,not,found,exception,ex,throws,ioexception,class,not,found,exception,throw,ex
ConfigurableObjectInputStream -> protected Class<?> resolveFallbackIfPossible(String className, ClassNotFoundException ex) 			throws IOException, ClassNotFoundException;1498780456;Resolve the given class name against a fallback class loader._<p>The default implementation simply rethrows the original exception,_since there is no fallback available._@param className the class name to resolve_@param ex the original exception thrown when attempting to load the class_@return the newly resolved class (never {@code null});protected Class<?> resolveFallbackIfPossible(String className, ClassNotFoundException ex)_			throws IOException, ClassNotFoundException{__		throw ex__	};resolve,the,given,class,name,against,a,fallback,class,loader,p,the,default,implementation,simply,rethrows,the,original,exception,since,there,is,no,fallback,available,param,class,name,the,class,name,to,resolve,param,ex,the,original,exception,thrown,when,attempting,to,load,the,class,return,the,newly,resolved,class,never,code,null;protected,class,resolve,fallback,if,possible,string,class,name,class,not,found,exception,ex,throws,ioexception,class,not,found,exception,throw,ex
ConfigurableObjectInputStream -> public ConfigurableObjectInputStream( 			InputStream in, ClassLoader classLoader, boolean acceptProxyClasses) throws IOException;1328020251;Create a new ConfigurableObjectInputStream for the given InputStream and ClassLoader._@param in the InputStream to read from_@param classLoader the ClassLoader to use for loading local classes_@param acceptProxyClasses whether to accept deserialization of proxy classes_(may be deactivated as a security measure)_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public ConfigurableObjectInputStream(_			InputStream in, ClassLoader classLoader, boolean acceptProxyClasses) throws IOException {__		super(in)__		this.classLoader = classLoader__		this.acceptProxyClasses = acceptProxyClasses__	};create,a,new,configurable,object,input,stream,for,the,given,input,stream,and,class,loader,param,in,the,input,stream,to,read,from,param,class,loader,the,class,loader,to,use,for,loading,local,classes,param,accept,proxy,classes,whether,to,accept,deserialization,of,proxy,classes,may,be,deactivated,as,a,security,measure,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,configurable,object,input,stream,input,stream,in,class,loader,class,loader,boolean,accept,proxy,classes,throws,ioexception,super,in,this,class,loader,class,loader,this,accept,proxy,classes,accept,proxy,classes
ConfigurableObjectInputStream -> public ConfigurableObjectInputStream( 			InputStream in, ClassLoader classLoader, boolean acceptProxyClasses) throws IOException;1356735495;Create a new ConfigurableObjectInputStream for the given InputStream and ClassLoader._@param in the InputStream to read from_@param classLoader the ClassLoader to use for loading local classes_@param acceptProxyClasses whether to accept deserialization of proxy classes_(may be deactivated as a security measure)_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public ConfigurableObjectInputStream(_			InputStream in, ClassLoader classLoader, boolean acceptProxyClasses) throws IOException {__		super(in)__		this.classLoader = classLoader__		this.acceptProxyClasses = acceptProxyClasses__	};create,a,new,configurable,object,input,stream,for,the,given,input,stream,and,class,loader,param,in,the,input,stream,to,read,from,param,class,loader,the,class,loader,to,use,for,loading,local,classes,param,accept,proxy,classes,whether,to,accept,deserialization,of,proxy,classes,may,be,deactivated,as,a,security,measure,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,configurable,object,input,stream,input,stream,in,class,loader,class,loader,boolean,accept,proxy,classes,throws,ioexception,super,in,this,class,loader,class,loader,this,accept,proxy,classes,accept,proxy,classes
ConfigurableObjectInputStream -> public ConfigurableObjectInputStream( 			InputStream in, ClassLoader classLoader, boolean acceptProxyClasses) throws IOException;1385412762;Create a new ConfigurableObjectInputStream for the given InputStream and ClassLoader._@param in the InputStream to read from_@param classLoader the ClassLoader to use for loading local classes_@param acceptProxyClasses whether to accept deserialization of proxy classes_(may be deactivated as a security measure)_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public ConfigurableObjectInputStream(_			InputStream in, ClassLoader classLoader, boolean acceptProxyClasses) throws IOException {__		super(in)__		this.classLoader = classLoader__		this.acceptProxyClasses = acceptProxyClasses__	};create,a,new,configurable,object,input,stream,for,the,given,input,stream,and,class,loader,param,in,the,input,stream,to,read,from,param,class,loader,the,class,loader,to,use,for,loading,local,classes,param,accept,proxy,classes,whether,to,accept,deserialization,of,proxy,classes,may,be,deactivated,as,a,security,measure,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,configurable,object,input,stream,input,stream,in,class,loader,class,loader,boolean,accept,proxy,classes,throws,ioexception,super,in,this,class,loader,class,loader,this,accept,proxy,classes,accept,proxy,classes
ConfigurableObjectInputStream -> public ConfigurableObjectInputStream( 			InputStream in, ClassLoader classLoader, boolean acceptProxyClasses) throws IOException;1468948866;Create a new ConfigurableObjectInputStream for the given InputStream and ClassLoader._@param in the InputStream to read from_@param classLoader the ClassLoader to use for loading local classes_@param acceptProxyClasses whether to accept deserialization of proxy classes_(may be deactivated as a security measure)_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public ConfigurableObjectInputStream(_			InputStream in, ClassLoader classLoader, boolean acceptProxyClasses) throws IOException {__		super(in)__		this.classLoader = classLoader__		this.acceptProxyClasses = acceptProxyClasses__	};create,a,new,configurable,object,input,stream,for,the,given,input,stream,and,class,loader,param,in,the,input,stream,to,read,from,param,class,loader,the,class,loader,to,use,for,loading,local,classes,param,accept,proxy,classes,whether,to,accept,deserialization,of,proxy,classes,may,be,deactivated,as,a,security,measure,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,configurable,object,input,stream,input,stream,in,class,loader,class,loader,boolean,accept,proxy,classes,throws,ioexception,super,in,this,class,loader,class,loader,this,accept,proxy,classes,accept,proxy,classes
ConfigurableObjectInputStream -> public ConfigurableObjectInputStream( 			InputStream in, ClassLoader classLoader, boolean acceptProxyClasses) throws IOException;1469047316;Create a new ConfigurableObjectInputStream for the given InputStream and ClassLoader._@param in the InputStream to read from_@param classLoader the ClassLoader to use for loading local classes_@param acceptProxyClasses whether to accept deserialization of proxy classes_(may be deactivated as a security measure)_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public ConfigurableObjectInputStream(_			InputStream in, ClassLoader classLoader, boolean acceptProxyClasses) throws IOException {__		super(in)__		this.classLoader = classLoader__		this.acceptProxyClasses = acceptProxyClasses__	};create,a,new,configurable,object,input,stream,for,the,given,input,stream,and,class,loader,param,in,the,input,stream,to,read,from,param,class,loader,the,class,loader,to,use,for,loading,local,classes,param,accept,proxy,classes,whether,to,accept,deserialization,of,proxy,classes,may,be,deactivated,as,a,security,measure,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,configurable,object,input,stream,input,stream,in,class,loader,class,loader,boolean,accept,proxy,classes,throws,ioexception,super,in,this,class,loader,class,loader,this,accept,proxy,classes,accept,proxy,classes
ConfigurableObjectInputStream -> public ConfigurableObjectInputStream( 			InputStream in, ClassLoader classLoader, boolean acceptProxyClasses) throws IOException;1495868221;Create a new ConfigurableObjectInputStream for the given InputStream and ClassLoader._@param in the InputStream to read from_@param classLoader the ClassLoader to use for loading local classes_@param acceptProxyClasses whether to accept deserialization of proxy classes_(may be deactivated as a security measure)_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public ConfigurableObjectInputStream(_			InputStream in, ClassLoader classLoader, boolean acceptProxyClasses) throws IOException {__		super(in)__		this.classLoader = classLoader__		this.acceptProxyClasses = acceptProxyClasses__	};create,a,new,configurable,object,input,stream,for,the,given,input,stream,and,class,loader,param,in,the,input,stream,to,read,from,param,class,loader,the,class,loader,to,use,for,loading,local,classes,param,accept,proxy,classes,whether,to,accept,deserialization,of,proxy,classes,may,be,deactivated,as,a,security,measure,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,configurable,object,input,stream,input,stream,in,class,loader,class,loader,boolean,accept,proxy,classes,throws,ioexception,super,in,this,class,loader,class,loader,this,accept,proxy,classes,accept,proxy,classes
ConfigurableObjectInputStream -> protected ClassLoader getFallbackClassLoader() throws IOException;1328020251;Return the fallback ClassLoader to use when no ClassLoader was specified_and ObjectInputStream's own default ClassLoader failed._<p>The default implementation simply returns <code>null</code>.;protected ClassLoader getFallbackClassLoader() throws IOException {_		return null__	};return,the,fallback,class,loader,to,use,when,no,class,loader,was,specified,and,object,input,stream,s,own,default,class,loader,failed,p,the,default,implementation,simply,returns,code,null,code;protected,class,loader,get,fallback,class,loader,throws,ioexception,return,null
ConfigurableObjectInputStream -> protected ClassLoader getFallbackClassLoader() throws IOException;1356735495;Return the fallback ClassLoader to use when no ClassLoader was specified_and ObjectInputStream's own default ClassLoader failed._<p>The default implementation simply returns {@code null}.;protected ClassLoader getFallbackClassLoader() throws IOException {_		return null__	};return,the,fallback,class,loader,to,use,when,no,class,loader,was,specified,and,object,input,stream,s,own,default,class,loader,failed,p,the,default,implementation,simply,returns,code,null;protected,class,loader,get,fallback,class,loader,throws,ioexception,return,null
ConfigurableObjectInputStream -> protected ClassLoader getFallbackClassLoader() throws IOException;1385412762;Return the fallback ClassLoader to use when no ClassLoader was specified_and ObjectInputStream's own default ClassLoader failed._<p>The default implementation simply returns {@code null}.;protected ClassLoader getFallbackClassLoader() throws IOException {_		return null__	};return,the,fallback,class,loader,to,use,when,no,class,loader,was,specified,and,object,input,stream,s,own,default,class,loader,failed,p,the,default,implementation,simply,returns,code,null;protected,class,loader,get,fallback,class,loader,throws,ioexception,return,null
ConfigurableObjectInputStream -> protected ClassLoader getFallbackClassLoader() throws IOException;1468948866;Return the fallback ClassLoader to use when no ClassLoader was specified_and ObjectInputStream's own default ClassLoader failed._<p>The default implementation simply returns {@code null}.;protected ClassLoader getFallbackClassLoader() throws IOException {_		return null__	};return,the,fallback,class,loader,to,use,when,no,class,loader,was,specified,and,object,input,stream,s,own,default,class,loader,failed,p,the,default,implementation,simply,returns,code,null;protected,class,loader,get,fallback,class,loader,throws,ioexception,return,null
ConfigurableObjectInputStream -> protected ClassLoader getFallbackClassLoader() throws IOException;1469047316;Return the fallback ClassLoader to use when no ClassLoader was specified_and ObjectInputStream's own default class loader failed._<p>The default implementation simply returns {@code null}, indicating_that no specific fallback is available.;protected ClassLoader getFallbackClassLoader() throws IOException {_		return null__	};return,the,fallback,class,loader,to,use,when,no,class,loader,was,specified,and,object,input,stream,s,own,default,class,loader,failed,p,the,default,implementation,simply,returns,code,null,indicating,that,no,specific,fallback,is,available;protected,class,loader,get,fallback,class,loader,throws,ioexception,return,null
ConfigurableObjectInputStream -> public ConfigurableObjectInputStream(InputStream in, @Nullable ClassLoader classLoader) throws IOException;1496837955;Create a new ConfigurableObjectInputStream for the given InputStream and ClassLoader._@param in the InputStream to read from_@param classLoader the ClassLoader to use for loading local classes_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public ConfigurableObjectInputStream(InputStream in, @Nullable ClassLoader classLoader) throws IOException {_		this(in, classLoader, true)__	};create,a,new,configurable,object,input,stream,for,the,given,input,stream,and,class,loader,param,in,the,input,stream,to,read,from,param,class,loader,the,class,loader,to,use,for,loading,local,classes,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,configurable,object,input,stream,input,stream,in,nullable,class,loader,class,loader,throws,ioexception,this,in,class,loader,true
ConfigurableObjectInputStream -> public ConfigurableObjectInputStream(InputStream in, @Nullable ClassLoader classLoader) throws IOException;1498780456;Create a new ConfigurableObjectInputStream for the given InputStream and ClassLoader._@param in the InputStream to read from_@param classLoader the ClassLoader to use for loading local classes_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public ConfigurableObjectInputStream(InputStream in, @Nullable ClassLoader classLoader) throws IOException {_		this(in, classLoader, true)__	};create,a,new,configurable,object,input,stream,for,the,given,input,stream,and,class,loader,param,in,the,input,stream,to,read,from,param,class,loader,the,class,loader,to,use,for,loading,local,classes,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,configurable,object,input,stream,input,stream,in,nullable,class,loader,class,loader,throws,ioexception,this,in,class,loader,true
ConfigurableObjectInputStream -> public ConfigurableObjectInputStream( 			InputStream in, @Nullable ClassLoader classLoader, boolean acceptProxyClasses) throws IOException;1496837955;Create a new ConfigurableObjectInputStream for the given InputStream and ClassLoader._@param in the InputStream to read from_@param classLoader the ClassLoader to use for loading local classes_@param acceptProxyClasses whether to accept deserialization of proxy classes_(may be deactivated as a security measure)_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public ConfigurableObjectInputStream(_			InputStream in, @Nullable ClassLoader classLoader, boolean acceptProxyClasses) throws IOException {__		super(in)__		this.classLoader = classLoader__		this.acceptProxyClasses = acceptProxyClasses__	};create,a,new,configurable,object,input,stream,for,the,given,input,stream,and,class,loader,param,in,the,input,stream,to,read,from,param,class,loader,the,class,loader,to,use,for,loading,local,classes,param,accept,proxy,classes,whether,to,accept,deserialization,of,proxy,classes,may,be,deactivated,as,a,security,measure,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,configurable,object,input,stream,input,stream,in,nullable,class,loader,class,loader,boolean,accept,proxy,classes,throws,ioexception,super,in,this,class,loader,class,loader,this,accept,proxy,classes,accept,proxy,classes
ConfigurableObjectInputStream -> public ConfigurableObjectInputStream( 			InputStream in, @Nullable ClassLoader classLoader, boolean acceptProxyClasses) throws IOException;1498780456;Create a new ConfigurableObjectInputStream for the given InputStream and ClassLoader._@param in the InputStream to read from_@param classLoader the ClassLoader to use for loading local classes_@param acceptProxyClasses whether to accept deserialization of proxy classes_(may be deactivated as a security measure)_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public ConfigurableObjectInputStream(_			InputStream in, @Nullable ClassLoader classLoader, boolean acceptProxyClasses) throws IOException {__		super(in)__		this.classLoader = classLoader__		this.acceptProxyClasses = acceptProxyClasses__	};create,a,new,configurable,object,input,stream,for,the,given,input,stream,and,class,loader,param,in,the,input,stream,to,read,from,param,class,loader,the,class,loader,to,use,for,loading,local,classes,param,accept,proxy,classes,whether,to,accept,deserialization,of,proxy,classes,may,be,deactivated,as,a,security,measure,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,configurable,object,input,stream,input,stream,in,nullable,class,loader,class,loader,boolean,accept,proxy,classes,throws,ioexception,super,in,this,class,loader,class,loader,this,accept,proxy,classes,accept,proxy,classes
ConfigurableObjectInputStream -> @Nullable 	protected ClassLoader getFallbackClassLoader() throws IOException;1495868221;Return the fallback ClassLoader to use when no ClassLoader was specified_and ObjectInputStream's own default class loader failed._<p>The default implementation simply returns {@code null}, indicating_that no specific fallback is available.;@Nullable_	protected ClassLoader getFallbackClassLoader() throws IOException {_		return null__	};return,the,fallback,class,loader,to,use,when,no,class,loader,was,specified,and,object,input,stream,s,own,default,class,loader,failed,p,the,default,implementation,simply,returns,code,null,indicating,that,no,specific,fallback,is,available;nullable,protected,class,loader,get,fallback,class,loader,throws,ioexception,return,null
ConfigurableObjectInputStream -> @Nullable 	protected ClassLoader getFallbackClassLoader() throws IOException;1496837955;Return the fallback ClassLoader to use when no ClassLoader was specified_and ObjectInputStream's own default class loader failed._<p>The default implementation simply returns {@code null}, indicating_that no specific fallback is available.;@Nullable_	protected ClassLoader getFallbackClassLoader() throws IOException {_		return null__	};return,the,fallback,class,loader,to,use,when,no,class,loader,was,specified,and,object,input,stream,s,own,default,class,loader,failed,p,the,default,implementation,simply,returns,code,null,indicating,that,no,specific,fallback,is,available;nullable,protected,class,loader,get,fallback,class,loader,throws,ioexception,return,null
ConfigurableObjectInputStream -> @Nullable 	protected ClassLoader getFallbackClassLoader() throws IOException;1498780456;Return the fallback ClassLoader to use when no ClassLoader was specified_and ObjectInputStream's own default class loader failed._<p>The default implementation simply returns {@code null}, indicating_that no specific fallback is available.;@Nullable_	protected ClassLoader getFallbackClassLoader() throws IOException {_		return null__	};return,the,fallback,class,loader,to,use,when,no,class,loader,was,specified,and,object,input,stream,s,own,default,class,loader,failed,p,the,default,implementation,simply,returns,code,null,indicating,that,no,specific,fallback,is,available;nullable,protected,class,loader,get,fallback,class,loader,throws,ioexception,return,null
ConfigurableObjectInputStream -> public ConfigurableObjectInputStream(InputStream in, ClassLoader classLoader) throws IOException;1328020251;Create a new ConfigurableObjectInputStream for the given InputStream and ClassLoader._@param in the InputStream to read from_@param classLoader the ClassLoader to use for loading local classes_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public ConfigurableObjectInputStream(InputStream in, ClassLoader classLoader) throws IOException {_		this(in, classLoader, true)__	};create,a,new,configurable,object,input,stream,for,the,given,input,stream,and,class,loader,param,in,the,input,stream,to,read,from,param,class,loader,the,class,loader,to,use,for,loading,local,classes,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,configurable,object,input,stream,input,stream,in,class,loader,class,loader,throws,ioexception,this,in,class,loader,true
ConfigurableObjectInputStream -> public ConfigurableObjectInputStream(InputStream in, ClassLoader classLoader) throws IOException;1356735495;Create a new ConfigurableObjectInputStream for the given InputStream and ClassLoader._@param in the InputStream to read from_@param classLoader the ClassLoader to use for loading local classes_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public ConfigurableObjectInputStream(InputStream in, ClassLoader classLoader) throws IOException {_		this(in, classLoader, true)__	};create,a,new,configurable,object,input,stream,for,the,given,input,stream,and,class,loader,param,in,the,input,stream,to,read,from,param,class,loader,the,class,loader,to,use,for,loading,local,classes,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,configurable,object,input,stream,input,stream,in,class,loader,class,loader,throws,ioexception,this,in,class,loader,true
ConfigurableObjectInputStream -> public ConfigurableObjectInputStream(InputStream in, ClassLoader classLoader) throws IOException;1385412762;Create a new ConfigurableObjectInputStream for the given InputStream and ClassLoader._@param in the InputStream to read from_@param classLoader the ClassLoader to use for loading local classes_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public ConfigurableObjectInputStream(InputStream in, ClassLoader classLoader) throws IOException {_		this(in, classLoader, true)__	};create,a,new,configurable,object,input,stream,for,the,given,input,stream,and,class,loader,param,in,the,input,stream,to,read,from,param,class,loader,the,class,loader,to,use,for,loading,local,classes,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,configurable,object,input,stream,input,stream,in,class,loader,class,loader,throws,ioexception,this,in,class,loader,true
ConfigurableObjectInputStream -> public ConfigurableObjectInputStream(InputStream in, ClassLoader classLoader) throws IOException;1468948866;Create a new ConfigurableObjectInputStream for the given InputStream and ClassLoader._@param in the InputStream to read from_@param classLoader the ClassLoader to use for loading local classes_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public ConfigurableObjectInputStream(InputStream in, ClassLoader classLoader) throws IOException {_		this(in, classLoader, true)__	};create,a,new,configurable,object,input,stream,for,the,given,input,stream,and,class,loader,param,in,the,input,stream,to,read,from,param,class,loader,the,class,loader,to,use,for,loading,local,classes,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,configurable,object,input,stream,input,stream,in,class,loader,class,loader,throws,ioexception,this,in,class,loader,true
ConfigurableObjectInputStream -> public ConfigurableObjectInputStream(InputStream in, ClassLoader classLoader) throws IOException;1469047316;Create a new ConfigurableObjectInputStream for the given InputStream and ClassLoader._@param in the InputStream to read from_@param classLoader the ClassLoader to use for loading local classes_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public ConfigurableObjectInputStream(InputStream in, ClassLoader classLoader) throws IOException {_		this(in, classLoader, true)__	};create,a,new,configurable,object,input,stream,for,the,given,input,stream,and,class,loader,param,in,the,input,stream,to,read,from,param,class,loader,the,class,loader,to,use,for,loading,local,classes,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,configurable,object,input,stream,input,stream,in,class,loader,class,loader,throws,ioexception,this,in,class,loader,true
ConfigurableObjectInputStream -> public ConfigurableObjectInputStream(InputStream in, ClassLoader classLoader) throws IOException;1495868221;Create a new ConfigurableObjectInputStream for the given InputStream and ClassLoader._@param in the InputStream to read from_@param classLoader the ClassLoader to use for loading local classes_@see java.io.ObjectInputStream#ObjectInputStream(java.io.InputStream);public ConfigurableObjectInputStream(InputStream in, ClassLoader classLoader) throws IOException {_		this(in, classLoader, true)__	};create,a,new,configurable,object,input,stream,for,the,given,input,stream,and,class,loader,param,in,the,input,stream,to,read,from,param,class,loader,the,class,loader,to,use,for,loading,local,classes,see,java,io,object,input,stream,object,input,stream,java,io,input,stream;public,configurable,object,input,stream,input,stream,in,class,loader,class,loader,throws,ioexception,this,in,class,loader,true
ConfigurableObjectInputStream -> protected Class resolveFallbackIfPossible(String className, ClassNotFoundException ex) 			throws IOException, ClassNotFoundException;1328020251;Resolve the given class name against a fallback class loader._<p>The default implementation simply rethrows the original exception,_since there is no fallback available._@param className the class name to resolve_@param ex the original exception thrown when attempting to load the class_@return the newly resolved class (never <code>null</code>);protected Class resolveFallbackIfPossible(String className, ClassNotFoundException ex)_			throws IOException, ClassNotFoundException{__		throw ex__	};resolve,the,given,class,name,against,a,fallback,class,loader,p,the,default,implementation,simply,rethrows,the,original,exception,since,there,is,no,fallback,available,param,class,name,the,class,name,to,resolve,param,ex,the,original,exception,thrown,when,attempting,to,load,the,class,return,the,newly,resolved,class,never,code,null,code;protected,class,resolve,fallback,if,possible,string,class,name,class,not,found,exception,ex,throws,ioexception,class,not,found,exception,throw,ex
ConfigurableObjectInputStream -> protected Class resolveFallbackIfPossible(String className, ClassNotFoundException ex) 			throws IOException, ClassNotFoundException;1356735495;Resolve the given class name against a fallback class loader._<p>The default implementation simply rethrows the original exception,_since there is no fallback available._@param className the class name to resolve_@param ex the original exception thrown when attempting to load the class_@return the newly resolved class (never {@code null});protected Class resolveFallbackIfPossible(String className, ClassNotFoundException ex)_			throws IOException, ClassNotFoundException{__		throw ex__	};resolve,the,given,class,name,against,a,fallback,class,loader,p,the,default,implementation,simply,rethrows,the,original,exception,since,there,is,no,fallback,available,param,class,name,the,class,name,to,resolve,param,ex,the,original,exception,thrown,when,attempting,to,load,the,class,return,the,newly,resolved,class,never,code,null;protected,class,resolve,fallback,if,possible,string,class,name,class,not,found,exception,ex,throws,ioexception,class,not,found,exception,throw,ex
