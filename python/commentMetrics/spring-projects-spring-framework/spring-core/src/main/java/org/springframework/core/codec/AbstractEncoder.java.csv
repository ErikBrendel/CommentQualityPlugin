# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractEncoder -> public void setLogger(Log logger);1530975243;Set an alternative logger to use than the one based on the class name._@param logger the logger to use_@since 5.1;public void setLogger(Log logger) {_		this.logger = logger__	};set,an,alternative,logger,to,use,than,the,one,based,on,the,class,name,param,logger,the,logger,to,use,since,5,1;public,void,set,logger,log,logger,this,logger,logger
AbstractEncoder -> public void setLogger(Log logger);1549365291;Set an alternative logger to use than the one based on the class name._@param logger the logger to use_@since 5.1;public void setLogger(Log logger) {_		this.logger = logger__	};set,an,alternative,logger,to,use,than,the,one,based,on,the,class,name,param,logger,the,logger,to,use,since,5,1;public,void,set,logger,log,logger,this,logger,logger
AbstractEncoder -> public Log getLogger();1530975243;Return the currently configured Logger._@since 5.1;public Log getLogger() {_		return logger__	};return,the,currently,configured,logger,since,5,1;public,log,get,logger,return,logger
AbstractEncoder -> public Log getLogger();1549365291;Return the currently configured Logger._@since 5.1;public Log getLogger() {_		return logger__	};return,the,currently,configured,logger,since,5,1;public,log,get,logger,return,logger
AbstractEncoder -> protected Log getLogger(@Nullable Map<String, Object> hints);1529721864;Helper method to obtain the logger to use from the Map of hints, or fall_back on the default logger. This may be used for example to override_logging, e.g. for a multipart request where the full map of part values_has already been logged._@param hints the hints passed to the encode method_@return the logger to use_@since 5.1;protected Log getLogger(@Nullable Map<String, Object> hints) {_		return hints != null ? ((Log) hints.getOrDefault(Log.class.getName(), logger)) : logger__	};helper,method,to,obtain,the,logger,to,use,from,the,map,of,hints,or,fall,back,on,the,default,logger,this,may,be,used,for,example,to,override,logging,e,g,for,a,multipart,request,where,the,full,map,of,part,values,has,already,been,logged,param,hints,the,hints,passed,to,the,encode,method,return,the,logger,to,use,since,5,1;protected,log,get,logger,nullable,map,string,object,hints,return,hints,null,log,hints,get,or,default,log,class,get,name,logger,logger
AbstractEncoder -> protected Log getLogger(@Nullable Map<String, Object> hints);1530174524;Helper method to obtain the logger to use from the Map of hints, or fall_back on the default logger. This may be used for example to override_logging, e.g. for a multipart request where the full map of part values_has already been logged._@param hints the hints passed to the encode method_@return the logger to use_@since 5.1;protected Log getLogger(@Nullable Map<String, Object> hints) {_		return hints != null ? ((Log) hints.getOrDefault(Log.class.getName(), logger)) : logger__	};helper,method,to,obtain,the,logger,to,use,from,the,map,of,hints,or,fall,back,on,the,default,logger,this,may,be,used,for,example,to,override,logging,e,g,for,a,multipart,request,where,the,full,map,of,part,values,has,already,been,logged,param,hints,the,hints,passed,to,the,encode,method,return,the,logger,to,use,since,5,1;protected,log,get,logger,nullable,map,string,object,hints,return,hints,null,log,hints,get,or,default,log,class,get,name,logger,logger
