commented;modifiers;parameterAmount;loc;comment;code
true;;1;2;/**  * Return the first value for the given key.  * @param key the key  * @return the first value for the specified key, or {@code null} if none  */ ;/**  * Return the first value for the given key.  * @param key the key  * @return the first value for the specified key, or {@code null} if none  */ @Nullable V getFirst(K key).
true;;2;1;/**  * Add the given single value to the current list of values for the given key.  * @param key the key  * @param value the value to be added  */ ;/**  * Add the given single value to the current list of values for the given key.  * @param key the key  * @param value the value to be added  */ void add(K key, @Nullable V value).
true;;2;1;/**  * Add all the values of the given list to the current list of values for the given key.  * @param key they key  * @param values the values to be added  * @since 5.0  */ ;/**  * Add all the values of the given list to the current list of values for the given key.  * @param key they key  * @param values the values to be added  * @since 5.0  */ void addAll(K key, List<? extends V> values).
true;;1;1;/**  * Add all the values of the given {@code MultiValueMap} to the current values.  * @param values the values to be added  * @since 5.0  */ ;/**  * Add all the values of the given {@code MultiValueMap} to the current values.  * @param values the values to be added  * @since 5.0  */ void addAll(MultiValueMap<K, V> values).
true;;2;1;/**  * Set the given single value under the given key.  * @param key the key  * @param value the value to set  */ ;/**  * Set the given single value under the given key.  * @param key the key  * @param value the value to set  */ void set(K key, @Nullable V value).
true;;1;1;/**  * Set the given values under.  * @param values the values.  */ ;/**  * Set the given values under.  * @param values the values.  */ void setAll(Map<K, V> values).
true;;0;1;/**  * Return a {@code Map} with the first values contained in this {@code MultiValueMap}.  * @return a single value representation of this map  */ ;/**  * Return a {@code Map} with the first values contained in this {@code MultiValueMap}.  * @return a single value representation of this map  */ Map<K, V> toSingleValueMap().
