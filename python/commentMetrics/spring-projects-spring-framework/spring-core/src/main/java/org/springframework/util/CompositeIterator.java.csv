# id;timestamp;commentText;codeText;commentWords;codeWords
CompositeIterator -> public void add(Iterator<E> iterator);1328020251;Add given iterator to this composite.;public void add(Iterator<E> iterator) {_		Assert.state(!inUse, "You can no longer add iterator to a composite iterator that's already in use")__		if (iterators.contains(iterator)) {_			throw new IllegalArgumentException("You cannot add the same iterator twice")__		}_		iterators.add(iterator)__	};add,given,iterator,to,this,composite;public,void,add,iterator,e,iterator,assert,state,in,use,you,can,no,longer,add,iterator,to,a,composite,iterator,that,s,already,in,use,if,iterators,contains,iterator,throw,new,illegal,argument,exception,you,cannot,add,the,same,iterator,twice,iterators,add,iterator
CompositeIterator -> public void add(Iterator<E> iterator);1356735495;Add given iterator to this composite.;public void add(Iterator<E> iterator) {_		Assert.state(!inUse, "You can no longer add iterator to a composite iterator that's already in use")__		if (iterators.contains(iterator)) {_			throw new IllegalArgumentException("You cannot add the same iterator twice")__		}_		iterators.add(iterator)__	};add,given,iterator,to,this,composite;public,void,add,iterator,e,iterator,assert,state,in,use,you,can,no,longer,add,iterator,to,a,composite,iterator,that,s,already,in,use,if,iterators,contains,iterator,throw,new,illegal,argument,exception,you,cannot,add,the,same,iterator,twice,iterators,add,iterator
CompositeIterator -> public void add(Iterator<E> iterator);1357119239;Add given iterator to this composite.;public void add(Iterator<E> iterator) {_		Assert.state(!inUse, "You can no longer add iterator to a composite iterator that's already in use")__		if (iterators.contains(iterator)) {_			throw new IllegalArgumentException("You cannot add the same iterator twice")__		}_		iterators.add(iterator)__	};add,given,iterator,to,this,composite;public,void,add,iterator,e,iterator,assert,state,in,use,you,can,no,longer,add,iterator,to,a,composite,iterator,that,s,already,in,use,if,iterators,contains,iterator,throw,new,illegal,argument,exception,you,cannot,add,the,same,iterator,twice,iterators,add,iterator
CompositeIterator -> public void add(Iterator<E> iterator);1362408075;Add given iterator to this composite.;public void add(Iterator<E> iterator) {_		Assert.state(!inUse, "You can no longer add iterator to a composite iterator that's already in use")__		if (iterators.contains(iterator)) {_			throw new IllegalArgumentException("You cannot add the same iterator twice")__		}_		iterators.add(iterator)__	};add,given,iterator,to,this,composite;public,void,add,iterator,e,iterator,assert,state,in,use,you,can,no,longer,add,iterator,to,a,composite,iterator,that,s,already,in,use,if,iterators,contains,iterator,throw,new,illegal,argument,exception,you,cannot,add,the,same,iterator,twice,iterators,add,iterator
CompositeIterator -> public void add(Iterator<E> iterator);1368482696;Add given iterator to this composite.;public void add(Iterator<E> iterator) {_		Assert.state(!inUse, "You can no longer add iterator to a composite iterator that's already in use")__		if (iterators.contains(iterator)) {_			throw new IllegalArgumentException("You cannot add the same iterator twice")__		}_		iterators.add(iterator)__	};add,given,iterator,to,this,composite;public,void,add,iterator,e,iterator,assert,state,in,use,you,can,no,longer,add,iterator,to,a,composite,iterator,that,s,already,in,use,if,iterators,contains,iterator,throw,new,illegal,argument,exception,you,cannot,add,the,same,iterator,twice,iterators,add,iterator
CompositeIterator -> public void add(Iterator<E> iterator);1385423968;Add given iterator to this composite.;public void add(Iterator<E> iterator) {_		Assert.state(!inUse, "You can no longer add iterator to a composite iterator that's already in use")__		if (iterators.contains(iterator)) {_			throw new IllegalArgumentException("You cannot add the same iterator twice")__		}_		iterators.add(iterator)__	};add,given,iterator,to,this,composite;public,void,add,iterator,e,iterator,assert,state,in,use,you,can,no,longer,add,iterator,to,a,composite,iterator,that,s,already,in,use,if,iterators,contains,iterator,throw,new,illegal,argument,exception,you,cannot,add,the,same,iterator,twice,iterators,add,iterator
CompositeIterator -> public void add(Iterator<E> iterator);1401911363;Add given iterator to this composite.;public void add(Iterator<E> iterator) {_		Assert.state(!this.inUse, "You can no longer add iterators to a composite iterator that's already in use")__		if (this.iterators.contains(iterator)) {_			throw new IllegalArgumentException("You cannot add the same iterator twice")__		}_		this.iterators.add(iterator)__	};add,given,iterator,to,this,composite;public,void,add,iterator,e,iterator,assert,state,this,in,use,you,can,no,longer,add,iterators,to,a,composite,iterator,that,s,already,in,use,if,this,iterators,contains,iterator,throw,new,illegal,argument,exception,you,cannot,add,the,same,iterator,twice,this,iterators,add,iterator
CompositeIterator -> public void add(Iterator<E> iterator);1467730834;Add given iterator to this composite.;public void add(Iterator<E> iterator) {_		Assert.state(!this.inUse, "You can no longer add iterators to a composite iterator that's already in use")__		if (this.iterators.contains(iterator)) {_			throw new IllegalArgumentException("You cannot add the same iterator twice")__		}_		this.iterators.add(iterator)__	};add,given,iterator,to,this,composite;public,void,add,iterator,e,iterator,assert,state,this,in,use,you,can,no,longer,add,iterators,to,a,composite,iterator,that,s,already,in,use,if,this,iterators,contains,iterator,throw,new,illegal,argument,exception,you,cannot,add,the,same,iterator,twice,this,iterators,add,iterator
CompositeIterator -> public void add(Iterator<E> iterator);1530174524;Add given iterator to this composite.;public void add(Iterator<E> iterator) {_		Assert.state(!this.inUse, "You can no longer add iterators to a composite iterator that's already in use")__		if (this.iterators.contains(iterator)) {_			throw new IllegalArgumentException("You cannot add the same iterator twice")__		}_		this.iterators.add(iterator)__	};add,given,iterator,to,this,composite;public,void,add,iterator,e,iterator,assert,state,this,in,use,you,can,no,longer,add,iterators,to,a,composite,iterator,that,s,already,in,use,if,this,iterators,contains,iterator,throw,new,illegal,argument,exception,you,cannot,add,the,same,iterator,twice,this,iterators,add,iterator
CompositeIterator -> public CompositeIterator();1328020251;Create a new composite iterator. Add iterators using the {@link #add(Iterator)} method.;public CompositeIterator() {_	};create,a,new,composite,iterator,add,iterators,using,the,link,add,iterator,method;public,composite,iterator
CompositeIterator -> public CompositeIterator();1356735495;Create a new composite iterator. Add iterators using the {@link #add(Iterator)} method.;public CompositeIterator() {_	};create,a,new,composite,iterator,add,iterators,using,the,link,add,iterator,method;public,composite,iterator
CompositeIterator -> public CompositeIterator();1357119239;Create a new composite iterator. Add iterators using the {@link #add(Iterator)} method.;public CompositeIterator() {_	};create,a,new,composite,iterator,add,iterators,using,the,link,add,iterator,method;public,composite,iterator
CompositeIterator -> public CompositeIterator();1362408075;Create a new composite iterator. Add iterators using the {@link #add(Iterator)} method.;public CompositeIterator() {_	};create,a,new,composite,iterator,add,iterators,using,the,link,add,iterator,method;public,composite,iterator
CompositeIterator -> public CompositeIterator();1368482696;Create a new composite iterator. Add iterators using the {@link #add(Iterator)} method.;public CompositeIterator() {_	};create,a,new,composite,iterator,add,iterators,using,the,link,add,iterator,method;public,composite,iterator
CompositeIterator -> public CompositeIterator();1385423968;Create a new composite iterator. Add iterators using the {@link #add(Iterator)} method.;public CompositeIterator() {_	};create,a,new,composite,iterator,add,iterators,using,the,link,add,iterator,method;public,composite,iterator
