# id;timestamp;commentText;codeText;commentWords;codeWords
ConvertingPropertyEditorAdapter -> public ConvertingPropertyEditorAdapter(ConversionService conversionService, TypeDescriptor targetDescriptor);1328020251;Create a new ConvertingPropertyEditorAdapter for a given_{@link org.springframework.core.convert.ConversionService}_and the given target type._@param conversionService the ConversionService to delegate to_@param targetDescriptor the target type to convert to;public ConvertingPropertyEditorAdapter(ConversionService conversionService, TypeDescriptor targetDescriptor) {_		Assert.notNull(conversionService, "ConversionService must not be null")__		Assert.notNull(targetDescriptor, "TypeDescriptor must not be null")__		this.conversionService = conversionService__		this.targetDescriptor = targetDescriptor__		this.canConvertToString = conversionService.canConvert(this.targetDescriptor, TypeDescriptor.valueOf(String.class))__	};create,a,new,converting,property,editor,adapter,for,a,given,link,org,springframework,core,convert,conversion,service,and,the,given,target,type,param,conversion,service,the,conversion,service,to,delegate,to,param,target,descriptor,the,target,type,to,convert,to;public,converting,property,editor,adapter,conversion,service,conversion,service,type,descriptor,target,descriptor,assert,not,null,conversion,service,conversion,service,must,not,be,null,assert,not,null,target,descriptor,type,descriptor,must,not,be,null,this,conversion,service,conversion,service,this,target,descriptor,target,descriptor,this,can,convert,to,string,conversion,service,can,convert,this,target,descriptor,type,descriptor,value,of,string,class
ConvertingPropertyEditorAdapter -> public ConvertingPropertyEditorAdapter(ConversionService conversionService, TypeDescriptor targetDescriptor);1496837955;Create a new ConvertingPropertyEditorAdapter for a given_{@link org.springframework.core.convert.ConversionService}_and the given target type._@param conversionService the ConversionService to delegate to_@param targetDescriptor the target type to convert to;public ConvertingPropertyEditorAdapter(ConversionService conversionService, TypeDescriptor targetDescriptor) {_		Assert.notNull(conversionService, "ConversionService must not be null")__		Assert.notNull(targetDescriptor, "TypeDescriptor must not be null")__		this.conversionService = conversionService__		this.targetDescriptor = targetDescriptor__		this.canConvertToString = conversionService.canConvert(this.targetDescriptor, TypeDescriptor.valueOf(String.class))__	};create,a,new,converting,property,editor,adapter,for,a,given,link,org,springframework,core,convert,conversion,service,and,the,given,target,type,param,conversion,service,the,conversion,service,to,delegate,to,param,target,descriptor,the,target,type,to,convert,to;public,converting,property,editor,adapter,conversion,service,conversion,service,type,descriptor,target,descriptor,assert,not,null,conversion,service,conversion,service,must,not,be,null,assert,not,null,target,descriptor,type,descriptor,must,not,be,null,this,conversion,service,conversion,service,this,target,descriptor,target,descriptor,this,can,convert,to,string,conversion,service,can,convert,this,target,descriptor,type,descriptor,value,of,string,class
ConvertingPropertyEditorAdapter -> public ConvertingPropertyEditorAdapter(ConversionService conversionService, TypeDescriptor targetDescriptor);1500448076;Create a new ConvertingPropertyEditorAdapter for a given_{@link org.springframework.core.convert.ConversionService}_and the given target type._@param conversionService the ConversionService to delegate to_@param targetDescriptor the target type to convert to;public ConvertingPropertyEditorAdapter(ConversionService conversionService, TypeDescriptor targetDescriptor) {_		Assert.notNull(conversionService, "ConversionService must not be null")__		Assert.notNull(targetDescriptor, "TypeDescriptor must not be null")__		this.conversionService = conversionService__		this.targetDescriptor = targetDescriptor__		this.canConvertToString = conversionService.canConvert(this.targetDescriptor, TypeDescriptor.valueOf(String.class))__	};create,a,new,converting,property,editor,adapter,for,a,given,link,org,springframework,core,convert,conversion,service,and,the,given,target,type,param,conversion,service,the,conversion,service,to,delegate,to,param,target,descriptor,the,target,type,to,convert,to;public,converting,property,editor,adapter,conversion,service,conversion,service,type,descriptor,target,descriptor,assert,not,null,conversion,service,conversion,service,must,not,be,null,assert,not,null,target,descriptor,type,descriptor,must,not,be,null,this,conversion,service,conversion,service,this,target,descriptor,target,descriptor,this,can,convert,to,string,conversion,service,can,convert,this,target,descriptor,type,descriptor,value,of,string,class
