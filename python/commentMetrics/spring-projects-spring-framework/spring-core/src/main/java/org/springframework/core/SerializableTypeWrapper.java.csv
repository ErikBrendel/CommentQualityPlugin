# id;timestamp;commentText;codeText;commentWords;codeWords
SerializableTypeWrapper -> public static Type[] forGenericInterfaces(final Class<?> type);1381992351;Return a {@link Serializable} variant of {@link Class#getGenericInterfaces()}.;public static Type[] forGenericInterfaces(final Class<?> type) {_		Type[] result = new Type[type.getGenericInterfaces().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new TypeProvider() {_				@Override_				public Type getType() {_					return type.getGenericInterfaces()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,generic,interfaces;public,static,type,for,generic,interfaces,final,class,type,type,result,new,type,type,get,generic,interfaces,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,type,provider,override,public,type,get,type,return,type,get,generic,interfaces,index,return,result
SerializableTypeWrapper -> public static Type[] forGenericInterfaces(final Class<?> type);1382042882;Return a {@link Serializable} variant of {@link Class#getGenericInterfaces()}.;public static Type[] forGenericInterfaces(final Class<?> type) {_		Type[] result = new Type[type.getGenericInterfaces().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new TypeProvider() {__				private static final long serialVersionUID = 1L____				@Override_				public Type getType() {_					return type.getGenericInterfaces()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,generic,interfaces;public,static,type,for,generic,interfaces,final,class,type,type,result,new,type,type,get,generic,interfaces,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,type,provider,private,static,final,long,serial,version,uid,1l,override,public,type,get,type,return,type,get,generic,interfaces,index,return,result
SerializableTypeWrapper -> public static Type[] forGenericInterfaces(final Class<?> type);1382750081;Return a {@link Serializable} variant of {@link Class#getGenericInterfaces()}.;public static Type[] forGenericInterfaces(final Class<?> type) {_		Type[] result = new Type[type.getGenericInterfaces().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {__				private static final long serialVersionUID = 1L____				@Override_				public Type getType() {_					return type.getGenericInterfaces()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,generic,interfaces;public,static,type,for,generic,interfaces,final,class,type,type,result,new,type,type,get,generic,interfaces,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,private,static,final,long,serial,version,uid,1l,override,public,type,get,type,return,type,get,generic,interfaces,index,return,result
SerializableTypeWrapper -> private static Type forTypeProvider(final TypeProvider provider);1381992351;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} .;private static Type forTypeProvider(final TypeProvider provider) {_		Assert.notNull(provider, "Provider must not be null")__		if (provider.getType() instanceof Serializable || provider.getType() == null) {_			return provider.getType()__		}_		for (Class<?> type : SUPPORTED_SERIALAZABLE_TYPES) {_			if (type.isAssignableFrom(provider.getType().getClass())) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] { type, Serializable.class }__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				return (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__			}_		}_		throw new IllegalArgumentException("Unsupported Type class "_				+ provider.getType().getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider;private,static,type,for,type,provider,final,type,provider,provider,assert,not,null,provider,provider,must,not,be,null,if,provider,get,type,instanceof,serializable,provider,get,type,null,return,provider,get,type,for,class,type,if,type,is,assignable,from,provider,get,type,get,class,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,return,type,proxy,new,proxy,instance,class,loader,interfaces,handler,throw,new,illegal,argument,exception,unsupported,type,class,provider,get,type,get,class,get,name
SerializableTypeWrapper -> private static Type forTypeProvider(final TypeProvider provider);1382042882;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} .;private static Type forTypeProvider(final TypeProvider provider) {_		Assert.notNull(provider, "Provider must not be null")__		if (provider.getType() instanceof Serializable || provider.getType() == null) {_			return provider.getType()__		}_		for (Class<?> type : SUPPORTED_SERIALAZABLE_TYPES) {_			if (type.isAssignableFrom(provider.getType().getClass())) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] { type, Serializable.class }__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				return (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__			}_		}_		throw new IllegalArgumentException("Unsupported Type class "_				+ provider.getType().getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider;private,static,type,for,type,provider,final,type,provider,provider,assert,not,null,provider,provider,must,not,be,null,if,provider,get,type,instanceof,serializable,provider,get,type,null,return,provider,get,type,for,class,type,if,type,is,assignable,from,provider,get,type,get,class,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,return,type,proxy,new,proxy,instance,class,loader,interfaces,handler,throw,new,illegal,argument,exception,unsupported,type,class,provider,get,type,get,class,get,name
SerializableTypeWrapper -> public static Type forGenericSuperclass(final Class<?> type);1381992351;Return a {@link Serializable} variant of {@link Class#getGenericSuperclass()}.;public static Type forGenericSuperclass(final Class<?> type) {_		return forTypeProvider(new TypeProvider() {_			@Override_			public Type getType() {_				return type.getGenericSuperclass()__			}_		})__	};return,a,link,serializable,variant,of,link,class,get,generic,superclass;public,static,type,for,generic,superclass,final,class,type,return,for,type,provider,new,type,provider,override,public,type,get,type,return,type,get,generic,superclass
SerializableTypeWrapper -> public static Type forGenericSuperclass(final Class<?> type);1382042882;Return a {@link Serializable} variant of {@link Class#getGenericSuperclass()}.;public static Type forGenericSuperclass(final Class<?> type) {_		return forTypeProvider(new TypeProvider() {__			private static final long serialVersionUID = 1L____			@Override_			public Type getType() {_				return type.getGenericSuperclass()__			}_		})__	};return,a,link,serializable,variant,of,link,class,get,generic,superclass;public,static,type,for,generic,superclass,final,class,type,return,for,type,provider,new,type,provider,private,static,final,long,serial,version,uid,1l,override,public,type,get,type,return,type,get,generic,superclass
SerializableTypeWrapper -> public static Type forGenericSuperclass(final Class<?> type);1382750081;Return a {@link Serializable} variant of {@link Class#getGenericSuperclass()}.;public static Type forGenericSuperclass(final Class<?> type) {_		return forTypeProvider(new DefaultTypeProvider() {__			private static final long serialVersionUID = 1L____			@Override_			public Type getType() {_				return type.getGenericSuperclass()__			}_		})__	};return,a,link,serializable,variant,of,link,class,get,generic,superclass;public,static,type,for,generic,superclass,final,class,type,return,for,type,provider,new,default,type,provider,private,static,final,long,serial,version,uid,1l,override,public,type,get,type,return,type,get,generic,superclass
SerializableTypeWrapper -> TypeProvider -> @Nullable 		default Object getSource();1495868221;Return the source of the type, or {@code null} if not known._<p>The default implementations returns {@code null}.;@Nullable_		default Object getSource() {_			return null__		};return,the,source,of,the,type,or,code,null,if,not,known,p,the,default,implementations,returns,code,null;nullable,default,object,get,source,return,null
SerializableTypeWrapper -> TypeProvider -> @Nullable 		default Object getSource();1496837955;Return the source of the type, or {@code null} if not known._<p>The default implementations returns {@code null}.;@Nullable_		default Object getSource() {_			return null__		};return,the,source,of,the,type,or,code,null,if,not,known,p,the,default,implementations,returns,code,null;nullable,default,object,get,source,return,null
SerializableTypeWrapper -> TypeProvider -> @Nullable 		default Object getSource();1496955179;Return the source of the type, or {@code null} if not known._<p>The default implementations returns {@code null}.;@Nullable_		default Object getSource() {_			return null__		};return,the,source,of,the,type,or,code,null,if,not,known,p,the,default,implementations,returns,code,null;nullable,default,object,get,source,return,null
SerializableTypeWrapper -> TypeProvider -> @Nullable 		default Object getSource();1498780456;Return the source of the type, or {@code null} if not known._<p>The default implementations returns {@code null}.;@Nullable_		default Object getSource() {_			return null__		};return,the,source,of,the,type,or,code,null,if,not,known,p,the,default,implementations,returns,code,null;nullable,default,object,get,source,return,null
SerializableTypeWrapper -> TypeProvider -> @Nullable 		default Object getSource();1502974979;Return the source of the type, or {@code null} if not known._<p>The default implementations returns {@code null}.;@Nullable_		default Object getSource() {_			return null__		};return,the,source,of,the,type,or,code,null,if,not,known,p,the,default,implementations,returns,code,null;nullable,default,object,get,source,return,null
SerializableTypeWrapper -> TypeProvider -> @Nullable 		default Object getSource();1530174524;Return the source of the type, or {@code null} if not known._<p>The default implementations returns {@code null}.;@Nullable_		default Object getSource() {_			return null__		};return,the,source,of,the,type,or,code,null,if,not,known,p,the,default,implementations,returns,code,null;nullable,default,object,get,source,return,null
SerializableTypeWrapper -> TypeProvider -> @Nullable 		default Object getSource();1530532503;Return the source of the type, or {@code null} if not known._<p>The default implementations returns {@code null}.;@Nullable_		default Object getSource() {_			return null__		};return,the,source,of,the,type,or,code,null,if,not,known,p,the,default,implementations,returns,code,null;nullable,default,object,get,source,return,null
SerializableTypeWrapper -> TypeProvider -> @Nullable 		default Object getSource();1530563549;Return the source of the type, or {@code null} if not known._<p>The default implementations returns {@code null}.;@Nullable_		default Object getSource() {_			return null__		};return,the,source,of,the,type,or,code,null,if,not,known,p,the,default,implementations,returns,code,null;nullable,default,object,get,source,return,null
SerializableTypeWrapper -> TypeProvider -> @Nullable 		default Object getSource();1532274593;Return the source of the type, or {@code null} if not known._<p>The default implementations returns {@code null}.;@Nullable_		default Object getSource() {_			return null__		};return,the,source,of,the,type,or,code,null,if,not,known,p,the,default,implementations,returns,code,null;nullable,default,object,get,source,return,null
SerializableTypeWrapper -> TypeProvider -> @Nullable 		default Object getSource();1533633343;Return the source of the type, or {@code null} if not known._<p>The default implementations returns {@code null}.;@Nullable_		default Object getSource() {_			return null__		};return,the,source,of,the,type,or,code,null,if,not,known,p,the,default,implementations,returns,code,null;nullable,default,object,get,source,return,null
SerializableTypeWrapper -> public static Type forField(Field field);1381992351;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;public static Type forField(Field field) {_		Assert.notNull(field, "Field must not be null")__		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;public,static,type,for,field,field,field,assert,not,null,field,field,must,not,be,null,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> public static Type forField(Field field);1382042882;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;public static Type forField(Field field) {_		Assert.notNull(field, "Field must not be null")__		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;public,static,type,for,field,field,field,assert,not,null,field,field,must,not,be,null,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> public static Type forField(Field field);1382750081;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;public static Type forField(Field field) {_		Assert.notNull(field, "Field must not be null")__		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;public,static,type,for,field,field,field,assert,not,null,field,field,must,not,be,null,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> public static Type forField(Field field);1387307647;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;public static Type forField(Field field) {_		Assert.notNull(field, "Field must not be null")__		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;public,static,type,for,field,field,field,assert,not,null,field,field,must,not,be,null,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> public static Type forField(Field field);1390330765;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;public static Type forField(Field field) {_		Assert.notNull(field, "Field must not be null")__		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;public,static,type,for,field,field,field,assert,not,null,field,field,must,not,be,null,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> public static Type forField(Field field);1390349402;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;public static Type forField(Field field) {_		Assert.notNull(field, "Field must not be null")__		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;public,static,type,for,field,field,field,assert,not,null,field,field,must,not,be,null,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> public static Type forField(Field field);1392766048;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;public static Type forField(Field field) {_		Assert.notNull(field, "Field must not be null")__		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;public,static,type,for,field,field,field,assert,not,null,field,field,must,not,be,null,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> public static Type forField(Field field);1405696918;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;public static Type forField(Field field) {_		Assert.notNull(field, "Field must not be null")__		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;public,static,type,for,field,field,field,assert,not,null,field,field,must,not,be,null,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> public static Type forField(Field field);1413848647;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;public static Type forField(Field field) {_		Assert.notNull(field, "Field must not be null")__		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;public,static,type,for,field,field,field,assert,not,null,field,field,must,not,be,null,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> public static Type forField(Field field);1432125256;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;public static Type forField(Field field) {_		Assert.notNull(field, "Field must not be null")__		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;public,static,type,for,field,field,field,assert,not,null,field,field,must,not,be,null,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> public static Type forField(Field field);1446566203;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;public static Type forField(Field field) {_		Assert.notNull(field, "Field must not be null")__		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;public,static,type,for,field,field,field,assert,not,null,field,field,must,not,be,null,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> public static Type forField(Field field);1447010826;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;public static Type forField(Field field) {_		Assert.notNull(field, "Field must not be null")__		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;public,static,type,for,field,field,field,assert,not,null,field,field,must,not,be,null,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> public static Type forField(Field field);1447541559;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;public static Type forField(Field field) {_		Assert.notNull(field, "Field must not be null")__		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;public,static,type,for,field,field,field,assert,not,null,field,field,must,not,be,null,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> public static Type forField(Field field);1467730834;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;public static Type forField(Field field) {_		Assert.notNull(field, "Field must not be null")__		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;public,static,type,for,field,field,field,assert,not,null,field,field,must,not,be,null,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> public static Type forField(Field field);1468948952;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;public static Type forField(Field field) {_		Assert.notNull(field, "Field must not be null")__		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;public,static,type,for,field,field,field,assert,not,null,field,field,must,not,be,null,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> public static Type forField(Field field);1485810955;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;public static Type forField(Field field) {_		Assert.notNull(field, "Field must not be null")__		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;public,static,type,for,field,field,field,assert,not,null,field,field,must,not,be,null,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> public static Type forField(Field field);1493752435;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;public static Type forField(Field field) {_		Assert.notNull(field, "Field must not be null")__		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;public,static,type,for,field,field,field,assert,not,null,field,field,must,not,be,null,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> public static Type forField(Field field);1495868221;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;public static Type forField(Field field) {_		Assert.notNull(field, "Field must not be null")__		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;public,static,type,for,field,field,field,assert,not,null,field,field,must,not,be,null,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> static Type forTypeProvider(final TypeProvider provider);1382750081;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} .;static Type forTypeProvider(final TypeProvider provider) {_		Assert.notNull(provider, "Provider must not be null")__		if (provider.getType() instanceof Serializable || provider.getType() == null) {_			return provider.getType()__		}_		for (Class<?> type : SUPPORTED_SERIALAZABLE_TYPES) {_			if (type.isAssignableFrom(provider.getType().getClass())) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] { type, Serializable.class }__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				return (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__			}_		}_		throw new IllegalArgumentException("Unsupported Type class "_				+ provider.getType().getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider;static,type,for,type,provider,final,type,provider,provider,assert,not,null,provider,provider,must,not,be,null,if,provider,get,type,instanceof,serializable,provider,get,type,null,return,provider,get,type,for,class,type,if,type,is,assignable,from,provider,get,type,get,class,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,return,type,proxy,new,proxy,instance,class,loader,interfaces,handler,throw,new,illegal,argument,exception,unsupported,type,class,provider,get,type,get,class,get,name
SerializableTypeWrapper -> static Type forTypeProvider(final TypeProvider provider);1387307647;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} .;static Type forTypeProvider(final TypeProvider provider) {_		Assert.notNull(provider, "Provider must not be null")__		if (provider.getType() instanceof Serializable || provider.getType() == null) {_			return provider.getType()__		}_		for (Class<?> type : SUPPORTED_SERIALIZABLE_TYPES) {_			if (type.isAssignableFrom(provider.getType().getClass())) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] { type, Serializable.class }__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				return (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__			}_		}_		throw new IllegalArgumentException("Unsupported Type class " + provider.getType().getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider;static,type,for,type,provider,final,type,provider,provider,assert,not,null,provider,provider,must,not,be,null,if,provider,get,type,instanceof,serializable,provider,get,type,null,return,provider,get,type,for,class,type,if,type,is,assignable,from,provider,get,type,get,class,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,return,type,proxy,new,proxy,instance,class,loader,interfaces,handler,throw,new,illegal,argument,exception,unsupported,type,class,provider,get,type,get,class,get,name
SerializableTypeWrapper -> static Type forTypeProvider(final TypeProvider provider);1390330765;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} .;static Type forTypeProvider(final TypeProvider provider) {_		Assert.notNull(provider, "Provider must not be null")__		if (provider.getType() instanceof Serializable || provider.getType() == null) {_			return provider.getType()__		}_		for (Class<?> type : SUPPORTED_SERIALIZABLE_TYPES) {_			if (type.isAssignableFrom(provider.getType().getClass())) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] { type,_					SerializableTypeProxy.class, Serializable.class }__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				return (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__			}_		}_		throw new IllegalArgumentException("Unsupported Type class " + provider.getType().getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider;static,type,for,type,provider,final,type,provider,provider,assert,not,null,provider,provider,must,not,be,null,if,provider,get,type,instanceof,serializable,provider,get,type,null,return,provider,get,type,for,class,type,if,type,is,assignable,from,provider,get,type,get,class,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,type,proxy,class,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,return,type,proxy,new,proxy,instance,class,loader,interfaces,handler,throw,new,illegal,argument,exception,unsupported,type,class,provider,get,type,get,class,get,name
SerializableTypeWrapper -> static Type forTypeProvider(final TypeProvider provider);1390349402;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} .;static Type forTypeProvider(final TypeProvider provider) {_		Assert.notNull(provider, "Provider must not be null")__		if (provider.getType() instanceof Serializable || provider.getType() == null) {_			return provider.getType()__		}_		for (Class<?> type : SUPPORTED_SERIALIZABLE_TYPES) {_			if (type.isAssignableFrom(provider.getType().getClass())) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] { type,_					SerializableTypeProxy.class, Serializable.class }__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				return (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__			}_		}_		throw new IllegalArgumentException("Unsupported Type class " + provider.getType().getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider;static,type,for,type,provider,final,type,provider,provider,assert,not,null,provider,provider,must,not,be,null,if,provider,get,type,instanceof,serializable,provider,get,type,null,return,provider,get,type,for,class,type,if,type,is,assignable,from,provider,get,type,get,class,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,type,proxy,class,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,return,type,proxy,new,proxy,instance,class,loader,interfaces,handler,throw,new,illegal,argument,exception,unsupported,type,class,provider,get,type,get,class,get,name
SerializableTypeWrapper -> static Type forTypeProvider(final TypeProvider provider);1392766048;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} .;static Type forTypeProvider(final TypeProvider provider) {_		Assert.notNull(provider, "Provider must not be null")__		if (provider.getType() instanceof Serializable || provider.getType() == null) {_			return provider.getType()__		}_		Type cached = cache.get(provider.getType())__		if(cached != null) {_			return cached__		}_		for (Class<?> type : SUPPORTED_SERIALIZABLE_TYPES) {_			if (type.isAssignableFrom(provider.getType().getClass())) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] { type,_					SerializableTypeProxy.class, Serializable.class }__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				cached = (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__				cache.put(provider.getType(), cached)__				return cached__			}_		}_		throw new IllegalArgumentException("Unsupported Type class " + provider.getType().getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider;static,type,for,type,provider,final,type,provider,provider,assert,not,null,provider,provider,must,not,be,null,if,provider,get,type,instanceof,serializable,provider,get,type,null,return,provider,get,type,type,cached,cache,get,provider,get,type,if,cached,null,return,cached,for,class,type,if,type,is,assignable,from,provider,get,type,get,class,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,type,proxy,class,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,cached,type,proxy,new,proxy,instance,class,loader,interfaces,handler,cache,put,provider,get,type,cached,return,cached,throw,new,illegal,argument,exception,unsupported,type,class,provider,get,type,get,class,get,name
SerializableTypeWrapper -> static Type forTypeProvider(final TypeProvider provider);1405696918;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} .;static Type forTypeProvider(final TypeProvider provider) {_		Assert.notNull(provider, "Provider must not be null")__		if (provider.getType() instanceof Serializable || provider.getType() == null) {_			return provider.getType()__		}_		Type cached = cache.get(provider.getType())__		if (cached != null) {_			return cached__		}_		for (Class<?> type : SUPPORTED_SERIALIZABLE_TYPES) {_			if (type.isAssignableFrom(provider.getType().getClass())) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] { type,_					SerializableTypeProxy.class, Serializable.class }__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				cached = (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__				cache.put(provider.getType(), cached)__				return cached__			}_		}_		throw new IllegalArgumentException("Unsupported Type class " + provider.getType().getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider;static,type,for,type,provider,final,type,provider,provider,assert,not,null,provider,provider,must,not,be,null,if,provider,get,type,instanceof,serializable,provider,get,type,null,return,provider,get,type,type,cached,cache,get,provider,get,type,if,cached,null,return,cached,for,class,type,if,type,is,assignable,from,provider,get,type,get,class,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,type,proxy,class,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,cached,type,proxy,new,proxy,instance,class,loader,interfaces,handler,cache,put,provider,get,type,cached,return,cached,throw,new,illegal,argument,exception,unsupported,type,class,provider,get,type,get,class,get,name
SerializableTypeWrapper -> static Type forTypeProvider(final TypeProvider provider);1413848647;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} .;static Type forTypeProvider(final TypeProvider provider) {_		Assert.notNull(provider, "Provider must not be null")__		if (provider.getType() instanceof Serializable || provider.getType() == null) {_			return provider.getType()__		}_		Type cached = cache.get(provider.getType())__		if (cached != null) {_			return cached__		}_		for (Class<?> type : SUPPORTED_SERIALIZABLE_TYPES) {_			if (type.isAssignableFrom(provider.getType().getClass())) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] { type,_					SerializableTypeProxy.class, Serializable.class }__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				cached = (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__				cache.put(provider.getType(), cached)__				return cached__			}_		}_		throw new IllegalArgumentException("Unsupported Type class " + provider.getType().getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider;static,type,for,type,provider,final,type,provider,provider,assert,not,null,provider,provider,must,not,be,null,if,provider,get,type,instanceof,serializable,provider,get,type,null,return,provider,get,type,type,cached,cache,get,provider,get,type,if,cached,null,return,cached,for,class,type,if,type,is,assignable,from,provider,get,type,get,class,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,type,proxy,class,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,cached,type,proxy,new,proxy,instance,class,loader,interfaces,handler,cache,put,provider,get,type,cached,return,cached,throw,new,illegal,argument,exception,unsupported,type,class,provider,get,type,get,class,get,name
SerializableTypeWrapper -> static Type forTypeProvider(final TypeProvider provider);1432125256;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} .;static Type forTypeProvider(final TypeProvider provider) {_		Assert.notNull(provider, "Provider must not be null")__		if (provider.getType() instanceof Serializable || provider.getType() == null) {_			return provider.getType()__		}_		Type cached = cache.get(provider.getType())__		if (cached != null) {_			return cached__		}_		for (Class<?> type : SUPPORTED_SERIALIZABLE_TYPES) {_			if (type.isAssignableFrom(provider.getType().getClass())) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] { type,_					SerializableTypeProxy.class, Serializable.class }__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				cached = (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__				cache.put(provider.getType(), cached)__				return cached__			}_		}_		throw new IllegalArgumentException("Unsupported Type class " + provider.getType().getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider;static,type,for,type,provider,final,type,provider,provider,assert,not,null,provider,provider,must,not,be,null,if,provider,get,type,instanceof,serializable,provider,get,type,null,return,provider,get,type,type,cached,cache,get,provider,get,type,if,cached,null,return,cached,for,class,type,if,type,is,assignable,from,provider,get,type,get,class,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,type,proxy,class,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,cached,type,proxy,new,proxy,instance,class,loader,interfaces,handler,cache,put,provider,get,type,cached,return,cached,throw,new,illegal,argument,exception,unsupported,type,class,provider,get,type,get,class,get,name
SerializableTypeWrapper -> static Type forTypeProvider(final TypeProvider provider);1446566203;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} .;static Type forTypeProvider(final TypeProvider provider) {_		Assert.notNull(provider, "Provider must not be null")__		if (provider.getType() instanceof Serializable || provider.getType() == null) {_			return provider.getType()__		}_		Type cached = cache.get(provider.getType())__		if (cached != null) {_			return cached__		}_		for (Class<?> type : SUPPORTED_SERIALIZABLE_TYPES) {_			if (type.isAssignableFrom(provider.getType().getClass())) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] {type, SerializableTypeProxy.class, Serializable.class}__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				cached = (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__				cache.put(provider.getType(), cached)__				return cached__			}_		}_		throw new IllegalArgumentException("Unsupported Type class: " + provider.getType().getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider;static,type,for,type,provider,final,type,provider,provider,assert,not,null,provider,provider,must,not,be,null,if,provider,get,type,instanceof,serializable,provider,get,type,null,return,provider,get,type,type,cached,cache,get,provider,get,type,if,cached,null,return,cached,for,class,type,if,type,is,assignable,from,provider,get,type,get,class,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,type,proxy,class,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,cached,type,proxy,new,proxy,instance,class,loader,interfaces,handler,cache,put,provider,get,type,cached,return,cached,throw,new,illegal,argument,exception,unsupported,type,class,provider,get,type,get,class,get,name
SerializableTypeWrapper -> static Type forTypeProvider(final TypeProvider provider);1447010826;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} .;static Type forTypeProvider(final TypeProvider provider) {_		Assert.notNull(provider, "Provider must not be null")__		if (provider.getType() instanceof Serializable || provider.getType() == null) {_			return provider.getType()__		}_		Type cached = cache.get(provider.getType())__		if (cached != null) {_			return cached__		}_		for (Class<?> type : SUPPORTED_SERIALIZABLE_TYPES) {_			if (type.isAssignableFrom(provider.getType().getClass())) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] {type, SerializableTypeProxy.class, Serializable.class}__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				cached = (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__				cache.put(provider.getType(), cached)__				return cached__			}_		}_		throw new IllegalArgumentException("Unsupported Type class: " + provider.getType().getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider;static,type,for,type,provider,final,type,provider,provider,assert,not,null,provider,provider,must,not,be,null,if,provider,get,type,instanceof,serializable,provider,get,type,null,return,provider,get,type,type,cached,cache,get,provider,get,type,if,cached,null,return,cached,for,class,type,if,type,is,assignable,from,provider,get,type,get,class,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,type,proxy,class,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,cached,type,proxy,new,proxy,instance,class,loader,interfaces,handler,cache,put,provider,get,type,cached,return,cached,throw,new,illegal,argument,exception,unsupported,type,class,provider,get,type,get,class,get,name
SerializableTypeWrapper -> static Type forTypeProvider(final TypeProvider provider);1447541559;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} .;static Type forTypeProvider(final TypeProvider provider) {_		Assert.notNull(provider, "Provider must not be null")__		if (provider.getType() instanceof Serializable || provider.getType() == null) {_			return provider.getType()__		}_		Type cached = cache.get(provider.getType())__		if (cached != null) {_			return cached__		}_		for (Class<?> type : SUPPORTED_SERIALIZABLE_TYPES) {_			if (type.isAssignableFrom(provider.getType().getClass())) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] {type, SerializableTypeProxy.class, Serializable.class}__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				cached = (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__				cache.put(provider.getType(), cached)__				return cached__			}_		}_		throw new IllegalArgumentException("Unsupported Type class: " + provider.getType().getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider;static,type,for,type,provider,final,type,provider,provider,assert,not,null,provider,provider,must,not,be,null,if,provider,get,type,instanceof,serializable,provider,get,type,null,return,provider,get,type,type,cached,cache,get,provider,get,type,if,cached,null,return,cached,for,class,type,if,type,is,assignable,from,provider,get,type,get,class,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,type,proxy,class,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,cached,type,proxy,new,proxy,instance,class,loader,interfaces,handler,cache,put,provider,get,type,cached,return,cached,throw,new,illegal,argument,exception,unsupported,type,class,provider,get,type,get,class,get,name
SerializableTypeWrapper -> static Type forTypeProvider(final TypeProvider provider);1467730834;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} .;static Type forTypeProvider(final TypeProvider provider) {_		Assert.notNull(provider, "Provider must not be null")__		if (provider.getType() instanceof Serializable || provider.getType() == null) {_			return provider.getType()__		}_		Type cached = cache.get(provider.getType())__		if (cached != null) {_			return cached__		}_		for (Class<?> type : SUPPORTED_SERIALIZABLE_TYPES) {_			if (type.isAssignableFrom(provider.getType().getClass())) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] {type, SerializableTypeProxy.class, Serializable.class}__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				cached = (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__				cache.put(provider.getType(), cached)__				return cached__			}_		}_		throw new IllegalArgumentException("Unsupported Type class: " + provider.getType().getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider;static,type,for,type,provider,final,type,provider,provider,assert,not,null,provider,provider,must,not,be,null,if,provider,get,type,instanceof,serializable,provider,get,type,null,return,provider,get,type,type,cached,cache,get,provider,get,type,if,cached,null,return,cached,for,class,type,if,type,is,assignable,from,provider,get,type,get,class,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,type,proxy,class,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,cached,type,proxy,new,proxy,instance,class,loader,interfaces,handler,cache,put,provider,get,type,cached,return,cached,throw,new,illegal,argument,exception,unsupported,type,class,provider,get,type,get,class,get,name
SerializableTypeWrapper -> static Type forTypeProvider(final TypeProvider provider);1468948952;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} .;static Type forTypeProvider(final TypeProvider provider) {_		Assert.notNull(provider, "Provider must not be null")__		if (provider.getType() instanceof Serializable || provider.getType() == null) {_			return provider.getType()__		}_		Type cached = cache.get(provider.getType())__		if (cached != null) {_			return cached__		}_		for (Class<?> type : SUPPORTED_SERIALIZABLE_TYPES) {_			if (type.isAssignableFrom(provider.getType().getClass())) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] {type, SerializableTypeProxy.class, Serializable.class}__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				cached = (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__				cache.put(provider.getType(), cached)__				return cached__			}_		}_		throw new IllegalArgumentException("Unsupported Type class: " + provider.getType().getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider;static,type,for,type,provider,final,type,provider,provider,assert,not,null,provider,provider,must,not,be,null,if,provider,get,type,instanceof,serializable,provider,get,type,null,return,provider,get,type,type,cached,cache,get,provider,get,type,if,cached,null,return,cached,for,class,type,if,type,is,assignable,from,provider,get,type,get,class,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,type,proxy,class,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,cached,type,proxy,new,proxy,instance,class,loader,interfaces,handler,cache,put,provider,get,type,cached,return,cached,throw,new,illegal,argument,exception,unsupported,type,class,provider,get,type,get,class,get,name
SerializableTypeWrapper -> static Type forTypeProvider(final TypeProvider provider);1485810955;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} .;static Type forTypeProvider(final TypeProvider provider) {_		Assert.notNull(provider, "Provider must not be null")__		if (provider.getType() instanceof Serializable || provider.getType() == null) {_			return provider.getType()__		}_		Type cached = cache.get(provider.getType())__		if (cached != null) {_			return cached__		}_		for (Class<?> type : SUPPORTED_SERIALIZABLE_TYPES) {_			if (type.isAssignableFrom(provider.getType().getClass())) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] {type, SerializableTypeProxy.class, Serializable.class}__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				cached = (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__				cache.put(provider.getType(), cached)__				return cached__			}_		}_		throw new IllegalArgumentException("Unsupported Type class: " + provider.getType().getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider;static,type,for,type,provider,final,type,provider,provider,assert,not,null,provider,provider,must,not,be,null,if,provider,get,type,instanceof,serializable,provider,get,type,null,return,provider,get,type,type,cached,cache,get,provider,get,type,if,cached,null,return,cached,for,class,type,if,type,is,assignable,from,provider,get,type,get,class,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,type,proxy,class,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,cached,type,proxy,new,proxy,instance,class,loader,interfaces,handler,cache,put,provider,get,type,cached,return,cached,throw,new,illegal,argument,exception,unsupported,type,class,provider,get,type,get,class,get,name
SerializableTypeWrapper -> static Type forTypeProvider(final TypeProvider provider);1493752435;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} .;static Type forTypeProvider(final TypeProvider provider) {_		Assert.notNull(provider, "Provider must not be null")__		if (provider.getType() instanceof Serializable || provider.getType() == null) {_			return provider.getType()__		}_		Type cached = cache.get(provider.getType())__		if (cached != null) {_			return cached__		}_		for (Class<?> type : SUPPORTED_SERIALIZABLE_TYPES) {_			if (type.isAssignableFrom(provider.getType().getClass())) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] {type, SerializableTypeProxy.class, Serializable.class}__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				cached = (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__				cache.put(provider.getType(), cached)__				return cached__			}_		}_		throw new IllegalArgumentException("Unsupported Type class: " + provider.getType().getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider;static,type,for,type,provider,final,type,provider,provider,assert,not,null,provider,provider,must,not,be,null,if,provider,get,type,instanceof,serializable,provider,get,type,null,return,provider,get,type,type,cached,cache,get,provider,get,type,if,cached,null,return,cached,for,class,type,if,type,is,assignable,from,provider,get,type,get,class,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,type,proxy,class,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,cached,type,proxy,new,proxy,instance,class,loader,interfaces,handler,cache,put,provider,get,type,cached,return,cached,throw,new,illegal,argument,exception,unsupported,type,class,provider,get,type,get,class,get,name
SerializableTypeWrapper -> static Type forTypeProvider(final TypeProvider provider);1495868221;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} .;static Type forTypeProvider(final TypeProvider provider) {_		Assert.notNull(provider, "Provider must not be null")__		if (provider.getType() instanceof Serializable || provider.getType() == null) {_			return provider.getType()__		}_		Type cached = cache.get(provider.getType())__		if (cached != null) {_			return cached__		}_		for (Class<?> type : SUPPORTED_SERIALIZABLE_TYPES) {_			if (type.isAssignableFrom(provider.getType().getClass())) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] {type, SerializableTypeProxy.class, Serializable.class}__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				cached = (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__				cache.put(provider.getType(), cached)__				return cached__			}_		}_		throw new IllegalArgumentException("Unsupported Type class: " + provider.getType().getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider;static,type,for,type,provider,final,type,provider,provider,assert,not,null,provider,provider,must,not,be,null,if,provider,get,type,instanceof,serializable,provider,get,type,null,return,provider,get,type,type,cached,cache,get,provider,get,type,if,cached,null,return,cached,for,class,type,if,type,is,assignable,from,provider,get,type,get,class,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,type,proxy,class,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,cached,type,proxy,new,proxy,instance,class,loader,interfaces,handler,cache,put,provider,get,type,cached,return,cached,throw,new,illegal,argument,exception,unsupported,type,class,provider,get,type,get,class,get,name
SerializableTypeWrapper -> @SuppressWarnings("unchecked") 	public static <T extends Type> T unwrap(T type);1390349402;Unwrap the given type, effectively returning the original non-serializable type._@param type the type to unwrap_@return the original non-serializable type;@SuppressWarnings("unchecked")_	public static <T extends Type> T unwrap(T type) {_		Type unwrapped = type__		while (unwrapped instanceof SerializableTypeProxy) {_			unwrapped = ((SerializableTypeProxy) type).getTypeProvider().getType()__		}_		return (T) unwrapped__	};unwrap,the,given,type,effectively,returning,the,original,non,serializable,type,param,type,the,type,to,unwrap,return,the,original,non,serializable,type;suppress,warnings,unchecked,public,static,t,extends,type,t,unwrap,t,type,type,unwrapped,type,while,unwrapped,instanceof,serializable,type,proxy,unwrapped,serializable,type,proxy,type,get,type,provider,get,type,return,t,unwrapped
SerializableTypeWrapper -> @SuppressWarnings("unchecked") 	public static <T extends Type> T unwrap(T type);1392766048;Unwrap the given type, effectively returning the original non-serializable type._@param type the type to unwrap_@return the original non-serializable type;@SuppressWarnings("unchecked")_	public static <T extends Type> T unwrap(T type) {_		Type unwrapped = type__		while (unwrapped instanceof SerializableTypeProxy) {_			unwrapped = ((SerializableTypeProxy) type).getTypeProvider().getType()__		}_		return (T) unwrapped__	};unwrap,the,given,type,effectively,returning,the,original,non,serializable,type,param,type,the,type,to,unwrap,return,the,original,non,serializable,type;suppress,warnings,unchecked,public,static,t,extends,type,t,unwrap,t,type,type,unwrapped,type,while,unwrapped,instanceof,serializable,type,proxy,unwrapped,serializable,type,proxy,type,get,type,provider,get,type,return,t,unwrapped
SerializableTypeWrapper -> @SuppressWarnings("unchecked") 	public static <T extends Type> T unwrap(T type);1405696918;Unwrap the given type, effectively returning the original non-serializable type._@param type the type to unwrap_@return the original non-serializable type;@SuppressWarnings("unchecked")_	public static <T extends Type> T unwrap(T type) {_		Type unwrapped = type__		while (unwrapped instanceof SerializableTypeProxy) {_			unwrapped = ((SerializableTypeProxy) type).getTypeProvider().getType()__		}_		return (T) unwrapped__	};unwrap,the,given,type,effectively,returning,the,original,non,serializable,type,param,type,the,type,to,unwrap,return,the,original,non,serializable,type;suppress,warnings,unchecked,public,static,t,extends,type,t,unwrap,t,type,type,unwrapped,type,while,unwrapped,instanceof,serializable,type,proxy,unwrapped,serializable,type,proxy,type,get,type,provider,get,type,return,t,unwrapped
SerializableTypeWrapper -> @SuppressWarnings("unchecked") 	public static <T extends Type> T unwrap(T type);1413848647;Unwrap the given type, effectively returning the original non-serializable type._@param type the type to unwrap_@return the original non-serializable type;@SuppressWarnings("unchecked")_	public static <T extends Type> T unwrap(T type) {_		Type unwrapped = type__		while (unwrapped instanceof SerializableTypeProxy) {_			unwrapped = ((SerializableTypeProxy) type).getTypeProvider().getType()__		}_		return (T) unwrapped__	};unwrap,the,given,type,effectively,returning,the,original,non,serializable,type,param,type,the,type,to,unwrap,return,the,original,non,serializable,type;suppress,warnings,unchecked,public,static,t,extends,type,t,unwrap,t,type,type,unwrapped,type,while,unwrapped,instanceof,serializable,type,proxy,unwrapped,serializable,type,proxy,type,get,type,provider,get,type,return,t,unwrapped
SerializableTypeWrapper -> @SuppressWarnings("unchecked") 	public static <T extends Type> T unwrap(T type);1432125256;Unwrap the given type, effectively returning the original non-serializable type._@param type the type to unwrap_@return the original non-serializable type;@SuppressWarnings("unchecked")_	public static <T extends Type> T unwrap(T type) {_		Type unwrapped = type__		while (unwrapped instanceof SerializableTypeProxy) {_			unwrapped = ((SerializableTypeProxy) type).getTypeProvider().getType()__		}_		return (T) unwrapped__	};unwrap,the,given,type,effectively,returning,the,original,non,serializable,type,param,type,the,type,to,unwrap,return,the,original,non,serializable,type;suppress,warnings,unchecked,public,static,t,extends,type,t,unwrap,t,type,type,unwrapped,type,while,unwrapped,instanceof,serializable,type,proxy,unwrapped,serializable,type,proxy,type,get,type,provider,get,type,return,t,unwrapped
SerializableTypeWrapper -> @SuppressWarnings("unchecked") 	public static <T extends Type> T unwrap(T type);1446566203;Unwrap the given type, effectively returning the original non-serializable type._@param type the type to unwrap_@return the original non-serializable type;@SuppressWarnings("unchecked")_	public static <T extends Type> T unwrap(T type) {_		Type unwrapped = type__		while (unwrapped instanceof SerializableTypeProxy) {_			unwrapped = ((SerializableTypeProxy) type).getTypeProvider().getType()__		}_		return (T) unwrapped__	};unwrap,the,given,type,effectively,returning,the,original,non,serializable,type,param,type,the,type,to,unwrap,return,the,original,non,serializable,type;suppress,warnings,unchecked,public,static,t,extends,type,t,unwrap,t,type,type,unwrapped,type,while,unwrapped,instanceof,serializable,type,proxy,unwrapped,serializable,type,proxy,type,get,type,provider,get,type,return,t,unwrapped
SerializableTypeWrapper -> @SuppressWarnings("unchecked") 	public static <T extends Type> T unwrap(T type);1447010826;Unwrap the given type, effectively returning the original non-serializable type._@param type the type to unwrap_@return the original non-serializable type;@SuppressWarnings("unchecked")_	public static <T extends Type> T unwrap(T type) {_		Type unwrapped = type__		while (unwrapped instanceof SerializableTypeProxy) {_			unwrapped = ((SerializableTypeProxy) type).getTypeProvider().getType()__		}_		return (T) unwrapped__	};unwrap,the,given,type,effectively,returning,the,original,non,serializable,type,param,type,the,type,to,unwrap,return,the,original,non,serializable,type;suppress,warnings,unchecked,public,static,t,extends,type,t,unwrap,t,type,type,unwrapped,type,while,unwrapped,instanceof,serializable,type,proxy,unwrapped,serializable,type,proxy,type,get,type,provider,get,type,return,t,unwrapped
SerializableTypeWrapper -> @SuppressWarnings("unchecked") 	public static <T extends Type> T unwrap(T type);1447541559;Unwrap the given type, effectively returning the original non-serializable type._@param type the type to unwrap_@return the original non-serializable type;@SuppressWarnings("unchecked")_	public static <T extends Type> T unwrap(T type) {_		Type unwrapped = type__		while (unwrapped instanceof SerializableTypeProxy) {_			unwrapped = ((SerializableTypeProxy) type).getTypeProvider().getType()__		}_		return (T) unwrapped__	};unwrap,the,given,type,effectively,returning,the,original,non,serializable,type,param,type,the,type,to,unwrap,return,the,original,non,serializable,type;suppress,warnings,unchecked,public,static,t,extends,type,t,unwrap,t,type,type,unwrapped,type,while,unwrapped,instanceof,serializable,type,proxy,unwrapped,serializable,type,proxy,type,get,type,provider,get,type,return,t,unwrapped
SerializableTypeWrapper -> @SuppressWarnings("unchecked") 	public static <T extends Type> T unwrap(T type);1467730834;Unwrap the given type, effectively returning the original non-serializable type._@param type the type to unwrap_@return the original non-serializable type;@SuppressWarnings("unchecked")_	public static <T extends Type> T unwrap(T type) {_		Type unwrapped = type__		while (unwrapped instanceof SerializableTypeProxy) {_			unwrapped = ((SerializableTypeProxy) type).getTypeProvider().getType()__		}_		return (T) unwrapped__	};unwrap,the,given,type,effectively,returning,the,original,non,serializable,type,param,type,the,type,to,unwrap,return,the,original,non,serializable,type;suppress,warnings,unchecked,public,static,t,extends,type,t,unwrap,t,type,type,unwrapped,type,while,unwrapped,instanceof,serializable,type,proxy,unwrapped,serializable,type,proxy,type,get,type,provider,get,type,return,t,unwrapped
SerializableTypeWrapper -> @SuppressWarnings("unchecked") 	public static <T extends Type> T unwrap(T type);1468948952;Unwrap the given type, effectively returning the original non-serializable type._@param type the type to unwrap_@return the original non-serializable type;@SuppressWarnings("unchecked")_	public static <T extends Type> T unwrap(T type) {_		Type unwrapped = type__		while (unwrapped instanceof SerializableTypeProxy) {_			unwrapped = ((SerializableTypeProxy) type).getTypeProvider().getType()__		}_		return (T) unwrapped__	};unwrap,the,given,type,effectively,returning,the,original,non,serializable,type,param,type,the,type,to,unwrap,return,the,original,non,serializable,type;suppress,warnings,unchecked,public,static,t,extends,type,t,unwrap,t,type,type,unwrapped,type,while,unwrapped,instanceof,serializable,type,proxy,unwrapped,serializable,type,proxy,type,get,type,provider,get,type,return,t,unwrapped
SerializableTypeWrapper -> @SuppressWarnings("unchecked") 	public static <T extends Type> T unwrap(T type);1485810955;Unwrap the given type, effectively returning the original non-serializable type._@param type the type to unwrap_@return the original non-serializable type;@SuppressWarnings("unchecked")_	public static <T extends Type> T unwrap(T type) {_		Type unwrapped = type__		while (unwrapped instanceof SerializableTypeProxy) {_			unwrapped = ((SerializableTypeProxy) type).getTypeProvider().getType()__		}_		return (T) unwrapped__	};unwrap,the,given,type,effectively,returning,the,original,non,serializable,type,param,type,the,type,to,unwrap,return,the,original,non,serializable,type;suppress,warnings,unchecked,public,static,t,extends,type,t,unwrap,t,type,type,unwrapped,type,while,unwrapped,instanceof,serializable,type,proxy,unwrapped,serializable,type,proxy,type,get,type,provider,get,type,return,t,unwrapped
SerializableTypeWrapper -> @SuppressWarnings("unchecked") 	public static <T extends Type> T unwrap(T type);1493752435;Unwrap the given type, effectively returning the original non-serializable type._@param type the type to unwrap_@return the original non-serializable type;@SuppressWarnings("unchecked")_	public static <T extends Type> T unwrap(T type) {_		Type unwrapped = type__		while (unwrapped instanceof SerializableTypeProxy) {_			unwrapped = ((SerializableTypeProxy) type).getTypeProvider().getType()__		}_		return (T) unwrapped__	};unwrap,the,given,type,effectively,returning,the,original,non,serializable,type,param,type,the,type,to,unwrap,return,the,original,non,serializable,type;suppress,warnings,unchecked,public,static,t,extends,type,t,unwrap,t,type,type,unwrapped,type,while,unwrapped,instanceof,serializable,type,proxy,unwrapped,serializable,type,proxy,type,get,type,provider,get,type,return,t,unwrapped
SerializableTypeWrapper -> @SuppressWarnings("unchecked") 	public static <T extends Type> T unwrap(T type);1495868221;Unwrap the given type, effectively returning the original non-serializable type._@param type the type to unwrap_@return the original non-serializable type;@SuppressWarnings("unchecked")_	public static <T extends Type> T unwrap(T type) {_		Type unwrapped = type__		while (unwrapped instanceof SerializableTypeProxy) {_			unwrapped = ((SerializableTypeProxy) type).getTypeProvider().getType()__		}_		return (T) unwrapped__	};unwrap,the,given,type,effectively,returning,the,original,non,serializable,type,param,type,the,type,to,unwrap,return,the,original,non,serializable,type;suppress,warnings,unchecked,public,static,t,extends,type,t,unwrap,t,type,type,unwrapped,type,while,unwrapped,instanceof,serializable,type,proxy,unwrapped,serializable,type,proxy,type,get,type,provider,get,type,return,t,unwrapped
SerializableTypeWrapper -> @SuppressWarnings("unchecked") 	public static <T extends Type> T unwrap(T type);1496955179;Unwrap the given type, effectively returning the original non-serializable type._@param type the type to unwrap_@return the original non-serializable type;@SuppressWarnings("unchecked")_	public static <T extends Type> T unwrap(T type) {_		Type unwrapped = type__		while (unwrapped instanceof SerializableTypeProxy) {_			unwrapped = ((SerializableTypeProxy) type).getTypeProvider().getType()__		}_		return (unwrapped != null ? (T) unwrapped : type)__	};unwrap,the,given,type,effectively,returning,the,original,non,serializable,type,param,type,the,type,to,unwrap,return,the,original,non,serializable,type;suppress,warnings,unchecked,public,static,t,extends,type,t,unwrap,t,type,type,unwrapped,type,while,unwrapped,instanceof,serializable,type,proxy,unwrapped,serializable,type,proxy,type,get,type,provider,get,type,return,unwrapped,null,t,unwrapped,type
SerializableTypeWrapper -> @SuppressWarnings("unchecked") 	public static <T extends Type> T unwrap(T type);1498780456;Unwrap the given type, effectively returning the original non-serializable type._@param type the type to unwrap_@return the original non-serializable type;@SuppressWarnings("unchecked")_	public static <T extends Type> T unwrap(T type) {_		Type unwrapped = type__		while (unwrapped instanceof SerializableTypeProxy) {_			unwrapped = ((SerializableTypeProxy) type).getTypeProvider().getType()__		}_		return (unwrapped != null ? (T) unwrapped : type)__	};unwrap,the,given,type,effectively,returning,the,original,non,serializable,type,param,type,the,type,to,unwrap,return,the,original,non,serializable,type;suppress,warnings,unchecked,public,static,t,extends,type,t,unwrap,t,type,type,unwrapped,type,while,unwrapped,instanceof,serializable,type,proxy,unwrapped,serializable,type,proxy,type,get,type,provider,get,type,return,unwrapped,null,t,unwrapped,type
SerializableTypeWrapper -> @SuppressWarnings("unchecked") 	public static <T extends Type> T unwrap(T type);1502974979;Unwrap the given type, effectively returning the original non-serializable type._@param type the type to unwrap_@return the original non-serializable type;@SuppressWarnings("unchecked")_	public static <T extends Type> T unwrap(T type) {_		Type unwrapped = type__		while (unwrapped instanceof SerializableTypeProxy) {_			unwrapped = ((SerializableTypeProxy) type).getTypeProvider().getType()__		}_		return (unwrapped != null ? (T) unwrapped : type)__	};unwrap,the,given,type,effectively,returning,the,original,non,serializable,type,param,type,the,type,to,unwrap,return,the,original,non,serializable,type;suppress,warnings,unchecked,public,static,t,extends,type,t,unwrap,t,type,type,unwrapped,type,while,unwrapped,instanceof,serializable,type,proxy,unwrapped,serializable,type,proxy,type,get,type,provider,get,type,return,unwrapped,null,t,unwrapped,type
SerializableTypeWrapper -> @SuppressWarnings("unchecked") 	public static <T extends Type> T unwrap(T type);1530174524;Unwrap the given type, effectively returning the original non-serializable type._@param type the type to unwrap_@return the original non-serializable type;@SuppressWarnings("unchecked")_	public static <T extends Type> T unwrap(T type) {_		Type unwrapped = type__		while (unwrapped instanceof SerializableTypeProxy) {_			unwrapped = ((SerializableTypeProxy) type).getTypeProvider().getType()__		}_		return (unwrapped != null ? (T) unwrapped : type)__	};unwrap,the,given,type,effectively,returning,the,original,non,serializable,type,param,type,the,type,to,unwrap,return,the,original,non,serializable,type;suppress,warnings,unchecked,public,static,t,extends,type,t,unwrap,t,type,type,unwrapped,type,while,unwrapped,instanceof,serializable,type,proxy,unwrapped,serializable,type,proxy,type,get,type,provider,get,type,return,unwrapped,null,t,unwrapped,type
SerializableTypeWrapper -> @SuppressWarnings("unchecked") 	public static <T extends Type> T unwrap(T type);1530532503;Unwrap the given type, effectively returning the original non-serializable type._@param type the type to unwrap_@return the original non-serializable type;@SuppressWarnings("unchecked")_	public static <T extends Type> T unwrap(T type) {_		Type unwrapped = type__		while (unwrapped instanceof SerializableTypeProxy) {_			unwrapped = ((SerializableTypeProxy) type).getTypeProvider().getType()__		}_		return (unwrapped != null ? (T) unwrapped : type)__	};unwrap,the,given,type,effectively,returning,the,original,non,serializable,type,param,type,the,type,to,unwrap,return,the,original,non,serializable,type;suppress,warnings,unchecked,public,static,t,extends,type,t,unwrap,t,type,type,unwrapped,type,while,unwrapped,instanceof,serializable,type,proxy,unwrapped,serializable,type,proxy,type,get,type,provider,get,type,return,unwrapped,null,t,unwrapped,type
SerializableTypeWrapper -> @SuppressWarnings("unchecked") 	public static <T extends Type> T unwrap(T type);1530563549;Unwrap the given type, effectively returning the original non-serializable type._@param type the type to unwrap_@return the original non-serializable type;@SuppressWarnings("unchecked")_	public static <T extends Type> T unwrap(T type) {_		Type unwrapped = type__		while (unwrapped instanceof SerializableTypeProxy) {_			unwrapped = ((SerializableTypeProxy) type).getTypeProvider().getType()__		}_		return (unwrapped != null ? (T) unwrapped : type)__	};unwrap,the,given,type,effectively,returning,the,original,non,serializable,type,param,type,the,type,to,unwrap,return,the,original,non,serializable,type;suppress,warnings,unchecked,public,static,t,extends,type,t,unwrap,t,type,type,unwrapped,type,while,unwrapped,instanceof,serializable,type,proxy,unwrapped,serializable,type,proxy,type,get,type,provider,get,type,return,unwrapped,null,t,unwrapped,type
SerializableTypeWrapper -> @SuppressWarnings("unchecked") 	public static <T extends Type> T unwrap(T type);1532274593;Unwrap the given type, effectively returning the original non-serializable type._@param type the type to unwrap_@return the original non-serializable type;@SuppressWarnings("unchecked")_	public static <T extends Type> T unwrap(T type) {_		Type unwrapped = type__		while (unwrapped instanceof SerializableTypeProxy) {_			unwrapped = ((SerializableTypeProxy) type).getTypeProvider().getType()__		}_		return (unwrapped != null ? (T) unwrapped : type)__	};unwrap,the,given,type,effectively,returning,the,original,non,serializable,type,param,type,the,type,to,unwrap,return,the,original,non,serializable,type;suppress,warnings,unchecked,public,static,t,extends,type,t,unwrap,t,type,type,unwrapped,type,while,unwrapped,instanceof,serializable,type,proxy,unwrapped,serializable,type,proxy,type,get,type,provider,get,type,return,unwrapped,null,t,unwrapped,type
SerializableTypeWrapper -> @SuppressWarnings("unchecked") 	public static <T extends Type> T unwrap(T type);1533633343;Unwrap the given type, effectively returning the original non-serializable type._@param type the type to unwrap_@return the original non-serializable type;@SuppressWarnings("unchecked")_	public static <T extends Type> T unwrap(T type) {_		Type unwrapped = type__		while (unwrapped instanceof SerializableTypeProxy) {_			unwrapped = ((SerializableTypeProxy) type).getTypeProvider().getType()__		}_		return (unwrapped != null ? (T) unwrapped : type)__	};unwrap,the,given,type,effectively,returning,the,original,non,serializable,type,param,type,the,type,to,unwrap,return,the,original,non,serializable,type;suppress,warnings,unchecked,public,static,t,extends,type,t,unwrap,t,type,type,unwrapped,type,while,unwrapped,instanceof,serializable,type,proxy,unwrapped,serializable,type,proxy,type,get,type,provider,get,type,return,unwrapped,null,t,unwrapped,type
SerializableTypeWrapper -> @Nullable 	public static Type forMethodParameter(MethodParameter methodParameter);1496837955;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;@Nullable_	public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;nullable,public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> @Nullable 	public static Type forMethodParameter(MethodParameter methodParameter);1496955179;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;@Nullable_	public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;nullable,public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> @Nullable 	public static Type forMethodParameter(MethodParameter methodParameter);1498780456;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;@Nullable_	public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;nullable,public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> @Nullable 	public static Type forMethodParameter(MethodParameter methodParameter);1502974979;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;@Nullable_	public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;nullable,public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> @Nullable 	public static Type forMethodParameter(MethodParameter methodParameter);1530174524;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;@Nullable_	public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;nullable,public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> @Nullable 	public static Type forMethodParameter(MethodParameter methodParameter);1530532503;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;@Nullable_	public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;nullable,public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> @Nullable 	public static Type forMethodParameter(MethodParameter methodParameter);1530563549;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;@Nullable_	public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;nullable,public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> @Nullable 	public static Type forMethodParameter(MethodParameter methodParameter);1532274593;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;@Nullable_	public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;nullable,public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> @Nullable 	public static Type forMethodParameter(MethodParameter methodParameter);1533633343;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;@Nullable_	public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;nullable,public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forGenericInterfaces(final Class<?> type);1387307647;Return a {@link Serializable} variant of {@link Class#getGenericInterfaces()}.;@SuppressWarnings("serial")_	public static Type[] forGenericInterfaces(final Class<?> type) {_		Type[] result = new Type[type.getGenericInterfaces().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getGenericInterfaces()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,generic,interfaces;suppress,warnings,serial,public,static,type,for,generic,interfaces,final,class,type,type,result,new,type,type,get,generic,interfaces,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,interfaces,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forGenericInterfaces(final Class<?> type);1390330765;Return a {@link Serializable} variant of {@link Class#getGenericInterfaces()}.;@SuppressWarnings("serial")_	public static Type[] forGenericInterfaces(final Class<?> type) {_		Type[] result = new Type[type.getGenericInterfaces().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getGenericInterfaces()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,generic,interfaces;suppress,warnings,serial,public,static,type,for,generic,interfaces,final,class,type,type,result,new,type,type,get,generic,interfaces,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,interfaces,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forGenericInterfaces(final Class<?> type);1390349402;Return a {@link Serializable} variant of {@link Class#getGenericInterfaces()}.;@SuppressWarnings("serial")_	public static Type[] forGenericInterfaces(final Class<?> type) {_		Type[] result = new Type[type.getGenericInterfaces().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getGenericInterfaces()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,generic,interfaces;suppress,warnings,serial,public,static,type,for,generic,interfaces,final,class,type,type,result,new,type,type,get,generic,interfaces,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,interfaces,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forGenericInterfaces(final Class<?> type);1392766048;Return a {@link Serializable} variant of {@link Class#getGenericInterfaces()}.;@SuppressWarnings("serial")_	public static Type[] forGenericInterfaces(final Class<?> type) {_		Type[] result = new Type[type.getGenericInterfaces().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getGenericInterfaces()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,generic,interfaces;suppress,warnings,serial,public,static,type,for,generic,interfaces,final,class,type,type,result,new,type,type,get,generic,interfaces,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,interfaces,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forGenericInterfaces(final Class<?> type);1405696918;Return a {@link Serializable} variant of {@link Class#getGenericInterfaces()}.;@SuppressWarnings("serial")_	public static Type[] forGenericInterfaces(final Class<?> type) {_		Type[] result = new Type[type.getGenericInterfaces().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getGenericInterfaces()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,generic,interfaces;suppress,warnings,serial,public,static,type,for,generic,interfaces,final,class,type,type,result,new,type,type,get,generic,interfaces,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,interfaces,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forGenericInterfaces(final Class<?> type);1413848647;Return a {@link Serializable} variant of {@link Class#getGenericInterfaces()}.;@SuppressWarnings("serial")_	public static Type[] forGenericInterfaces(final Class<?> type) {_		Type[] result = new Type[type.getGenericInterfaces().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getGenericInterfaces()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,generic,interfaces;suppress,warnings,serial,public,static,type,for,generic,interfaces,final,class,type,type,result,new,type,type,get,generic,interfaces,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,interfaces,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forGenericInterfaces(final Class<?> type);1432125256;Return a {@link Serializable} variant of {@link Class#getGenericInterfaces()}.;@SuppressWarnings("serial")_	public static Type[] forGenericInterfaces(final Class<?> type) {_		Type[] result = new Type[type.getGenericInterfaces().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getGenericInterfaces()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,generic,interfaces;suppress,warnings,serial,public,static,type,for,generic,interfaces,final,class,type,type,result,new,type,type,get,generic,interfaces,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,interfaces,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forGenericInterfaces(final Class<?> type);1446566203;Return a {@link Serializable} variant of {@link Class#getGenericInterfaces()}.;@SuppressWarnings("serial")_	public static Type[] forGenericInterfaces(final Class<?> type) {_		Type[] result = new Type[type.getGenericInterfaces().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getGenericInterfaces()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,generic,interfaces;suppress,warnings,serial,public,static,type,for,generic,interfaces,final,class,type,type,result,new,type,type,get,generic,interfaces,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,interfaces,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forGenericInterfaces(final Class<?> type);1447010826;Return a {@link Serializable} variant of {@link Class#getGenericInterfaces()}.;@SuppressWarnings("serial")_	public static Type[] forGenericInterfaces(final Class<?> type) {_		Type[] result = new Type[type.getGenericInterfaces().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getGenericInterfaces()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,generic,interfaces;suppress,warnings,serial,public,static,type,for,generic,interfaces,final,class,type,type,result,new,type,type,get,generic,interfaces,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,interfaces,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forGenericInterfaces(final Class<?> type);1447541559;Return a {@link Serializable} variant of {@link Class#getGenericInterfaces()}.;@SuppressWarnings("serial")_	public static Type[] forGenericInterfaces(final Class<?> type) {_		Type[] result = new Type[type.getGenericInterfaces().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getGenericInterfaces()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,generic,interfaces;suppress,warnings,serial,public,static,type,for,generic,interfaces,final,class,type,type,result,new,type,type,get,generic,interfaces,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,interfaces,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forGenericInterfaces(final Class<?> type);1467730834;Return a {@link Serializable} variant of {@link Class#getGenericInterfaces()}.;@SuppressWarnings("serial")_	public static Type[] forGenericInterfaces(final Class<?> type) {_		Type[] result = new Type[type.getGenericInterfaces().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getGenericInterfaces()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,generic,interfaces;suppress,warnings,serial,public,static,type,for,generic,interfaces,final,class,type,type,result,new,type,type,get,generic,interfaces,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,interfaces,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forGenericInterfaces(final Class<?> type);1468948952;Return a {@link Serializable} variant of {@link Class#getGenericInterfaces()}.;@SuppressWarnings("serial")_	public static Type[] forGenericInterfaces(final Class<?> type) {_		Type[] result = new Type[type.getGenericInterfaces().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getGenericInterfaces()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,generic,interfaces;suppress,warnings,serial,public,static,type,for,generic,interfaces,final,class,type,type,result,new,type,type,get,generic,interfaces,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,interfaces,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forGenericInterfaces(final Class<?> type);1485810955;Return a {@link Serializable} variant of {@link Class#getGenericInterfaces()}.;@SuppressWarnings("serial")_	public static Type[] forGenericInterfaces(final Class<?> type) {_		Type[] result = new Type[type.getGenericInterfaces().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getGenericInterfaces()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,generic,interfaces;suppress,warnings,serial,public,static,type,for,generic,interfaces,final,class,type,type,result,new,type,type,get,generic,interfaces,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,interfaces,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forGenericInterfaces(final Class<?> type);1493752435;Return a {@link Serializable} variant of {@link Class#getGenericInterfaces()}.;@SuppressWarnings("serial")_	public static Type[] forGenericInterfaces(final Class<?> type) {_		Type[] result = new Type[type.getGenericInterfaces().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(() -> type.getGenericInterfaces()[index])__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,generic,interfaces;suppress,warnings,serial,public,static,type,for,generic,interfaces,final,class,type,type,result,new,type,type,get,generic,interfaces,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,type,get,generic,interfaces,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forGenericInterfaces(final Class<?> type);1495868221;Return a {@link Serializable} variant of {@link Class#getGenericInterfaces()}.;@SuppressWarnings("serial")_	public static Type[] forGenericInterfaces(final Class<?> type) {_		Type[] result = new Type[type.getGenericInterfaces().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(() -> type.getGenericInterfaces()[index])__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,generic,interfaces;suppress,warnings,serial,public,static,type,for,generic,interfaces,final,class,type,type,result,new,type,type,get,generic,interfaces,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,type,get,generic,interfaces,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forGenericInterfaces(final Class<?> type);1496837955;Return a {@link Serializable} variant of {@link Class#getGenericInterfaces()}.;@SuppressWarnings("serial")_	public static Type[] forGenericInterfaces(final Class<?> type) {_		Type[] result = new Type[type.getGenericInterfaces().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(() -> type.getGenericInterfaces()[index])__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,generic,interfaces;suppress,warnings,serial,public,static,type,for,generic,interfaces,final,class,type,type,result,new,type,type,get,generic,interfaces,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,type,get,generic,interfaces,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forGenericInterfaces(final Class<?> type);1496955179;Return a {@link Serializable} variant of {@link Class#getGenericInterfaces()}.;@SuppressWarnings("serial")_	public static Type[] forGenericInterfaces(final Class<?> type) {_		Type[] result = new Type[type.getGenericInterfaces().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(() -> type.getGenericInterfaces()[index])__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,generic,interfaces;suppress,warnings,serial,public,static,type,for,generic,interfaces,final,class,type,type,result,new,type,type,get,generic,interfaces,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,type,get,generic,interfaces,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forGenericInterfaces(final Class<?> type);1498780456;Return a {@link Serializable} variant of {@link Class#getGenericInterfaces()}.;@SuppressWarnings("serial")_	public static Type[] forGenericInterfaces(final Class<?> type) {_		Type[] result = new Type[type.getGenericInterfaces().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(() -> type.getGenericInterfaces()[index])__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,generic,interfaces;suppress,warnings,serial,public,static,type,for,generic,interfaces,final,class,type,type,result,new,type,type,get,generic,interfaces,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,type,get,generic,interfaces,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forGenericInterfaces(final Class<?> type);1502974979;Return a {@link Serializable} variant of {@link Class#getGenericInterfaces()}.;@SuppressWarnings("serial")_	public static Type[] forGenericInterfaces(final Class<?> type) {_		Type[] result = new Type[type.getGenericInterfaces().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(() -> type.getGenericInterfaces()[index])__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,generic,interfaces;suppress,warnings,serial,public,static,type,for,generic,interfaces,final,class,type,type,result,new,type,type,get,generic,interfaces,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,type,get,generic,interfaces,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forGenericInterfaces(final Class<?> type);1530174524;Return a {@link Serializable} variant of {@link Class#getGenericInterfaces()}.;@SuppressWarnings("serial")_	public static Type[] forGenericInterfaces(final Class<?> type) {_		Type[] result = new Type[type.getGenericInterfaces().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(() -> type.getGenericInterfaces()[index])__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,generic,interfaces;suppress,warnings,serial,public,static,type,for,generic,interfaces,final,class,type,type,result,new,type,type,get,generic,interfaces,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,type,get,generic,interfaces,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forGenericInterfaces(final Class<?> type);1530532503;Return a {@link Serializable} variant of {@link Class#getGenericInterfaces()}.;@SuppressWarnings("serial")_	public static Type[] forGenericInterfaces(final Class<?> type) {_		Type[] result = new Type[type.getGenericInterfaces().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(() -> type.getGenericInterfaces()[index])__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,generic,interfaces;suppress,warnings,serial,public,static,type,for,generic,interfaces,final,class,type,type,result,new,type,type,get,generic,interfaces,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,type,get,generic,interfaces,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forGenericInterfaces(final Class<?> type);1530563549;Return a {@link Serializable} variant of {@link Class#getGenericInterfaces()}.;@SuppressWarnings("serial")_	public static Type[] forGenericInterfaces(final Class<?> type) {_		Type[] result = new Type[type.getGenericInterfaces().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(() -> type.getGenericInterfaces()[index])__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,generic,interfaces;suppress,warnings,serial,public,static,type,for,generic,interfaces,final,class,type,type,result,new,type,type,get,generic,interfaces,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,type,get,generic,interfaces,index,return,result
SerializableTypeWrapper -> @Nullable 	public static Type forField(Field field);1496837955;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;@Nullable_	public static Type forField(Field field) {_		Assert.notNull(field, "Field must not be null")__		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;nullable,public,static,type,for,field,field,field,assert,not,null,field,field,must,not,be,null,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> @Nullable 	public static Type forField(Field field);1496955179;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;@Nullable_	public static Type forField(Field field) {_		Assert.notNull(field, "Field must not be null")__		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;nullable,public,static,type,for,field,field,field,assert,not,null,field,field,must,not,be,null,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> @Nullable 	public static Type forField(Field field);1498780456;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;@Nullable_	public static Type forField(Field field) {_		Assert.notNull(field, "Field must not be null")__		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;nullable,public,static,type,for,field,field,field,assert,not,null,field,field,must,not,be,null,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> @Nullable 	public static Type forField(Field field);1502974979;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;@Nullable_	public static Type forField(Field field) {_		Assert.notNull(field, "Field must not be null")__		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;nullable,public,static,type,for,field,field,field,assert,not,null,field,field,must,not,be,null,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> @Nullable 	public static Type forField(Field field);1530174524;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;@Nullable_	public static Type forField(Field field) {_		Assert.notNull(field, "Field must not be null")__		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;nullable,public,static,type,for,field,field,field,assert,not,null,field,field,must,not,be,null,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> @Nullable 	public static Type forField(Field field);1530532503;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;@Nullable_	public static Type forField(Field field) {_		Assert.notNull(field, "Field must not be null")__		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;nullable,public,static,type,for,field,field,field,assert,not,null,field,field,must,not,be,null,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> @Nullable 	public static Type forField(Field field);1530563549;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;@Nullable_	public static Type forField(Field field) {_		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;nullable,public,static,type,for,field,field,field,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> @Nullable 	public static Type forField(Field field);1532274593;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;@Nullable_	public static Type forField(Field field) {_		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;nullable,public,static,type,for,field,field,field,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> @Nullable 	public static Type forField(Field field);1533633343;Return a {@link Serializable} variant of {@link Field#getGenericType()}.;@Nullable_	public static Type forField(Field field) {_		return forTypeProvider(new FieldTypeProvider(field))__	};return,a,link,serializable,variant,of,link,field,get,generic,type;nullable,public,static,type,for,field,field,field,return,for,type,provider,new,field,type,provider,field
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type forGenericSuperclass(final Class<?> type);1387307647;Return a {@link Serializable} variant of {@link Class#getGenericSuperclass()}.;@SuppressWarnings("serial")_	public static Type forGenericSuperclass(final Class<?> type) {_		return forTypeProvider(new DefaultTypeProvider() {_			@Override_			public Type getType() {_				return type.getGenericSuperclass()__			}_		})__	};return,a,link,serializable,variant,of,link,class,get,generic,superclass;suppress,warnings,serial,public,static,type,for,generic,superclass,final,class,type,return,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,superclass
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type forGenericSuperclass(final Class<?> type);1390330765;Return a {@link Serializable} variant of {@link Class#getGenericSuperclass()}.;@SuppressWarnings("serial")_	public static Type forGenericSuperclass(final Class<?> type) {_		return forTypeProvider(new DefaultTypeProvider() {_			@Override_			public Type getType() {_				return type.getGenericSuperclass()__			}_		})__	};return,a,link,serializable,variant,of,link,class,get,generic,superclass;suppress,warnings,serial,public,static,type,for,generic,superclass,final,class,type,return,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,superclass
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type forGenericSuperclass(final Class<?> type);1390349402;Return a {@link Serializable} variant of {@link Class#getGenericSuperclass()}.;@SuppressWarnings("serial")_	public static Type forGenericSuperclass(final Class<?> type) {_		return forTypeProvider(new DefaultTypeProvider() {_			@Override_			public Type getType() {_				return type.getGenericSuperclass()__			}_		})__	};return,a,link,serializable,variant,of,link,class,get,generic,superclass;suppress,warnings,serial,public,static,type,for,generic,superclass,final,class,type,return,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,superclass
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type forGenericSuperclass(final Class<?> type);1392766048;Return a {@link Serializable} variant of {@link Class#getGenericSuperclass()}.;@SuppressWarnings("serial")_	public static Type forGenericSuperclass(final Class<?> type) {_		return forTypeProvider(new DefaultTypeProvider() {_			@Override_			public Type getType() {_				return type.getGenericSuperclass()__			}_		})__	};return,a,link,serializable,variant,of,link,class,get,generic,superclass;suppress,warnings,serial,public,static,type,for,generic,superclass,final,class,type,return,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,superclass
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type forGenericSuperclass(final Class<?> type);1405696918;Return a {@link Serializable} variant of {@link Class#getGenericSuperclass()}.;@SuppressWarnings("serial")_	public static Type forGenericSuperclass(final Class<?> type) {_		return forTypeProvider(new DefaultTypeProvider() {_			@Override_			public Type getType() {_				return type.getGenericSuperclass()__			}_		})__	};return,a,link,serializable,variant,of,link,class,get,generic,superclass;suppress,warnings,serial,public,static,type,for,generic,superclass,final,class,type,return,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,superclass
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type forGenericSuperclass(final Class<?> type);1413848647;Return a {@link Serializable} variant of {@link Class#getGenericSuperclass()}.;@SuppressWarnings("serial")_	public static Type forGenericSuperclass(final Class<?> type) {_		return forTypeProvider(new DefaultTypeProvider() {_			@Override_			public Type getType() {_				return type.getGenericSuperclass()__			}_		})__	};return,a,link,serializable,variant,of,link,class,get,generic,superclass;suppress,warnings,serial,public,static,type,for,generic,superclass,final,class,type,return,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,superclass
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type forGenericSuperclass(final Class<?> type);1432125256;Return a {@link Serializable} variant of {@link Class#getGenericSuperclass()}.;@SuppressWarnings("serial")_	public static Type forGenericSuperclass(final Class<?> type) {_		return forTypeProvider(new DefaultTypeProvider() {_			@Override_			public Type getType() {_				return type.getGenericSuperclass()__			}_		})__	};return,a,link,serializable,variant,of,link,class,get,generic,superclass;suppress,warnings,serial,public,static,type,for,generic,superclass,final,class,type,return,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,superclass
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type forGenericSuperclass(final Class<?> type);1446566203;Return a {@link Serializable} variant of {@link Class#getGenericSuperclass()}.;@SuppressWarnings("serial")_	public static Type forGenericSuperclass(final Class<?> type) {_		return forTypeProvider(new DefaultTypeProvider() {_			@Override_			public Type getType() {_				return type.getGenericSuperclass()__			}_		})__	};return,a,link,serializable,variant,of,link,class,get,generic,superclass;suppress,warnings,serial,public,static,type,for,generic,superclass,final,class,type,return,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,superclass
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type forGenericSuperclass(final Class<?> type);1447010826;Return a {@link Serializable} variant of {@link Class#getGenericSuperclass()}.;@SuppressWarnings("serial")_	public static Type forGenericSuperclass(final Class<?> type) {_		return forTypeProvider(new DefaultTypeProvider() {_			@Override_			public Type getType() {_				return type.getGenericSuperclass()__			}_		})__	};return,a,link,serializable,variant,of,link,class,get,generic,superclass;suppress,warnings,serial,public,static,type,for,generic,superclass,final,class,type,return,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,superclass
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type forGenericSuperclass(final Class<?> type);1447541559;Return a {@link Serializable} variant of {@link Class#getGenericSuperclass()}.;@SuppressWarnings("serial")_	public static Type forGenericSuperclass(final Class<?> type) {_		return forTypeProvider(new DefaultTypeProvider() {_			@Override_			public Type getType() {_				return type.getGenericSuperclass()__			}_		})__	};return,a,link,serializable,variant,of,link,class,get,generic,superclass;suppress,warnings,serial,public,static,type,for,generic,superclass,final,class,type,return,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,superclass
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type forGenericSuperclass(final Class<?> type);1467730834;Return a {@link Serializable} variant of {@link Class#getGenericSuperclass()}.;@SuppressWarnings("serial")_	public static Type forGenericSuperclass(final Class<?> type) {_		return forTypeProvider(new DefaultTypeProvider() {_			@Override_			public Type getType() {_				return type.getGenericSuperclass()__			}_		})__	};return,a,link,serializable,variant,of,link,class,get,generic,superclass;suppress,warnings,serial,public,static,type,for,generic,superclass,final,class,type,return,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,superclass
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type forGenericSuperclass(final Class<?> type);1468948952;Return a {@link Serializable} variant of {@link Class#getGenericSuperclass()}.;@SuppressWarnings("serial")_	public static Type forGenericSuperclass(final Class<?> type) {_		return forTypeProvider(new DefaultTypeProvider() {_			@Override_			public Type getType() {_				return type.getGenericSuperclass()__			}_		})__	};return,a,link,serializable,variant,of,link,class,get,generic,superclass;suppress,warnings,serial,public,static,type,for,generic,superclass,final,class,type,return,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,superclass
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type forGenericSuperclass(final Class<?> type);1485810955;Return a {@link Serializable} variant of {@link Class#getGenericSuperclass()}.;@SuppressWarnings("serial")_	public static Type forGenericSuperclass(final Class<?> type) {_		return forTypeProvider(new DefaultTypeProvider() {_			@Override_			public Type getType() {_				return type.getGenericSuperclass()__			}_		})__	};return,a,link,serializable,variant,of,link,class,get,generic,superclass;suppress,warnings,serial,public,static,type,for,generic,superclass,final,class,type,return,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,generic,superclass
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type forGenericSuperclass(final Class<?> type);1493752435;Return a {@link Serializable} variant of {@link Class#getGenericSuperclass()}.;@SuppressWarnings("serial")_	public static Type forGenericSuperclass(final Class<?> type) {_		return forTypeProvider(type::getGenericSuperclass)__	};return,a,link,serializable,variant,of,link,class,get,generic,superclass;suppress,warnings,serial,public,static,type,for,generic,superclass,final,class,type,return,for,type,provider,type,get,generic,superclass
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type forGenericSuperclass(final Class<?> type);1495868221;Return a {@link Serializable} variant of {@link Class#getGenericSuperclass()}.;@SuppressWarnings("serial")_	public static Type forGenericSuperclass(final Class<?> type) {_		return forTypeProvider(type::getGenericSuperclass)__	};return,a,link,serializable,variant,of,link,class,get,generic,superclass;suppress,warnings,serial,public,static,type,for,generic,superclass,final,class,type,return,for,type,provider,type,get,generic,superclass
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forTypeParameters(final Class<?> type);1387307647;Return a {@link Serializable} variant of {@link Class#getTypeParameters()}.;@SuppressWarnings("serial")_	public static Type[] forTypeParameters(final Class<?> type) {_		Type[] result = new Type[type.getTypeParameters().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getTypeParameters()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,type,parameters;suppress,warnings,serial,public,static,type,for,type,parameters,final,class,type,type,result,new,type,type,get,type,parameters,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,type,parameters,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forTypeParameters(final Class<?> type);1390330765;Return a {@link Serializable} variant of {@link Class#getTypeParameters()}.;@SuppressWarnings("serial")_	public static Type[] forTypeParameters(final Class<?> type) {_		Type[] result = new Type[type.getTypeParameters().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getTypeParameters()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,type,parameters;suppress,warnings,serial,public,static,type,for,type,parameters,final,class,type,type,result,new,type,type,get,type,parameters,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,type,parameters,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forTypeParameters(final Class<?> type);1390349402;Return a {@link Serializable} variant of {@link Class#getTypeParameters()}.;@SuppressWarnings("serial")_	public static Type[] forTypeParameters(final Class<?> type) {_		Type[] result = new Type[type.getTypeParameters().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getTypeParameters()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,type,parameters;suppress,warnings,serial,public,static,type,for,type,parameters,final,class,type,type,result,new,type,type,get,type,parameters,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,type,parameters,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forTypeParameters(final Class<?> type);1392766048;Return a {@link Serializable} variant of {@link Class#getTypeParameters()}.;@SuppressWarnings("serial")_	public static Type[] forTypeParameters(final Class<?> type) {_		Type[] result = new Type[type.getTypeParameters().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getTypeParameters()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,type,parameters;suppress,warnings,serial,public,static,type,for,type,parameters,final,class,type,type,result,new,type,type,get,type,parameters,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,type,parameters,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forTypeParameters(final Class<?> type);1405696918;Return a {@link Serializable} variant of {@link Class#getTypeParameters()}.;@SuppressWarnings("serial")_	public static Type[] forTypeParameters(final Class<?> type) {_		Type[] result = new Type[type.getTypeParameters().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getTypeParameters()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,type,parameters;suppress,warnings,serial,public,static,type,for,type,parameters,final,class,type,type,result,new,type,type,get,type,parameters,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,type,parameters,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forTypeParameters(final Class<?> type);1413848647;Return a {@link Serializable} variant of {@link Class#getTypeParameters()}.;@SuppressWarnings("serial")_	public static Type[] forTypeParameters(final Class<?> type) {_		Type[] result = new Type[type.getTypeParameters().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getTypeParameters()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,type,parameters;suppress,warnings,serial,public,static,type,for,type,parameters,final,class,type,type,result,new,type,type,get,type,parameters,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,type,parameters,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forTypeParameters(final Class<?> type);1432125256;Return a {@link Serializable} variant of {@link Class#getTypeParameters()}.;@SuppressWarnings("serial")_	public static Type[] forTypeParameters(final Class<?> type) {_		Type[] result = new Type[type.getTypeParameters().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getTypeParameters()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,type,parameters;suppress,warnings,serial,public,static,type,for,type,parameters,final,class,type,type,result,new,type,type,get,type,parameters,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,type,parameters,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forTypeParameters(final Class<?> type);1446566203;Return a {@link Serializable} variant of {@link Class#getTypeParameters()}.;@SuppressWarnings("serial")_	public static Type[] forTypeParameters(final Class<?> type) {_		Type[] result = new Type[type.getTypeParameters().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getTypeParameters()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,type,parameters;suppress,warnings,serial,public,static,type,for,type,parameters,final,class,type,type,result,new,type,type,get,type,parameters,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,type,parameters,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forTypeParameters(final Class<?> type);1447010826;Return a {@link Serializable} variant of {@link Class#getTypeParameters()}.;@SuppressWarnings("serial")_	public static Type[] forTypeParameters(final Class<?> type) {_		Type[] result = new Type[type.getTypeParameters().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getTypeParameters()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,type,parameters;suppress,warnings,serial,public,static,type,for,type,parameters,final,class,type,type,result,new,type,type,get,type,parameters,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,type,parameters,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forTypeParameters(final Class<?> type);1447541559;Return a {@link Serializable} variant of {@link Class#getTypeParameters()}.;@SuppressWarnings("serial")_	public static Type[] forTypeParameters(final Class<?> type) {_		Type[] result = new Type[type.getTypeParameters().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getTypeParameters()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,type,parameters;suppress,warnings,serial,public,static,type,for,type,parameters,final,class,type,type,result,new,type,type,get,type,parameters,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,type,parameters,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forTypeParameters(final Class<?> type);1467730834;Return a {@link Serializable} variant of {@link Class#getTypeParameters()}.;@SuppressWarnings("serial")_	public static Type[] forTypeParameters(final Class<?> type) {_		Type[] result = new Type[type.getTypeParameters().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getTypeParameters()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,type,parameters;suppress,warnings,serial,public,static,type,for,type,parameters,final,class,type,type,result,new,type,type,get,type,parameters,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,type,parameters,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forTypeParameters(final Class<?> type);1468948952;Return a {@link Serializable} variant of {@link Class#getTypeParameters()}.;@SuppressWarnings("serial")_	public static Type[] forTypeParameters(final Class<?> type) {_		Type[] result = new Type[type.getTypeParameters().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getTypeParameters()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,type,parameters;suppress,warnings,serial,public,static,type,for,type,parameters,final,class,type,type,result,new,type,type,get,type,parameters,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,type,parameters,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forTypeParameters(final Class<?> type);1485810955;Return a {@link Serializable} variant of {@link Class#getTypeParameters()}.;@SuppressWarnings("serial")_	public static Type[] forTypeParameters(final Class<?> type) {_		Type[] result = new Type[type.getTypeParameters().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {_				@Override_				public Type getType() {_					return type.getTypeParameters()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,type,parameters;suppress,warnings,serial,public,static,type,for,type,parameters,final,class,type,type,result,new,type,type,get,type,parameters,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,override,public,type,get,type,return,type,get,type,parameters,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forTypeParameters(final Class<?> type);1493752435;Return a {@link Serializable} variant of {@link Class#getTypeParameters()}.;@SuppressWarnings("serial")_	public static Type[] forTypeParameters(final Class<?> type) {_		Type[] result = new Type[type.getTypeParameters().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(() -> type.getTypeParameters()[index])__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,type,parameters;suppress,warnings,serial,public,static,type,for,type,parameters,final,class,type,type,result,new,type,type,get,type,parameters,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,type,get,type,parameters,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forTypeParameters(final Class<?> type);1495868221;Return a {@link Serializable} variant of {@link Class#getTypeParameters()}.;@SuppressWarnings("serial")_	public static Type[] forTypeParameters(final Class<?> type) {_		Type[] result = new Type[type.getTypeParameters().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(() -> type.getTypeParameters()[index])__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,type,parameters;suppress,warnings,serial,public,static,type,for,type,parameters,final,class,type,type,result,new,type,type,get,type,parameters,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,type,get,type,parameters,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forTypeParameters(final Class<?> type);1496837955;Return a {@link Serializable} variant of {@link Class#getTypeParameters()}.;@SuppressWarnings("serial")_	public static Type[] forTypeParameters(final Class<?> type) {_		Type[] result = new Type[type.getTypeParameters().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(() -> type.getTypeParameters()[index])__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,type,parameters;suppress,warnings,serial,public,static,type,for,type,parameters,final,class,type,type,result,new,type,type,get,type,parameters,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,type,get,type,parameters,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forTypeParameters(final Class<?> type);1496955179;Return a {@link Serializable} variant of {@link Class#getTypeParameters()}.;@SuppressWarnings("serial")_	public static Type[] forTypeParameters(final Class<?> type) {_		Type[] result = new Type[type.getTypeParameters().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(() -> type.getTypeParameters()[index])__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,type,parameters;suppress,warnings,serial,public,static,type,for,type,parameters,final,class,type,type,result,new,type,type,get,type,parameters,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,type,get,type,parameters,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forTypeParameters(final Class<?> type);1498780456;Return a {@link Serializable} variant of {@link Class#getTypeParameters()}.;@SuppressWarnings("serial")_	public static Type[] forTypeParameters(final Class<?> type) {_		Type[] result = new Type[type.getTypeParameters().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(() -> type.getTypeParameters()[index])__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,type,parameters;suppress,warnings,serial,public,static,type,for,type,parameters,final,class,type,type,result,new,type,type,get,type,parameters,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,type,get,type,parameters,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forTypeParameters(final Class<?> type);1502974979;Return a {@link Serializable} variant of {@link Class#getTypeParameters()}.;@SuppressWarnings("serial")_	public static Type[] forTypeParameters(final Class<?> type) {_		Type[] result = new Type[type.getTypeParameters().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(() -> type.getTypeParameters()[index])__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,type,parameters;suppress,warnings,serial,public,static,type,for,type,parameters,final,class,type,type,result,new,type,type,get,type,parameters,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,type,get,type,parameters,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forTypeParameters(final Class<?> type);1530174524;Return a {@link Serializable} variant of {@link Class#getTypeParameters()}.;@SuppressWarnings("serial")_	public static Type[] forTypeParameters(final Class<?> type) {_		Type[] result = new Type[type.getTypeParameters().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(() -> type.getTypeParameters()[index])__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,type,parameters;suppress,warnings,serial,public,static,type,for,type,parameters,final,class,type,type,result,new,type,type,get,type,parameters,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,type,get,type,parameters,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forTypeParameters(final Class<?> type);1530532503;Return a {@link Serializable} variant of {@link Class#getTypeParameters()}.;@SuppressWarnings("serial")_	public static Type[] forTypeParameters(final Class<?> type) {_		Type[] result = new Type[type.getTypeParameters().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(() -> type.getTypeParameters()[index])__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,type,parameters;suppress,warnings,serial,public,static,type,for,type,parameters,final,class,type,type,result,new,type,type,get,type,parameters,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,type,get,type,parameters,index,return,result
SerializableTypeWrapper -> @SuppressWarnings("serial") 	public static Type[] forTypeParameters(final Class<?> type);1530563549;Return a {@link Serializable} variant of {@link Class#getTypeParameters()}.;@SuppressWarnings("serial")_	public static Type[] forTypeParameters(final Class<?> type) {_		Type[] result = new Type[type.getTypeParameters().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(() -> type.getTypeParameters()[index])__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,type,parameters;suppress,warnings,serial,public,static,type,for,type,parameters,final,class,type,type,result,new,type,type,get,type,parameters,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,type,get,type,parameters,index,return,result
SerializableTypeWrapper -> TypeProvider -> @Nullable 		Type getType()_;1496837955;Return the (possibly non {@link Serializable}) {@link Type}.;@Nullable_		Type getType()_;return,the,possibly,non,link,serializable,link,type;nullable,type,get,type
SerializableTypeWrapper -> TypeProvider -> @Nullable 		Type getType()_;1496955179;Return the (possibly non {@link Serializable}) {@link Type}.;@Nullable_		Type getType()_;return,the,possibly,non,link,serializable,link,type;nullable,type,get,type
SerializableTypeWrapper -> TypeProvider -> @Nullable 		Type getType()_;1498780456;Return the (possibly non {@link Serializable}) {@link Type}.;@Nullable_		Type getType()_;return,the,possibly,non,link,serializable,link,type;nullable,type,get,type
SerializableTypeWrapper -> TypeProvider -> @Nullable 		Type getType()_;1502974979;Return the (possibly non {@link Serializable}) {@link Type}.;@Nullable_		Type getType()_;return,the,possibly,non,link,serializable,link,type;nullable,type,get,type
SerializableTypeWrapper -> TypeProvider -> @Nullable 		Type getType()_;1530174524;Return the (possibly non {@link Serializable}) {@link Type}.;@Nullable_		Type getType()_;return,the,possibly,non,link,serializable,link,type;nullable,type,get,type
SerializableTypeWrapper -> TypeProvider -> @Nullable 		Type getType()_;1530532503;Return the (possibly non {@link Serializable}) {@link Type}.;@Nullable_		Type getType()_;return,the,possibly,non,link,serializable,link,type;nullable,type,get,type
SerializableTypeWrapper -> TypeProvider -> @Nullable 		Type getType()_;1530563549;Return the (possibly non {@link Serializable}) {@link Type}.;@Nullable_		Type getType()_;return,the,possibly,non,link,serializable,link,type;nullable,type,get,type
SerializableTypeWrapper -> TypeProvider -> @Nullable 		Type getType()_;1532274593;Return the (possibly non {@link Serializable}) {@link Type}.;@Nullable_		Type getType()_;return,the,possibly,non,link,serializable,link,type;nullable,type,get,type
SerializableTypeWrapper -> TypeProvider -> @Nullable 		Type getType()_;1533633343;Return the (possibly non {@link Serializable}) {@link Type}.;@Nullable_		Type getType()_;return,the,possibly,non,link,serializable,link,type;nullable,type,get,type
SerializableTypeWrapper -> public static Type[] forTypeParameters(final Class<?> type);1381992351;Return a {@link Serializable} variant of {@link Class#getTypeParameters()}.;public static Type[] forTypeParameters(final Class<?> type) {_		Type[] result = new Type[type.getTypeParameters().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new TypeProvider() {_				@Override_				public Type getType() {_					return type.getTypeParameters()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,type,parameters;public,static,type,for,type,parameters,final,class,type,type,result,new,type,type,get,type,parameters,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,type,provider,override,public,type,get,type,return,type,get,type,parameters,index,return,result
SerializableTypeWrapper -> public static Type[] forTypeParameters(final Class<?> type);1382042882;Return a {@link Serializable} variant of {@link Class#getTypeParameters()}.;public static Type[] forTypeParameters(final Class<?> type) {_		Type[] result = new Type[type.getTypeParameters().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new TypeProvider() {__				private static final long serialVersionUID = 1L____				@Override_				public Type getType() {_					return type.getTypeParameters()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,type,parameters;public,static,type,for,type,parameters,final,class,type,type,result,new,type,type,get,type,parameters,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,type,provider,private,static,final,long,serial,version,uid,1l,override,public,type,get,type,return,type,get,type,parameters,index,return,result
SerializableTypeWrapper -> public static Type[] forTypeParameters(final Class<?> type);1382750081;Return a {@link Serializable} variant of {@link Class#getTypeParameters()}.;public static Type[] forTypeParameters(final Class<?> type) {_		Type[] result = new Type[type.getTypeParameters().length]__		for (int i = 0_ i < result.length_ i++) {_			final int index = i__			result[i] = forTypeProvider(new DefaultTypeProvider() {__				private static final long serialVersionUID = 1L____				@Override_				public Type getType() {_					return type.getTypeParameters()[index]__				}_			})__		}_		return result__	};return,a,link,serializable,variant,of,link,class,get,type,parameters;public,static,type,for,type,parameters,final,class,type,type,result,new,type,type,get,type,parameters,length,for,int,i,0,i,result,length,i,final,int,index,i,result,i,for,type,provider,new,default,type,provider,private,static,final,long,serial,version,uid,1l,override,public,type,get,type,return,type,get,type,parameters,index,return,result
SerializableTypeWrapper -> TypeProvider -> Object getSource()_;1382750081;Return the source of the type or {@code null}.;Object getSource()_;return,the,source,of,the,type,or,code,null;object,get,source
SerializableTypeWrapper -> TypeProvider -> Object getSource()_;1387307647;Return the source of the type or {@code null}.;Object getSource()_;return,the,source,of,the,type,or,code,null;object,get,source
SerializableTypeWrapper -> TypeProvider -> Object getSource()_;1390330765;Return the source of the type or {@code null}.;Object getSource()_;return,the,source,of,the,type,or,code,null;object,get,source
SerializableTypeWrapper -> TypeProvider -> Object getSource()_;1390349402;Return the source of the type or {@code null}.;Object getSource()_;return,the,source,of,the,type,or,code,null;object,get,source
SerializableTypeWrapper -> TypeProvider -> Object getSource()_;1392766048;Return the source of the type or {@code null}.;Object getSource()_;return,the,source,of,the,type,or,code,null;object,get,source
SerializableTypeWrapper -> TypeProvider -> Object getSource()_;1405696918;Return the source of the type or {@code null}.;Object getSource()_;return,the,source,of,the,type,or,code,null;object,get,source
SerializableTypeWrapper -> TypeProvider -> Object getSource()_;1413848647;Return the source of the type or {@code null}.;Object getSource()_;return,the,source,of,the,type,or,code,null;object,get,source
SerializableTypeWrapper -> TypeProvider -> Object getSource()_;1432125256;Return the source of the type or {@code null}.;Object getSource()_;return,the,source,of,the,type,or,code,null;object,get,source
SerializableTypeWrapper -> TypeProvider -> Object getSource()_;1446566203;Return the source of the type or {@code null}.;Object getSource()_;return,the,source,of,the,type,or,code,null;object,get,source
SerializableTypeWrapper -> TypeProvider -> Object getSource()_;1447010826;Return the source of the type or {@code null}.;Object getSource()_;return,the,source,of,the,type,or,code,null;object,get,source
SerializableTypeWrapper -> TypeProvider -> Object getSource()_;1447541559;Return the source of the type or {@code null}.;Object getSource()_;return,the,source,of,the,type,or,code,null;object,get,source
SerializableTypeWrapper -> TypeProvider -> Object getSource()_;1467730834;Return the source of the type or {@code null}.;Object getSource()_;return,the,source,of,the,type,or,code,null;object,get,source
SerializableTypeWrapper -> TypeProvider -> Object getSource()_;1468948952;Return the source of the type or {@code null}.;Object getSource()_;return,the,source,of,the,type,or,code,null;object,get,source
SerializableTypeWrapper -> TypeProvider -> Object getSource()_;1485810955;Return the source of the type or {@code null}.;Object getSource()_;return,the,source,of,the,type,or,code,null;object,get,source
SerializableTypeWrapper -> @Nullable 	static Type forTypeProvider(final TypeProvider provider);1496837955;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} .;@Nullable_	static Type forTypeProvider(final TypeProvider provider) {_		Assert.notNull(provider, "Provider must not be null")__		Type providedType = provider.getType()__		if (providedType == null) {_			return null__		}_		if (providedType instanceof Serializable) {_			return providedType__		}_		Type cached = cache.get(providedType)__		if (cached != null) {_			return cached__		}_		for (Class<?> type : SUPPORTED_SERIALIZABLE_TYPES) {_			if (type.isAssignableFrom(providedType.getClass())) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] {type, SerializableTypeProxy.class, Serializable.class}__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				cached = (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__				cache.put(providedType, cached)__				return cached__			}_		}_		throw new IllegalArgumentException("Unsupported Type class: " + providedType.getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider;nullable,static,type,for,type,provider,final,type,provider,provider,assert,not,null,provider,provider,must,not,be,null,type,provided,type,provider,get,type,if,provided,type,null,return,null,if,provided,type,instanceof,serializable,return,provided,type,type,cached,cache,get,provided,type,if,cached,null,return,cached,for,class,type,if,type,is,assignable,from,provided,type,get,class,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,type,proxy,class,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,cached,type,proxy,new,proxy,instance,class,loader,interfaces,handler,cache,put,provided,type,cached,return,cached,throw,new,illegal,argument,exception,unsupported,type,class,provided,type,get,class,get,name
SerializableTypeWrapper -> @Nullable 	static Type forTypeProvider(final TypeProvider provider);1496955179;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} .;@Nullable_	static Type forTypeProvider(final TypeProvider provider) {_		Assert.notNull(provider, "Provider must not be null")__		Type providedType = provider.getType()__		if (providedType == null) {_			return null__		}_		if (providedType instanceof Serializable) {_			return providedType__		}_		Type cached = cache.get(providedType)__		if (cached != null) {_			return cached__		}_		for (Class<?> type : SUPPORTED_SERIALIZABLE_TYPES) {_			if (type.isAssignableFrom(providedType.getClass())) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] {type, SerializableTypeProxy.class, Serializable.class}__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				cached = (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__				cache.put(providedType, cached)__				return cached__			}_		}_		throw new IllegalArgumentException("Unsupported Type class: " + providedType.getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider;nullable,static,type,for,type,provider,final,type,provider,provider,assert,not,null,provider,provider,must,not,be,null,type,provided,type,provider,get,type,if,provided,type,null,return,null,if,provided,type,instanceof,serializable,return,provided,type,type,cached,cache,get,provided,type,if,cached,null,return,cached,for,class,type,if,type,is,assignable,from,provided,type,get,class,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,type,proxy,class,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,cached,type,proxy,new,proxy,instance,class,loader,interfaces,handler,cache,put,provided,type,cached,return,cached,throw,new,illegal,argument,exception,unsupported,type,class,provided,type,get,class,get,name
SerializableTypeWrapper -> @Nullable 	static Type forTypeProvider(final TypeProvider provider);1498780456;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} .;@Nullable_	static Type forTypeProvider(final TypeProvider provider) {_		Assert.notNull(provider, "Provider must not be null")__		Type providedType = provider.getType()__		if (providedType == null) {_			return null__		}_		if (providedType instanceof Serializable) {_			return providedType__		}_		Type cached = cache.get(providedType)__		if (cached != null) {_			return cached__		}_		for (Class<?> type : SUPPORTED_SERIALIZABLE_TYPES) {_			if (type.isAssignableFrom(providedType.getClass())) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] {type, SerializableTypeProxy.class, Serializable.class}__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				cached = (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__				cache.put(providedType, cached)__				return cached__			}_		}_		throw new IllegalArgumentException("Unsupported Type class: " + providedType.getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider;nullable,static,type,for,type,provider,final,type,provider,provider,assert,not,null,provider,provider,must,not,be,null,type,provided,type,provider,get,type,if,provided,type,null,return,null,if,provided,type,instanceof,serializable,return,provided,type,type,cached,cache,get,provided,type,if,cached,null,return,cached,for,class,type,if,type,is,assignable,from,provided,type,get,class,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,type,proxy,class,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,cached,type,proxy,new,proxy,instance,class,loader,interfaces,handler,cache,put,provided,type,cached,return,cached,throw,new,illegal,argument,exception,unsupported,type,class,provided,type,get,class,get,name
SerializableTypeWrapper -> @Nullable 	static Type forTypeProvider(final TypeProvider provider);1502974979;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} .;@Nullable_	static Type forTypeProvider(final TypeProvider provider) {_		Assert.notNull(provider, "Provider must not be null")__		Type providedType = provider.getType()__		if (providedType == null) {_			return null__		}_		if (providedType instanceof Serializable) {_			return providedType__		}_		Type cached = cache.get(providedType)__		if (cached != null) {_			return cached__		}_		for (Class<?> type : SUPPORTED_SERIALIZABLE_TYPES) {_			if (type.isAssignableFrom(providedType.getClass())) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] {type, SerializableTypeProxy.class, Serializable.class}__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				cached = (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__				cache.put(providedType, cached)__				return cached__			}_		}_		throw new IllegalArgumentException("Unsupported Type class: " + providedType.getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider;nullable,static,type,for,type,provider,final,type,provider,provider,assert,not,null,provider,provider,must,not,be,null,type,provided,type,provider,get,type,if,provided,type,null,return,null,if,provided,type,instanceof,serializable,return,provided,type,type,cached,cache,get,provided,type,if,cached,null,return,cached,for,class,type,if,type,is,assignable,from,provided,type,get,class,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,type,proxy,class,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,cached,type,proxy,new,proxy,instance,class,loader,interfaces,handler,cache,put,provided,type,cached,return,cached,throw,new,illegal,argument,exception,unsupported,type,class,provided,type,get,class,get,name
SerializableTypeWrapper -> @Nullable 	static Type forTypeProvider(final TypeProvider provider);1530174524;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} .;@Nullable_	static Type forTypeProvider(final TypeProvider provider) {_		Assert.notNull(provider, "Provider must not be null")__		Type providedType = provider.getType()__		if (providedType == null) {_			return null__		}_		if (providedType instanceof Serializable) {_			return providedType__		}_		Type cached = cache.get(providedType)__		if (cached != null) {_			return cached__		}_		for (Class<?> type : SUPPORTED_SERIALIZABLE_TYPES) {_			if (type.isAssignableFrom(providedType.getClass())) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] {type, SerializableTypeProxy.class, Serializable.class}__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				cached = (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__				cache.put(providedType, cached)__				return cached__			}_		}_		throw new IllegalArgumentException("Unsupported Type class: " + providedType.getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider;nullable,static,type,for,type,provider,final,type,provider,provider,assert,not,null,provider,provider,must,not,be,null,type,provided,type,provider,get,type,if,provided,type,null,return,null,if,provided,type,instanceof,serializable,return,provided,type,type,cached,cache,get,provided,type,if,cached,null,return,cached,for,class,type,if,type,is,assignable,from,provided,type,get,class,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,type,proxy,class,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,cached,type,proxy,new,proxy,instance,class,loader,interfaces,handler,cache,put,provided,type,cached,return,cached,throw,new,illegal,argument,exception,unsupported,type,class,provided,type,get,class,get,name
SerializableTypeWrapper -> @Nullable 	static Type forTypeProvider(final TypeProvider provider);1530532503;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} ._<p>If type artifacts are generally not serializable in the current runtime_environment, this delegate will simply return the original {@code Type} as-is.;@Nullable_	static Type forTypeProvider(final TypeProvider provider) {_		Assert.notNull(provider, "TypeProvider must not be null")__		Type providedType = provider.getType()__		if (providedType == null) {_			return null__		}_		if (!javaLangClassSerializable || providedType instanceof Serializable) {_			return providedType__		}_		Type cached = cache.get(providedType)__		if (cached != null) {_			return cached__		}_		for (Class<?> type : SUPPORTED_SERIALIZABLE_TYPES) {_			if (type.isAssignableFrom(providedType.getClass())) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] {type, SerializableTypeProxy.class, Serializable.class}__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				cached = (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__				cache.put(providedType, cached)__				return cached__			}_		}_		throw new IllegalArgumentException("Unsupported Type class: " + providedType.getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider,p,if,type,artifacts,are,generally,not,serializable,in,the,current,runtime,environment,this,delegate,will,simply,return,the,original,code,type,as,is;nullable,static,type,for,type,provider,final,type,provider,provider,assert,not,null,provider,type,provider,must,not,be,null,type,provided,type,provider,get,type,if,provided,type,null,return,null,if,java,lang,class,serializable,provided,type,instanceof,serializable,return,provided,type,type,cached,cache,get,provided,type,if,cached,null,return,cached,for,class,type,if,type,is,assignable,from,provided,type,get,class,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,type,proxy,class,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,cached,type,proxy,new,proxy,instance,class,loader,interfaces,handler,cache,put,provided,type,cached,return,cached,throw,new,illegal,argument,exception,unsupported,type,class,provided,type,get,class,get,name
SerializableTypeWrapper -> @SuppressWarnings("serial") 	@Nullable 	public static Type forGenericSuperclass(final Class<?> type);1496837955;Return a {@link Serializable} variant of {@link Class#getGenericSuperclass()}.;@SuppressWarnings("serial")_	@Nullable_	public static Type forGenericSuperclass(final Class<?> type) {_		return forTypeProvider(type::getGenericSuperclass)__	};return,a,link,serializable,variant,of,link,class,get,generic,superclass;suppress,warnings,serial,nullable,public,static,type,for,generic,superclass,final,class,type,return,for,type,provider,type,get,generic,superclass
SerializableTypeWrapper -> @SuppressWarnings("serial") 	@Nullable 	public static Type forGenericSuperclass(final Class<?> type);1496955179;Return a {@link Serializable} variant of {@link Class#getGenericSuperclass()}.;@SuppressWarnings("serial")_	@Nullable_	public static Type forGenericSuperclass(final Class<?> type) {_		return forTypeProvider(type::getGenericSuperclass)__	};return,a,link,serializable,variant,of,link,class,get,generic,superclass;suppress,warnings,serial,nullable,public,static,type,for,generic,superclass,final,class,type,return,for,type,provider,type,get,generic,superclass
SerializableTypeWrapper -> @SuppressWarnings("serial") 	@Nullable 	public static Type forGenericSuperclass(final Class<?> type);1498780456;Return a {@link Serializable} variant of {@link Class#getGenericSuperclass()}.;@SuppressWarnings("serial")_	@Nullable_	public static Type forGenericSuperclass(final Class<?> type) {_		return forTypeProvider(type::getGenericSuperclass)__	};return,a,link,serializable,variant,of,link,class,get,generic,superclass;suppress,warnings,serial,nullable,public,static,type,for,generic,superclass,final,class,type,return,for,type,provider,type,get,generic,superclass
SerializableTypeWrapper -> @SuppressWarnings("serial") 	@Nullable 	public static Type forGenericSuperclass(final Class<?> type);1502974979;Return a {@link Serializable} variant of {@link Class#getGenericSuperclass()}.;@SuppressWarnings("serial")_	@Nullable_	public static Type forGenericSuperclass(final Class<?> type) {_		return forTypeProvider(type::getGenericSuperclass)__	};return,a,link,serializable,variant,of,link,class,get,generic,superclass;suppress,warnings,serial,nullable,public,static,type,for,generic,superclass,final,class,type,return,for,type,provider,type,get,generic,superclass
SerializableTypeWrapper -> @SuppressWarnings("serial") 	@Nullable 	public static Type forGenericSuperclass(final Class<?> type);1530174524;Return a {@link Serializable} variant of {@link Class#getGenericSuperclass()}.;@SuppressWarnings("serial")_	@Nullable_	public static Type forGenericSuperclass(final Class<?> type) {_		return forTypeProvider(type::getGenericSuperclass)__	};return,a,link,serializable,variant,of,link,class,get,generic,superclass;suppress,warnings,serial,nullable,public,static,type,for,generic,superclass,final,class,type,return,for,type,provider,type,get,generic,superclass
SerializableTypeWrapper -> @SuppressWarnings("serial") 	@Nullable 	public static Type forGenericSuperclass(final Class<?> type);1530532503;Return a {@link Serializable} variant of {@link Class#getGenericSuperclass()}.;@SuppressWarnings("serial")_	@Nullable_	public static Type forGenericSuperclass(final Class<?> type) {_		return forTypeProvider(type::getGenericSuperclass)__	};return,a,link,serializable,variant,of,link,class,get,generic,superclass;suppress,warnings,serial,nullable,public,static,type,for,generic,superclass,final,class,type,return,for,type,provider,type,get,generic,superclass
SerializableTypeWrapper -> @SuppressWarnings("serial") 	@Nullable 	public static Type forGenericSuperclass(final Class<?> type);1530563549;Return a {@link Serializable} variant of {@link Class#getGenericSuperclass()}.;@SuppressWarnings("serial")_	@Nullable_	public static Type forGenericSuperclass(final Class<?> type) {_		return forTypeProvider(type::getGenericSuperclass)__	};return,a,link,serializable,variant,of,link,class,get,generic,superclass;suppress,warnings,serial,nullable,public,static,type,for,generic,superclass,final,class,type,return,for,type,provider,type,get,generic,superclass
SerializableTypeWrapper -> SerializableTypeProxy -> TypeProvider getTypeProvider()_;1390330765;Return the underlying type provider.;TypeProvider getTypeProvider()_;return,the,underlying,type,provider;type,provider,get,type,provider
SerializableTypeWrapper -> SerializableTypeProxy -> TypeProvider getTypeProvider()_;1390349402;Return the underlying type provider.;TypeProvider getTypeProvider()_;return,the,underlying,type,provider;type,provider,get,type,provider
SerializableTypeWrapper -> SerializableTypeProxy -> TypeProvider getTypeProvider()_;1392766048;Return the underlying type provider.;TypeProvider getTypeProvider()_;return,the,underlying,type,provider;type,provider,get,type,provider
SerializableTypeWrapper -> SerializableTypeProxy -> TypeProvider getTypeProvider()_;1405696918;Return the underlying type provider.;TypeProvider getTypeProvider()_;return,the,underlying,type,provider;type,provider,get,type,provider
SerializableTypeWrapper -> SerializableTypeProxy -> TypeProvider getTypeProvider()_;1413848647;Return the underlying type provider.;TypeProvider getTypeProvider()_;return,the,underlying,type,provider;type,provider,get,type,provider
SerializableTypeWrapper -> SerializableTypeProxy -> TypeProvider getTypeProvider()_;1432125256;Return the underlying type provider.;TypeProvider getTypeProvider()_;return,the,underlying,type,provider;type,provider,get,type,provider
SerializableTypeWrapper -> SerializableTypeProxy -> TypeProvider getTypeProvider()_;1446566203;Return the underlying type provider.;TypeProvider getTypeProvider()_;return,the,underlying,type,provider;type,provider,get,type,provider
SerializableTypeWrapper -> SerializableTypeProxy -> TypeProvider getTypeProvider()_;1447010826;Return the underlying type provider.;TypeProvider getTypeProvider()_;return,the,underlying,type,provider;type,provider,get,type,provider
SerializableTypeWrapper -> SerializableTypeProxy -> TypeProvider getTypeProvider()_;1447541559;Return the underlying type provider.;TypeProvider getTypeProvider()_;return,the,underlying,type,provider;type,provider,get,type,provider
SerializableTypeWrapper -> SerializableTypeProxy -> TypeProvider getTypeProvider()_;1467730834;Return the underlying type provider.;TypeProvider getTypeProvider()_;return,the,underlying,type,provider;type,provider,get,type,provider
SerializableTypeWrapper -> SerializableTypeProxy -> TypeProvider getTypeProvider()_;1468948952;Return the underlying type provider.;TypeProvider getTypeProvider()_;return,the,underlying,type,provider;type,provider,get,type,provider
SerializableTypeWrapper -> SerializableTypeProxy -> TypeProvider getTypeProvider()_;1485810955;Return the underlying type provider.;TypeProvider getTypeProvider()_;return,the,underlying,type,provider;type,provider,get,type,provider
SerializableTypeWrapper -> SerializableTypeProxy -> TypeProvider getTypeProvider()_;1493752435;Return the underlying type provider.;TypeProvider getTypeProvider()_;return,the,underlying,type,provider;type,provider,get,type,provider
SerializableTypeWrapper -> SerializableTypeProxy -> TypeProvider getTypeProvider()_;1495868221;Return the underlying type provider.;TypeProvider getTypeProvider()_;return,the,underlying,type,provider;type,provider,get,type,provider
SerializableTypeWrapper -> SerializableTypeProxy -> TypeProvider getTypeProvider()_;1496837955;Return the underlying type provider.;TypeProvider getTypeProvider()_;return,the,underlying,type,provider;type,provider,get,type,provider
SerializableTypeWrapper -> SerializableTypeProxy -> TypeProvider getTypeProvider()_;1496955179;Return the underlying type provider.;TypeProvider getTypeProvider()_;return,the,underlying,type,provider;type,provider,get,type,provider
SerializableTypeWrapper -> SerializableTypeProxy -> TypeProvider getTypeProvider()_;1498780456;Return the underlying type provider.;TypeProvider getTypeProvider()_;return,the,underlying,type,provider;type,provider,get,type,provider
SerializableTypeWrapper -> SerializableTypeProxy -> TypeProvider getTypeProvider()_;1502974979;Return the underlying type provider.;TypeProvider getTypeProvider()_;return,the,underlying,type,provider;type,provider,get,type,provider
SerializableTypeWrapper -> SerializableTypeProxy -> TypeProvider getTypeProvider()_;1530174524;Return the underlying type provider.;TypeProvider getTypeProvider()_;return,the,underlying,type,provider;type,provider,get,type,provider
SerializableTypeWrapper -> SerializableTypeProxy -> TypeProvider getTypeProvider()_;1530532503;Return the underlying type provider.;TypeProvider getTypeProvider()_;return,the,underlying,type,provider;type,provider,get,type,provider
SerializableTypeWrapper -> SerializableTypeProxy -> TypeProvider getTypeProvider()_;1530563549;Return the underlying type provider.;TypeProvider getTypeProvider()_;return,the,underlying,type,provider;type,provider,get,type,provider
SerializableTypeWrapper -> SerializableTypeProxy -> TypeProvider getTypeProvider()_;1532274593;Return the underlying type provider.;TypeProvider getTypeProvider()_;return,the,underlying,type,provider;type,provider,get,type,provider
SerializableTypeWrapper -> SerializableTypeProxy -> TypeProvider getTypeProvider()_;1533633343;Return the underlying type provider.;TypeProvider getTypeProvider()_;return,the,underlying,type,provider;type,provider,get,type,provider
SerializableTypeWrapper -> TypeProvider -> Type getType()_;1381992351;Return the (possibly non {@link Serializable}) {@link Type}.;Type getType()_;return,the,possibly,non,link,serializable,link,type;type,get,type
SerializableTypeWrapper -> TypeProvider -> Type getType()_;1382042882;Return the (possibly non {@link Serializable}) {@link Type}.;Type getType()_;return,the,possibly,non,link,serializable,link,type;type,get,type
SerializableTypeWrapper -> TypeProvider -> Type getType()_;1382750081;Return the (possibly non {@link Serializable}) {@link Type}.;Type getType()_;return,the,possibly,non,link,serializable,link,type;type,get,type
SerializableTypeWrapper -> TypeProvider -> Type getType()_;1387307647;Return the (possibly non {@link Serializable}) {@link Type}.;Type getType()_;return,the,possibly,non,link,serializable,link,type;type,get,type
SerializableTypeWrapper -> TypeProvider -> Type getType()_;1390330765;Return the (possibly non {@link Serializable}) {@link Type}.;Type getType()_;return,the,possibly,non,link,serializable,link,type;type,get,type
SerializableTypeWrapper -> TypeProvider -> Type getType()_;1390349402;Return the (possibly non {@link Serializable}) {@link Type}.;Type getType()_;return,the,possibly,non,link,serializable,link,type;type,get,type
SerializableTypeWrapper -> TypeProvider -> Type getType()_;1392766048;Return the (possibly non {@link Serializable}) {@link Type}.;Type getType()_;return,the,possibly,non,link,serializable,link,type;type,get,type
SerializableTypeWrapper -> TypeProvider -> Type getType()_;1405696918;Return the (possibly non {@link Serializable}) {@link Type}.;Type getType()_;return,the,possibly,non,link,serializable,link,type;type,get,type
SerializableTypeWrapper -> TypeProvider -> Type getType()_;1413848647;Return the (possibly non {@link Serializable}) {@link Type}.;Type getType()_;return,the,possibly,non,link,serializable,link,type;type,get,type
SerializableTypeWrapper -> TypeProvider -> Type getType()_;1432125256;Return the (possibly non {@link Serializable}) {@link Type}.;Type getType()_;return,the,possibly,non,link,serializable,link,type;type,get,type
SerializableTypeWrapper -> TypeProvider -> Type getType()_;1446566203;Return the (possibly non {@link Serializable}) {@link Type}.;Type getType()_;return,the,possibly,non,link,serializable,link,type;type,get,type
SerializableTypeWrapper -> TypeProvider -> Type getType()_;1447010826;Return the (possibly non {@link Serializable}) {@link Type}.;Type getType()_;return,the,possibly,non,link,serializable,link,type;type,get,type
SerializableTypeWrapper -> TypeProvider -> Type getType()_;1447541559;Return the (possibly non {@link Serializable}) {@link Type}.;Type getType()_;return,the,possibly,non,link,serializable,link,type;type,get,type
SerializableTypeWrapper -> TypeProvider -> Type getType()_;1467730834;Return the (possibly non {@link Serializable}) {@link Type}.;Type getType()_;return,the,possibly,non,link,serializable,link,type;type,get,type
SerializableTypeWrapper -> TypeProvider -> Type getType()_;1468948952;Return the (possibly non {@link Serializable}) {@link Type}.;Type getType()_;return,the,possibly,non,link,serializable,link,type;type,get,type
SerializableTypeWrapper -> TypeProvider -> Type getType()_;1485810955;Return the (possibly non {@link Serializable}) {@link Type}.;Type getType()_;return,the,possibly,non,link,serializable,link,type;type,get,type
SerializableTypeWrapper -> TypeProvider -> Type getType()_;1493752435;Return the (possibly non {@link Serializable}) {@link Type}.;Type getType()_;return,the,possibly,non,link,serializable,link,type;type,get,type
SerializableTypeWrapper -> TypeProvider -> Type getType()_;1495868221;Return the (possibly non {@link Serializable}) {@link Type}.;Type getType()_;return,the,possibly,non,link,serializable,link,type;type,get,type
SerializableTypeWrapper -> @Nullable 	static Type forTypeProvider(TypeProvider provider);1530563549;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} ._<p>If type artifacts are generally not serializable in the current runtime_environment, this delegate will simply return the original {@code Type} as-is.;@Nullable_	static Type forTypeProvider(TypeProvider provider) {_		Type providedType = provider.getType()__		if (providedType == null || providedType instanceof Serializable) {_			_			return providedType__		}_		if (!Serializable.class.isAssignableFrom(Class.class)) {_			_			_			return providedType__		}__		_		Type cached = cache.get(providedType)__		if (cached != null) {_			return cached__		}_		for (Class<?> type : SUPPORTED_SERIALIZABLE_TYPES) {_			if (type.isInstance(providedType)) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] {type, SerializableTypeProxy.class, Serializable.class}__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				cached = (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__				cache.put(providedType, cached)__				return cached__			}_		}_		throw new IllegalArgumentException("Unsupported Type class: " + providedType.getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider,p,if,type,artifacts,are,generally,not,serializable,in,the,current,runtime,environment,this,delegate,will,simply,return,the,original,code,type,as,is;nullable,static,type,for,type,provider,type,provider,provider,type,provided,type,provider,get,type,if,provided,type,null,provided,type,instanceof,serializable,return,provided,type,if,serializable,class,is,assignable,from,class,class,return,provided,type,type,cached,cache,get,provided,type,if,cached,null,return,cached,for,class,type,if,type,is,instance,provided,type,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,type,proxy,class,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,cached,type,proxy,new,proxy,instance,class,loader,interfaces,handler,cache,put,provided,type,cached,return,cached,throw,new,illegal,argument,exception,unsupported,type,class,provided,type,get,class,get,name
SerializableTypeWrapper -> @Nullable 	static Type forTypeProvider(TypeProvider provider);1532274593;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} ._<p>If type artifacts are generally not serializable in the current runtime_environment, this delegate will simply return the original {@code Type} as-is.;@Nullable_	static Type forTypeProvider(TypeProvider provider) {_		Type providedType = provider.getType()__		if (providedType == null || providedType instanceof Serializable) {_			_			return providedType__		}_		if (!Serializable.class.isAssignableFrom(Class.class)) {_			_			_			return providedType__		}__		_		Type cached = cache.get(providedType)__		if (cached != null) {_			return cached__		}_		for (Class<?> type : SUPPORTED_SERIALIZABLE_TYPES) {_			if (type.isInstance(providedType)) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] {type, SerializableTypeProxy.class, Serializable.class}__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				cached = (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__				cache.put(providedType, cached)__				return cached__			}_		}_		throw new IllegalArgumentException("Unsupported Type class: " + providedType.getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider,p,if,type,artifacts,are,generally,not,serializable,in,the,current,runtime,environment,this,delegate,will,simply,return,the,original,code,type,as,is;nullable,static,type,for,type,provider,type,provider,provider,type,provided,type,provider,get,type,if,provided,type,null,provided,type,instanceof,serializable,return,provided,type,if,serializable,class,is,assignable,from,class,class,return,provided,type,type,cached,cache,get,provided,type,if,cached,null,return,cached,for,class,type,if,type,is,instance,provided,type,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,type,proxy,class,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,cached,type,proxy,new,proxy,instance,class,loader,interfaces,handler,cache,put,provided,type,cached,return,cached,throw,new,illegal,argument,exception,unsupported,type,class,provided,type,get,class,get,name
SerializableTypeWrapper -> @Nullable 	static Type forTypeProvider(TypeProvider provider);1533633343;Return a {@link Serializable} {@link Type} backed by a {@link TypeProvider} ._<p>If type artifacts are generally not serializable in the current runtime_environment, this delegate will simply return the original {@code Type} as-is.;@Nullable_	static Type forTypeProvider(TypeProvider provider) {_		Type providedType = provider.getType()__		if (providedType == null || providedType instanceof Serializable) {_			_			return providedType__		}_		if (GraalDetector.inImageCode() || !Serializable.class.isAssignableFrom(Class.class)) {_			_			_			return providedType__		}__		_		Type cached = cache.get(providedType)__		if (cached != null) {_			return cached__		}_		for (Class<?> type : SUPPORTED_SERIALIZABLE_TYPES) {_			if (type.isInstance(providedType)) {_				ClassLoader classLoader = provider.getClass().getClassLoader()__				Class<?>[] interfaces = new Class<?>[] {type, SerializableTypeProxy.class, Serializable.class}__				InvocationHandler handler = new TypeProxyInvocationHandler(provider)__				cached = (Type) Proxy.newProxyInstance(classLoader, interfaces, handler)__				cache.put(providedType, cached)__				return cached__			}_		}_		throw new IllegalArgumentException("Unsupported Type class: " + providedType.getClass().getName())__	};return,a,link,serializable,link,type,backed,by,a,link,type,provider,p,if,type,artifacts,are,generally,not,serializable,in,the,current,runtime,environment,this,delegate,will,simply,return,the,original,code,type,as,is;nullable,static,type,for,type,provider,type,provider,provider,type,provided,type,provider,get,type,if,provided,type,null,provided,type,instanceof,serializable,return,provided,type,if,graal,detector,in,image,code,serializable,class,is,assignable,from,class,class,return,provided,type,type,cached,cache,get,provided,type,if,cached,null,return,cached,for,class,type,if,type,is,instance,provided,type,class,loader,class,loader,provider,get,class,get,class,loader,class,interfaces,new,class,type,serializable,type,proxy,class,serializable,class,invocation,handler,handler,new,type,proxy,invocation,handler,provider,cached,type,proxy,new,proxy,instance,class,loader,interfaces,handler,cache,put,provided,type,cached,return,cached,throw,new,illegal,argument,exception,unsupported,type,class,provided,type,get,class,get,name
SerializableTypeWrapper -> public static Type forMethodParameter(MethodParameter methodParameter);1381992351;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> public static Type forMethodParameter(MethodParameter methodParameter);1382042882;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> public static Type forMethodParameter(MethodParameter methodParameter);1382750081;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> public static Type forMethodParameter(MethodParameter methodParameter);1387307647;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> public static Type forMethodParameter(MethodParameter methodParameter);1390330765;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> public static Type forMethodParameter(MethodParameter methodParameter);1390349402;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> public static Type forMethodParameter(MethodParameter methodParameter);1392766048;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> public static Type forMethodParameter(MethodParameter methodParameter);1405696918;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> public static Type forMethodParameter(MethodParameter methodParameter);1413848647;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> public static Type forMethodParameter(MethodParameter methodParameter);1432125256;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> public static Type forMethodParameter(MethodParameter methodParameter);1446566203;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> public static Type forMethodParameter(MethodParameter methodParameter);1447010826;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> public static Type forMethodParameter(MethodParameter methodParameter);1447541559;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> public static Type forMethodParameter(MethodParameter methodParameter);1467730834;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> public static Type forMethodParameter(MethodParameter methodParameter);1468948952;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> public static Type forMethodParameter(MethodParameter methodParameter);1485810955;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> public static Type forMethodParameter(MethodParameter methodParameter);1493752435;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
SerializableTypeWrapper -> public static Type forMethodParameter(MethodParameter methodParameter);1495868221;Return a {@link Serializable} variant of_{@link MethodParameter#getGenericParameterType()}.;public static Type forMethodParameter(MethodParameter methodParameter) {_		return forTypeProvider(new MethodParameterTypeProvider(methodParameter))__	};return,a,link,serializable,variant,of,link,method,parameter,get,generic,parameter,type;public,static,type,for,method,parameter,method,parameter,method,parameter,return,for,type,provider,new,method,parameter,type,provider,method,parameter
