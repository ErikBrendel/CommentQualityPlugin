commented;modifiers;parameterAmount;loc;comment;code
false;public;2;4;;@Override public boolean canDecode(ResolvableType elementType, @Nullable MimeType mimeType) {     return (elementType.resolve() == byte[].class && super.canDecode(elementType, mimeType)). }
false;protected;4;12;;@Override protected byte[] decodeDataBuffer(DataBuffer dataBuffer, ResolvableType elementType, @Nullable MimeType mimeType, @Nullable Map<String, Object> hints) {     byte[] result = new byte[dataBuffer.readableByteCount()].     dataBuffer.read(result).     DataBufferUtils.release(dataBuffer).     if (logger.isDebugEnabled()) {         logger.debug(Hints.getLogPrefix(hints) + "Read " + result.length + " bytes").     }     return result. }
