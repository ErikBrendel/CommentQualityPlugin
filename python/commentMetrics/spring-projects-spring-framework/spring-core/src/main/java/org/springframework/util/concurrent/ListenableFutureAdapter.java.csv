commented;modifiers;parameterAmount;loc;comment;code
false;public;1;4;;@Override public void addCallback(final ListenableFutureCallback<? super T> callback) {     addCallback(callback, callback). }
false;public;1;19;;@Override public void onSuccess(@Nullable S result) {     T adapted = null.     if (result != null) {         try {             adapted = adaptInternal(result).         } catch (ExecutionException ex) {             Throwable cause = ex.getCause().             onFailure(cause != null ? cause : ex).             return.         } catch (Throwable ex) {             onFailure(ex).             return.         }     }     successCallback.onSuccess(adapted). }
false;public;1;4;;@Override public void onFailure(Throwable ex) {     failureCallback.onFailure(ex). }
false;public;2;29;;@Override public void addCallback(final SuccessCallback<? super T> successCallback, final FailureCallback failureCallback) {     ListenableFuture<S> listenableAdaptee = (ListenableFuture<S>) getAdaptee().     listenableAdaptee.addCallback(new ListenableFutureCallback<S>() {          @Override         public void onSuccess(@Nullable S result) {             T adapted = null.             if (result != null) {                 try {                     adapted = adaptInternal(result).                 } catch (ExecutionException ex) {                     Throwable cause = ex.getCause().                     onFailure(cause != null ? cause : ex).                     return.                 } catch (Throwable ex) {                     onFailure(ex).                     return.                 }             }             successCallback.onSuccess(adapted).         }          @Override         public void onFailure(Throwable ex) {             failureCallback.onFailure(ex).         }     }). }
