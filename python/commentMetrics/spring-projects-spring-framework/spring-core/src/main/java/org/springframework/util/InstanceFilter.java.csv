commented;modifiers;parameterAmount;loc;comment;code
true;public;1;19;/**  * Determine if the specified {code instance} matches this filter.  */ ;/**  * Determine if the specified {code instance} matches this filter.  */ public boolean match(T instance) {     Assert.notNull(instance, "Instance to match must not be null").     boolean includesSet = !this.includes.isEmpty().     boolean excludesSet = !this.excludes.isEmpty().     if (!includesSet && !excludesSet) {         return this.matchIfEmpty.     }     boolean matchIncludes = match(instance, this.includes).     boolean matchExcludes = match(instance, this.excludes).     if (!includesSet) {         return !matchExcludes.     }     if (!excludesSet) {         return matchIncludes.     }     return matchIncludes && !matchExcludes. }
true;protected;2;3;/**  * Determine if the specified {@code instance} is equal to the  * specified {@code candidate}.  * @param instance the instance to handle  * @param candidate a candidate defined by this filter  * @return {@code true} if the instance matches the candidate  */ ;/**  * Determine if the specified {@code instance} is equal to the  * specified {@code candidate}.  * @param instance the instance to handle  * @param candidate a candidate defined by this filter  * @return {@code true} if the instance matches the candidate  */ protected boolean match(T instance, T candidate) {     return instance.equals(candidate). }
true;protected;2;8;/**  * Determine if the specified {@code instance} matches one of the candidates.  * <p>If the candidates collection is {@code null}, returns {@code false}.  * @param instance the instance to check  * @param candidates a list of candidates  * @return {@code true} if the instance match or the candidates collection is null  */ ;/**  * Determine if the specified {@code instance} matches one of the candidates.  * <p>If the candidates collection is {@code null}, returns {@code false}.  * @param instance the instance to check  * @param candidates a list of candidates  * @return {@code true} if the instance match or the candidates collection is null  */ protected boolean match(T instance, Collection<? extends T> candidates) {     for (T candidate : candidates) {         if (match(instance, candidate)) {             return true.         }     }     return false. }
false;public;0;8;;@Override public String toString() {     StringBuilder sb = new StringBuilder(getClass().getSimpleName()).     sb.append(": includes=").append(this.includes).     sb.append(", excludes=").append(this.excludes).     sb.append(", matchIfEmpty=").append(this.matchIfEmpty).     return sb.toString(). }
