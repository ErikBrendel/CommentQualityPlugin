commented;modifiers;parameterAmount;loc;comment;code
true;protected,final;0;3;/**  * Return the ValueStyler used by this ToStringStyler.  */ ;/**  * Return the ValueStyler used by this ToStringStyler.  */ protected final ValueStyler getValueStyler() {     return this.valueStyler. }
false;public;2;13;;@Override public void styleStart(StringBuilder buffer, Object obj) {     if (!obj.getClass().isArray()) {         buffer.append('[').append(ClassUtils.getShortName(obj.getClass())).         styleIdentityHashCode(buffer, obj).     } else {         buffer.append('[').         styleIdentityHashCode(buffer, obj).         buffer.append(' ').         styleValue(buffer, obj).     } }
false;private;2;4;;private void styleIdentityHashCode(StringBuilder buffer, Object obj) {     buffer.append('@').     buffer.append(ObjectUtils.getIdentityHexString(obj)). }
false;public;2;4;;@Override public void styleEnd(StringBuilder buffer, Object o) {     buffer.append(']'). }
false;public;3;6;;@Override public void styleField(StringBuilder buffer, String fieldName, @Nullable Object value) {     styleFieldStart(buffer, fieldName).     styleValue(buffer, value).     styleFieldEnd(buffer, fieldName). }
false;protected;2;3;;protected void styleFieldStart(StringBuilder buffer, String fieldName) {     buffer.append(' ').append(fieldName).append(" = "). }
false;protected;2;2;;protected void styleFieldEnd(StringBuilder buffer, String fieldName) { }
false;public;2;4;;@Override public void styleValue(StringBuilder buffer, @Nullable Object value) {     buffer.append(this.valueStyler.style(value)). }
false;public;1;4;;@Override public void styleFieldSeparator(StringBuilder buffer) {     buffer.append(','). }
