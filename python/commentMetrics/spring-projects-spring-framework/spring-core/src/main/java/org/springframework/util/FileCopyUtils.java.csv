# id;timestamp;commentText;codeText;commentWords;codeWords
FileCopyUtils -> public static int copy(File in, File out) throws IOException;1328020251;Copy the contents of the given input File to the given output File._@param in the file to copy from_@param out the file to copy to_@return the number of bytes copied_@throws IOException in case of I/O errors;public static int copy(File in, File out) throws IOException {_		Assert.notNull(in, "No input File specified")__		Assert.notNull(out, "No output File specified")__		return copy(new BufferedInputStream(new FileInputStream(in)),_		    new BufferedOutputStream(new FileOutputStream(out)))__	};copy,the,contents,of,the,given,input,file,to,the,given,output,file,param,in,the,file,to,copy,from,param,out,the,file,to,copy,to,return,the,number,of,bytes,copied,throws,ioexception,in,case,of,i,o,errors;public,static,int,copy,file,in,file,out,throws,ioexception,assert,not,null,in,no,input,file,specified,assert,not,null,out,no,output,file,specified,return,copy,new,buffered,input,stream,new,file,input,stream,in,new,buffered,output,stream,new,file,output,stream,out
FileCopyUtils -> public static int copy(File in, File out) throws IOException;1356735495;Copy the contents of the given input File to the given output File._@param in the file to copy from_@param out the file to copy to_@return the number of bytes copied_@throws IOException in case of I/O errors;public static int copy(File in, File out) throws IOException {_		Assert.notNull(in, "No input File specified")__		Assert.notNull(out, "No output File specified")__		return copy(new BufferedInputStream(new FileInputStream(in)),_			new BufferedOutputStream(new FileOutputStream(out)))__	};copy,the,contents,of,the,given,input,file,to,the,given,output,file,param,in,the,file,to,copy,from,param,out,the,file,to,copy,to,return,the,number,of,bytes,copied,throws,ioexception,in,case,of,i,o,errors;public,static,int,copy,file,in,file,out,throws,ioexception,assert,not,null,in,no,input,file,specified,assert,not,null,out,no,output,file,specified,return,copy,new,buffered,input,stream,new,file,input,stream,in,new,buffered,output,stream,new,file,output,stream,out
FileCopyUtils -> public static int copy(File in, File out) throws IOException;1362408075;Copy the contents of the given input File to the given output File._@param in the file to copy from_@param out the file to copy to_@return the number of bytes copied_@throws IOException in case of I/O errors;public static int copy(File in, File out) throws IOException {_		Assert.notNull(in, "No input File specified")__		Assert.notNull(out, "No output File specified")__		return copy(new BufferedInputStream(new FileInputStream(in)),_			new BufferedOutputStream(new FileOutputStream(out)))__	};copy,the,contents,of,the,given,input,file,to,the,given,output,file,param,in,the,file,to,copy,from,param,out,the,file,to,copy,to,return,the,number,of,bytes,copied,throws,ioexception,in,case,of,i,o,errors;public,static,int,copy,file,in,file,out,throws,ioexception,assert,not,null,in,no,input,file,specified,assert,not,null,out,no,output,file,specified,return,copy,new,buffered,input,stream,new,file,input,stream,in,new,buffered,output,stream,new,file,output,stream,out
FileCopyUtils -> public static int copy(File in, File out) throws IOException;1489687033;Copy the contents of the given input File to the given output File._@param in the file to copy from_@param out the file to copy to_@return the number of bytes copied_@throws IOException in case of I/O errors;public static int copy(File in, File out) throws IOException {_		Assert.notNull(in, "No input File specified")__		Assert.notNull(out, "No output File specified")___		return copy(new BufferedInputStream(new FileInputStream(in)),_				new BufferedOutputStream(new FileOutputStream(out)))__	};copy,the,contents,of,the,given,input,file,to,the,given,output,file,param,in,the,file,to,copy,from,param,out,the,file,to,copy,to,return,the,number,of,bytes,copied,throws,ioexception,in,case,of,i,o,errors;public,static,int,copy,file,in,file,out,throws,ioexception,assert,not,null,in,no,input,file,specified,assert,not,null,out,no,output,file,specified,return,copy,new,buffered,input,stream,new,file,input,stream,in,new,buffered,output,stream,new,file,output,stream,out
FileCopyUtils -> public static int copy(File in, File out) throws IOException;1495868221;Copy the contents of the given input File to the given output File._@param in the file to copy from_@param out the file to copy to_@return the number of bytes copied_@throws IOException in case of I/O errors;public static int copy(File in, File out) throws IOException {_		Assert.notNull(in, "No input File specified")__		Assert.notNull(out, "No output File specified")___		return copy(new BufferedInputStream(new FileInputStream(in)),_				new BufferedOutputStream(new FileOutputStream(out)))__	};copy,the,contents,of,the,given,input,file,to,the,given,output,file,param,in,the,file,to,copy,from,param,out,the,file,to,copy,to,return,the,number,of,bytes,copied,throws,ioexception,in,case,of,i,o,errors;public,static,int,copy,file,in,file,out,throws,ioexception,assert,not,null,in,no,input,file,specified,assert,not,null,out,no,output,file,specified,return,copy,new,buffered,input,stream,new,file,input,stream,in,new,buffered,output,stream,new,file,output,stream,out
FileCopyUtils -> public static int copy(File in, File out) throws IOException;1500332081;Copy the contents of the given input File to the given output File._@param in the file to copy from_@param out the file to copy to_@return the number of bytes copied_@throws IOException in case of I/O errors;public static int copy(File in, File out) throws IOException {_		Assert.notNull(in, "No input File specified")__		Assert.notNull(out, "No output File specified")__		return copy(Files.newInputStream(in.toPath()), Files.newOutputStream(out.toPath()))__	};copy,the,contents,of,the,given,input,file,to,the,given,output,file,param,in,the,file,to,copy,from,param,out,the,file,to,copy,to,return,the,number,of,bytes,copied,throws,ioexception,in,case,of,i,o,errors;public,static,int,copy,file,in,file,out,throws,ioexception,assert,not,null,in,no,input,file,specified,assert,not,null,out,no,output,file,specified,return,copy,files,new,input,stream,in,to,path,files,new,output,stream,out,to,path
FileCopyUtils -> public static int copy(File in, File out) throws IOException;1530174524;Copy the contents of the given input File to the given output File._@param in the file to copy from_@param out the file to copy to_@return the number of bytes copied_@throws IOException in case of I/O errors;public static int copy(File in, File out) throws IOException {_		Assert.notNull(in, "No input File specified")__		Assert.notNull(out, "No output File specified")__		return copy(Files.newInputStream(in.toPath()), Files.newOutputStream(out.toPath()))__	};copy,the,contents,of,the,given,input,file,to,the,given,output,file,param,in,the,file,to,copy,from,param,out,the,file,to,copy,to,return,the,number,of,bytes,copied,throws,ioexception,in,case,of,i,o,errors;public,static,int,copy,file,in,file,out,throws,ioexception,assert,not,null,in,no,input,file,specified,assert,not,null,out,no,output,file,specified,return,copy,files,new,input,stream,in,to,path,files,new,output,stream,out,to,path
FileCopyUtils -> public static byte[] copyToByteArray(InputStream in) throws IOException;1328020251;Copy the contents of the given InputStream into a new byte array._Closes the stream when done._@param in the stream to copy from_@return the new byte array that has been copied to_@throws IOException in case of I/O errors;public static byte[] copyToByteArray(InputStream in) throws IOException {_		ByteArrayOutputStream out = new ByteArrayOutputStream(BUFFER_SIZE)__		copy(in, out)__		return out.toByteArray()__	};copy,the,contents,of,the,given,input,stream,into,a,new,byte,array,closes,the,stream,when,done,param,in,the,stream,to,copy,from,return,the,new,byte,array,that,has,been,copied,to,throws,ioexception,in,case,of,i,o,errors;public,static,byte,copy,to,byte,array,input,stream,in,throws,ioexception,byte,array,output,stream,out,new,byte,array,output,stream,copy,in,out,return,out,to,byte,array
FileCopyUtils -> public static byte[] copyToByteArray(InputStream in) throws IOException;1356735495;Copy the contents of the given InputStream into a new byte array._Closes the stream when done._@param in the stream to copy from_@return the new byte array that has been copied to_@throws IOException in case of I/O errors;public static byte[] copyToByteArray(InputStream in) throws IOException {_		ByteArrayOutputStream out = new ByteArrayOutputStream(BUFFER_SIZE)__		copy(in, out)__		return out.toByteArray()__	};copy,the,contents,of,the,given,input,stream,into,a,new,byte,array,closes,the,stream,when,done,param,in,the,stream,to,copy,from,return,the,new,byte,array,that,has,been,copied,to,throws,ioexception,in,case,of,i,o,errors;public,static,byte,copy,to,byte,array,input,stream,in,throws,ioexception,byte,array,output,stream,out,new,byte,array,output,stream,copy,in,out,return,out,to,byte,array
FileCopyUtils -> public static byte[] copyToByteArray(InputStream in) throws IOException;1362408075;Copy the contents of the given InputStream into a new byte array._Closes the stream when done._@param in the stream to copy from_@return the new byte array that has been copied to_@throws IOException in case of I/O errors;public static byte[] copyToByteArray(InputStream in) throws IOException {_		ByteArrayOutputStream out = new ByteArrayOutputStream(BUFFER_SIZE)__		copy(in, out)__		return out.toByteArray()__	};copy,the,contents,of,the,given,input,stream,into,a,new,byte,array,closes,the,stream,when,done,param,in,the,stream,to,copy,from,return,the,new,byte,array,that,has,been,copied,to,throws,ioexception,in,case,of,i,o,errors;public,static,byte,copy,to,byte,array,input,stream,in,throws,ioexception,byte,array,output,stream,out,new,byte,array,output,stream,copy,in,out,return,out,to,byte,array
FileCopyUtils -> public static byte[] copyToByteArray(InputStream in) throws IOException;1489687033;Copy the contents of the given InputStream into a new byte array._Closes the stream when done._@param in the stream to copy from (may be {@code null} or empty)_@return the new byte array that has been copied to (possibly empty)_@throws IOException in case of I/O errors;public static byte[] copyToByteArray(InputStream in) throws IOException {_		if (in == null) {_			return new byte[0]__		}__		ByteArrayOutputStream out = new ByteArrayOutputStream(BUFFER_SIZE)__		copy(in, out)__		return out.toByteArray()__	};copy,the,contents,of,the,given,input,stream,into,a,new,byte,array,closes,the,stream,when,done,param,in,the,stream,to,copy,from,may,be,code,null,or,empty,return,the,new,byte,array,that,has,been,copied,to,possibly,empty,throws,ioexception,in,case,of,i,o,errors;public,static,byte,copy,to,byte,array,input,stream,in,throws,ioexception,if,in,null,return,new,byte,0,byte,array,output,stream,out,new,byte,array,output,stream,copy,in,out,return,out,to,byte,array
FileCopyUtils -> public static void copy(String in, Writer out) throws IOException;1328020251;Copy the contents of the given String to the given output Writer._Closes the write when done._@param in the String to copy from_@param out the Writer to copy to_@throws IOException in case of I/O errors;public static void copy(String in, Writer out) throws IOException {_		Assert.notNull(in, "No input String specified")__		Assert.notNull(out, "No Writer specified")__		try {_			out.write(in)__		}_		finally {_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,string,to,the,given,output,writer,closes,the,write,when,done,param,in,the,string,to,copy,from,param,out,the,writer,to,copy,to,throws,ioexception,in,case,of,i,o,errors;public,static,void,copy,string,in,writer,out,throws,ioexception,assert,not,null,in,no,input,string,specified,assert,not,null,out,no,writer,specified,try,out,write,in,finally,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static void copy(String in, Writer out) throws IOException;1356735495;Copy the contents of the given String to the given output Writer._Closes the write when done._@param in the String to copy from_@param out the Writer to copy to_@throws IOException in case of I/O errors;public static void copy(String in, Writer out) throws IOException {_		Assert.notNull(in, "No input String specified")__		Assert.notNull(out, "No Writer specified")__		try {_			out.write(in)__		}_		finally {_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,string,to,the,given,output,writer,closes,the,write,when,done,param,in,the,string,to,copy,from,param,out,the,writer,to,copy,to,throws,ioexception,in,case,of,i,o,errors;public,static,void,copy,string,in,writer,out,throws,ioexception,assert,not,null,in,no,input,string,specified,assert,not,null,out,no,writer,specified,try,out,write,in,finally,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static void copy(String in, Writer out) throws IOException;1362408075;Copy the contents of the given String to the given output Writer._Closes the writer when done._@param in the String to copy from_@param out the Writer to copy to_@throws IOException in case of I/O errors;public static void copy(String in, Writer out) throws IOException {_		Assert.notNull(in, "No input String specified")__		Assert.notNull(out, "No Writer specified")__		try {_			out.write(in)__		}_		finally {_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,string,to,the,given,output,writer,closes,the,writer,when,done,param,in,the,string,to,copy,from,param,out,the,writer,to,copy,to,throws,ioexception,in,case,of,i,o,errors;public,static,void,copy,string,in,writer,out,throws,ioexception,assert,not,null,in,no,input,string,specified,assert,not,null,out,no,writer,specified,try,out,write,in,finally,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static void copy(String in, Writer out) throws IOException;1489687033;Copy the contents of the given String to the given output Writer._Closes the writer when done._@param in the String to copy from_@param out the Writer to copy to_@throws IOException in case of I/O errors;public static void copy(String in, Writer out) throws IOException {_		Assert.notNull(in, "No input String specified")__		Assert.notNull(out, "No Writer specified")___		try {_			out.write(in)__		}_		finally {_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,string,to,the,given,output,writer,closes,the,writer,when,done,param,in,the,string,to,copy,from,param,out,the,writer,to,copy,to,throws,ioexception,in,case,of,i,o,errors;public,static,void,copy,string,in,writer,out,throws,ioexception,assert,not,null,in,no,input,string,specified,assert,not,null,out,no,writer,specified,try,out,write,in,finally,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static void copy(String in, Writer out) throws IOException;1495868221;Copy the contents of the given String to the given output Writer._Closes the writer when done._@param in the String to copy from_@param out the Writer to copy to_@throws IOException in case of I/O errors;public static void copy(String in, Writer out) throws IOException {_		Assert.notNull(in, "No input String specified")__		Assert.notNull(out, "No Writer specified")___		try {_			out.write(in)__		}_		finally {_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,string,to,the,given,output,writer,closes,the,writer,when,done,param,in,the,string,to,copy,from,param,out,the,writer,to,copy,to,throws,ioexception,in,case,of,i,o,errors;public,static,void,copy,string,in,writer,out,throws,ioexception,assert,not,null,in,no,input,string,specified,assert,not,null,out,no,writer,specified,try,out,write,in,finally,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static void copy(String in, Writer out) throws IOException;1500332081;Copy the contents of the given String to the given output Writer._Closes the writer when done._@param in the String to copy from_@param out the Writer to copy to_@throws IOException in case of I/O errors;public static void copy(String in, Writer out) throws IOException {_		Assert.notNull(in, "No input String specified")__		Assert.notNull(out, "No Writer specified")___		try {_			out.write(in)__		}_		finally {_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,string,to,the,given,output,writer,closes,the,writer,when,done,param,in,the,string,to,copy,from,param,out,the,writer,to,copy,to,throws,ioexception,in,case,of,i,o,errors;public,static,void,copy,string,in,writer,out,throws,ioexception,assert,not,null,in,no,input,string,specified,assert,not,null,out,no,writer,specified,try,out,write,in,finally,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static void copy(String in, Writer out) throws IOException;1530174524;Copy the contents of the given String to the given output Writer._Closes the writer when done._@param in the String to copy from_@param out the Writer to copy to_@throws IOException in case of I/O errors;public static void copy(String in, Writer out) throws IOException {_		Assert.notNull(in, "No input String specified")__		Assert.notNull(out, "No Writer specified")___		try {_			out.write(in)__		}_		finally {_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,string,to,the,given,output,writer,closes,the,writer,when,done,param,in,the,string,to,copy,from,param,out,the,writer,to,copy,to,throws,ioexception,in,case,of,i,o,errors;public,static,void,copy,string,in,writer,out,throws,ioexception,assert,not,null,in,no,input,string,specified,assert,not,null,out,no,writer,specified,try,out,write,in,finally,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static int copy(InputStream in, OutputStream out) throws IOException;1328020251;Copy the contents of the given InputStream to the given OutputStream._Closes both streams when done._@param in the stream to copy from_@param out the stream to copy to_@return the number of bytes copied_@throws IOException in case of I/O errors;public static int copy(InputStream in, OutputStream out) throws IOException {_		Assert.notNull(in, "No InputStream specified")__		Assert.notNull(out, "No OutputStream specified")__		try {_			int byteCount = 0__			byte[] buffer = new byte[BUFFER_SIZE]__			int bytesRead = -1__			while ((bytesRead = in.read(buffer)) != -1) {_				out.write(buffer, 0, bytesRead)__				byteCount += bytesRead__			}_			out.flush()__			return byteCount__		}_		finally {_			try {_				in.close()__			}_			catch (IOException ex) {_			}_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,input,stream,to,the,given,output,stream,closes,both,streams,when,done,param,in,the,stream,to,copy,from,param,out,the,stream,to,copy,to,return,the,number,of,bytes,copied,throws,ioexception,in,case,of,i,o,errors;public,static,int,copy,input,stream,in,output,stream,out,throws,ioexception,assert,not,null,in,no,input,stream,specified,assert,not,null,out,no,output,stream,specified,try,int,byte,count,0,byte,buffer,new,byte,int,bytes,read,1,while,bytes,read,in,read,buffer,1,out,write,buffer,0,bytes,read,byte,count,bytes,read,out,flush,return,byte,count,finally,try,in,close,catch,ioexception,ex,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static int copy(InputStream in, OutputStream out) throws IOException;1356735495;Copy the contents of the given InputStream to the given OutputStream._Closes both streams when done._@param in the stream to copy from_@param out the stream to copy to_@return the number of bytes copied_@throws IOException in case of I/O errors;public static int copy(InputStream in, OutputStream out) throws IOException {_		Assert.notNull(in, "No InputStream specified")__		Assert.notNull(out, "No OutputStream specified")__		try {_			int byteCount = 0__			byte[] buffer = new byte[BUFFER_SIZE]__			int bytesRead = -1__			while ((bytesRead = in.read(buffer)) != -1) {_				out.write(buffer, 0, bytesRead)__				byteCount += bytesRead__			}_			out.flush()__			return byteCount__		}_		finally {_			try {_				in.close()__			}_			catch (IOException ex) {_			}_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,input,stream,to,the,given,output,stream,closes,both,streams,when,done,param,in,the,stream,to,copy,from,param,out,the,stream,to,copy,to,return,the,number,of,bytes,copied,throws,ioexception,in,case,of,i,o,errors;public,static,int,copy,input,stream,in,output,stream,out,throws,ioexception,assert,not,null,in,no,input,stream,specified,assert,not,null,out,no,output,stream,specified,try,int,byte,count,0,byte,buffer,new,byte,int,bytes,read,1,while,bytes,read,in,read,buffer,1,out,write,buffer,0,bytes,read,byte,count,bytes,read,out,flush,return,byte,count,finally,try,in,close,catch,ioexception,ex,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static int copy(InputStream in, OutputStream out) throws IOException;1362408075;Copy the contents of the given InputStream to the given OutputStream._Closes both streams when done._@param in the stream to copy from_@param out the stream to copy to_@return the number of bytes copied_@throws IOException in case of I/O errors;public static int copy(InputStream in, OutputStream out) throws IOException {_		Assert.notNull(in, "No InputStream specified")__		Assert.notNull(out, "No OutputStream specified")__		try {_			return StreamUtils.copy(in, out)__		}_		finally {_			try {_				in.close()__			}_			catch (IOException ex) {_			}_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,input,stream,to,the,given,output,stream,closes,both,streams,when,done,param,in,the,stream,to,copy,from,param,out,the,stream,to,copy,to,return,the,number,of,bytes,copied,throws,ioexception,in,case,of,i,o,errors;public,static,int,copy,input,stream,in,output,stream,out,throws,ioexception,assert,not,null,in,no,input,stream,specified,assert,not,null,out,no,output,stream,specified,try,return,stream,utils,copy,in,out,finally,try,in,close,catch,ioexception,ex,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static int copy(InputStream in, OutputStream out) throws IOException;1489687033;Copy the contents of the given InputStream to the given OutputStream._Closes both streams when done._@param in the stream to copy from_@param out the stream to copy to_@return the number of bytes copied_@throws IOException in case of I/O errors;public static int copy(InputStream in, OutputStream out) throws IOException {_		Assert.notNull(in, "No InputStream specified")__		Assert.notNull(out, "No OutputStream specified")___		try {_			return StreamUtils.copy(in, out)__		}_		finally {_			try {_				in.close()__			}_			catch (IOException ex) {_			}_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,input,stream,to,the,given,output,stream,closes,both,streams,when,done,param,in,the,stream,to,copy,from,param,out,the,stream,to,copy,to,return,the,number,of,bytes,copied,throws,ioexception,in,case,of,i,o,errors;public,static,int,copy,input,stream,in,output,stream,out,throws,ioexception,assert,not,null,in,no,input,stream,specified,assert,not,null,out,no,output,stream,specified,try,return,stream,utils,copy,in,out,finally,try,in,close,catch,ioexception,ex,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static int copy(InputStream in, OutputStream out) throws IOException;1495868221;Copy the contents of the given InputStream to the given OutputStream._Closes both streams when done._@param in the stream to copy from_@param out the stream to copy to_@return the number of bytes copied_@throws IOException in case of I/O errors;public static int copy(InputStream in, OutputStream out) throws IOException {_		Assert.notNull(in, "No InputStream specified")__		Assert.notNull(out, "No OutputStream specified")___		try {_			return StreamUtils.copy(in, out)__		}_		finally {_			try {_				in.close()__			}_			catch (IOException ex) {_			}_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,input,stream,to,the,given,output,stream,closes,both,streams,when,done,param,in,the,stream,to,copy,from,param,out,the,stream,to,copy,to,return,the,number,of,bytes,copied,throws,ioexception,in,case,of,i,o,errors;public,static,int,copy,input,stream,in,output,stream,out,throws,ioexception,assert,not,null,in,no,input,stream,specified,assert,not,null,out,no,output,stream,specified,try,return,stream,utils,copy,in,out,finally,try,in,close,catch,ioexception,ex,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static int copy(InputStream in, OutputStream out) throws IOException;1500332081;Copy the contents of the given InputStream to the given OutputStream._Closes both streams when done._@param in the stream to copy from_@param out the stream to copy to_@return the number of bytes copied_@throws IOException in case of I/O errors;public static int copy(InputStream in, OutputStream out) throws IOException {_		Assert.notNull(in, "No InputStream specified")__		Assert.notNull(out, "No OutputStream specified")___		try {_			return StreamUtils.copy(in, out)__		}_		finally {_			try {_				in.close()__			}_			catch (IOException ex) {_			}_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,input,stream,to,the,given,output,stream,closes,both,streams,when,done,param,in,the,stream,to,copy,from,param,out,the,stream,to,copy,to,return,the,number,of,bytes,copied,throws,ioexception,in,case,of,i,o,errors;public,static,int,copy,input,stream,in,output,stream,out,throws,ioexception,assert,not,null,in,no,input,stream,specified,assert,not,null,out,no,output,stream,specified,try,return,stream,utils,copy,in,out,finally,try,in,close,catch,ioexception,ex,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static int copy(InputStream in, OutputStream out) throws IOException;1530174524;Copy the contents of the given InputStream to the given OutputStream._Closes both streams when done._@param in the stream to copy from_@param out the stream to copy to_@return the number of bytes copied_@throws IOException in case of I/O errors;public static int copy(InputStream in, OutputStream out) throws IOException {_		Assert.notNull(in, "No InputStream specified")__		Assert.notNull(out, "No OutputStream specified")___		try {_			return StreamUtils.copy(in, out)__		}_		finally {_			try {_				in.close()__			}_			catch (IOException ex) {_			}_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,input,stream,to,the,given,output,stream,closes,both,streams,when,done,param,in,the,stream,to,copy,from,param,out,the,stream,to,copy,to,return,the,number,of,bytes,copied,throws,ioexception,in,case,of,i,o,errors;public,static,int,copy,input,stream,in,output,stream,out,throws,ioexception,assert,not,null,in,no,input,stream,specified,assert,not,null,out,no,output,stream,specified,try,return,stream,utils,copy,in,out,finally,try,in,close,catch,ioexception,ex,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static String copyToString(Reader in) throws IOException;1328020251;Copy the contents of the given Reader into a String._Closes the reader when done._@param in the reader to copy from_@return the String that has been copied to_@throws IOException in case of I/O errors;public static String copyToString(Reader in) throws IOException {_		StringWriter out = new StringWriter()__		copy(in, out)__		return out.toString()__	};copy,the,contents,of,the,given,reader,into,a,string,closes,the,reader,when,done,param,in,the,reader,to,copy,from,return,the,string,that,has,been,copied,to,throws,ioexception,in,case,of,i,o,errors;public,static,string,copy,to,string,reader,in,throws,ioexception,string,writer,out,new,string,writer,copy,in,out,return,out,to,string
FileCopyUtils -> public static String copyToString(Reader in) throws IOException;1356735495;Copy the contents of the given Reader into a String._Closes the reader when done._@param in the reader to copy from_@return the String that has been copied to_@throws IOException in case of I/O errors;public static String copyToString(Reader in) throws IOException {_		StringWriter out = new StringWriter()__		copy(in, out)__		return out.toString()__	};copy,the,contents,of,the,given,reader,into,a,string,closes,the,reader,when,done,param,in,the,reader,to,copy,from,return,the,string,that,has,been,copied,to,throws,ioexception,in,case,of,i,o,errors;public,static,string,copy,to,string,reader,in,throws,ioexception,string,writer,out,new,string,writer,copy,in,out,return,out,to,string
FileCopyUtils -> public static String copyToString(Reader in) throws IOException;1362408075;Copy the contents of the given Reader into a String._Closes the reader when done._@param in the reader to copy from_@return the String that has been copied to_@throws IOException in case of I/O errors;public static String copyToString(Reader in) throws IOException {_		StringWriter out = new StringWriter()__		copy(in, out)__		return out.toString()__	};copy,the,contents,of,the,given,reader,into,a,string,closes,the,reader,when,done,param,in,the,reader,to,copy,from,return,the,string,that,has,been,copied,to,throws,ioexception,in,case,of,i,o,errors;public,static,string,copy,to,string,reader,in,throws,ioexception,string,writer,out,new,string,writer,copy,in,out,return,out,to,string
FileCopyUtils -> public static String copyToString(Reader in) throws IOException;1489687033;Copy the contents of the given Reader into a String._Closes the reader when done._@param in the reader to copy from (may be {@code null} or empty)_@return the String that has been copied to (possibly empty)_@throws IOException in case of I/O errors;public static String copyToString(Reader in) throws IOException {_		if (in == null) {_			return ""__		}__		StringWriter out = new StringWriter()__		copy(in, out)__		return out.toString()__	};copy,the,contents,of,the,given,reader,into,a,string,closes,the,reader,when,done,param,in,the,reader,to,copy,from,may,be,code,null,or,empty,return,the,string,that,has,been,copied,to,possibly,empty,throws,ioexception,in,case,of,i,o,errors;public,static,string,copy,to,string,reader,in,throws,ioexception,if,in,null,return,string,writer,out,new,string,writer,copy,in,out,return,out,to,string
FileCopyUtils -> public static byte[] copyToByteArray(@Nullable InputStream in) throws IOException;1495868221;Copy the contents of the given InputStream into a new byte array._Closes the stream when done._@param in the stream to copy from (may be {@code null} or empty)_@return the new byte array that has been copied to (possibly empty)_@throws IOException in case of I/O errors;public static byte[] copyToByteArray(@Nullable InputStream in) throws IOException {_		if (in == null) {_			return new byte[0]__		}__		ByteArrayOutputStream out = new ByteArrayOutputStream(BUFFER_SIZE)__		copy(in, out)__		return out.toByteArray()__	};copy,the,contents,of,the,given,input,stream,into,a,new,byte,array,closes,the,stream,when,done,param,in,the,stream,to,copy,from,may,be,code,null,or,empty,return,the,new,byte,array,that,has,been,copied,to,possibly,empty,throws,ioexception,in,case,of,i,o,errors;public,static,byte,copy,to,byte,array,nullable,input,stream,in,throws,ioexception,if,in,null,return,new,byte,0,byte,array,output,stream,out,new,byte,array,output,stream,copy,in,out,return,out,to,byte,array
FileCopyUtils -> public static byte[] copyToByteArray(@Nullable InputStream in) throws IOException;1500332081;Copy the contents of the given InputStream into a new byte array._Closes the stream when done._@param in the stream to copy from (may be {@code null} or empty)_@return the new byte array that has been copied to (possibly empty)_@throws IOException in case of I/O errors;public static byte[] copyToByteArray(@Nullable InputStream in) throws IOException {_		if (in == null) {_			return new byte[0]__		}__		ByteArrayOutputStream out = new ByteArrayOutputStream(BUFFER_SIZE)__		copy(in, out)__		return out.toByteArray()__	};copy,the,contents,of,the,given,input,stream,into,a,new,byte,array,closes,the,stream,when,done,param,in,the,stream,to,copy,from,may,be,code,null,or,empty,return,the,new,byte,array,that,has,been,copied,to,possibly,empty,throws,ioexception,in,case,of,i,o,errors;public,static,byte,copy,to,byte,array,nullable,input,stream,in,throws,ioexception,if,in,null,return,new,byte,0,byte,array,output,stream,out,new,byte,array,output,stream,copy,in,out,return,out,to,byte,array
FileCopyUtils -> public static byte[] copyToByteArray(@Nullable InputStream in) throws IOException;1530174524;Copy the contents of the given InputStream into a new byte array._Closes the stream when done._@param in the stream to copy from (may be {@code null} or empty)_@return the new byte array that has been copied to (possibly empty)_@throws IOException in case of I/O errors;public static byte[] copyToByteArray(@Nullable InputStream in) throws IOException {_		if (in == null) {_			return new byte[0]__		}__		ByteArrayOutputStream out = new ByteArrayOutputStream(BUFFER_SIZE)__		copy(in, out)__		return out.toByteArray()__	};copy,the,contents,of,the,given,input,stream,into,a,new,byte,array,closes,the,stream,when,done,param,in,the,stream,to,copy,from,may,be,code,null,or,empty,return,the,new,byte,array,that,has,been,copied,to,possibly,empty,throws,ioexception,in,case,of,i,o,errors;public,static,byte,copy,to,byte,array,nullable,input,stream,in,throws,ioexception,if,in,null,return,new,byte,0,byte,array,output,stream,out,new,byte,array,output,stream,copy,in,out,return,out,to,byte,array
FileCopyUtils -> public static void copy(byte[] in, OutputStream out) throws IOException;1328020251;Copy the contents of the given byte array to the given OutputStream._Closes the stream when done._@param in the byte array to copy from_@param out the OutputStream to copy to_@throws IOException in case of I/O errors;public static void copy(byte[] in, OutputStream out) throws IOException {_		Assert.notNull(in, "No input byte array specified")__		Assert.notNull(out, "No OutputStream specified")__		try {_			out.write(in)__		}_		finally {_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,byte,array,to,the,given,output,stream,closes,the,stream,when,done,param,in,the,byte,array,to,copy,from,param,out,the,output,stream,to,copy,to,throws,ioexception,in,case,of,i,o,errors;public,static,void,copy,byte,in,output,stream,out,throws,ioexception,assert,not,null,in,no,input,byte,array,specified,assert,not,null,out,no,output,stream,specified,try,out,write,in,finally,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static void copy(byte[] in, OutputStream out) throws IOException;1356735495;Copy the contents of the given byte array to the given OutputStream._Closes the stream when done._@param in the byte array to copy from_@param out the OutputStream to copy to_@throws IOException in case of I/O errors;public static void copy(byte[] in, OutputStream out) throws IOException {_		Assert.notNull(in, "No input byte array specified")__		Assert.notNull(out, "No OutputStream specified")__		try {_			out.write(in)__		}_		finally {_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,byte,array,to,the,given,output,stream,closes,the,stream,when,done,param,in,the,byte,array,to,copy,from,param,out,the,output,stream,to,copy,to,throws,ioexception,in,case,of,i,o,errors;public,static,void,copy,byte,in,output,stream,out,throws,ioexception,assert,not,null,in,no,input,byte,array,specified,assert,not,null,out,no,output,stream,specified,try,out,write,in,finally,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static void copy(byte[] in, OutputStream out) throws IOException;1362408075;Copy the contents of the given byte array to the given OutputStream._Closes the stream when done._@param in the byte array to copy from_@param out the OutputStream to copy to_@throws IOException in case of I/O errors;public static void copy(byte[] in, OutputStream out) throws IOException {_		Assert.notNull(in, "No input byte array specified")__		Assert.notNull(out, "No OutputStream specified")__		try {_			out.write(in)__		}_		finally {_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,byte,array,to,the,given,output,stream,closes,the,stream,when,done,param,in,the,byte,array,to,copy,from,param,out,the,output,stream,to,copy,to,throws,ioexception,in,case,of,i,o,errors;public,static,void,copy,byte,in,output,stream,out,throws,ioexception,assert,not,null,in,no,input,byte,array,specified,assert,not,null,out,no,output,stream,specified,try,out,write,in,finally,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static void copy(byte[] in, OutputStream out) throws IOException;1489687033;Copy the contents of the given byte array to the given OutputStream._Closes the stream when done._@param in the byte array to copy from_@param out the OutputStream to copy to_@throws IOException in case of I/O errors;public static void copy(byte[] in, OutputStream out) throws IOException {_		Assert.notNull(in, "No input byte array specified")__		Assert.notNull(out, "No OutputStream specified")___		try {_			out.write(in)__		}_		finally {_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,byte,array,to,the,given,output,stream,closes,the,stream,when,done,param,in,the,byte,array,to,copy,from,param,out,the,output,stream,to,copy,to,throws,ioexception,in,case,of,i,o,errors;public,static,void,copy,byte,in,output,stream,out,throws,ioexception,assert,not,null,in,no,input,byte,array,specified,assert,not,null,out,no,output,stream,specified,try,out,write,in,finally,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static void copy(byte[] in, OutputStream out) throws IOException;1495868221;Copy the contents of the given byte array to the given OutputStream._Closes the stream when done._@param in the byte array to copy from_@param out the OutputStream to copy to_@throws IOException in case of I/O errors;public static void copy(byte[] in, OutputStream out) throws IOException {_		Assert.notNull(in, "No input byte array specified")__		Assert.notNull(out, "No OutputStream specified")___		try {_			out.write(in)__		}_		finally {_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,byte,array,to,the,given,output,stream,closes,the,stream,when,done,param,in,the,byte,array,to,copy,from,param,out,the,output,stream,to,copy,to,throws,ioexception,in,case,of,i,o,errors;public,static,void,copy,byte,in,output,stream,out,throws,ioexception,assert,not,null,in,no,input,byte,array,specified,assert,not,null,out,no,output,stream,specified,try,out,write,in,finally,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static void copy(byte[] in, OutputStream out) throws IOException;1500332081;Copy the contents of the given byte array to the given OutputStream._Closes the stream when done._@param in the byte array to copy from_@param out the OutputStream to copy to_@throws IOException in case of I/O errors;public static void copy(byte[] in, OutputStream out) throws IOException {_		Assert.notNull(in, "No input byte array specified")__		Assert.notNull(out, "No OutputStream specified")___		try {_			out.write(in)__		}_		finally {_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,byte,array,to,the,given,output,stream,closes,the,stream,when,done,param,in,the,byte,array,to,copy,from,param,out,the,output,stream,to,copy,to,throws,ioexception,in,case,of,i,o,errors;public,static,void,copy,byte,in,output,stream,out,throws,ioexception,assert,not,null,in,no,input,byte,array,specified,assert,not,null,out,no,output,stream,specified,try,out,write,in,finally,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static void copy(byte[] in, OutputStream out) throws IOException;1530174524;Copy the contents of the given byte array to the given OutputStream._Closes the stream when done._@param in the byte array to copy from_@param out the OutputStream to copy to_@throws IOException in case of I/O errors;public static void copy(byte[] in, OutputStream out) throws IOException {_		Assert.notNull(in, "No input byte array specified")__		Assert.notNull(out, "No OutputStream specified")___		try {_			out.write(in)__		}_		finally {_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,byte,array,to,the,given,output,stream,closes,the,stream,when,done,param,in,the,byte,array,to,copy,from,param,out,the,output,stream,to,copy,to,throws,ioexception,in,case,of,i,o,errors;public,static,void,copy,byte,in,output,stream,out,throws,ioexception,assert,not,null,in,no,input,byte,array,specified,assert,not,null,out,no,output,stream,specified,try,out,write,in,finally,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static byte[] copyToByteArray(File in) throws IOException;1328020251;Copy the contents of the given input File into a new byte array._@param in the file to copy from_@return the new byte array that has been copied to_@throws IOException in case of I/O errors;public static byte[] copyToByteArray(File in) throws IOException {_		Assert.notNull(in, "No input File specified")__		return copyToByteArray(new BufferedInputStream(new FileInputStream(in)))__	};copy,the,contents,of,the,given,input,file,into,a,new,byte,array,param,in,the,file,to,copy,from,return,the,new,byte,array,that,has,been,copied,to,throws,ioexception,in,case,of,i,o,errors;public,static,byte,copy,to,byte,array,file,in,throws,ioexception,assert,not,null,in,no,input,file,specified,return,copy,to,byte,array,new,buffered,input,stream,new,file,input,stream,in
FileCopyUtils -> public static byte[] copyToByteArray(File in) throws IOException;1356735495;Copy the contents of the given input File into a new byte array._@param in the file to copy from_@return the new byte array that has been copied to_@throws IOException in case of I/O errors;public static byte[] copyToByteArray(File in) throws IOException {_		Assert.notNull(in, "No input File specified")__		return copyToByteArray(new BufferedInputStream(new FileInputStream(in)))__	};copy,the,contents,of,the,given,input,file,into,a,new,byte,array,param,in,the,file,to,copy,from,return,the,new,byte,array,that,has,been,copied,to,throws,ioexception,in,case,of,i,o,errors;public,static,byte,copy,to,byte,array,file,in,throws,ioexception,assert,not,null,in,no,input,file,specified,return,copy,to,byte,array,new,buffered,input,stream,new,file,input,stream,in
FileCopyUtils -> public static byte[] copyToByteArray(File in) throws IOException;1362408075;Copy the contents of the given input File into a new byte array._@param in the file to copy from_@return the new byte array that has been copied to_@throws IOException in case of I/O errors;public static byte[] copyToByteArray(File in) throws IOException {_		Assert.notNull(in, "No input File specified")__		return copyToByteArray(new BufferedInputStream(new FileInputStream(in)))__	};copy,the,contents,of,the,given,input,file,into,a,new,byte,array,param,in,the,file,to,copy,from,return,the,new,byte,array,that,has,been,copied,to,throws,ioexception,in,case,of,i,o,errors;public,static,byte,copy,to,byte,array,file,in,throws,ioexception,assert,not,null,in,no,input,file,specified,return,copy,to,byte,array,new,buffered,input,stream,new,file,input,stream,in
FileCopyUtils -> public static byte[] copyToByteArray(File in) throws IOException;1489687033;Copy the contents of the given input File into a new byte array._@param in the file to copy from_@return the new byte array that has been copied to_@throws IOException in case of I/O errors;public static byte[] copyToByteArray(File in) throws IOException {_		Assert.notNull(in, "No input File specified")___		return copyToByteArray(new BufferedInputStream(new FileInputStream(in)))__	};copy,the,contents,of,the,given,input,file,into,a,new,byte,array,param,in,the,file,to,copy,from,return,the,new,byte,array,that,has,been,copied,to,throws,ioexception,in,case,of,i,o,errors;public,static,byte,copy,to,byte,array,file,in,throws,ioexception,assert,not,null,in,no,input,file,specified,return,copy,to,byte,array,new,buffered,input,stream,new,file,input,stream,in
FileCopyUtils -> public static byte[] copyToByteArray(File in) throws IOException;1495868221;Copy the contents of the given input File into a new byte array._@param in the file to copy from_@return the new byte array that has been copied to_@throws IOException in case of I/O errors;public static byte[] copyToByteArray(File in) throws IOException {_		Assert.notNull(in, "No input File specified")___		return copyToByteArray(new BufferedInputStream(new FileInputStream(in)))__	};copy,the,contents,of,the,given,input,file,into,a,new,byte,array,param,in,the,file,to,copy,from,return,the,new,byte,array,that,has,been,copied,to,throws,ioexception,in,case,of,i,o,errors;public,static,byte,copy,to,byte,array,file,in,throws,ioexception,assert,not,null,in,no,input,file,specified,return,copy,to,byte,array,new,buffered,input,stream,new,file,input,stream,in
FileCopyUtils -> public static byte[] copyToByteArray(File in) throws IOException;1500332081;Copy the contents of the given input File into a new byte array._@param in the file to copy from_@return the new byte array that has been copied to_@throws IOException in case of I/O errors;public static byte[] copyToByteArray(File in) throws IOException {_		Assert.notNull(in, "No input File specified")__		return copyToByteArray(Files.newInputStream(in.toPath()))__	};copy,the,contents,of,the,given,input,file,into,a,new,byte,array,param,in,the,file,to,copy,from,return,the,new,byte,array,that,has,been,copied,to,throws,ioexception,in,case,of,i,o,errors;public,static,byte,copy,to,byte,array,file,in,throws,ioexception,assert,not,null,in,no,input,file,specified,return,copy,to,byte,array,files,new,input,stream,in,to,path
FileCopyUtils -> public static byte[] copyToByteArray(File in) throws IOException;1530174524;Copy the contents of the given input File into a new byte array._@param in the file to copy from_@return the new byte array that has been copied to_@throws IOException in case of I/O errors;public static byte[] copyToByteArray(File in) throws IOException {_		Assert.notNull(in, "No input File specified")__		return copyToByteArray(Files.newInputStream(in.toPath()))__	};copy,the,contents,of,the,given,input,file,into,a,new,byte,array,param,in,the,file,to,copy,from,return,the,new,byte,array,that,has,been,copied,to,throws,ioexception,in,case,of,i,o,errors;public,static,byte,copy,to,byte,array,file,in,throws,ioexception,assert,not,null,in,no,input,file,specified,return,copy,to,byte,array,files,new,input,stream,in,to,path
FileCopyUtils -> public static int copy(Reader in, Writer out) throws IOException;1328020251;Copy the contents of the given Reader to the given Writer._Closes both when done._@param in the Reader to copy from_@param out the Writer to copy to_@return the number of characters copied_@throws IOException in case of I/O errors;public static int copy(Reader in, Writer out) throws IOException {_		Assert.notNull(in, "No Reader specified")__		Assert.notNull(out, "No Writer specified")__		try {_			int byteCount = 0__			char[] buffer = new char[BUFFER_SIZE]__			int bytesRead = -1__			while ((bytesRead = in.read(buffer)) != -1) {_				out.write(buffer, 0, bytesRead)__				byteCount += bytesRead__			}_			out.flush()__			return byteCount__		}_		finally {_			try {_				in.close()__			}_			catch (IOException ex) {_			}_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,reader,to,the,given,writer,closes,both,when,done,param,in,the,reader,to,copy,from,param,out,the,writer,to,copy,to,return,the,number,of,characters,copied,throws,ioexception,in,case,of,i,o,errors;public,static,int,copy,reader,in,writer,out,throws,ioexception,assert,not,null,in,no,reader,specified,assert,not,null,out,no,writer,specified,try,int,byte,count,0,char,buffer,new,char,int,bytes,read,1,while,bytes,read,in,read,buffer,1,out,write,buffer,0,bytes,read,byte,count,bytes,read,out,flush,return,byte,count,finally,try,in,close,catch,ioexception,ex,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static int copy(Reader in, Writer out) throws IOException;1356735495;Copy the contents of the given Reader to the given Writer._Closes both when done._@param in the Reader to copy from_@param out the Writer to copy to_@return the number of characters copied_@throws IOException in case of I/O errors;public static int copy(Reader in, Writer out) throws IOException {_		Assert.notNull(in, "No Reader specified")__		Assert.notNull(out, "No Writer specified")__		try {_			int byteCount = 0__			char[] buffer = new char[BUFFER_SIZE]__			int bytesRead = -1__			while ((bytesRead = in.read(buffer)) != -1) {_				out.write(buffer, 0, bytesRead)__				byteCount += bytesRead__			}_			out.flush()__			return byteCount__		}_		finally {_			try {_				in.close()__			}_			catch (IOException ex) {_			}_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,reader,to,the,given,writer,closes,both,when,done,param,in,the,reader,to,copy,from,param,out,the,writer,to,copy,to,return,the,number,of,characters,copied,throws,ioexception,in,case,of,i,o,errors;public,static,int,copy,reader,in,writer,out,throws,ioexception,assert,not,null,in,no,reader,specified,assert,not,null,out,no,writer,specified,try,int,byte,count,0,char,buffer,new,char,int,bytes,read,1,while,bytes,read,in,read,buffer,1,out,write,buffer,0,bytes,read,byte,count,bytes,read,out,flush,return,byte,count,finally,try,in,close,catch,ioexception,ex,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static int copy(Reader in, Writer out) throws IOException;1362408075;Copy the contents of the given Reader to the given Writer._Closes both when done._@param in the Reader to copy from_@param out the Writer to copy to_@return the number of characters copied_@throws IOException in case of I/O errors;public static int copy(Reader in, Writer out) throws IOException {_		Assert.notNull(in, "No Reader specified")__		Assert.notNull(out, "No Writer specified")__		try {_			int byteCount = 0__			char[] buffer = new char[BUFFER_SIZE]__			int bytesRead = -1__			while ((bytesRead = in.read(buffer)) != -1) {_				out.write(buffer, 0, bytesRead)__				byteCount += bytesRead__			}_			out.flush()__			return byteCount__		}_		finally {_			try {_				in.close()__			}_			catch (IOException ex) {_			}_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,reader,to,the,given,writer,closes,both,when,done,param,in,the,reader,to,copy,from,param,out,the,writer,to,copy,to,return,the,number,of,characters,copied,throws,ioexception,in,case,of,i,o,errors;public,static,int,copy,reader,in,writer,out,throws,ioexception,assert,not,null,in,no,reader,specified,assert,not,null,out,no,writer,specified,try,int,byte,count,0,char,buffer,new,char,int,bytes,read,1,while,bytes,read,in,read,buffer,1,out,write,buffer,0,bytes,read,byte,count,bytes,read,out,flush,return,byte,count,finally,try,in,close,catch,ioexception,ex,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static int copy(Reader in, Writer out) throws IOException;1489687033;Copy the contents of the given Reader to the given Writer._Closes both when done._@param in the Reader to copy from_@param out the Writer to copy to_@return the number of characters copied_@throws IOException in case of I/O errors;public static int copy(Reader in, Writer out) throws IOException {_		Assert.notNull(in, "No Reader specified")__		Assert.notNull(out, "No Writer specified")___		try {_			int byteCount = 0__			char[] buffer = new char[BUFFER_SIZE]__			int bytesRead = -1__			while ((bytesRead = in.read(buffer)) != -1) {_				out.write(buffer, 0, bytesRead)__				byteCount += bytesRead__			}_			out.flush()__			return byteCount__		}_		finally {_			try {_				in.close()__			}_			catch (IOException ex) {_			}_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,reader,to,the,given,writer,closes,both,when,done,param,in,the,reader,to,copy,from,param,out,the,writer,to,copy,to,return,the,number,of,characters,copied,throws,ioexception,in,case,of,i,o,errors;public,static,int,copy,reader,in,writer,out,throws,ioexception,assert,not,null,in,no,reader,specified,assert,not,null,out,no,writer,specified,try,int,byte,count,0,char,buffer,new,char,int,bytes,read,1,while,bytes,read,in,read,buffer,1,out,write,buffer,0,bytes,read,byte,count,bytes,read,out,flush,return,byte,count,finally,try,in,close,catch,ioexception,ex,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static int copy(Reader in, Writer out) throws IOException;1495868221;Copy the contents of the given Reader to the given Writer._Closes both when done._@param in the Reader to copy from_@param out the Writer to copy to_@return the number of characters copied_@throws IOException in case of I/O errors;public static int copy(Reader in, Writer out) throws IOException {_		Assert.notNull(in, "No Reader specified")__		Assert.notNull(out, "No Writer specified")___		try {_			int byteCount = 0__			char[] buffer = new char[BUFFER_SIZE]__			int bytesRead = -1__			while ((bytesRead = in.read(buffer)) != -1) {_				out.write(buffer, 0, bytesRead)__				byteCount += bytesRead__			}_			out.flush()__			return byteCount__		}_		finally {_			try {_				in.close()__			}_			catch (IOException ex) {_			}_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,reader,to,the,given,writer,closes,both,when,done,param,in,the,reader,to,copy,from,param,out,the,writer,to,copy,to,return,the,number,of,characters,copied,throws,ioexception,in,case,of,i,o,errors;public,static,int,copy,reader,in,writer,out,throws,ioexception,assert,not,null,in,no,reader,specified,assert,not,null,out,no,writer,specified,try,int,byte,count,0,char,buffer,new,char,int,bytes,read,1,while,bytes,read,in,read,buffer,1,out,write,buffer,0,bytes,read,byte,count,bytes,read,out,flush,return,byte,count,finally,try,in,close,catch,ioexception,ex,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static int copy(Reader in, Writer out) throws IOException;1500332081;Copy the contents of the given Reader to the given Writer._Closes both when done._@param in the Reader to copy from_@param out the Writer to copy to_@return the number of characters copied_@throws IOException in case of I/O errors;public static int copy(Reader in, Writer out) throws IOException {_		Assert.notNull(in, "No Reader specified")__		Assert.notNull(out, "No Writer specified")___		try {_			int byteCount = 0__			char[] buffer = new char[BUFFER_SIZE]__			int bytesRead = -1__			while ((bytesRead = in.read(buffer)) != -1) {_				out.write(buffer, 0, bytesRead)__				byteCount += bytesRead__			}_			out.flush()__			return byteCount__		}_		finally {_			try {_				in.close()__			}_			catch (IOException ex) {_			}_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,reader,to,the,given,writer,closes,both,when,done,param,in,the,reader,to,copy,from,param,out,the,writer,to,copy,to,return,the,number,of,characters,copied,throws,ioexception,in,case,of,i,o,errors;public,static,int,copy,reader,in,writer,out,throws,ioexception,assert,not,null,in,no,reader,specified,assert,not,null,out,no,writer,specified,try,int,byte,count,0,char,buffer,new,char,int,bytes,read,1,while,bytes,read,in,read,buffer,1,out,write,buffer,0,bytes,read,byte,count,bytes,read,out,flush,return,byte,count,finally,try,in,close,catch,ioexception,ex,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static int copy(Reader in, Writer out) throws IOException;1530174524;Copy the contents of the given Reader to the given Writer._Closes both when done._@param in the Reader to copy from_@param out the Writer to copy to_@return the number of characters copied_@throws IOException in case of I/O errors;public static int copy(Reader in, Writer out) throws IOException {_		Assert.notNull(in, "No Reader specified")__		Assert.notNull(out, "No Writer specified")___		try {_			int byteCount = 0__			char[] buffer = new char[BUFFER_SIZE]__			int bytesRead = -1__			while ((bytesRead = in.read(buffer)) != -1) {_				out.write(buffer, 0, bytesRead)__				byteCount += bytesRead__			}_			out.flush()__			return byteCount__		}_		finally {_			try {_				in.close()__			}_			catch (IOException ex) {_			}_			try {_				out.close()__			}_			catch (IOException ex) {_			}_		}_	};copy,the,contents,of,the,given,reader,to,the,given,writer,closes,both,when,done,param,in,the,reader,to,copy,from,param,out,the,writer,to,copy,to,return,the,number,of,characters,copied,throws,ioexception,in,case,of,i,o,errors;public,static,int,copy,reader,in,writer,out,throws,ioexception,assert,not,null,in,no,reader,specified,assert,not,null,out,no,writer,specified,try,int,byte,count,0,char,buffer,new,char,int,bytes,read,1,while,bytes,read,in,read,buffer,1,out,write,buffer,0,bytes,read,byte,count,bytes,read,out,flush,return,byte,count,finally,try,in,close,catch,ioexception,ex,try,out,close,catch,ioexception,ex
FileCopyUtils -> public static void copy(byte[] in, File out) throws IOException;1328020251;Copy the contents of the given byte array to the given output File._@param in the byte array to copy from_@param out the file to copy to_@throws IOException in case of I/O errors;public static void copy(byte[] in, File out) throws IOException {_		Assert.notNull(in, "No input byte array specified")__		Assert.notNull(out, "No output File specified")__		ByteArrayInputStream inStream = new ByteArrayInputStream(in)__		OutputStream outStream = new BufferedOutputStream(new FileOutputStream(out))__		copy(inStream, outStream)__	};copy,the,contents,of,the,given,byte,array,to,the,given,output,file,param,in,the,byte,array,to,copy,from,param,out,the,file,to,copy,to,throws,ioexception,in,case,of,i,o,errors;public,static,void,copy,byte,in,file,out,throws,ioexception,assert,not,null,in,no,input,byte,array,specified,assert,not,null,out,no,output,file,specified,byte,array,input,stream,in,stream,new,byte,array,input,stream,in,output,stream,out,stream,new,buffered,output,stream,new,file,output,stream,out,copy,in,stream,out,stream
FileCopyUtils -> public static void copy(byte[] in, File out) throws IOException;1356735495;Copy the contents of the given byte array to the given output File._@param in the byte array to copy from_@param out the file to copy to_@throws IOException in case of I/O errors;public static void copy(byte[] in, File out) throws IOException {_		Assert.notNull(in, "No input byte array specified")__		Assert.notNull(out, "No output File specified")__		ByteArrayInputStream inStream = new ByteArrayInputStream(in)__		OutputStream outStream = new BufferedOutputStream(new FileOutputStream(out))__		copy(inStream, outStream)__	};copy,the,contents,of,the,given,byte,array,to,the,given,output,file,param,in,the,byte,array,to,copy,from,param,out,the,file,to,copy,to,throws,ioexception,in,case,of,i,o,errors;public,static,void,copy,byte,in,file,out,throws,ioexception,assert,not,null,in,no,input,byte,array,specified,assert,not,null,out,no,output,file,specified,byte,array,input,stream,in,stream,new,byte,array,input,stream,in,output,stream,out,stream,new,buffered,output,stream,new,file,output,stream,out,copy,in,stream,out,stream
FileCopyUtils -> public static void copy(byte[] in, File out) throws IOException;1362408075;Copy the contents of the given byte array to the given output File._@param in the byte array to copy from_@param out the file to copy to_@throws IOException in case of I/O errors;public static void copy(byte[] in, File out) throws IOException {_		Assert.notNull(in, "No input byte array specified")__		Assert.notNull(out, "No output File specified")__		ByteArrayInputStream inStream = new ByteArrayInputStream(in)__		OutputStream outStream = new BufferedOutputStream(new FileOutputStream(out))__		copy(inStream, outStream)__	};copy,the,contents,of,the,given,byte,array,to,the,given,output,file,param,in,the,byte,array,to,copy,from,param,out,the,file,to,copy,to,throws,ioexception,in,case,of,i,o,errors;public,static,void,copy,byte,in,file,out,throws,ioexception,assert,not,null,in,no,input,byte,array,specified,assert,not,null,out,no,output,file,specified,byte,array,input,stream,in,stream,new,byte,array,input,stream,in,output,stream,out,stream,new,buffered,output,stream,new,file,output,stream,out,copy,in,stream,out,stream
FileCopyUtils -> public static void copy(byte[] in, File out) throws IOException;1489687033;Copy the contents of the given byte array to the given output File._@param in the byte array to copy from_@param out the file to copy to_@throws IOException in case of I/O errors;public static void copy(byte[] in, File out) throws IOException {_		Assert.notNull(in, "No input byte array specified")__		Assert.notNull(out, "No output File specified")___		ByteArrayInputStream inStream = new ByteArrayInputStream(in)__		OutputStream outStream = new BufferedOutputStream(new FileOutputStream(out))__		copy(inStream, outStream)__	};copy,the,contents,of,the,given,byte,array,to,the,given,output,file,param,in,the,byte,array,to,copy,from,param,out,the,file,to,copy,to,throws,ioexception,in,case,of,i,o,errors;public,static,void,copy,byte,in,file,out,throws,ioexception,assert,not,null,in,no,input,byte,array,specified,assert,not,null,out,no,output,file,specified,byte,array,input,stream,in,stream,new,byte,array,input,stream,in,output,stream,out,stream,new,buffered,output,stream,new,file,output,stream,out,copy,in,stream,out,stream
FileCopyUtils -> public static void copy(byte[] in, File out) throws IOException;1495868221;Copy the contents of the given byte array to the given output File._@param in the byte array to copy from_@param out the file to copy to_@throws IOException in case of I/O errors;public static void copy(byte[] in, File out) throws IOException {_		Assert.notNull(in, "No input byte array specified")__		Assert.notNull(out, "No output File specified")___		ByteArrayInputStream inStream = new ByteArrayInputStream(in)__		OutputStream outStream = new BufferedOutputStream(new FileOutputStream(out))__		copy(inStream, outStream)__	};copy,the,contents,of,the,given,byte,array,to,the,given,output,file,param,in,the,byte,array,to,copy,from,param,out,the,file,to,copy,to,throws,ioexception,in,case,of,i,o,errors;public,static,void,copy,byte,in,file,out,throws,ioexception,assert,not,null,in,no,input,byte,array,specified,assert,not,null,out,no,output,file,specified,byte,array,input,stream,in,stream,new,byte,array,input,stream,in,output,stream,out,stream,new,buffered,output,stream,new,file,output,stream,out,copy,in,stream,out,stream
FileCopyUtils -> public static void copy(byte[] in, File out) throws IOException;1500332081;Copy the contents of the given byte array to the given output File._@param in the byte array to copy from_@param out the file to copy to_@throws IOException in case of I/O errors;public static void copy(byte[] in, File out) throws IOException {_		Assert.notNull(in, "No input byte array specified")__		Assert.notNull(out, "No output File specified")__		copy(new ByteArrayInputStream(in), Files.newOutputStream(out.toPath()))__	};copy,the,contents,of,the,given,byte,array,to,the,given,output,file,param,in,the,byte,array,to,copy,from,param,out,the,file,to,copy,to,throws,ioexception,in,case,of,i,o,errors;public,static,void,copy,byte,in,file,out,throws,ioexception,assert,not,null,in,no,input,byte,array,specified,assert,not,null,out,no,output,file,specified,copy,new,byte,array,input,stream,in,files,new,output,stream,out,to,path
FileCopyUtils -> public static void copy(byte[] in, File out) throws IOException;1530174524;Copy the contents of the given byte array to the given output File._@param in the byte array to copy from_@param out the file to copy to_@throws IOException in case of I/O errors;public static void copy(byte[] in, File out) throws IOException {_		Assert.notNull(in, "No input byte array specified")__		Assert.notNull(out, "No output File specified")__		copy(new ByteArrayInputStream(in), Files.newOutputStream(out.toPath()))__	};copy,the,contents,of,the,given,byte,array,to,the,given,output,file,param,in,the,byte,array,to,copy,from,param,out,the,file,to,copy,to,throws,ioexception,in,case,of,i,o,errors;public,static,void,copy,byte,in,file,out,throws,ioexception,assert,not,null,in,no,input,byte,array,specified,assert,not,null,out,no,output,file,specified,copy,new,byte,array,input,stream,in,files,new,output,stream,out,to,path
FileCopyUtils -> public static String copyToString(@Nullable Reader in) throws IOException;1495868221;Copy the contents of the given Reader into a String._Closes the reader when done._@param in the reader to copy from (may be {@code null} or empty)_@return the String that has been copied to (possibly empty)_@throws IOException in case of I/O errors;public static String copyToString(@Nullable Reader in) throws IOException {_		if (in == null) {_			return ""__		}__		StringWriter out = new StringWriter()__		copy(in, out)__		return out.toString()__	};copy,the,contents,of,the,given,reader,into,a,string,closes,the,reader,when,done,param,in,the,reader,to,copy,from,may,be,code,null,or,empty,return,the,string,that,has,been,copied,to,possibly,empty,throws,ioexception,in,case,of,i,o,errors;public,static,string,copy,to,string,nullable,reader,in,throws,ioexception,if,in,null,return,string,writer,out,new,string,writer,copy,in,out,return,out,to,string
FileCopyUtils -> public static String copyToString(@Nullable Reader in) throws IOException;1500332081;Copy the contents of the given Reader into a String._Closes the reader when done._@param in the reader to copy from (may be {@code null} or empty)_@return the String that has been copied to (possibly empty)_@throws IOException in case of I/O errors;public static String copyToString(@Nullable Reader in) throws IOException {_		if (in == null) {_			return ""__		}__		StringWriter out = new StringWriter()__		copy(in, out)__		return out.toString()__	};copy,the,contents,of,the,given,reader,into,a,string,closes,the,reader,when,done,param,in,the,reader,to,copy,from,may,be,code,null,or,empty,return,the,string,that,has,been,copied,to,possibly,empty,throws,ioexception,in,case,of,i,o,errors;public,static,string,copy,to,string,nullable,reader,in,throws,ioexception,if,in,null,return,string,writer,out,new,string,writer,copy,in,out,return,out,to,string
FileCopyUtils -> public static String copyToString(@Nullable Reader in) throws IOException;1530174524;Copy the contents of the given Reader into a String._Closes the reader when done._@param in the reader to copy from (may be {@code null} or empty)_@return the String that has been copied to (possibly empty)_@throws IOException in case of I/O errors;public static String copyToString(@Nullable Reader in) throws IOException {_		if (in == null) {_			return ""__		}__		StringWriter out = new StringWriter()__		copy(in, out)__		return out.toString()__	};copy,the,contents,of,the,given,reader,into,a,string,closes,the,reader,when,done,param,in,the,reader,to,copy,from,may,be,code,null,or,empty,return,the,string,that,has,been,copied,to,possibly,empty,throws,ioexception,in,case,of,i,o,errors;public,static,string,copy,to,string,nullable,reader,in,throws,ioexception,if,in,null,return,string,writer,out,new,string,writer,copy,in,out,return,out,to,string
