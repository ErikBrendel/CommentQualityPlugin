commented;modifiers;parameterAmount;loc;comment;code
false;public;0;4;;@Override public Set<ConvertiblePair> getConvertibleTypes() {     return Collections.singleton(new ConvertiblePair(Object.class, String.class)). }
false;public;2;11;;@Override public boolean matches(TypeDescriptor sourceType, TypeDescriptor targetType) {     Class<?> sourceClass = sourceType.getObjectType().     if (String.class == sourceClass) {         // no conversion required         return false.     }     return (CharSequence.class.isAssignableFrom(sourceClass) || StringWriter.class.isAssignableFrom(sourceClass) || ObjectToObjectConverter.hasConversionMethodOrConstructor(sourceClass, String.class)). }
false;public;3;5;;@Override @Nullable public Object convert(@Nullable Object source, TypeDescriptor sourceType, TypeDescriptor targetType) {     return (source != null ? source.toString() : null). }
