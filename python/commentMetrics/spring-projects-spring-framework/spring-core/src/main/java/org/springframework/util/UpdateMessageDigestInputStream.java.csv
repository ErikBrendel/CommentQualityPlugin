# id;timestamp;commentText;codeText;commentWords;codeWords
UpdateMessageDigestInputStream -> public void updateMessageDigest(MessageDigest messageDigest, int len) throws IOException;1420729689;Update the message digest with the next len bytes in this stream__<p>Using this method is more optimized since it avoids creating new byte arrays for each call.</p>__@param messageDigest The message digest to update_@param len how many bytes to read from this stream and use to update the message digest_@throws IOException;public void updateMessageDigest(MessageDigest messageDigest, int len) throws IOException{_		int data__		int bytesRead = 0__		while(bytesRead < len && (data = read()) != -1){_			messageDigest.update((byte)data)__			bytesRead++__		}_	};update,the,message,digest,with,the,next,len,bytes,in,this,stream,p,using,this,method,is,more,optimized,since,it,avoids,creating,new,byte,arrays,for,each,call,p,param,message,digest,the,message,digest,to,update,param,len,how,many,bytes,to,read,from,this,stream,and,use,to,update,the,message,digest,throws,ioexception;public,void,update,message,digest,message,digest,message,digest,int,len,throws,ioexception,int,data,int,bytes,read,0,while,bytes,read,len,data,read,1,message,digest,update,byte,data,bytes,read
UpdateMessageDigestInputStream -> public void updateMessageDigest(MessageDigest messageDigest, int len) throws IOException;1425077395;Update the message digest with the next len bytes in this stream._<p>Using this method is more optimized since it avoids creating new_byte arrays for each call._@param messageDigest The message digest to update_@param len how many bytes to read from this stream and use to update the message digest_@throws IOException when propagated from {@link #read()};public void updateMessageDigest(MessageDigest messageDigest, int len) throws IOException {_		int data__		int bytesRead = 0__		while (bytesRead < len && (data = read()) != -1){_			messageDigest.update((byte) data)__			bytesRead++__		}_	};update,the,message,digest,with,the,next,len,bytes,in,this,stream,p,using,this,method,is,more,optimized,since,it,avoids,creating,new,byte,arrays,for,each,call,param,message,digest,the,message,digest,to,update,param,len,how,many,bytes,to,read,from,this,stream,and,use,to,update,the,message,digest,throws,ioexception,when,propagated,from,link,read;public,void,update,message,digest,message,digest,message,digest,int,len,throws,ioexception,int,data,int,bytes,read,0,while,bytes,read,len,data,read,1,message,digest,update,byte,data,bytes,read
UpdateMessageDigestInputStream -> public void updateMessageDigest(MessageDigest messageDigest, int len) throws IOException;1425759378;Update the message digest with the next len bytes in this stream._<p>Using this method is more optimized since it avoids creating new_byte arrays for each call._@param messageDigest The message digest to update_@param len how many bytes to read from this stream and use to update the message digest_@throws IOException when propagated from {@link #read()};public void updateMessageDigest(MessageDigest messageDigest, int len) throws IOException {_		int data__		int bytesRead = 0__		while (bytesRead < len && (data = read()) != -1){_			messageDigest.update((byte) data)__			bytesRead++__		}_	};update,the,message,digest,with,the,next,len,bytes,in,this,stream,p,using,this,method,is,more,optimized,since,it,avoids,creating,new,byte,arrays,for,each,call,param,message,digest,the,message,digest,to,update,param,len,how,many,bytes,to,read,from,this,stream,and,use,to,update,the,message,digest,throws,ioexception,when,propagated,from,link,read;public,void,update,message,digest,message,digest,message,digest,int,len,throws,ioexception,int,data,int,bytes,read,0,while,bytes,read,len,data,read,1,message,digest,update,byte,data,bytes,read
UpdateMessageDigestInputStream -> public void updateMessageDigest(MessageDigest messageDigest, int len) throws IOException;1467811755;Update the message digest with the next len bytes in this stream._<p>Using this method is more optimized since it avoids creating new_byte arrays for each call._@param messageDigest the message digest to update_@param len how many bytes to read from this stream and use to update the message digest_@throws IOException when propagated from {@link #read()};public void updateMessageDigest(MessageDigest messageDigest, int len) throws IOException {_		int data__		int bytesRead = 0__		while (bytesRead < len && (data = read()) != -1){_			messageDigest.update((byte) data)__			bytesRead++__		}_	};update,the,message,digest,with,the,next,len,bytes,in,this,stream,p,using,this,method,is,more,optimized,since,it,avoids,creating,new,byte,arrays,for,each,call,param,message,digest,the,message,digest,to,update,param,len,how,many,bytes,to,read,from,this,stream,and,use,to,update,the,message,digest,throws,ioexception,when,propagated,from,link,read;public,void,update,message,digest,message,digest,message,digest,int,len,throws,ioexception,int,data,int,bytes,read,0,while,bytes,read,len,data,read,1,message,digest,update,byte,data,bytes,read
UpdateMessageDigestInputStream -> public void updateMessageDigest(MessageDigest messageDigest, int len) throws IOException;1538724083;Update the message digest with the next len bytes in this stream._<p>Using this method is more optimized since it avoids creating new_byte arrays for each call._@param messageDigest the message digest to update_@param len how many bytes to read from this stream and use to update the message digest_@throws IOException when propagated from {@link #read()};public void updateMessageDigest(MessageDigest messageDigest, int len) throws IOException {_		int data__		int bytesRead = 0__		while (bytesRead < len && (data = read()) != -1) {_			messageDigest.update((byte) data)__			bytesRead++__		}_	};update,the,message,digest,with,the,next,len,bytes,in,this,stream,p,using,this,method,is,more,optimized,since,it,avoids,creating,new,byte,arrays,for,each,call,param,message,digest,the,message,digest,to,update,param,len,how,many,bytes,to,read,from,this,stream,and,use,to,update,the,message,digest,throws,ioexception,when,propagated,from,link,read;public,void,update,message,digest,message,digest,message,digest,int,len,throws,ioexception,int,data,int,bytes,read,0,while,bytes,read,len,data,read,1,message,digest,update,byte,data,bytes,read
UpdateMessageDigestInputStream -> public void updateMessageDigest(MessageDigest messageDigest) throws IOException;1420729689;Update the message digest with the rest of the bytes in this stream__<p>Using this method is more optimized since it avoids creating new byte arrays for each call.</p>__@param messageDigest The message digest to update_@throws IOException;public void updateMessageDigest(MessageDigest messageDigest) throws IOException{_		int data__		while((data = read()) != -1){_			messageDigest.update((byte)data)__		}_	};update,the,message,digest,with,the,rest,of,the,bytes,in,this,stream,p,using,this,method,is,more,optimized,since,it,avoids,creating,new,byte,arrays,for,each,call,p,param,message,digest,the,message,digest,to,update,throws,ioexception;public,void,update,message,digest,message,digest,message,digest,throws,ioexception,int,data,while,data,read,1,message,digest,update,byte,data
UpdateMessageDigestInputStream -> public void updateMessageDigest(MessageDigest messageDigest) throws IOException;1425077395;Update the message digest with the rest of the bytes in this stream._<p>Using this method is more optimized since it avoids creating new_byte arrays for each call._@param messageDigest The message digest to update_@throws IOException when propagated from {@link #read()};public void updateMessageDigest(MessageDigest messageDigest) throws IOException {_		int data__		while ((data = read()) != -1){_			messageDigest.update((byte) data)__		}_	};update,the,message,digest,with,the,rest,of,the,bytes,in,this,stream,p,using,this,method,is,more,optimized,since,it,avoids,creating,new,byte,arrays,for,each,call,param,message,digest,the,message,digest,to,update,throws,ioexception,when,propagated,from,link,read;public,void,update,message,digest,message,digest,message,digest,throws,ioexception,int,data,while,data,read,1,message,digest,update,byte,data
UpdateMessageDigestInputStream -> public void updateMessageDigest(MessageDigest messageDigest) throws IOException;1425759378;Update the message digest with the rest of the bytes in this stream._<p>Using this method is more optimized since it avoids creating new_byte arrays for each call._@param messageDigest The message digest to update_@throws IOException when propagated from {@link #read()};public void updateMessageDigest(MessageDigest messageDigest) throws IOException {_		int data__		while ((data = read()) != -1){_			messageDigest.update((byte) data)__		}_	};update,the,message,digest,with,the,rest,of,the,bytes,in,this,stream,p,using,this,method,is,more,optimized,since,it,avoids,creating,new,byte,arrays,for,each,call,param,message,digest,the,message,digest,to,update,throws,ioexception,when,propagated,from,link,read;public,void,update,message,digest,message,digest,message,digest,throws,ioexception,int,data,while,data,read,1,message,digest,update,byte,data
UpdateMessageDigestInputStream -> public void updateMessageDigest(MessageDigest messageDigest) throws IOException;1467811755;Update the message digest with the rest of the bytes in this stream._<p>Using this method is more optimized since it avoids creating new_byte arrays for each call._@param messageDigest the message digest to update_@throws IOException when propagated from {@link #read()};public void updateMessageDigest(MessageDigest messageDigest) throws IOException {_		int data__		while ((data = read()) != -1){_			messageDigest.update((byte) data)__		}_	};update,the,message,digest,with,the,rest,of,the,bytes,in,this,stream,p,using,this,method,is,more,optimized,since,it,avoids,creating,new,byte,arrays,for,each,call,param,message,digest,the,message,digest,to,update,throws,ioexception,when,propagated,from,link,read;public,void,update,message,digest,message,digest,message,digest,throws,ioexception,int,data,while,data,read,1,message,digest,update,byte,data
UpdateMessageDigestInputStream -> public void updateMessageDigest(MessageDigest messageDigest) throws IOException;1538724083;Update the message digest with the rest of the bytes in this stream._<p>Using this method is more optimized since it avoids creating new_byte arrays for each call._@param messageDigest the message digest to update_@throws IOException when propagated from {@link #read()};public void updateMessageDigest(MessageDigest messageDigest) throws IOException {_		int data__		while ((data = read()) != -1) {_			messageDigest.update((byte) data)__		}_	};update,the,message,digest,with,the,rest,of,the,bytes,in,this,stream,p,using,this,method,is,more,optimized,since,it,avoids,creating,new,byte,arrays,for,each,call,param,message,digest,the,message,digest,to,update,throws,ioexception,when,propagated,from,link,read;public,void,update,message,digest,message,digest,message,digest,throws,ioexception,int,data,while,data,read,1,message,digest,update,byte,data
