# id;timestamp;commentText;codeText;commentWords;codeWords
FieldWriter -> void put(final ByteVector out);1366718246;Puts the content of this field into the given byte vector.__@param out_where the content of this field must be put.;void put(final ByteVector out) {_        final int FACTOR = ClassWriter.TO_ACC_SYNTHETIC__        int mask = Opcodes.ACC_DEPRECATED | ClassWriter.ACC_SYNTHETIC_ATTRIBUTE_                | ((access & ClassWriter.ACC_SYNTHETIC_ATTRIBUTE) / FACTOR)__        out.putShort(access & ~mask).putShort(name).putShort(desc)__        int attributeCount = 0__        if (value != 0) {_            ++attributeCount__        }_        if ((access & Opcodes.ACC_SYNTHETIC) != 0) {_            if ((cw.version & 0xFFFF) < Opcodes.V1_5_                    || (access & ClassWriter.ACC_SYNTHETIC_ATTRIBUTE) != 0) {_                ++attributeCount__            }_        }_        if ((access & Opcodes.ACC_DEPRECATED) != 0) {_            ++attributeCount__        }_        if (ClassReader.SIGNATURES && signature != 0) {_            ++attributeCount__        }_        if (ClassReader.ANNOTATIONS && anns != null) {_            ++attributeCount__        }_        if (ClassReader.ANNOTATIONS && ianns != null) {_            ++attributeCount__        }_        if (attrs != null) {_            attributeCount += attrs.getCount()__        }_        out.putShort(attributeCount)__        if (value != 0) {_            out.putShort(cw.newUTF8("ConstantValue"))__            out.putInt(2).putShort(value)__        }_        if ((access & Opcodes.ACC_SYNTHETIC) != 0) {_            if ((cw.version & 0xFFFF) < Opcodes.V1_5_                    || (access & ClassWriter.ACC_SYNTHETIC_ATTRIBUTE) != 0) {_                out.putShort(cw.newUTF8("Synthetic")).putInt(0)__            }_        }_        if ((access & Opcodes.ACC_DEPRECATED) != 0) {_            out.putShort(cw.newUTF8("Deprecated")).putInt(0)__        }_        if (ClassReader.SIGNATURES && signature != 0) {_            out.putShort(cw.newUTF8("Signature"))__            out.putInt(2).putShort(signature)__        }_        if (ClassReader.ANNOTATIONS && anns != null) {_            out.putShort(cw.newUTF8("RuntimeVisibleAnnotations"))__            anns.put(out)__        }_        if (ClassReader.ANNOTATIONS && ianns != null) {_            out.putShort(cw.newUTF8("RuntimeInvisibleAnnotations"))__            ianns.put(out)__        }_        if (attrs != null) {_            attrs.put(cw, null, 0, -1, -1, out)__        }_    };puts,the,content,of,this,field,into,the,given,byte,vector,param,out,where,the,content,of,this,field,must,be,put;void,put,final,byte,vector,out,final,int,factor,class,writer,int,mask,opcodes,class,writer,access,class,writer,factor,out,put,short,access,mask,put,short,name,put,short,desc,int,attribute,count,0,if,value,0,attribute,count,if,access,opcodes,0,if,cw,version,0x,ffff,opcodes,access,class,writer,0,attribute,count,if,access,opcodes,0,attribute,count,if,class,reader,signatures,signature,0,attribute,count,if,class,reader,annotations,anns,null,attribute,count,if,class,reader,annotations,ianns,null,attribute,count,if,attrs,null,attribute,count,attrs,get,count,out,put,short,attribute,count,if,value,0,out,put,short,cw,new,utf8,constant,value,out,put,int,2,put,short,value,if,access,opcodes,0,if,cw,version,0x,ffff,opcodes,access,class,writer,0,out,put,short,cw,new,utf8,synthetic,put,int,0,if,access,opcodes,0,out,put,short,cw,new,utf8,deprecated,put,int,0,if,class,reader,signatures,signature,0,out,put,short,cw,new,utf8,signature,out,put,int,2,put,short,signature,if,class,reader,annotations,anns,null,out,put,short,cw,new,utf8,runtime,visible,annotations,anns,put,out,if,class,reader,annotations,ianns,null,out,put,short,cw,new,utf8,runtime,invisible,annotations,ianns,put,out,if,attrs,null,attrs,put,cw,null,0,1,1,out
FieldWriter -> void put(final ByteVector out);1395273982;Puts the content of this field into the given byte vector.__@param out_where the content of this field must be put.;void put(final ByteVector out) {_        final int FACTOR = ClassWriter.TO_ACC_SYNTHETIC__        int mask = Opcodes.ACC_DEPRECATED | ClassWriter.ACC_SYNTHETIC_ATTRIBUTE_                | ((access & ClassWriter.ACC_SYNTHETIC_ATTRIBUTE) / FACTOR)__        out.putShort(access & ~mask).putShort(name).putShort(desc)__        int attributeCount = 0__        if (value != 0) {_            ++attributeCount__        }_        if ((access & Opcodes.ACC_SYNTHETIC) != 0) {_            if ((cw.version & 0xFFFF) < Opcodes.V1_5_                    || (access & ClassWriter.ACC_SYNTHETIC_ATTRIBUTE) != 0) {_                ++attributeCount__            }_        }_        if ((access & Opcodes.ACC_DEPRECATED) != 0) {_            ++attributeCount__        }_        if (ClassReader.SIGNATURES && signature != 0) {_            ++attributeCount__        }_        if (ClassReader.ANNOTATIONS && anns != null) {_            ++attributeCount__        }_        if (ClassReader.ANNOTATIONS && ianns != null) {_            ++attributeCount__        }_        if (ClassReader.ANNOTATIONS && tanns != null) {_            ++attributeCount__        }_        if (ClassReader.ANNOTATIONS && itanns != null) {_            ++attributeCount__        }_        if (attrs != null) {_            attributeCount += attrs.getCount()__        }_        out.putShort(attributeCount)__        if (value != 0) {_            out.putShort(cw.newUTF8("ConstantValue"))__            out.putInt(2).putShort(value)__        }_        if ((access & Opcodes.ACC_SYNTHETIC) != 0) {_            if ((cw.version & 0xFFFF) < Opcodes.V1_5_                    || (access & ClassWriter.ACC_SYNTHETIC_ATTRIBUTE) != 0) {_                out.putShort(cw.newUTF8("Synthetic")).putInt(0)__            }_        }_        if ((access & Opcodes.ACC_DEPRECATED) != 0) {_            out.putShort(cw.newUTF8("Deprecated")).putInt(0)__        }_        if (ClassReader.SIGNATURES && signature != 0) {_            out.putShort(cw.newUTF8("Signature"))__            out.putInt(2).putShort(signature)__        }_        if (ClassReader.ANNOTATIONS && anns != null) {_            out.putShort(cw.newUTF8("RuntimeVisibleAnnotations"))__            anns.put(out)__        }_        if (ClassReader.ANNOTATIONS && ianns != null) {_            out.putShort(cw.newUTF8("RuntimeInvisibleAnnotations"))__            ianns.put(out)__        }_        if (ClassReader.ANNOTATIONS && tanns != null) {_            out.putShort(cw.newUTF8("RuntimeVisibleTypeAnnotations"))__            tanns.put(out)__        }_        if (ClassReader.ANNOTATIONS && itanns != null) {_            out.putShort(cw.newUTF8("RuntimeInvisibleTypeAnnotations"))__            itanns.put(out)__        }_        if (attrs != null) {_            attrs.put(cw, null, 0, -1, -1, out)__        }_    };puts,the,content,of,this,field,into,the,given,byte,vector,param,out,where,the,content,of,this,field,must,be,put;void,put,final,byte,vector,out,final,int,factor,class,writer,int,mask,opcodes,class,writer,access,class,writer,factor,out,put,short,access,mask,put,short,name,put,short,desc,int,attribute,count,0,if,value,0,attribute,count,if,access,opcodes,0,if,cw,version,0x,ffff,opcodes,access,class,writer,0,attribute,count,if,access,opcodes,0,attribute,count,if,class,reader,signatures,signature,0,attribute,count,if,class,reader,annotations,anns,null,attribute,count,if,class,reader,annotations,ianns,null,attribute,count,if,class,reader,annotations,tanns,null,attribute,count,if,class,reader,annotations,itanns,null,attribute,count,if,attrs,null,attribute,count,attrs,get,count,out,put,short,attribute,count,if,value,0,out,put,short,cw,new,utf8,constant,value,out,put,int,2,put,short,value,if,access,opcodes,0,if,cw,version,0x,ffff,opcodes,access,class,writer,0,out,put,short,cw,new,utf8,synthetic,put,int,0,if,access,opcodes,0,out,put,short,cw,new,utf8,deprecated,put,int,0,if,class,reader,signatures,signature,0,out,put,short,cw,new,utf8,signature,out,put,int,2,put,short,signature,if,class,reader,annotations,anns,null,out,put,short,cw,new,utf8,runtime,visible,annotations,anns,put,out,if,class,reader,annotations,ianns,null,out,put,short,cw,new,utf8,runtime,invisible,annotations,ianns,put,out,if,class,reader,annotations,tanns,null,out,put,short,cw,new,utf8,runtime,visible,type,annotations,tanns,put,out,if,class,reader,annotations,itanns,null,out,put,short,cw,new,utf8,runtime,invisible,type,annotations,itanns,put,out,if,attrs,null,attrs,put,cw,null,0,1,1,out
FieldWriter -> void put(final ByteVector out);1505821772;Puts the content of this field into the given byte vector.__@param out_where the content of this field must be put.;void put(final ByteVector out) {_        final int FACTOR = ClassWriter.TO_ACC_SYNTHETIC__        int mask = Opcodes.ACC_DEPRECATED | ClassWriter.ACC_SYNTHETIC_ATTRIBUTE_                | ((access & ClassWriter.ACC_SYNTHETIC_ATTRIBUTE) / FACTOR)__        out.putShort(access & ~mask).putShort(name).putShort(desc)__        int attributeCount = 0__        if (value != 0) {_            ++attributeCount__        }_        if ((access & Opcodes.ACC_SYNTHETIC) != 0) {_            if ((cw.version & 0xFFFF) < Opcodes.V1_5_                    || (access & ClassWriter.ACC_SYNTHETIC_ATTRIBUTE) != 0) {_                ++attributeCount__            }_        }_        if ((access & Opcodes.ACC_DEPRECATED) != 0) {_            ++attributeCount__        }_        if (ClassReader.SIGNATURES && signature != 0) {_            ++attributeCount__        }_        if (ClassReader.ANNOTATIONS && anns != null) {_            ++attributeCount__        }_        if (ClassReader.ANNOTATIONS && ianns != null) {_            ++attributeCount__        }_        if (ClassReader.ANNOTATIONS && tanns != null) {_            ++attributeCount__        }_        if (ClassReader.ANNOTATIONS && itanns != null) {_            ++attributeCount__        }_        if (attrs != null) {_            attributeCount += attrs.getCount()__        }_        out.putShort(attributeCount)__        if (value != 0) {_            out.putShort(cw.newUTF8("ConstantValue"))__            out.putInt(2).putShort(value)__        }_        if ((access & Opcodes.ACC_SYNTHETIC) != 0) {_            if ((cw.version & 0xFFFF) < Opcodes.V1_5_                    || (access & ClassWriter.ACC_SYNTHETIC_ATTRIBUTE) != 0) {_                out.putShort(cw.newUTF8("Synthetic")).putInt(0)__            }_        }_        if ((access & Opcodes.ACC_DEPRECATED) != 0) {_            out.putShort(cw.newUTF8("Deprecated")).putInt(0)__        }_        if (ClassReader.SIGNATURES && signature != 0) {_            out.putShort(cw.newUTF8("Signature"))__            out.putInt(2).putShort(signature)__        }_        if (ClassReader.ANNOTATIONS && anns != null) {_            out.putShort(cw.newUTF8("RuntimeVisibleAnnotations"))__            anns.put(out)__        }_        if (ClassReader.ANNOTATIONS && ianns != null) {_            out.putShort(cw.newUTF8("RuntimeInvisibleAnnotations"))__            ianns.put(out)__        }_        if (ClassReader.ANNOTATIONS && tanns != null) {_            out.putShort(cw.newUTF8("RuntimeVisibleTypeAnnotations"))__            tanns.put(out)__        }_        if (ClassReader.ANNOTATIONS && itanns != null) {_            out.putShort(cw.newUTF8("RuntimeInvisibleTypeAnnotations"))__            itanns.put(out)__        }_        if (attrs != null) {_            attrs.put(cw, null, 0, -1, -1, out)__        }_    };puts,the,content,of,this,field,into,the,given,byte,vector,param,out,where,the,content,of,this,field,must,be,put;void,put,final,byte,vector,out,final,int,factor,class,writer,int,mask,opcodes,class,writer,access,class,writer,factor,out,put,short,access,mask,put,short,name,put,short,desc,int,attribute,count,0,if,value,0,attribute,count,if,access,opcodes,0,if,cw,version,0x,ffff,opcodes,access,class,writer,0,attribute,count,if,access,opcodes,0,attribute,count,if,class,reader,signatures,signature,0,attribute,count,if,class,reader,annotations,anns,null,attribute,count,if,class,reader,annotations,ianns,null,attribute,count,if,class,reader,annotations,tanns,null,attribute,count,if,class,reader,annotations,itanns,null,attribute,count,if,attrs,null,attribute,count,attrs,get,count,out,put,short,attribute,count,if,value,0,out,put,short,cw,new,utf8,constant,value,out,put,int,2,put,short,value,if,access,opcodes,0,if,cw,version,0x,ffff,opcodes,access,class,writer,0,out,put,short,cw,new,utf8,synthetic,put,int,0,if,access,opcodes,0,out,put,short,cw,new,utf8,deprecated,put,int,0,if,class,reader,signatures,signature,0,out,put,short,cw,new,utf8,signature,out,put,int,2,put,short,signature,if,class,reader,annotations,anns,null,out,put,short,cw,new,utf8,runtime,visible,annotations,anns,put,out,if,class,reader,annotations,ianns,null,out,put,short,cw,new,utf8,runtime,invisible,annotations,ianns,put,out,if,class,reader,annotations,tanns,null,out,put,short,cw,new,utf8,runtime,visible,type,annotations,tanns,put,out,if,class,reader,annotations,itanns,null,out,put,short,cw,new,utf8,runtime,invisible,type,annotations,itanns,put,out,if,attrs,null,attrs,put,cw,null,0,1,1,out
FieldWriter -> int getSize();1366718246;Returns the size of this field.__@return the size of this field.;int getSize() {_        int size = 8__        if (value != 0) {_            cw.newUTF8("ConstantValue")__            size += 8__        }_        if ((access & Opcodes.ACC_SYNTHETIC) != 0) {_            if ((cw.version & 0xFFFF) < Opcodes.V1_5_                    || (access & ClassWriter.ACC_SYNTHETIC_ATTRIBUTE) != 0) {_                cw.newUTF8("Synthetic")__                size += 6__            }_        }_        if ((access & Opcodes.ACC_DEPRECATED) != 0) {_            cw.newUTF8("Deprecated")__            size += 6__        }_        if (ClassReader.SIGNATURES && signature != 0) {_            cw.newUTF8("Signature")__            size += 8__        }_        if (ClassReader.ANNOTATIONS && anns != null) {_            cw.newUTF8("RuntimeVisibleAnnotations")__            size += 8 + anns.getSize()__        }_        if (ClassReader.ANNOTATIONS && ianns != null) {_            cw.newUTF8("RuntimeInvisibleAnnotations")__            size += 8 + ianns.getSize()__        }_        if (attrs != null) {_            size += attrs.getSize(cw, null, 0, -1, -1)__        }_        return size__    };returns,the,size,of,this,field,return,the,size,of,this,field;int,get,size,int,size,8,if,value,0,cw,new,utf8,constant,value,size,8,if,access,opcodes,0,if,cw,version,0x,ffff,opcodes,access,class,writer,0,cw,new,utf8,synthetic,size,6,if,access,opcodes,0,cw,new,utf8,deprecated,size,6,if,class,reader,signatures,signature,0,cw,new,utf8,signature,size,8,if,class,reader,annotations,anns,null,cw,new,utf8,runtime,visible,annotations,size,8,anns,get,size,if,class,reader,annotations,ianns,null,cw,new,utf8,runtime,invisible,annotations,size,8,ianns,get,size,if,attrs,null,size,attrs,get,size,cw,null,0,1,1,return,size
FieldWriter -> int getSize();1395273982;Returns the size of this field.__@return the size of this field.;int getSize() {_        int size = 8__        if (value != 0) {_            cw.newUTF8("ConstantValue")__            size += 8__        }_        if ((access & Opcodes.ACC_SYNTHETIC) != 0) {_            if ((cw.version & 0xFFFF) < Opcodes.V1_5_                    || (access & ClassWriter.ACC_SYNTHETIC_ATTRIBUTE) != 0) {_                cw.newUTF8("Synthetic")__                size += 6__            }_        }_        if ((access & Opcodes.ACC_DEPRECATED) != 0) {_            cw.newUTF8("Deprecated")__            size += 6__        }_        if (ClassReader.SIGNATURES && signature != 0) {_            cw.newUTF8("Signature")__            size += 8__        }_        if (ClassReader.ANNOTATIONS && anns != null) {_            cw.newUTF8("RuntimeVisibleAnnotations")__            size += 8 + anns.getSize()__        }_        if (ClassReader.ANNOTATIONS && ianns != null) {_            cw.newUTF8("RuntimeInvisibleAnnotations")__            size += 8 + ianns.getSize()__        }_        if (ClassReader.ANNOTATIONS && tanns != null) {_            cw.newUTF8("RuntimeVisibleTypeAnnotations")__            size += 8 + tanns.getSize()__        }_        if (ClassReader.ANNOTATIONS && itanns != null) {_            cw.newUTF8("RuntimeInvisibleTypeAnnotations")__            size += 8 + itanns.getSize()__        }_        if (attrs != null) {_            size += attrs.getSize(cw, null, 0, -1, -1)__        }_        return size__    };returns,the,size,of,this,field,return,the,size,of,this,field;int,get,size,int,size,8,if,value,0,cw,new,utf8,constant,value,size,8,if,access,opcodes,0,if,cw,version,0x,ffff,opcodes,access,class,writer,0,cw,new,utf8,synthetic,size,6,if,access,opcodes,0,cw,new,utf8,deprecated,size,6,if,class,reader,signatures,signature,0,cw,new,utf8,signature,size,8,if,class,reader,annotations,anns,null,cw,new,utf8,runtime,visible,annotations,size,8,anns,get,size,if,class,reader,annotations,ianns,null,cw,new,utf8,runtime,invisible,annotations,size,8,ianns,get,size,if,class,reader,annotations,tanns,null,cw,new,utf8,runtime,visible,type,annotations,size,8,tanns,get,size,if,class,reader,annotations,itanns,null,cw,new,utf8,runtime,invisible,type,annotations,size,8,itanns,get,size,if,attrs,null,size,attrs,get,size,cw,null,0,1,1,return,size
FieldWriter -> int getSize();1505821772;Returns the size of this field.__@return the size of this field.;int getSize() {_        int size = 8__        if (value != 0) {_            cw.newUTF8("ConstantValue")__            size += 8__        }_        if ((access & Opcodes.ACC_SYNTHETIC) != 0) {_            if ((cw.version & 0xFFFF) < Opcodes.V1_5_                    || (access & ClassWriter.ACC_SYNTHETIC_ATTRIBUTE) != 0) {_                cw.newUTF8("Synthetic")__                size += 6__            }_        }_        if ((access & Opcodes.ACC_DEPRECATED) != 0) {_            cw.newUTF8("Deprecated")__            size += 6__        }_        if (ClassReader.SIGNATURES && signature != 0) {_            cw.newUTF8("Signature")__            size += 8__        }_        if (ClassReader.ANNOTATIONS && anns != null) {_            cw.newUTF8("RuntimeVisibleAnnotations")__            size += 8 + anns.getSize()__        }_        if (ClassReader.ANNOTATIONS && ianns != null) {_            cw.newUTF8("RuntimeInvisibleAnnotations")__            size += 8 + ianns.getSize()__        }_        if (ClassReader.ANNOTATIONS && tanns != null) {_            cw.newUTF8("RuntimeVisibleTypeAnnotations")__            size += 8 + tanns.getSize()__        }_        if (ClassReader.ANNOTATIONS && itanns != null) {_            cw.newUTF8("RuntimeInvisibleTypeAnnotations")__            size += 8 + itanns.getSize()__        }_        if (attrs != null) {_            size += attrs.getSize(cw, null, 0, -1, -1)__        }_        return size__    };returns,the,size,of,this,field,return,the,size,of,this,field;int,get,size,int,size,8,if,value,0,cw,new,utf8,constant,value,size,8,if,access,opcodes,0,if,cw,version,0x,ffff,opcodes,access,class,writer,0,cw,new,utf8,synthetic,size,6,if,access,opcodes,0,cw,new,utf8,deprecated,size,6,if,class,reader,signatures,signature,0,cw,new,utf8,signature,size,8,if,class,reader,annotations,anns,null,cw,new,utf8,runtime,visible,annotations,size,8,anns,get,size,if,class,reader,annotations,ianns,null,cw,new,utf8,runtime,invisible,annotations,size,8,ianns,get,size,if,class,reader,annotations,tanns,null,cw,new,utf8,runtime,visible,type,annotations,size,8,tanns,get,size,if,class,reader,annotations,itanns,null,cw,new,utf8,runtime,invisible,type,annotations,size,8,itanns,get,size,if,attrs,null,size,attrs,get,size,cw,null,0,1,1,return,size
FieldWriter -> FieldWriter(       final SymbolTable symbolTable,       final int access,       final String name,       final String descriptor,       final String signature,       final Object constantValue);1531241461;Constructs a new {@link FieldWriter}.__@param symbolTable where the constants used in this FieldWriter must be stored._@param access the field's access flags (see {@link Opcodes})._@param name the field's name._@param descriptor the field's descriptor (see {@link Type})._@param signature the field's signature. May be <tt>null</tt>._@param constantValue the field's constant value. May be <tt>null</tt>.;FieldWriter(_      final SymbolTable symbolTable,_      final int access,_      final String name,_      final String descriptor,_      final String signature,_      final Object constantValue) {_    super(Opcodes.ASM6)__    this.symbolTable = symbolTable__    this.accessFlags = access__    this.nameIndex = symbolTable.addConstantUtf8(name)__    this.descriptorIndex = symbolTable.addConstantUtf8(descriptor)__    if (signature != null) {_      this.signatureIndex = symbolTable.addConstantUtf8(signature)__    }_    if (constantValue != null) {_      this.constantValueIndex = symbolTable.addConstant(constantValue).index__    }_  };constructs,a,new,link,field,writer,param,symbol,table,where,the,constants,used,in,this,field,writer,must,be,stored,param,access,the,field,s,access,flags,see,link,opcodes,param,name,the,field,s,name,param,descriptor,the,field,s,descriptor,see,link,type,param,signature,the,field,s,signature,may,be,tt,null,tt,param,constant,value,the,field,s,constant,value,may,be,tt,null,tt;field,writer,final,symbol,table,symbol,table,final,int,access,final,string,name,final,string,descriptor,final,string,signature,final,object,constant,value,super,opcodes,asm6,this,symbol,table,symbol,table,this,access,flags,access,this,name,index,symbol,table,add,constant,utf8,name,this,descriptor,index,symbol,table,add,constant,utf8,descriptor,if,signature,null,this,signature,index,symbol,table,add,constant,utf8,signature,if,constant,value,null,this,constant,value,index,symbol,table,add,constant,constant,value,index
FieldWriter -> FieldWriter(       final SymbolTable symbolTable,       final int access,       final String name,       final String descriptor,       final String signature,       final Object constantValue);1536664245;Constructs a new {@link FieldWriter}.__@param symbolTable where the constants used in this FieldWriter must be stored._@param access the field's access flags (see {@link Opcodes})._@param name the field's name._@param descriptor the field's descriptor (see {@link Type})._@param signature the field's signature. May be {@literal null}._@param constantValue the field's constant value. May be {@literal null}.;FieldWriter(_      final SymbolTable symbolTable,_      final int access,_      final String name,_      final String descriptor,_      final String signature,_      final Object constantValue) {_    super(Opcodes.ASM7)__    this.symbolTable = symbolTable__    this.accessFlags = access__    this.nameIndex = symbolTable.addConstantUtf8(name)__    this.descriptorIndex = symbolTable.addConstantUtf8(descriptor)__    if (signature != null) {_      this.signatureIndex = symbolTable.addConstantUtf8(signature)__    }_    if (constantValue != null) {_      this.constantValueIndex = symbolTable.addConstant(constantValue).index__    }_  };constructs,a,new,link,field,writer,param,symbol,table,where,the,constants,used,in,this,field,writer,must,be,stored,param,access,the,field,s,access,flags,see,link,opcodes,param,name,the,field,s,name,param,descriptor,the,field,s,descriptor,see,link,type,param,signature,the,field,s,signature,may,be,literal,null,param,constant,value,the,field,s,constant,value,may,be,literal,null;field,writer,final,symbol,table,symbol,table,final,int,access,final,string,name,final,string,descriptor,final,string,signature,final,object,constant,value,super,opcodes,asm7,this,symbol,table,symbol,table,this,access,flags,access,this,name,index,symbol,table,add,constant,utf8,name,this,descriptor,index,symbol,table,add,constant,utf8,descriptor,if,signature,null,this,signature,index,symbol,table,add,constant,utf8,signature,if,constant,value,null,this,constant,value,index,symbol,table,add,constant,constant,value,index
FieldWriter -> final void collectAttributePrototypes(final Attribute.Set attributePrototypes);1531241461;Collects the attributes of this field into the given set of attribute prototypes.__@param attributePrototypes a set of attribute prototypes.;final void collectAttributePrototypes(final Attribute.Set attributePrototypes) {_    attributePrototypes.addAttributes(firstAttribute)__  };collects,the,attributes,of,this,field,into,the,given,set,of,attribute,prototypes,param,attribute,prototypes,a,set,of,attribute,prototypes;final,void,collect,attribute,prototypes,final,attribute,set,attribute,prototypes,attribute,prototypes,add,attributes,first,attribute
FieldWriter -> final void collectAttributePrototypes(final Attribute.Set attributePrototypes);1536664245;Collects the attributes of this field into the given set of attribute prototypes.__@param attributePrototypes a set of attribute prototypes.;final void collectAttributePrototypes(final Attribute.Set attributePrototypes) {_    attributePrototypes.addAttributes(firstAttribute)__  };collects,the,attributes,of,this,field,into,the,given,set,of,attribute,prototypes,param,attribute,prototypes,a,set,of,attribute,prototypes;final,void,collect,attribute,prototypes,final,attribute,set,attribute,prototypes,attribute,prototypes,add,attributes,first,attribute
FieldWriter -> FieldWriter(final ClassWriter cw, final int access, final String name,             final String desc, final String signature, final Object value);1366718246;Constructs a new {@link FieldWriter}.__@param cw_the class writer to which this field must be added._@param access_the field's access flags (see {@link Opcodes})._@param name_the field's name._@param desc_the field's descriptor (see {@link Type})._@param signature_the field's signature. May be <tt>null</tt>._@param value_the field's constant value. May be <tt>null</tt>.;FieldWriter(final ClassWriter cw, final int access, final String name,_            final String desc, final String signature, final Object value) {_        super(Opcodes.ASM4)__        if (cw.firstField == null) {_            cw.firstField = this__        } else {_            cw.lastField.fv = this__        }_        cw.lastField = this__        this.cw = cw__        this.access = access__        this.name = cw.newUTF8(name)__        this.desc = cw.newUTF8(desc)__        if (ClassReader.SIGNATURES && signature != null) {_            this.signature = cw.newUTF8(signature)__        }_        if (value != null) {_            this.value = cw.newConstItem(value).index__        }_    };constructs,a,new,link,field,writer,param,cw,the,class,writer,to,which,this,field,must,be,added,param,access,the,field,s,access,flags,see,link,opcodes,param,name,the,field,s,name,param,desc,the,field,s,descriptor,see,link,type,param,signature,the,field,s,signature,may,be,tt,null,tt,param,value,the,field,s,constant,value,may,be,tt,null,tt;field,writer,final,class,writer,cw,final,int,access,final,string,name,final,string,desc,final,string,signature,final,object,value,super,opcodes,asm4,if,cw,first,field,null,cw,first,field,this,else,cw,last,field,fv,this,cw,last,field,this,this,cw,cw,this,access,access,this,name,cw,new,utf8,name,this,desc,cw,new,utf8,desc,if,class,reader,signatures,signature,null,this,signature,cw,new,utf8,signature,if,value,null,this,value,cw,new,const,item,value,index
FieldWriter -> FieldWriter(final ClassWriter cw, final int access, final String name,             final String desc, final String signature, final Object value);1395273982;Constructs a new {@link FieldWriter}.__@param cw_the class writer to which this field must be added._@param access_the field's access flags (see {@link Opcodes})._@param name_the field's name._@param desc_the field's descriptor (see {@link Type})._@param signature_the field's signature. May be <tt>null</tt>._@param value_the field's constant value. May be <tt>null</tt>.;FieldWriter(final ClassWriter cw, final int access, final String name,_            final String desc, final String signature, final Object value) {_        super(Opcodes.ASM5)__        if (cw.firstField == null) {_            cw.firstField = this__        } else {_            cw.lastField.fv = this__        }_        cw.lastField = this__        this.cw = cw__        this.access = access__        this.name = cw.newUTF8(name)__        this.desc = cw.newUTF8(desc)__        if (ClassReader.SIGNATURES && signature != null) {_            this.signature = cw.newUTF8(signature)__        }_        if (value != null) {_            this.value = cw.newConstItem(value).index__        }_    };constructs,a,new,link,field,writer,param,cw,the,class,writer,to,which,this,field,must,be,added,param,access,the,field,s,access,flags,see,link,opcodes,param,name,the,field,s,name,param,desc,the,field,s,descriptor,see,link,type,param,signature,the,field,s,signature,may,be,tt,null,tt,param,value,the,field,s,constant,value,may,be,tt,null,tt;field,writer,final,class,writer,cw,final,int,access,final,string,name,final,string,desc,final,string,signature,final,object,value,super,opcodes,asm5,if,cw,first,field,null,cw,first,field,this,else,cw,last,field,fv,this,cw,last,field,this,this,cw,cw,this,access,access,this,name,cw,new,utf8,name,this,desc,cw,new,utf8,desc,if,class,reader,signatures,signature,null,this,signature,cw,new,utf8,signature,if,value,null,this,value,cw,new,const,item,value,index
FieldWriter -> FieldWriter(final ClassWriter cw, final int access, final String name,             final String desc, final String signature, final Object value);1505821772;Constructs a new {@link FieldWriter}.__@param cw_the class writer to which this field must be added._@param access_the field's access flags (see {@link Opcodes})._@param name_the field's name._@param desc_the field's descriptor (see {@link Type})._@param signature_the field's signature. May be <tt>null</tt>._@param value_the field's constant value. May be <tt>null</tt>.;FieldWriter(final ClassWriter cw, final int access, final String name,_            final String desc, final String signature, final Object value) {_        super(Opcodes.ASM6)__        if (cw.firstField == null) {_            cw.firstField = this__        } else {_            cw.lastField.fv = this__        }_        cw.lastField = this__        this.cw = cw__        this.access = access__        this.name = cw.newUTF8(name)__        this.desc = cw.newUTF8(desc)__        if (ClassReader.SIGNATURES && signature != null) {_            this.signature = cw.newUTF8(signature)__        }_        if (value != null) {_            this.value = cw.newConstItem(value).index__        }_    };constructs,a,new,link,field,writer,param,cw,the,class,writer,to,which,this,field,must,be,added,param,access,the,field,s,access,flags,see,link,opcodes,param,name,the,field,s,name,param,desc,the,field,s,descriptor,see,link,type,param,signature,the,field,s,signature,may,be,tt,null,tt,param,value,the,field,s,constant,value,may,be,tt,null,tt;field,writer,final,class,writer,cw,final,int,access,final,string,name,final,string,desc,final,string,signature,final,object,value,super,opcodes,asm6,if,cw,first,field,null,cw,first,field,this,else,cw,last,field,fv,this,cw,last,field,this,this,cw,cw,this,access,access,this,name,cw,new,utf8,name,this,desc,cw,new,utf8,desc,if,class,reader,signatures,signature,null,this,signature,cw,new,utf8,signature,if,value,null,this,value,cw,new,const,item,value,index
FieldWriter -> int computeFieldInfoSize();1531241461;Returns the size of the field_info JVMS structure generated by this FieldWriter. Also adds the_names of the attributes of this field in the constant pool.__@return the size in bytes of the field_info JVMS structure.;int computeFieldInfoSize() {_    _    int size = 8__    _    if (constantValueIndex != 0) {_      _      symbolTable.addConstantUtf8(Constants.CONSTANT_VALUE)__      size += 8__    }_    _    if ((accessFlags & Opcodes.ACC_SYNTHETIC) != 0_        && symbolTable.getMajorVersion() < Opcodes.V1_5) {_      _      symbolTable.addConstantUtf8(Constants.SYNTHETIC)__      size += 6__    }_    if (signatureIndex != 0) {_      _      symbolTable.addConstantUtf8(Constants.SIGNATURE)__      size += 8__    }_    _    if ((accessFlags & Opcodes.ACC_DEPRECATED) != 0) {_      _      symbolTable.addConstantUtf8(Constants.DEPRECATED)__      size += 6__    }_    if (lastRuntimeVisibleAnnotation != null) {_      size +=_          lastRuntimeVisibleAnnotation.computeAnnotationsSize(_              Constants.RUNTIME_VISIBLE_ANNOTATIONS)__    }_    if (lastRuntimeInvisibleAnnotation != null) {_      size +=_          lastRuntimeInvisibleAnnotation.computeAnnotationsSize(_              Constants.RUNTIME_INVISIBLE_ANNOTATIONS)__    }_    if (lastRuntimeVisibleTypeAnnotation != null) {_      size +=_          lastRuntimeVisibleTypeAnnotation.computeAnnotationsSize(_              Constants.RUNTIME_VISIBLE_TYPE_ANNOTATIONS)__    }_    if (lastRuntimeInvisibleTypeAnnotation != null) {_      size +=_          lastRuntimeInvisibleTypeAnnotation.computeAnnotationsSize(_              Constants.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS)__    }_    if (firstAttribute != null) {_      size += firstAttribute.computeAttributesSize(symbolTable)__    }_    return size__  };returns,the,size,of,the,jvms,structure,generated,by,this,field,writer,also,adds,the,names,of,the,attributes,of,this,field,in,the,constant,pool,return,the,size,in,bytes,of,the,jvms,structure;int,compute,field,info,size,int,size,8,if,constant,value,index,0,symbol,table,add,constant,utf8,constants,size,8,if,access,flags,opcodes,0,symbol,table,get,major,version,opcodes,symbol,table,add,constant,utf8,constants,synthetic,size,6,if,signature,index,0,symbol,table,add,constant,utf8,constants,signature,size,8,if,access,flags,opcodes,0,symbol,table,add,constant,utf8,constants,deprecated,size,6,if,last,runtime,visible,annotation,null,size,last,runtime,visible,annotation,compute,annotations,size,constants,if,last,runtime,invisible,annotation,null,size,last,runtime,invisible,annotation,compute,annotations,size,constants,if,last,runtime,visible,type,annotation,null,size,last,runtime,visible,type,annotation,compute,annotations,size,constants,if,last,runtime,invisible,type,annotation,null,size,last,runtime,invisible,type,annotation,compute,annotations,size,constants,if,first,attribute,null,size,first,attribute,compute,attributes,size,symbol,table,return,size
FieldWriter -> int computeFieldInfoSize();1536664245;Returns the size of the field_info JVMS structure generated by this FieldWriter. Also adds the_names of the attributes of this field in the constant pool.__@return the size in bytes of the field_info JVMS structure.;int computeFieldInfoSize() {_    _    int size = 8__    _    if (constantValueIndex != 0) {_      _      symbolTable.addConstantUtf8(Constants.CONSTANT_VALUE)__      size += 8__    }_    _    if ((accessFlags & Opcodes.ACC_SYNTHETIC) != 0_        && symbolTable.getMajorVersion() < Opcodes.V1_5) {_      _      symbolTable.addConstantUtf8(Constants.SYNTHETIC)__      size += 6__    }_    if (signatureIndex != 0) {_      _      symbolTable.addConstantUtf8(Constants.SIGNATURE)__      size += 8__    }_    _    if ((accessFlags & Opcodes.ACC_DEPRECATED) != 0) {_      _      symbolTable.addConstantUtf8(Constants.DEPRECATED)__      size += 6__    }_    if (lastRuntimeVisibleAnnotation != null) {_      size +=_          lastRuntimeVisibleAnnotation.computeAnnotationsSize(_              Constants.RUNTIME_VISIBLE_ANNOTATIONS)__    }_    if (lastRuntimeInvisibleAnnotation != null) {_      size +=_          lastRuntimeInvisibleAnnotation.computeAnnotationsSize(_              Constants.RUNTIME_INVISIBLE_ANNOTATIONS)__    }_    if (lastRuntimeVisibleTypeAnnotation != null) {_      size +=_          lastRuntimeVisibleTypeAnnotation.computeAnnotationsSize(_              Constants.RUNTIME_VISIBLE_TYPE_ANNOTATIONS)__    }_    if (lastRuntimeInvisibleTypeAnnotation != null) {_      size +=_          lastRuntimeInvisibleTypeAnnotation.computeAnnotationsSize(_              Constants.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS)__    }_    if (firstAttribute != null) {_      size += firstAttribute.computeAttributesSize(symbolTable)__    }_    return size__  };returns,the,size,of,the,jvms,structure,generated,by,this,field,writer,also,adds,the,names,of,the,attributes,of,this,field,in,the,constant,pool,return,the,size,in,bytes,of,the,jvms,structure;int,compute,field,info,size,int,size,8,if,constant,value,index,0,symbol,table,add,constant,utf8,constants,size,8,if,access,flags,opcodes,0,symbol,table,get,major,version,opcodes,symbol,table,add,constant,utf8,constants,synthetic,size,6,if,signature,index,0,symbol,table,add,constant,utf8,constants,signature,size,8,if,access,flags,opcodes,0,symbol,table,add,constant,utf8,constants,deprecated,size,6,if,last,runtime,visible,annotation,null,size,last,runtime,visible,annotation,compute,annotations,size,constants,if,last,runtime,invisible,annotation,null,size,last,runtime,invisible,annotation,compute,annotations,size,constants,if,last,runtime,visible,type,annotation,null,size,last,runtime,visible,type,annotation,compute,annotations,size,constants,if,last,runtime,invisible,type,annotation,null,size,last,runtime,invisible,type,annotation,compute,annotations,size,constants,if,first,attribute,null,size,first,attribute,compute,attributes,size,symbol,table,return,size
FieldWriter -> void putFieldInfo(final ByteVector output);1531241461;Puts the content of the field_info JVMS structure generated by this FieldWriter into the given_ByteVector.__@param output where the field_info structure must be put.;void putFieldInfo(final ByteVector output) {_    boolean useSyntheticAttribute = symbolTable.getMajorVersion() < Opcodes.V1_5__    _    int mask = useSyntheticAttribute ? Opcodes.ACC_SYNTHETIC : 0__    output.putShort(accessFlags & ~mask).putShort(nameIndex).putShort(descriptorIndex)__    _    _    int attributesCount = 0__    if (constantValueIndex != 0) {_      ++attributesCount__    }_    if ((accessFlags & Opcodes.ACC_SYNTHETIC) != 0 && useSyntheticAttribute) {_      ++attributesCount__    }_    if (signatureIndex != 0) {_      ++attributesCount__    }_    if ((accessFlags & Opcodes.ACC_DEPRECATED) != 0) {_      ++attributesCount__    }_    if (lastRuntimeVisibleAnnotation != null) {_      ++attributesCount__    }_    if (lastRuntimeInvisibleAnnotation != null) {_      ++attributesCount__    }_    if (lastRuntimeVisibleTypeAnnotation != null) {_      ++attributesCount__    }_    if (lastRuntimeInvisibleTypeAnnotation != null) {_      ++attributesCount__    }_    if (firstAttribute != null) {_      attributesCount += firstAttribute.getAttributeCount()__    }_    output.putShort(attributesCount)__    _    _    if (constantValueIndex != 0) {_      output_          .putShort(symbolTable.addConstantUtf8(Constants.CONSTANT_VALUE))_          .putInt(2)_          .putShort(constantValueIndex)__    }_    if ((accessFlags & Opcodes.ACC_SYNTHETIC) != 0 && useSyntheticAttribute) {_      output.putShort(symbolTable.addConstantUtf8(Constants.SYNTHETIC)).putInt(0)__    }_    if (signatureIndex != 0) {_      output_          .putShort(symbolTable.addConstantUtf8(Constants.SIGNATURE))_          .putInt(2)_          .putShort(signatureIndex)__    }_    if ((accessFlags & Opcodes.ACC_DEPRECATED) != 0) {_      output.putShort(symbolTable.addConstantUtf8(Constants.DEPRECATED)).putInt(0)__    }_    if (lastRuntimeVisibleAnnotation != null) {_      lastRuntimeVisibleAnnotation.putAnnotations(_          symbolTable.addConstantUtf8(Constants.RUNTIME_VISIBLE_ANNOTATIONS), output)__    }_    if (lastRuntimeInvisibleAnnotation != null) {_      lastRuntimeInvisibleAnnotation.putAnnotations(_          symbolTable.addConstantUtf8(Constants.RUNTIME_INVISIBLE_ANNOTATIONS), output)__    }_    if (lastRuntimeVisibleTypeAnnotation != null) {_      lastRuntimeVisibleTypeAnnotation.putAnnotations(_          symbolTable.addConstantUtf8(Constants.RUNTIME_VISIBLE_TYPE_ANNOTATIONS), output)__    }_    if (lastRuntimeInvisibleTypeAnnotation != null) {_      lastRuntimeInvisibleTypeAnnotation.putAnnotations(_          symbolTable.addConstantUtf8(Constants.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS), output)__    }_    if (firstAttribute != null) {_      firstAttribute.putAttributes(symbolTable, output)__    }_  };puts,the,content,of,the,jvms,structure,generated,by,this,field,writer,into,the,given,byte,vector,param,output,where,the,structure,must,be,put;void,put,field,info,final,byte,vector,output,boolean,use,synthetic,attribute,symbol,table,get,major,version,opcodes,int,mask,use,synthetic,attribute,opcodes,0,output,put,short,access,flags,mask,put,short,name,index,put,short,descriptor,index,int,attributes,count,0,if,constant,value,index,0,attributes,count,if,access,flags,opcodes,0,use,synthetic,attribute,attributes,count,if,signature,index,0,attributes,count,if,access,flags,opcodes,0,attributes,count,if,last,runtime,visible,annotation,null,attributes,count,if,last,runtime,invisible,annotation,null,attributes,count,if,last,runtime,visible,type,annotation,null,attributes,count,if,last,runtime,invisible,type,annotation,null,attributes,count,if,first,attribute,null,attributes,count,first,attribute,get,attribute,count,output,put,short,attributes,count,if,constant,value,index,0,output,put,short,symbol,table,add,constant,utf8,constants,put,int,2,put,short,constant,value,index,if,access,flags,opcodes,0,use,synthetic,attribute,output,put,short,symbol,table,add,constant,utf8,constants,synthetic,put,int,0,if,signature,index,0,output,put,short,symbol,table,add,constant,utf8,constants,signature,put,int,2,put,short,signature,index,if,access,flags,opcodes,0,output,put,short,symbol,table,add,constant,utf8,constants,deprecated,put,int,0,if,last,runtime,visible,annotation,null,last,runtime,visible,annotation,put,annotations,symbol,table,add,constant,utf8,constants,output,if,last,runtime,invisible,annotation,null,last,runtime,invisible,annotation,put,annotations,symbol,table,add,constant,utf8,constants,output,if,last,runtime,visible,type,annotation,null,last,runtime,visible,type,annotation,put,annotations,symbol,table,add,constant,utf8,constants,output,if,last,runtime,invisible,type,annotation,null,last,runtime,invisible,type,annotation,put,annotations,symbol,table,add,constant,utf8,constants,output,if,first,attribute,null,first,attribute,put,attributes,symbol,table,output
FieldWriter -> void putFieldInfo(final ByteVector output);1536664245;Puts the content of the field_info JVMS structure generated by this FieldWriter into the given_ByteVector.__@param output where the field_info structure must be put.;void putFieldInfo(final ByteVector output) {_    boolean useSyntheticAttribute = symbolTable.getMajorVersion() < Opcodes.V1_5__    _    int mask = useSyntheticAttribute ? Opcodes.ACC_SYNTHETIC : 0__    output.putShort(accessFlags & ~mask).putShort(nameIndex).putShort(descriptorIndex)__    _    _    int attributesCount = 0__    if (constantValueIndex != 0) {_      ++attributesCount__    }_    if ((accessFlags & Opcodes.ACC_SYNTHETIC) != 0 && useSyntheticAttribute) {_      ++attributesCount__    }_    if (signatureIndex != 0) {_      ++attributesCount__    }_    if ((accessFlags & Opcodes.ACC_DEPRECATED) != 0) {_      ++attributesCount__    }_    if (lastRuntimeVisibleAnnotation != null) {_      ++attributesCount__    }_    if (lastRuntimeInvisibleAnnotation != null) {_      ++attributesCount__    }_    if (lastRuntimeVisibleTypeAnnotation != null) {_      ++attributesCount__    }_    if (lastRuntimeInvisibleTypeAnnotation != null) {_      ++attributesCount__    }_    if (firstAttribute != null) {_      attributesCount += firstAttribute.getAttributeCount()__    }_    output.putShort(attributesCount)__    _    _    if (constantValueIndex != 0) {_      output_          .putShort(symbolTable.addConstantUtf8(Constants.CONSTANT_VALUE))_          .putInt(2)_          .putShort(constantValueIndex)__    }_    if ((accessFlags & Opcodes.ACC_SYNTHETIC) != 0 && useSyntheticAttribute) {_      output.putShort(symbolTable.addConstantUtf8(Constants.SYNTHETIC)).putInt(0)__    }_    if (signatureIndex != 0) {_      output_          .putShort(symbolTable.addConstantUtf8(Constants.SIGNATURE))_          .putInt(2)_          .putShort(signatureIndex)__    }_    if ((accessFlags & Opcodes.ACC_DEPRECATED) != 0) {_      output.putShort(symbolTable.addConstantUtf8(Constants.DEPRECATED)).putInt(0)__    }_    if (lastRuntimeVisibleAnnotation != null) {_      lastRuntimeVisibleAnnotation.putAnnotations(_          symbolTable.addConstantUtf8(Constants.RUNTIME_VISIBLE_ANNOTATIONS), output)__    }_    if (lastRuntimeInvisibleAnnotation != null) {_      lastRuntimeInvisibleAnnotation.putAnnotations(_          symbolTable.addConstantUtf8(Constants.RUNTIME_INVISIBLE_ANNOTATIONS), output)__    }_    if (lastRuntimeVisibleTypeAnnotation != null) {_      lastRuntimeVisibleTypeAnnotation.putAnnotations(_          symbolTable.addConstantUtf8(Constants.RUNTIME_VISIBLE_TYPE_ANNOTATIONS), output)__    }_    if (lastRuntimeInvisibleTypeAnnotation != null) {_      lastRuntimeInvisibleTypeAnnotation.putAnnotations(_          symbolTable.addConstantUtf8(Constants.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS), output)__    }_    if (firstAttribute != null) {_      firstAttribute.putAttributes(symbolTable, output)__    }_  };puts,the,content,of,the,jvms,structure,generated,by,this,field,writer,into,the,given,byte,vector,param,output,where,the,structure,must,be,put;void,put,field,info,final,byte,vector,output,boolean,use,synthetic,attribute,symbol,table,get,major,version,opcodes,int,mask,use,synthetic,attribute,opcodes,0,output,put,short,access,flags,mask,put,short,name,index,put,short,descriptor,index,int,attributes,count,0,if,constant,value,index,0,attributes,count,if,access,flags,opcodes,0,use,synthetic,attribute,attributes,count,if,signature,index,0,attributes,count,if,access,flags,opcodes,0,attributes,count,if,last,runtime,visible,annotation,null,attributes,count,if,last,runtime,invisible,annotation,null,attributes,count,if,last,runtime,visible,type,annotation,null,attributes,count,if,last,runtime,invisible,type,annotation,null,attributes,count,if,first,attribute,null,attributes,count,first,attribute,get,attribute,count,output,put,short,attributes,count,if,constant,value,index,0,output,put,short,symbol,table,add,constant,utf8,constants,put,int,2,put,short,constant,value,index,if,access,flags,opcodes,0,use,synthetic,attribute,output,put,short,symbol,table,add,constant,utf8,constants,synthetic,put,int,0,if,signature,index,0,output,put,short,symbol,table,add,constant,utf8,constants,signature,put,int,2,put,short,signature,index,if,access,flags,opcodes,0,output,put,short,symbol,table,add,constant,utf8,constants,deprecated,put,int,0,if,last,runtime,visible,annotation,null,last,runtime,visible,annotation,put,annotations,symbol,table,add,constant,utf8,constants,output,if,last,runtime,invisible,annotation,null,last,runtime,invisible,annotation,put,annotations,symbol,table,add,constant,utf8,constants,output,if,last,runtime,visible,type,annotation,null,last,runtime,visible,type,annotation,put,annotations,symbol,table,add,constant,utf8,constants,output,if,last,runtime,invisible,type,annotation,null,last,runtime,invisible,type,annotation,put,annotations,symbol,table,add,constant,utf8,constants,output,if,first,attribute,null,first,attribute,put,attributes,symbol,table,output
