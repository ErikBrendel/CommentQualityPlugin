# id;timestamp;commentText;codeText;commentWords;codeWords
Symbol -> Symbol(       final int index,       final int tag,       final String owner,       final String name,       final String value,       final long data);1531241461;Constructs a new Symbol. This constructor can't be used directly because the Symbol class is_abstract. Instead, use the factory methods of the {@link SymbolTable} class.__@param index the symbol index in the constant pool, in the BootstrapMethods attribute, or in_the (ASM specific) type table of a class (depending on 'tag')._@param tag the symbol type. Must be one of the static tag values defined in this class._@param owner The internal name of the symbol's owner class. Maybe <tt>null</tt>._@param name The name of the symbol's corresponding class field or method. Maybe <tt>null</tt>._@param value The string value of this symbol. Maybe <tt>null</tt>._@param data The numeric value of this symbol.;Symbol(_      final int index,_      final int tag,_      final String owner,_      final String name,_      final String value,_      final long data) {_    this.index = index__    this.tag = tag__    this.owner = owner__    this.name = name__    this.value = value__    this.data = data__  };constructs,a,new,symbol,this,constructor,can,t,be,used,directly,because,the,symbol,class,is,abstract,instead,use,the,factory,methods,of,the,link,symbol,table,class,param,index,the,symbol,index,in,the,constant,pool,in,the,bootstrap,methods,attribute,or,in,the,asm,specific,type,table,of,a,class,depending,on,tag,param,tag,the,symbol,type,must,be,one,of,the,static,tag,values,defined,in,this,class,param,owner,the,internal,name,of,the,symbol,s,owner,class,maybe,tt,null,tt,param,name,the,name,of,the,symbol,s,corresponding,class,field,or,method,maybe,tt,null,tt,param,value,the,string,value,of,this,symbol,maybe,tt,null,tt,param,data,the,numeric,value,of,this,symbol;symbol,final,int,index,final,int,tag,final,string,owner,final,string,name,final,string,value,final,long,data,this,index,index,this,tag,tag,this,owner,owner,this,name,name,this,value,value,this,data,data
Symbol -> Symbol(       final int index,       final int tag,       final String owner,       final String name,       final String value,       final long data);1536664245;Constructs a new Symbol. This constructor can't be used directly because the Symbol class is_abstract. Instead, use the factory methods of the {@link SymbolTable} class.__@param index the symbol index in the constant pool, in the BootstrapMethods attribute, or in_the (ASM specific) type table of a class (depending on 'tag')._@param tag the symbol type. Must be one of the static tag values defined in this class._@param owner The internal name of the symbol's owner class. Maybe {@literal null}._@param name The name of the symbol's corresponding class field or method. Maybe {@literal_null}._@param value The string value of this symbol. Maybe {@literal null}._@param data The numeric value of this symbol.;Symbol(_      final int index,_      final int tag,_      final String owner,_      final String name,_      final String value,_      final long data) {_    this.index = index__    this.tag = tag__    this.owner = owner__    this.name = name__    this.value = value__    this.data = data__  };constructs,a,new,symbol,this,constructor,can,t,be,used,directly,because,the,symbol,class,is,abstract,instead,use,the,factory,methods,of,the,link,symbol,table,class,param,index,the,symbol,index,in,the,constant,pool,in,the,bootstrap,methods,attribute,or,in,the,asm,specific,type,table,of,a,class,depending,on,tag,param,tag,the,symbol,type,must,be,one,of,the,static,tag,values,defined,in,this,class,param,owner,the,internal,name,of,the,symbol,s,owner,class,maybe,literal,null,param,name,the,name,of,the,symbol,s,corresponding,class,field,or,method,maybe,literal,null,param,value,the,string,value,of,this,symbol,maybe,literal,null,param,data,the,numeric,value,of,this,symbol;symbol,final,int,index,final,int,tag,final,string,owner,final,string,name,final,string,value,final,long,data,this,index,index,this,tag,tag,this,owner,owner,this,name,name,this,value,value,this,data,data
Symbol -> Symbol(       final int index,       final int tag,       final String owner,       final String name,       final String value,       final long data);1537204147;Constructs a new Symbol. This constructor can't be used directly because the Symbol class is_abstract. Instead, use the factory methods of the {@link SymbolTable} class.__@param index the symbol index in the constant pool, in the BootstrapMethods attribute, or in_the (ASM specific) type table of a class (depending on 'tag')._@param tag the symbol type. Must be one of the static tag values defined in this class._@param owner The internal name of the symbol's owner class. Maybe {@literal null}._@param name The name of the symbol's corresponding class field or method. Maybe {@literal_null}._@param value The string value of this symbol. Maybe {@literal null}._@param data The numeric value of this symbol.;Symbol(_      final int index,_      final int tag,_      final String owner,_      final String name,_      final String value,_      final long data) {_    this.index = index__    this.tag = tag__    this.owner = owner__    this.name = name__    this.value = value__    this.data = data__  };constructs,a,new,symbol,this,constructor,can,t,be,used,directly,because,the,symbol,class,is,abstract,instead,use,the,factory,methods,of,the,link,symbol,table,class,param,index,the,symbol,index,in,the,constant,pool,in,the,bootstrap,methods,attribute,or,in,the,asm,specific,type,table,of,a,class,depending,on,tag,param,tag,the,symbol,type,must,be,one,of,the,static,tag,values,defined,in,this,class,param,owner,the,internal,name,of,the,symbol,s,owner,class,maybe,literal,null,param,name,the,name,of,the,symbol,s,corresponding,class,field,or,method,maybe,literal,null,param,value,the,string,value,of,this,symbol,maybe,literal,null,param,data,the,numeric,value,of,this,symbol;symbol,final,int,index,final,int,tag,final,string,owner,final,string,name,final,string,value,final,long,data,this,index,index,this,tag,tag,this,owner,owner,this,name,name,this,value,value,this,data,data
Symbol -> int getArgumentsAndReturnSizes();1531241461;@return the result {@link Type#getArgumentsAndReturnSizes} on {@link #value} (memoized in_{@link #info} for efficiency). This should only be used for {@link_#CONSTANT_METHODREF_TAG}, {@link #CONSTANT_INTERFACE_METHODREF_TAG} and {@link_#CONSTANT_INVOKE_DYNAMIC_TAG} symbols.;int getArgumentsAndReturnSizes() {_    if (info == 0) {_      info = Type.getArgumentsAndReturnSizes(value)__    }_    return info__  };return,the,result,link,type,get,arguments,and,return,sizes,on,link,value,memoized,in,link,info,for,efficiency,this,should,only,be,used,for,link,link,and,link,symbols;int,get,arguments,and,return,sizes,if,info,0,info,type,get,arguments,and,return,sizes,value,return,info
Symbol -> int getArgumentsAndReturnSizes();1536664245;@return the result {@link Type#getArgumentsAndReturnSizes} on {@link #value} (memoized in_{@link #info} for efficiency). This should only be used for {@link_#CONSTANT_METHODREF_TAG}, {@link #CONSTANT_INTERFACE_METHODREF_TAG} and {@link_#CONSTANT_INVOKE_DYNAMIC_TAG} symbols.;int getArgumentsAndReturnSizes() {_    if (info == 0) {_      info = Type.getArgumentsAndReturnSizes(value)__    }_    return info__  };return,the,result,link,type,get,arguments,and,return,sizes,on,link,value,memoized,in,link,info,for,efficiency,this,should,only,be,used,for,link,link,and,link,symbols;int,get,arguments,and,return,sizes,if,info,0,info,type,get,arguments,and,return,sizes,value,return,info
Symbol -> int getArgumentsAndReturnSizes();1537204147;Returns the result {@link Type#getArgumentsAndReturnSizes} on {@link #value}.__@return the result {@link Type#getArgumentsAndReturnSizes} on {@link #value} (memoized in_{@link #info} for efficiency). This should only be used for {@link_#CONSTANT_METHODREF_TAG}, {@link #CONSTANT_INTERFACE_METHODREF_TAG} and {@link_#CONSTANT_INVOKE_DYNAMIC_TAG} symbols.;int getArgumentsAndReturnSizes() {_    if (info == 0) {_      info = Type.getArgumentsAndReturnSizes(value)__    }_    return info__  };returns,the,result,link,type,get,arguments,and,return,sizes,on,link,value,return,the,result,link,type,get,arguments,and,return,sizes,on,link,value,memoized,in,link,info,for,efficiency,this,should,only,be,used,for,link,link,and,link,symbols;int,get,arguments,and,return,sizes,if,info,0,info,type,get,arguments,and,return,sizes,value,return,info
