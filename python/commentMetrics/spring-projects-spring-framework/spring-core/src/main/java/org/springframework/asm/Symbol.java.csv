commented;modifiers;parameterAmount;loc;comment;code
true;;0;6;/**  * Returns the result {@link Type#getArgumentsAndReturnSizes} on {@link #value}.  *  * @return the result {@link Type#getArgumentsAndReturnSizes} on {@link #value} (memoized in  *     {@link #info} for efficiency). This should only be used for {@link  *     #CONSTANT_METHODREF_TAG}, {@link #CONSTANT_INTERFACE_METHODREF_TAG} and {@link  *     #CONSTANT_INVOKE_DYNAMIC_TAG} symbols.  */ ;/**  * Returns the result {@link Type#getArgumentsAndReturnSizes} on {@link #value}.  *  * @return the result {@link Type#getArgumentsAndReturnSizes} on {@link #value} (memoized in  *     {@link #info} for efficiency). This should only be used for {@link  *     #CONSTANT_METHODREF_TAG}, {@link #CONSTANT_INTERFACE_METHODREF_TAG} and {@link  *     #CONSTANT_INVOKE_DYNAMIC_TAG} symbols.  */ int getArgumentsAndReturnSizes() {     if (info == 0) {         info = Type.getArgumentsAndReturnSizes(value).     }     return info. }
