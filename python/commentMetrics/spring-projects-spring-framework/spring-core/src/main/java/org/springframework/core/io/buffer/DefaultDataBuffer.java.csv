# id;timestamp;commentText;codeText;commentWords;codeWords
DefaultDataBuffer -> DefaultDataBuffer(ByteBuffer byteBuffer, DefaultDataBufferFactory dataBufferFactory);1468513830;Creates a new {@code DefaultDataBuffer} based on the given {@code ByteBuffer}. Both_reading and writing position of this buffer are based on the current {@linkplain_ByteBuffer#position() position} of the given buffer._@param byteBuffer the buffer to base this buffer on;DefaultDataBuffer(ByteBuffer byteBuffer, DefaultDataBufferFactory dataBufferFactory) {_		this(byteBuffer, byteBuffer.position(), byteBuffer.position(), dataBufferFactory)__	};creates,a,new,code,default,data,buffer,based,on,the,given,code,byte,buffer,both,reading,and,writing,position,of,this,buffer,are,based,on,the,current,linkplain,byte,buffer,position,position,of,the,given,buffer,param,byte,buffer,the,buffer,to,base,this,buffer,on;default,data,buffer,byte,buffer,byte,buffer,default,data,buffer,factory,data,buffer,factory,this,byte,buffer,byte,buffer,position,byte,buffer,position,data,buffer,factory
DefaultDataBuffer -> DefaultDataBuffer(ByteBuffer byteBuffer, DefaultDataBufferFactory dataBufferFactory);1468532417;Creates a new {@code DefaultDataBuffer} based on the given {@code ByteBuffer}. Both_reading and writing position of this buffer are based on the current {@linkplain_ByteBuffer#position() position} of the given buffer._@param byteBuffer the buffer to base this buffer on;DefaultDataBuffer(ByteBuffer byteBuffer, DefaultDataBufferFactory dataBufferFactory) {_		this(byteBuffer, byteBuffer.position(), byteBuffer.position(), dataBufferFactory)__	};creates,a,new,code,default,data,buffer,based,on,the,given,code,byte,buffer,both,reading,and,writing,position,of,this,buffer,are,based,on,the,current,linkplain,byte,buffer,position,position,of,the,given,buffer,param,byte,buffer,the,buffer,to,base,this,buffer,on;default,data,buffer,byte,buffer,byte,buffer,default,data,buffer,factory,data,buffer,factory,this,byte,buffer,byte,buffer,position,byte,buffer,position,data,buffer,factory
DefaultDataBuffer -> DefaultDataBuffer(ByteBuffer byteBuffer, DefaultDataBufferFactory dataBufferFactory);1468868355;Create a new {@code DefaultDataBuffer} based on the given_{@code ByteBuffer}. Both reading and writing position of this buffer are_based on the current {@linkplain_ByteBuffer#position() position} of the given buffer._@param byteBuffer the buffer to base this buffer on;DefaultDataBuffer(ByteBuffer byteBuffer, DefaultDataBufferFactory dataBufferFactory) {_		this(byteBuffer, byteBuffer.position(), byteBuffer.position(), dataBufferFactory)__	};create,a,new,code,default,data,buffer,based,on,the,given,code,byte,buffer,both,reading,and,writing,position,of,this,buffer,are,based,on,the,current,linkplain,byte,buffer,position,position,of,the,given,buffer,param,byte,buffer,the,buffer,to,base,this,buffer,on;default,data,buffer,byte,buffer,byte,buffer,default,data,buffer,factory,data,buffer,factory,this,byte,buffer,byte,buffer,position,byte,buffer,position,data,buffer,factory
DefaultDataBuffer -> DefaultDataBuffer(ByteBuffer byteBuffer, DefaultDataBufferFactory dataBufferFactory);1469540372;Create a new {@code DefaultDataBuffer} based on the given_{@code ByteBuffer}. Both reading and writing position of this buffer are_based on the current {@linkplain_ByteBuffer#position() position} of the given buffer._@param byteBuffer the buffer to base this buffer on;DefaultDataBuffer(ByteBuffer byteBuffer, DefaultDataBufferFactory dataBufferFactory) {_		this(byteBuffer, byteBuffer.position(), byteBuffer.position(), dataBufferFactory)__	};create,a,new,code,default,data,buffer,based,on,the,given,code,byte,buffer,both,reading,and,writing,position,of,this,buffer,are,based,on,the,current,linkplain,byte,buffer,position,position,of,the,given,buffer,param,byte,buffer,the,buffer,to,base,this,buffer,on;default,data,buffer,byte,buffer,byte,buffer,default,data,buffer,factory,data,buffer,factory,this,byte,buffer,byte,buffer,position,byte,buffer,position,data,buffer,factory
DefaultDataBuffer -> DefaultDataBuffer(ByteBuffer byteBuffer, DefaultDataBufferFactory dataBufferFactory);1475619006;Create a new {@code DefaultDataBuffer} based on the given_{@code ByteBuffer}. Both reading and writing position of this buffer are_based on the current {@linkplain_ByteBuffer#position() position} of the given buffer._@param byteBuffer the buffer to base this buffer on;DefaultDataBuffer(ByteBuffer byteBuffer, DefaultDataBufferFactory dataBufferFactory) {_		this(byteBuffer, byteBuffer.position(), byteBuffer.position(), dataBufferFactory)__	};create,a,new,code,default,data,buffer,based,on,the,given,code,byte,buffer,both,reading,and,writing,position,of,this,buffer,are,based,on,the,current,linkplain,byte,buffer,position,position,of,the,given,buffer,param,byte,buffer,the,buffer,to,base,this,buffer,on;default,data,buffer,byte,buffer,byte,buffer,default,data,buffer,factory,data,buffer,factory,this,byte,buffer,byte,buffer,position,byte,buffer,position,data,buffer,factory
DefaultDataBuffer -> DefaultDataBuffer(ByteBuffer byteBuffer, DefaultDataBufferFactory dataBufferFactory);1476791288;Create a new {@code DefaultDataBuffer} based on the given_{@code ByteBuffer}. Both reading and writing position of this buffer are_based on the current {@linkplain_ByteBuffer#position() position} of the given buffer._@param byteBuffer the buffer to base this buffer on;DefaultDataBuffer(ByteBuffer byteBuffer, DefaultDataBufferFactory dataBufferFactory) {_		this(byteBuffer, byteBuffer.position(), byteBuffer.position(), dataBufferFactory)__	};create,a,new,code,default,data,buffer,based,on,the,given,code,byte,buffer,both,reading,and,writing,position,of,this,buffer,are,based,on,the,current,linkplain,byte,buffer,position,position,of,the,given,buffer,param,byte,buffer,the,buffer,to,base,this,buffer,on;default,data,buffer,byte,buffer,byte,buffer,default,data,buffer,factory,data,buffer,factory,this,byte,buffer,byte,buffer,position,byte,buffer,position,data,buffer,factory
DefaultDataBuffer -> DefaultDataBuffer(ByteBuffer byteBuffer, DefaultDataBufferFactory dataBufferFactory);1497258259;Create a new {@code DefaultDataBuffer} based on the given_{@code ByteBuffer}. Both reading and writing position of this buffer are_based on the current {@linkplain_ByteBuffer#position() position} of the given buffer._@param byteBuffer the buffer to base this buffer on;DefaultDataBuffer(ByteBuffer byteBuffer, DefaultDataBufferFactory dataBufferFactory) {_		this(byteBuffer, byteBuffer.position(), byteBuffer.position(), dataBufferFactory)__	};create,a,new,code,default,data,buffer,based,on,the,given,code,byte,buffer,both,reading,and,writing,position,of,this,buffer,are,based,on,the,current,linkplain,byte,buffer,position,position,of,the,given,buffer,param,byte,buffer,the,buffer,to,base,this,buffer,on;default,data,buffer,byte,buffer,byte,buffer,default,data,buffer,factory,data,buffer,factory,this,byte,buffer,byte,buffer,position,byte,buffer,position,data,buffer,factory
DefaultDataBuffer -> DefaultDataBuffer(ByteBuffer byteBuffer, DefaultDataBufferFactory dataBufferFactory);1498512148;Create a new {@code DefaultDataBuffer} based on the given_{@code ByteBuffer}. Both reading and writing position of this buffer are_based on the current {@linkplain_ByteBuffer#position() position} of the given buffer._@param byteBuffer the buffer to base this buffer on;DefaultDataBuffer(ByteBuffer byteBuffer, DefaultDataBufferFactory dataBufferFactory) {_		this(byteBuffer, byteBuffer.position(), byteBuffer.position(), dataBufferFactory)__	};create,a,new,code,default,data,buffer,based,on,the,given,code,byte,buffer,both,reading,and,writing,position,of,this,buffer,are,based,on,the,current,linkplain,byte,buffer,position,position,of,the,given,buffer,param,byte,buffer,the,buffer,to,base,this,buffer,on;default,data,buffer,byte,buffer,byte,buffer,default,data,buffer,factory,data,buffer,factory,this,byte,buffer,byte,buffer,position,byte,buffer,position,data,buffer,factory
DefaultDataBuffer -> private <T> T writeInternal(Function<ByteBuffer, T> function);1468513830;Internal write method that keeps track of the {@link #writePosition} before and_after applying the given function on {@link #byteBuffer}.;private <T> T writeInternal(Function<ByteBuffer, T> function) {_		this.byteBuffer.position(this.writePosition)__		try {_			return function.apply(this.byteBuffer)__		}_		finally {_			this.writePosition = this.byteBuffer.position()__		}_	};internal,write,method,that,keeps,track,of,the,link,write,position,before,and,after,applying,the,given,function,on,link,byte,buffer;private,t,t,write,internal,function,byte,buffer,t,function,this,byte,buffer,position,this,write,position,try,return,function,apply,this,byte,buffer,finally,this,write,position,this,byte,buffer,position
DefaultDataBuffer -> private <T> T writeInternal(Function<ByteBuffer, T> function);1468532417;Internal write method that keeps track of the {@link #writePosition} before and_after applying the given function on {@link #byteBuffer}.;private <T> T writeInternal(Function<ByteBuffer, T> function) {_		this.byteBuffer.position(this.writePosition)__		try {_			return function.apply(this.byteBuffer)__		}_		finally {_			this.writePosition = this.byteBuffer.position()__		}_	};internal,write,method,that,keeps,track,of,the,link,write,position,before,and,after,applying,the,given,function,on,link,byte,buffer;private,t,t,write,internal,function,byte,buffer,t,function,this,byte,buffer,position,this,write,position,try,return,function,apply,this,byte,buffer,finally,this,write,position,this,byte,buffer,position
DefaultDataBuffer -> private <T> T writeInternal(Function<ByteBuffer, T> function);1468868355;Internal write method that keeps track of the {@link #writePosition} before and_after applying the given function on {@link #byteBuffer}.;private <T> T writeInternal(Function<ByteBuffer, T> function) {_		this.byteBuffer.position(this.writePosition)__		try {_			return function.apply(this.byteBuffer)__		}_		finally {_			this.writePosition = this.byteBuffer.position()__		}_	};internal,write,method,that,keeps,track,of,the,link,write,position,before,and,after,applying,the,given,function,on,link,byte,buffer;private,t,t,write,internal,function,byte,buffer,t,function,this,byte,buffer,position,this,write,position,try,return,function,apply,this,byte,buffer,finally,this,write,position,this,byte,buffer,position
DefaultDataBuffer -> private <T> T writeInternal(Function<ByteBuffer, T> function);1469540372;Internal write method that keeps track of the {@link #writePosition} before and_after applying the given function on {@link #byteBuffer}.;private <T> T writeInternal(Function<ByteBuffer, T> function) {_		this.byteBuffer.position(this.writePosition)__		try {_			return function.apply(this.byteBuffer)__		}_		finally {_			this.writePosition = this.byteBuffer.position()__		}_	};internal,write,method,that,keeps,track,of,the,link,write,position,before,and,after,applying,the,given,function,on,link,byte,buffer;private,t,t,write,internal,function,byte,buffer,t,function,this,byte,buffer,position,this,write,position,try,return,function,apply,this,byte,buffer,finally,this,write,position,this,byte,buffer,position
DefaultDataBuffer -> private <T> T writeInternal(Function<ByteBuffer, T> function);1475619006;Internal write method that keeps track of the {@link #writePosition} before and_after applying the given function on {@link #byteBuffer}.;private <T> T writeInternal(Function<ByteBuffer, T> function) {_		_		((Buffer) this.byteBuffer).position(this.writePosition)__		try {_			return function.apply(this.byteBuffer)__		}_		finally {_			this.writePosition = this.byteBuffer.position()__		}_	};internal,write,method,that,keeps,track,of,the,link,write,position,before,and,after,applying,the,given,function,on,link,byte,buffer;private,t,t,write,internal,function,byte,buffer,t,function,buffer,this,byte,buffer,position,this,write,position,try,return,function,apply,this,byte,buffer,finally,this,write,position,this,byte,buffer,position
DefaultDataBuffer -> private <T> T writeInternal(Function<ByteBuffer, T> function);1476791288;Internal write method that keeps track of the {@link #writePosition} before and_after applying the given function on {@link #byteBuffer}.;private <T> T writeInternal(Function<ByteBuffer, T> function) {_		_		((Buffer) this.byteBuffer).position(this.writePosition)__		try {_			return function.apply(this.byteBuffer)__		}_		finally {_			this.writePosition = this.byteBuffer.position()__		}_	};internal,write,method,that,keeps,track,of,the,link,write,position,before,and,after,applying,the,given,function,on,link,byte,buffer;private,t,t,write,internal,function,byte,buffer,t,function,buffer,this,byte,buffer,position,this,write,position,try,return,function,apply,this,byte,buffer,finally,this,write,position,this,byte,buffer,position
DefaultDataBuffer -> private <T> T writeInternal(Function<ByteBuffer, T> function);1497258259;Internal write method that keeps track of the {@link #writePosition} before and_after applying the given function on {@link #byteBuffer}.;private <T> T writeInternal(Function<ByteBuffer, T> function) {_		_		((Buffer) this.byteBuffer).position(this.writePosition)__		try {_			return function.apply(this.byteBuffer)__		}_		finally {_			this.writePosition = this.byteBuffer.position()__		}_	};internal,write,method,that,keeps,track,of,the,link,write,position,before,and,after,applying,the,given,function,on,link,byte,buffer;private,t,t,write,internal,function,byte,buffer,t,function,buffer,this,byte,buffer,position,this,write,position,try,return,function,apply,this,byte,buffer,finally,this,write,position,this,byte,buffer,position
DefaultDataBuffer -> private <T> T writeInternal(Function<ByteBuffer, T> function);1498512148;Internal write method that keeps track of the {@link #writePosition} before and_after applying the given function on {@link #byteBuffer}.;private <T> T writeInternal(Function<ByteBuffer, T> function) {_		_		((Buffer) this.byteBuffer).position(this.writePosition)__		try {_			return function.apply(this.byteBuffer)__		}_		finally {_			this.writePosition = this.byteBuffer.position()__		}_	};internal,write,method,that,keeps,track,of,the,link,write,position,before,and,after,applying,the,given,function,on,link,byte,buffer;private,t,t,write,internal,function,byte,buffer,t,function,buffer,this,byte,buffer,position,this,write,position,try,return,function,apply,this,byte,buffer,finally,this,write,position,this,byte,buffer,position
DefaultDataBuffer -> public ByteBuffer getNativeBuffer();1468513830;Directly exposes the native {@code ByteBuffer} that this buffer is based on._@return the wrapped byte buffer;public ByteBuffer getNativeBuffer() {_		return this.byteBuffer__	};directly,exposes,the,native,code,byte,buffer,that,this,buffer,is,based,on,return,the,wrapped,byte,buffer;public,byte,buffer,get,native,buffer,return,this,byte,buffer
DefaultDataBuffer -> public ByteBuffer getNativeBuffer();1468532417;Directly exposes the native {@code ByteBuffer} that this buffer is based on._@return the wrapped byte buffer;public ByteBuffer getNativeBuffer() {_		return this.byteBuffer__	};directly,exposes,the,native,code,byte,buffer,that,this,buffer,is,based,on,return,the,wrapped,byte,buffer;public,byte,buffer,get,native,buffer,return,this,byte,buffer
DefaultDataBuffer -> public ByteBuffer getNativeBuffer();1468868355;Directly exposes the native {@code ByteBuffer} that this buffer is based on._@return the wrapped byte buffer;public ByteBuffer getNativeBuffer() {_		return this.byteBuffer__	};directly,exposes,the,native,code,byte,buffer,that,this,buffer,is,based,on,return,the,wrapped,byte,buffer;public,byte,buffer,get,native,buffer,return,this,byte,buffer
DefaultDataBuffer -> public ByteBuffer getNativeBuffer();1469540372;Directly exposes the native {@code ByteBuffer} that this buffer is based on._@return the wrapped byte buffer;public ByteBuffer getNativeBuffer() {_		return this.byteBuffer__	};directly,exposes,the,native,code,byte,buffer,that,this,buffer,is,based,on,return,the,wrapped,byte,buffer;public,byte,buffer,get,native,buffer,return,this,byte,buffer
DefaultDataBuffer -> public ByteBuffer getNativeBuffer();1475619006;Directly exposes the native {@code ByteBuffer} that this buffer is based on._@return the wrapped byte buffer;public ByteBuffer getNativeBuffer() {_		return this.byteBuffer__	};directly,exposes,the,native,code,byte,buffer,that,this,buffer,is,based,on,return,the,wrapped,byte,buffer;public,byte,buffer,get,native,buffer,return,this,byte,buffer
DefaultDataBuffer -> public ByteBuffer getNativeBuffer();1476791288;Directly exposes the native {@code ByteBuffer} that this buffer is based on._@return the wrapped byte buffer;public ByteBuffer getNativeBuffer() {_		return this.byteBuffer__	};directly,exposes,the,native,code,byte,buffer,that,this,buffer,is,based,on,return,the,wrapped,byte,buffer;public,byte,buffer,get,native,buffer,return,this,byte,buffer
DefaultDataBuffer -> public ByteBuffer getNativeBuffer();1497258259;Directly exposes the native {@code ByteBuffer} that this buffer is based on._@return the wrapped byte buffer;public ByteBuffer getNativeBuffer() {_		return this.byteBuffer__	};directly,exposes,the,native,code,byte,buffer,that,this,buffer,is,based,on,return,the,wrapped,byte,buffer;public,byte,buffer,get,native,buffer,return,this,byte,buffer
DefaultDataBuffer -> public ByteBuffer getNativeBuffer();1498512148;Directly exposes the native {@code ByteBuffer} that this buffer is based on._@return the wrapped byte buffer;public ByteBuffer getNativeBuffer() {_		return this.byteBuffer__	};directly,exposes,the,native,code,byte,buffer,that,this,buffer,is,based,on,return,the,wrapped,byte,buffer;public,byte,buffer,get,native,buffer,return,this,byte,buffer
DefaultDataBuffer -> public ByteBuffer getNativeBuffer();1508402332;Directly exposes the native {@code ByteBuffer} that this buffer is based on._@return the wrapped byte buffer;public ByteBuffer getNativeBuffer() {_		return this.byteBuffer__	};directly,exposes,the,native,code,byte,buffer,that,this,buffer,is,based,on,return,the,wrapped,byte,buffer;public,byte,buffer,get,native,buffer,return,this,byte,buffer
DefaultDataBuffer -> public ByteBuffer getNativeBuffer();1517583561;Directly exposes the native {@code ByteBuffer} that this buffer is based on._@return the wrapped byte buffer;public ByteBuffer getNativeBuffer() {_		return this.byteBuffer__	};directly,exposes,the,native,code,byte,buffer,that,this,buffer,is,based,on,return,the,wrapped,byte,buffer;public,byte,buffer,get,native,buffer,return,this,byte,buffer
DefaultDataBuffer -> public ByteBuffer getNativeBuffer();1518081113;Directly exposes the native {@code ByteBuffer} that this buffer is based on._@return the wrapped byte buffer;public ByteBuffer getNativeBuffer() {_		return this.byteBuffer__	};directly,exposes,the,native,code,byte,buffer,that,this,buffer,is,based,on,return,the,wrapped,byte,buffer;public,byte,buffer,get,native,buffer,return,this,byte,buffer
DefaultDataBuffer -> public ByteBuffer getNativeBuffer();1530174524;Directly exposes the native {@code ByteBuffer} that this buffer is based on._@return the wrapped byte buffer;public ByteBuffer getNativeBuffer() {_		return this.byteBuffer__	};directly,exposes,the,native,code,byte,buffer,that,this,buffer,is,based,on,return,the,wrapped,byte,buffer;public,byte,buffer,get,native,buffer,return,this,byte,buffer
DefaultDataBuffer -> public ByteBuffer getNativeBuffer();1530190293;Directly exposes the native {@code ByteBuffer} that this buffer is based on._@return the wrapped byte buffer;public ByteBuffer getNativeBuffer() {_		return this.byteBuffer__	};directly,exposes,the,native,code,byte,buffer,that,this,buffer,is,based,on,return,the,wrapped,byte,buffer;public,byte,buffer,get,native,buffer,return,this,byte,buffer
DefaultDataBuffer -> public ByteBuffer getNativeBuffer();1536847933;Directly exposes the native {@code ByteBuffer} that this buffer is based on._@return the wrapped byte buffer;public ByteBuffer getNativeBuffer() {_		return this.byteBuffer__	};directly,exposes,the,native,code,byte,buffer,that,this,buffer,is,based,on,return,the,wrapped,byte,buffer;public,byte,buffer,get,native,buffer,return,this,byte,buffer
DefaultDataBuffer -> public ByteBuffer getNativeBuffer();1544108037;Directly exposes the native {@code ByteBuffer} that this buffer is based on._@return the wrapped byte buffer;public ByteBuffer getNativeBuffer() {_		return this.byteBuffer__	};directly,exposes,the,native,code,byte,buffer,that,this,buffer,is,based,on,return,the,wrapped,byte,buffer;public,byte,buffer,get,native,buffer,return,this,byte,buffer
DefaultDataBuffer -> public ByteBuffer getNativeBuffer();1545338013;Directly exposes the native {@code ByteBuffer} that this buffer is based on._@return the wrapped byte buffer;public ByteBuffer getNativeBuffer() {_		return this.byteBuffer__	};directly,exposes,the,native,code,byte,buffer,that,this,buffer,is,based,on,return,the,wrapped,byte,buffer;public,byte,buffer,get,native,buffer,return,this,byte,buffer
DefaultDataBuffer -> public ByteBuffer getNativeBuffer();1547033218;Directly exposes the native {@code ByteBuffer} that this buffer is based on._@return the wrapped byte buffer;public ByteBuffer getNativeBuffer() {_		return this.byteBuffer__	};directly,exposes,the,native,code,byte,buffer,that,this,buffer,is,based,on,return,the,wrapped,byte,buffer;public,byte,buffer,get,native,buffer,return,this,byte,buffer
DefaultDataBuffer -> private int calculateCapacity(int neededCapacity);1497258259;@see io.netty.buffer.AbstractByteBufAllocator#calculateNewCapacity(int, int);private int calculateCapacity(int neededCapacity) {_		Assert.isTrue(neededCapacity >= 0, "'neededCapacity' must >= 0")___		if (neededCapacity == CAPACITY_THRESHOLD) {_			return CAPACITY_THRESHOLD__		}_		else if (neededCapacity > CAPACITY_THRESHOLD) {_			int newCapacity = neededCapacity / CAPACITY_THRESHOLD * CAPACITY_THRESHOLD__			if (newCapacity > MAX_CAPACITY - CAPACITY_THRESHOLD) {_				newCapacity = MAX_CAPACITY__			}_			else {_				newCapacity += CAPACITY_THRESHOLD__			}_			return newCapacity__		}_		else {_			int newCapacity = 64__			while (newCapacity < neededCapacity) {_				newCapacity <<= 1__			}_			return Math.min(newCapacity, MAX_CAPACITY)__		}_	};see,io,netty,buffer,abstract,byte,buf,allocator,calculate,new,capacity,int,int;private,int,calculate,capacity,int,needed,capacity,assert,is,true,needed,capacity,0,needed,capacity,must,0,if,needed,capacity,return,else,if,needed,capacity,int,new,capacity,needed,capacity,if,new,capacity,new,capacity,else,new,capacity,return,new,capacity,else,int,new,capacity,64,while,new,capacity,needed,capacity,new,capacity,1,return,math,min,new,capacity
DefaultDataBuffer -> private int calculateCapacity(int neededCapacity);1498512148;@see io.netty.buffer.AbstractByteBufAllocator#calculateNewCapacity(int, int);private int calculateCapacity(int neededCapacity) {_		Assert.isTrue(neededCapacity >= 0, "'neededCapacity' must >= 0")___		if (neededCapacity == CAPACITY_THRESHOLD) {_			return CAPACITY_THRESHOLD__		}_		else if (neededCapacity > CAPACITY_THRESHOLD) {_			int newCapacity = neededCapacity / CAPACITY_THRESHOLD * CAPACITY_THRESHOLD__			if (newCapacity > MAX_CAPACITY - CAPACITY_THRESHOLD) {_				newCapacity = MAX_CAPACITY__			}_			else {_				newCapacity += CAPACITY_THRESHOLD__			}_			return newCapacity__		}_		else {_			int newCapacity = 64__			while (newCapacity < neededCapacity) {_				newCapacity <<= 1__			}_			return Math.min(newCapacity, MAX_CAPACITY)__		}_	};see,io,netty,buffer,abstract,byte,buf,allocator,calculate,new,capacity,int,int;private,int,calculate,capacity,int,needed,capacity,assert,is,true,needed,capacity,0,needed,capacity,must,0,if,needed,capacity,return,else,if,needed,capacity,int,new,capacity,needed,capacity,if,new,capacity,new,capacity,else,new,capacity,return,new,capacity,else,int,new,capacity,64,while,new,capacity,needed,capacity,new,capacity,1,return,math,min,new,capacity
DefaultDataBuffer -> private int calculateCapacity(int neededCapacity);1508402332;@see io.netty.buffer.AbstractByteBufAllocator#calculateNewCapacity(int, int);private int calculateCapacity(int neededCapacity) {_		Assert.isTrue(neededCapacity >= 0, "'neededCapacity' must >= 0")___		if (neededCapacity == CAPACITY_THRESHOLD) {_			return CAPACITY_THRESHOLD__		}_		else if (neededCapacity > CAPACITY_THRESHOLD) {_			int newCapacity = neededCapacity / CAPACITY_THRESHOLD * CAPACITY_THRESHOLD__			if (newCapacity > MAX_CAPACITY - CAPACITY_THRESHOLD) {_				newCapacity = MAX_CAPACITY__			}_			else {_				newCapacity += CAPACITY_THRESHOLD__			}_			return newCapacity__		}_		else {_			int newCapacity = 64__			while (newCapacity < neededCapacity) {_				newCapacity <<= 1__			}_			return Math.min(newCapacity, MAX_CAPACITY)__		}_	};see,io,netty,buffer,abstract,byte,buf,allocator,calculate,new,capacity,int,int;private,int,calculate,capacity,int,needed,capacity,assert,is,true,needed,capacity,0,needed,capacity,must,0,if,needed,capacity,return,else,if,needed,capacity,int,new,capacity,needed,capacity,if,new,capacity,new,capacity,else,new,capacity,return,new,capacity,else,int,new,capacity,64,while,new,capacity,needed,capacity,new,capacity,1,return,math,min,new,capacity
DefaultDataBuffer -> private int calculateCapacity(int neededCapacity);1517583561;@see io.netty.buffer.AbstractByteBufAllocator#calculateNewCapacity(int, int);private int calculateCapacity(int neededCapacity) {_		Assert.isTrue(neededCapacity >= 0, "'neededCapacity' must >= 0")___		if (neededCapacity == CAPACITY_THRESHOLD) {_			return CAPACITY_THRESHOLD__		}_		else if (neededCapacity > CAPACITY_THRESHOLD) {_			int newCapacity = neededCapacity / CAPACITY_THRESHOLD * CAPACITY_THRESHOLD__			if (newCapacity > MAX_CAPACITY - CAPACITY_THRESHOLD) {_				newCapacity = MAX_CAPACITY__			}_			else {_				newCapacity += CAPACITY_THRESHOLD__			}_			return newCapacity__		}_		else {_			int newCapacity = 64__			while (newCapacity < neededCapacity) {_				newCapacity <<= 1__			}_			return Math.min(newCapacity, MAX_CAPACITY)__		}_	};see,io,netty,buffer,abstract,byte,buf,allocator,calculate,new,capacity,int,int;private,int,calculate,capacity,int,needed,capacity,assert,is,true,needed,capacity,0,needed,capacity,must,0,if,needed,capacity,return,else,if,needed,capacity,int,new,capacity,needed,capacity,if,new,capacity,new,capacity,else,new,capacity,return,new,capacity,else,int,new,capacity,64,while,new,capacity,needed,capacity,new,capacity,1,return,math,min,new,capacity
DefaultDataBuffer -> private int calculateCapacity(int neededCapacity);1518081113;@see io.netty.buffer.AbstractByteBufAllocator#calculateNewCapacity(int, int);private int calculateCapacity(int neededCapacity) {_		Assert.isTrue(neededCapacity >= 0, "'neededCapacity' must >= 0")___		if (neededCapacity == CAPACITY_THRESHOLD) {_			return CAPACITY_THRESHOLD__		}_		else if (neededCapacity > CAPACITY_THRESHOLD) {_			int newCapacity = neededCapacity / CAPACITY_THRESHOLD * CAPACITY_THRESHOLD__			if (newCapacity > MAX_CAPACITY - CAPACITY_THRESHOLD) {_				newCapacity = MAX_CAPACITY__			}_			else {_				newCapacity += CAPACITY_THRESHOLD__			}_			return newCapacity__		}_		else {_			int newCapacity = 64__			while (newCapacity < neededCapacity) {_				newCapacity <<= 1__			}_			return Math.min(newCapacity, MAX_CAPACITY)__		}_	};see,io,netty,buffer,abstract,byte,buf,allocator,calculate,new,capacity,int,int;private,int,calculate,capacity,int,needed,capacity,assert,is,true,needed,capacity,0,needed,capacity,must,0,if,needed,capacity,return,else,if,needed,capacity,int,new,capacity,needed,capacity,if,new,capacity,new,capacity,else,new,capacity,return,new,capacity,else,int,new,capacity,64,while,new,capacity,needed,capacity,new,capacity,1,return,math,min,new,capacity
DefaultDataBuffer -> private int calculateCapacity(int neededCapacity);1530174524;Calculate the capacity of the buffer._@see io.netty.buffer.AbstractByteBufAllocator#calculateNewCapacity(int, int);private int calculateCapacity(int neededCapacity) {_		Assert.isTrue(neededCapacity >= 0, "'neededCapacity' must >= 0")___		if (neededCapacity == CAPACITY_THRESHOLD) {_			return CAPACITY_THRESHOLD__		}_		else if (neededCapacity > CAPACITY_THRESHOLD) {_			int newCapacity = neededCapacity / CAPACITY_THRESHOLD * CAPACITY_THRESHOLD__			if (newCapacity > MAX_CAPACITY - CAPACITY_THRESHOLD) {_				newCapacity = MAX_CAPACITY__			}_			else {_				newCapacity += CAPACITY_THRESHOLD__			}_			return newCapacity__		}_		else {_			int newCapacity = 64__			while (newCapacity < neededCapacity) {_				newCapacity <<= 1__			}_			return Math.min(newCapacity, MAX_CAPACITY)__		}_	};calculate,the,capacity,of,the,buffer,see,io,netty,buffer,abstract,byte,buf,allocator,calculate,new,capacity,int,int;private,int,calculate,capacity,int,needed,capacity,assert,is,true,needed,capacity,0,needed,capacity,must,0,if,needed,capacity,return,else,if,needed,capacity,int,new,capacity,needed,capacity,if,new,capacity,new,capacity,else,new,capacity,return,new,capacity,else,int,new,capacity,64,while,new,capacity,needed,capacity,new,capacity,1,return,math,min,new,capacity
DefaultDataBuffer -> private int calculateCapacity(int neededCapacity);1530190293;Calculate the capacity of the buffer._@see io.netty.buffer.AbstractByteBufAllocator#calculateNewCapacity(int, int);private int calculateCapacity(int neededCapacity) {_		Assert.isTrue(neededCapacity >= 0, "'neededCapacity' must >= 0")___		if (neededCapacity == CAPACITY_THRESHOLD) {_			return CAPACITY_THRESHOLD__		}_		else if (neededCapacity > CAPACITY_THRESHOLD) {_			int newCapacity = neededCapacity / CAPACITY_THRESHOLD * CAPACITY_THRESHOLD__			if (newCapacity > MAX_CAPACITY - CAPACITY_THRESHOLD) {_				newCapacity = MAX_CAPACITY__			}_			else {_				newCapacity += CAPACITY_THRESHOLD__			}_			return newCapacity__		}_		else {_			int newCapacity = 64__			while (newCapacity < neededCapacity) {_				newCapacity <<= 1__			}_			return Math.min(newCapacity, MAX_CAPACITY)__		}_	};calculate,the,capacity,of,the,buffer,see,io,netty,buffer,abstract,byte,buf,allocator,calculate,new,capacity,int,int;private,int,calculate,capacity,int,needed,capacity,assert,is,true,needed,capacity,0,needed,capacity,must,0,if,needed,capacity,return,else,if,needed,capacity,int,new,capacity,needed,capacity,if,new,capacity,new,capacity,else,new,capacity,return,new,capacity,else,int,new,capacity,64,while,new,capacity,needed,capacity,new,capacity,1,return,math,min,new,capacity
DefaultDataBuffer -> private int calculateCapacity(int neededCapacity);1536847933;Calculate the capacity of the buffer._@see io.netty.buffer.AbstractByteBufAllocator#calculateNewCapacity(int, int);private int calculateCapacity(int neededCapacity) {_		Assert.isTrue(neededCapacity >= 0, "'neededCapacity' must >= 0")___		if (neededCapacity == CAPACITY_THRESHOLD) {_			return CAPACITY_THRESHOLD__		}_		else if (neededCapacity > CAPACITY_THRESHOLD) {_			int newCapacity = neededCapacity / CAPACITY_THRESHOLD * CAPACITY_THRESHOLD__			if (newCapacity > MAX_CAPACITY - CAPACITY_THRESHOLD) {_				newCapacity = MAX_CAPACITY__			}_			else {_				newCapacity += CAPACITY_THRESHOLD__			}_			return newCapacity__		}_		else {_			int newCapacity = 64__			while (newCapacity < neededCapacity) {_				newCapacity <<= 1__			}_			return Math.min(newCapacity, MAX_CAPACITY)__		}_	};calculate,the,capacity,of,the,buffer,see,io,netty,buffer,abstract,byte,buf,allocator,calculate,new,capacity,int,int;private,int,calculate,capacity,int,needed,capacity,assert,is,true,needed,capacity,0,needed,capacity,must,0,if,needed,capacity,return,else,if,needed,capacity,int,new,capacity,needed,capacity,if,new,capacity,new,capacity,else,new,capacity,return,new,capacity,else,int,new,capacity,64,while,new,capacity,needed,capacity,new,capacity,1,return,math,min,new,capacity
DefaultDataBuffer -> private int calculateCapacity(int neededCapacity);1544108037;Calculate the capacity of the buffer._@see io.netty.buffer.AbstractByteBufAllocator#calculateNewCapacity(int, int);private int calculateCapacity(int neededCapacity) {_		Assert.isTrue(neededCapacity >= 0, "'neededCapacity' must >= 0")___		if (neededCapacity == CAPACITY_THRESHOLD) {_			return CAPACITY_THRESHOLD__		}_		else if (neededCapacity > CAPACITY_THRESHOLD) {_			int newCapacity = neededCapacity / CAPACITY_THRESHOLD * CAPACITY_THRESHOLD__			if (newCapacity > MAX_CAPACITY - CAPACITY_THRESHOLD) {_				newCapacity = MAX_CAPACITY__			}_			else {_				newCapacity += CAPACITY_THRESHOLD__			}_			return newCapacity__		}_		else {_			int newCapacity = 64__			while (newCapacity < neededCapacity) {_				newCapacity <<= 1__			}_			return Math.min(newCapacity, MAX_CAPACITY)__		}_	};calculate,the,capacity,of,the,buffer,see,io,netty,buffer,abstract,byte,buf,allocator,calculate,new,capacity,int,int;private,int,calculate,capacity,int,needed,capacity,assert,is,true,needed,capacity,0,needed,capacity,must,0,if,needed,capacity,return,else,if,needed,capacity,int,new,capacity,needed,capacity,if,new,capacity,new,capacity,else,new,capacity,return,new,capacity,else,int,new,capacity,64,while,new,capacity,needed,capacity,new,capacity,1,return,math,min,new,capacity
DefaultDataBuffer -> private int calculateCapacity(int neededCapacity);1545338013;Calculate the capacity of the buffer._@see io.netty.buffer.AbstractByteBufAllocator#calculateNewCapacity(int, int);private int calculateCapacity(int neededCapacity) {_		Assert.isTrue(neededCapacity >= 0, "'neededCapacity' must >= 0")___		if (neededCapacity == CAPACITY_THRESHOLD) {_			return CAPACITY_THRESHOLD__		}_		else if (neededCapacity > CAPACITY_THRESHOLD) {_			int newCapacity = neededCapacity / CAPACITY_THRESHOLD * CAPACITY_THRESHOLD__			if (newCapacity > MAX_CAPACITY - CAPACITY_THRESHOLD) {_				newCapacity = MAX_CAPACITY__			}_			else {_				newCapacity += CAPACITY_THRESHOLD__			}_			return newCapacity__		}_		else {_			int newCapacity = 64__			while (newCapacity < neededCapacity) {_				newCapacity <<= 1__			}_			return Math.min(newCapacity, MAX_CAPACITY)__		}_	};calculate,the,capacity,of,the,buffer,see,io,netty,buffer,abstract,byte,buf,allocator,calculate,new,capacity,int,int;private,int,calculate,capacity,int,needed,capacity,assert,is,true,needed,capacity,0,needed,capacity,must,0,if,needed,capacity,return,else,if,needed,capacity,int,new,capacity,needed,capacity,if,new,capacity,new,capacity,else,new,capacity,return,new,capacity,else,int,new,capacity,64,while,new,capacity,needed,capacity,new,capacity,1,return,math,min,new,capacity
DefaultDataBuffer -> private int calculateCapacity(int neededCapacity);1547033218;Calculate the capacity of the buffer._@see io.netty.buffer.AbstractByteBufAllocator#calculateNewCapacity(int, int);private int calculateCapacity(int neededCapacity) {_		Assert.isTrue(neededCapacity >= 0, "'neededCapacity' must >= 0")___		if (neededCapacity == CAPACITY_THRESHOLD) {_			return CAPACITY_THRESHOLD__		}_		else if (neededCapacity > CAPACITY_THRESHOLD) {_			int newCapacity = neededCapacity / CAPACITY_THRESHOLD * CAPACITY_THRESHOLD__			if (newCapacity > MAX_CAPACITY - CAPACITY_THRESHOLD) {_				newCapacity = MAX_CAPACITY__			}_			else {_				newCapacity += CAPACITY_THRESHOLD__			}_			return newCapacity__		}_		else {_			int newCapacity = 64__			while (newCapacity < neededCapacity) {_				newCapacity <<= 1__			}_			return Math.min(newCapacity, MAX_CAPACITY)__		}_	};calculate,the,capacity,of,the,buffer,see,io,netty,buffer,abstract,byte,buf,allocator,calculate,new,capacity,int,int;private,int,calculate,capacity,int,needed,capacity,assert,is,true,needed,capacity,0,needed,capacity,must,0,if,needed,capacity,return,else,if,needed,capacity,int,new,capacity,needed,capacity,if,new,capacity,new,capacity,else,new,capacity,return,new,capacity,else,int,new,capacity,64,while,new,capacity,needed,capacity,new,capacity,1,return,math,min,new,capacity
DefaultDataBuffer -> private <T> T readInternal(Function<ByteBuffer, T> function);1468513830;Internal read method that keeps track of the {@link #readPosition} before and after_applying the given function on {@link #byteBuffer}.;private <T> T readInternal(Function<ByteBuffer, T> function) {_		this.byteBuffer.position(this.readPosition)__		try {_			return function.apply(this.byteBuffer)__		}_		finally {_			this.readPosition = this.byteBuffer.position()__		}_	};internal,read,method,that,keeps,track,of,the,link,read,position,before,and,after,applying,the,given,function,on,link,byte,buffer;private,t,t,read,internal,function,byte,buffer,t,function,this,byte,buffer,position,this,read,position,try,return,function,apply,this,byte,buffer,finally,this,read,position,this,byte,buffer,position
DefaultDataBuffer -> private <T> T readInternal(Function<ByteBuffer, T> function);1468532417;Internal read method that keeps track of the {@link #readPosition} before and after_applying the given function on {@link #byteBuffer}.;private <T> T readInternal(Function<ByteBuffer, T> function) {_		this.byteBuffer.position(this.readPosition)__		try {_			return function.apply(this.byteBuffer)__		}_		finally {_			this.readPosition = this.byteBuffer.position()__		}_	};internal,read,method,that,keeps,track,of,the,link,read,position,before,and,after,applying,the,given,function,on,link,byte,buffer;private,t,t,read,internal,function,byte,buffer,t,function,this,byte,buffer,position,this,read,position,try,return,function,apply,this,byte,buffer,finally,this,read,position,this,byte,buffer,position
DefaultDataBuffer -> private <T> T readInternal(Function<ByteBuffer, T> function);1468868355;Internal read method that keeps track of the {@link #readPosition} before and after_applying the given function on {@link #byteBuffer}.;private <T> T readInternal(Function<ByteBuffer, T> function) {_		this.byteBuffer.position(this.readPosition)__		try {_			return function.apply(this.byteBuffer)__		}_		finally {_			this.readPosition = this.byteBuffer.position()__		}_	};internal,read,method,that,keeps,track,of,the,link,read,position,before,and,after,applying,the,given,function,on,link,byte,buffer;private,t,t,read,internal,function,byte,buffer,t,function,this,byte,buffer,position,this,read,position,try,return,function,apply,this,byte,buffer,finally,this,read,position,this,byte,buffer,position
DefaultDataBuffer -> private <T> T readInternal(Function<ByteBuffer, T> function);1469540372;Internal read method that keeps track of the {@link #readPosition} before and after_applying the given function on {@link #byteBuffer}.;private <T> T readInternal(Function<ByteBuffer, T> function) {_		this.byteBuffer.position(this.readPosition)__		try {_			return function.apply(this.byteBuffer)__		}_		finally {_			this.readPosition = this.byteBuffer.position()__		}_	};internal,read,method,that,keeps,track,of,the,link,read,position,before,and,after,applying,the,given,function,on,link,byte,buffer;private,t,t,read,internal,function,byte,buffer,t,function,this,byte,buffer,position,this,read,position,try,return,function,apply,this,byte,buffer,finally,this,read,position,this,byte,buffer,position
DefaultDataBuffer -> private <T> T readInternal(Function<ByteBuffer, T> function);1475619006;Internal read method that keeps track of the {@link #readPosition} before and after_applying the given function on {@link #byteBuffer}.;private <T> T readInternal(Function<ByteBuffer, T> function) {_		_		((Buffer) this.byteBuffer).position(this.readPosition)__		try {_			return function.apply(this.byteBuffer)__		}_		finally {_			this.readPosition = this.byteBuffer.position()__		}_	};internal,read,method,that,keeps,track,of,the,link,read,position,before,and,after,applying,the,given,function,on,link,byte,buffer;private,t,t,read,internal,function,byte,buffer,t,function,buffer,this,byte,buffer,position,this,read,position,try,return,function,apply,this,byte,buffer,finally,this,read,position,this,byte,buffer,position
DefaultDataBuffer -> private <T> T readInternal(Function<ByteBuffer, T> function);1476791288;Internal read method that keeps track of the {@link #readPosition} before and after_applying the given function on {@link #byteBuffer}.;private <T> T readInternal(Function<ByteBuffer, T> function) {_		_		((Buffer) this.byteBuffer).position(this.readPosition)__		try {_			return function.apply(this.byteBuffer)__		}_		finally {_			this.readPosition = this.byteBuffer.position()__		}_	};internal,read,method,that,keeps,track,of,the,link,read,position,before,and,after,applying,the,given,function,on,link,byte,buffer;private,t,t,read,internal,function,byte,buffer,t,function,buffer,this,byte,buffer,position,this,read,position,try,return,function,apply,this,byte,buffer,finally,this,read,position,this,byte,buffer,position
DefaultDataBuffer -> private <T> T readInternal(Function<ByteBuffer, T> function);1497258259;Internal read method that keeps track of the {@link #readPosition} before and after_applying the given function on {@link #byteBuffer}.;private <T> T readInternal(Function<ByteBuffer, T> function) {_		_		((Buffer) this.byteBuffer).position(this.readPosition)__		try {_			return function.apply(this.byteBuffer)__		}_		finally {_			this.readPosition = this.byteBuffer.position()__		}_	};internal,read,method,that,keeps,track,of,the,link,read,position,before,and,after,applying,the,given,function,on,link,byte,buffer;private,t,t,read,internal,function,byte,buffer,t,function,buffer,this,byte,buffer,position,this,read,position,try,return,function,apply,this,byte,buffer,finally,this,read,position,this,byte,buffer,position
DefaultDataBuffer -> private <T> T readInternal(Function<ByteBuffer, T> function);1498512148;Internal read method that keeps track of the {@link #readPosition} before and after_applying the given function on {@link #byteBuffer}.;private <T> T readInternal(Function<ByteBuffer, T> function) {_		_		((Buffer) this.byteBuffer).position(this.readPosition)__		try {_			return function.apply(this.byteBuffer)__		}_		finally {_			this.readPosition = this.byteBuffer.position()__		}_	};internal,read,method,that,keeps,track,of,the,link,read,position,before,and,after,applying,the,given,function,on,link,byte,buffer;private,t,t,read,internal,function,byte,buffer,t,function,buffer,this,byte,buffer,position,this,read,position,try,return,function,apply,this,byte,buffer,finally,this,read,position,this,byte,buffer,position
