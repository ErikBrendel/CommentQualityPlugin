# id;timestamp;commentText;codeText;commentWords;codeWords
AbstractStaxHandler -> protected QName toQName(String namespaceUri, String qualifiedName);1395777538;Convert a namespace URI and DOM or SAX qualified name to a {@code QName}. The_qualified name can have the form {@code prefix:localname} or {@code localName}._@param namespaceUri the namespace URI_@param qualifiedName the qualified name_@return a QName;protected QName toQName(String namespaceUri, String qualifiedName) {_		int idx = qualifiedName.indexOf(':')__		if (idx == -1) {_			return new QName(namespaceUri, qualifiedName)__		}_		else {_			String prefix = qualifiedName.substring(0, idx)__			String localPart = qualifiedName.substring(idx + 1)__			return new QName(namespaceUri, localPart, prefix)__		}_	};convert,a,namespace,uri,and,dom,or,sax,qualified,name,to,a,code,qname,the,qualified,name,can,have,the,form,code,prefix,localname,or,code,local,name,param,namespace,uri,the,namespace,uri,param,qualified,name,the,qualified,name,return,a,qname;protected,qname,to,qname,string,namespace,uri,string,qualified,name,int,idx,qualified,name,index,of,if,idx,1,return,new,qname,namespace,uri,qualified,name,else,string,prefix,qualified,name,substring,0,idx,string,local,part,qualified,name,substring,idx,1,return,new,qname,namespace,uri,local,part,prefix
AbstractStaxHandler -> protected QName toQName(String namespaceUri, String qualifiedName);1467730834;Convert a namespace URI and DOM or SAX qualified name to a {@code QName}. The_qualified name can have the form {@code prefix:localname} or {@code localName}._@param namespaceUri the namespace URI_@param qualifiedName the qualified name_@return a QName;protected QName toQName(String namespaceUri, String qualifiedName) {_		int idx = qualifiedName.indexOf(':')__		if (idx == -1) {_			return new QName(namespaceUri, qualifiedName)__		}_		else {_			String prefix = qualifiedName.substring(0, idx)__			String localPart = qualifiedName.substring(idx + 1)__			return new QName(namespaceUri, localPart, prefix)__		}_	};convert,a,namespace,uri,and,dom,or,sax,qualified,name,to,a,code,qname,the,qualified,name,can,have,the,form,code,prefix,localname,or,code,local,name,param,namespace,uri,the,namespace,uri,param,qualified,name,the,qualified,name,return,a,qname;protected,qname,to,qname,string,namespace,uri,string,qualified,name,int,idx,qualified,name,index,of,if,idx,1,return,new,qname,namespace,uri,qualified,name,else,string,prefix,qualified,name,substring,0,idx,string,local,part,qualified,name,substring,idx,1,return,new,qname,namespace,uri,local,part,prefix
AbstractStaxHandler -> protected QName toQName(String namespaceUri, String qualifiedName);1487760984;Convert a namespace URI and DOM or SAX qualified name to a {@code QName}. The_qualified name can have the form {@code prefix:localname} or {@code localName}._@param namespaceUri the namespace URI_@param qualifiedName the qualified name_@return a QName;protected QName toQName(String namespaceUri, String qualifiedName) {_		int idx = qualifiedName.indexOf(':')__		if (idx == -1) {_			return new QName(namespaceUri, qualifiedName)__		}_		else {_			String prefix = qualifiedName.substring(0, idx)__			String localPart = qualifiedName.substring(idx + 1)__			return new QName(namespaceUri, localPart, prefix)__		}_	};convert,a,namespace,uri,and,dom,or,sax,qualified,name,to,a,code,qname,the,qualified,name,can,have,the,form,code,prefix,localname,or,code,local,name,param,namespace,uri,the,namespace,uri,param,qualified,name,the,qualified,name,return,a,qname;protected,qname,to,qname,string,namespace,uri,string,qualified,name,int,idx,qualified,name,index,of,if,idx,1,return,new,qname,namespace,uri,qualified,name,else,string,prefix,qualified,name,substring,0,idx,string,local,part,qualified,name,substring,idx,1,return,new,qname,namespace,uri,local,part,prefix
AbstractStaxHandler -> protected QName toQName(String namespaceUri, String qualifiedName);1496837955;Convert a namespace URI and DOM or SAX qualified name to a {@code QName}. The_qualified name can have the form {@code prefix:localname} or {@code localName}._@param namespaceUri the namespace URI_@param qualifiedName the qualified name_@return a QName;protected QName toQName(String namespaceUri, String qualifiedName) {_		int idx = qualifiedName.indexOf(':')__		if (idx == -1) {_			return new QName(namespaceUri, qualifiedName)__		}_		else {_			String prefix = qualifiedName.substring(0, idx)__			String localPart = qualifiedName.substring(idx + 1)__			return new QName(namespaceUri, localPart, prefix)__		}_	};convert,a,namespace,uri,and,dom,or,sax,qualified,name,to,a,code,qname,the,qualified,name,can,have,the,form,code,prefix,localname,or,code,local,name,param,namespace,uri,the,namespace,uri,param,qualified,name,the,qualified,name,return,a,qname;protected,qname,to,qname,string,namespace,uri,string,qualified,name,int,idx,qualified,name,index,of,if,idx,1,return,new,qname,namespace,uri,qualified,name,else,string,prefix,qualified,name,substring,0,idx,string,local,part,qualified,name,substring,idx,1,return,new,qname,namespace,uri,local,part,prefix
AbstractStaxHandler -> protected QName toQName(String namespaceUri, String qualifiedName);1519560860;Convert a namespace URI and DOM or SAX qualified name to a {@code QName}. The_qualified name can have the form {@code prefix:localname} or {@code localName}._@param namespaceUri the namespace URI_@param qualifiedName the qualified name_@return a QName;protected QName toQName(String namespaceUri, String qualifiedName) {_		int idx = qualifiedName.indexOf(':')__		if (idx == -1) {_			return new QName(namespaceUri, qualifiedName)__		}_		else {_			String prefix = qualifiedName.substring(0, idx)__			String localPart = qualifiedName.substring(idx + 1)__			return new QName(namespaceUri, localPart, prefix)__		}_	};convert,a,namespace,uri,and,dom,or,sax,qualified,name,to,a,code,qname,the,qualified,name,can,have,the,form,code,prefix,localname,or,code,local,name,param,namespace,uri,the,namespace,uri,param,qualified,name,the,qualified,name,return,a,qname;protected,qname,to,qname,string,namespace,uri,string,qualified,name,int,idx,qualified,name,index,of,if,idx,1,return,new,qname,namespace,uri,qualified,name,else,string,prefix,qualified,name,substring,0,idx,string,local,part,qualified,name,substring,idx,1,return,new,qname,namespace,uri,local,part,prefix
